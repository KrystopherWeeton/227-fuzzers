; ModuleID = '../../third_party/swiftshader/src/OpenGL/compiler/OutputASM.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/compiler/OutputASM.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.glsl::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string.4", i32, i32, %"class.std::__1::vector.12" }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.glsl::ShaderVariable"* }
%class.TType = type { i8, i8, i8, i8, i8, i8, i32, i32, %class.TType*, %class.TInterfaceBlock*, %struct.TLayoutQualifier, %class.TStructure*, %"class.std::__1::basic_string"* }
%class.TInterfaceBlock = type <{ %class.TFieldListCollection, %"class.std::__1::basic_string"*, i32, i32, i32, [4 x i8] }>
%class.TFieldListCollection = type { i32 (...)**, %"class.std::__1::basic_string"*, %class.TVector*, %"class.std::__1::basic_string", i64 }
%class.TVector = type { %"class.std::__1::vector.19" }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %class.TField**, %class.TField**, %"class.std::__1::__compressed_pair.21" }
%class.TField = type { %class.TType*, %"class.std::__1::basic_string"*, %struct.TSourceLoc }
%struct.TSourceLoc = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.TField** }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.pool_allocator.24 }
%class.pool_allocator.24 = type { %class.TPoolAllocator* }
%class.TPoolAllocator = type { i64, i64, i64, i64, i64, %"struct.TPoolAllocator::tHeader"*, %"struct.TPoolAllocator::tHeader"*, %"class.std::__1::vector", i32, i64 }
%"struct.TPoolAllocator::tHeader" = type { %"struct.TPoolAllocator::tHeader"*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"*, %"class.std::__1::__compressed_pair.1" }
%"struct.TPoolAllocator::tAllocState" = type { i64, %"struct.TPoolAllocator::tHeader"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.TPoolAllocator::tAllocState"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::__compressed_pair_elem.0" = type { %class.pool_allocator }
%class.pool_allocator = type { %class.TPoolAllocator* }
%struct.TLayoutQualifier = type { i32, i32, i32 }
%class.TStructure = type <{ %class.TFieldListCollection, i32, i32, i8, [7 x i8] }>
%"struct.glsl::Uniform" = type <{ %"struct.glsl::ShaderVariable", i32, %"struct.glsl::BlockMemberInfo", [4 x i8] }>
%"struct.glsl::BlockMemberInfo" = type <{ i32, i32, i32, i8, [3 x i8] }>
%"struct.glsl::UniformBlock" = type { %"class.std::__1::basic_string.4", i32, i32, i32, i8, %"class.std::__1::vector.25", i32, i32 }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { i32*, i32*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i32* }
%"class.glsl::Std140BlockEncoder" = type { %"class.glsl::BlockLayoutEncoder" }
%"class.glsl::BlockLayoutEncoder" = type { i32 (...)**, i64 }
%"struct.glsl::Attribute" = type <{ i32, [4 x i8], %"class.std::__1::basic_string.4", i32, i32, i32, [4 x i8] }>
%"struct.glsl::OutputASM::TextureFunction" = type <{ i32, i8, i8, [2 x i8] }>
%"class.glsl::OutputASM" = type { %class.TIntermTraverser, %"class.glsl::Shader"*, %"class.sw::Shader"*, %"class.sw::PixelShader"*, %"class.sw::VertexShader"*, %"class.std::__1::vector.90", %"class.std::__1::vector.90", %"class.std::__1::vector.90", %"class.std::__1::vector.90", %"class.std::__1::vector.90", %"class.std::__1::vector.90", %"class.std::__1::vector.97", i32, i32, i32, %"class.std::__1::vector.111", i8, %"class.std::__1::set", %class.TParseContext* }
%class.TIntermTraverser = type { i32 (...)**, i8, i8, i8, i8, i32, %class.TVector.76, %"class.std::__1::vector.83" }
%class.TVector.76 = type { %"class.std::__1::vector.77" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %class.TIntermNode**, %class.TIntermNode**, %"class.std::__1::__compressed_pair.79" }
%class.TIntermNode = type { i32 (...)**, %struct.TSourceLoc }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80", %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %class.TIntermNode** }
%"struct.std::__1::__compressed_pair_elem.81" = type { %class.pool_allocator.82 }
%class.pool_allocator.82 = type { %class.TPoolAllocator* }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.85" }
%"struct.TIntermTraverser::ParentBlock" = type { %class.TIntermAggregate*, i64 }
%class.TIntermAggregate = type <{ %class.TIntermOperator.base, [4 x i8], %class.TVector.76, %"class.std::__1::basic_string", i8, i8, i8, i8, %struct.TSourceLoc, [4 x i8] }>
%class.TIntermOperator.base = type <{ %class.TIntermTyped, i32 }>
%class.TIntermTyped = type { %class.TIntermNode, %class.TType }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.TIntermTraverser::ParentBlock"* }
%"class.sw::Shader" = type <{ i32 (...)**, i32, i32, i32, i8, i8, i8, i8, %"struct.sw::Shader::Limits", i32, %union.anon.32, [2 x i8], %"class.std::__1::vector.34", i16, [2 x i8], i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.sw::Shader::Limits" = type { i32, i32, i32, i32 }
%union.anon.32 = type { i16 }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"**, %"class.std::__1::__compressed_pair.45" }
%"struct.sw::Shader::Instruction" = type <{ i32 (...)**, i32, %union.anon.36, i8, i8, i8, i8, i32, i32, i8, [3 x i8], %"struct.sw::Shader::DestinationParameter", [5 x %"struct.sw::Shader::SourceParameter"], %union.anon.43, [4 x i8] }>
%union.anon.36 = type { i32 }
%"struct.sw::Shader::DestinationParameter" = type { %"struct.sw::Shader::Parameter.base", %union.anon.41, i8, i8 }
%"struct.sw::Shader::Parameter.base" = type <{ %union.anon.38, i8 }>
%union.anon.38 = type { %struct.anon.39 }
%struct.anon.39 = type { i32, %"struct.sw::Shader::Relative" }
%"struct.sw::Shader::Relative" = type { i8, i32, i8, i32, i8 }
%union.anon.41 = type { i8 }
%"struct.sw::Shader::SourceParameter" = type { %"struct.sw::Shader::Parameter.base", [3 x i8] }
%union.anon.43 = type { i32 }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.sw::Shader::Instruction"** }
%"class.sw::PixelShader" = type { %"class.sw::Shader.base", [32 x [4 x %"struct.sw::Shader::Semantic"]], i8, i8, i8, i8, i8, [6 x i8] }
%"class.sw::Shader.base" = type <{ i32 (...)**, i32, i32, i32, i8, i8, i8, i8, %"struct.sw::Shader::Limits", i32, %union.anon.32, [2 x i8], %"class.std::__1::vector.34", i16, [2 x i8], i32, i8, i8, i8, i8, i8 }>
%"struct.sw::Shader::Semantic" = type { i8, i8, i8, i8 }
%"class.sw::VertexShader" = type <{ %"class.sw::Shader.base", [32 x %"struct.sw::Shader::Semantic"], [34 x [4 x %"struct.sw::Shader::Semantic"]], [32 x i8], [3 x i8], i32, i32, i8, i8, i8, [5 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %class.TIntermTyped**, %class.TIntermTyped**, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %class.TIntermTyped** }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"class.std::__1::map"*, %"class.std::__1::map"*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.std::__1::map"* }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %"struct.glsl::Function"*, %"struct.glsl::Function"*, %"class.std::__1::__compressed_pair.113" }
%"struct.glsl::Function" = type { i32, %"class.std::__1::basic_string", %class.TVector.76*, %class.TIntermTyped* }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.glsl::Function"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.118" }
%"class.std::__1::__tree.118" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%class.TParseContext = type <{ %class.TIntermediate*, %class.TSymbolTable*, i32, [4 x i8], i8*, i8, i8, i8, i8, i32, i32, [4 x i8], %class.TIntermNode*, i32, i32, i32, [4 x i8], %class.TType*, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.TDiagnostics, %class.TDirectiveHandler, %"class.pp::Preprocessor", i8*, i8, i8, [6 x i8] }>
%class.TIntermediate = type { %class.TInfoSink* }
%class.TInfoSink = type { %class.TInfoSinkBase, %class.TInfoSinkBase, %class.TInfoSinkBase }
%class.TInfoSinkBase = type { %"class.std::__1::basic_string.4" }
%class.TSymbolTable = type <{ %"class.std::__1::vector.125", %"class.std::__1::vector.142", %"class.std::__1::set.160", %"class.std::__1::set.160", i8, [7 x i8] }>
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %class.TSymbolTableLevel**, %class.TSymbolTableLevel**, %"class.std::__1::__compressed_pair.137" }
%class.TSymbolTableLevel = type { %class.TMap }
%class.TMap = type { %"class.std::__1::map.127" }
%"class.std::__1::map.127" = type { %"class.std::__1::__tree.128" }
%"class.std::__1::__tree.128" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.100", %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.pool_allocator.131 }
%class.pool_allocator.131 = type { %class.TPoolAllocator* }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %class.TSymbolTableLevel** }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"class.std::__1::map.144"*, %"class.std::__1::map.144"*, %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::map.144" = type { %"class.std::__1::__tree.145" }
%"class.std::__1::__tree.145" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.146", %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.std::__1::map.144"* }
%"class.std::__1::set.160" = type { %"class.std::__1::__tree.161" }
%"class.std::__1::__tree.161" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.162", %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%class.TDiagnostics = type <{ %"class.pp::Diagnostics", i32, [4 x i8], %class.TInfoSink*, i32, i32, i32, [4 x i8] }>
%"class.pp::Diagnostics" = type { i32 (...)** }
%class.TDirectiveHandler = type { %"class.pp::DirectiveHandler", %struct.TPragma, %"class.std::__1::map.170"*, %class.TDiagnostics*, i32* }
%"class.pp::DirectiveHandler" = type { i32 (...)** }
%struct.TPragma = type { i8, i8 }
%"class.std::__1::map.170" = type { %"class.std::__1::__tree.171" }
%"class.std::__1::__tree.171" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.pp::Preprocessor" = type { %"struct.pp::PreprocessorImpl"* }
%"struct.pp::PreprocessorImpl" = type opaque
%"class.glsl::Shader" = type <{ i32 (...)**, %"class.std::__1::list", %"class.std::__1::vector.55", %"class.std::__1::vector.55", %"class.std::__1::vector.62", %"class.std::__1::vector.69", i32, [4 x i8] }>
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.50" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.glsl::Uniform"* }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"*, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.glsl::Attribute"* }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"*, %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.glsl::UniformBlock"* }
%"struct.glsl::OutputASM::LoopInfo" = type { i32, %class.TIntermSymbol*, i32, i32, i32, i32 }
%class.TIntermSymbol = type { %class.TIntermTyped, i32, %"class.std::__1::basic_string" }
%class.TIntermLoop = type <{ %class.TIntermNode, i32, [4 x i8], %class.TIntermNode*, %class.TIntermTyped*, %class.TIntermTyped*, %class.TIntermNode*, i8, [7 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"*, %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.std::__1::allocator.17"* }
%"class.std::__1::allocator.17" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.8 }
%struct.anon.8 = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer.191" = type { %"struct.glsl::Function"*, %"struct.glsl::Function"*, %"struct.glsl::Function"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.114", %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::allocator.116"* }
%"class.std::__1::allocator.116" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.glsl::Temporary" = type { %class.TIntermSymbol, %"class.glsl::OutputASM"* }
%class.TIntermBinary = type { %class.TIntermOperator.base, %class.TIntermTyped*, %class.TIntermTyped* }
%class.TIntermConstantUnion = type { %class.TIntermTyped, %class.ConstantUnion* }
%class.ConstantUnion = type <{ %union.anon.180, i8, [3 x i8] }>
%union.anon.180 = type { i32 }
%class.TIntermUnary = type { %class.TIntermOperator.base, %class.TIntermTyped* }
%"class.glsl::Constant" = type { %class.TIntermConstantUnion, [4 x %class.ConstantUnion] }
%class.TIntermSelection = type { %class.TIntermTyped, %class.TIntermTyped*, %class.TIntermNode*, %class.TIntermNode* }
%class.TIntermBranch = type { %class.TIntermNode, i32, %class.TIntermTyped* }
%class.TIntermSwitch = type { %class.TIntermNode, %class.TIntermTyped*, %class.TIntermAggregate* }
%class.TIntermCase = type { %class.TIntermNode, %class.TIntermTyped* }
%"struct.glsl::OutputASM::ArgumentInfo" = type { %"struct.glsl::OutputASM::TypedMemberInfo", i32, i32 }
%"struct.glsl::OutputASM::TypedMemberInfo" = type { %"struct.glsl::BlockMemberInfo.base", %class.TType }
%"struct.glsl::BlockMemberInfo.base" = type <{ i32, i32, i32, i8 }>
%"class.std::__1::__tree_node.200" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.185" }
%"struct.std::__1::pair.185" = type { i32, %"struct.glsl::OutputASM::TypedMemberInfo" }
%"struct.std::__1::__split_buffer.208" = type { %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"*, %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.65", %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.std::__1::allocator.67"* }
%"class.std::__1::allocator.67" = type { i8 }
%"struct.glsl::Varying" = type { %"struct.glsl::ShaderVariable", i8, i32 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.glsl::Varying" }
%"struct.std::__1::__split_buffer.222" = type { %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"*, %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.58", %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.std::__1::allocator.60"* }
%"class.std::__1::allocator.60" = type { i8 }
%"struct.std::__1::__split_buffer.228" = type { %"class.std::__1::map"*, %"class.std::__1::map"*, %"class.std::__1::map"*, %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.107", %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.std::__1::allocator.109"* }
%"class.std::__1::allocator.109" = type { i8 }
%"struct.std::__1::__split_buffer.225" = type { %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"*, %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.72", %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.std::__1::allocator.74"* }
%"class.std::__1::allocator.74" = type { i8 }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.4", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%class.TSymbol = type <{ i32 (...)**, %"class.std::__1::basic_string"*, i32, [4 x i8] }>
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.glsl::LoopUnrollable" = type { %class.TIntermTraverser, i8, i32 }
%class.TIntermOperator = type <{ %class.TIntermTyped, i32, [4 x i8] }>
%"class.std::__1::allocator.53" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEC2IDnEEPKc = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc = comdat any

$_ZNK5TType14getElementSizeEv = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_ = comdat any

$_ZN9TFunction12unmangleNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEE14pool_allocatorIcEEE = comdat any

$_ZN4glsl9TemporaryC2EPNS_9OutputASME = comdat any

$_ZN4glsl9TemporaryD2Ev = comdat any

$_ZNK5TType20elementRegisterCountEv = comdat any

$_ZNK5TType18totalRegisterCountEv = comdat any

$_ZNK5TType25totalSamplerRegisterCountEv = comdat any

$_ZNSt3__14listIN4glsl7VaryingENS_9allocatorIS2_EEE9push_backEOS2_ = comdat any

$_ZNK5TType20samplerRegisterCountEv = comdat any

$_ZN4glsl18BlockLayoutEncoderD2Ev = comdat any

$_ZN16TIntermTraverserD2Ev = comdat any

$_ZN4glsl6ShaderD2Ev = comdat any

$_ZN4glsl6ShaderD0Ev = comdat any

$_ZN4glsl18Std140BlockEncoderD0Ev = comdat any

$_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion = comdat any

$_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase = comdat any

$_ZN4glsl14LoopUnrollableD0Ev = comdat any

$_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection = comdat any

$_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop = comdat any

$_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch = comdat any

$_ZN4glsl18BlockLayoutEncoderD0Ev = comdat any

$_ZNSt3__113__vector_baseIN4glsl14ShaderVariableENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__19allocatorIN4glsl14ShaderVariableEE7destroyEPS2_ = comdat any

$_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE4findEcm = comdat any

$_ZN16TIntermTraverserD0Ev = comdat any

$_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol = comdat any

$_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary = comdat any

$_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary = comdat any

$_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate = comdat any

$_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch = comdat any

$_ZN12TIntermTyped10getAsTypedEv = comdat any

$_ZN11TIntermNode18getAsConstantUnionEv = comdat any

$_ZN11TIntermNode14getAsAggregateEv = comdat any

$_ZN11TIntermNode15getAsBinaryNodeEv = comdat any

$_ZN11TIntermNode14getAsUnaryNodeEv = comdat any

$_ZN11TIntermNode18getAsSelectionNodeEv = comdat any

$_ZN13TIntermSymbol15getAsSymbolNodeEv = comdat any

$_ZN11TIntermNode13getAsLoopNodeEv = comdat any

$_ZN11TIntermNode15getAsBranchNodeEv = comdat any

$_ZN11TIntermNode15getAsSwitchNodeEv = comdat any

$_ZN11TIntermNode13getAsCaseNodeEv = comdat any

$_ZN4glsl9TemporaryD0Ev = comdat any

$_ZN12TIntermTyped7setTypeERK5TType = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEaSERKS5_ = comdat any

$_ZN11TIntermNode15getAsSymbolNodeEv = comdat any

$_ZN11TIntermNodeD2Ev = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_no_aliasILb1EEERS5_PKcm = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_no_aliasILb0EEERS5_PKcm = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE21__grow_by_and_replaceEmmmmmmPKc = comdat any

$_ZN20TIntermConstantUnion18getAsConstantUnionEv = comdat any

$_ZN4glsl8ConstantD0Ev = comdat any

$_ZNK5TType18blockRegisterCountEv = comdat any

$_ZNSt3__113__vector_baseIN4glsl12UniformBlockENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__19allocatorIN4glsl12UniformBlockEE7destroyEPS2_ = comdat any

$_ZNSt3__113__vector_baseIN4glsl9AttributeENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__113__vector_baseIN4glsl9AttributeENS_9allocatorIS2_EEE5clearEv = comdat any

$_ZNSt3__113__vector_baseIN4glsl7UniformENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__19allocatorIN4glsl7UniformEE7destroyEPS2_ = comdat any

$_ZNSt3__110__list_impIN4glsl7VaryingENS_9allocatorIS2_EEE5clearEv = comdat any

$_ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN4glsl7VaryingEPvEEEEE7destroyIS4_vvEEvRS7_PT_ = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE25__init_copy_ctor_externalEPKcm = comdat any

$_ZNSt3__114__split_bufferIN4glsl14ShaderVariableERNS_9allocatorIS2_EEEC2EmmS5_ = comdat any

$_ZNSt3__16vectorIN4glsl14ShaderVariableENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE = comdat any

$_ZNSt3__114__split_bufferIN4glsl14ShaderVariableERNS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__146__construct_backward_with_exception_guaranteesINS_9allocatorIN4glsl14ShaderVariableEEEPS3_EEvRT_T0_S8_RS8_ = comdat any

$_ZNSt3__114__split_bufferIN4glsl14ShaderVariableERNS_9allocatorIS2_EEE5clearEv = comdat any

$_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm = comdat any

$_ZNSt3__113__vector_baseINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEENS7_ISC_EEED2Ev = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE = comdat any

$_ZNSt3__114__split_bufferIN4glsl8FunctionERNS_9allocatorIS2_EEEC2EmmS5_ = comdat any

$_ZNSt3__16vectorIN4glsl8FunctionENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJiEEENS_4pairINS_15__tree_iteratorIiPNS_11__tree_nodeIiPvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSA_SA_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE14__erase_uniqueIiEEmRKT_ = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE21__remove_node_pointerEPNS_11__tree_nodeIiPvEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm = comdat any

$_ZNSt3__114__split_bufferIN4glsl9AttributeERNS_9allocatorIS2_EEEC2EmmS5_ = comdat any

$_ZNSt3__16vectorIN4glsl9AttributeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE = comdat any

$_ZNSt3__114__split_bufferIN4glsl9AttributeERNS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__114__split_bufferIN4glsl9AttributeERNS_9allocatorIS2_EEE17__destruct_at_endEPS2_ = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6assignEPKc = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_externalEPKcm = comdat any

$_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIiJNS_4pairIKiS4_EEEEENSE_INS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSH_SH_ = comdat any

$_ZNSt3__114__split_bufferIN4glsl7UniformERNS_9allocatorIS2_EEEC2EmmS5_ = comdat any

$_ZNSt3__16vectorIN4glsl7UniformENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE = comdat any

$_ZNSt3__114__split_bufferIN4glsl7UniformERNS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__146__construct_backward_with_exception_guaranteesINS_9allocatorIN4glsl7UniformEEEPS3_EEvRT_T0_S8_RS8_ = comdat any

$_ZNSt3__114__split_bufferIN4glsl7UniformERNS_9allocatorIS2_EEE5clearEv = comdat any

$_ZNSt3__114__split_bufferIN4glsl12UniformBlockERNS_9allocatorIS2_EEEC2EmmS5_ = comdat any

$_ZNSt3__16vectorIN4glsl12UniformBlockENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE = comdat any

$_ZNSt3__114__split_bufferIN4glsl12UniformBlockERNS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__146__construct_backward_with_exception_guaranteesINS_9allocatorIN4glsl12UniformBlockEEEPS3_EEvRT_T0_S8_RS8_ = comdat any

$_ZNSt3__114__split_bufferIN4glsl12UniformBlockERNS_9allocatorIS2_EEE5clearEv = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__114__split_bufferINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEERNS7_ISC_EEEC2EmmSE_ = comdat any

$_ZNSt3__16vectorINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEENS7_ISC_EEE26__swap_out_circular_bufferERNS_14__split_bufferISC_RSD_EE = comdat any

$_ZNSt3__114__split_bufferINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEERNS7_ISC_EEED2Ev = comdat any

$_ZNSt3__114__split_bufferINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEERNS7_ISC_EEE5clearEv = comdat any

$_ZTVN4glsl18BlockLayoutEncoderE = comdat any

$_ZTV16TIntermTraverser = comdat any

$_ZTVN4glsl9TemporaryE = comdat any

$_ZTVN4glsl8ConstantE = comdat any

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@_ZTVN4glsl18BlockLayoutEncoderE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.glsl::BlockLayoutEncoder"*)* @_ZN4glsl18BlockLayoutEncoderD2Ev to i8*), i8* bitcast (void (%"class.glsl::BlockLayoutEncoder"*)* @_ZN4glsl18BlockLayoutEncoderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN4glsl18Std140BlockEncoderE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.glsl::BlockLayoutEncoder"*)* @_ZN4glsl18BlockLayoutEncoderD2Ev to i8*), i8* bitcast (void (%"class.glsl::Std140BlockEncoder"*)* @_ZN4glsl18Std140BlockEncoderD0Ev to i8*), i8* bitcast (void (%"class.glsl::Std140BlockEncoder"*)* @_ZN4glsl18Std140BlockEncoder18enterAggregateTypeEv to i8*), i8* bitcast (void (%"class.glsl::Std140BlockEncoder"*)* @_ZN4glsl18Std140BlockEncoder17exitAggregateTypeEv to i8*), i8* bitcast (void (%"class.glsl::Std140BlockEncoder"*, %class.TType*, i32, i1, i32*, i32*)* @_ZN4glsl18Std140BlockEncoder18getBlockLayoutInfoERK5TTypejbPiS4_ to i8*), i8* bitcast (void (%"class.glsl::Std140BlockEncoder"*, %class.TType*, i32, i1, i32, i32)* @_ZN4glsl18Std140BlockEncoder13advanceOffsetERK5TTypejbii to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [10 x i8] c"texture2D\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"textureCube\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"texture\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"texture3D\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"texture2DRect\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"texture2DProj\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"textureProj\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"texture2DRectProj\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"texture2DLod\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"textureCubeLod\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"textureLod\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"texture2DProjLod\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"textureProjLod\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"textureSize\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"textureOffset\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"textureProjOffset\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"textureLodOffset\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"textureProjLodOffset\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"texelFetch\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"texelFetchOffset\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"textureGrad\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"textureGradOffset\00", align 1
@.str.23 = private unnamed_addr constant [16 x i8] c"textureProjGrad\00", align 1
@.str.24 = private unnamed_addr constant [22 x i8] c"textureProjGradOffset\00", align 1
@_ZTVN4glsl9OutputASME = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.glsl::OutputASM"*)* @_ZN4glsl9OutputASMD2Ev to i8*), i8* bitcast (void (%"class.glsl::OutputASM"*)* @_ZN4glsl9OutputASMD0Ev to i8*), i8* bitcast (void (%"class.glsl::OutputASM"*, %class.TIntermSymbol*)* @_ZN4glsl9OutputASM11visitSymbolEP13TIntermSymbol to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermConstantUnion*)* @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion to i8*), i8* bitcast (i1 (%"class.glsl::OutputASM"*, i32, %class.TIntermBinary*)* @_ZN4glsl9OutputASM11visitBinaryE5VisitP13TIntermBinary to i8*), i8* bitcast (i1 (%"class.glsl::OutputASM"*, i32, %class.TIntermUnary*)* @_ZN4glsl9OutputASM10visitUnaryE5VisitP12TIntermUnary to i8*), i8* bitcast (i1 (%"class.glsl::OutputASM"*, i32, %class.TIntermSelection*)* @_ZN4glsl9OutputASM14visitSelectionE5VisitP16TIntermSelection to i8*), i8* bitcast (i1 (%"class.glsl::OutputASM"*, i32, %class.TIntermAggregate*)* @_ZN4glsl9OutputASM14visitAggregateE5VisitP16TIntermAggregate to i8*), i8* bitcast (i1 (%"class.glsl::OutputASM"*, i32, %class.TIntermLoop*)* @_ZN4glsl9OutputASM9visitLoopE5VisitP11TIntermLoop to i8*), i8* bitcast (i1 (%"class.glsl::OutputASM"*, i32, %class.TIntermBranch*)* @_ZN4glsl9OutputASM11visitBranchE5VisitP13TIntermBranch to i8*), i8* bitcast (i1 (%"class.glsl::OutputASM"*, i32, %class.TIntermSwitch*)* @_ZN4glsl9OutputASM11visitSwitchE5VisitP13TIntermSwitch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermCase*)* @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase to i8*)] }, align 8
@.str.25 = private unnamed_addr constant [6 x i8] c"main(\00", align 1
@_ZZN4glsl9OutputASM15emitDeterminantEP12TIntermTypedS2_iiiiiE7swizzle = internal unnamed_addr constant [3 x i32] [i32 153, i32 136, i32 68], align 4
@_ZZN4glsl9OutputASM15emitDeterminantEP12TIntermTypedS2_iiiiiE7swizzle_0 = internal unnamed_addr constant [4 x i32] [i32 249, i32 248, i32 244, i32 228], align 16
@.str.26 = private unnamed_addr constant [30 x i8] c"function definition not found\00", align 1
@.str.27 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"loop unrolled\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.30 = private unnamed_addr constant [56 x i8] c"Too many temporary registers required to compile shader\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"pixel shader\00", align 1
@.str.32 = private unnamed_addr constant [14 x i8] c"vertex shader\00", align 1
@.str.33 = private unnamed_addr constant [65 x i8] c"Result type should match the l-value type in compound assignment\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"vector\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"matrix\00", align 1
@.str.36 = private unnamed_addr constant [55 x i8] c"static assignment to both gl_FragData and gl_FragColor\00", align 1
@_ZZN4glsl9OutputASM11readSwizzleEP12TIntermTypediE11swizzleSize = internal unnamed_addr constant [5 x i8] c"\00\00T\A4\E4", align 1
@.str.37 = private unnamed_addr constant [43 x i8] c"Varyings packing failed: Too many varyings\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"fragment shader\00", align 1
@.str.39 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.40 = private unnamed_addr constant [61 x i8] c"Fragment output location larger or equal to MAX_DRAW_BUFFERS\00", align 1
@.str.41 = private unnamed_addr constant [39 x i8] c"Multiple locations for fragment output\00", align 1
@.str.42 = private unnamed_addr constant [34 x i8] c"Fragment output location aliasing\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"gl_MaxVertexUniformVectors\00", align 1
@.str.44 = private unnamed_addr constant [29 x i8] c"gl_MaxFragmentUniformVectors\00", align 1
@.str.45 = private unnamed_addr constant [13 x i8] c"Array size (\00", align 1
@.str.46 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.47 = private unnamed_addr constant [18 x i8] c"exceeds limit of \00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.49 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.50 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"].\00", align 1
@_ZTVN4glsl6ShaderE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.glsl::Shader"*)* @_ZN4glsl6ShaderD2Ev to i8*), i8* bitcast (void (%"class.glsl::Shader"*)* @_ZN4glsl6ShaderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.sw::PixelShader"* (%"class.glsl::Shader"*)* @_ZNK4glsl6Shader14getPixelShaderEv to i8*), i8* bitcast (%"class.sw::VertexShader"* (%"class.glsl::Shader"*)* @_ZNK4glsl6Shader15getVertexShaderEv to i8*)] }, align 8
@_ZTVN4glsl14LoopUnrollableE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TIntermTraverser*)* @_ZN16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%"class.glsl::LoopUnrollable"*)* @_ZN4glsl14LoopUnrollableD0Ev to i8*), i8* bitcast (void (%"class.glsl::LoopUnrollable"*, %class.TIntermSymbol*)* @_ZN4glsl14LoopUnrollable11visitSymbolEP13TIntermSymbol to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermConstantUnion*)* @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion to i8*), i8* bitcast (i1 (%"class.glsl::LoopUnrollable"*, i32, %class.TIntermBinary*)* @_ZN4glsl14LoopUnrollable11visitBinaryE5VisitP13TIntermBinary to i8*), i8* bitcast (i1 (%"class.glsl::LoopUnrollable"*, i32, %class.TIntermUnary*)* @_ZN4glsl14LoopUnrollable10visitUnaryE5VisitP12TIntermUnary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSelection*)* @_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection to i8*), i8* bitcast (i1 (%"class.glsl::LoopUnrollable"*, i32, %class.TIntermAggregate*)* @_ZN4glsl14LoopUnrollable14visitAggregateE5VisitP16TIntermAggregate to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermLoop*)* @_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop to i8*), i8* bitcast (i1 (%"class.glsl::LoopUnrollable"*, i32, %class.TIntermBranch*)* @_ZN4glsl14LoopUnrollable11visitBranchE5VisitP13TIntermBranch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSwitch*)* @_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermCase*)* @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase to i8*)] }, align 8
@_ZTV16TIntermTraverser = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TIntermTraverser*)* @_ZN16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%class.TIntermTraverser*)* @_ZN16TIntermTraverserD0Ev to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermSymbol*)* @_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol to i8*), i8* bitcast (void (%class.TIntermTraverser*, %class.TIntermConstantUnion*)* @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBinary*)* @_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermUnary*)* @_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSelection*)* @_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermAggregate*)* @_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermLoop*)* @_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermBranch*)* @_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermSwitch*)* @_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch to i8*), i8* bitcast (i1 (%class.TIntermTraverser*, i32, %class.TIntermCase*)* @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase to i8*)] }, comdat, align 8
@.str.52 = private unnamed_addr constant [4 x i8] c"tmp\00", align 1
@_ZTVN4glsl9TemporaryE = linkonce_odr hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TIntermSymbol*, %class.TIntermTraverser*)* @_ZN13TIntermSymbol8traverseEP16TIntermTraverser to i8*), i8* bitcast (%class.TIntermTyped* (%class.TIntermTyped*)* @_ZN12TIntermTyped10getAsTypedEv to i8*), i8* bitcast (%class.TIntermConstantUnion* (%class.TIntermNode*)* @_ZN11TIntermNode18getAsConstantUnionEv to i8*), i8* bitcast (%class.TIntermAggregate* (%class.TIntermNode*)* @_ZN11TIntermNode14getAsAggregateEv to i8*), i8* bitcast (%class.TIntermBinary* (%class.TIntermNode*)* @_ZN11TIntermNode15getAsBinaryNodeEv to i8*), i8* bitcast (%class.TIntermUnary* (%class.TIntermNode*)* @_ZN11TIntermNode14getAsUnaryNodeEv to i8*), i8* bitcast (%class.TIntermSelection* (%class.TIntermNode*)* @_ZN11TIntermNode18getAsSelectionNodeEv to i8*), i8* bitcast (%class.TIntermSymbol* (%class.TIntermSymbol*)* @_ZN13TIntermSymbol15getAsSymbolNodeEv to i8*), i8* bitcast (%class.TIntermLoop* (%class.TIntermNode*)* @_ZN11TIntermNode13getAsLoopNodeEv to i8*), i8* bitcast (%class.TIntermBranch* (%class.TIntermNode*)* @_ZN11TIntermNode15getAsBranchNodeEv to i8*), i8* bitcast (%class.TIntermSwitch* (%class.TIntermNode*)* @_ZN11TIntermNode15getAsSwitchNodeEv to i8*), i8* bitcast (%class.TIntermCase* (%class.TIntermNode*)* @_ZN11TIntermNode13getAsCaseNodeEv to i8*), i8* bitcast (void (%"class.glsl::Temporary"*)* @_ZN4glsl9TemporaryD2Ev to i8*), i8* bitcast (void (%"class.glsl::Temporary"*)* @_ZN4glsl9TemporaryD0Ev to i8*), i8* bitcast (void (%class.TIntermTyped*, %class.TType*)* @_ZN12TIntermTyped7setTypeERK5TType to i8*)] }, comdat, align 8
@_ZN17TSymbolTableLevel8uniqueIdE = external local_unnamed_addr global i32, align 4
@_ZTV13TIntermSymbol = external unnamed_addr constant { [17 x i8*] }, align 8
@_ZTVN4glsl8ConstantE = linkonce_odr hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TIntermConstantUnion*, %class.TIntermTraverser*)* @_ZN20TIntermConstantUnion8traverseEP16TIntermTraverser to i8*), i8* bitcast (%class.TIntermTyped* (%class.TIntermTyped*)* @_ZN12TIntermTyped10getAsTypedEv to i8*), i8* bitcast (%class.TIntermConstantUnion* (%class.TIntermConstantUnion*)* @_ZN20TIntermConstantUnion18getAsConstantUnionEv to i8*), i8* bitcast (%class.TIntermAggregate* (%class.TIntermNode*)* @_ZN11TIntermNode14getAsAggregateEv to i8*), i8* bitcast (%class.TIntermBinary* (%class.TIntermNode*)* @_ZN11TIntermNode15getAsBinaryNodeEv to i8*), i8* bitcast (%class.TIntermUnary* (%class.TIntermNode*)* @_ZN11TIntermNode14getAsUnaryNodeEv to i8*), i8* bitcast (%class.TIntermSelection* (%class.TIntermNode*)* @_ZN11TIntermNode18getAsSelectionNodeEv to i8*), i8* bitcast (%class.TIntermSymbol* (%class.TIntermNode*)* @_ZN11TIntermNode15getAsSymbolNodeEv to i8*), i8* bitcast (%class.TIntermLoop* (%class.TIntermNode*)* @_ZN11TIntermNode13getAsLoopNodeEv to i8*), i8* bitcast (%class.TIntermBranch* (%class.TIntermNode*)* @_ZN11TIntermNode15getAsBranchNodeEv to i8*), i8* bitcast (%class.TIntermSwitch* (%class.TIntermNode*)* @_ZN11TIntermNode15getAsSwitchNodeEv to i8*), i8* bitcast (%class.TIntermCase* (%class.TIntermNode*)* @_ZN11TIntermNode13getAsCaseNodeEv to i8*), i8* bitcast (void (%class.TIntermNode*)* @_ZN11TIntermNodeD2Ev to i8*), i8* bitcast (void (%"class.glsl::Constant"*)* @_ZN4glsl8ConstantD0Ev to i8*), i8* bitcast (void (%class.TIntermTyped*, %class.TType*)* @_ZN12TIntermTyped7setTypeERK5TType to i8*)] }, comdat, align 8
@.str.53 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"uint\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"bool\00", align 1
@.str.58 = private unnamed_addr constant [10 x i8] c"sampler2D\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c"samplerCube\00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"sampler2DRect\00", align 1
@.str.61 = private unnamed_addr constant [19 x i8] c"samplerExternalOES\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"sampler3D\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"structure\00", align 1
@.str.66 = private unnamed_addr constant [13 x i8] c"unknown type\00", align 1
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZN12_GLOBAL__N_114glVariableTypeERK5TType = private unnamed_addr constant [3 x i32] [i32 35674, i32 35685, i32 35686], align 4
@switch.table._ZN12_GLOBAL__N_114glVariableTypeERK5TType.68 = private unnamed_addr constant [3 x i32] [i32 35687, i32 35675, i32 35688], align 4
@switch.table._ZN12_GLOBAL__N_114glVariableTypeERK5TType.69 = private unnamed_addr constant [3 x i32] [i32 35689, i32 35690, i32 35676], align 4
@switch.table._ZN4glsl9OutputASM7emitCmpEN2sw6Shader7ControlEP12TIntermTypedP11TIntermNodeS7_i = private unnamed_addr constant [3 x i32] [i32 268435553, i32 268435554, i32 268435553], align 4
@switch.table._ZN4glsl9OutputASM8emitCastEP12TIntermTypediS2_i = private unnamed_addr constant [3 x i32] [i32 268435498, i32 268435504, i32 268435504], align 4
@switch.table._ZN4glsl9OutputASM8emitCastEP12TIntermTypediS2_i.70 = private unnamed_addr constant [3 x i32] [i32 268435499, i32 268435501, i32 268435497], align 4

@_ZN4glsl14ShaderVariableC1ERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEi = hidden unnamed_addr alias void (%"struct.glsl::ShaderVariable"*, %class.TType*, %"class.std::__1::basic_string.4"*, i32), void (%"struct.glsl::ShaderVariable"*, %class.TType*, %"class.std::__1::basic_string.4"*, i32)* @_ZN4glsl14ShaderVariableC2ERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEi
@_ZN4glsl7UniformC1ERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEiiRKNS_15BlockMemberInfoE = hidden unnamed_addr alias void (%"struct.glsl::Uniform"*, %class.TType*, %"class.std::__1::basic_string.4"*, i32, i32, %"struct.glsl::BlockMemberInfo"*), void (%"struct.glsl::Uniform"*, %class.TType*, %"class.std::__1::basic_string.4"*, i32, i32, %"struct.glsl::BlockMemberInfo"*)* @_ZN4glsl7UniformC2ERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEiiRKNS_15BlockMemberInfoE
@_ZN4glsl12UniformBlockC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEjj19TLayoutBlockStoragebii = hidden unnamed_addr alias void (%"struct.glsl::UniformBlock"*, %"class.std::__1::basic_string.4"*, i32, i32, i32, i1, i32, i32), void (%"struct.glsl::UniformBlock"*, %"class.std::__1::basic_string.4"*, i32, i32, i32, i1, i32, i32)* @_ZN4glsl12UniformBlockC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEjj19TLayoutBlockStoragebii
@_ZN4glsl18Std140BlockEncoderC1Ev = hidden unnamed_addr alias void (%"class.glsl::Std140BlockEncoder"*), void (%"class.glsl::Std140BlockEncoder"*)* @_ZN4glsl18Std140BlockEncoderC2Ev
@_ZN4glsl9AttributeC1Ev = hidden unnamed_addr alias void (%"struct.glsl::Attribute"*), void (%"struct.glsl::Attribute"*)* @_ZN4glsl9AttributeC2Ev
@_ZN4glsl9AttributeC1EjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii = hidden unnamed_addr alias void (%"struct.glsl::Attribute"*, i32, %"class.std::__1::basic_string.4"*, i32, i32, i32), void (%"struct.glsl::Attribute"*, i32, %"class.std::__1::basic_string.4"*, i32, i32, i32)* @_ZN4glsl9AttributeC2EjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii
@_ZN4glsl9OutputASM15TextureFunctionC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEE14pool_allocatorIcEEE = hidden unnamed_addr alias void (%"struct.glsl::OutputASM::TextureFunction"*, %"class.std::__1::basic_string"*), void (%"struct.glsl::OutputASM::TextureFunction"*, %"class.std::__1::basic_string"*)* @_ZN4glsl9OutputASM15TextureFunctionC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEE14pool_allocatorIcEEE
@_ZN4glsl9OutputASMC1ER13TParseContextPNS_6ShaderE = hidden unnamed_addr alias void (%"class.glsl::OutputASM"*, %class.TParseContext*, %"class.glsl::Shader"*), void (%"class.glsl::OutputASM"*, %class.TParseContext*, %"class.glsl::Shader"*)* @_ZN4glsl9OutputASMC2ER13TParseContextPNS_6ShaderE
@_ZN4glsl9OutputASMD1Ev = hidden unnamed_addr alias void (%"class.glsl::OutputASM"*), void (%"class.glsl::OutputASM"*)* @_ZN4glsl9OutputASMD2Ev
@_ZN4glsl9OutputASM8LoopInfoC1EP11TIntermLoop = hidden unnamed_addr alias void (%"struct.glsl::OutputASM::LoopInfo"*, %class.TIntermLoop*), void (%"struct.glsl::OutputASM::LoopInfo"*, %class.TIntermLoop*)* @_ZN4glsl9OutputASM8LoopInfoC2EP11TIntermLoop

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl3strEi(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 {
  %3 = alloca [20 x i8], align 16
  %4 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 20, i1 false)
  %5 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %1) #21
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* nonnull %4) #22
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind optsize
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEC2IDnEEPKc(%"class.std::__1::basic_string"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #21
  store %class.TPoolAllocator* %4, %class.TPoolAllocator** %3, align 8
  %5 = tail call i64 @strlen(i8* %1) #21
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %8) #23
  unreachable

9:                                                ; preds = %2
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %4, i64 %13) #21
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8
  br label %25

19:                                               ; preds = %9
  %20 = trunc i64 %5 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 %20, i8* %22, align 1
  %23 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %24 = icmp eq i64 %5, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %19, %11
  %26 = phi i8* [ %14, %11 ], [ %23, %19 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %1, i64 %5, i1 false) #20
  br label %27

27:                                               ; preds = %19, %25
  %28 = phi i8* [ %23, %19 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %5
  store i8 0, i8* %29, align 1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl14ShaderVariableC2ERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEi(%"struct.glsl::ShaderVariable"*, %class.TType* dereferenceable(64), %"class.std::__1::basic_string.4"* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = alloca %"struct.glsl::ShaderVariable", align 8
  %7 = alloca %"class.std::__1::basic_string.4", align 8
  %8 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 11
  %10 = load %class.TStructure*, %class.TStructure** %9, align 8
  %11 = icmp eq %class.TStructure* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = tail call fastcc i32 @_ZN12_GLOBAL__N_114glVariableTypeERK5TType(%class.TType* dereferenceable(64) %1) #22
  br label %14

14:                                               ; preds = %4, %12
  %15 = phi i32 [ %13, %12 ], [ 0, %4 ]
  store i32 %15, i32* %8, align 8
  %16 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 0
  %18 = load i8, i8* %17, align 8
  switch i8 %18, label %35 [
    i8 1, label %19
    i8 2, label %24
  ]

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = add i8 %21, -1
  %23 = icmp ult i8 %22, 3
  br i1 %23, label %29, label %35

24:                                               ; preds = %14
  %25 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = add i8 %26, -1
  %28 = icmp ult i8 %27, 3
  br i1 %28, label %32, label %35

29:                                               ; preds = %19
  %30 = zext i8 %22 to i32
  %31 = add nuw nsw i32 %30, 36336
  br label %35

32:                                               ; preds = %24
  %33 = zext i8 %27 to i32
  %34 = add nuw nsw i32 %33, 36339
  br label %35

35:                                               ; preds = %14, %19, %24, %32, %29
  %36 = phi i32 [ %31, %29 ], [ %34, %32 ], [ 0, %24 ], [ 0, %19 ], [ 0, %14 ]
  store i32 %36, i32* %16, align 4
  %37 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %0, i64 0, i32 2
  %38 = bitcast %"class.std::__1::basic_string.4"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %35
  %43 = bitcast %"class.std::__1::basic_string.4"* %37 to i8*
  %44 = bitcast %"class.std::__1::basic_string.4"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #20
  br label %50

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.4"* %37, i8* %47, i64 %49) #21
  br label %50

50:                                               ; preds = %42, %45
  %51 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %0, i64 0, i32 3
  %52 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 6
  %53 = load i32, i32* %52, align 8
  store i32 %53, i32* %51, align 8
  %54 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %0, i64 0, i32 4
  store i32 %3, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %0, i64 0, i32 5
  %56 = bitcast %"class.std::__1::vector.12"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #20
  %57 = load %class.TStructure*, %class.TStructure** %9, align 8
  %58 = icmp eq %class.TStructure* %57, null
  br i1 %58, label %191, label %59

59:                                               ; preds = %50
  %60 = getelementptr inbounds %class.TStructure, %class.TStructure* %57, i64 0, i32 0, i32 2
  %61 = load %class.TVector*, %class.TVector** %60, align 8
  %62 = getelementptr inbounds %class.TVector, %class.TVector* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %class.TField**, %class.TField*** %62, align 8
  %64 = getelementptr inbounds %class.TVector, %class.TVector* %61, i64 0, i32 0, i32 0, i32 1
  %65 = load %class.TField**, %class.TField*** %64, align 8
  %66 = icmp eq %class.TField** %63, %65
  br i1 %66, label %191, label %67

67:                                               ; preds = %59
  %68 = bitcast %"struct.glsl::ShaderVariable"* %6 to i8*
  %69 = bitcast %"class.std::__1::basic_string.4"* %7 to i8*
  %70 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %0, i64 0, i32 5, i32 0, i32 1
  %71 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %0, i64 0, i32 5, i32 0, i32 2
  %73 = bitcast %"class.std::__1::__compressed_pair.14"* %72 to %"class.std::__1::allocator.17"*
  %74 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  %75 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %76 = bitcast %"struct.glsl::ShaderVariable"** %70 to i64*
  %77 = bitcast %"class.std::__1::vector.12"* %55 to i64*
  %78 = bitcast %"struct.glsl::ShaderVariable"* %6 to i64*
  %79 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %6, i64 0, i32 2
  %80 = bitcast %"class.std::__1::basic_string.4"* %79 to i8*
  %81 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %6, i64 0, i32 3
  %82 = bitcast i32* %81 to i64*
  %83 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %6, i64 0, i32 5
  %84 = bitcast %"class.std::__1::vector.12"* %83 to i64*
  %85 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %6, i64 0, i32 5, i32 0, i32 1
  %86 = bitcast %"struct.glsl::ShaderVariable"** %85 to i64*
  %87 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %6, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %88 = bitcast %"struct.glsl::ShaderVariable"** %87 to i64*
  %89 = bitcast %"class.std::__1::vector.12"* %83 to i8*
  %90 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %6, i64 0, i32 5, i32 0
  %91 = bitcast %"class.std::__1::basic_string.4"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %97

97:                                               ; preds = %67, %188
  %98 = phi %class.TField** [ %63, %67 ], [ %189, %188 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %68) #20
  %99 = load %class.TField*, %class.TField** %98, align 8
  %100 = getelementptr inbounds %class.TField, %class.TField* %99, i64 0, i32 0
  %101 = load %class.TType*, %class.TType** %100, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #20
  %102 = getelementptr inbounds %class.TField, %class.TField* %99, i64 0, i32 1
  %103 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %102, align 8
  %104 = bitcast %"class.std::__1::basic_string"* %103 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %97
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  br label %113

111:                                              ; preds = %97
  %112 = bitcast %"class.std::__1::basic_string"* %103 to i8*
  br label %113

113:                                              ; preds = %108, %111
  %114 = phi i8* [ %110, %108 ], [ %112, %111 ]
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string.4"* nonnull %7, i8* %114) #22
  call void @_ZN4glsl14ShaderVariableC2ERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEi(%"struct.glsl::ShaderVariable"* nonnull %6, %class.TType* dereferenceable(64) %101, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %7, i32 -1) #22
  %115 = load %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** %70, align 8
  %116 = load %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** %71, align 8
  %117 = icmp ult %"struct.glsl::ShaderVariable"* %115, %116
  %118 = ptrtoint %"struct.glsl::ShaderVariable"* %116 to i64
  br i1 %117, label %119, label %139

119:                                              ; preds = %113
  %120 = bitcast %"struct.glsl::ShaderVariable"* %115 to i64*
  %121 = load i64, i64* %78, align 8
  store i64 %121, i64* %120, align 8
  %122 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %115, i64 0, i32 2
  %123 = bitcast %"class.std::__1::basic_string.4"* %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %80, i64 24, i1 false) #20
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #20
  %124 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %115, i64 0, i32 3
  %125 = bitcast i32* %124 to i64*
  %126 = load i64, i64* %82, align 8
  store i64 %126, i64* %125, align 8
  %127 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %115, i64 0, i32 5
  %128 = bitcast %"class.std::__1::vector.12"* %127 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 24, i1 false) #20
  %129 = load i64, i64* %84, align 8
  %130 = bitcast %"class.std::__1::vector.12"* %127 to i64*
  store i64 %129, i64* %130, align 8
  %131 = load i64, i64* %86, align 8
  %132 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %115, i64 0, i32 5, i32 0, i32 1
  %133 = bitcast %"struct.glsl::ShaderVariable"** %132 to i64*
  store i64 %131, i64* %133, align 8
  %134 = load i64, i64* %88, align 8
  %135 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %115, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %136 = bitcast %"struct.glsl::ShaderVariable"** %135 to i64*
  store i64 %134, i64* %136, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #20
  %137 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %115, i64 1
  %138 = ptrtoint %"struct.glsl::ShaderVariable"* %137 to i64
  store i64 %138, i64* %76, align 8
  br label %178

139:                                              ; preds = %113
  %140 = ptrtoint %"struct.glsl::ShaderVariable"* %115 to i64
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 40, i1 false) #20
  %141 = load i64, i64* %77, align 8
  %142 = sub i64 %140, %141
  %143 = ashr exact i64 %142, 6
  %144 = add nsw i64 %143, 1
  %145 = icmp ugt i64 %144, 288230376151711743
  br i1 %145, label %146, label %148

146:                                              ; preds = %139
  %147 = bitcast %"class.std::__1::vector.12"* %55 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #23
  unreachable

148:                                              ; preds = %139
  %149 = sub i64 %118, %141
  %150 = ashr exact i64 %149, 6
  %151 = icmp ult i64 %150, 144115188075855871
  br i1 %151, label %152, label %156

152:                                              ; preds = %148
  %153 = ashr exact i64 %149, 5
  %154 = icmp ult i64 %153, %144
  %155 = select i1 %154, i64 %144, i64 %153
  br label %156

156:                                              ; preds = %148, %152
  %157 = phi i64 [ %155, %152 ], [ 288230376151711743, %148 ]
  call void @_ZNSt3__114__split_bufferIN4glsl14ShaderVariableERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer"* nonnull %5, i64 %157, i64 %143, %"class.std::__1::allocator.17"* dereferenceable(1) %73) #21
  %158 = load %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** %75, align 8
  %159 = bitcast %"struct.glsl::ShaderVariable"* %158 to i64*
  %160 = load i64, i64* %78, align 8
  store i64 %160, i64* %159, align 8
  %161 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %158, i64 0, i32 2
  %162 = bitcast %"class.std::__1::basic_string.4"* %161 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* align 8 %80, i64 24, i1 false) #20
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #20
  %163 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %158, i64 0, i32 3
  %164 = bitcast i32* %163 to i64*
  %165 = load i64, i64* %82, align 8
  store i64 %165, i64* %164, align 8
  %166 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %158, i64 0, i32 5
  %167 = bitcast %"class.std::__1::vector.12"* %166 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 24, i1 false) #20
  %168 = load i64, i64* %84, align 8
  %169 = bitcast %"class.std::__1::vector.12"* %166 to i64*
  store i64 %168, i64* %169, align 8
  %170 = load i64, i64* %86, align 8
  %171 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %158, i64 0, i32 5, i32 0, i32 1
  %172 = bitcast %"struct.glsl::ShaderVariable"** %171 to i64*
  store i64 %170, i64* %172, align 8
  %173 = load i64, i64* %88, align 8
  %174 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %158, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %175 = bitcast %"struct.glsl::ShaderVariable"** %174 to i64*
  store i64 %173, i64* %175, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #20
  %176 = load %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** %75, align 8
  %177 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %176, i64 1
  store %"struct.glsl::ShaderVariable"* %177, %"struct.glsl::ShaderVariable"** %75, align 8
  call void @_ZNSt3__16vectorIN4glsl14ShaderVariableENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.12"* %55, %"struct.std::__1::__split_buffer"* nonnull dereferenceable(40) %5) #21
  call void @_ZNSt3__114__split_bufferIN4glsl14ShaderVariableERNS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__split_buffer"* nonnull %5) #21
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #20
  br label %178

178:                                              ; preds = %119, %156
  call void @_ZNSt3__113__vector_baseIN4glsl14ShaderVariableENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.13"* %90) #21
  %179 = load i8, i8* %92, align 1
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %178
  %182 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %182) #24
  br label %183

183:                                              ; preds = %178, %181
  %184 = load i8, i8* %95, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %188

186:                                              ; preds = %183
  %187 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %187) #24
  br label %188

188:                                              ; preds = %183, %186
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #20
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %68) #20
  %189 = getelementptr inbounds %class.TField*, %class.TField** %98, i64 1
  %190 = icmp eq %class.TField** %189, %65
  br i1 %190, label %191, label %97

191:                                              ; preds = %188, %59, %50
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define internal fastcc i32 @_ZN12_GLOBAL__N_114glVariableTypeERK5TType(%class.TType* readonly dereferenceable(64)) unnamed_addr #3 {
  %2 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  switch i8 %3, label %102 [
    i8 1, label %4
    i8 2, label %32
    i8 3, label %50
    i8 4, label %68
    i8 15, label %127
    i8 21, label %86
    i8 25, label %87
    i8 17, label %88
    i8 19, label %89
    i8 23, label %90
    i8 27, label %91
    i8 20, label %92
    i8 16, label %93
    i8 22, label %94
    i8 26, label %95
    i8 18, label %96
    i8 24, label %97
    i8 28, label %98
    i8 29, label %99
    i8 30, label %100
    i8 31, label %101
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 1
  switch i8 %6, label %15 [
    i8 1, label %7
    i8 0, label %102
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %9 = load i8, i8* %8, align 4
  %10 = icmp ugt i8 %9, 1
  br i1 %10, label %102, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 11
  %13 = load %class.TStructure*, %class.TStructure** %12, align 8
  %14 = icmp eq %class.TStructure* %13, null
  br i1 %14, label %127, label %102

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %17 = load i8, i8* %16, align 4
  %18 = icmp ult i8 %17, 2
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = add i8 %6, -2
  %21 = icmp ult i8 %20, 3
  br i1 %21, label %103, label %102

22:                                               ; preds = %15
  switch i8 %6, label %102 [
    i8 2, label %23
    i8 3, label %26
    i8 4, label %29
  ]

23:                                               ; preds = %22
  %24 = add i8 %17, -2
  %25 = icmp ult i8 %24, 3
  br i1 %25, label %106, label %102

26:                                               ; preds = %22
  %27 = add i8 %17, -2
  %28 = icmp ult i8 %27, 3
  br i1 %28, label %110, label %102

29:                                               ; preds = %22
  %30 = add i8 %17, -2
  %31 = icmp ult i8 %30, 3
  br i1 %31, label %114, label %102

32:                                               ; preds = %1
  %33 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 3
  %34 = load i8, i8* %33, align 1
  switch i8 %34, label %43 [
    i8 1, label %35
    i8 0, label %102
  ]

35:                                               ; preds = %32
  %36 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 4
  %38 = icmp ugt i8 %37, 1
  br i1 %38, label %102, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 11
  %41 = load %class.TStructure*, %class.TStructure** %40, align 8
  %42 = icmp eq %class.TStructure* %41, null
  br i1 %42, label %127, label %102

43:                                               ; preds = %32
  %44 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %45 = load i8, i8* %44, align 4
  %46 = icmp ult i8 %45, 2
  br i1 %46, label %47, label %102

47:                                               ; preds = %43
  %48 = add i8 %34, -2
  %49 = icmp ult i8 %48, 3
  br i1 %49, label %118, label %102

50:                                               ; preds = %1
  %51 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 3
  %52 = load i8, i8* %51, align 1
  switch i8 %52, label %61 [
    i8 1, label %53
    i8 0, label %102
  ]

53:                                               ; preds = %50
  %54 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %55 = load i8, i8* %54, align 4
  %56 = icmp ugt i8 %55, 1
  br i1 %56, label %102, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 11
  %59 = load %class.TStructure*, %class.TStructure** %58, align 8
  %60 = icmp eq %class.TStructure* %59, null
  br i1 %60, label %127, label %102

61:                                               ; preds = %50
  %62 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %63 = load i8, i8* %62, align 4
  %64 = icmp ult i8 %63, 2
  br i1 %64, label %65, label %102

65:                                               ; preds = %61
  %66 = add i8 %52, -2
  %67 = icmp ult i8 %66, 3
  br i1 %67, label %121, label %102

68:                                               ; preds = %1
  %69 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 3
  %70 = load i8, i8* %69, align 1
  switch i8 %70, label %79 [
    i8 1, label %71
    i8 0, label %102
  ]

71:                                               ; preds = %68
  %72 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %73 = load i8, i8* %72, align 4
  %74 = icmp ugt i8 %73, 1
  br i1 %74, label %102, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 11
  %77 = load %class.TStructure*, %class.TStructure** %76, align 8
  %78 = icmp eq %class.TStructure* %77, null
  br i1 %78, label %127, label %102

79:                                               ; preds = %68
  %80 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %81 = load i8, i8* %80, align 4
  %82 = icmp ult i8 %81, 2
  br i1 %82, label %83, label %102

83:                                               ; preds = %79
  %84 = add i8 %70, -2
  %85 = icmp ult i8 %84, 3
  br i1 %85, label %124, label %102

86:                                               ; preds = %1
  br label %127

87:                                               ; preds = %1
  br label %127

88:                                               ; preds = %1
  br label %127

89:                                               ; preds = %1
  br label %127

90:                                               ; preds = %1
  br label %127

91:                                               ; preds = %1
  br label %127

92:                                               ; preds = %1
  br label %127

93:                                               ; preds = %1
  br label %127

94:                                               ; preds = %1
  br label %127

95:                                               ; preds = %1
  br label %127

96:                                               ; preds = %1
  br label %127

97:                                               ; preds = %1
  br label %127

98:                                               ; preds = %1
  br label %127

99:                                               ; preds = %1
  br label %127

100:                                              ; preds = %1
  br label %127

101:                                              ; preds = %1
  br label %127

102:                                              ; preds = %83, %65, %47, %29, %26, %23, %19, %4, %11, %7, %68, %50, %32, %71, %75, %53, %57, %35, %39, %1, %79, %61, %43, %22
  br label %127

103:                                              ; preds = %19
  %104 = zext i8 %20 to i32
  %105 = add nuw nsw i32 %104, 35664
  ret i32 %105

106:                                              ; preds = %23
  %107 = sext i8 %24 to i64
  %108 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN12_GLOBAL__N_114glVariableTypeERK5TType, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  ret i32 %109

110:                                              ; preds = %26
  %111 = sext i8 %27 to i64
  %112 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN12_GLOBAL__N_114glVariableTypeERK5TType.68, i64 0, i64 %111
  %113 = load i32, i32* %112, align 4
  ret i32 %113

114:                                              ; preds = %29
  %115 = sext i8 %30 to i64
  %116 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN12_GLOBAL__N_114glVariableTypeERK5TType.69, i64 0, i64 %115
  %117 = load i32, i32* %116, align 4
  ret i32 %117

118:                                              ; preds = %47
  %119 = zext i8 %48 to i32
  %120 = add nuw nsw i32 %119, 35667
  ret i32 %120

121:                                              ; preds = %65
  %122 = zext i8 %66 to i32
  %123 = add nuw nsw i32 %122, 36294
  ret i32 %123

124:                                              ; preds = %83
  %125 = zext i8 %84 to i32
  %126 = add nuw nsw i32 %125, 35671
  ret i32 %126

127:                                              ; preds = %75, %57, %39, %11, %1, %102, %101, %100, %99, %98, %97, %96, %95, %94, %93, %92, %91, %90, %89, %88, %87, %86
  %128 = phi i32 [ 0, %102 ], [ 36292, %101 ], [ 36293, %100 ], [ 35682, %99 ], [ 36311, %98 ], [ 36303, %97 ], [ 36289, %96 ], [ 36307, %95 ], [ 36299, %94 ], [ 35679, %93 ], [ 36198, %92 ], [ 36308, %91 ], [ 36300, %90 ], [ 35683, %89 ], [ 35680, %88 ], [ 36306, %87 ], [ 36298, %86 ], [ 35678, %1 ], [ 5126, %11 ], [ 5124, %39 ], [ 5125, %57 ], [ 35670, %75 ]
  ret i32 %128
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string.4"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = tail call i64 @strlen(i8* %1) #21
  %4 = icmp ugt i64 %3, -17
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %6) #23
  unreachable

7:                                                ; preds = %2
  %8 = icmp ult i64 %3, 23
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = add nuw i64 %3, 16
  %11 = and i64 %10, -16
  %12 = tail call i8* @_Znwm(i64 %11) #24
  %13 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = or i64 %11, -9223372036854775808
  %15 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %16, align 8
  br label %23

17:                                               ; preds = %7
  %18 = trunc i64 %3 to i8
  %19 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 %18, i8* %20, align 1
  %21 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  %22 = icmp eq i64 %3, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17, %9
  %24 = phi i8* [ %12, %9 ], [ %21, %17 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %1, i64 %3, i1 false) #20
  br label %25

25:                                               ; preds = %17, %23
  %26 = phi i8* [ %21, %17 ], [ %24, %23 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 %3
  store i8 0, i8* %27, align 1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl7UniformC2ERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEiiRKNS_15BlockMemberInfoE(%"struct.glsl::Uniform"*, %class.TType* dereferenceable(64), %"class.std::__1::basic_string.4"* nocapture readonly dereferenceable(24), i32, i32, %"struct.glsl::BlockMemberInfo"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %0, i64 0, i32 0
  tail call void @_ZN4glsl14ShaderVariableC2ERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEi(%"struct.glsl::ShaderVariable"* %7, %class.TType* dereferenceable(64) %1, %"class.std::__1::basic_string.4"* dereferenceable(24) %2, i32 %3) #22
  %8 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %0, i64 0, i32 1
  store i32 %4, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %0, i64 0, i32 2
  %10 = bitcast %"struct.glsl::BlockMemberInfo"* %9 to i8*
  %11 = bitcast %"struct.glsl::BlockMemberInfo"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl12UniformBlockC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEjj19TLayoutBlockStoragebii(%"struct.glsl::UniformBlock"*, %"class.std::__1::basic_string.4"* nocapture readonly dereferenceable(24), i32, i32, i32, i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %9 = zext i1 %5 to i8
  %10 = bitcast %"class.std::__1::basic_string.4"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = bitcast %"struct.glsl::UniformBlock"* %0 to i8*
  %16 = bitcast %"class.std::__1::basic_string.4"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #20
  br label %23

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %0, i64 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.4"* %18, i8* %20, i64 %22) #21
  br label %23

23:                                               ; preds = %14, %17
  %24 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %0, i64 0, i32 1
  store i32 %2, i32* %24, align 8
  %25 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %0, i64 0, i32 2
  store i32 %3, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %0, i64 0, i32 3
  store i32 %4, i32* %26, align 8
  %27 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %0, i64 0, i32 4
  store i8 %9, i8* %27, align 4
  %28 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %0, i64 0, i32 5
  %29 = bitcast %"class.std::__1::vector.25"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #20
  %30 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %0, i64 0, i32 6
  store i32 %6, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %0, i64 0, i32 7
  store i32 %7, i32* %31, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN4glsl18BlockLayoutEncoderC2Ev(%"class.glsl::BlockLayoutEncoder"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.glsl::BlockLayoutEncoder", %"class.glsl::BlockLayoutEncoder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4glsl18BlockLayoutEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.glsl::BlockLayoutEncoder", %"class.glsl::BlockLayoutEncoder"* %0, i64 0, i32 1
  store i64 0, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i64, i64 } @_ZN4glsl18BlockLayoutEncoder10encodeTypeERK5TType(%"class.glsl::BlockLayoutEncoder"*, %class.TType* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20
  store i32 -1431655766, i32* %3, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #20
  store i32 -1431655766, i32* %4, align 4
  %7 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 10
  %8 = bitcast %struct.TLayoutQualifier* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, -4294967296
  %11 = icmp eq i64 %10, 4294967296
  %12 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.glsl::BlockLayoutEncoder"* %0 to void (%"class.glsl::BlockLayoutEncoder"*, %class.TType*, i32, i1, i32*, i32*)***
  %15 = load void (%"class.glsl::BlockLayoutEncoder"*, %class.TType*, i32, i1, i32*, i32*)**, void (%"class.glsl::BlockLayoutEncoder"*, %class.TType*, i32, i1, i32*, i32*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.glsl::BlockLayoutEncoder"*, %class.TType*, i32, i1, i32*, i32*)*, void (%"class.glsl::BlockLayoutEncoder"*, %class.TType*, i32, i1, i32*, i32*)** %15, i64 4
  %17 = load void (%"class.glsl::BlockLayoutEncoder"*, %class.TType*, i32, i1, i32*, i32*)*, void (%"class.glsl::BlockLayoutEncoder"*, %class.TType*, i32, i1, i32*, i32*)** %16, align 8
  call void %17(%"class.glsl::BlockLayoutEncoder"* %0, %class.TType* dereferenceable(64) %1, i32 %13, i1 zeroext %11, i32* nonnull %3, i32* nonnull %4) #21
  %18 = getelementptr inbounds %"class.glsl::BlockLayoutEncoder", %"class.glsl::BlockLayoutEncoder"* %0, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = shl i64 %19, 2
  %21 = load i32, i32* %3, align 4
  %22 = shl i32 %21, 2
  %23 = load i32, i32* %4, align 4
  %24 = shl i32 %23, 2
  %25 = icmp sgt i32 %23, 0
  %26 = and i1 %11, %25
  %27 = load i32, i32* %12, align 8
  %28 = bitcast %"class.glsl::BlockLayoutEncoder"* %0 to void (%"class.glsl::BlockLayoutEncoder"*, %class.TType*, i32, i1, i32, i32)***
  %29 = load void (%"class.glsl::BlockLayoutEncoder"*, %class.TType*, i32, i1, i32, i32)**, void (%"class.glsl::BlockLayoutEncoder"*, %class.TType*, i32, i1, i32, i32)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.glsl::BlockLayoutEncoder"*, %class.TType*, i32, i1, i32, i32)*, void (%"class.glsl::BlockLayoutEncoder"*, %class.TType*, i32, i1, i32, i32)** %29, i64 5
  %31 = load void (%"class.glsl::BlockLayoutEncoder"*, %class.TType*, i32, i1, i32, i32)*, void (%"class.glsl::BlockLayoutEncoder"*, %class.TType*, i32, i1, i32, i32)** %30, align 8
  call void %31(%"class.glsl::BlockLayoutEncoder"* %0, %class.TType* dereferenceable(64) %1, i32 %27, i1 zeroext %11, i32 %21, i32 %23) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20
  %32 = zext i32 %22 to i64
  %33 = shl nuw i64 %32, 32
  %34 = and i64 %20, 4294967292
  %35 = or i64 %33, %34
  %36 = insertvalue { i64, i64 } undef, i64 %35, 0
  %37 = zext i1 %26 to i64
  %38 = shl nuw nsw i64 %37, 32
  %39 = zext i32 %24 to i64
  %40 = or i64 %38, %39
  %41 = or i64 %40, -6148915424244269056
  %42 = insertvalue { i64, i64 } %36, i64 %41, 1
  ret { i64, i64 } %42
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i64 @_ZN4glsl18BlockLayoutEncoder16getBlockRegisterERKNS_15BlockMemberInfoE(%"struct.glsl::BlockMemberInfo"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.glsl::BlockMemberInfo", %"struct.glsl::BlockMemberInfo"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = lshr i64 %4, 4
  ret i64 %5
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i64 @_ZN4glsl18BlockLayoutEncoder23getBlockRegisterElementERKNS_15BlockMemberInfoE(%"struct.glsl::BlockMemberInfo"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.glsl::BlockMemberInfo", %"struct.glsl::BlockMemberInfo"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = lshr i32 %3, 2
  %5 = and i32 %4, 3
  %6 = zext i32 %5 to i64
  ret i64 %6
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN4glsl18BlockLayoutEncoder12nextRegisterEv(%"class.glsl::BlockLayoutEncoder"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.glsl::BlockLayoutEncoder", %"class.glsl::BlockLayoutEncoder"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 3
  %5 = and i64 %4, -4
  store i64 %5, i64* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN4glsl18Std140BlockEncoderC2Ev(%"class.glsl::Std140BlockEncoder"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.glsl::Std140BlockEncoder", %"class.glsl::Std140BlockEncoder"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.glsl::Std140BlockEncoder", %"class.glsl::Std140BlockEncoder"* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4glsl18Std140BlockEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN4glsl18Std140BlockEncoder18enterAggregateTypeEv(%"class.glsl::Std140BlockEncoder"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.glsl::Std140BlockEncoder", %"class.glsl::Std140BlockEncoder"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 3
  %5 = and i64 %4, -4
  store i64 %5, i64* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN4glsl18Std140BlockEncoder17exitAggregateTypeEv(%"class.glsl::Std140BlockEncoder"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.glsl::Std140BlockEncoder", %"class.glsl::Std140BlockEncoder"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 3
  %5 = and i64 %4, -4
  store i64 %5, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl18Std140BlockEncoder18getBlockLayoutInfoERK5TTypejbPiS4_(%"class.glsl::Std140BlockEncoder"* nocapture, %class.TType* dereferenceable(64), i32, i1 zeroext, i32* nocapture, i32* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 4
  %8 = load i8, i8* %7, align 4
  %9 = icmp ugt i8 %8, 1
  %10 = icmp eq i32 %2, 0
  br i1 %9, label %11, label %18

11:                                               ; preds = %6
  br i1 %10, label %24, label %12

12:                                               ; preds = %11
  %13 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 3
  %14 = load i8, i8* %13, align 1
  %15 = select i1 %3, i8 %8, i8 %14
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 2
  br label %24

18:                                               ; preds = %6
  br i1 %10, label %19, label %24

19:                                               ; preds = %18
  %20 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %1) #22
  %21 = icmp eq i64 %20, 3
  %22 = and i64 %20, 4294967295
  %23 = select i1 %21, i64 4, i64 %22
  br label %24

24:                                               ; preds = %18, %11, %19, %12
  %25 = phi i32 [ 4, %12 ], [ 4, %11 ], [ 0, %19 ], [ 0, %18 ]
  %26 = phi i32 [ %17, %12 ], [ 0, %11 ], [ 0, %19 ], [ 4, %18 ]
  %27 = phi i64 [ 4, %12 ], [ 4, %11 ], [ %23, %19 ], [ 4, %18 ]
  %28 = getelementptr inbounds %"class.glsl::Std140BlockEncoder", %"class.glsl::Std140BlockEncoder"* %0, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add nsw i64 %27, -1
  %31 = add i64 %30, %29
  %32 = urem i64 %31, %27
  %33 = sub i64 %31, %32
  store i64 %33, i64* %28, align 8
  store i32 %25, i32* %5, align 4
  store i32 %26, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNK5TType14getElementSizeEv(%class.TType*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  switch i8 %3, label %15 [
    i8 37, label %4
    i8 38, label %6
  ]

4:                                                ; preds = %1
  %5 = tail call i64 @_ZNK5TType13getStructSizeEv(%class.TType* %0) #21
  br label %25

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 9
  %8 = bitcast %class.TInterfaceBlock** %7 to %class.TFieldListCollection**
  %9 = load %class.TFieldListCollection*, %class.TFieldListCollection** %8, align 8
  %10 = getelementptr inbounds %class.TFieldListCollection, %class.TFieldListCollection* %9, i64 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %6
  %14 = tail call i64 @_ZNK20TFieldListCollection19calculateObjectSizeEv(%class.TFieldListCollection* %9) #21
  store i64 %14, i64* %10, align 8
  br label %25

15:                                               ; preds = %1
  %16 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %17 = load i8, i8* %16, align 4
  %18 = icmp ugt i8 %17, 1
  %19 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  br i1 %18, label %22, label %25

22:                                               ; preds = %15
  %23 = zext i8 %17 to i64
  %24 = mul nuw nsw i64 %21, %23
  br label %25

25:                                               ; preds = %13, %6, %15, %22, %4
  %26 = phi i64 [ %5, %4 ], [ %24, %22 ], [ %21, %15 ], [ %14, %13 ], [ %11, %6 ]
  ret i64 %26
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl18Std140BlockEncoder13advanceOffsetERK5TTypejbii(%"class.glsl::Std140BlockEncoder"* nocapture, %class.TType* dereferenceable(64), i32, i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %6
  %9 = mul i32 %4, %2
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.glsl::Std140BlockEncoder", %"class.glsl::Std140BlockEncoder"* %0, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %29

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 4
  %15 = load i8, i8* %14, align 4
  %16 = icmp ugt i8 %15, 1
  br i1 %16, label %17, label %25

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 3
  %19 = load i8, i8* %18, align 1
  %20 = select i1 %3, i8 %15, i8 %19
  %21 = zext i8 %20 to i64
  %22 = shl nuw nsw i64 %21, 2
  %23 = getelementptr inbounds %"class.glsl::Std140BlockEncoder", %"class.glsl::Std140BlockEncoder"* %0, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  br label %29

25:                                               ; preds = %13
  %26 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %1) #22
  %27 = getelementptr inbounds %"class.glsl::Std140BlockEncoder", %"class.glsl::Std140BlockEncoder"* %0, i64 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  br label %29

29:                                               ; preds = %17, %25, %8
  %30 = phi i64 [ %24, %17 ], [ %26, %25 ], [ %10, %8 ]
  %31 = phi i64 [ %22, %17 ], [ %28, %25 ], [ %12, %8 ]
  %32 = phi i64* [ %23, %17 ], [ %27, %25 ], [ %11, %8 ]
  %33 = add i64 %31, %30
  store i64 %33, i64* %32, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9AttributeC2Ev(%"struct.glsl::Attribute"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %0, i64 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %0, i64 0, i32 5
  store i32 0, i32* %4, align 8
  %5 = bitcast %"class.std::__1::basic_string.4"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9AttributeC2EjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"struct.glsl::Attribute"*, i32, %"class.std::__1::basic_string.4"* dereferenceable(24), i32, i32, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string.4"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #20
  %9 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %0, i64 0, i32 0
  store i32 %1, i32* %9, align 8
  %10 = tail call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(%"class.std::__1::basic_string.4"* %7, %"class.std::__1::basic_string.4"* dereferenceable(24) %2) #22
  %11 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %0, i64 0, i32 3
  store i32 %3, i32* %11, align 8
  %12 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %0, i64 0, i32 4
  store i32 %4, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %0, i64 0, i32 5
  store i32 %5, i32* %13, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(%"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::basic_string.4"* %0, %1
  br i1 %3, label %33, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = bitcast %"class.std::__1::basic_string.4"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %8, label %23, label %13

13:                                               ; preds = %4
  br i1 %12, label %17, label %14

14:                                               ; preds = %13
  %15 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  %16 = bitcast %"class.std::__1::basic_string.4"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  br label %33

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = tail call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.4"* %0, i8* %19, i64 %21) #21
  br label %33

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_string.4"* %1 to i8*
  %29 = zext i8 %11 to i64
  %30 = select i1 %12, i8* %25, i8* %28
  %31 = select i1 %12, i64 %27, i64 %29
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.4"* %0, i8* %30, i64 %31) #21
  br label %33

33:                                               ; preds = %14, %2, %23, %17
  %34 = phi %"class.std::__1::basic_string.4"* [ %32, %23 ], [ %22, %17 ], [ %0, %2 ], [ %0, %14 ]
  ret %"class.std::__1::basic_string.4"* %34
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden noalias %"class.sw::PixelShader"* @_ZNK4glsl6Shader14getPixelShaderEv(%"class.glsl::Shader"* nocapture readnone) unnamed_addr #6 align 2 {
  ret %"class.sw::PixelShader"* null
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden noalias %"class.sw::VertexShader"* @_ZNK4glsl6Shader15getVertexShaderEv(%"class.glsl::Shader"* nocapture readnone) unnamed_addr #6 align 2 {
  ret %"class.sw::VertexShader"* null
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM15TextureFunctionC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEE14pool_allocatorIcEEE(%"struct.glsl::OutputASM::TextureFunction"* nocapture, %"class.std::__1::basic_string"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"struct.glsl::OutputASM::TextureFunction", %"struct.glsl::OutputASM::TextureFunction"* %0, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.glsl::OutputASM::TextureFunction", %"struct.glsl::OutputASM::TextureFunction"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"struct.glsl::OutputASM::TextureFunction", %"struct.glsl::OutputASM::TextureFunction"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 1
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #20
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  call void @_ZN9TFunction12unmangleNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEE14pool_allocatorIcEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_string"* dereferenceable(32) %1) #22
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = load i64, i64* %8, align 8
  %15 = zext i8 %12 to i64
  %16 = select i1 %13, i64 %14, i64 %15
  %17 = icmp eq i64 %16, 9
  br i1 %17, label %18, label %25

18:                                               ; preds = %2
  %19 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i64 9) #21
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %81, label %21

21:                                               ; preds = %18
  %22 = load i8, i8* %11, align 1
  %23 = load i64, i64* %8, align 8
  %24 = zext i8 %22 to i64
  br label %25

25:                                               ; preds = %21, %2
  %26 = phi i64 [ %24, %21 ], [ %15, %2 ]
  %27 = phi i64 [ %23, %21 ], [ %14, %2 ]
  %28 = phi i8 [ %22, %21 ], [ %12, %2 ]
  %29 = icmp slt i8 %28, 0
  %30 = select i1 %29, i64 %27, i64 %26
  %31 = icmp eq i64 %30, 11
  br i1 %31, label %32, label %39

32:                                               ; preds = %25
  %33 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11) #21
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %81, label %35

35:                                               ; preds = %32
  %36 = load i8, i8* %11, align 1
  %37 = load i64, i64* %8, align 8
  %38 = zext i8 %36 to i64
  br label %39

39:                                               ; preds = %35, %25
  %40 = phi i64 [ %38, %35 ], [ %26, %25 ]
  %41 = phi i64 [ %37, %35 ], [ %27, %25 ]
  %42 = phi i8 [ %36, %35 ], [ %28, %25 ]
  %43 = icmp slt i8 %42, 0
  %44 = select i1 %43, i64 %41, i64 %40
  %45 = icmp eq i64 %44, 7
  br i1 %45, label %46, label %53

46:                                               ; preds = %39
  %47 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7) #21
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %81, label %49

49:                                               ; preds = %46
  %50 = load i8, i8* %11, align 1
  %51 = load i64, i64* %8, align 8
  %52 = zext i8 %50 to i64
  br label %53

53:                                               ; preds = %49, %39
  %54 = phi i64 [ %52, %49 ], [ %40, %39 ]
  %55 = phi i64 [ %51, %49 ], [ %41, %39 ]
  %56 = phi i8 [ %50, %49 ], [ %42, %39 ]
  %57 = icmp slt i8 %56, 0
  %58 = select i1 %57, i64 %55, i64 %54
  %59 = icmp eq i64 %58, 9
  br i1 %59, label %60, label %67

60:                                               ; preds = %53
  %61 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9) #21
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %81, label %63

63:                                               ; preds = %60
  %64 = load i8, i8* %11, align 1
  %65 = load i64, i64* %8, align 8
  %66 = zext i8 %64 to i64
  br label %67

67:                                               ; preds = %63, %53
  %68 = phi i64 [ %66, %63 ], [ %54, %53 ]
  %69 = phi i64 [ %65, %63 ], [ %55, %53 ]
  %70 = phi i8 [ %64, %63 ], [ %56, %53 ]
  %71 = icmp slt i8 %70, 0
  %72 = select i1 %71, i64 %69, i64 %68
  %73 = icmp eq i64 %72, 13
  br i1 %73, label %74, label %82

74:                                               ; preds = %67
  %75 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i64 13) #21
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  %78 = load i8, i8* %11, align 1
  %79 = load i64, i64* %8, align 8
  %80 = zext i8 %78 to i64
  br label %82

81:                                               ; preds = %74, %60, %46, %32, %18
  store i32 0, i32* %4, align 4
  br label %358

82:                                               ; preds = %77, %67
  %83 = phi i64 [ %80, %77 ], [ %68, %67 ]
  %84 = phi i64 [ %79, %77 ], [ %69, %67 ]
  %85 = phi i8 [ %78, %77 ], [ %70, %67 ]
  %86 = icmp slt i8 %85, 0
  %87 = select i1 %86, i64 %84, i64 %83
  %88 = icmp eq i64 %87, 13
  br i1 %88, label %89, label %96

89:                                               ; preds = %82
  %90 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i64 13) #21
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %124, label %92

92:                                               ; preds = %89
  %93 = load i8, i8* %11, align 1
  %94 = load i64, i64* %8, align 8
  %95 = zext i8 %93 to i64
  br label %96

96:                                               ; preds = %92, %82
  %97 = phi i64 [ %95, %92 ], [ %83, %82 ]
  %98 = phi i64 [ %94, %92 ], [ %84, %82 ]
  %99 = phi i8 [ %93, %92 ], [ %85, %82 ]
  %100 = icmp slt i8 %99, 0
  %101 = select i1 %100, i64 %98, i64 %97
  %102 = icmp eq i64 %101, 11
  br i1 %102, label %103, label %110

103:                                              ; preds = %96
  %104 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i64 11) #21
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %124, label %106

106:                                              ; preds = %103
  %107 = load i8, i8* %11, align 1
  %108 = load i64, i64* %8, align 8
  %109 = zext i8 %107 to i64
  br label %110

110:                                              ; preds = %106, %96
  %111 = phi i64 [ %109, %106 ], [ %97, %96 ]
  %112 = phi i64 [ %108, %106 ], [ %98, %96 ]
  %113 = phi i8 [ %107, %106 ], [ %99, %96 ]
  %114 = icmp slt i8 %113, 0
  %115 = select i1 %114, i64 %112, i64 %111
  %116 = icmp eq i64 %115, 17
  br i1 %116, label %117, label %125

117:                                              ; preds = %110
  %118 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i64 17) #21
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %124, label %120

120:                                              ; preds = %117
  %121 = load i8, i8* %11, align 1
  %122 = load i64, i64* %8, align 8
  %123 = zext i8 %121 to i64
  br label %125

124:                                              ; preds = %117, %103, %89
  store i32 0, i32* %4, align 4
  store i8 1, i8* %5, align 4
  br label %358

125:                                              ; preds = %120, %110
  %126 = phi i64 [ %123, %120 ], [ %111, %110 ]
  %127 = phi i64 [ %122, %120 ], [ %112, %110 ]
  %128 = phi i8 [ %121, %120 ], [ %113, %110 ]
  %129 = icmp slt i8 %128, 0
  %130 = select i1 %129, i64 %127, i64 %126
  %131 = icmp eq i64 %130, 12
  br i1 %131, label %132, label %139

132:                                              ; preds = %125
  %133 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i64 12) #21
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %167, label %135

135:                                              ; preds = %132
  %136 = load i8, i8* %11, align 1
  %137 = load i64, i64* %8, align 8
  %138 = zext i8 %136 to i64
  br label %139

139:                                              ; preds = %135, %125
  %140 = phi i64 [ %138, %135 ], [ %126, %125 ]
  %141 = phi i64 [ %137, %135 ], [ %127, %125 ]
  %142 = phi i8 [ %136, %135 ], [ %128, %125 ]
  %143 = icmp slt i8 %142, 0
  %144 = select i1 %143, i64 %141, i64 %140
  %145 = icmp eq i64 %144, 14
  br i1 %145, label %146, label %153

146:                                              ; preds = %139
  %147 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 14) #21
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %167, label %149

149:                                              ; preds = %146
  %150 = load i8, i8* %11, align 1
  %151 = load i64, i64* %8, align 8
  %152 = zext i8 %150 to i64
  br label %153

153:                                              ; preds = %149, %139
  %154 = phi i64 [ %152, %149 ], [ %140, %139 ]
  %155 = phi i64 [ %151, %149 ], [ %141, %139 ]
  %156 = phi i8 [ %150, %149 ], [ %142, %139 ]
  %157 = icmp slt i8 %156, 0
  %158 = select i1 %157, i64 %155, i64 %154
  %159 = icmp eq i64 %158, 10
  br i1 %159, label %160, label %168

160:                                              ; preds = %153
  %161 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i64 10) #21
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %167, label %163

163:                                              ; preds = %160
  %164 = load i8, i8* %11, align 1
  %165 = load i64, i64* %8, align 8
  %166 = zext i8 %164 to i64
  br label %168

167:                                              ; preds = %160, %146, %132
  store i32 1, i32* %4, align 4
  br label %358

168:                                              ; preds = %163, %153
  %169 = phi i64 [ %166, %163 ], [ %154, %153 ]
  %170 = phi i64 [ %165, %163 ], [ %155, %153 ]
  %171 = phi i8 [ %164, %163 ], [ %156, %153 ]
  %172 = icmp slt i8 %171, 0
  %173 = select i1 %172, i64 %170, i64 %169
  %174 = icmp eq i64 %173, 16
  br i1 %174, label %175, label %182

175:                                              ; preds = %168
  %176 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i64 16) #21
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %196, label %178

178:                                              ; preds = %175
  %179 = load i8, i8* %11, align 1
  %180 = load i64, i64* %8, align 8
  %181 = zext i8 %179 to i64
  br label %182

182:                                              ; preds = %178, %168
  %183 = phi i64 [ %181, %178 ], [ %169, %168 ]
  %184 = phi i64 [ %180, %178 ], [ %170, %168 ]
  %185 = phi i8 [ %179, %178 ], [ %171, %168 ]
  %186 = icmp slt i8 %185, 0
  %187 = select i1 %186, i64 %184, i64 %183
  %188 = icmp eq i64 %187, 14
  br i1 %188, label %189, label %197

189:                                              ; preds = %182
  %190 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i64 14) #21
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %196, label %192

192:                                              ; preds = %189
  %193 = load i8, i8* %11, align 1
  %194 = load i64, i64* %8, align 8
  %195 = zext i8 %193 to i64
  br label %197

196:                                              ; preds = %189, %175
  store i32 1, i32* %4, align 4
  store i8 1, i8* %5, align 4
  br label %358

197:                                              ; preds = %192, %182
  %198 = phi i64 [ %195, %192 ], [ %183, %182 ]
  %199 = phi i64 [ %194, %192 ], [ %184, %182 ]
  %200 = phi i8 [ %193, %192 ], [ %185, %182 ]
  %201 = icmp slt i8 %200, 0
  %202 = select i1 %201, i64 %199, i64 %198
  %203 = icmp eq i64 %202, 11
  br i1 %203, label %204, label %212

204:                                              ; preds = %197
  %205 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i64 11) #21
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %211, label %207

207:                                              ; preds = %204
  %208 = load i8, i8* %11, align 1
  %209 = load i64, i64* %8, align 8
  %210 = zext i8 %208 to i64
  br label %212

211:                                              ; preds = %204
  store i32 2, i32* %4, align 4
  br label %358

212:                                              ; preds = %207, %197
  %213 = phi i64 [ %210, %207 ], [ %198, %197 ]
  %214 = phi i64 [ %209, %207 ], [ %199, %197 ]
  %215 = phi i8 [ %208, %207 ], [ %200, %197 ]
  %216 = icmp slt i8 %215, 0
  %217 = select i1 %216, i64 %214, i64 %213
  %218 = icmp eq i64 %217, 13
  br i1 %218, label %219, label %227

219:                                              ; preds = %212
  %220 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0), i64 13) #21
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %226, label %222

222:                                              ; preds = %219
  %223 = load i8, i8* %11, align 1
  %224 = load i64, i64* %8, align 8
  %225 = zext i8 %223 to i64
  br label %227

226:                                              ; preds = %219
  store i32 0, i32* %4, align 4
  store i8 1, i8* %6, align 1
  br label %358

227:                                              ; preds = %222, %212
  %228 = phi i64 [ %225, %222 ], [ %213, %212 ]
  %229 = phi i64 [ %224, %222 ], [ %214, %212 ]
  %230 = phi i8 [ %223, %222 ], [ %215, %212 ]
  %231 = icmp slt i8 %230, 0
  %232 = select i1 %231, i64 %229, i64 %228
  %233 = icmp eq i64 %232, 17
  br i1 %233, label %234, label %242

234:                                              ; preds = %227
  %235 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i64 17) #21
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %241, label %237

237:                                              ; preds = %234
  %238 = load i8, i8* %11, align 1
  %239 = load i64, i64* %8, align 8
  %240 = zext i8 %238 to i64
  br label %242

241:                                              ; preds = %234
  store i32 0, i32* %4, align 4
  store i8 1, i8* %6, align 1
  store i8 1, i8* %5, align 4
  br label %358

242:                                              ; preds = %237, %227
  %243 = phi i64 [ %240, %237 ], [ %228, %227 ]
  %244 = phi i64 [ %239, %237 ], [ %229, %227 ]
  %245 = phi i8 [ %238, %237 ], [ %230, %227 ]
  %246 = icmp slt i8 %245, 0
  %247 = select i1 %246, i64 %244, i64 %243
  %248 = icmp eq i64 %247, 16
  br i1 %248, label %249, label %257

249:                                              ; preds = %242
  %250 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i64 0, i64 0), i64 16) #21
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %256, label %252

252:                                              ; preds = %249
  %253 = load i8, i8* %11, align 1
  %254 = load i64, i64* %8, align 8
  %255 = zext i8 %253 to i64
  br label %257

256:                                              ; preds = %249
  store i32 1, i32* %4, align 4
  store i8 1, i8* %6, align 1
  br label %358

257:                                              ; preds = %252, %242
  %258 = phi i64 [ %255, %252 ], [ %243, %242 ]
  %259 = phi i64 [ %254, %252 ], [ %244, %242 ]
  %260 = phi i8 [ %253, %252 ], [ %245, %242 ]
  %261 = icmp slt i8 %260, 0
  %262 = select i1 %261, i64 %259, i64 %258
  %263 = icmp eq i64 %262, 20
  br i1 %263, label %264, label %272

264:                                              ; preds = %257
  %265 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i64 20) #21
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %271, label %267

267:                                              ; preds = %264
  %268 = load i8, i8* %11, align 1
  %269 = load i64, i64* %8, align 8
  %270 = zext i8 %268 to i64
  br label %272

271:                                              ; preds = %264
  store i32 1, i32* %4, align 4
  store i8 1, i8* %5, align 4
  store i8 1, i8* %6, align 1
  br label %358

272:                                              ; preds = %267, %257
  %273 = phi i64 [ %270, %267 ], [ %258, %257 ]
  %274 = phi i64 [ %269, %267 ], [ %259, %257 ]
  %275 = phi i8 [ %268, %267 ], [ %260, %257 ]
  %276 = icmp slt i8 %275, 0
  %277 = select i1 %276, i64 %274, i64 %273
  %278 = icmp eq i64 %277, 10
  br i1 %278, label %279, label %287

279:                                              ; preds = %272
  %280 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i64 10) #21
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %286, label %282

282:                                              ; preds = %279
  %283 = load i8, i8* %11, align 1
  %284 = load i64, i64* %8, align 8
  %285 = zext i8 %283 to i64
  br label %287

286:                                              ; preds = %279
  store i32 3, i32* %4, align 4
  br label %358

287:                                              ; preds = %282, %272
  %288 = phi i64 [ %285, %282 ], [ %273, %272 ]
  %289 = phi i64 [ %284, %282 ], [ %274, %272 ]
  %290 = phi i8 [ %283, %282 ], [ %275, %272 ]
  %291 = icmp slt i8 %290, 0
  %292 = select i1 %291, i64 %289, i64 %288
  %293 = icmp eq i64 %292, 16
  br i1 %293, label %294, label %302

294:                                              ; preds = %287
  %295 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i64 16) #21
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %301, label %297

297:                                              ; preds = %294
  %298 = load i8, i8* %11, align 1
  %299 = load i64, i64* %8, align 8
  %300 = zext i8 %298 to i64
  br label %302

301:                                              ; preds = %294
  store i32 3, i32* %4, align 4
  store i8 1, i8* %6, align 1
  br label %358

302:                                              ; preds = %297, %287
  %303 = phi i64 [ %300, %297 ], [ %288, %287 ]
  %304 = phi i64 [ %299, %297 ], [ %289, %287 ]
  %305 = phi i8 [ %298, %297 ], [ %290, %287 ]
  %306 = icmp slt i8 %305, 0
  %307 = select i1 %306, i64 %304, i64 %303
  %308 = icmp eq i64 %307, 11
  br i1 %308, label %309, label %317

309:                                              ; preds = %302
  %310 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0), i64 11) #21
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %316, label %312

312:                                              ; preds = %309
  %313 = load i8, i8* %11, align 1
  %314 = load i64, i64* %8, align 8
  %315 = zext i8 %313 to i64
  br label %317

316:                                              ; preds = %309
  store i32 4, i32* %4, align 4
  br label %358

317:                                              ; preds = %312, %302
  %318 = phi i64 [ %315, %312 ], [ %303, %302 ]
  %319 = phi i64 [ %314, %312 ], [ %304, %302 ]
  %320 = phi i8 [ %313, %312 ], [ %305, %302 ]
  %321 = icmp slt i8 %320, 0
  %322 = select i1 %321, i64 %319, i64 %318
  %323 = icmp eq i64 %322, 17
  br i1 %323, label %324, label %332

324:                                              ; preds = %317
  %325 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i64 17) #21
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %331, label %327

327:                                              ; preds = %324
  %328 = load i8, i8* %11, align 1
  %329 = load i64, i64* %8, align 8
  %330 = zext i8 %328 to i64
  br label %332

331:                                              ; preds = %324
  store i32 4, i32* %4, align 4
  store i8 1, i8* %6, align 1
  br label %358

332:                                              ; preds = %327, %317
  %333 = phi i64 [ %330, %327 ], [ %318, %317 ]
  %334 = phi i64 [ %329, %327 ], [ %319, %317 ]
  %335 = phi i8 [ %328, %327 ], [ %320, %317 ]
  %336 = icmp slt i8 %335, 0
  %337 = select i1 %336, i64 %334, i64 %333
  %338 = icmp eq i64 %337, 15
  br i1 %338, label %339, label %347

339:                                              ; preds = %332
  %340 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0), i64 15) #21
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %346, label %342

342:                                              ; preds = %339
  %343 = load i8, i8* %11, align 1
  %344 = load i64, i64* %8, align 8
  %345 = zext i8 %343 to i64
  br label %347

346:                                              ; preds = %339
  store i32 4, i32* %4, align 4
  store i8 1, i8* %5, align 4
  br label %358

347:                                              ; preds = %342, %332
  %348 = phi i64 [ %345, %342 ], [ %333, %332 ]
  %349 = phi i64 [ %344, %342 ], [ %334, %332 ]
  %350 = phi i8 [ %343, %342 ], [ %335, %332 ]
  %351 = icmp slt i8 %350, 0
  %352 = select i1 %351, i64 %349, i64 %348
  %353 = icmp eq i64 %352, 21
  br i1 %353, label %354, label %358

354:                                              ; preds = %347
  %355 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i64 0, i64 0), i64 21) #21
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %358

357:                                              ; preds = %354
  store i32 4, i32* %4, align 4
  store i8 1, i8* %5, align 4
  store i8 1, i8* %6, align 1
  br label %358

358:                                              ; preds = %347, %124, %196, %226, %256, %286, %316, %346, %354, %357, %331, %301, %271, %241, %211, %167, %81
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN9TFunction12unmangleNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEE14pool_allocatorIcEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE4findEcm(%"class.std::__1::basic_string"* %1, i8 signext 40, i64 0) #21
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #21
  store %class.TPoolAllocator* %13, %class.TPoolAllocator** %12, align 8
  %14 = icmp ugt i64 %11, -17
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %16) #23
  unreachable

17:                                               ; preds = %2
  %18 = icmp ult i64 %11, 23
  br i1 %18, label %27, label %19

19:                                               ; preds = %17
  %20 = add nuw i64 %11, 16
  %21 = and i64 %20, -16
  %22 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %13, i64 %21) #21
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %26, align 8
  br label %33

27:                                               ; preds = %17
  %28 = trunc i64 %11 to i8
  %29 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 %28, i8* %30, align 1
  %31 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %32 = icmp eq i64 %11, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %27, %19
  %34 = phi i8* [ %22, %19 ], [ %31, %27 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %10, i64 %11, i1 false) #20
  br label %35

35:                                               ; preds = %27, %33
  %36 = phi i8* [ %31, %27 ], [ %34, %33 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %11
  store i8 0, i8* %37, align 1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASMC2ER13TParseContextPNS_6ShaderE(%"class.glsl::OutputASM"*, %class.TParseContext* dereferenceable(200), %"class.glsl::Shader"*) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::__split_buffer.191", align 8
  %5 = alloca %"struct.glsl::Function", align 8
  %6 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0, i32 1
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0, i32 2
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %9, align 2
  %10 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0, i32 4
  %11 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 29, i1 false)
  %12 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #21
  store %class.TPoolAllocator* %12, %class.TPoolAllocator** %11, align 8
  %13 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0, i32 7
  %14 = bitcast %"class.std::__1::vector.83"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN4glsl9OutputASME, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %15 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 1
  store %"class.glsl::Shader"* %2, %"class.glsl::Shader"** %15, align 8
  %16 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15
  %18 = bitcast %"class.std::__1::vector.111"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #20
  %19 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 17, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_node_base"** %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #20
  %23 = bitcast %"class.std::__1::vector.90"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 168, i1 false)
  store %"class.std::__1::__tree_end_node"* %20, %"class.std::__1::__tree_end_node"** %21, align 8
  %24 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  store %class.TParseContext* %1, %class.TParseContext** %24, align 8
  %25 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 2
  %26 = icmp eq %"class.glsl::Shader"* %2, null
  %27 = bitcast %"class.sw::Shader"** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false)
  br i1 %26, label %46, label %28

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 4
  %30 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 3
  %31 = bitcast %"class.glsl::Shader"* %2 to %"class.sw::Shader"* (%"class.glsl::Shader"*)***
  %32 = load %"class.sw::Shader"* (%"class.glsl::Shader"*)**, %"class.sw::Shader"* (%"class.glsl::Shader"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.sw::Shader"* (%"class.glsl::Shader"*)*, %"class.sw::Shader"* (%"class.glsl::Shader"*)** %32, i64 2
  %34 = load %"class.sw::Shader"* (%"class.glsl::Shader"*)*, %"class.sw::Shader"* (%"class.glsl::Shader"*)** %33, align 8
  %35 = tail call %"class.sw::Shader"* %34(%"class.glsl::Shader"* nonnull %2) #21
  store %"class.sw::Shader"* %35, %"class.sw::Shader"** %25, align 8
  %36 = bitcast %"class.glsl::Shader"* %2 to %"class.sw::PixelShader"* (%"class.glsl::Shader"*)***
  %37 = load %"class.sw::PixelShader"* (%"class.glsl::Shader"*)**, %"class.sw::PixelShader"* (%"class.glsl::Shader"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.sw::PixelShader"* (%"class.glsl::Shader"*)*, %"class.sw::PixelShader"* (%"class.glsl::Shader"*)** %37, i64 3
  %39 = load %"class.sw::PixelShader"* (%"class.glsl::Shader"*)*, %"class.sw::PixelShader"* (%"class.glsl::Shader"*)** %38, align 8
  %40 = tail call %"class.sw::PixelShader"* %39(%"class.glsl::Shader"* nonnull %2) #21
  store %"class.sw::PixelShader"* %40, %"class.sw::PixelShader"** %30, align 8
  %41 = bitcast %"class.glsl::Shader"* %2 to %"class.sw::VertexShader"* (%"class.glsl::Shader"*)***
  %42 = load %"class.sw::VertexShader"* (%"class.glsl::Shader"*)**, %"class.sw::VertexShader"* (%"class.glsl::Shader"*)*** %41, align 8
  %43 = getelementptr inbounds %"class.sw::VertexShader"* (%"class.glsl::Shader"*)*, %"class.sw::VertexShader"* (%"class.glsl::Shader"*)** %42, i64 4
  %44 = load %"class.sw::VertexShader"* (%"class.glsl::Shader"*)*, %"class.sw::VertexShader"* (%"class.glsl::Shader"*)** %43, align 8
  %45 = tail call %"class.sw::VertexShader"* %44(%"class.glsl::Shader"* nonnull %2) #21
  store %"class.sw::VertexShader"* %45, %"class.sw::VertexShader"** %29, align 8
  br label %46

46:                                               ; preds = %3, %28
  %47 = bitcast %"struct.glsl::Function"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %47) #20
  %48 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %5, i64 0, i32 0
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %5, i64 0, i32 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEC2IDnEEPKc(%"class.std::__1::basic_string"* %49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0)) #21
  %50 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %5, i64 0, i32 2
  %51 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15, i32 0, i32 1
  %52 = bitcast %class.TVector.76** %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false)
  %53 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %51, align 8
  %54 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %55 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %54, align 8
  %56 = icmp ult %"struct.glsl::Function"* %53, %55
  %57 = ptrtoint %"struct.glsl::Function"* %55 to i64
  br i1 %56, label %58, label %75

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %53, i64 0, i32 0
  %60 = load i32, i32* %48, align 8
  store i32 %60, i32* %59, align 8
  %61 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %53, i64 0, i32 1
  %62 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %63 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false) #20
  %64 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %53, i64 0, i32 1, i32 0, i32 1
  %65 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %5, i64 0, i32 1, i32 0, i32 1
  %66 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %64 to i64*
  store i64 %67, i64* %68, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #20
  %69 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %53, i64 0, i32 2
  %70 = bitcast %class.TVector.76** %69 to i8*
  %71 = bitcast %class.TVector.76** %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 16, i1 false) #20
  %72 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %53, i64 1
  %73 = ptrtoint %"struct.glsl::Function"* %72 to i64
  %74 = bitcast %"struct.glsl::Function"** %51 to i64*
  store i64 %73, i64* %74, align 8
  br label %134

75:                                               ; preds = %46
  %76 = ptrtoint %"struct.glsl::Function"* %53 to i64
  %77 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15, i32 0, i32 2
  %78 = bitcast %"class.std::__1::__compressed_pair.113"* %77 to %"class.std::__1::allocator.116"*
  %79 = bitcast %"struct.std::__1::__split_buffer.191"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %79) #20
  %80 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %4, i64 0, i32 0
  %81 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %4, i64 0, i32 1
  %82 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %4, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 40, i1 false) #20
  %83 = bitcast %"class.std::__1::vector.111"* %17 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %76, %84
  %86 = sdiv exact i64 %85, 56
  %87 = add nsw i64 %86, 1
  %88 = icmp ugt i64 %87, 329406144173384850
  br i1 %88, label %89, label %91

89:                                               ; preds = %75
  %90 = bitcast %"class.std::__1::vector.111"* %17 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %90) #23
  unreachable

91:                                               ; preds = %75
  %92 = sub i64 %57, %84
  %93 = sdiv exact i64 %92, 56
  %94 = icmp ult i64 %93, 164703072086692425
  br i1 %94, label %95, label %99

95:                                               ; preds = %91
  %96 = shl nsw i64 %93, 1
  %97 = icmp ult i64 %96, %87
  %98 = select i1 %97, i64 %87, i64 %96
  br label %99

99:                                               ; preds = %95, %91
  %100 = phi i64 [ %98, %95 ], [ 329406144173384850, %91 ]
  call void @_ZNSt3__114__split_bufferIN4glsl8FunctionERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer.191"* nonnull %4, i64 %100, i64 %86, %"class.std::__1::allocator.116"* dereferenceable(1) %78) #21
  %101 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %82, align 8
  %102 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %101, i64 0, i32 0
  %103 = load i32, i32* %48, align 8
  store i32 %103, i32* %102, align 8
  %104 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %101, i64 0, i32 1
  %105 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  %106 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #20
  %107 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %101, i64 0, i32 1, i32 0, i32 1
  %108 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %5, i64 0, i32 1, i32 0, i32 1
  %109 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %107 to i64*
  store i64 %110, i64* %111, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false) #20
  %112 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %101, i64 0, i32 2
  %113 = bitcast %class.TVector.76** %112 to i8*
  %114 = bitcast %class.TVector.76** %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 16, i1 false) #20
  %115 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %82, align 8
  %116 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %115, i64 1
  store %"struct.glsl::Function"* %116, %"struct.glsl::Function"** %82, align 8
  call void @_ZNSt3__16vectorIN4glsl8FunctionENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.111"* %17, %"struct.std::__1::__split_buffer.191"* nonnull dereferenceable(40) %4) #21
  %117 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %81, align 8
  %118 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %82, align 8
  %119 = icmp eq %"struct.glsl::Function"* %118, %117
  br i1 %119, label %128, label %120

120:                                              ; preds = %99
  %121 = ptrtoint %"struct.glsl::Function"* %117 to i64
  %122 = getelementptr %"struct.glsl::Function", %"struct.glsl::Function"* %118, i64 -1, i32 0
  %123 = ptrtoint i32* %122 to i64
  %124 = sub i64 %123, %121
  %125 = udiv i64 %124, 56
  %126 = xor i64 %125, -1
  %127 = getelementptr %"struct.glsl::Function", %"struct.glsl::Function"* %118, i64 %126
  store %"struct.glsl::Function"* %127, %"struct.glsl::Function"** %82, align 8
  br label %128

128:                                              ; preds = %120, %99
  %129 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %80, align 8
  %130 = icmp eq %"struct.glsl::Function"* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %128
  %132 = bitcast %"struct.glsl::Function"* %129 to i8*
  call void @_ZdlPv(i8* %132) #24
  br label %133

133:                                              ; preds = %128, %131
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %79) #20
  br label %134

134:                                              ; preds = %58, %133
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %47) #20
  %135 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 14
  store i32 0, i32* %135, align 8
  %136 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 16
  store i8 14, i8* %136, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASMD2Ev(%"class.glsl::OutputASM"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN4glsl9OutputASME, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 17, i32 0
  %4 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.118"* %3, %"class.std::__1::__tree_node"* %6) #21
  %7 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15, i32 0, i32 0
  %8 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %7, align 8
  %9 = icmp eq %"struct.glsl::Function"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %"struct.glsl::Function"* %8 to i64
  %12 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15, i32 0, i32 1
  %13 = bitcast %"struct.glsl::Function"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %"struct.glsl::Function"* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #24
  br label %15

15:                                               ; preds = %1, %10
  %16 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNSt3__113__vector_baseINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEENS7_ISC_EEED2Ev(%"class.std::__1::__vector_base.98"* %16) #21
  %17 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 10, i32 0, i32 0
  %18 = load %class.TIntermTyped**, %class.TIntermTyped*** %17, align 8
  %19 = icmp eq %class.TIntermTyped** %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = ptrtoint %class.TIntermTyped** %18 to i64
  %22 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 10, i32 0, i32 1
  %23 = bitcast %class.TIntermTyped*** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %class.TIntermTyped** %18 to i8*
  tail call void @_ZdlPv(i8* %24) #24
  br label %25

25:                                               ; preds = %15, %20
  %26 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 9, i32 0, i32 0
  %27 = load %class.TIntermTyped**, %class.TIntermTyped*** %26, align 8
  %28 = icmp eq %class.TIntermTyped** %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = ptrtoint %class.TIntermTyped** %27 to i64
  %31 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 9, i32 0, i32 1
  %32 = bitcast %class.TIntermTyped*** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast %class.TIntermTyped** %27 to i8*
  tail call void @_ZdlPv(i8* %33) #24
  br label %34

34:                                               ; preds = %25, %29
  %35 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 8, i32 0, i32 0
  %36 = load %class.TIntermTyped**, %class.TIntermTyped*** %35, align 8
  %37 = icmp eq %class.TIntermTyped** %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = ptrtoint %class.TIntermTyped** %36 to i64
  %40 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 8, i32 0, i32 1
  %41 = bitcast %class.TIntermTyped*** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = bitcast %class.TIntermTyped** %36 to i8*
  tail call void @_ZdlPv(i8* %42) #24
  br label %43

43:                                               ; preds = %34, %38
  %44 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 7, i32 0, i32 0
  %45 = load %class.TIntermTyped**, %class.TIntermTyped*** %44, align 8
  %46 = icmp eq %class.TIntermTyped** %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = ptrtoint %class.TIntermTyped** %45 to i64
  %49 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 7, i32 0, i32 1
  %50 = bitcast %class.TIntermTyped*** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %class.TIntermTyped** %45 to i8*
  tail call void @_ZdlPv(i8* %51) #24
  br label %52

52:                                               ; preds = %43, %47
  %53 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 6, i32 0, i32 0
  %54 = load %class.TIntermTyped**, %class.TIntermTyped*** %53, align 8
  %55 = icmp eq %class.TIntermTyped** %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = ptrtoint %class.TIntermTyped** %54 to i64
  %58 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 6, i32 0, i32 1
  %59 = bitcast %class.TIntermTyped*** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast %class.TIntermTyped** %54 to i8*
  tail call void @_ZdlPv(i8* %60) #24
  br label %61

61:                                               ; preds = %52, %56
  %62 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 5, i32 0, i32 0
  %63 = load %class.TIntermTyped**, %class.TIntermTyped*** %62, align 8
  %64 = icmp eq %class.TIntermTyped** %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = ptrtoint %class.TIntermTyped** %63 to i64
  %67 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 5, i32 0, i32 1
  %68 = bitcast %class.TIntermTyped*** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast %class.TIntermTyped** %63 to i8*
  tail call void @_ZdlPv(i8* %69) #24
  br label %70

70:                                               ; preds = %61, %65
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %71 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %72 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %71, align 8
  %73 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %72 to i64
  %76 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0, i32 7, i32 0, i32 1
  %77 = bitcast %"struct.TIntermTraverser::ParentBlock"** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = bitcast %"struct.TIntermTraverser::ParentBlock"* %72 to i8*
  tail call void @_ZdlPv(i8* %78) #24
  br label %79

79:                                               ; preds = %74, %70
  %80 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %81 = load %class.TIntermNode**, %class.TIntermNode*** %80, align 8
  %82 = icmp eq %class.TIntermNode** %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %79
  %84 = ptrtoint %class.TIntermNode** %81 to i64
  %85 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 1
  %86 = bitcast %class.TIntermNode*** %85 to i64*
  store i64 %84, i64* %86, align 8
  br label %87

87:                                               ; preds = %79, %83
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASMD0Ev(%"class.glsl::OutputASM"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4glsl9OutputASMD2Ev(%"class.glsl::OutputASM"* %0) #21
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM6outputEv(%"class.glsl::OutputASM"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 2
  %3 = load %"class.sw::Shader"*, %"class.sw::Shader"** %2, align 8
  %4 = icmp eq %"class.sw::Shader"* %3, null
  br i1 %4, label %37, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 12
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 13
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %9 = load %class.TParseContext*, %class.TParseContext** %8, align 8
  %10 = getelementptr inbounds %class.TParseContext, %class.TParseContext* %9, i64 0, i32 12
  %11 = load %class.TIntermNode*, %class.TIntermNode** %10, align 8
  %12 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %13 = bitcast %class.TIntermNode* %11 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %14 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %13, align 8
  %15 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %14, align 8
  tail call void %15(%class.TIntermNode* %11, %class.TIntermTraverser* %12) #21
  %16 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15
  %17 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15, i32 0, i32 1
  %18 = bitcast %"struct.glsl::Function"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.111"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = sdiv exact i64 %22, 56
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %25, label %30

25:                                               ; preds = %5
  %26 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 25, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %27 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %26, i64 0, i32 11, i32 0, i32 1
  store i8 18, i8* %27, align 8
  %28 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %26, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %28, align 8
  %29 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 28, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %30

30:                                               ; preds = %25, %5
  store i32 1, i32* %6, align 8
  store i32 0, i32* %7, align 4
  %31 = load %class.TParseContext*, %class.TParseContext** %8, align 8
  %32 = getelementptr inbounds %class.TParseContext, %class.TParseContext* %31, i64 0, i32 12
  %33 = load %class.TIntermNode*, %class.TIntermNode** %32, align 8
  %34 = bitcast %class.TIntermNode* %33 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %35 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %34, align 8
  %36 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %35, align 8
  tail call void %36(%class.TIntermNode* %33, %class.TIntermTraverser* %12) #21
  br label %37

37:                                               ; preds = %1, %30
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM10emitShaderENS0_5ScopeE(%"class.glsl::OutputASM"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 12
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 13
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %6 = load %class.TParseContext*, %class.TParseContext** %5, align 8
  %7 = getelementptr inbounds %class.TParseContext, %class.TParseContext* %6, i64 0, i32 12
  %8 = load %class.TIntermNode*, %class.TIntermNode** %7, align 8
  %9 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %10 = bitcast %class.TIntermNode* %8 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %11 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %10, align 8
  %12 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %11, align 8
  tail call void %12(%class.TIntermNode* %8, %class.TIntermTraverser* %9) #21
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden nonnull %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_S7_S7_(%"class.glsl::OutputASM"*, i32, %class.TIntermTyped*, %class.TIntermNode*, %class.TIntermNode*, %class.TIntermNode*, %class.TIntermNode*, %class.TIntermNode*) local_unnamed_addr #0 align 2 {
  %9 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %1, %class.TIntermTyped* %2, i32 0, %class.TIntermNode* %3, i32 0, %class.TIntermNode* %4, i32 0, %class.TIntermNode* %5, i32 0, %class.TIntermNode* %6, i32 0, %class.TIntermNode* %7, i32 0) #22
  ret %"struct.sw::Shader::Instruction"* %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM13freeTemporaryEPNS_9TemporaryE(%"class.glsl::OutputASM"* nocapture readonly, %"class.glsl::Temporary"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %1, i64 0, i32 0, i32 0
  %5 = tail call i32 @_ZN4glsl9OutputASM6lookupERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_(%"class.glsl::OutputASM"* undef, %"class.std::__1::vector.90"* dereferenceable(24) %3, %class.TIntermTyped* %4) #21
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %3, i64 0, i32 0, i32 0
  %10 = load %class.TIntermTyped**, %class.TIntermTyped*** %9, align 8
  %11 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %10, i64 %8
  store %class.TIntermTyped* null, %class.TIntermTyped** %11, align 8
  br label %12

12:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM4freeERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_(%"class.glsl::OutputASM"* nocapture readnone, %"class.std::__1::vector.90"* nocapture readonly dereferenceable(24), %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN4glsl9OutputASM6lookupERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_(%"class.glsl::OutputASM"* undef, %"class.std::__1::vector.90"* dereferenceable(24) %1, %class.TIntermTyped* %2) #22
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %1, i64 0, i32 0, i32 0
  %9 = load %class.TIntermTyped**, %class.TIntermTyped*** %8, align 8
  %10 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %9, i64 %7
  store %class.TIntermTyped* null, %class.TIntermTyped** %10, align 8
  br label %11

11:                                               ; preds = %6, %3
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK4glsl9OutputASM9getOpcodeEN2sw6Shader6OpcodeEP12TIntermTyped(%"class.glsl::OutputASM"* nocapture readnone, i32, %class.TIntermTyped* nocapture readonly) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 8
  switch i32 %1, label %49 [
    i32 268435510, label %6
    i32 35, label %10
    i32 34, label %13
    i32 2, label %16
    i32 3, label %20
    i32 5, label %24
    i32 268435490, label %28
    i32 268435574, label %33
    i32 268435576, label %36
    i32 10, label %39
    i32 11, label %44
  ]

6:                                                ; preds = %3
  %7 = and i8 %5, -2
  %8 = icmp eq i8 %7, 2
  %9 = select i1 %8, i32 268435566, i32 268435510
  br label %49

10:                                               ; preds = %3
  %11 = icmp eq i8 %5, 2
  %12 = select i1 %11, i32 268435567, i32 35
  br label %49

13:                                               ; preds = %3
  %14 = icmp eq i8 %5, 2
  %15 = select i1 %14, i32 268435568, i32 34
  br label %49

16:                                               ; preds = %3
  %17 = and i8 %5, -2
  %18 = icmp eq i8 %17, 2
  %19 = select i1 %18, i32 268435569, i32 2
  br label %49

20:                                               ; preds = %3
  %21 = and i8 %5, -2
  %22 = icmp eq i8 %21, 2
  %23 = select i1 %22, i32 268435570, i32 3
  br label %49

24:                                               ; preds = %3
  %25 = and i8 %5, -2
  %26 = icmp eq i8 %25, 2
  %27 = select i1 %26, i32 268435571, i32 5
  br label %49

28:                                               ; preds = %3
  %29 = icmp eq i8 %5, 3
  %30 = select i1 %29, i32 268435579, i32 268435490
  %31 = icmp eq i8 %5, 2
  %32 = select i1 %31, i32 268435572, i32 %30
  br label %49

33:                                               ; preds = %3
  %34 = icmp eq i8 %5, 3
  %35 = select i1 %34, i32 268435580, i32 268435574
  br label %49

36:                                               ; preds = %3
  %37 = icmp eq i8 %5, 3
  %38 = select i1 %37, i32 268435581, i32 268435576
  br label %49

39:                                               ; preds = %3
  %40 = icmp eq i8 %5, 3
  %41 = select i1 %40, i32 268435582, i32 10
  %42 = icmp eq i8 %5, 2
  %43 = select i1 %42, i32 268435577, i32 %41
  br label %49

44:                                               ; preds = %3
  %45 = icmp eq i8 %5, 3
  %46 = select i1 %45, i32 268435583, i32 11
  %47 = icmp eq i8 %5, 2
  %48 = select i1 %47, i32 268435578, i32 %46
  br label %49

49:                                               ; preds = %44, %39, %28, %3, %24, %20, %16, %13, %10, %6, %36, %33
  %50 = phi i32 [ %38, %36 ], [ %35, %33 ], [ %9, %6 ], [ %12, %10 ], [ %15, %13 ], [ %19, %16 ], [ %23, %20 ], [ %27, %24 ], [ %1, %3 ], [ %32, %28 ], [ %43, %39 ], [ %48, %44 ]
  ret i32 %50
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM11visitSymbolEP13TIntermSymbol(%"class.glsl::OutputASM"*, %class.TIntermSymbol*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 0
  %4 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 0, i32 1, i32 2
  %5 = load i8, i8* %4, align 2
  switch i8 %5, label %20 [
    i8 4, label %6
    i8 5, label %6
    i8 6, label %6
    i8 7, label %6
    i8 11, label %6
    i8 12, label %6
    i8 10, label %19
  ]

6:                                                ; preds = %2, %2, %2, %2, %2, %2
  %7 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 40
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 0, i32 0
  %12 = bitcast %class.TIntermSymbol* %1 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %13 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %12, align 8
  %14 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %13, i64 7
  %15 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %14, align 8
  %16 = tail call %class.TIntermSymbol* %15(%class.TIntermNode* %11) #21
  %17 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %16, i64 0, i32 2
  tail call void @_ZN4glsl9OutputASM14declareVaryingERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEi(%"class.glsl::OutputASM"* %0, %class.TType* dereferenceable(64) %17, %"class.std::__1::basic_string"* dereferenceable(32) %18, i32 -1) #21
  br label %20

19:                                               ; preds = %2
  tail call void @_ZN4glsl9OutputASM21declareFragmentOutputEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %3) #22
  br label %20

20:                                               ; preds = %6, %2, %10, %19
  %21 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 0, i32 1, i32 9
  %22 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %21, align 8
  %23 = icmp eq %class.TInterfaceBlock* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %22, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  switch i32 %26, label %29 [
    i32 1, label %27
    i32 3, label %27
  ]

27:                                               ; preds = %24, %24
  %28 = tail call i32 @_ZN4glsl9OutputASM15uniformRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %3) #22
  br label %29

29:                                               ; preds = %24, %20, %27
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM14declareVaryingEP12TIntermTypedi(%"class.glsl::OutputASM"* nocapture readonly, %class.TIntermTyped*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 2
  %5 = load i8, i8* %4, align 2
  %6 = icmp eq i8 %5, 25
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0
  %9 = bitcast %class.TIntermTyped* %1 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %10 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %9, align 8
  %11 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %10, i64 7
  %12 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %11, align 8
  %13 = tail call %class.TIntermSymbol* %12(%class.TIntermNode* %8) #21
  %14 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1
  %15 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %13, i64 0, i32 2
  tail call void @_ZN4glsl9OutputASM14declareVaryingERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEi(%"class.glsl::OutputASM"* %0, %class.TType* dereferenceable(64) %14, %"class.std::__1::basic_string"* dereferenceable(32) %15, i32 %2) #22
  br label %16

16:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM21declareFragmentOutputEP12TIntermTyped(%"class.glsl::OutputASM"*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.TIntermTyped* %1 to i64
  %4 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1
  %5 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 10
  %6 = bitcast %struct.TLayoutQualifier* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %4) #21
  %10 = icmp slt i32 %8, 0
  br i1 %10, label %217, label %11

11:                                               ; preds = %2
  %12 = add nsw i32 %9, %8
  %13 = icmp sgt i32 %12, 8
  br i1 %13, label %14, label %18

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %16 = load %class.TParseContext*, %class.TParseContext** %15, align 8
  %17 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0, i32 1
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %16, %struct.TSourceLoc* dereferenceable(16) %17, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #21
  br label %217

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 10
  %20 = tail call i32 @_ZN4glsl9OutputASM6lookupERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_(%"class.glsl::OutputASM"* undef, %"class.std::__1::vector.90"* dereferenceable(24) %19, %class.TIntermTyped* %1) #22
  %21 = icmp eq i32 %20, %8
  br i1 %21, label %217, label %22

22:                                               ; preds = %18
  %23 = icmp eq i32 %20, -1
  br i1 %23, label %28, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %26 = load %class.TParseContext*, %class.TParseContext** %25, align 8
  %27 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0, i32 1
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %26, %struct.TSourceLoc* dereferenceable(16) %27, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #21
  br label %217

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 10, i32 0, i32 1
  %30 = bitcast %class.TIntermTyped*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.90"* %19 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = shl i64 %7, 32
  %37 = ashr exact i64 %36, 32
  %38 = icmp ugt i64 %35, %37
  %39 = inttoptr i64 %31 to %class.TIntermTyped**
  %40 = inttoptr i64 %33 to %class.TIntermTyped**
  br i1 %38, label %47, label %41

41:                                               ; preds = %28
  %42 = icmp ult i64 %35, %37
  br i1 %42, label %43, label %57

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %class.TIntermTyped*** %44 to i64*
  %46 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %19, i64 0, i32 0, i32 0
  br label %64

47:                                               ; preds = %28
  %48 = icmp sgt i32 %9, 0
  br i1 %48, label %49, label %217

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %19, i64 0, i32 0, i32 0
  %51 = shl i64 %7, 32
  %52 = ashr exact i64 %51, 32
  %53 = zext i32 %9 to i64
  %54 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %40, i64 %52
  %55 = load %class.TIntermTyped*, %class.TIntermTyped** %54, align 8
  %56 = icmp eq %class.TIntermTyped* %55, null
  br i1 %56, label %201, label %213

57:                                               ; preds = %128, %41
  %58 = phi %class.TIntermTyped** [ %39, %41 ], [ %129, %128 ]
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %217

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %class.TIntermTyped*** %61 to i64*
  %63 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %19, i64 0, i32 0, i32 0
  br label %136

64:                                               ; preds = %43, %128
  %65 = phi %class.TIntermTyped** [ %39, %43 ], [ %135, %128 ]
  %66 = phi i64 [ %33, %43 ], [ %131, %128 ]
  %67 = load %class.TIntermTyped**, %class.TIntermTyped*** %44, align 8
  %68 = icmp ult %class.TIntermTyped** %65, %67
  %69 = ptrtoint %class.TIntermTyped** %67 to i64
  br i1 %68, label %70, label %74

70:                                               ; preds = %64
  %71 = bitcast %class.TIntermTyped** %65 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %65, i64 1
  %73 = ptrtoint %class.TIntermTyped** %72 to i64
  store i64 %73, i64* %30, align 8
  br label %128

74:                                               ; preds = %64
  %75 = ptrtoint %class.TIntermTyped** %65 to i64
  %76 = sub i64 %75, %66
  %77 = ashr exact i64 %76, 3
  %78 = add nsw i64 %77, 1
  %79 = icmp ugt i64 %78, 2305843009213693951
  br i1 %79, label %80, label %82

80:                                               ; preds = %74
  %81 = bitcast %"class.std::__1::vector.90"* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %81) #23
  unreachable

82:                                               ; preds = %74
  %83 = sub i64 %69, %66
  %84 = ashr exact i64 %83, 3
  %85 = icmp ult i64 %84, 1152921504606846975
  br i1 %85, label %86, label %94

86:                                               ; preds = %82
  %87 = ashr exact i64 %83, 2
  %88 = icmp ult i64 %87, %78
  %89 = select i1 %88, i64 %78, i64 %87
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %99, label %91

91:                                               ; preds = %86
  %92 = icmp ugt i64 %89, 2305843009213693951
  br i1 %92, label %93, label %94

93:                                               ; preds = %91
  tail call void @abort() #23
  unreachable

94:                                               ; preds = %91, %82
  %95 = phi i64 [ %89, %91 ], [ 2305843009213693951, %82 ]
  %96 = shl i64 %95, 3
  %97 = tail call i8* @_Znwm(i64 %96) #24
  %98 = bitcast i8* %97 to %class.TIntermTyped**
  br label %99

99:                                               ; preds = %94, %86
  %100 = phi i64 [ %95, %94 ], [ 0, %86 ]
  %101 = phi %class.TIntermTyped** [ %98, %94 ], [ null, %86 ]
  %102 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %101, i64 %77
  %103 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %101, i64 %100
  %104 = ptrtoint %class.TIntermTyped** %103 to i64
  %105 = bitcast %class.TIntermTyped** %102 to i64*
  store i64 0, i64* %105, align 8
  %106 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %102, i64 1
  %107 = ptrtoint %class.TIntermTyped** %106 to i64
  %108 = load %class.TIntermTyped**, %class.TIntermTyped*** %46, align 8
  %109 = load i64, i64* %30, align 8
  %110 = ptrtoint %class.TIntermTyped** %108 to i64
  %111 = sub i64 %109, %110
  %112 = ashr exact i64 %111, 3
  %113 = sub nsw i64 0, %112
  %114 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %102, i64 %113
  %115 = ptrtoint %class.TIntermTyped** %114 to i64
  %116 = icmp sgt i64 %111, 0
  br i1 %116, label %117, label %121

117:                                              ; preds = %99
  %118 = bitcast %class.TIntermTyped** %114 to i8*
  %119 = bitcast %class.TIntermTyped** %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 %111, i1 false) #20
  %120 = load %class.TIntermTyped**, %class.TIntermTyped*** %46, align 8
  br label %121

121:                                              ; preds = %117, %99
  %122 = phi %class.TIntermTyped** [ %108, %99 ], [ %120, %117 ]
  store i64 %115, i64* %32, align 8
  store i64 %107, i64* %30, align 8
  store i64 %104, i64* %45, align 8
  %123 = icmp eq %class.TIntermTyped** %122, null
  br i1 %123, label %128, label %124

124:                                              ; preds = %121
  %125 = bitcast %class.TIntermTyped** %122 to i8*
  tail call void @_ZdlPv(i8* %125) #24
  %126 = load i64, i64* %30, align 8
  %127 = inttoptr i64 %126 to %class.TIntermTyped**
  br label %128

128:                                              ; preds = %70, %121, %124
  %129 = phi %class.TIntermTyped** [ %72, %70 ], [ %106, %121 ], [ %127, %124 ]
  %130 = phi i64 [ %73, %70 ], [ %107, %121 ], [ %126, %124 ]
  %131 = load i64, i64* %32, align 8
  %132 = sub i64 %130, %131
  %133 = ashr exact i64 %132, 3
  %134 = icmp ult i64 %133, %37
  %135 = inttoptr i64 %130 to %class.TIntermTyped**
  br i1 %134, label %64, label %57

136:                                              ; preds = %199, %60
  %137 = phi %class.TIntermTyped** [ %58, %60 ], [ %200, %199 ]
  %138 = phi i32 [ 0, %60 ], [ %197, %199 ]
  %139 = load %class.TIntermTyped**, %class.TIntermTyped*** %61, align 8
  %140 = icmp eq %class.TIntermTyped** %137, %139
  br i1 %140, label %145, label %141

141:                                              ; preds = %136
  %142 = bitcast %class.TIntermTyped** %137 to i64*
  store i64 %3, i64* %142, align 8
  %143 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %137, i64 1
  %144 = ptrtoint %class.TIntermTyped** %143 to i64
  store i64 %144, i64* %30, align 8
  br label %196

145:                                              ; preds = %136
  %146 = ptrtoint %class.TIntermTyped** %139 to i64
  %147 = load i64, i64* %32, align 8
  %148 = sub i64 %146, %147
  %149 = ashr exact i64 %148, 3
  %150 = add nsw i64 %149, 1
  %151 = icmp ugt i64 %150, 2305843009213693951
  br i1 %151, label %152, label %154

152:                                              ; preds = %145
  %153 = bitcast %"class.std::__1::vector.90"* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %153) #23
  unreachable

154:                                              ; preds = %145
  %155 = icmp ult i64 %149, 1152921504606846975
  br i1 %155, label %156, label %164

156:                                              ; preds = %154
  %157 = ashr exact i64 %148, 2
  %158 = icmp ult i64 %157, %150
  %159 = select i1 %158, i64 %150, i64 %157
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %169, label %161

161:                                              ; preds = %156
  %162 = icmp ugt i64 %159, 2305843009213693951
  br i1 %162, label %163, label %164

163:                                              ; preds = %161
  tail call void @abort() #23
  unreachable

164:                                              ; preds = %161, %154
  %165 = phi i64 [ %159, %161 ], [ 2305843009213693951, %154 ]
  %166 = shl i64 %165, 3
  %167 = tail call i8* @_Znwm(i64 %166) #24
  %168 = bitcast i8* %167 to %class.TIntermTyped**
  br label %169

169:                                              ; preds = %164, %156
  %170 = phi i64 [ %165, %164 ], [ 0, %156 ]
  %171 = phi %class.TIntermTyped** [ %168, %164 ], [ null, %156 ]
  %172 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %171, i64 %149
  %173 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %171, i64 %170
  %174 = ptrtoint %class.TIntermTyped** %173 to i64
  %175 = bitcast %class.TIntermTyped** %172 to i64*
  store i64 %3, i64* %175, align 8
  %176 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %172, i64 1
  %177 = ptrtoint %class.TIntermTyped** %176 to i64
  %178 = load %class.TIntermTyped**, %class.TIntermTyped*** %63, align 8
  %179 = load i64, i64* %30, align 8
  %180 = ptrtoint %class.TIntermTyped** %178 to i64
  %181 = sub i64 %179, %180
  %182 = ashr exact i64 %181, 3
  %183 = sub nsw i64 0, %182
  %184 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %172, i64 %183
  %185 = ptrtoint %class.TIntermTyped** %184 to i64
  %186 = icmp sgt i64 %181, 0
  br i1 %186, label %187, label %191

187:                                              ; preds = %169
  %188 = bitcast %class.TIntermTyped** %184 to i8*
  %189 = bitcast %class.TIntermTyped** %178 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %189, i64 %181, i1 false) #20
  %190 = load %class.TIntermTyped**, %class.TIntermTyped*** %63, align 8
  br label %191

191:                                              ; preds = %187, %169
  %192 = phi %class.TIntermTyped** [ %178, %169 ], [ %190, %187 ]
  store i64 %185, i64* %32, align 8
  store i64 %177, i64* %30, align 8
  store i64 %174, i64* %62, align 8
  %193 = icmp eq %class.TIntermTyped** %192, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %191
  %195 = bitcast %class.TIntermTyped** %192 to i8*
  tail call void @_ZdlPv(i8* %195) #24
  br label %196

196:                                              ; preds = %141, %191, %194
  %197 = add nuw nsw i32 %138, 1
  %198 = icmp eq i32 %197, %9
  br i1 %198, label %217, label %199

199:                                              ; preds = %196
  %200 = load %class.TIntermTyped**, %class.TIntermTyped*** %29, align 8
  br label %136

201:                                              ; preds = %49, %207
  %202 = phi %class.TIntermTyped** [ %210, %207 ], [ %54, %49 ]
  %203 = phi i64 [ %205, %207 ], [ 0, %49 ]
  %204 = bitcast %class.TIntermTyped** %202 to i64*
  store i64 %3, i64* %204, align 8
  %205 = add nuw nsw i64 %203, 1
  %206 = icmp eq i64 %205, %53
  br i1 %206, label %217, label %207

207:                                              ; preds = %201
  %208 = load %class.TIntermTyped**, %class.TIntermTyped*** %50, align 8
  %209 = add nsw i64 %205, %52
  %210 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %208, i64 %209
  %211 = load %class.TIntermTyped*, %class.TIntermTyped** %210, align 8
  %212 = icmp eq %class.TIntermTyped* %211, null
  br i1 %212, label %201, label %213

213:                                              ; preds = %207, %49
  %214 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %215 = load %class.TParseContext*, %class.TParseContext** %214, align 8
  %216 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0, i32 1
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %215, %struct.TSourceLoc* dereferenceable(16) %216, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #21
  br label %217

217:                                              ; preds = %196, %201, %57, %47, %14, %24, %18, %213, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM15uniformRegisterEP12TIntermTyped(%"class.glsl::OutputASM"*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1
  %4 = getelementptr inbounds %class.TType, %class.TType* %3, i64 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 38
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 9
  %9 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %class.TInterfaceBlock* [ %9, %7 ], [ null, %2 ]
  %12 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0
  %13 = bitcast %class.TIntermTyped* %1 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %14 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %13, align 8
  %15 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %14, i64 7
  %16 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %15, align 8
  %17 = tail call %class.TIntermSymbol* %16(%class.TIntermNode* %12) #21
  %18 = icmp ne %class.TIntermSymbol* %17, null
  %19 = icmp ne %class.TInterfaceBlock* %11, null
  %20 = or i1 %19, %18
  br i1 %20, label %21, label %75

21:                                               ; preds = %10
  %22 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 9
  %23 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %22, align 8
  %24 = icmp ne %class.TInterfaceBlock* %23, null
  %25 = xor i1 %19, true
  %26 = and i1 %24, %25
  %27 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 6
  br i1 %26, label %28, label %53

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 6, i32 0, i32 1
  %30 = bitcast %class.TIntermTyped*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.90"* %27 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %31, %33
  %35 = inttoptr i64 %33 to %class.TIntermTyped**
  br i1 %34, label %60, label %36

36:                                               ; preds = %28
  %37 = sub i64 %31, %33
  %38 = ashr exact i64 %37, 3
  br label %39

39:                                               ; preds = %49, %36
  %40 = phi i64 [ 0, %36 ], [ %51, %49 ]
  %41 = phi i32 [ 0, %36 ], [ %50, %49 ]
  %42 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %35, i64 %40
  %43 = load %class.TIntermTyped*, %class.TIntermTyped** %42, align 8
  %44 = icmp eq %class.TIntermTyped* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %43, i64 0, i32 1, i32 9
  %47 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %46, align 8
  %48 = icmp eq %class.TInterfaceBlock* %47, %23
  br i1 %48, label %55, label %49

49:                                               ; preds = %45, %39
  %50 = add i32 %41, 1
  %51 = zext i32 %50 to i64
  %52 = icmp ugt i64 %38, %51
  br i1 %52, label %39, label %60

53:                                               ; preds = %21
  %54 = tail call i32 @_ZN4glsl9OutputASM6lookupERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_(%"class.glsl::OutputASM"* undef, %"class.std::__1::vector.90"* dereferenceable(24) %27, %class.TIntermTyped* %1) #22
  br label %55

55:                                               ; preds = %45, %53
  %56 = phi i32 [ %54, %53 ], [ %41, %45 ]
  %57 = icmp eq i32 %56, -1
  %58 = or i1 %26, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %55
  br i1 %57, label %60, label %63

60:                                               ; preds = %49, %28, %59
  %61 = tail call i32 @_ZN4glsl9OutputASM8allocateERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_b(%"class.glsl::OutputASM"* %0, %"class.std::__1::vector.90"* dereferenceable(24) %27, %class.TIntermTyped* %1, i1 zeroext false) #22
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %75, label %63

63:                                               ; preds = %60, %59
  %64 = phi i32 [ %61, %60 ], [ %56, %59 ]
  br i1 %18, label %65, label %67

65:                                               ; preds = %63
  %66 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %17, i64 0, i32 2
  br label %70

67:                                               ; preds = %63
  %68 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %11, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %68, align 8
  br label %70

70:                                               ; preds = %67, %65
  %71 = phi %"class.std::__1::basic_string"* [ %66, %65 ], [ %69, %67 ]
  %72 = tail call i32 @_ZN4glsl9OutputASM17blockMemberLookupERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEi(%"class.glsl::OutputASM"* %0, %class.TType* dereferenceable(64) %3, %"class.std::__1::basic_string"* dereferenceable(32) %71, i32 %64) #22
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  tail call void @_ZN4glsl9OutputASM14declareUniformERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEibiPNS_18BlockLayoutEncoderE(%"class.glsl::OutputASM"* %0, %class.TType* dereferenceable(64) %3, %"class.std::__1::basic_string"* dereferenceable(32) %71, i32 %64, i1 zeroext false, i32 -1, %"class.glsl::BlockLayoutEncoder"* null) #22
  br label %75

75:                                               ; preds = %10, %60, %74, %70, %55
  %76 = phi i32 [ 0, %60 ], [ %56, %55 ], [ %64, %74 ], [ %72, %70 ], [ 0, %10 ]
  ret i32 %76
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4glsl9OutputASM11visitBinaryE5VisitP13TIntermBinary(%"class.glsl::OutputASM"*, i32, %class.TIntermBinary*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.glsl::Temporary", align 8
  %5 = alloca %"class.glsl::Temporary", align 8
  %6 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 13
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 12
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %11, label %611

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 1
  %14 = load %class.TIntermTyped*, %class.TIntermTyped** %13, align 8
  %15 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 2
  %16 = load %class.TIntermTyped*, %class.TIntermTyped** %15, align 8
  %17 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1
  %18 = icmp eq %class.TIntermBinary* %2, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 8
  %22 = add i8 %21, -15
  %23 = icmp ult i8 %22, 17
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = tail call i32 @_ZN4glsl9OutputASM15samplerRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* nonnull %12) #21
  %26 = icmp sgt i32 %25, -1
  br i1 %26, label %611, label %27

27:                                               ; preds = %11, %19, %24
  %28 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  switch i32 %29, label %611 [
    i32 144, label %30
    i32 145, label %36
    i32 151, label %65
    i32 149, label %84
    i32 152, label %108
    i32 46, label %146
    i32 47, label %146
    i32 48, label %146
    i32 49, label %146
    i32 50, label %147
    i32 146, label %200
    i32 16, label %210
    i32 147, label %220
    i32 17, label %230
    i32 148, label %240
    i32 18, label %250
    i32 153, label %260
    i32 19, label %271
    i32 154, label %282
    i32 40, label %291
    i32 155, label %300
    i32 41, label %305
    i32 156, label %310
    i32 42, label %319
    i32 157, label %328
    i32 43, label %333
    i32 158, label %338
    i32 44, label %343
    i32 159, label %348
    i32 45, label %353
    i32 20, label %358
    i32 21, label %377
    i32 24, label %396
    i32 25, label %401
    i32 26, label %406
    i32 27, label %411
    i32 150, label %416
    i32 33, label %426
    i32 36, label %437
    i32 34, label %475
    i32 35, label %497
    i32 111, label %526
    i32 37, label %564
    i32 38, label %587
    i32 39, label %593
  ]

30:                                               ; preds = %27
  %31 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  %32 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %33 = bitcast %class.TIntermTyped* %16 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %34 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %33, align 8
  %35 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %34, align 8
  tail call void %35(%class.TIntermNode* %31, %class.TIntermTraverser* %32) #21
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %16) #22
  tail call void @_ZN4glsl9OutputASM4copyEP12TIntermTypedP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %12, %class.TIntermNode* %31, i32 0) #22
  br label %611

36:                                               ; preds = %27
  %37 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1, i32 2
  %38 = load i8, i8* %37, align 2
  %39 = icmp eq i8 %38, 2
  br i1 %39, label %40, label %59

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1, i32 5
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1, i32 6
  %46 = load i32, i32* %45, align 8
  %47 = icmp sgt i32 %46, 1
  br i1 %47, label %48, label %59

48:                                               ; preds = %44
  %49 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %17) #21
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %51, label %611

51:                                               ; preds = %48
  %52 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  br label %53

53:                                               ; preds = %51, %53
  %54 = phi i32 [ 0, %51 ], [ %56, %53 ]
  %55 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 81, %class.TIntermTyped* %14, i32 %54, %class.TIntermNode* %52, i32 %54, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %56 = add nuw nsw i32 %54, 1
  %57 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %17) #21
  %58 = icmp slt i32 %56, %57
  br i1 %58, label %53, label %611

59:                                               ; preds = %40, %44, %36
  %60 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  %61 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %62 = bitcast %class.TIntermTyped* %16 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %63 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %62, align 8
  %64 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %63, align 8
  tail call void %64(%class.TIntermNode* %60, %class.TIntermTraverser* %61) #21
  tail call void @_ZN4glsl9OutputASM4copyEP12TIntermTypedP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermNode* %60, i32 0) #22
  br label %611

65:                                               ; preds = %27
  %66 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  %67 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %68 = bitcast %class.TIntermTyped* %16 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %69 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %68, align 8
  %70 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %69, align 8
  tail call void %70(%class.TIntermNode* %66, %class.TIntermTraverser* %67) #21
  %71 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1, i32 3
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %65
  %75 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  br label %77

76:                                               ; preds = %77, %65
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %12) #22
  br label %611

77:                                               ; preds = %74, %77
  %78 = phi i32 [ 0, %74 ], [ %80, %77 ]
  %79 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 5, %class.TIntermTyped* %12, i32 %78, %class.TIntermNode* %75, i32 %78, %class.TIntermNode* %66, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %80 = add nuw nsw i32 %78, 1
  %81 = load i8, i8* %71, align 1
  %82 = zext i8 %81 to i32
  %83 = icmp ult i32 %80, %82
  br i1 %83, label %77, label %76

84:                                               ; preds = %27
  %85 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %86 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %87 = bitcast %class.TIntermTyped* %14 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %88 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %87, align 8
  %89 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %88, align 8
  tail call void %89(%class.TIntermNode* %85, %class.TIntermTraverser* %86) #21
  %90 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  %91 = bitcast %class.TIntermTyped* %16 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %92 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %91, align 8
  %93 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %92, align 8
  tail call void %93(%class.TIntermNode* %90, %class.TIntermTraverser* %86) #21
  %94 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1, i32 3
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = icmp eq i8 %95, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %99, %84
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %12) #22
  br label %611

99:                                               ; preds = %84, %99
  %100 = phi i32 [ %106, %99 ], [ 0, %84 ]
  %101 = tail call i32 @_ZN2sw6Shader9OPCODE_DPEi(i32 %96) #21
  %102 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %101, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %85, i32 0, %class.TIntermNode* %90, i32 %100, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %103 = shl i32 1, %100
  %104 = trunc i32 %103 to i8
  %105 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %102, i64 0, i32 11, i32 1, i32 0
  store i8 %104, i8* %105, align 1
  %106 = add nuw nsw i32 %100, 1
  %107 = icmp eq i32 %106, %96
  br i1 %107, label %98, label %99

108:                                              ; preds = %27
  %109 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  %110 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %111 = bitcast %class.TIntermTyped* %16 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %112 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %111, align 8
  %113 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %112, align 8
  tail call void %113(%class.TIntermNode* %109, %class.TIntermTraverser* %110) #21
  %114 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1, i32 3
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = icmp eq i8 %115, 0
  br i1 %117, label %122, label %118

118:                                              ; preds = %108
  %119 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %120 = icmp eq i8 %115, 1
  %121 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 0
  br label %123

122:                                              ; preds = %130, %108
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %12) #22
  br label %611

123:                                              ; preds = %130, %118
  %124 = phi i32 [ 0, %118 ], [ %131, %130 ]
  %125 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 5, %class.TIntermTyped* %12, i32 %124, %class.TIntermNode* %119, i32 0, %class.TIntermNode* %109, i32 %124, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %126 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %125, i64 0, i32 12, i64 1, i32 1
  %127 = bitcast [3 x i8]* %126 to i24*
  %128 = load i24, i24* %127, align 1
  %129 = and i24 %128, -256
  store i24 %129, i24* %127, align 1
  br i1 %120, label %130, label %133

130:                                              ; preds = %133, %123
  %131 = add nuw nsw i32 %124, 1
  %132 = icmp eq i32 %131, %116
  br i1 %132, label %122, label %123

133:                                              ; preds = %123, %133
  %134 = phi i32 [ %144, %133 ], [ 1, %123 ]
  %135 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 4, %class.TIntermTyped* %12, i32 %124, %class.TIntermNode* %119, i32 %134, %class.TIntermNode* %109, i32 %124, %class.TIntermNode* %121, i32 %124, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %136 = mul nuw nsw i32 %134, 85
  %137 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %135, i64 0, i32 12, i64 1, i32 1
  %138 = bitcast [3 x i8]* %137 to i24*
  %139 = trunc i32 %136 to i24
  %140 = load i24, i24* %138, align 1
  %141 = and i24 %139, 255
  %142 = and i24 %140, -256
  %143 = or i24 %142, %141
  store i24 %143, i24* %138, align 1
  %144 = add nuw nsw i32 %134, 1
  %145 = icmp eq i32 %144, %116
  br i1 %145, label %130, label %133

146:                                              ; preds = %27, %27, %27, %27
  tail call void @_ZN4glsl9OutputASM14evaluateRvalueEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %12) #22
  br label %611

147:                                              ; preds = %27
  %148 = icmp eq i32 %1, 2
  br i1 %148, label %149, label %611

149:                                              ; preds = %147
  %150 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  %151 = bitcast %class.TIntermTyped* %16 to %class.TIntermAggregate* (%class.TIntermNode*)***
  %152 = load %class.TIntermAggregate* (%class.TIntermNode*)**, %class.TIntermAggregate* (%class.TIntermNode*)*** %151, align 8
  %153 = getelementptr inbounds %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %152, i64 3
  %154 = load %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %153, align 8
  %155 = tail call %class.TIntermAggregate* %154(%class.TIntermNode* %150) #21
  %156 = icmp eq %class.TIntermAggregate* %155, null
  br i1 %156, label %189, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %155, i64 0, i32 2, i32 0, i32 0, i32 0
  %159 = load %class.TIntermNode**, %class.TIntermNode*** %158, align 8
  %160 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %155, i64 0, i32 2, i32 0, i32 0, i32 1
  %161 = load %class.TIntermNode**, %class.TIntermNode*** %160, align 8
  %162 = icmp eq %class.TIntermNode** %159, %161
  br i1 %162, label %189, label %163

163:                                              ; preds = %157, %183
  %164 = phi i32 [ %185, %183 ], [ 0, %157 ]
  %165 = phi i32 [ %184, %183 ], [ 0, %157 ]
  %166 = phi %class.TIntermNode** [ %186, %183 ], [ %159, %157 ]
  %167 = load %class.TIntermNode*, %class.TIntermNode** %166, align 8
  %168 = bitcast %class.TIntermNode* %167 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %169 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %168, align 8
  %170 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %169, i64 2
  %171 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %170, align 8
  %172 = tail call %class.TIntermConstantUnion* %171(%class.TIntermNode* %167) #21
  %173 = icmp eq %class.TIntermConstantUnion* %172, null
  br i1 %173, label %183, label %174

174:                                              ; preds = %163
  %175 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %172, i64 0, i32 1
  %176 = load %class.ConstantUnion*, %class.ConstantUnion** %175, align 8
  %177 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %176, i64 0, i32 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = shl nsw i32 %164, 1
  %180 = shl i32 %178, %179
  %181 = or i32 %180, %165
  %182 = add nsw i32 %164, 1
  br label %183

183:                                              ; preds = %163, %174
  %184 = phi i32 [ %181, %174 ], [ %165, %163 ]
  %185 = phi i32 [ %182, %174 ], [ %164, %163 ]
  %186 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %166, i64 1
  %187 = load %class.TIntermNode**, %class.TIntermNode*** %160, align 8
  %188 = icmp eq %class.TIntermNode** %186, %187
  br i1 %188, label %189, label %163

189:                                              ; preds = %183, %157, %149
  %190 = phi i32 [ 0, %149 ], [ 0, %157 ], [ %184, %183 ]
  %191 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %192 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %191, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %193 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %192, i64 0, i32 12, i64 0, i32 1
  %194 = bitcast [3 x i8]* %193 to i24*
  %195 = trunc i32 %190 to i24
  %196 = load i24, i24* %194, align 1
  %197 = and i24 %195, 255
  %198 = and i24 %196, -256
  %199 = or i24 %198, %197
  store i24 %199, i24* %194, align 1
  br label %611

200:                                              ; preds = %27
  %201 = icmp eq i32 %1, 2
  br i1 %201, label %202, label %611

202:                                              ; preds = %200
  %203 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %204 = load i8, i8* %203, align 8
  %205 = and i8 %204, -2
  %206 = icmp eq i8 %205, 2
  %207 = select i1 %206, i32 268435569, i32 2
  %208 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %209 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 %207, %class.TIntermTyped* %12, %class.TIntermNode* %208, %class.TIntermNode* %209, %class.TIntermNode* null) #21
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %12) #21
  br label %611

210:                                              ; preds = %27
  %211 = icmp eq i32 %1, 2
  br i1 %211, label %212, label %611

212:                                              ; preds = %210
  %213 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %214 = load i8, i8* %213, align 8
  %215 = and i8 %214, -2
  %216 = icmp eq i8 %215, 2
  %217 = select i1 %216, i32 268435569, i32 2
  %218 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %219 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 %217, %class.TIntermTyped* %12, %class.TIntermNode* %218, %class.TIntermNode* %219, %class.TIntermNode* null) #22
  br label %611

220:                                              ; preds = %27
  %221 = icmp eq i32 %1, 2
  br i1 %221, label %222, label %611

222:                                              ; preds = %220
  %223 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %224 = load i8, i8* %223, align 8
  %225 = and i8 %224, -2
  %226 = icmp eq i8 %225, 2
  %227 = select i1 %226, i32 268435570, i32 3
  %228 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %229 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 %227, %class.TIntermTyped* %12, %class.TIntermNode* %228, %class.TIntermNode* %229, %class.TIntermNode* null) #21
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %12) #21
  br label %611

230:                                              ; preds = %27
  %231 = icmp eq i32 %1, 2
  br i1 %231, label %232, label %611

232:                                              ; preds = %230
  %233 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %234 = load i8, i8* %233, align 8
  %235 = and i8 %234, -2
  %236 = icmp eq i8 %235, 2
  %237 = select i1 %236, i32 268435570, i32 3
  %238 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %239 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 %237, %class.TIntermTyped* %12, %class.TIntermNode* %238, %class.TIntermNode* %239, %class.TIntermNode* null) #22
  br label %611

240:                                              ; preds = %27
  %241 = icmp eq i32 %1, 2
  br i1 %241, label %242, label %611

242:                                              ; preds = %240
  %243 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %244 = load i8, i8* %243, align 8
  %245 = and i8 %244, -2
  %246 = icmp eq i8 %245, 2
  %247 = select i1 %246, i32 268435571, i32 5
  %248 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %249 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 %247, %class.TIntermTyped* %12, %class.TIntermNode* %248, %class.TIntermNode* %249, %class.TIntermNode* null) #21
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %12) #21
  br label %611

250:                                              ; preds = %27
  %251 = icmp eq i32 %1, 2
  br i1 %251, label %252, label %611

252:                                              ; preds = %250
  %253 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %254 = load i8, i8* %253, align 8
  %255 = and i8 %254, -2
  %256 = icmp eq i8 %255, 2
  %257 = select i1 %256, i32 268435571, i32 5
  %258 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %259 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 %257, %class.TIntermTyped* %12, %class.TIntermNode* %258, %class.TIntermNode* %259, %class.TIntermNode* null) #22
  br label %611

260:                                              ; preds = %27
  %261 = icmp eq i32 %1, 2
  br i1 %261, label %262, label %611

262:                                              ; preds = %260
  %263 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %264 = load i8, i8* %263, align 8
  %265 = icmp eq i8 %264, 3
  %266 = select i1 %265, i32 268435579, i32 268435490
  %267 = icmp eq i8 %264, 2
  %268 = select i1 %267, i32 268435572, i32 %266
  %269 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %270 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 %268, %class.TIntermTyped* %12, %class.TIntermNode* %269, %class.TIntermNode* %270, %class.TIntermNode* null) #21
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %12) #21
  br label %611

271:                                              ; preds = %27
  %272 = icmp eq i32 %1, 2
  br i1 %272, label %273, label %611

273:                                              ; preds = %271
  %274 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %275 = load i8, i8* %274, align 8
  %276 = icmp eq i8 %275, 3
  %277 = select i1 %276, i32 268435579, i32 268435490
  %278 = icmp eq i8 %275, 2
  %279 = select i1 %278, i32 268435572, i32 %277
  %280 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %281 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 %279, %class.TIntermTyped* %12, %class.TIntermNode* %280, %class.TIntermNode* %281, %class.TIntermNode* null) #22
  br label %611

282:                                              ; preds = %27
  %283 = icmp eq i32 %1, 2
  br i1 %283, label %284, label %611

284:                                              ; preds = %282
  %285 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %286 = load i8, i8* %285, align 8
  %287 = icmp eq i8 %286, 3
  %288 = select i1 %287, i32 268435580, i32 268435574
  %289 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %290 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 %288, %class.TIntermTyped* %12, %class.TIntermNode* %289, %class.TIntermNode* %290, %class.TIntermNode* null) #21
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %12) #21
  br label %611

291:                                              ; preds = %27
  %292 = icmp eq i32 %1, 2
  br i1 %292, label %293, label %611

293:                                              ; preds = %291
  %294 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %295 = load i8, i8* %294, align 8
  %296 = icmp eq i8 %295, 3
  %297 = select i1 %296, i32 268435580, i32 268435574
  %298 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %299 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 %297, %class.TIntermTyped* %12, %class.TIntermNode* %298, %class.TIntermNode* %299, %class.TIntermNode* null) #22
  br label %611

300:                                              ; preds = %27
  %301 = icmp eq i32 %1, 2
  br i1 %301, label %302, label %611

302:                                              ; preds = %300
  %303 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %304 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 268435575, %class.TIntermTyped* %12, %class.TIntermNode* %303, %class.TIntermNode* %304, %class.TIntermNode* null) #21
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %12) #21
  br label %611

305:                                              ; preds = %27
  %306 = icmp eq i32 %1, 2
  br i1 %306, label %307, label %611

307:                                              ; preds = %305
  %308 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %309 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 268435575, %class.TIntermTyped* %12, %class.TIntermNode* %308, %class.TIntermNode* %309, %class.TIntermNode* null) #22
  br label %611

310:                                              ; preds = %27
  %311 = icmp eq i32 %1, 2
  br i1 %311, label %312, label %611

312:                                              ; preds = %310
  %313 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %314 = load i8, i8* %313, align 8
  %315 = icmp eq i8 %314, 3
  %316 = select i1 %315, i32 268435581, i32 268435576
  %317 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %318 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 %316, %class.TIntermTyped* %12, %class.TIntermNode* %317, %class.TIntermNode* %318, %class.TIntermNode* null) #21
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %12) #21
  br label %611

319:                                              ; preds = %27
  %320 = icmp eq i32 %1, 2
  br i1 %320, label %321, label %611

321:                                              ; preds = %319
  %322 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %323 = load i8, i8* %322, align 8
  %324 = icmp eq i8 %323, 3
  %325 = select i1 %324, i32 268435581, i32 268435576
  %326 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %327 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 %325, %class.TIntermTyped* %12, %class.TIntermNode* %326, %class.TIntermNode* %327, %class.TIntermNode* null) #22
  br label %611

328:                                              ; preds = %27
  %329 = icmp eq i32 %1, 2
  br i1 %329, label %330, label %611

330:                                              ; preds = %328
  %331 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %332 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 268435514, %class.TIntermTyped* %12, %class.TIntermNode* %331, %class.TIntermNode* %332, %class.TIntermNode* null) #21
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %12) #21
  br label %611

333:                                              ; preds = %27
  %334 = icmp eq i32 %1, 2
  br i1 %334, label %335, label %611

335:                                              ; preds = %333
  %336 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %337 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 268435514, %class.TIntermTyped* %12, %class.TIntermNode* %336, %class.TIntermNode* %337, %class.TIntermNode* null) #22
  br label %611

338:                                              ; preds = %27
  %339 = icmp eq i32 %1, 2
  br i1 %339, label %340, label %611

340:                                              ; preds = %338
  %341 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %342 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 268435513, %class.TIntermTyped* %12, %class.TIntermNode* %341, %class.TIntermNode* %342, %class.TIntermNode* null) #21
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %12) #21
  br label %611

343:                                              ; preds = %27
  %344 = icmp eq i32 %1, 2
  br i1 %344, label %345, label %611

345:                                              ; preds = %343
  %346 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %347 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 268435513, %class.TIntermTyped* %12, %class.TIntermNode* %346, %class.TIntermNode* %347, %class.TIntermNode* null) #22
  br label %611

348:                                              ; preds = %27
  %349 = icmp eq i32 %1, 2
  br i1 %349, label %350, label %611

350:                                              ; preds = %348
  %351 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %352 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 268435512, %class.TIntermTyped* %12, %class.TIntermNode* %351, %class.TIntermNode* %352, %class.TIntermNode* null) #21
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %12) #21
  br label %611

353:                                              ; preds = %27
  %354 = icmp eq i32 %1, 2
  br i1 %354, label %355, label %611

355:                                              ; preds = %353
  %356 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %357 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 268435512, %class.TIntermTyped* %12, %class.TIntermNode* %356, %class.TIntermNode* %357, %class.TIntermNode* null) #22
  br label %611

358:                                              ; preds = %27
  %359 = icmp eq i32 %1, 2
  br i1 %359, label %360, label %611

360:                                              ; preds = %358
  %361 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %362 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 268435515, %class.TIntermTyped* %12, %class.TIntermNode* %361, %class.TIntermNode* %362, %class.TIntermNode* null) #22
  %363 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %17) #21
  %364 = icmp sgt i32 %363, 1
  br i1 %364, label %365, label %611

365:                                              ; preds = %360
  %366 = bitcast %"class.glsl::Temporary"* %4 to i8*
  %367 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %4, i64 0, i32 0, i32 0
  %368 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 0
  %369 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %4, i64 0, i32 0, i32 0, i32 0
  br label %370

370:                                              ; preds = %365, %370
  %371 = phi i32 [ 1, %365 ], [ %374, %370 ]
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %366) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %366, i8 -86, i64 136, i1 false)
  call void @_ZN4glsl9TemporaryC2EPNS_9OutputASME(%"class.glsl::Temporary"* nonnull %4, %"class.glsl::OutputASM"* %0) #22
  %372 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435515, %class.TIntermTyped* nonnull %367, i32 0, %class.TIntermNode* %361, i32 %371, %class.TIntermNode* %362, i32 %371, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %373 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435514, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %368, i32 0, %class.TIntermNode* nonnull %369, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  call void @_ZN4glsl9TemporaryD2Ev(%"class.glsl::Temporary"* nonnull %4) #21
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %366) #20
  %374 = add nuw nsw i32 %371, 1
  %375 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %17) #21
  %376 = icmp slt i32 %374, %375
  br i1 %376, label %370, label %611

377:                                              ; preds = %27
  %378 = icmp eq i32 %1, 2
  br i1 %378, label %379, label %611

379:                                              ; preds = %377
  %380 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %381 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 268435516, %class.TIntermTyped* %12, %class.TIntermNode* %380, %class.TIntermNode* %381, %class.TIntermNode* null) #22
  %382 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %17) #21
  %383 = icmp sgt i32 %382, 1
  br i1 %383, label %384, label %611

384:                                              ; preds = %379
  %385 = bitcast %"class.glsl::Temporary"* %5 to i8*
  %386 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %5, i64 0, i32 0, i32 0
  %387 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 0
  %388 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %5, i64 0, i32 0, i32 0, i32 0
  br label %389

389:                                              ; preds = %384, %389
  %390 = phi i32 [ 1, %384 ], [ %393, %389 ]
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %385) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %385, i8 -86, i64 136, i1 false)
  call void @_ZN4glsl9TemporaryC2EPNS_9OutputASME(%"class.glsl::Temporary"* nonnull %5, %"class.glsl::OutputASM"* %0) #22
  %391 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435516, %class.TIntermTyped* nonnull %386, i32 0, %class.TIntermNode* %380, i32 %390, %class.TIntermNode* %381, i32 %390, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %392 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435512, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %387, i32 0, %class.TIntermNode* nonnull %388, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  call void @_ZN4glsl9TemporaryD2Ev(%"class.glsl::Temporary"* nonnull %5) #21
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %385) #20
  %393 = add nuw nsw i32 %390, 1
  %394 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %17) #21
  %395 = icmp slt i32 %393, %394
  br i1 %395, label %389, label %611

396:                                              ; preds = %27
  %397 = icmp eq i32 %1, 2
  br i1 %397, label %398, label %611

398:                                              ; preds = %396
  %399 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %400 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM7emitCmpEN2sw6Shader7ControlEP12TIntermTypedP11TIntermNodeS7_i(%"class.glsl::OutputASM"* %0, i32 4, %class.TIntermTyped* %12, %class.TIntermNode* %399, %class.TIntermNode* %400, i32 0) #22
  br label %611

401:                                              ; preds = %27
  %402 = icmp eq i32 %1, 2
  br i1 %402, label %403, label %611

403:                                              ; preds = %401
  %404 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %405 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM7emitCmpEN2sw6Shader7ControlEP12TIntermTypedP11TIntermNodeS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* %12, %class.TIntermNode* %404, %class.TIntermNode* %405, i32 0) #22
  br label %611

406:                                              ; preds = %27
  %407 = icmp eq i32 %1, 2
  br i1 %407, label %408, label %611

408:                                              ; preds = %406
  %409 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %410 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM7emitCmpEN2sw6Shader7ControlEP12TIntermTypedP11TIntermNodeS7_i(%"class.glsl::OutputASM"* %0, i32 6, %class.TIntermTyped* %12, %class.TIntermNode* %409, %class.TIntermNode* %410, i32 0) #22
  br label %611

411:                                              ; preds = %27
  %412 = icmp eq i32 %1, 2
  br i1 %412, label %413, label %611

413:                                              ; preds = %411
  %414 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %415 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM7emitCmpEN2sw6Shader7ControlEP12TIntermTypedP11TIntermNodeS7_i(%"class.glsl::OutputASM"* %0, i32 3, %class.TIntermTyped* %12, %class.TIntermNode* %414, %class.TIntermNode* %415, i32 0) #22
  br label %611

416:                                              ; preds = %27
  %417 = icmp eq i32 %1, 2
  br i1 %417, label %418, label %611

418:                                              ; preds = %416
  %419 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1, i32 0
  %420 = load i8, i8* %419, align 8
  %421 = and i8 %420, -2
  %422 = icmp eq i8 %421, 2
  %423 = select i1 %422, i32 268435571, i32 5
  %424 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %425 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 %423, %class.TIntermTyped* %12, %class.TIntermNode* %424, %class.TIntermNode* %425, %class.TIntermNode* null) #21
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, %class.TIntermTyped* %12) #21
  br label %611

426:                                              ; preds = %27
  %427 = icmp eq i32 %1, 2
  br i1 %427, label %428, label %611

428:                                              ; preds = %426
  %429 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1, i32 0
  %430 = load i8, i8* %429, align 8
  %431 = and i8 %430, -2
  %432 = icmp eq i8 %431, 2
  %433 = select i1 %432, i32 268435571, i32 5
  %434 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %435 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  %436 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %433, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %434, i32 0, %class.TIntermNode* %435, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %611

437:                                              ; preds = %27
  %438 = icmp eq i32 %1, 2
  br i1 %438, label %439, label %611

439:                                              ; preds = %437
  %440 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1, i32 4
  %441 = load i8, i8* %440, align 4
  %442 = icmp ugt i8 %441, 1
  br i1 %442, label %443, label %457

443:                                              ; preds = %439
  %444 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1, i32 3
  %445 = load i8, i8* %444, align 1
  %446 = icmp eq i8 %445, 0
  br i1 %446, label %611, label %447

447:                                              ; preds = %443
  %448 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %449 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  br label %450

450:                                              ; preds = %447, %450
  %451 = phi i32 [ 0, %447 ], [ %453, %450 ]
  %452 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 5, %class.TIntermTyped* %12, i32 %451, %class.TIntermNode* %448, i32 %451, %class.TIntermNode* %449, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %453 = add nuw nsw i32 %451, 1
  %454 = load i8, i8* %444, align 1
  %455 = zext i8 %454 to i32
  %456 = icmp ult i32 %453, %455
  br i1 %456, label %450, label %611

457:                                              ; preds = %439
  %458 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 1, i32 4
  %459 = load i8, i8* %458, align 4
  %460 = icmp ugt i8 %459, 1
  br i1 %460, label %461, label %611

461:                                              ; preds = %457
  %462 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 1, i32 3
  %463 = load i8, i8* %462, align 1
  %464 = icmp eq i8 %463, 0
  br i1 %464, label %611, label %465

465:                                              ; preds = %461
  %466 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %467 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  br label %468

468:                                              ; preds = %465, %468
  %469 = phi i32 [ 0, %465 ], [ %471, %468 ]
  %470 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 5, %class.TIntermTyped* %12, i32 %469, %class.TIntermNode* %466, i32 0, %class.TIntermNode* %467, i32 %469, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %471 = add nuw nsw i32 %469, 1
  %472 = load i8, i8* %462, align 1
  %473 = zext i8 %472 to i32
  %474 = icmp ult i32 %471, %473
  br i1 %474, label %468, label %611

475:                                              ; preds = %27
  %476 = icmp eq i32 %1, 2
  br i1 %476, label %477, label %611

477:                                              ; preds = %475
  %478 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1, i32 3
  %479 = load i8, i8* %478, align 1
  %480 = zext i8 %479 to i32
  %481 = tail call i32 @_ZN2sw6Shader9OPCODE_DPEi(i32 %480) #21
  %482 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 1, i32 3
  %483 = load i8, i8* %482, align 1
  %484 = zext i8 %483 to i32
  %485 = icmp eq i8 %483, 0
  br i1 %485, label %611, label %486

486:                                              ; preds = %477
  %487 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %488 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  br label %489

489:                                              ; preds = %489, %486
  %490 = phi i32 [ 0, %486 ], [ %495, %489 ]
  %491 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %481, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %487, i32 0, %class.TIntermNode* %488, i32 %490, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %492 = shl i32 1, %490
  %493 = trunc i32 %492 to i8
  %494 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %491, i64 0, i32 11, i32 1, i32 0
  store i8 %493, i8* %494, align 1
  %495 = add nuw nsw i32 %490, 1
  %496 = icmp eq i32 %495, %484
  br i1 %496, label %611, label %489

497:                                              ; preds = %27
  %498 = icmp eq i32 %1, 2
  br i1 %498, label %499, label %611

499:                                              ; preds = %497
  %500 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %501 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  %502 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 5, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %500, i32 0, %class.TIntermNode* %501, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %503 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %502, i64 0, i32 12, i64 1, i32 1
  %504 = bitcast [3 x i8]* %503 to i24*
  %505 = load i24, i24* %504, align 1
  %506 = and i24 %505, -256
  store i24 %506, i24* %504, align 1
  %507 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 1, i32 3
  %508 = load i8, i8* %507, align 1
  %509 = zext i8 %508 to i32
  %510 = icmp ugt i8 %508, 1
  br i1 %510, label %511, label %611

511:                                              ; preds = %499
  %512 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 0
  br label %513

513:                                              ; preds = %513, %511
  %514 = phi i32 [ 1, %511 ], [ %524, %513 ]
  %515 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 4, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %500, i32 %514, %class.TIntermNode* %501, i32 0, %class.TIntermNode* %512, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %516 = mul nuw nsw i32 %514, 85
  %517 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %515, i64 0, i32 12, i64 1, i32 1
  %518 = bitcast [3 x i8]* %517 to i24*
  %519 = trunc i32 %516 to i24
  %520 = load i24, i24* %518, align 1
  %521 = and i24 %519, 255
  %522 = and i24 %520, -256
  %523 = or i24 %522, %521
  store i24 %523, i24* %518, align 1
  %524 = add nuw nsw i32 %514, 1
  %525 = icmp eq i32 %524, %509
  br i1 %525, label %611, label %513

526:                                              ; preds = %27
  %527 = icmp eq i32 %1, 2
  br i1 %527, label %528, label %611

528:                                              ; preds = %526
  %529 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1, i32 3
  %530 = load i8, i8* %529, align 1
  %531 = zext i8 %530 to i32
  %532 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 1, i32 3
  %533 = load i8, i8* %532, align 1
  %534 = zext i8 %533 to i32
  %535 = icmp eq i8 %533, 0
  br i1 %535, label %611, label %536

536:                                              ; preds = %528
  %537 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %538 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  %539 = icmp ugt i8 %530, 1
  %540 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 0
  br label %541

541:                                              ; preds = %548, %536
  %542 = phi i32 [ 0, %536 ], [ %549, %548 ]
  %543 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 5, %class.TIntermTyped* %12, i32 %542, %class.TIntermNode* %537, i32 0, %class.TIntermNode* %538, i32 %542, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %544 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %543, i64 0, i32 12, i64 1, i32 1
  %545 = bitcast [3 x i8]* %544 to i24*
  %546 = load i24, i24* %545, align 1
  %547 = and i24 %546, -256
  store i24 %547, i24* %545, align 1
  br i1 %539, label %551, label %548

548:                                              ; preds = %551, %541
  %549 = add nuw nsw i32 %542, 1
  %550 = icmp eq i32 %549, %534
  br i1 %550, label %611, label %541

551:                                              ; preds = %541, %551
  %552 = phi i32 [ %562, %551 ], [ 1, %541 ]
  %553 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 4, %class.TIntermTyped* %12, i32 %542, %class.TIntermNode* %537, i32 %552, %class.TIntermNode* %538, i32 %542, %class.TIntermNode* %540, i32 %542, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %554 = mul nuw nsw i32 %552, 85
  %555 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %553, i64 0, i32 12, i64 1, i32 1
  %556 = bitcast [3 x i8]* %555 to i24*
  %557 = trunc i32 %554 to i24
  %558 = load i24, i24* %556, align 1
  %559 = and i24 %557, 255
  %560 = and i24 %558, -256
  %561 = or i24 %560, %559
  store i24 %561, i24* %556, align 1
  %562 = add nuw nsw i32 %552, 1
  %563 = icmp eq i32 %562, %531
  br i1 %563, label %548, label %551

564:                                              ; preds = %27
  %565 = tail call zeroext i1 @_ZN4glsl9OutputASM7trivialEP12TIntermTypedi(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %16, i32 6) #22
  br i1 %565, label %566, label %572

566:                                              ; preds = %564
  %567 = icmp eq i32 %1, 2
  br i1 %567, label %568, label %611

568:                                              ; preds = %566
  %569 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %570 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  %571 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435512, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %569, i32 0, %class.TIntermNode* %570, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %611

572:                                              ; preds = %564
  switch i32 %1, label %611 [
    i32 1, label %573
    i32 2, label %583
  ]

573:                                              ; preds = %572
  %574 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %575 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %574, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %576 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 0
  %577 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 40, %class.TIntermTyped* null, i32 0, %class.TIntermNode* %576, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %578 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %577, i64 0, i32 12, i64 0, i32 1
  %579 = bitcast [3 x i8]* %578 to i24*
  %580 = load i24, i24* %579, align 1
  %581 = and i24 %580, -65281
  %582 = or i24 %581, 3328
  store i24 %582, i24* %579, align 1
  br label %611

583:                                              ; preds = %572
  %584 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  %585 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %584, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %586 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 43, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %611

587:                                              ; preds = %27
  %588 = icmp eq i32 %1, 2
  br i1 %588, label %589, label %611

589:                                              ; preds = %587
  %590 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %591 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  %592 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435513, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %590, i32 0, %class.TIntermNode* %591, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %611

593:                                              ; preds = %27
  %594 = tail call zeroext i1 @_ZN4glsl9OutputASM7trivialEP12TIntermTypedi(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %16, i32 6) #22
  br i1 %594, label %595, label %601

595:                                              ; preds = %593
  %596 = icmp eq i32 %1, 2
  br i1 %596, label %597, label %611

597:                                              ; preds = %595
  %598 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %599 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  %600 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435514, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %598, i32 0, %class.TIntermNode* %599, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %611

601:                                              ; preds = %593
  switch i32 %1, label %611 [
    i32 1, label %602
    i32 2, label %607
  ]

602:                                              ; preds = %601
  %603 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 0
  %604 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %603, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %605 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 0, i32 0, i32 0
  %606 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 40, %class.TIntermTyped* null, i32 0, %class.TIntermNode* %605, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %611

607:                                              ; preds = %601
  %608 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %16, i64 0, i32 0
  %609 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* %12, i32 0, %class.TIntermNode* %608, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %610 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 43, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %611

611:                                              ; preds = %548, %513, %489, %468, %450, %389, %370, %53, %443, %461, %477, %528, %499, %379, %360, %48, %30, %76, %98, %122, %146, %24, %59, %601, %572, %27, %597, %595, %607, %602, %587, %589, %568, %566, %583, %573, %526, %497, %475, %437, %457, %426, %428, %416, %418, %411, %413, %406, %408, %401, %403, %396, %398, %377, %358, %353, %355, %348, %350, %343, %345, %338, %340, %333, %335, %328, %330, %319, %321, %310, %312, %305, %307, %300, %302, %291, %293, %282, %284, %271, %273, %260, %262, %250, %252, %240, %242, %230, %232, %220, %222, %210, %212, %200, %202, %147, %189, %3
  %612 = phi i1 [ false, %3 ], [ false, %146 ], [ false, %122 ], [ false, %98 ], [ false, %76 ], [ false, %30 ], [ false, %24 ], [ false, %59 ], [ true, %601 ], [ true, %572 ], [ true, %27 ], [ true, %597 ], [ true, %595 ], [ true, %607 ], [ true, %602 ], [ true, %587 ], [ true, %589 ], [ true, %568 ], [ true, %566 ], [ true, %583 ], [ true, %573 ], [ true, %526 ], [ true, %497 ], [ true, %475 ], [ true, %437 ], [ true, %457 ], [ true, %426 ], [ true, %428 ], [ true, %416 ], [ true, %418 ], [ true, %411 ], [ true, %413 ], [ true, %406 ], [ true, %408 ], [ true, %401 ], [ true, %403 ], [ true, %396 ], [ true, %398 ], [ true, %377 ], [ true, %358 ], [ true, %353 ], [ true, %355 ], [ true, %348 ], [ true, %350 ], [ true, %343 ], [ true, %345 ], [ true, %338 ], [ true, %340 ], [ true, %333 ], [ true, %335 ], [ true, %328 ], [ true, %330 ], [ true, %319 ], [ true, %321 ], [ true, %310 ], [ true, %312 ], [ true, %305 ], [ true, %307 ], [ true, %300 ], [ true, %302 ], [ true, %291 ], [ true, %293 ], [ true, %282 ], [ true, %284 ], [ true, %271 ], [ true, %273 ], [ true, %260 ], [ true, %262 ], [ true, %250 ], [ true, %252 ], [ true, %240 ], [ true, %242 ], [ true, %230 ], [ true, %232 ], [ true, %220 ], [ true, %222 ], [ true, %210 ], [ true, %212 ], [ true, %200 ], [ true, %202 ], [ true, %147 ], [ true, %189 ], [ false, %48 ], [ true, %360 ], [ true, %379 ], [ true, %443 ], [ true, %461 ], [ true, %477 ], [ true, %499 ], [ true, %528 ], [ false, %53 ], [ true, %370 ], [ true, %389 ], [ true, %450 ], [ true, %468 ], [ true, %489 ], [ true, %513 ], [ true, %548 ]
  ret i1 %612
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4glsl9OutputASM17isSamplerRegisterEP12TIntermTyped(%"class.glsl::OutputASM"*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.TIntermTyped* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = add i8 %6, -15
  %8 = icmp ult i8 %7, 17
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = tail call i32 @_ZN4glsl9OutputASM15samplerRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* nonnull %1) #22
  %11 = icmp sgt i32 %10, -1
  br label %12

12:                                               ; preds = %2, %9, %4
  %13 = phi i1 [ false, %4 ], [ false, %2 ], [ %11, %9 ]
  ret i1 %13
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"*, %class.TIntermTyped*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 3
  %5 = load i8, i8* %4, align 1
  %6 = icmp ugt i8 %5, 1
  %7 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 4
  %8 = load i8, i8* %7, align 4
  br i1 %6, label %9, label %21

9:                                                ; preds = %3
  %10 = icmp ult i8 %8, 2
  br i1 %10, label %11, label %23

11:                                               ; preds = %9
  %12 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 3
  %13 = load i8, i8* %12, align 1
  %14 = icmp ugt i8 %13, 1
  br i1 %14, label %15, label %33

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 4
  %17 = load i8, i8* %16, align 4
  %18 = icmp ult i8 %17, 2
  %19 = icmp eq i8 %5, %13
  %20 = and i1 %19, %18
  br i1 %20, label %51, label %33

21:                                               ; preds = %3
  %22 = icmp ugt i8 %8, 1
  br i1 %22, label %23, label %51

23:                                               ; preds = %9, %21
  %24 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 4
  %25 = load i8, i8* %24, align 4
  %26 = icmp ugt i8 %25, 1
  br i1 %26, label %27, label %37

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 3
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %5, %29
  %31 = icmp eq i8 %8, %25
  %32 = and i1 %31, %30
  br i1 %32, label %51, label %37

33:                                               ; preds = %15, %11
  %34 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %35 = load %class.TParseContext*, %class.TParseContext** %34, align 8
  %36 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0, i32 1
  br label %41

37:                                               ; preds = %27, %23
  %38 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %39 = load %class.TParseContext*, %class.TParseContext** %38, align 8
  %40 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0, i32 1
  br i1 %6, label %41, label %46

41:                                               ; preds = %37, %33
  %42 = phi %struct.TSourceLoc* [ %36, %33 ], [ %40, %37 ]
  %43 = phi %class.TParseContext* [ %35, %33 ], [ %39, %37 ]
  %44 = icmp ult i8 %8, 2
  %45 = select i1 %44, [7 x i8]* @.str.34, [7 x i8]* @.str.35
  br label %46

46:                                               ; preds = %41, %37
  %47 = phi %class.TParseContext* [ %39, %37 ], [ %43, %41 ]
  %48 = phi %struct.TSourceLoc* [ %40, %37 ], [ %42, %41 ]
  %49 = phi [7 x i8]* [ @.str.35, %37 ], [ %45, %41 ]
  %50 = getelementptr inbounds [7 x i8], [7 x i8]* %49, i64 0, i64 0
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %47, %struct.TSourceLoc* dereferenceable(16) %48, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.33, i64 0, i64 0), i8* %50, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #21
  br label %187

51:                                               ; preds = %15, %27, %21
  %52 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0
  %53 = bitcast %class.TIntermTyped* %1 to %class.TIntermBinary* (%class.TIntermNode*)***
  %54 = load %class.TIntermBinary* (%class.TIntermNode*)**, %class.TIntermBinary* (%class.TIntermNode*)*** %53, align 8
  %55 = getelementptr inbounds %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %54, i64 4
  %56 = load %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %55, align 8
  %57 = tail call %class.TIntermBinary* %56(%class.TIntermNode* %52) #21
  %58 = icmp eq %class.TIntermBinary* %57, null
  br i1 %58, label %117, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %57, i64 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 47
  br i1 %62, label %63, label %117

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %57, i64 0, i32 1
  %65 = load %class.TIntermTyped*, %class.TIntermTyped** %64, align 8
  %66 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %65, i64 0, i32 1, i32 3
  %67 = load i8, i8* %66, align 1
  %68 = icmp ugt i8 %67, 1
  br i1 %68, label %69, label %117

69:                                               ; preds = %63
  %70 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %65, i64 0, i32 1, i32 4
  %71 = load i8, i8* %70, align 4
  %72 = icmp ult i8 %71, 2
  br i1 %72, label %73, label %117

73:                                               ; preds = %69
  %74 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 3
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 1
  br i1 %76, label %77, label %117

77:                                               ; preds = %73
  %78 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 4
  %79 = load i8, i8* %78, align 4
  %80 = icmp ugt i8 %79, 1
  br i1 %80, label %117, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 11
  %83 = load %class.TStructure*, %class.TStructure** %82, align 8
  %84 = icmp eq %class.TStructure* %83, null
  br i1 %84, label %85, label %117

85:                                               ; preds = %81
  %86 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 8
  %88 = icmp ne i8 %87, 38
  %89 = add i8 %87, -15
  %90 = icmp ugt i8 %89, 16
  %91 = and i1 %88, %90
  br i1 %91, label %92, label %117

92:                                               ; preds = %85
  %93 = tail call i8* @_Znwm(i64 208) #24
  %94 = bitcast i8* %93 to %"struct.sw::Shader::Instruction"*
  tail call void @_ZN2sw6Shader11InstructionC1ENS0_6OpcodeE(%"struct.sw::Shader::Instruction"* nonnull %94, i32 268435557) #21
  %95 = getelementptr inbounds i8, i8* %93, i64 32
  %96 = bitcast i8* %95 to %"struct.sw::Shader::DestinationParameter"*
  %97 = tail call i32 @_ZN4glsl9OutputASM6lvalueERN2sw6Shader20DestinationParameterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::DestinationParameter"* dereferenceable(28) %96, %class.TIntermTyped* %1) #22
  %98 = getelementptr inbounds i8, i8* %93, i64 56
  %99 = load i8, i8* %98, align 8
  %100 = getelementptr inbounds i8, i8* %93, i64 60
  %101 = getelementptr inbounds i8, i8* %93, i64 84
  store i8 %99, i8* %101, align 4
  %102 = bitcast i8* %95 to i32*
  %103 = load i32, i32* %102, align 8
  %104 = bitcast i8* %100 to i32*
  store i32 %103, i32* %104, align 4
  %105 = getelementptr inbounds i8, i8* %93, i64 36
  %106 = getelementptr inbounds i8, i8* %93, i64 64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %105, i64 20, i1 false)
  %107 = getelementptr inbounds i8, i8* %93, i64 88
  %108 = bitcast i8* %107 to %"struct.sw::Shader::SourceParameter"*
  %109 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM6sourceERN2sw6Shader15SourceParameterEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::SourceParameter"* dereferenceable(28) %108, %class.TIntermNode* %109, i32 0) #22
  %110 = getelementptr inbounds i8, i8* %93, i64 116
  %111 = bitcast i8* %110 to %"struct.sw::Shader::SourceParameter"*
  %112 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %57, i64 0, i32 2
  %113 = load %class.TIntermTyped*, %class.TIntermTyped** %112, align 8
  %114 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %113, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM6sourceERN2sw6Shader15SourceParameterEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::SourceParameter"* dereferenceable(28) %111, %class.TIntermNode* %114, i32 0) #22
  %115 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 2
  %116 = load %"class.sw::Shader"*, %"class.sw::Shader"** %115, align 8
  tail call void @_ZN2sw6Shader6appendEPNS0_11InstructionE(%"class.sw::Shader"* %116, %"struct.sw::Shader::Instruction"* nonnull %94) #21
  br label %187

117:                                              ; preds = %85, %73, %77, %81, %63, %51, %69, %59
  %118 = tail call i8* @_Znwm(i64 208) #24
  %119 = bitcast i8* %118 to %"struct.sw::Shader::Instruction"*
  tail call void @_ZN2sw6Shader11InstructionC1ENS0_6OpcodeE(%"struct.sw::Shader::Instruction"* nonnull %119, i32 1) #21
  %120 = getelementptr inbounds i8, i8* %118, i64 32
  %121 = bitcast i8* %120 to %"struct.sw::Shader::DestinationParameter"*
  %122 = tail call i32 @_ZN4glsl9OutputASM6lvalueERN2sw6Shader20DestinationParameterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::DestinationParameter"* dereferenceable(28) %121, %class.TIntermTyped* %1) #22
  %123 = getelementptr inbounds i8, i8* %118, i64 60
  %124 = bitcast i8* %123 to %"struct.sw::Shader::SourceParameter"*
  %125 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM6sourceERN2sw6Shader15SourceParameterEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::SourceParameter"* dereferenceable(28) %124, %class.TIntermNode* %125, i32 0) #22
  %126 = getelementptr inbounds i8, i8* %118, i64 85
  %127 = bitcast i8* %126 to i24*
  %128 = load i24, i24* %127, align 1
  %129 = and i24 %128, 255
  %130 = zext i24 %129 to i32
  %131 = shl i32 %122, 1
  %132 = and i32 %131, 6
  %133 = lshr i32 %130, %132
  %134 = and i32 %133, 3
  %135 = lshr i32 %122, 1
  %136 = and i32 %135, 6
  %137 = lshr i32 %130, %136
  %138 = shl nuw nsw i32 %137, 2
  %139 = and i32 %138, 12
  %140 = lshr i32 %122, 3
  %141 = and i32 %140, 6
  %142 = lshr i32 %130, %141
  %143 = shl nuw nsw i32 %142, 4
  %144 = and i32 %143, 48
  %145 = lshr i32 %122, 5
  %146 = and i32 %145, 6
  %147 = lshr i32 %130, %146
  %148 = shl nuw nsw i32 %147, 6
  %149 = or i32 %148, %134
  %150 = or i32 %149, %139
  %151 = or i32 %150, %144
  %152 = trunc i32 %151 to i24
  %153 = and i24 %152, 255
  %154 = and i24 %128, -256
  %155 = or i24 %153, %154
  store i24 %155, i24* %127, align 1
  %156 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 2
  %157 = load %"class.sw::Shader"*, %"class.sw::Shader"** %156, align 8
  tail call void @_ZN2sw6Shader6appendEPNS0_11InstructionE(%"class.sw::Shader"* %157, %"struct.sw::Shader::Instruction"* nonnull %119) #21
  %158 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1
  %159 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %158) #21
  %160 = icmp sgt i32 %159, 1
  br i1 %160, label %161, label %187

161:                                              ; preds = %117
  %162 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 2
  br label %163

163:                                              ; preds = %161, %177
  %164 = phi i32 [ 1, %161 ], [ %184, %177 ]
  %165 = tail call i8* @_Znwm(i64 208) #24
  %166 = bitcast i8* %165 to %"struct.sw::Shader::Instruction"*
  tail call void @_ZN2sw6Shader11InstructionC1ENS0_6OpcodeE(%"struct.sw::Shader::Instruction"* nonnull %166, i32 1) #21
  %167 = getelementptr inbounds i8, i8* %165, i64 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 4 %120, i64 27, i1 false)
  %168 = bitcast i8* %167 to i32*
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, %164
  store i32 %170, i32* %168, align 8
  %171 = load i8, i8* %162, align 2
  %172 = icmp eq i8 %171, 20
  br i1 %172, label %177, label %173

173:                                              ; preds = %163
  %174 = tail call i32 @_ZN4glsl12registerSizeERK5TTypei(%class.TType* dereferenceable(64) %158, i32 %164) #21
  %175 = sub nsw i32 4, %174
  %176 = lshr i32 15, %175
  br label %177

177:                                              ; preds = %163, %173
  %178 = phi i32 [ %176, %173 ], [ 2, %163 ]
  %179 = trunc i32 %178 to i8
  %180 = getelementptr inbounds i8, i8* %165, i64 57
  store i8 %179, i8* %180, align 1
  %181 = getelementptr inbounds i8, i8* %165, i64 60
  %182 = bitcast i8* %181 to %"struct.sw::Shader::SourceParameter"*
  tail call void @_ZN4glsl9OutputASM6sourceERN2sw6Shader15SourceParameterEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::SourceParameter"* dereferenceable(28) %182, %class.TIntermNode* %125, i32 %164) #22
  %183 = load %"class.sw::Shader"*, %"class.sw::Shader"** %156, align 8
  tail call void @_ZN2sw6Shader6appendEPNS0_11InstructionE(%"class.sw::Shader"* %183, %"struct.sw::Shader::Instruction"* nonnull %166) #21
  %184 = add nuw nsw i32 %164, 1
  %185 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %158) #21
  %186 = icmp slt i32 %184, %185
  br i1 %186, label %163, label %187

187:                                              ; preds = %177, %117, %92, %46
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM4copyEP12TIntermTypedP11TIntermNodei(%"class.glsl::OutputASM"*, %class.TIntermTyped*, %class.TIntermNode*, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1
  %6 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %5) #21
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %9, %4
  ret void

9:                                                ; preds = %4, %9
  %10 = phi i32 [ %13, %9 ], [ 0, %4 ]
  %11 = add nsw i32 %10, %3
  %12 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* %1, i32 %10, %class.TIntermNode* %2, i32 %11, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %13 = add nuw nsw i32 %10, 1
  %14 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %5) #21
  %15 = icmp slt i32 %13, %14
  br i1 %15, label %9, label %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden nonnull %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"*, i32, %class.TIntermTyped*, i32, %class.TIntermNode*, i32, %class.TIntermNode*, i32, %class.TIntermNode*, i32, %class.TIntermNode*, i32, %class.TIntermNode*, i32) local_unnamed_addr #0 align 2 {
  %15 = tail call i8* @_Znwm(i64 208) #24
  %16 = bitcast i8* %15 to %"struct.sw::Shader::Instruction"*
  tail call void @_ZN2sw6Shader11InstructionC1ENS0_6OpcodeE(%"struct.sw::Shader::Instruction"* nonnull %16, i32 %1) #21
  %17 = icmp eq %class.TIntermTyped* %2, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds i8, i8* %15, i64 32
  %20 = bitcast i8* %19 to %"struct.sw::Shader::DestinationParameter"*
  tail call void @_ZN4glsl9OutputASM11destinationERN2sw6Shader20DestinationParameterEP12TIntermTypedi(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::DestinationParameter"* dereferenceable(28) %20, %class.TIntermTyped* nonnull %2, i32 %3) #22
  br label %21

21:                                               ; preds = %14, %18
  %22 = icmp eq %class.TIntermNode* %4, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %21
  %24 = bitcast %class.TIntermNode* %4 to %class.TIntermTyped* (%class.TIntermNode*)***
  %25 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %24, align 8
  %26 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %25, i64 1
  %27 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %26, align 8
  %28 = tail call %class.TIntermTyped* %27(%class.TIntermNode* nonnull %4) #21
  %29 = icmp eq %class.TIntermTyped* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %28, i64 0, i32 1, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp ult i8 %32, 2
  %34 = zext i1 %33 to i8
  %35 = shl nuw nsw i8 %34, 1
  br label %36

36:                                               ; preds = %23, %30
  %37 = phi i8 [ 0, %23 ], [ %35, %30 ]
  %38 = getelementptr inbounds i8, i8* %15, i64 58
  %39 = load i8, i8* %38, align 2
  %40 = and i8 %39, -3
  %41 = or i8 %40, %37
  store i8 %41, i8* %38, align 2
  br label %42

42:                                               ; preds = %21, %36
  %43 = getelementptr inbounds i8, i8* %15, i64 60
  %44 = bitcast i8* %43 to %"struct.sw::Shader::SourceParameter"*
  tail call void @_ZN4glsl9OutputASM6sourceERN2sw6Shader15SourceParameterEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::SourceParameter"* dereferenceable(28) %44, %class.TIntermNode* %4, i32 %5) #22
  %45 = getelementptr inbounds i8, i8* %15, i64 88
  %46 = bitcast i8* %45 to %"struct.sw::Shader::SourceParameter"*
  tail call void @_ZN4glsl9OutputASM6sourceERN2sw6Shader15SourceParameterEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::SourceParameter"* dereferenceable(28) %46, %class.TIntermNode* %6, i32 %7) #22
  %47 = getelementptr inbounds i8, i8* %15, i64 116
  %48 = bitcast i8* %47 to %"struct.sw::Shader::SourceParameter"*
  tail call void @_ZN4glsl9OutputASM6sourceERN2sw6Shader15SourceParameterEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::SourceParameter"* dereferenceable(28) %48, %class.TIntermNode* %8, i32 %9) #22
  %49 = getelementptr inbounds i8, i8* %15, i64 144
  %50 = bitcast i8* %49 to %"struct.sw::Shader::SourceParameter"*
  tail call void @_ZN4glsl9OutputASM6sourceERN2sw6Shader15SourceParameterEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::SourceParameter"* dereferenceable(28) %50, %class.TIntermNode* %10, i32 %11) #22
  %51 = getelementptr inbounds i8, i8* %15, i64 172
  %52 = bitcast i8* %51 to %"struct.sw::Shader::SourceParameter"*
  tail call void @_ZN4glsl9OutputASM6sourceERN2sw6Shader15SourceParameterEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::SourceParameter"* dereferenceable(28) %52, %class.TIntermNode* %12, i32 %13) #22
  %53 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 2
  %54 = load %"class.sw::Shader"*, %"class.sw::Shader"** %53, align 8
  tail call void @_ZN2sw6Shader6appendEPNS0_11InstructionE(%"class.sw::Shader"* %54, %"struct.sw::Shader::Instruction"* nonnull %16) #21
  ret %"struct.sw::Shader::Instruction"* %16
}

; Function Attrs: optsize
declare i32 @_ZN2sw6Shader9OPCODE_DPEi(i32) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM14evaluateRvalueEP12TIntermTyped(%"class.glsl::OutputASM"*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.glsl::Temporary", align 8
  %4 = alloca i8, align 1
  %5 = alloca %class.TIntermTyped*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.glsl::Temporary", align 8
  %8 = alloca i8, align 1
  %9 = alloca %class.TIntermTyped*, align 8
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0
  %12 = bitcast %class.TIntermTyped* %1 to %class.TIntermBinary* (%class.TIntermNode*)***
  %13 = load %class.TIntermBinary* (%class.TIntermNode*)**, %class.TIntermBinary* (%class.TIntermNode*)*** %12, align 8
  %14 = getelementptr inbounds %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %13, i64 4
  %15 = load %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %14, align 8
  %16 = tail call %class.TIntermBinary* %15(%class.TIntermNode* %11) #21
  %17 = icmp eq %class.TIntermBinary* %16, null
  br i1 %17, label %104, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %16, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 47
  br i1 %21, label %22, label %104

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %16, i64 0, i32 1
  %24 = load %class.TIntermTyped*, %class.TIntermTyped** %23, align 8
  %25 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %24, i64 0, i32 1, i32 3
  %26 = load i8, i8* %25, align 1
  %27 = icmp ugt i8 %26, 1
  br i1 %27, label %28, label %104

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %24, i64 0, i32 1, i32 4
  %30 = load i8, i8* %29, align 4
  %31 = icmp ult i8 %30, 2
  br i1 %31, label %32, label %104

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 3
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %36, label %104

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 4
  %38 = load i8, i8* %37, align 4
  %39 = icmp ugt i8 %38, 1
  br i1 %39, label %104, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 11
  %42 = load %class.TStructure*, %class.TStructure** %41, align 8
  %43 = icmp eq %class.TStructure* %42, null
  br i1 %43, label %44, label %104

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 8
  %47 = icmp ne i8 %46, 38
  %48 = add i8 %46, -15
  %49 = icmp ugt i8 %48, 16
  %50 = and i1 %47, %49
  br i1 %50, label %51, label %104

51:                                               ; preds = %44
  %52 = tail call i8* @_Znwm(i64 208) #24
  %53 = bitcast i8* %52 to %"struct.sw::Shader::Instruction"*
  tail call void @_ZN2sw6Shader11InstructionC1ENS0_6OpcodeE(%"struct.sw::Shader::Instruction"* nonnull %53, i32 268435556) #21
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to %"struct.sw::Shader::DestinationParameter"*
  tail call void @_ZN4glsl9OutputASM11destinationERN2sw6Shader20DestinationParameterEP12TIntermTypedi(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::DestinationParameter"* dereferenceable(28) %55, %class.TIntermTyped* %1, i32 0) #22
  %56 = bitcast %"class.glsl::Temporary"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %56) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 136, i1 false)
  call void @_ZN4glsl9TemporaryC2EPNS_9OutputASME(%"class.glsl::Temporary"* nonnull %3, %"class.glsl::OutputASM"* %0) #22
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #20
  store i8 -86, i8* %4, align 1
  %57 = bitcast %class.TIntermTyped** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #20
  store %class.TIntermTyped* null, %class.TIntermTyped** %5, align 8
  %58 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #20
  store i32 0, i32* %6, align 4
  %59 = getelementptr inbounds i8, i8* %52, i64 60
  %60 = bitcast i8* %59 to %"struct.sw::Shader::SourceParameter"*
  %61 = getelementptr inbounds i8, i8* %52, i64 64
  %62 = bitcast i8* %61 to %"struct.sw::Shader::Relative"*
  %63 = call i32 @_ZN4glsl9OutputASM6lvalueERP12TIntermTypedRjRN2sw6Shader8RelativeERhRNS_9TemporaryES2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped** nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %6, %"struct.sw::Shader::Relative"* dereferenceable(20) %62, i8* nonnull dereferenceable(1) %4, %"class.glsl::Temporary"* nonnull dereferenceable(136) %3, %class.TIntermTyped* %1) #22
  %64 = bitcast %class.TIntermTyped** %5 to %class.TIntermNode**
  %65 = load %class.TIntermNode*, %class.TIntermNode** %64, align 8
  %66 = load i32, i32* %6, align 4
  call void @_ZN4glsl9OutputASM6sourceERN2sw6Shader15SourceParameterEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::SourceParameter"* dereferenceable(28) %60, %class.TIntermNode* %65, i32 %66) #22
  %67 = getelementptr inbounds i8, i8* %52, i64 85
  %68 = bitcast i8* %67 to i24*
  %69 = load i24, i24* %68, align 1
  %70 = and i24 %69, 255
  %71 = zext i24 %70 to i32
  %72 = shl i32 %63, 1
  %73 = and i32 %72, 6
  %74 = lshr i32 %71, %73
  %75 = and i32 %74, 3
  %76 = lshr i32 %63, 1
  %77 = and i32 %76, 6
  %78 = lshr i32 %71, %77
  %79 = shl nuw nsw i32 %78, 2
  %80 = and i32 %79, 12
  %81 = lshr i32 %63, 3
  %82 = and i32 %81, 6
  %83 = lshr i32 %71, %82
  %84 = shl nuw nsw i32 %83, 4
  %85 = and i32 %84, 48
  %86 = lshr i32 %63, 5
  %87 = and i32 %86, 6
  %88 = lshr i32 %71, %87
  %89 = shl nuw nsw i32 %88, 6
  %90 = or i32 %89, %75
  %91 = or i32 %90, %80
  %92 = or i32 %91, %85
  %93 = trunc i32 %92 to i24
  %94 = and i24 %93, 255
  %95 = and i24 %69, -256
  %96 = or i24 %94, %95
  store i24 %96, i24* %68, align 1
  %97 = getelementptr inbounds i8, i8* %52, i64 88
  %98 = bitcast i8* %97 to %"struct.sw::Shader::SourceParameter"*
  %99 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %16, i64 0, i32 2
  %100 = load %class.TIntermTyped*, %class.TIntermTyped** %99, align 8
  %101 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %100, i64 0, i32 0
  call void @_ZN4glsl9OutputASM6sourceERN2sw6Shader15SourceParameterEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::SourceParameter"* dereferenceable(28) %98, %class.TIntermNode* %101, i32 0) #22
  %102 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 2
  %103 = load %"class.sw::Shader"*, %"class.sw::Shader"** %102, align 8
  call void @_ZN2sw6Shader6appendEPNS0_11InstructionE(%"class.sw::Shader"* %103, %"struct.sw::Shader::Instruction"* nonnull %53) #21
  br label %163

104:                                              ; preds = %44, %32, %36, %40, %22, %2, %28, %18
  %105 = tail call i8* @_Znwm(i64 208) #24
  %106 = bitcast i8* %105 to %"struct.sw::Shader::Instruction"*
  tail call void @_ZN2sw6Shader11InstructionC1ENS0_6OpcodeE(%"struct.sw::Shader::Instruction"* nonnull %106, i32 1) #21
  %107 = getelementptr inbounds i8, i8* %105, i64 32
  %108 = bitcast i8* %107 to %"struct.sw::Shader::DestinationParameter"*
  tail call void @_ZN4glsl9OutputASM11destinationERN2sw6Shader20DestinationParameterEP12TIntermTypedi(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::DestinationParameter"* dereferenceable(28) %108, %class.TIntermTyped* %1, i32 0) #22
  %109 = bitcast %"class.glsl::Temporary"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %109) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 136, i1 false)
  call void @_ZN4glsl9TemporaryC2EPNS_9OutputASME(%"class.glsl::Temporary"* nonnull %7, %"class.glsl::OutputASM"* %0) #22
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #20
  store i8 -86, i8* %8, align 1
  %110 = bitcast %class.TIntermTyped** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #20
  store %class.TIntermTyped* null, %class.TIntermTyped** %9, align 8
  %111 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111) #20
  store i32 0, i32* %10, align 4
  %112 = getelementptr inbounds i8, i8* %105, i64 60
  %113 = bitcast i8* %112 to %"struct.sw::Shader::SourceParameter"*
  %114 = getelementptr inbounds i8, i8* %105, i64 64
  %115 = bitcast i8* %114 to %"struct.sw::Shader::Relative"*
  %116 = call i32 @_ZN4glsl9OutputASM6lvalueERP12TIntermTypedRjRN2sw6Shader8RelativeERhRNS_9TemporaryES2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped** nonnull dereferenceable(8) %9, i32* nonnull dereferenceable(4) %10, %"struct.sw::Shader::Relative"* dereferenceable(20) %115, i8* nonnull dereferenceable(1) %8, %"class.glsl::Temporary"* nonnull dereferenceable(136) %7, %class.TIntermTyped* %1) #22
  %117 = bitcast %class.TIntermTyped** %9 to %class.TIntermNode**
  %118 = load %class.TIntermNode*, %class.TIntermNode** %117, align 8
  %119 = load i32, i32* %10, align 4
  call void @_ZN4glsl9OutputASM6sourceERN2sw6Shader15SourceParameterEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::SourceParameter"* dereferenceable(28) %113, %class.TIntermNode* %118, i32 %119) #22
  %120 = getelementptr inbounds i8, i8* %105, i64 85
  %121 = bitcast i8* %120 to i24*
  %122 = load i24, i24* %121, align 1
  %123 = and i24 %122, 255
  %124 = zext i24 %123 to i32
  %125 = shl i32 %116, 1
  %126 = and i32 %125, 6
  %127 = lshr i32 %124, %126
  %128 = and i32 %127, 3
  %129 = lshr i32 %116, 1
  %130 = and i32 %129, 6
  %131 = lshr i32 %124, %130
  %132 = shl nuw nsw i32 %131, 2
  %133 = and i32 %132, 12
  %134 = lshr i32 %116, 3
  %135 = and i32 %134, 6
  %136 = lshr i32 %124, %135
  %137 = shl nuw nsw i32 %136, 4
  %138 = and i32 %137, 48
  %139 = lshr i32 %116, 5
  %140 = and i32 %139, 6
  %141 = lshr i32 %124, %140
  %142 = shl nuw nsw i32 %141, 6
  %143 = or i32 %142, %128
  %144 = or i32 %143, %133
  %145 = or i32 %144, %138
  %146 = trunc i32 %145 to i24
  %147 = and i24 %146, 255
  %148 = and i24 %122, -256
  %149 = or i24 %147, %148
  store i24 %149, i24* %121, align 1
  %150 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 2
  %151 = load %"class.sw::Shader"*, %"class.sw::Shader"** %150, align 8
  call void @_ZN2sw6Shader6appendEPNS0_11InstructionE(%"class.sw::Shader"* %151, %"struct.sw::Shader::Instruction"* nonnull %106) #21
  %152 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1
  %153 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %152) #21
  %154 = icmp sgt i32 %153, 1
  br i1 %154, label %155, label %163

155:                                              ; preds = %104, %155
  %156 = phi i32 [ %160, %155 ], [ 1, %104 ]
  %157 = add i32 %156, %119
  %158 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* %1, i32 %156, %class.TIntermNode* %118, i32 %157, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %159 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %158, i64 0, i32 12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %159, i8* align 4 %114, i64 20, i1 false)
  %160 = add nuw nsw i32 %156, 1
  %161 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %152) #21
  %162 = icmp slt i32 %160, %161
  br i1 %162, label %155, label %163

163:                                              ; preds = %155, %104, %51
  %164 = phi i8* [ %58, %51 ], [ %111, %104 ], [ %111, %155 ]
  %165 = phi i8* [ %57, %51 ], [ %110, %104 ], [ %110, %155 ]
  %166 = phi i8* [ %4, %51 ], [ %8, %104 ], [ %8, %155 ]
  %167 = phi %"class.glsl::Temporary"* [ %3, %51 ], [ %7, %104 ], [ %7, %155 ]
  %168 = phi i8* [ %56, %51 ], [ %109, %104 ], [ %109, %155 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %166) #20
  call void @_ZN4glsl9TemporaryD2Ev(%"class.glsl::Temporary"* nonnull %167) #21
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %168) #20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM10emitAssignEN2sw6Shader6OpcodeEP12TIntermTypedS5_S5_S5_(%"class.glsl::OutputASM"*, i32, %class.TIntermTyped*, %class.TIntermTyped*, %class.TIntermTyped*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %4, i64 0, i32 0
  %8 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %5, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 %1, %class.TIntermTyped* %2, %class.TIntermNode* %7, %class.TIntermNode* %8, %class.TIntermNode* null) #22
  tail call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %3, %class.TIntermTyped* %2) #22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"*, i32, %class.TIntermTyped*, %class.TIntermNode*, %class.TIntermNode*, %class.TIntermNode*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1
  %8 = tail call i32 @_ZNK5TType20elementRegisterCountEv(%class.TType* %7) #21
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %11, %6
  ret void

11:                                               ; preds = %6, %11
  %12 = phi i32 [ %14, %11 ], [ 0, %6 ]
  %13 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %1, %class.TIntermTyped* %2, i32 %12, %class.TIntermNode* %3, i32 %12, %class.TIntermNode* %4, i32 %12, %class.TIntermNode* %5, i32 %12, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %14 = add nuw nsw i32 %12, 1
  %15 = tail call i32 @_ZNK5TType20elementRegisterCountEv(%class.TType* %7) #21
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %11, label %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4glsl9TemporaryC2EPNS_9OutputASME(%"class.glsl::Temporary"*, %"class.glsl::OutputASM"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca [26 x i8], align 2
  %5 = alloca [20 x i8], align 4
  %6 = load i32, i32* @_ZN17TSymbolTableLevel8uniqueIdE, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* @_ZN17TSymbolTableLevel8uniqueIdE, align 4
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #20
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i64 0, i64 0)) #22
  %9 = getelementptr inbounds [26 x i8], [26 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %9)
  %10 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %10)
  %11 = getelementptr inbounds [26 x i8], [26 x i8]* %4, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %11, i8 0, i64 24, i1 false)
  %12 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 16, i1 false)
  %13 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #20
  %16 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  store i8 3, i8* %17, align 1
  %18 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  store i8 0, i8* %18, align 2
  %19 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 0, i32 1, i32 3
  store i8 4, i8* %19, align 1
  %20 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 0, i32 1, i32 4
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 0, i32 1, i32 5
  store i8 0, i8* %21, align 1
  %22 = bitcast %"class.glsl::Temporary"* %0 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %23, i8* nonnull align 2 %9, i64 26, i1 false)
  %24 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 0, i32 1, i32 10
  %25 = bitcast %struct.TLayoutQualifier* %24 to i64*
  store i64 4294967295, i64* %25, align 8
  %26 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 0, i32 1, i32 10, i32 2
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %22, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* nonnull align 4 %10, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV13TIntermSymbol, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %28 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 1
  store i32 %7, i32* %28, align 8
  %29 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %31 = call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #21
  store %class.TPoolAllocator* %31, %class.TPoolAllocator** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #20
  %33 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEaSERKS5_(%"class.std::__1::basic_string"* %29, %"class.std::__1::basic_string"* nonnull dereferenceable(32) %3) #21
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN4glsl9TemporaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %34 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 1
  store %"class.glsl::OutputASM"* %1, %"class.glsl::OutputASM"** %34, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4glsl9TemporaryD2Ev(%"class.glsl::Temporary"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN4glsl9TemporaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 1
  %4 = load %"class.glsl::OutputASM"*, %"class.glsl::OutputASM"** %3, align 8
  %5 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %4, i64 0, i32 5
  %6 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %0, i64 0, i32 0, i32 0
  %7 = tail call i32 @_ZN4glsl9OutputASM6lookupERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_(%"class.glsl::OutputASM"* undef, %"class.std::__1::vector.90"* dereferenceable(24) %5, %class.TIntermTyped* %6) #21
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = sext i32 %7 to i64
  %11 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %5, i64 0, i32 0, i32 0
  %12 = load %class.TIntermTyped**, %class.TIntermTyped*** %11, align 8
  %13 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %12, i64 %10
  store %class.TIntermTyped* null, %class.TIntermTyped** %13, align 8
  br label %14

14:                                               ; preds = %1, %9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV13TIntermSymbol, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM7emitCmpEN2sw6Shader7ControlEP12TIntermTypedP11TIntermNodeS7_i(%"class.glsl::OutputASM"*, i32, %class.TIntermTyped*, %class.TIntermNode*, %class.TIntermNode*, i32) local_unnamed_addr #0 align 2 {
  %7 = bitcast %class.TIntermNode* %3 to %class.TIntermTyped* (%class.TIntermNode*)***
  %8 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %7, align 8
  %9 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %8, i64 1
  %10 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %9, align 8
  %11 = tail call %class.TIntermTyped* %10(%class.TIntermNode* %3) #21
  %12 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = add i8 %13, -2
  %15 = icmp ult i8 %14, 3
  br i1 %15, label %16, label %20

16:                                               ; preds = %6
  %17 = sext i8 %14 to i64
  %18 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN4glsl9OutputASM7emitCmpEN2sw6Shader7ControlEP12TIntermTypedP11TIntermNodeS7_i, i64 0, i64 %17
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %6, %16
  %21 = phi i32 [ %19, %16 ], [ 94, %6 ]
  %22 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %21, %class.TIntermTyped* %2, i32 0, %class.TIntermNode* %3, i32 %5, %class.TIntermNode* %4, i32 %5, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %23 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %22, i64 0, i32 2, i32 0
  store i32 %1, i32* %23, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4glsl9OutputASM7trivialEP12TIntermTypedi(%"class.glsl::OutputASM"*, %class.TIntermTyped*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 4
  %5 = load i8, i8* %4, align 4
  %6 = icmp ugt i8 %5, 1
  br i1 %6, label %23, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 11
  %9 = load %class.TStructure*, %class.TStructure** %8, align 8
  %10 = icmp eq %class.TStructure* %9, null
  br i1 %10, label %11, label %23

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 5
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 38
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0
  %21 = tail call i32 @_ZN4glsl9OutputASM4costEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermNode* %20, i32 %2) #22
  %22 = icmp sgt i32 %21, -1
  br label %23

23:                                               ; preds = %15, %3, %7, %11, %19
  %24 = phi i1 [ %22, %19 ], [ false, %15 ], [ false, %11 ], [ false, %7 ], [ false, %3 ]
  ret i1 %24
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM15emitDeterminantEP12TIntermTypedS2_iiiii(%"class.glsl::OutputASM"*, %class.TIntermTyped*, %class.TIntermTyped*, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  switch i32 %3, label %120 [
    i32 1, label %9
    i32 2, label %26
    i32 3, label %65
    i32 4, label %112
  ]

9:                                                ; preds = %8
  %10 = icmp eq i32 %5, %4
  %11 = select i1 %10, i32 1, i32 268435510
  %12 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  %13 = sub nsw i32 1, %5
  %14 = select i1 %10, i32 %13, i32 %5
  %15 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %11, %class.TIntermTyped* %1, i32 %6, %class.TIntermNode* %12, i32 %14, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %16 = sub nsw i32 1, %4
  %17 = select i1 %10, i32 %16, i32 %4
  %18 = mul nsw i32 %17, 85
  %19 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %15, i64 0, i32 12, i64 0, i32 1
  %20 = bitcast [3 x i8]* %19 to i24*
  %21 = trunc i32 %18 to i24
  %22 = load i24, i24* %20, align 1
  %23 = and i24 %21, 255
  %24 = and i24 %22, -256
  %25 = or i24 %24, %23
  store i24 %25, i24* %20, align 1
  br label %115

26:                                               ; preds = %8
  %27 = or i32 %5, %4
  %28 = icmp sgt i32 %27, -1
  %29 = icmp slt i32 %4, 1
  %30 = and i1 %29, %28
  %31 = zext i1 %30 to i32
  %32 = icmp slt i32 %4, 2
  %33 = and i1 %32, %28
  %34 = select i1 %33, i32 2, i32 1
  br i1 %28, label %37, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  br label %42

37:                                               ; preds = %26
  %38 = xor i32 %5, %4
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  br i1 %40, label %42, label %44

42:                                               ; preds = %37, %35
  %43 = phi %class.TIntermNode* [ %36, %35 ], [ %41, %37 ]
  br label %44

44:                                               ; preds = %37, %42
  %45 = phi i32 [ %31, %42 ], [ %34, %37 ]
  %46 = phi %class.TIntermNode* [ %43, %42 ], [ %41, %37 ]
  %47 = phi i32 [ %34, %42 ], [ %31, %37 ]
  %48 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435505, %class.TIntermTyped* %1, i32 %6, %class.TIntermNode* %46, i32 %45, %class.TIntermNode* %46, i32 %47, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %49 = select i1 %28, i32 %5, i32 2
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [3 x i32], [3 x i32]* @_ZZN4glsl9OutputASM15emitDeterminantEP12TIntermTypedS2_iiiiiE7swizzle, i64 0, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %48, i64 0, i32 12, i64 1, i32 1
  %54 = bitcast [3 x i8]* %53 to i24*
  %55 = trunc i32 %52 to i24
  %56 = load i24, i24* %54, align 1
  %57 = and i24 %55, 255
  %58 = and i24 %56, -256
  %59 = or i24 %58, %57
  store i24 %59, i24* %54, align 1
  %60 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %48, i64 0, i32 12, i64 0, i32 1
  %61 = bitcast [3 x i8]* %60 to i24*
  %62 = load i24, i24* %61, align 1
  %63 = and i24 %62, -256
  %64 = or i24 %63, %57
  store i24 %64, i24* %61, align 1
  br label %115

65:                                               ; preds = %8
  %66 = or i32 %5, %4
  %67 = icmp sgt i32 %66, -1
  %68 = icmp slt i32 %4, 1
  %69 = and i1 %68, %67
  %70 = zext i1 %69 to i32
  %71 = icmp slt i32 %4, 2
  %72 = and i1 %71, %67
  %73 = select i1 %72, i32 2, i32 1
  %74 = icmp slt i32 %4, 3
  %75 = and i1 %74, %67
  %76 = select i1 %75, i32 3, i32 2
  br i1 %67, label %79, label %77

77:                                               ; preds = %65
  %78 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  br label %84

79:                                               ; preds = %65
  %80 = xor i32 %5, %4
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  br i1 %82, label %84, label %86

84:                                               ; preds = %79, %77
  %85 = phi %class.TIntermNode* [ %78, %77 ], [ %83, %79 ]
  br label %86

86:                                               ; preds = %79, %84
  %87 = phi i32 [ %73, %84 ], [ %76, %79 ]
  %88 = phi %class.TIntermNode* [ %85, %84 ], [ %83, %79 ]
  %89 = phi i32 [ %76, %84 ], [ %73, %79 ]
  %90 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435506, %class.TIntermTyped* %1, i32 %6, %class.TIntermNode* %88, i32 %70, %class.TIntermNode* %88, i32 %87, %class.TIntermNode* %88, i32 %89, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %91 = select i1 %67, i32 %5, i32 3
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZZN4glsl9OutputASM15emitDeterminantEP12TIntermTypedS2_iiiiiE7swizzle_0, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %90, i64 0, i32 12, i64 2, i32 1
  %96 = bitcast [3 x i8]* %95 to i24*
  %97 = trunc i32 %94 to i24
  %98 = load i24, i24* %96, align 1
  %99 = and i24 %97, 255
  %100 = and i24 %98, -256
  %101 = or i24 %100, %99
  store i24 %101, i24* %96, align 1
  %102 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %90, i64 0, i32 12, i64 1, i32 1
  %103 = bitcast [3 x i8]* %102 to i24*
  %104 = load i24, i24* %103, align 1
  %105 = and i24 %104, -256
  %106 = or i24 %105, %99
  store i24 %106, i24* %103, align 1
  %107 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %90, i64 0, i32 12, i64 0, i32 1
  %108 = bitcast [3 x i8]* %107 to i24*
  %109 = load i24, i24* %108, align 1
  %110 = and i24 %109, -256
  %111 = or i24 %110, %99
  store i24 %111, i24* %108, align 1
  br label %115

112:                                              ; preds = %8
  %113 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  %114 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435507, %class.TIntermTyped* %1, i32 %6, %class.TIntermNode* %113, i32 0, %class.TIntermNode* %113, i32 1, %class.TIntermNode* %113, i32 2, %class.TIntermNode* %113, i32 3, %class.TIntermNode* null, i32 0) #22
  br label %115

115:                                              ; preds = %9, %44, %86, %112
  %116 = phi %"struct.sw::Shader::Instruction"* [ %114, %112 ], [ %90, %86 ], [ %48, %44 ], [ %15, %9 ]
  %117 = shl i32 1, %7
  %118 = trunc i32 %117 to i8
  %119 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %116, i64 0, i32 11, i32 1, i32 0
  store i8 %118, i8* %119, align 1
  br label %120

120:                                              ; preds = %115, %8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4glsl9OutputASM10visitUnaryE5VisitP12TIntermUnary(%"class.glsl::OutputASM"*, i32, %class.TIntermUnary*) unnamed_addr #0 align 2 {
  %4 = alloca [26 x i8], align 2
  %5 = alloca [20 x i8], align 4
  %6 = alloca %"class.glsl::Constant", align 8
  %7 = alloca %"class.glsl::Constant", align 8
  %8 = alloca %"class.glsl::Constant", align 8
  %9 = alloca %"class.glsl::Temporary", align 8
  %10 = alloca %"class.glsl::Constant", align 8
  %11 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 13
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 12
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %639

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %2, i64 0, i32 1
  %18 = load %class.TIntermTyped*, %class.TIntermTyped** %17, align 8
  %19 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 1
  %20 = getelementptr inbounds %class.TType, %class.TType* %19, i64 0, i32 0
  %21 = load i8, i8* %20, align 8
  %22 = and i8 %21, -2
  %23 = icmp eq i8 %22, 2
  %24 = bitcast %"class.glsl::Constant"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %24) #20
  %25 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 1
  %26 = bitcast [4 x %class.ConstantUnion]* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 32, i1 false)
  %27 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 1, i64 0
  %29 = getelementptr inbounds [26 x i8], [26 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %29)
  %30 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %30)
  %31 = getelementptr inbounds [26 x i8], [26 x i8]* %4, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %31, i8 0, i64 24, i1 false)
  %32 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 16, i1 false)
  %33 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = bitcast i32* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #20
  %35 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8 1, i8* %35, align 8
  %36 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 0, i32 1, i32 1
  store i8 3, i8* %36, align 1
  %37 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 0, i32 1, i32 2
  %38 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 0, i32 1, i32 3
  store i8 4, i8* %38, align 1
  %39 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 0, i32 1, i32 4
  store i8 1, i8* %39, align 4
  %40 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 0, i32 1, i32 5
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds i8, i8* %24, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %41, i8* nonnull align 2 %29, i64 26, i1 false) #20
  %42 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 0, i32 1, i32 10
  %43 = bitcast %struct.TLayoutQualifier* %42 to i64*
  store i64 4294967295, i64* %43, align 8
  %44 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 0, i32 1, i32 10, i32 2
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds i8, i8* %24, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* nonnull align 4 %30, i64 20, i1 false) #20
  %46 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 1
  store %class.ConstantUnion* %28, %class.ConstantUnion** %46, align 8
  store i8 2, i8* %37, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %29)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %30)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN4glsl8ConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %47 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 1, i64 4
  br label %48

48:                                               ; preds = %48, %16
  %49 = phi %class.ConstantUnion* [ %28, %16 ], [ %52, %48 ]
  %50 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %49, i64 0, i32 0, i32 0
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %49, i64 0, i32 1
  store i8 0, i8* %51, align 4
  %52 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %49, i64 1
  %53 = icmp eq %class.ConstantUnion* %52, %47
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %2, i64 0, i32 0, i32 0
  %56 = select i1 %23, float 0x36A0000000000000, float 1.000000e+00
  %57 = bitcast %class.ConstantUnion* %28 to float*
  store float %56, float* %57, align 8
  %58 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 1, i64 0, i32 1
  store i8 1, i8* %58, align 4
  %59 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 1, i64 1
  %60 = bitcast %class.ConstantUnion* %59 to float*
  store float %56, float* %60, align 8
  %61 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 1, i64 1, i32 1
  store i8 1, i8* %61, align 4
  %62 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 1, i64 2
  %63 = bitcast %class.ConstantUnion* %62 to float*
  store float %56, float* %63, align 8
  %64 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 1, i64 2, i32 1
  store i8 1, i8* %64, align 4
  %65 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 1, i64 3
  %66 = bitcast %class.ConstantUnion* %65 to float*
  store float %56, float* %66, align 8
  %67 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 1, i64 3, i32 1
  store i8 1, i8* %67, align 4
  %68 = bitcast %"class.glsl::Constant"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %68) #20
  %69 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1
  %70 = bitcast [4 x %class.ConstantUnion]* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 32, i1 false)
  %71 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %29)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %30)
  call void @llvm.memset.p0i8.i64(i8* align 2 %31, i8 0, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 16, i1 false)
  %73 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %74 = bitcast i32* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 16, i1 false) #20
  %75 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8 1, i8* %75, align 8
  %76 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 1
  store i8 3, i8* %76, align 1
  %77 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 2
  %78 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 3
  store i8 4, i8* %78, align 1
  %79 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 4
  store i8 1, i8* %79, align 4
  %80 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 5
  store i8 0, i8* %80, align 1
  %81 = getelementptr inbounds i8, i8* %68, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %81, i8* nonnull align 2 %29, i64 26, i1 false) #20
  %82 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 10
  %83 = bitcast %struct.TLayoutQualifier* %82 to i64*
  store i64 4294967295, i64* %83, align 8
  %84 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 10, i32 2
  store i32 0, i32* %84, align 8
  %85 = getelementptr inbounds i8, i8* %68, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* nonnull align 4 %30, i64 20, i1 false) #20
  %86 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 1
  store %class.ConstantUnion* %72, %class.ConstantUnion** %86, align 8
  store i8 2, i8* %77, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %29)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %30)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN4glsl8ConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %87 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 4
  br label %88

88:                                               ; preds = %88, %54
  %89 = phi %class.ConstantUnion* [ %72, %54 ], [ %92, %88 ]
  %90 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %89, i64 0, i32 0, i32 0
  store i32 0, i32* %90, align 4
  %91 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %89, i64 0, i32 1
  store i8 0, i8* %91, align 4
  %92 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %89, i64 1
  %93 = icmp eq %class.ConstantUnion* %92, %87
  br i1 %93, label %94, label %88

94:                                               ; preds = %88
  %95 = bitcast %class.ConstantUnion* %72 to float*
  store float 0x3F91DF46A0000000, float* %95, align 8
  %96 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 0, i32 1
  store i8 1, i8* %96, align 4
  %97 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 1
  %98 = bitcast %class.ConstantUnion* %97 to float*
  store float 0x3F91DF46A0000000, float* %98, align 8
  %99 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 1, i32 1
  store i8 1, i8* %99, align 4
  %100 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 2
  %101 = bitcast %class.ConstantUnion* %100 to float*
  store float 0x3F91DF46A0000000, float* %101, align 8
  %102 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 2, i32 1
  store i8 1, i8* %102, align 4
  %103 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 3
  %104 = bitcast %class.ConstantUnion* %103 to float*
  store float 0x3F91DF46A0000000, float* %104, align 8
  %105 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 3, i32 1
  store i8 1, i8* %105, align 4
  %106 = bitcast %"class.glsl::Constant"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %106) #20
  %107 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 1
  %108 = bitcast [4 x %class.ConstantUnion]* %107 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 32, i1 false)
  %109 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 1, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %29)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %30)
  call void @llvm.memset.p0i8.i64(i8* align 2 %31, i8 0, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 16, i1 false)
  %111 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %112 = bitcast i32* %111 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 16, i1 false) #20
  %113 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8 1, i8* %113, align 8
  %114 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 0, i32 0, i32 1, i32 1
  store i8 3, i8* %114, align 1
  %115 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 0, i32 0, i32 1, i32 2
  %116 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 0, i32 0, i32 1, i32 3
  store i8 4, i8* %116, align 1
  %117 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 0, i32 0, i32 1, i32 4
  store i8 1, i8* %117, align 4
  %118 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 0, i32 0, i32 1, i32 5
  store i8 0, i8* %118, align 1
  %119 = getelementptr inbounds i8, i8* %106, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %119, i8* nonnull align 2 %29, i64 26, i1 false) #20
  %120 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 0, i32 0, i32 1, i32 10
  %121 = bitcast %struct.TLayoutQualifier* %120 to i64*
  store i64 4294967295, i64* %121, align 8
  %122 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 0, i32 0, i32 1, i32 10, i32 2
  store i32 0, i32* %122, align 8
  %123 = getelementptr inbounds i8, i8* %106, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %123, i8* nonnull align 4 %30, i64 20, i1 false) #20
  %124 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 0, i32 1
  store %class.ConstantUnion* %110, %class.ConstantUnion** %124, align 8
  store i8 2, i8* %115, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %29)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %30)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN4glsl8ConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %125 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 1, i64 4
  br label %126

126:                                              ; preds = %126, %94
  %127 = phi %class.ConstantUnion* [ %110, %94 ], [ %130, %126 ]
  %128 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %127, i64 0, i32 0, i32 0
  store i32 0, i32* %128, align 4
  %129 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %127, i64 0, i32 1
  store i8 0, i8* %129, align 4
  %130 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %127, i64 1
  %131 = icmp eq %class.ConstantUnion* %130, %125
  br i1 %131, label %132, label %126

132:                                              ; preds = %126
  %133 = bitcast %class.ConstantUnion* %110 to float*
  store float 0x404CA5DC20000000, float* %133, align 8
  %134 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 1, i64 0, i32 1
  store i8 1, i8* %134, align 4
  %135 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 1, i64 1
  %136 = bitcast %class.ConstantUnion* %135 to float*
  store float 0x404CA5DC20000000, float* %136, align 8
  %137 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 1, i64 1, i32 1
  store i8 1, i8* %137, align 4
  %138 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 1, i64 2
  %139 = bitcast %class.ConstantUnion* %138 to float*
  store float 0x404CA5DC20000000, float* %139, align 8
  %140 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 1, i64 2, i32 1
  store i8 1, i8* %140, align 4
  %141 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 1, i64 3
  %142 = bitcast %class.ConstantUnion* %141 to float*
  store float 0x404CA5DC20000000, float* %142, align 8
  %143 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 1, i64 3, i32 1
  store i8 1, i8* %143, align 4
  %144 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %2, i64 0, i32 0, i32 1
  %145 = load i32, i32* %144, align 8
  switch i32 %145, label %638 [
    i32 8, label %146
    i32 10, label %164
    i32 9, label %169
    i32 11, label %174
    i32 12, label %179
    i32 13, label %199
    i32 14, label %219
    i32 15, label %239
    i32 51, label %259
    i32 52, label %265
    i32 53, label %271
    i32 54, label %276
    i32 55, label %281
    i32 56, label %286
    i32 57, label %291
    i32 58, label %296
    i32 59, label %301
    i32 60, label %306
    i32 61, label %311
    i32 62, label %316
    i32 63, label %321
    i32 64, label %326
    i32 66, label %331
    i32 67, label %336
    i32 68, label %341
    i32 69, label %346
    i32 70, label %351
    i32 71, label %356
    i32 72, label %361
    i32 73, label %370
    i32 74, label %379
    i32 75, label %384
    i32 76, label %389
    i32 77, label %394
    i32 78, label %399
    i32 79, label %405
    i32 88, label %410
    i32 89, label %415
    i32 100, label %420
    i32 104, label %434
    i32 108, label %448
    i32 109, label %453
    i32 110, label %458
    i32 112, label %463
    i32 113, label %468
    i32 90, label %473
    i32 91, label %478
    i32 92, label %483
    i32 93, label %488
    i32 94, label %493
    i32 95, label %498
    i32 96, label %503
    i32 97, label %508
    i32 98, label %513
    i32 99, label %518
    i32 30, label %523
    i32 31, label %558
    i32 32, label %564
  ]

146:                                              ; preds = %132
  %147 = icmp eq i32 %1, 2
  br i1 %147, label %148, label %638

148:                                              ; preds = %146
  %149 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 8
  %151 = and i8 %150, -2
  %152 = icmp eq i8 %151, 2
  %153 = select i1 %152, i32 268435566, i32 268435510
  %154 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %19) #21
  %155 = icmp sgt i32 %154, 0
  br i1 %155, label %156, label %638

156:                                              ; preds = %148
  %157 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  br label %158

158:                                              ; preds = %156, %158
  %159 = phi i32 [ 0, %156 ], [ %161, %158 ]
  %160 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %153, %class.TIntermTyped* %55, i32 %159, %class.TIntermNode* %157, i32 %159, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %161 = add nuw nsw i32 %159, 1
  %162 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %19) #21
  %163 = icmp slt i32 %161, %162
  br i1 %163, label %158, label %638

164:                                              ; preds = %132
  %165 = icmp eq i32 %1, 2
  br i1 %165, label %166, label %638

166:                                              ; preds = %164
  %167 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %168 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435511, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %167, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

169:                                              ; preds = %132
  %170 = icmp eq i32 %1, 2
  br i1 %170, label %171, label %638

171:                                              ; preds = %169
  %172 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %173 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435511, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %172, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

174:                                              ; preds = %132
  %175 = icmp eq i32 %1, 2
  br i1 %175, label %176, label %638

176:                                              ; preds = %174
  %177 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %178 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435511, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %177, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

179:                                              ; preds = %132
  %180 = icmp eq i32 %1, 2
  br i1 %180, label %181, label %638

181:                                              ; preds = %179
  %182 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  call void @_ZN4glsl9OutputASM4copyEP12TIntermTypedP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %55, %class.TIntermNode* %182, i32 0) #22
  %183 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 1, i32 0
  %184 = load i8, i8* %183, align 8
  %185 = and i8 %184, -2
  %186 = icmp eq i8 %185, 2
  %187 = select i1 %186, i32 268435569, i32 2
  %188 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %19) #21
  %189 = icmp sgt i32 %188, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %181
  %191 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 0, i32 0
  br label %193

192:                                              ; preds = %193, %181
  call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %18, %class.TIntermTyped* %18) #22
  br label %638

193:                                              ; preds = %190, %193
  %194 = phi i32 [ 0, %190 ], [ %196, %193 ]
  %195 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %187, %class.TIntermTyped* %18, i32 %194, %class.TIntermNode* %182, i32 %194, %class.TIntermNode* nonnull %191, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %196 = add nuw nsw i32 %194, 1
  %197 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %19) #21
  %198 = icmp slt i32 %196, %197
  br i1 %198, label %193, label %192

199:                                              ; preds = %132
  %200 = icmp eq i32 %1, 2
  br i1 %200, label %201, label %638

201:                                              ; preds = %199
  %202 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  call void @_ZN4glsl9OutputASM4copyEP12TIntermTypedP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %55, %class.TIntermNode* %202, i32 0) #22
  %203 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 1, i32 0
  %204 = load i8, i8* %203, align 8
  %205 = and i8 %204, -2
  %206 = icmp eq i8 %205, 2
  %207 = select i1 %206, i32 268435570, i32 3
  %208 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %19) #21
  %209 = icmp sgt i32 %208, 0
  br i1 %209, label %210, label %212

210:                                              ; preds = %201
  %211 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 0, i32 0
  br label %213

212:                                              ; preds = %213, %201
  call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %18, %class.TIntermTyped* %18) #22
  br label %638

213:                                              ; preds = %210, %213
  %214 = phi i32 [ 0, %210 ], [ %216, %213 ]
  %215 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %207, %class.TIntermTyped* %18, i32 %214, %class.TIntermNode* %202, i32 %214, %class.TIntermNode* nonnull %211, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %216 = add nuw nsw i32 %214, 1
  %217 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %19) #21
  %218 = icmp slt i32 %216, %217
  br i1 %218, label %213, label %212

219:                                              ; preds = %132
  %220 = icmp eq i32 %1, 2
  br i1 %220, label %221, label %638

221:                                              ; preds = %219
  %222 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 1, i32 0
  %223 = load i8, i8* %222, align 8
  %224 = and i8 %223, -2
  %225 = icmp eq i8 %224, 2
  %226 = select i1 %225, i32 268435569, i32 2
  %227 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %19) #21
  %228 = icmp sgt i32 %227, 0
  br i1 %228, label %229, label %232

229:                                              ; preds = %221
  %230 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %231 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 0, i32 0
  br label %233

232:                                              ; preds = %233, %221
  call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %18, %class.TIntermTyped* %55) #22
  br label %638

233:                                              ; preds = %229, %233
  %234 = phi i32 [ 0, %229 ], [ %236, %233 ]
  %235 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %226, %class.TIntermTyped* %55, i32 %234, %class.TIntermNode* %230, i32 %234, %class.TIntermNode* nonnull %231, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %236 = add nuw nsw i32 %234, 1
  %237 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %19) #21
  %238 = icmp slt i32 %236, %237
  br i1 %238, label %233, label %232

239:                                              ; preds = %132
  %240 = icmp eq i32 %1, 2
  br i1 %240, label %241, label %638

241:                                              ; preds = %239
  %242 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 1, i32 0
  %243 = load i8, i8* %242, align 8
  %244 = and i8 %243, -2
  %245 = icmp eq i8 %244, 2
  %246 = select i1 %245, i32 268435570, i32 3
  %247 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %19) #21
  %248 = icmp sgt i32 %247, 0
  br i1 %248, label %249, label %252

249:                                              ; preds = %241
  %250 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %251 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %6, i64 0, i32 0, i32 0, i32 0
  br label %253

252:                                              ; preds = %253, %241
  call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %18, %class.TIntermTyped* %55) #22
  br label %638

253:                                              ; preds = %249, %253
  %254 = phi i32 [ 0, %249 ], [ %256, %253 ]
  %255 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %246, %class.TIntermTyped* %55, i32 %254, %class.TIntermNode* %250, i32 %254, %class.TIntermNode* nonnull %251, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %256 = add nuw nsw i32 %254, 1
  %257 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %19) #21
  %258 = icmp slt i32 %256, %257
  br i1 %258, label %253, label %252

259:                                              ; preds = %132
  %260 = icmp eq i32 %1, 2
  br i1 %260, label %261, label %638

261:                                              ; preds = %259
  %262 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %263 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 0
  %264 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 5, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %262, i32 0, %class.TIntermNode* nonnull %263, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

265:                                              ; preds = %132
  %266 = icmp eq i32 %1, 2
  br i1 %266, label %267, label %638

267:                                              ; preds = %265
  %268 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %269 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %8, i64 0, i32 0, i32 0, i32 0
  %270 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 5, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %268, i32 0, %class.TIntermNode* nonnull %269, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

271:                                              ; preds = %132
  %272 = icmp eq i32 %1, 2
  br i1 %272, label %273, label %638

273:                                              ; preds = %271
  %274 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %275 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435460, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %274, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

276:                                              ; preds = %132
  %277 = icmp eq i32 %1, 2
  br i1 %277, label %278, label %638

278:                                              ; preds = %276
  %279 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %280 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435459, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %279, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

281:                                              ; preds = %132
  %282 = icmp eq i32 %1, 2
  br i1 %282, label %283, label %638

283:                                              ; preds = %281
  %284 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %285 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435461, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %284, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

286:                                              ; preds = %132
  %287 = icmp eq i32 %1, 2
  br i1 %287, label %288, label %638

288:                                              ; preds = %286
  %289 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %290 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435463, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %289, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

291:                                              ; preds = %132
  %292 = icmp eq i32 %1, 2
  br i1 %292, label %293, label %638

293:                                              ; preds = %291
  %294 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %295 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435462, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %294, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

296:                                              ; preds = %132
  %297 = icmp eq i32 %1, 2
  br i1 %297, label %298, label %638

298:                                              ; preds = %296
  %299 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %300 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435464, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %299, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

301:                                              ; preds = %132
  %302 = icmp eq i32 %1, 2
  br i1 %302, label %303, label %638

303:                                              ; preds = %301
  %304 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %305 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435467, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %304, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

306:                                              ; preds = %132
  %307 = icmp eq i32 %1, 2
  br i1 %307, label %308, label %638

308:                                              ; preds = %306
  %309 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %310 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435466, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %309, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

311:                                              ; preds = %132
  %312 = icmp eq i32 %1, 2
  br i1 %312, label %313, label %638

313:                                              ; preds = %311
  %314 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %315 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435468, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %314, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

316:                                              ; preds = %132
  %317 = icmp eq i32 %1, 2
  br i1 %317, label %318, label %638

318:                                              ; preds = %316
  %319 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %320 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435470, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %319, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

321:                                              ; preds = %132
  %322 = icmp eq i32 %1, 2
  br i1 %322, label %323, label %638

323:                                              ; preds = %321
  %324 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %325 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435469, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %324, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

326:                                              ; preds = %132
  %327 = icmp eq i32 %1, 2
  br i1 %327, label %328, label %638

328:                                              ; preds = %326
  %329 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %330 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435471, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %329, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

331:                                              ; preds = %132
  %332 = icmp eq i32 %1, 2
  br i1 %332, label %333, label %638

333:                                              ; preds = %331
  %334 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %335 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435494, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %334, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

336:                                              ; preds = %132
  %337 = icmp eq i32 %1, 2
  br i1 %337, label %338, label %638

338:                                              ; preds = %336
  %339 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %340 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435495, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %339, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

341:                                              ; preds = %132
  %342 = icmp eq i32 %1, 2
  br i1 %342, label %343, label %638

343:                                              ; preds = %341
  %344 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %345 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435492, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %344, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

346:                                              ; preds = %132
  %347 = icmp eq i32 %1, 2
  br i1 %347, label %348, label %638

348:                                              ; preds = %346
  %349 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %350 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435493, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %349, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

351:                                              ; preds = %132
  %352 = icmp eq i32 %1, 2
  br i1 %352, label %353, label %638

353:                                              ; preds = %351
  %354 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %355 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435479, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %354, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

356:                                              ; preds = %132
  %357 = icmp eq i32 %1, 2
  br i1 %357, label %358, label %638

358:                                              ; preds = %356
  %359 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %360 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435480, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %359, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

361:                                              ; preds = %132
  %362 = icmp eq i32 %1, 2
  br i1 %362, label %363, label %638

363:                                              ; preds = %361
  %364 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %365 = load i8, i8* %364, align 8
  %366 = icmp eq i8 %365, 2
  %367 = select i1 %366, i32 268435567, i32 35
  %368 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %369 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %367, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %368, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

370:                                              ; preds = %132
  %371 = icmp eq i32 %1, 2
  br i1 %371, label %372, label %638

372:                                              ; preds = %370
  %373 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %374 = load i8, i8* %373, align 8
  %375 = icmp eq i8 %374, 2
  %376 = select i1 %375, i32 268435568, i32 34
  %377 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %378 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %376, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %377, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

379:                                              ; preds = %132
  %380 = icmp eq i32 %1, 2
  br i1 %380, label %381, label %638

381:                                              ; preds = %379
  %382 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %383 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435475, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %382, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

384:                                              ; preds = %132
  %385 = icmp eq i32 %1, 2
  br i1 %385, label %386, label %638

386:                                              ; preds = %384
  %387 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %388 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435474, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %387, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

389:                                              ; preds = %132
  %390 = icmp eq i32 %1, 2
  br i1 %390, label %391, label %638

391:                                              ; preds = %389
  %392 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %393 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435476, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %392, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

394:                                              ; preds = %132
  %395 = icmp eq i32 %1, 2
  br i1 %395, label %396, label %638

396:                                              ; preds = %394
  %397 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %398 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435477, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %397, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

399:                                              ; preds = %132
  %400 = icmp eq i32 %1, 2
  br i1 %400, label %401, label %638

401:                                              ; preds = %399
  %402 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %403 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %2, i64 0, i32 0, i32 0, i32 0
  %404 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435478, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %402, i32 0, %class.TIntermNode* %403, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

405:                                              ; preds = %132
  %406 = icmp eq i32 %1, 2
  br i1 %406, label %407, label %638

407:                                              ; preds = %405
  %408 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %409 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 19, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %408, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

410:                                              ; preds = %132
  %411 = icmp eq i32 %1, 2
  br i1 %411, label %412, label %638

412:                                              ; preds = %410
  %413 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %414 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435519, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %413, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

415:                                              ; preds = %132
  %416 = icmp eq i32 %1, 2
  br i1 %416, label %417, label %638

417:                                              ; preds = %415
  %418 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %419 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435520, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %418, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

420:                                              ; preds = %132
  %421 = icmp eq i32 %1, 2
  br i1 %421, label %422, label %638

422:                                              ; preds = %420
  %423 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %424 = bitcast %class.TIntermTyped* %18 to %class.TIntermTyped* (%class.TIntermNode*)***
  %425 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %424, align 8
  %426 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %425, i64 1
  %427 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %426, align 8
  %428 = call %class.TIntermTyped* %427(%class.TIntermNode* %423) #21
  %429 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %428, i64 0, i32 1, i32 3
  %430 = load i8, i8* %429, align 1
  %431 = zext i8 %430 to i32
  %432 = call i32 @_ZN2sw6Shader10OPCODE_LENEi(i32 %431) #21
  %433 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %432, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %423, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

434:                                              ; preds = %132
  %435 = icmp eq i32 %1, 2
  br i1 %435, label %436, label %638

436:                                              ; preds = %434
  %437 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %438 = bitcast %class.TIntermTyped* %18 to %class.TIntermTyped* (%class.TIntermNode*)***
  %439 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %438, align 8
  %440 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %439, i64 1
  %441 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %440, align 8
  %442 = call %class.TIntermTyped* %441(%class.TIntermNode* %437) #21
  %443 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %442, i64 0, i32 1, i32 3
  %444 = load i8, i8* %443, align 1
  %445 = zext i8 %444 to i32
  %446 = call i32 @_ZN2sw6Shader10OPCODE_NRMEi(i32 %445) #21
  %447 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %446, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %437, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

448:                                              ; preds = %132
  %449 = icmp eq i32 %1, 2
  br i1 %449, label %450, label %638

450:                                              ; preds = %448
  %451 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %452 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 91, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %451, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

453:                                              ; preds = %132
  %454 = icmp eq i32 %1, 2
  br i1 %454, label %455, label %638

455:                                              ; preds = %453
  %456 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %457 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 92, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %456, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

458:                                              ; preds = %132
  %459 = icmp eq i32 %1, 2
  br i1 %459, label %460, label %638

460:                                              ; preds = %458
  %461 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %462 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435559, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %461, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

463:                                              ; preds = %132
  %464 = icmp eq i32 %1, 2
  br i1 %464, label %465, label %638

465:                                              ; preds = %463
  %466 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %467 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435509, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %466, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

468:                                              ; preds = %132
  %469 = icmp eq i32 %1, 2
  br i1 %469, label %470, label %638

470:                                              ; preds = %468
  %471 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %472 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435508, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %471, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

473:                                              ; preds = %132
  %474 = icmp eq i32 %1, 2
  br i1 %474, label %475, label %638

475:                                              ; preds = %473
  %476 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %477 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435531, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %476, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

478:                                              ; preds = %132
  %479 = icmp eq i32 %1, 2
  br i1 %479, label %480, label %638

480:                                              ; preds = %478
  %481 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %482 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435532, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %481, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

483:                                              ; preds = %132
  %484 = icmp eq i32 %1, 2
  br i1 %484, label %485, label %638

485:                                              ; preds = %483
  %486 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %487 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435533, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %486, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

488:                                              ; preds = %132
  %489 = icmp eq i32 %1, 2
  br i1 %489, label %490, label %638

490:                                              ; preds = %488
  %491 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %492 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435534, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %491, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

493:                                              ; preds = %132
  %494 = icmp eq i32 %1, 2
  br i1 %494, label %495, label %638

495:                                              ; preds = %493
  %496 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %497 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435535, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %496, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

498:                                              ; preds = %132
  %499 = icmp eq i32 %1, 2
  br i1 %499, label %500, label %638

500:                                              ; preds = %498
  %501 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %502 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435536, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %501, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

503:                                              ; preds = %132
  %504 = icmp eq i32 %1, 2
  br i1 %504, label %505, label %638

505:                                              ; preds = %503
  %506 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %507 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435537, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %506, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

508:                                              ; preds = %132
  %509 = icmp eq i32 %1, 2
  br i1 %509, label %510, label %638

510:                                              ; preds = %508
  %511 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %512 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435538, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %511, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

513:                                              ; preds = %132
  %514 = icmp eq i32 %1, 2
  br i1 %514, label %515, label %638

515:                                              ; preds = %513
  %516 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %517 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435539, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %516, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

518:                                              ; preds = %132
  %519 = icmp eq i32 %1, 2
  br i1 %519, label %520, label %638

520:                                              ; preds = %518
  %521 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  %522 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435540, %class.TIntermTyped* %55, i32 0, %class.TIntermNode* %521, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %638

523:                                              ; preds = %132
  %524 = icmp eq i32 %1, 2
  br i1 %524, label %525, label %638

525:                                              ; preds = %523
  %526 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 1, i32 3
  %527 = load i8, i8* %526, align 1
  %528 = zext i8 %527 to i32
  %529 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 1, i32 4
  %530 = load i8, i8* %529, align 4
  %531 = zext i8 %530 to i32
  %532 = icmp eq i8 %527, 0
  br i1 %532, label %638, label %533

533:                                              ; preds = %525
  %534 = icmp eq i8 %530, 0
  %535 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 0
  br label %536

536:                                              ; preds = %541, %533
  %537 = phi i32 [ 0, %533 ], [ %542, %541 ]
  br i1 %534, label %541, label %538

538:                                              ; preds = %536
  %539 = shl i32 1, %537
  %540 = trunc i32 %539 to i8
  br label %544

541:                                              ; preds = %544, %536
  %542 = add nuw nsw i32 %537, 1
  %543 = icmp eq i32 %542, %528
  br i1 %543, label %638, label %536

544:                                              ; preds = %544, %538
  %545 = phi i32 [ 0, %538 ], [ %556, %544 ]
  %546 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* %55, i32 %545, %class.TIntermNode* %535, i32 %537, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %547 = mul nuw nsw i32 %545, 85
  %548 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %546, i64 0, i32 12, i64 0, i32 1
  %549 = bitcast [3 x i8]* %548 to i24*
  %550 = trunc i32 %547 to i24
  %551 = load i24, i24* %549, align 1
  %552 = and i24 %550, 255
  %553 = and i24 %551, -256
  %554 = or i24 %553, %552
  store i24 %554, i24* %549, align 1
  %555 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %546, i64 0, i32 11, i32 1, i32 0
  store i8 %540, i8* %555, align 1
  %556 = add nuw nsw i32 %545, 1
  %557 = icmp eq i32 %556, %531
  br i1 %557, label %541, label %544

558:                                              ; preds = %132
  %559 = icmp eq i32 %1, 2
  br i1 %559, label %560, label %638

560:                                              ; preds = %558
  %561 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 1, i32 3
  %562 = load i8, i8* %561, align 1
  %563 = zext i8 %562 to i32
  call void @_ZN4glsl9OutputASM15emitDeterminantEP12TIntermTypedS2_iiiii(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %55, %class.TIntermTyped* %18, i32 %563, i32 -1, i32 -1, i32 0, i32 0) #22
  br label %638

564:                                              ; preds = %132
  %565 = icmp eq i32 %1, 2
  br i1 %565, label %566, label %638

566:                                              ; preds = %564
  %567 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 1, i32 3
  %568 = load i8, i8* %567, align 1
  %569 = zext i8 %568 to i32
  %570 = icmp eq i8 %568, 0
  br i1 %570, label %575, label %571

571:                                              ; preds = %566
  %572 = add nsw i32 %569, -1
  br label %573

573:                                              ; preds = %571, %625
  %574 = phi i32 [ 0, %571 ], [ %626, %625 ]
  br label %628

575:                                              ; preds = %625, %566
  %576 = bitcast %"class.glsl::Temporary"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %576) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %576, i8 -86, i64 136, i1 false)
  call void @_ZN4glsl9TemporaryC2EPNS_9OutputASME(%"class.glsl::Temporary"* nonnull %9, %"class.glsl::OutputASM"* %0) #22
  %577 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %9, i64 0, i32 0, i32 0
  call void @_ZN4glsl9OutputASM15emitDeterminantEP12TIntermTypedS2_iiiii(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* nonnull %577, %class.TIntermTyped* %18, i32 %569, i32 -1, i32 -1, i32 0, i32 0) #22
  %578 = bitcast %"class.glsl::Constant"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %578) #20
  %579 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 1
  %580 = bitcast [4 x %class.ConstantUnion]* %579 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %580, i8 -86, i64 32, i1 false)
  %581 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %582 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 1, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %29)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %30)
  call void @llvm.memset.p0i8.i64(i8* align 2 %31, i8 0, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 16, i1 false)
  %583 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %584 = bitcast i32* %583 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %584, i8 0, i64 16, i1 false) #20
  %585 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8 1, i8* %585, align 8
  %586 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 0, i32 0, i32 1, i32 1
  store i8 3, i8* %586, align 1
  %587 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 0, i32 0, i32 1, i32 2
  %588 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 0, i32 0, i32 1, i32 3
  store i8 4, i8* %588, align 1
  %589 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 0, i32 0, i32 1, i32 4
  store i8 1, i8* %589, align 4
  %590 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 0, i32 0, i32 1, i32 5
  store i8 0, i8* %590, align 1
  %591 = getelementptr inbounds i8, i8* %578, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %591, i8* nonnull align 2 %29, i64 26, i1 false) #20
  %592 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 0, i32 0, i32 1, i32 10
  %593 = bitcast %struct.TLayoutQualifier* %592 to i64*
  store i64 4294967295, i64* %593, align 8
  %594 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 0, i32 0, i32 1, i32 10, i32 2
  store i32 0, i32* %594, align 8
  %595 = getelementptr inbounds i8, i8* %578, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %595, i8* nonnull align 4 %30, i64 20, i1 false) #20
  %596 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 0, i32 1
  store %class.ConstantUnion* %582, %class.ConstantUnion** %596, align 8
  store i8 2, i8* %587, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %29)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %30)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN4glsl8ConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %581, align 8
  %597 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 1, i64 4
  br label %598

598:                                              ; preds = %598, %575
  %599 = phi %class.ConstantUnion* [ %582, %575 ], [ %602, %598 ]
  %600 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %599, i64 0, i32 0, i32 0
  store i32 0, i32* %600, align 4
  %601 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %599, i64 0, i32 1
  store i8 0, i8* %601, align 4
  %602 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %599, i64 1
  %603 = icmp eq %class.ConstantUnion* %602, %597
  br i1 %603, label %604, label %598

604:                                              ; preds = %598
  %605 = bitcast %class.ConstantUnion* %582 to float*
  store float 1.000000e+00, float* %605, align 8
  %606 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 1, i64 0, i32 1
  store i8 1, i8* %606, align 4
  %607 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 1, i64 1
  %608 = bitcast %class.ConstantUnion* %607 to float*
  store float 1.000000e+00, float* %608, align 8
  %609 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 1, i64 1, i32 1
  store i8 1, i8* %609, align 4
  %610 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 1, i64 2
  %611 = bitcast %class.ConstantUnion* %610 to float*
  store float 1.000000e+00, float* %611, align 8
  %612 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 1, i64 2, i32 1
  store i8 1, i8* %612, align 4
  %613 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 1, i64 3
  %614 = bitcast %class.ConstantUnion* %613 to float*
  store float 1.000000e+00, float* %614, align 8
  %615 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 1, i64 3, i32 1
  store i8 1, i8* %615, align 4
  %616 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %10, i64 0, i32 0, i32 0, i32 0
  %617 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %9, i64 0, i32 0, i32 0, i32 0
  %618 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435490, %class.TIntermTyped* nonnull %577, i32 0, %class.TIntermNode* nonnull %616, i32 0, %class.TIntermNode* nonnull %617, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %619 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %618, i64 0, i32 12, i64 1, i32 1
  %620 = bitcast [3 x i8]* %619 to i24*
  %621 = load i24, i24* %620, align 1
  %622 = and i24 %621, -256
  store i24 %622, i24* %620, align 1
  br i1 %570, label %632, label %623

623:                                              ; preds = %604
  %624 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %2, i64 0, i32 0, i32 0, i32 0
  br label %633

625:                                              ; preds = %628
  %626 = add nuw nsw i32 %574, 1
  %627 = icmp eq i32 %626, %569
  br i1 %627, label %575, label %573

628:                                              ; preds = %628, %573
  %629 = phi i32 [ %630, %628 ], [ 0, %573 ]
  call void @_ZN4glsl9OutputASM15emitDeterminantEP12TIntermTypedS2_iiiii(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %55, %class.TIntermTyped* %18, i32 %572, i32 %629, i32 %574, i32 %574, i32 %629) #22
  %630 = add nuw nsw i32 %629, 1
  %631 = icmp eq i32 %630, %569
  br i1 %631, label %625, label %628

632:                                              ; preds = %633, %604
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %578) #20
  call void @_ZN4glsl9TemporaryD2Ev(%"class.glsl::Temporary"* nonnull %9) #21
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %576) #20
  br label %638

633:                                              ; preds = %633, %623
  %634 = phi i32 [ 0, %623 ], [ %636, %633 ]
  %635 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 5, %class.TIntermTyped* %55, i32 %634, %class.TIntermNode* %624, i32 %634, %class.TIntermNode* nonnull %617, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %636 = add nuw nsw i32 %634, 1
  %637 = icmp eq i32 %636, %569
  br i1 %637, label %632, label %633

638:                                              ; preds = %541, %158, %525, %148, %132, %564, %632, %558, %560, %523, %518, %520, %513, %515, %508, %510, %503, %505, %498, %500, %493, %495, %488, %490, %483, %485, %478, %480, %473, %475, %468, %470, %463, %465, %458, %460, %453, %455, %448, %450, %434, %436, %420, %422, %415, %417, %410, %412, %405, %407, %399, %401, %394, %396, %389, %391, %384, %386, %379, %381, %370, %372, %361, %363, %356, %358, %351, %353, %346, %348, %341, %343, %336, %338, %331, %333, %326, %328, %321, %323, %316, %318, %311, %313, %306, %308, %301, %303, %296, %298, %291, %293, %286, %288, %281, %283, %276, %278, %271, %273, %265, %267, %259, %261, %239, %252, %219, %232, %199, %212, %179, %192, %174, %176, %169, %171, %164, %166, %146
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %106) #20
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %68) #20
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %24) #20
  br label %639

639:                                              ; preds = %3, %638
  %640 = phi i1 [ true, %638 ], [ false, %3 ]
  ret i1 %640
}

; Function Attrs: optsize
declare i32 @_ZN2sw6Shader10OPCODE_LENEi(i32) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM3dimEP11TIntermNode(%class.TIntermNode*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.TIntermNode* %0 to %class.TIntermTyped* (%class.TIntermNode*)***
  %3 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %2, align 8
  %4 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %3, i64 1
  %5 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %4, align 8
  %6 = tail call %class.TIntermTyped* %5(%class.TIntermNode* %0) #21
  %7 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %6, i64 0, i32 1, i32 3
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  ret i32 %9
}

; Function Attrs: optsize
declare i32 @_ZN2sw6Shader10OPCODE_NRMEi(i32) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4glsl9OutputASM14visitAggregateE5VisitP16TIntermAggregate(%"class.glsl::OutputASM"*, i32, %class.TIntermAggregate*) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::__split_buffer.191", align 8
  %5 = alloca [26 x i8], align 2
  %6 = alloca [20 x i8], align 4
  %7 = alloca %"class.glsl::Constant", align 8
  %8 = alloca %"struct.glsl::Function", align 8
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"struct.glsl::OutputASM::TextureFunction"*
  %11 = alloca %"class.glsl::Temporary", align 8
  %12 = alloca %"class.glsl::Constant", align 8
  %13 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 13
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 12
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %1308 [
    i32 3, label %21
    i32 1, label %21
  ]

21:                                               ; preds = %18, %18, %3
  %22 = bitcast %"class.glsl::Constant"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %22) #20
  %23 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1
  %24 = bitcast [4 x %class.ConstantUnion]* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  %25 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 0
  %27 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %27)
  %28 = getelementptr inbounds [20 x i8], [20 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %28)
  %29 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %29, i8 0, i64 24, i1 false)
  %30 = getelementptr inbounds [20 x i8], [20 x i8]* %6, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 16, i1 false)
  %31 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = bitcast i32* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #20
  %33 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8 1, i8* %33, align 8
  %34 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 1
  store i8 3, i8* %34, align 1
  %35 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 2
  %36 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 3
  store i8 4, i8* %36, align 1
  %37 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 4
  store i8 1, i8* %37, align 4
  %38 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 5
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds i8, i8* %22, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %39, i8* nonnull align 2 %27, i64 26, i1 false) #20
  %40 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 10
  %41 = bitcast %struct.TLayoutQualifier* %40 to i64*
  store i64 4294967295, i64* %41, align 8
  %42 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 10, i32 2
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds i8, i8* %22, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* nonnull align 4 %28, i64 20, i1 false) #20
  %44 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 1
  store %class.ConstantUnion* %26, %class.ConstantUnion** %44, align 8
  store i8 2, i8* %35, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %28)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN4glsl8ConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %45 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 4
  br label %46

46:                                               ; preds = %46, %21
  %47 = phi %class.ConstantUnion* [ %26, %21 ], [ %50, %46 ]
  %48 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %47, i64 0, i32 0, i32 0
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %47, i64 0, i32 1
  store i8 0, i8* %49, align 4
  %50 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %47, i64 1
  %51 = icmp eq %class.ConstantUnion* %50, %45
  br i1 %51, label %52, label %46

52:                                               ; preds = %46
  %53 = bitcast %class.ConstantUnion* %26 to float*
  store float 0.000000e+00, float* %53, align 8
  %54 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 0, i32 1
  store i8 1, i8* %54, align 4
  %55 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 1
  %56 = bitcast %class.ConstantUnion* %55 to float*
  store float 0.000000e+00, float* %56, align 8
  %57 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 1, i32 1
  store i8 1, i8* %57, align 4
  %58 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 2
  %59 = bitcast %class.ConstantUnion* %58 to float*
  store float 0.000000e+00, float* %59, align 8
  %60 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 2, i32 1
  store i8 1, i8* %60, align 4
  %61 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 3
  %62 = bitcast %class.ConstantUnion* %61 to float*
  store float 0.000000e+00, float* %62, align 8
  %63 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 3, i32 1
  store i8 1, i8* %63, align 4
  %64 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 2, i32 0
  %67 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %68 = bitcast %class.TIntermNode*** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.std::__1::vector.77"* %66 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = lshr exact i64 %72, 3
  %74 = trunc i64 %73 to i32
  %75 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = inttoptr i64 %71 to %class.TIntermNode**
  switch i32 %76, label %1306 [
    i32 29, label %1264
    i32 18, label %1241
    i32 107, label %1220
    i32 106, label %1201
    i32 28, label %78
    i32 3, label %83
    i32 2, label %256
    i32 105, label %1180
    i32 121, label %545
    i32 122, label %545
    i32 123, label %545
    i32 124, label %545
    i32 120, label %545
    i32 125, label %545
    i32 126, label %545
    i32 127, label %545
    i32 118, label %545
    i32 128, label %545
    i32 129, label %545
    i32 130, label %545
    i32 119, label %545
    i32 131, label %545
    i32 132, label %545
    i32 133, label %545
    i32 134, label %703
    i32 135, label %703
    i32 136, label %703
    i32 137, label %703
    i32 138, label %703
    i32 139, label %703
    i32 140, label %703
    i32 141, label %703
    i32 142, label %703
    i32 143, label %925
    i32 24, label %971
    i32 25, label %977
    i32 26, label %983
    i32 27, label %989
    i32 22, label %995
    i32 23, label %1001
    i32 80, label %1007
    i32 81, label %1014
    i32 65, label %1031
    i32 58, label %1038
    i32 82, label %1045
    i32 83, label %1058
    i32 84, label %1071
    i32 85, label %1095
    i32 86, label %1119
    i32 87, label %1126
    i32 101, label %1135
    i32 102, label %1154
    i32 103, label %1173
  ]

78:                                               ; preds = %52
  %79 = icmp eq i32 %1, 2
  br i1 %79, label %80, label %1306

80:                                               ; preds = %78
  %81 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %82 = load %class.TIntermNode*, %class.TIntermNode** %81, align 8
  call void @_ZN4glsl9OutputASM4copyEP12TIntermTypedP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %64, %class.TIntermNode* %82, i32 0) #22
  br label %1306

83:                                               ; preds = %52
  switch i32 %1, label %1306 [
    i32 0, label %84
    i32 2, label %240
  ]

84:                                               ; preds = %83
  %85 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 3
  %86 = load i32, i32* %15, align 8
  switch i32 %86, label %239 [
    i32 1, label %87
    i32 0, label %106
  ]

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15
  %89 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15, i32 0, i32 1
  %90 = bitcast %"struct.glsl::Function"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.std::__1::vector.111"* %88 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %91, %93
  %95 = sdiv exact i64 %94, 56
  %96 = icmp ugt i64 %95, 1
  br i1 %96, label %97, label %239

97:                                               ; preds = %87
  %98 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 30, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %99 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %98, i64 0, i32 11, i32 0, i32 1
  store i8 18, i8* %99, align 8
  %100 = call %"struct.glsl::Function"* @_ZN4glsl9OutputASM12findFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEE14pool_allocatorIcEEE(%"class.glsl::OutputASM"* %0, %"class.std::__1::basic_string"* dereferenceable(32) %85) #22
  %101 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %100, i64 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %98, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i32 %102, i32* %103, align 8
  %104 = load i32, i32* %101, align 8
  %105 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 14
  store i32 %104, i32* %105, align 8
  br label %239

106:                                              ; preds = %84
  %107 = bitcast %"class.std::__1::basic_string"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  %111 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %109 to i64
  %114 = select i1 %110, i64 %112, i64 %113
  %115 = icmp eq i64 %114, 5
  br i1 %115, label %116, label %122

116:                                              ; preds = %106
  %117 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"* %85, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i64 5) #21
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %239, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %121 = load %class.TIntermNode**, %class.TIntermNode*** %120, align 8
  br label %122

122:                                              ; preds = %119, %106
  %123 = phi %class.TIntermNode** [ %121, %119 ], [ %77, %106 ]
  %124 = load %class.TIntermNode*, %class.TIntermNode** %123, align 8
  %125 = bitcast %class.TIntermNode* %124 to %class.TIntermAggregate* (%class.TIntermNode*)***
  %126 = load %class.TIntermAggregate* (%class.TIntermNode*)**, %class.TIntermAggregate* (%class.TIntermNode*)*** %125, align 8
  %127 = getelementptr inbounds %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %126, i64 3
  %128 = load %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %127, align 8
  %129 = call %class.TIntermAggregate* %128(%class.TIntermNode* %124) #21
  %130 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %129, i64 0, i32 2
  %131 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15
  %132 = bitcast %"struct.glsl::Function"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %132) #20
  %133 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15, i32 0, i32 1
  %134 = bitcast %"struct.glsl::Function"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.std::__1::vector.111"* %131 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = sub i64 %135, %137
  %139 = sdiv exact i64 %138, 56
  %140 = trunc i64 %139 to i32
  %141 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %8, i64 0, i32 0
  store i32 %140, i32* %141, align 8
  %142 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %8, i64 0, i32 1
  %143 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 3, i32 0, i32 1, i32 0
  %144 = bitcast %class.pool_allocator* %143 to i64*
  %145 = load i64, i64* %144, align 8, !noalias !3
  %146 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %8, i64 0, i32 1, i32 0, i32 1
  %147 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = load i8, i8* %108, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %154, label %150

150:                                              ; preds = %122
  %151 = inttoptr i64 %135 to %"struct.glsl::Function"*
  %152 = bitcast %"class.std::__1::basic_string"* %142 to i8*
  %153 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 24, i1 false) #20
  br label %160

154:                                              ; preds = %122
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  %157 = load i64, i64* %111, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %142, i8* %156, i64 %157) #21
  %158 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %133, align 8
  %159 = ptrtoint %"struct.glsl::Function"* %158 to i64
  br label %160

160:                                              ; preds = %150, %154
  %161 = phi i64 [ %135, %150 ], [ %159, %154 ]
  %162 = phi %"struct.glsl::Function"* [ %151, %150 ], [ %158, %154 ]
  %163 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %8, i64 0, i32 2
  store %class.TVector.76* %130, %class.TVector.76** %163, align 8
  %164 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %8, i64 0, i32 3
  store %class.TIntermTyped* %64, %class.TIntermTyped** %164, align 8
  %165 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %166 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %165, align 8
  %167 = icmp ult %"struct.glsl::Function"* %162, %166
  %168 = ptrtoint %"struct.glsl::Function"* %166 to i64
  br i1 %167, label %169, label %183

169:                                              ; preds = %160
  %170 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %162, i64 0, i32 0
  %171 = load i32, i32* %141, align 8
  store i32 %171, i32* %170, align 8
  %172 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %162, i64 0, i32 1
  %173 = bitcast %"class.std::__1::basic_string"* %172 to i8*
  %174 = bitcast %"class.std::__1::basic_string"* %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 24, i1 false) #20
  %175 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %162, i64 0, i32 1, i32 0, i32 1
  %176 = load i64, i64* %147, align 8
  %177 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %175 to i64*
  store i64 %176, i64* %177, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %174, i8 0, i64 24, i1 false) #20
  %178 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %162, i64 0, i32 2
  %179 = bitcast %class.TVector.76** %178 to i8*
  %180 = bitcast %class.TVector.76** %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* align 8 %180, i64 16, i1 false) #20
  %181 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %162, i64 1
  %182 = ptrtoint %"struct.glsl::Function"* %181 to i64
  store i64 %182, i64* %134, align 8
  br label %238

183:                                              ; preds = %160
  %184 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15, i32 0, i32 2
  %185 = bitcast %"class.std::__1::__compressed_pair.113"* %184 to %"class.std::__1::allocator.116"*
  %186 = bitcast %"struct.std::__1::__split_buffer.191"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %186) #20
  %187 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %4, i64 0, i32 0
  %188 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %4, i64 0, i32 1
  %189 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %4, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %186, i8 -86, i64 40, i1 false) #20
  %190 = load i64, i64* %136, align 8
  %191 = sub i64 %161, %190
  %192 = sdiv exact i64 %191, 56
  %193 = add nsw i64 %192, 1
  %194 = icmp ugt i64 %193, 329406144173384850
  br i1 %194, label %195, label %197

195:                                              ; preds = %183
  %196 = bitcast %"class.std::__1::vector.111"* %131 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %196) #23
  unreachable

197:                                              ; preds = %183
  %198 = sub i64 %168, %190
  %199 = sdiv exact i64 %198, 56
  %200 = icmp ult i64 %199, 164703072086692425
  br i1 %200, label %201, label %205

201:                                              ; preds = %197
  %202 = shl nsw i64 %199, 1
  %203 = icmp ult i64 %202, %193
  %204 = select i1 %203, i64 %193, i64 %202
  br label %205

205:                                              ; preds = %201, %197
  %206 = phi i64 [ %204, %201 ], [ 329406144173384850, %197 ]
  call void @_ZNSt3__114__split_bufferIN4glsl8FunctionERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer.191"* nonnull %4, i64 %206, i64 %192, %"class.std::__1::allocator.116"* dereferenceable(1) %185) #21
  %207 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %189, align 8
  %208 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %207, i64 0, i32 0
  %209 = load i32, i32* %141, align 8
  store i32 %209, i32* %208, align 8
  %210 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %207, i64 0, i32 1
  %211 = bitcast %"class.std::__1::basic_string"* %210 to i8*
  %212 = bitcast %"class.std::__1::basic_string"* %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %212, i64 24, i1 false) #20
  %213 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %207, i64 0, i32 1, i32 0, i32 1
  %214 = load i64, i64* %147, align 8
  %215 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %213 to i64*
  store i64 %214, i64* %215, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %212, i8 0, i64 24, i1 false) #20
  %216 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %207, i64 0, i32 2
  %217 = bitcast %class.TVector.76** %216 to i8*
  %218 = bitcast %class.TVector.76** %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 16, i1 false) #20
  %219 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %189, align 8
  %220 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %219, i64 1
  store %"struct.glsl::Function"* %220, %"struct.glsl::Function"** %189, align 8
  call void @_ZNSt3__16vectorIN4glsl8FunctionENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.111"* %131, %"struct.std::__1::__split_buffer.191"* nonnull dereferenceable(40) %4) #21
  %221 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %188, align 8
  %222 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %189, align 8
  %223 = icmp eq %"struct.glsl::Function"* %222, %221
  br i1 %223, label %232, label %224

224:                                              ; preds = %205
  %225 = ptrtoint %"struct.glsl::Function"* %221 to i64
  %226 = getelementptr %"struct.glsl::Function", %"struct.glsl::Function"* %222, i64 -1, i32 0
  %227 = ptrtoint i32* %226 to i64
  %228 = sub i64 %227, %225
  %229 = udiv i64 %228, 56
  %230 = xor i64 %229, -1
  %231 = getelementptr %"struct.glsl::Function", %"struct.glsl::Function"* %222, i64 %230
  store %"struct.glsl::Function"* %231, %"struct.glsl::Function"** %189, align 8
  br label %232

232:                                              ; preds = %224, %205
  %233 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %187, align 8
  %234 = icmp eq %"struct.glsl::Function"* %233, null
  br i1 %234, label %237, label %235

235:                                              ; preds = %232
  %236 = bitcast %"struct.glsl::Function"* %233 to i8*
  call void @_ZdlPv(i8* %236) #24
  br label %237

237:                                              ; preds = %232, %235
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %186) #20
  br label %238

238:                                              ; preds = %169, %237
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %132) #20
  br label %239

239:                                              ; preds = %116, %84, %238, %87, %97
  store i32 1, i32* %13, align 4
  br label %1306

240:                                              ; preds = %83
  %241 = load i32, i32* %15, align 8
  %242 = icmp eq i32 %241, 1
  br i1 %242, label %243, label %255

243:                                              ; preds = %240
  %244 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15
  %245 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15, i32 0, i32 1
  %246 = bitcast %"struct.glsl::Function"** %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"class.std::__1::vector.111"* %244 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = sub i64 %247, %249
  %251 = sdiv exact i64 %250, 56
  %252 = icmp ugt i64 %251, 1
  br i1 %252, label %253, label %255

253:                                              ; preds = %243
  %254 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 28, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %255

255:                                              ; preds = %243, %253, %240
  store i32 0, i32* %13, align 4
  br label %1306

256:                                              ; preds = %52
  %257 = icmp eq i32 %1, 2
  br i1 %257, label %258, label %1306

258:                                              ; preds = %256
  %259 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 4
  %260 = load i8, i8* %259, align 8, !range !2
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %354, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 3
  %264 = call %"struct.glsl::Function"* @_ZN4glsl9OutputASM12findFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEE14pool_allocatorIcEEE(%"class.glsl::OutputASM"* %0, %"class.std::__1::basic_string"* dereferenceable(32) %263) #22
  %265 = icmp eq %"struct.glsl::Function"* %264, null
  br i1 %265, label %266, label %281

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %268 = load %class.TParseContext*, %class.TParseContext** %267, align 8
  %269 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %270 = bitcast %"class.std::__1::basic_string"* %263 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %271 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %270, i64 0, i32 1, i32 0
  %272 = load i8, i8* %271, align 1
  %273 = icmp slt i8 %272, 0
  br i1 %273, label %274, label %277

274:                                              ; preds = %266
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %263, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load i8*, i8** %275, align 8
  br label %279

277:                                              ; preds = %266
  %278 = bitcast %"class.std::__1::basic_string"* %263 to i8*
  br label %279

279:                                              ; preds = %274, %277
  %280 = phi i8* [ %276, %274 ], [ %278, %277 ]
  call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %268, %struct.TSourceLoc* dereferenceable(16) %269, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i64 0, i64 0), i8* %280, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #21
  br label %1306

281:                                              ; preds = %262
  %282 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %264, i64 0, i32 2
  %283 = load %class.TVector.76*, %class.TVector.76** %282, align 8
  %284 = icmp sgt i32 %74, 0
  br i1 %284, label %285, label %289

285:                                              ; preds = %281
  %286 = getelementptr inbounds %class.TVector.76, %class.TVector.76* %283, i64 0, i32 0, i32 0, i32 0
  %287 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %288 = and i64 %73, 4294967295
  br label %299

289:                                              ; preds = %315, %281
  %290 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 25, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %291 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %290, i64 0, i32 11, i32 0, i32 1
  store i8 18, i8* %291, align 8
  %292 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %264, i64 0, i32 0
  %293 = load i32, i32* %292, align 8
  %294 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %290, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i32 %293, i32* %294, align 8
  %295 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %264, i64 0, i32 3
  %296 = load %class.TIntermTyped*, %class.TIntermTyped** %295, align 8
  %297 = icmp eq %class.TIntermTyped* %296, null
  %298 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %296, i64 0, i32 0
  br i1 %297, label %323, label %318

299:                                              ; preds = %315, %285
  %300 = phi i64 [ 0, %285 ], [ %316, %315 ]
  %301 = load %class.TIntermNode**, %class.TIntermNode*** %286, align 8
  %302 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %301, i64 %300
  %303 = load %class.TIntermNode*, %class.TIntermNode** %302, align 8
  %304 = bitcast %class.TIntermNode* %303 to %class.TIntermTyped* (%class.TIntermNode*)***
  %305 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %304, align 8
  %306 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %305, i64 1
  %307 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %306, align 8
  %308 = call %class.TIntermTyped* %307(%class.TIntermNode* %303) #21
  %309 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %308, i64 0, i32 1, i32 2
  %310 = load i8, i8* %309, align 2
  switch i8 %310, label %315 [
    i8 15, label %311
    i8 17, label %311
    i8 18, label %311
  ]

311:                                              ; preds = %299, %299, %299
  %312 = load %class.TIntermNode**, %class.TIntermNode*** %287, align 8
  %313 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %312, i64 %300
  %314 = load %class.TIntermNode*, %class.TIntermNode** %313, align 8
  call void @_ZN4glsl9OutputASM4copyEP12TIntermTypedP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %308, %class.TIntermNode* %314, i32 0) #22
  br label %315

315:                                              ; preds = %299, %311
  %316 = add nuw nsw i64 %300, 1
  %317 = icmp eq i64 %316, %288
  br i1 %317, label %289, label %299

318:                                              ; preds = %289
  %319 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %296, i64 0, i32 1, i32 0
  %320 = load i8, i8* %319, align 8
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %323, label %322

322:                                              ; preds = %318
  call void @_ZN4glsl9OutputASM4copyEP12TIntermTypedP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %64, %class.TIntermNode* %298, i32 0) #22
  br label %323

323:                                              ; preds = %318, %289, %322
  br i1 %284, label %324, label %1306

324:                                              ; preds = %323
  %325 = getelementptr inbounds %class.TVector.76, %class.TVector.76* %283, i64 0, i32 0, i32 0, i32 0
  %326 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %327 = and i64 %73, 4294967295
  br label %328

328:                                              ; preds = %351, %324
  %329 = phi i64 [ 0, %324 ], [ %352, %351 ]
  %330 = load %class.TIntermNode**, %class.TIntermNode*** %325, align 8
  %331 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %330, i64 %329
  %332 = load %class.TIntermNode*, %class.TIntermNode** %331, align 8
  %333 = bitcast %class.TIntermNode* %332 to %class.TIntermTyped* (%class.TIntermNode*)***
  %334 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %333, align 8
  %335 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %334, i64 1
  %336 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %335, align 8
  %337 = call %class.TIntermTyped* %336(%class.TIntermNode* %332) #21
  %338 = load %class.TIntermNode**, %class.TIntermNode*** %326, align 8
  %339 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %338, i64 %329
  %340 = load %class.TIntermNode*, %class.TIntermNode** %339, align 8
  %341 = bitcast %class.TIntermNode* %340 to %class.TIntermTyped* (%class.TIntermNode*)***
  %342 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %341, align 8
  %343 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %342, i64 1
  %344 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %343, align 8
  %345 = call %class.TIntermTyped* %344(%class.TIntermNode* %340) #21
  %346 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %337, i64 0, i32 1, i32 2
  %347 = load i8, i8* %346, align 2
  %348 = and i8 %347, -2
  %349 = icmp eq i8 %348, 16
  br i1 %349, label %350, label %351

350:                                              ; preds = %328
  call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %345, %class.TIntermTyped* %337) #22
  br label %351

351:                                              ; preds = %328, %350
  %352 = add nuw nsw i64 %329, 1
  %353 = icmp eq i64 %352, %327
  br i1 %353, label %1306, label %328

354:                                              ; preds = %258
  %355 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %355) #20
  %356 = bitcast i64* %9 to i32*
  %357 = getelementptr inbounds %"struct.glsl::OutputASM::TextureFunction", %"struct.glsl::OutputASM::TextureFunction"* %10, i64 0, i32 1
  %358 = getelementptr inbounds %"struct.glsl::OutputASM::TextureFunction", %"struct.glsl::OutputASM::TextureFunction"* %10, i64 0, i32 2
  %359 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 3
  store i64 -6148914691236517206, i64* %9, align 8
  call void @_ZN4glsl9OutputASM15TextureFunctionC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEE14pool_allocatorIcEEE(%"struct.glsl::OutputASM::TextureFunction"* nonnull %10, %"class.std::__1::basic_string"* dereferenceable(32) %359) #22
  %360 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %361 = load %class.TIntermNode**, %class.TIntermNode*** %360, align 8
  %362 = load %class.TIntermNode*, %class.TIntermNode** %361, align 8
  %363 = bitcast %class.TIntermNode* %362 to %class.TIntermTyped* (%class.TIntermNode*)***
  %364 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %363, align 8
  %365 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %364, i64 1
  %366 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %365, align 8
  %367 = call %class.TIntermTyped* %366(%class.TIntermNode* %362) #21
  %368 = load %class.TIntermNode**, %class.TIntermNode*** %360, align 8
  %369 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %368, i64 1
  %370 = load %class.TIntermNode*, %class.TIntermNode** %369, align 8
  %371 = bitcast %class.TIntermNode* %370 to %class.TIntermTyped* (%class.TIntermNode*)***
  %372 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %371, align 8
  %373 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %372, i64 1
  %374 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %373, align 8
  %375 = call %class.TIntermTyped* %374(%class.TIntermNode* %370) #21
  %376 = bitcast %"class.glsl::Temporary"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %376) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %376, i8 -86, i64 136, i1 false)
  call void @_ZN4glsl9TemporaryC2EPNS_9OutputASME(%"class.glsl::Temporary"* nonnull %11, %"class.glsl::OutputASM"* %0) #22
  %377 = load i8, i8* %357, align 4, !range !2
  %378 = icmp eq i8 %377, 0
  %379 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %11, i64 0, i32 0, i32 0
  %380 = load %class.TIntermNode**, %class.TIntermNode*** %360, align 8
  %381 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %380, i64 1
  %382 = load %class.TIntermNode*, %class.TIntermNode** %381, align 8
  br i1 %378, label %415, label %383

383:                                              ; preds = %354
  %384 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 6, %class.TIntermTyped* nonnull %379, i32 0, %class.TIntermNode* %382, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %385 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %375, i64 0, i32 1, i32 3
  %386 = load i8, i8* %385, align 1
  %387 = zext i8 %386 to i32
  %388 = mul nuw nsw i32 %387, 85
  %389 = add nuw nsw i32 %388, 171
  %390 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %384, i64 0, i32 12, i64 0, i32 1
  %391 = bitcast [3 x i8]* %390 to i24*
  %392 = trunc i32 %389 to i24
  %393 = load i24, i24* %391, align 1
  %394 = and i24 %392, 255
  %395 = and i24 %393, -256
  %396 = or i24 %394, %395
  store i24 %396, i24* %391, align 1
  %397 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %384, i64 0, i32 11, i32 1, i32 0
  store i8 7, i8* %397, align 1
  %398 = load %class.TIntermNode**, %class.TIntermNode*** %360, align 8
  %399 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %398, i64 1
  %400 = load %class.TIntermNode*, %class.TIntermNode** %399, align 8
  %401 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %11, i64 0, i32 0, i32 0, i32 0
  %402 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 5, %class.TIntermTyped* nonnull %379, i32 0, %class.TIntermNode* %400, i32 0, %class.TIntermNode* nonnull %401, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %403 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %402, i64 0, i32 11, i32 1, i32 0
  store i8 7, i8* %403, align 1
  %404 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %367, i64 0, i32 1, i32 0
  %405 = load i8, i8* %404, align 8
  %406 = add i8 %405, -29
  %407 = icmp ult i8 %406, 3
  br i1 %407, label %408, label %431

408:                                              ; preds = %383
  %409 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* nonnull %379, i32 0, %class.TIntermNode* nonnull %401, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %410 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %409, i64 0, i32 12, i64 0, i32 1
  %411 = bitcast [3 x i8]* %410 to i24*
  %412 = load i24, i24* %411, align 1
  %413 = and i24 %412, -256
  %414 = or i24 %413, 164
  store i24 %414, i24* %411, align 1
  br label %431

415:                                              ; preds = %354
  %416 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* nonnull %379, i32 0, %class.TIntermNode* %382, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %417 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %367, i64 0, i32 1, i32 0
  %418 = load i8, i8* %417, align 8
  %419 = add i8 %418, -29
  %420 = icmp ult i8 %419, 3
  br i1 %420, label %421, label %431

421:                                              ; preds = %415
  %422 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %375, i64 0, i32 1, i32 3
  %423 = load i8, i8* %422, align 1
  %424 = icmp eq i8 %423, 3
  br i1 %424, label %425, label %431

425:                                              ; preds = %421
  %426 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %416, i64 0, i32 12, i64 0, i32 1
  %427 = bitcast [3 x i8]* %426 to i24*
  %428 = load i24, i24* %427, align 1
  %429 = and i24 %428, -256
  %430 = or i24 %429, 164
  store i24 %430, i24* %427, align 1
  br label %431

431:                                              ; preds = %415, %383, %421, %425, %408
  %432 = load i32, i32* %356, align 8
  switch i32 %432, label %544 [
    i32 0, label %433
    i32 1, label %465
    i32 3, label %488
    i32 4, label %511
    i32 2, label %538
  ]

433:                                              ; preds = %431
  %434 = load i8, i8* %358, align 1, !range !2
  %435 = icmp eq i8 %434, 0
  br i1 %435, label %436, label %448

436:                                              ; preds = %433
  switch i32 %74, label %544 [
    i32 2, label %437
    i32 3, label %441
  ]

437:                                              ; preds = %436
  %438 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %11, i64 0, i32 0, i32 0, i32 0
  %439 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %367, i64 0, i32 0
  %440 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 66, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* nonnull %438, i32 0, %class.TIntermNode* %439, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %544

441:                                              ; preds = %436
  %442 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %11, i64 0, i32 0, i32 0, i32 0
  %443 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %367, i64 0, i32 0
  %444 = load %class.TIntermNode**, %class.TIntermNode*** %360, align 8
  %445 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %444, i64 2
  %446 = load %class.TIntermNode*, %class.TIntermNode** %445, align 8
  %447 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435527, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* nonnull %442, i32 0, %class.TIntermNode* %443, i32 0, %class.TIntermNode* %446, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %544

448:                                              ; preds = %433
  switch i32 %74, label %544 [
    i32 3, label %449
    i32 4, label %456
  ]

449:                                              ; preds = %448
  %450 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %11, i64 0, i32 0, i32 0, i32 0
  %451 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %367, i64 0, i32 0
  %452 = load %class.TIntermNode**, %class.TIntermNode*** %360, align 8
  %453 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %452, i64 2
  %454 = load %class.TIntermNode*, %class.TIntermNode** %453, align 8
  %455 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435521, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* nonnull %450, i32 0, %class.TIntermNode* %451, i32 0, %class.TIntermNode* %454, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %544

456:                                              ; preds = %448
  %457 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %11, i64 0, i32 0, i32 0, i32 0
  %458 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %367, i64 0, i32 0
  %459 = load %class.TIntermNode**, %class.TIntermNode*** %360, align 8
  %460 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %459, i64 2
  %461 = load %class.TIntermNode*, %class.TIntermNode** %460, align 8
  %462 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %459, i64 3
  %463 = load %class.TIntermNode*, %class.TIntermNode** %462, align 8
  %464 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435529, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* nonnull %457, i32 0, %class.TIntermNode* %458, i32 0, %class.TIntermNode* %461, i32 0, %class.TIntermNode* %463, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %544

465:                                              ; preds = %431
  %466 = load i8, i8* %358, align 1, !range !2
  %467 = icmp eq i8 %466, 0
  %468 = icmp eq i32 %74, 3
  %469 = and i1 %468, %467
  br i1 %469, label %470, label %477

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %11, i64 0, i32 0, i32 0, i32 0
  %472 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %367, i64 0, i32 0
  %473 = load %class.TIntermNode**, %class.TIntermNode*** %360, align 8
  %474 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %473, i64 2
  %475 = load %class.TIntermNode*, %class.TIntermNode** %474, align 8
  %476 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435528, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* nonnull %471, i32 0, %class.TIntermNode* %472, i32 0, %class.TIntermNode* %475, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %544

477:                                              ; preds = %465
  %478 = icmp eq i32 %74, 4
  br i1 %478, label %479, label %544

479:                                              ; preds = %477
  %480 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %11, i64 0, i32 0, i32 0, i32 0
  %481 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %367, i64 0, i32 0
  %482 = load %class.TIntermNode**, %class.TIntermNode*** %360, align 8
  %483 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %482, i64 3
  %484 = load %class.TIntermNode*, %class.TIntermNode** %483, align 8
  %485 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %482, i64 2
  %486 = load %class.TIntermNode*, %class.TIntermNode** %485, align 8
  %487 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435522, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* nonnull %480, i32 0, %class.TIntermNode* %481, i32 0, %class.TIntermNode* %484, i32 0, %class.TIntermNode* %486, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %544

488:                                              ; preds = %431
  %489 = load i8, i8* %358, align 1, !range !2
  %490 = icmp eq i8 %489, 0
  %491 = icmp eq i32 %74, 3
  %492 = and i1 %491, %490
  br i1 %492, label %493, label %500

493:                                              ; preds = %488
  %494 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %11, i64 0, i32 0, i32 0, i32 0
  %495 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %367, i64 0, i32 0
  %496 = load %class.TIntermNode**, %class.TIntermNode*** %360, align 8
  %497 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %496, i64 2
  %498 = load %class.TIntermNode*, %class.TIntermNode** %497, align 8
  %499 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435523, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* nonnull %494, i32 0, %class.TIntermNode* %495, i32 0, %class.TIntermNode* %498, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %544

500:                                              ; preds = %488
  %501 = icmp eq i32 %74, 4
  br i1 %501, label %502, label %544

502:                                              ; preds = %500
  %503 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %11, i64 0, i32 0, i32 0, i32 0
  %504 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %367, i64 0, i32 0
  %505 = load %class.TIntermNode**, %class.TIntermNode*** %360, align 8
  %506 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %505, i64 3
  %507 = load %class.TIntermNode*, %class.TIntermNode** %506, align 8
  %508 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %505, i64 2
  %509 = load %class.TIntermNode*, %class.TIntermNode** %508, align 8
  %510 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435524, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* nonnull %503, i32 0, %class.TIntermNode* %504, i32 0, %class.TIntermNode* %507, i32 0, %class.TIntermNode* %509, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %544

511:                                              ; preds = %431
  %512 = load i8, i8* %358, align 1, !range !2
  %513 = icmp eq i8 %512, 0
  %514 = icmp eq i32 %74, 4
  %515 = and i1 %514, %513
  br i1 %515, label %516, label %525

516:                                              ; preds = %511
  %517 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %11, i64 0, i32 0, i32 0, i32 0
  %518 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %367, i64 0, i32 0
  %519 = load %class.TIntermNode**, %class.TIntermNode*** %360, align 8
  %520 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %519, i64 2
  %521 = load %class.TIntermNode*, %class.TIntermNode** %520, align 8
  %522 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %519, i64 3
  %523 = load %class.TIntermNode*, %class.TIntermNode** %522, align 8
  %524 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435525, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* nonnull %517, i32 0, %class.TIntermNode* %518, i32 0, %class.TIntermNode* %521, i32 0, %class.TIntermNode* %523, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %544

525:                                              ; preds = %511
  %526 = icmp eq i32 %74, 5
  br i1 %526, label %527, label %544

527:                                              ; preds = %525
  %528 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %11, i64 0, i32 0, i32 0, i32 0
  %529 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %367, i64 0, i32 0
  %530 = load %class.TIntermNode**, %class.TIntermNode*** %360, align 8
  %531 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %530, i64 2
  %532 = load %class.TIntermNode*, %class.TIntermNode** %531, align 8
  %533 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %530, i64 3
  %534 = load %class.TIntermNode*, %class.TIntermNode** %533, align 8
  %535 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %530, i64 4
  %536 = load %class.TIntermNode*, %class.TIntermNode** %535, align 8
  %537 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435526, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* nonnull %528, i32 0, %class.TIntermNode* %529, i32 0, %class.TIntermNode* %532, i32 0, %class.TIntermNode* %534, i32 0, %class.TIntermNode* %536, i32 0) #21
  br label %544

538:                                              ; preds = %431
  %539 = load %class.TIntermNode**, %class.TIntermNode*** %360, align 8
  %540 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %539, i64 1
  %541 = load %class.TIntermNode*, %class.TIntermNode** %540, align 8
  %542 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %367, i64 0, i32 0
  %543 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435530, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %541, i32 0, %class.TIntermNode* %542, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %544

544:                                              ; preds = %448, %436, %431, %516, %525, %527, %493, %500, %502, %470, %477, %479, %441, %437, %456, %449, %538
  call void @_ZN4glsl9TemporaryD2Ev(%"class.glsl::Temporary"* nonnull %11) #21
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %376) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %355) #20
  br label %1306

545:                                              ; preds = %52, %52, %52, %52, %52, %52, %52, %52, %52, %52, %52, %52, %52, %52, %52, %52
  %546 = icmp eq i32 %1, 2
  br i1 %546, label %547, label %1306

547:                                              ; preds = %545
  %548 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 5
  %549 = load i8, i8* %548, align 1, !range !2
  %550 = icmp eq i8 %549, 0
  br i1 %550, label %555, label %551

551:                                              ; preds = %547
  %552 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 6
  %553 = load i32, i32* %552, align 8
  %554 = add nsw i32 %553, -1
  br label %555

555:                                              ; preds = %547, %551
  %556 = phi i32 [ %554, %551 ], [ 0, %547 ]
  %557 = call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %65) #22
  %558 = trunc i64 %557 to i32
  %559 = icmp sgt i32 %74, 0
  br i1 %559, label %560, label %1306

560:                                              ; preds = %555
  %561 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %562 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 4
  %563 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 3
  %564 = and i64 %73, 4294967295
  br label %565

565:                                              ; preds = %699, %560
  %566 = phi i64 [ 0, %560 ], [ %701, %699 ]
  %567 = phi i32 [ 0, %560 ], [ %700, %699 ]
  %568 = load %class.TIntermNode**, %class.TIntermNode*** %561, align 8
  %569 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %568, i64 %566
  %570 = load %class.TIntermNode*, %class.TIntermNode** %569, align 8
  %571 = bitcast %class.TIntermNode* %570 to %class.TIntermTyped* (%class.TIntermNode*)***
  %572 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %571, align 8
  %573 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %572, i64 1
  %574 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %573, align 8
  %575 = call %class.TIntermTyped* %574(%class.TIntermNode* %570) #21
  %576 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %575, i64 0, i32 1, i32 3
  %577 = load i8, i8* %576, align 1
  %578 = zext i8 %577 to i32
  %579 = sdiv i32 %567, %558
  %580 = icmp slt i32 %556, %579
  %581 = select i1 %580, i32 %556, i32 %579
  %582 = mul nsw i32 %581, %558
  %583 = sub nsw i32 %567, %582
  %584 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %575, i64 0, i32 1, i32 4
  %585 = load i8, i8* %584, align 4
  %586 = icmp ugt i8 %585, 1
  br i1 %586, label %613, label %587

587:                                              ; preds = %565
  %588 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM8emitCastEP12TIntermTypediS2_i(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %64, i32 %581, %class.TIntermTyped* %575, i32 0) #22
  %589 = shl i32 15, %583
  %590 = trunc i32 %589 to i8
  %591 = and i8 %590, 15
  %592 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %588, i64 0, i32 11, i32 1, i32 0
  store i8 %591, i8* %592, align 1
  %593 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %575, i64 0, i32 1, i32 2
  %594 = load i8, i8* %593, align 2
  %595 = icmp eq i8 %594, 20
  br i1 %595, label %601, label %596

596:                                              ; preds = %587
  %597 = zext i8 %577 to i64
  %598 = getelementptr inbounds [5 x i8], [5 x i8]* @_ZZN4glsl9OutputASM11readSwizzleEP12TIntermTypediE11swizzleSize, i64 0, i64 %597
  %599 = load i8, i8* %598, align 1
  %600 = zext i8 %599 to i32
  br label %601

601:                                              ; preds = %587, %596
  %602 = phi i32 [ %600, %596 ], [ 85, %587 ]
  %603 = shl nsw i32 %583, 1
  %604 = shl i32 %602, %603
  %605 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %588, i64 0, i32 12, i64 0, i32 1
  %606 = bitcast [3 x i8]* %605 to i24*
  %607 = trunc i32 %604 to i24
  %608 = load i24, i24* %606, align 1
  %609 = and i24 %607, 255
  %610 = and i24 %608, -256
  %611 = or i24 %609, %610
  store i24 %611, i24* %606, align 1
  %612 = add nsw i32 %567, %578
  br label %699

613:                                              ; preds = %565
  %614 = load i8, i8* %562, align 4
  %615 = icmp ugt i8 %614, 1
  br i1 %615, label %616, label %628

616:                                              ; preds = %613
  %617 = load i8, i8* %563, align 1
  %618 = zext i8 %617 to i32
  %619 = icmp slt i32 %567, %618
  br i1 %619, label %620, label %699

620:                                              ; preds = %616
  %621 = shl i32 15, %583
  %622 = trunc i32 %621 to i8
  %623 = and i8 %622, 15
  %624 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %575, i64 0, i32 1, i32 2
  %625 = zext i8 %577 to i64
  %626 = getelementptr inbounds [5 x i8], [5 x i8]* @_ZZN4glsl9OutputASM11readSwizzleEP12TIntermTypediE11swizzleSize, i64 0, i64 %625
  %627 = shl nsw i32 %583, 1
  br label %674

628:                                              ; preds = %613
  %629 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM8emitCastEP12TIntermTypediS2_i(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %64, i32 %581, %class.TIntermTyped* %575, i32 0) #22
  %630 = shl i32 15, %583
  %631 = trunc i32 %630 to i8
  %632 = and i8 %631, 15
  %633 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %629, i64 0, i32 11, i32 1, i32 0
  store i8 %632, i8* %633, align 1
  %634 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %575, i64 0, i32 1, i32 2
  %635 = load i8, i8* %634, align 2
  %636 = icmp eq i8 %635, 20
  br i1 %636, label %642, label %637

637:                                              ; preds = %628
  %638 = zext i8 %577 to i64
  %639 = getelementptr inbounds [5 x i8], [5 x i8]* @_ZZN4glsl9OutputASM11readSwizzleEP12TIntermTypediE11swizzleSize, i64 0, i64 %638
  %640 = load i8, i8* %639, align 1
  %641 = zext i8 %640 to i32
  br label %642

642:                                              ; preds = %628, %637
  %643 = phi i32 [ %641, %637 ], [ 85, %628 ]
  %644 = shl nsw i32 %583, 1
  %645 = shl i32 %643, %644
  %646 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %629, i64 0, i32 12, i64 0, i32 1
  %647 = bitcast [3 x i8]* %646 to i24*
  %648 = trunc i32 %645 to i24
  %649 = load i24, i24* %647, align 1
  %650 = and i24 %648, 255
  %651 = and i24 %649, -256
  %652 = or i24 %650, %651
  store i24 %652, i24* %647, align 1
  %653 = load i8, i8* %563, align 1
  %654 = icmp ugt i8 %653, %577
  br i1 %654, label %655, label %672

655:                                              ; preds = %642
  %656 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM8emitCastEP12TIntermTypediS2_i(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %64, i32 %581, %class.TIntermTyped* %575, i32 1) #22
  %657 = add nsw i32 %583, %578
  %658 = shl i32 15, %657
  %659 = trunc i32 %658 to i8
  %660 = and i8 %659, 15
  %661 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %656, i64 0, i32 11, i32 1, i32 0
  store i8 %660, i8* %661, align 1
  %662 = icmp eq i8 %577, 2
  %663 = select i1 %662, i32 64, i32 0
  %664 = shl i32 %663, %644
  %665 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %656, i64 0, i32 12, i64 0, i32 1
  %666 = bitcast [3 x i8]* %665 to i24*
  %667 = trunc i32 %664 to i24
  %668 = load i24, i24* %666, align 1
  %669 = and i24 %667, 255
  %670 = and i24 %668, -256
  %671 = or i24 %670, %669
  store i24 %671, i24* %666, align 1
  br label %672

672:                                              ; preds = %655, %642
  %673 = add nsw i32 %567, %578
  br label %699

674:                                              ; preds = %620, %684
  %675 = phi i32 [ 0, %620 ], [ %694, %684 ]
  %676 = phi i32 [ %567, %620 ], [ %695, %684 ]
  %677 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM8emitCastEP12TIntermTypediS2_i(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %64, i32 %581, %class.TIntermTyped* %575, i32 %675) #22
  %678 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %677, i64 0, i32 11, i32 1, i32 0
  store i8 %623, i8* %678, align 1
  %679 = load i8, i8* %624, align 2
  %680 = icmp eq i8 %679, 20
  br i1 %680, label %684, label %681

681:                                              ; preds = %674
  %682 = load i8, i8* %626, align 1
  %683 = zext i8 %682 to i32
  br label %684

684:                                              ; preds = %674, %681
  %685 = phi i32 [ %683, %681 ], [ 85, %674 ]
  %686 = shl i32 %685, %627
  %687 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %677, i64 0, i32 12, i64 0, i32 1
  %688 = bitcast [3 x i8]* %687 to i24*
  %689 = trunc i32 %686 to i24
  %690 = load i24, i24* %688, align 1
  %691 = and i24 %689, 255
  %692 = and i24 %690, -256
  %693 = or i24 %691, %692
  store i24 %693, i24* %688, align 1
  %694 = add nuw nsw i32 %675, 1
  %695 = add nsw i32 %676, %578
  %696 = load i8, i8* %563, align 1
  %697 = zext i8 %696 to i32
  %698 = icmp slt i32 %695, %697
  br i1 %698, label %674, label %699

699:                                              ; preds = %684, %616, %672, %601
  %700 = phi i32 [ %673, %672 ], [ %612, %601 ], [ %567, %616 ], [ %695, %684 ]
  %701 = add nuw nsw i64 %566, 1
  %702 = icmp eq i64 %701, %564
  br i1 %702, label %1306, label %565

703:                                              ; preds = %52, %52, %52, %52, %52, %52, %52, %52, %52
  %704 = icmp eq i32 %1, 2
  br i1 %704, label %705, label %1306

705:                                              ; preds = %703
  %706 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %707 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %708 = bitcast %class.TIntermNode* %707 to %class.TIntermTyped* (%class.TIntermNode*)***
  %709 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %708, align 8
  %710 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %709, i64 1
  %711 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %710, align 8
  %712 = call %class.TIntermTyped* %711(%class.TIntermNode* %707) #21
  %713 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 3
  %714 = load i8, i8* %713, align 1
  %715 = zext i8 %714 to i32
  %716 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 4
  %717 = load i8, i8* %716, align 4
  %718 = zext i8 %717 to i32
  %719 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %712, i64 0, i32 1, i32 3
  %720 = load i8, i8* %719, align 1
  %721 = icmp eq i8 %720, 1
  %722 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %712, i64 0, i32 1, i32 4
  %723 = load i8, i8* %722, align 4
  %724 = icmp ugt i8 %723, 1
  br i1 %721, label %725, label %758

725:                                              ; preds = %705
  br i1 %724, label %763, label %726

726:                                              ; preds = %725
  %727 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %712, i64 0, i32 1, i32 11
  %728 = load %class.TStructure*, %class.TStructure** %727, align 8
  %729 = icmp eq %class.TStructure* %728, null
  br i1 %729, label %730, label %759

730:                                              ; preds = %726
  %731 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %712, i64 0, i32 1, i32 0
  %732 = load i8, i8* %731, align 8
  %733 = icmp ne i8 %732, 38
  %734 = add i8 %732, -15
  %735 = icmp ugt i8 %734, 16
  %736 = and i1 %733, %735
  br i1 %736, label %737, label %759

737:                                              ; preds = %730
  %738 = load i64, i64* %68, align 8
  %739 = load i64, i64* %70, align 8
  %740 = sub i64 %738, %739
  %741 = icmp eq i64 %740, 8
  br i1 %741, label %742, label %759

742:                                              ; preds = %737
  %743 = icmp eq i8 %714, 0
  br i1 %743, label %1306, label %744

744:                                              ; preds = %742
  %745 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 0
  br label %746

746:                                              ; preds = %755, %744
  %747 = phi i32 [ 0, %744 ], [ %756, %755 ]
  %748 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* %64, i32 %747, %class.TIntermNode* nonnull %745, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %749 = icmp ult i32 %747, %718
  br i1 %749, label %750, label %755

750:                                              ; preds = %746
  %751 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM8emitCastEP12TIntermTypediS2_i(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %64, i32 %747, %class.TIntermTyped* %712, i32 0) #22
  %752 = shl i32 1, %747
  %753 = trunc i32 %752 to i8
  %754 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %751, i64 0, i32 11, i32 1, i32 0
  store i8 %753, i8* %754, align 1
  br label %755

755:                                              ; preds = %746, %750
  %756 = add nuw nsw i32 %747, 1
  %757 = icmp eq i32 %756, %715
  br i1 %757, label %1306, label %746

758:                                              ; preds = %705
  br i1 %724, label %763, label %759

759:                                              ; preds = %737, %726, %730, %758
  %760 = icmp sgt i32 %74, 0
  br i1 %760, label %761, label %1306

761:                                              ; preds = %759
  %762 = and i64 %73, 4294967295
  br label %864

763:                                              ; preds = %725, %758
  %764 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 5
  %765 = load i8, i8* %764, align 1, !range !2
  %766 = icmp eq i8 %765, 0
  br i1 %766, label %771, label %767

767:                                              ; preds = %763
  %768 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 6
  %769 = load i32, i32* %768, align 8
  %770 = icmp sgt i32 %769, 0
  br i1 %770, label %771, label %1306

771:                                              ; preds = %763, %767
  %772 = phi i32 [ %769, %767 ], [ 1, %763 ]
  %773 = icmp eq i8 %714, 0
  %774 = bitcast %"class.glsl::Constant"* %12 to i8*
  %775 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %776 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 1, i64 0
  %777 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %778 = bitcast i32* %777 to i8*
  %779 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 0
  %780 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 1
  %781 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 2
  %782 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 3
  %783 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 4
  %784 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 5
  %785 = getelementptr inbounds i8, i8* %774, i64 30
  %786 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 10
  %787 = bitcast %struct.TLayoutQualifier* %786 to i64*
  %788 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 10, i32 2
  %789 = getelementptr inbounds i8, i8* %774, i64 68
  %790 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 1
  %791 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 1, i64 4
  %792 = bitcast %class.ConstantUnion* %776 to float*
  %793 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 1, i64 0, i32 1
  %794 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 1, i64 1
  %795 = bitcast %class.ConstantUnion* %794 to float*
  %796 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 1, i64 1, i32 1
  %797 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 1, i64 2
  %798 = bitcast %class.ConstantUnion* %797 to float*
  %799 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 1, i64 2, i32 1
  %800 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 1, i64 3
  %801 = bitcast %class.ConstantUnion* %800 to float*
  %802 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 1, i64 3, i32 1
  %803 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0
  %804 = zext i32 %772 to i64
  %805 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 1
  %806 = bitcast [4 x %class.ConstantUnion]* %805 to i8*
  br label %807

807:                                              ; preds = %830, %771
  %808 = phi i64 [ 0, %771 ], [ %831, %830 ]
  %809 = load %class.TIntermNode**, %class.TIntermNode*** %706, align 8
  %810 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %809, i64 %808
  %811 = load %class.TIntermNode*, %class.TIntermNode** %810, align 8
  %812 = bitcast %class.TIntermNode* %811 to %class.TIntermTyped* (%class.TIntermNode*)***
  %813 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %812, align 8
  %814 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %813, i64 1
  %815 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %814, align 8
  %816 = call %class.TIntermTyped* %815(%class.TIntermNode* %811) #21
  %817 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %816, i64 0, i32 1, i32 3
  %818 = load i8, i8* %817, align 1
  %819 = zext i8 %818 to i32
  %820 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %816, i64 0, i32 1, i32 4
  %821 = load i8, i8* %820, align 4
  br i1 %773, label %830, label %822

822:                                              ; preds = %807
  %823 = zext i8 %821 to i32
  %824 = icmp ugt i8 %717, %821
  %825 = trunc i64 %808 to i32
  %826 = mul nsw i32 %825, %715
  %827 = sub nsw i32 4, %823
  %828 = lshr i32 15, %827
  %829 = trunc i32 %828 to i8
  br label %833

830:                                              ; preds = %861, %807
  %831 = add nuw nsw i64 %808, 1
  %832 = icmp eq i64 %831, %804
  br i1 %832, label %1306, label %807

833:                                              ; preds = %861, %822
  %834 = phi i32 [ 0, %822 ], [ %862, %861 ]
  %835 = icmp uge i32 %834, %819
  %836 = or i1 %824, %835
  br i1 %836, label %837, label %855

837:                                              ; preds = %833
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %774) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %806, i8 -86, i64 32, i1 false)
  %838 = icmp eq i32 %834, 0
  %839 = icmp eq i32 %834, 1
  %840 = icmp eq i32 %834, 2
  %841 = icmp eq i32 %834, 3
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %27)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %28)
  call void @llvm.memset.p0i8.i64(i8* align 2 %29, i8 0, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %778, i8 0, i64 16, i1 false) #20
  store i8 1, i8* %779, align 8
  store i8 3, i8* %780, align 1
  store i8 4, i8* %782, align 1
  store i8 1, i8* %783, align 4
  store i8 0, i8* %784, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %785, i8* nonnull align 2 %27, i64 26, i1 false) #20
  store i64 4294967295, i64* %787, align 8
  store i32 0, i32* %788, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %789, i8* nonnull align 4 %28, i64 20, i1 false) #20
  store %class.ConstantUnion* %776, %class.ConstantUnion** %790, align 8
  store i8 2, i8* %781, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %28)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN4glsl8ConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %775, align 8
  br label %842

842:                                              ; preds = %842, %837
  %843 = phi %class.ConstantUnion* [ %776, %837 ], [ %846, %842 ]
  %844 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %843, i64 0, i32 0, i32 0
  store i32 0, i32* %844, align 4
  %845 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %843, i64 0, i32 1
  store i8 0, i8* %845, align 4
  %846 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %843, i64 1
  %847 = icmp eq %class.ConstantUnion* %846, %791
  br i1 %847, label %848, label %842

848:                                              ; preds = %842
  %849 = select i1 %838, float 1.000000e+00, float 0.000000e+00
  %850 = select i1 %839, float 1.000000e+00, float 0.000000e+00
  %851 = select i1 %840, float 1.000000e+00, float 0.000000e+00
  %852 = select i1 %841, float 1.000000e+00, float 0.000000e+00
  store float %849, float* %792, align 8
  store i8 1, i8* %793, align 4
  store float %850, float* %795, align 8
  store i8 1, i8* %796, align 4
  store float %851, float* %798, align 8
  store i8 1, i8* %799, align 4
  store float %852, float* %801, align 8
  store i8 1, i8* %802, align 4
  %853 = add nuw nsw i32 %834, %826
  %854 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM8emitCastEP12TIntermTypediS2_i(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %64, i32 %853, %class.TIntermTyped* nonnull %803, i32 0) #22
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %774) #20
  br label %855

855:                                              ; preds = %833, %848
  %856 = icmp ult i32 %834, %819
  br i1 %856, label %857, label %861

857:                                              ; preds = %855
  %858 = add nuw nsw i32 %834, %826
  %859 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM8emitCastEP12TIntermTypediS2_i(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %64, i32 %858, %class.TIntermTyped* %816, i32 %834) #22
  %860 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %859, i64 0, i32 11, i32 1, i32 0
  store i8 %829, i8* %860, align 1
  br label %861

861:                                              ; preds = %855, %857
  %862 = add nuw nsw i32 %834, 1
  %863 = icmp eq i32 %862, %715
  br i1 %863, label %830, label %833

864:                                              ; preds = %920, %761
  %865 = phi i64 [ 0, %761 ], [ %923, %920 ]
  %866 = phi i32 [ 0, %761 ], [ %922, %920 ]
  %867 = phi i32 [ 0, %761 ], [ %921, %920 ]
  %868 = load %class.TIntermNode**, %class.TIntermNode*** %706, align 8
  %869 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %868, i64 %865
  %870 = load %class.TIntermNode*, %class.TIntermNode** %869, align 8
  %871 = bitcast %class.TIntermNode* %870 to %class.TIntermTyped* (%class.TIntermNode*)***
  %872 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %871, align 8
  %873 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %872, i64 1
  %874 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %873, align 8
  %875 = call %class.TIntermTyped* %874(%class.TIntermNode* %870) #21
  %876 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %875, i64 0, i32 1, i32 3
  %877 = load i8, i8* %876, align 1
  %878 = zext i8 %877 to i32
  %879 = icmp eq i8 %877, 0
  br i1 %879, label %920, label %880

880:                                              ; preds = %864
  %881 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %875, i64 0, i32 1, i32 2
  %882 = zext i8 %877 to i64
  %883 = getelementptr inbounds [5 x i8], [5 x i8]* @_ZZN4glsl9OutputASM11readSwizzleEP12TIntermTypediE11swizzleSize, i64 0, i64 %882
  br label %884

884:                                              ; preds = %880, %898
  %885 = phi i32 [ 0, %880 ], [ %917, %898 ]
  %886 = phi i32 [ %866, %880 ], [ %918, %898 ]
  %887 = phi i32 [ %867, %880 ], [ %915, %898 ]
  %888 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM8emitCastEP12TIntermTypediS2_i(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %64, i32 %887, %class.TIntermTyped* %875, i32 0) #22
  %889 = shl i32 15, %886
  %890 = trunc i32 %889 to i8
  %891 = and i8 %890, 15
  %892 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %888, i64 0, i32 11, i32 1, i32 0
  store i8 %891, i8* %892, align 1
  %893 = load i8, i8* %881, align 2
  %894 = icmp eq i8 %893, 20
  br i1 %894, label %898, label %895

895:                                              ; preds = %884
  %896 = load i8, i8* %883, align 1
  %897 = zext i8 %896 to i32
  br label %898

898:                                              ; preds = %884, %895
  %899 = phi i32 [ %897, %895 ], [ 85, %884 ]
  %900 = shl nsw i32 %886, 1
  %901 = shl i32 %899, %900
  %902 = mul nsw i32 %885, 85
  %903 = add nsw i32 %901, %902
  %904 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %888, i64 0, i32 12, i64 0, i32 1
  %905 = bitcast [3 x i8]* %904 to i24*
  %906 = trunc i32 %903 to i24
  %907 = load i24, i24* %905, align 1
  %908 = and i24 %906, 255
  %909 = and i24 %907, -256
  %910 = or i24 %908, %909
  store i24 %910, i24* %905, align 1
  %911 = add nsw i32 %886, %878
  %912 = sub i32 %911, %885
  %913 = icmp sge i32 %912, %718
  %914 = zext i1 %913 to i32
  %915 = add nsw i32 %887, %914
  %916 = sub i32 %718, %886
  %917 = add i32 %916, %885
  %918 = select i1 %913, i32 0, i32 %912
  %919 = icmp slt i32 %917, %878
  br i1 %919, label %884, label %920

920:                                              ; preds = %898, %864
  %921 = phi i32 [ %867, %864 ], [ %915, %898 ]
  %922 = phi i32 [ %866, %864 ], [ %918, %898 ]
  %923 = add nuw nsw i64 %865, 1
  %924 = icmp eq i64 %923, %762
  br i1 %924, label %1306, label %864

925:                                              ; preds = %52
  %926 = icmp eq i32 %1, 2
  %927 = icmp sgt i32 %74, 0
  %928 = and i1 %926, %927
  br i1 %928, label %929, label %1306

929:                                              ; preds = %925
  %930 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %931 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 2
  %932 = and i64 %73, 4294967295
  br label %933

933:                                              ; preds = %952, %929
  %934 = phi %class.TIntermNode** [ %77, %929 ], [ %954, %952 ]
  %935 = phi i64 [ 0, %929 ], [ %950, %952 ]
  %936 = phi i32 [ 0, %929 ], [ %953, %952 ]
  %937 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %934, i64 %935
  %938 = load %class.TIntermNode*, %class.TIntermNode** %937, align 8
  %939 = bitcast %class.TIntermNode* %938 to %class.TIntermTyped* (%class.TIntermNode*)***
  %940 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %939, align 8
  %941 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %940, i64 1
  %942 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %941, align 8
  %943 = call %class.TIntermTyped* %942(%class.TIntermNode* %938) #21
  %944 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %943, i64 0, i32 1
  %945 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %944) #21
  %946 = icmp sgt i32 %945, 0
  br i1 %946, label %947, label %949

947:                                              ; preds = %933
  %948 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %943, i64 0, i32 0
  br label %955

949:                                              ; preds = %965, %933
  %950 = add nuw nsw i64 %935, 1
  %951 = icmp eq i64 %950, %932
  br i1 %951, label %1306, label %952

952:                                              ; preds = %949
  %953 = add nsw i32 %945, %936
  %954 = load %class.TIntermNode**, %class.TIntermNode*** %930, align 8
  br label %933

955:                                              ; preds = %965, %947
  %956 = phi i32 [ 0, %947 ], [ %969, %965 ]
  %957 = add nsw i32 %956, %936
  %958 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* %64, i32 %957, %class.TIntermNode* %948, i32 %956, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %959 = load i8, i8* %931, align 2
  %960 = icmp eq i8 %959, 20
  br i1 %960, label %965, label %961

961:                                              ; preds = %955
  %962 = call i32 @_ZN4glsl12registerSizeERK5TTypei(%class.TType* dereferenceable(64) %65, i32 %957) #21
  %963 = sub nsw i32 4, %962
  %964 = lshr i32 15, %963
  br label %965

965:                                              ; preds = %955, %961
  %966 = phi i32 [ %964, %961 ], [ 2, %955 ]
  %967 = trunc i32 %966 to i8
  %968 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %958, i64 0, i32 11, i32 1, i32 0
  store i8 %967, i8* %968, align 1
  %969 = add nuw nsw i32 %956, 1
  %970 = icmp eq i32 %969, %945
  br i1 %970, label %949, label %955

971:                                              ; preds = %52
  %972 = icmp eq i32 %1, 2
  br i1 %972, label %973, label %1306

973:                                              ; preds = %971
  %974 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %975 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %976 = load %class.TIntermNode*, %class.TIntermNode** %975, align 8
  call void @_ZN4glsl9OutputASM7emitCmpEN2sw6Shader7ControlEP12TIntermTypedP11TIntermNodeS7_i(%"class.glsl::OutputASM"* %0, i32 4, %class.TIntermTyped* %64, %class.TIntermNode* %974, %class.TIntermNode* %976, i32 0) #22
  br label %1306

977:                                              ; preds = %52
  %978 = icmp eq i32 %1, 2
  br i1 %978, label %979, label %1306

979:                                              ; preds = %977
  %980 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %981 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %982 = load %class.TIntermNode*, %class.TIntermNode** %981, align 8
  call void @_ZN4glsl9OutputASM7emitCmpEN2sw6Shader7ControlEP12TIntermTypedP11TIntermNodeS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* %64, %class.TIntermNode* %980, %class.TIntermNode* %982, i32 0) #22
  br label %1306

983:                                              ; preds = %52
  %984 = icmp eq i32 %1, 2
  br i1 %984, label %985, label %1306

985:                                              ; preds = %983
  %986 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %987 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %988 = load %class.TIntermNode*, %class.TIntermNode** %987, align 8
  call void @_ZN4glsl9OutputASM7emitCmpEN2sw6Shader7ControlEP12TIntermTypedP11TIntermNodeS7_i(%"class.glsl::OutputASM"* %0, i32 6, %class.TIntermTyped* %64, %class.TIntermNode* %986, %class.TIntermNode* %988, i32 0) #22
  br label %1306

989:                                              ; preds = %52
  %990 = icmp eq i32 %1, 2
  br i1 %990, label %991, label %1306

991:                                              ; preds = %989
  %992 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %993 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %994 = load %class.TIntermNode*, %class.TIntermNode** %993, align 8
  call void @_ZN4glsl9OutputASM7emitCmpEN2sw6Shader7ControlEP12TIntermTypedP11TIntermNodeS7_i(%"class.glsl::OutputASM"* %0, i32 3, %class.TIntermTyped* %64, %class.TIntermNode* %992, %class.TIntermNode* %994, i32 0) #22
  br label %1306

995:                                              ; preds = %52
  %996 = icmp eq i32 %1, 2
  br i1 %996, label %997, label %1306

997:                                              ; preds = %995
  %998 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %999 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %1000 = load %class.TIntermNode*, %class.TIntermNode** %999, align 8
  call void @_ZN4glsl9OutputASM7emitCmpEN2sw6Shader7ControlEP12TIntermTypedP11TIntermNodeS7_i(%"class.glsl::OutputASM"* %0, i32 2, %class.TIntermTyped* %64, %class.TIntermNode* %998, %class.TIntermNode* %1000, i32 0) #22
  br label %1306

1001:                                             ; preds = %52
  %1002 = icmp eq i32 %1, 2
  br i1 %1002, label %1003, label %1306

1003:                                             ; preds = %1001
  %1004 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1005 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %1006 = load %class.TIntermNode*, %class.TIntermNode** %1005, align 8
  call void @_ZN4glsl9OutputASM7emitCmpEN2sw6Shader7ControlEP12TIntermTypedP11TIntermNodeS7_i(%"class.glsl::OutputASM"* %0, i32 5, %class.TIntermTyped* %64, %class.TIntermNode* %1004, %class.TIntermNode* %1006, i32 0) #22
  br label %1306

1007:                                             ; preds = %52
  %1008 = icmp eq i32 %1, 2
  br i1 %1008, label %1009, label %1306

1009:                                             ; preds = %1007
  %1010 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1011 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %1012 = load %class.TIntermNode*, %class.TIntermNode** %1011, align 8
  %1013 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435491, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1010, i32 0, %class.TIntermNode* %1012, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1014:                                             ; preds = %52
  %1015 = icmp eq i32 %1, 2
  br i1 %1015, label %1016, label %1306

1016:                                             ; preds = %1014
  %1017 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %1018 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %1019 = load %class.TIntermNode*, %class.TIntermNode** %1018, align 8
  %1020 = bitcast %class.TIntermNode* %1019 to %class.TIntermTyped* (%class.TIntermNode*)***
  %1021 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %1020, align 8
  %1022 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1021, i64 1
  %1023 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1022, align 8
  %1024 = call %class.TIntermTyped* %1023(%class.TIntermNode* %1019) #21
  %1025 = load %class.TIntermNode**, %class.TIntermNode*** %1017, align 8
  %1026 = load %class.TIntermNode*, %class.TIntermNode** %1025, align 8
  %1027 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435474, %class.TIntermTyped* %1024, i32 0, %class.TIntermNode* %1026, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  call void @_ZN4glsl9OutputASM12assignLvalueEP12TIntermTypedS2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1024, %class.TIntermTyped* %1024) #22
  %1028 = load %class.TIntermNode**, %class.TIntermNode*** %1017, align 8
  %1029 = load %class.TIntermNode*, %class.TIntermNode** %1028, align 8
  %1030 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1024, i64 0, i32 0
  call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 3, %class.TIntermTyped* %64, %class.TIntermNode* %1029, %class.TIntermNode* %1030, %class.TIntermNode* null) #22
  br label %1306

1031:                                             ; preds = %52
  %1032 = icmp eq i32 %1, 2
  br i1 %1032, label %1033, label %1306

1033:                                             ; preds = %1031
  %1034 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1035 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %1036 = load %class.TIntermNode*, %class.TIntermNode** %1035, align 8
  %1037 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435496, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1034, i32 0, %class.TIntermNode* %1036, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1038:                                             ; preds = %52
  %1039 = icmp eq i32 %1, 2
  br i1 %1039, label %1040, label %1306

1040:                                             ; preds = %1038
  %1041 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1042 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %1043 = load %class.TIntermNode*, %class.TIntermNode** %1042, align 8
  %1044 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435465, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1041, i32 0, %class.TIntermNode* %1043, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1045:                                             ; preds = %52
  %1046 = icmp eq i32 %1, 2
  br i1 %1046, label %1047, label %1306

1047:                                             ; preds = %1045
  %1048 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %1049 = load i8, i8* %1048, align 8
  %1050 = icmp eq i8 %1049, 3
  %1051 = select i1 %1050, i32 268435582, i32 10
  %1052 = icmp eq i8 %1049, 2
  %1053 = select i1 %1052, i32 268435577, i32 %1051
  %1054 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1055 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %1056 = load %class.TIntermNode*, %class.TIntermNode** %1055, align 8
  %1057 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %1053, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1054, i32 0, %class.TIntermNode* %1056, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1058:                                             ; preds = %52
  %1059 = icmp eq i32 %1, 2
  br i1 %1059, label %1060, label %1306

1060:                                             ; preds = %1058
  %1061 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %1062 = load i8, i8* %1061, align 8
  %1063 = icmp eq i8 %1062, 3
  %1064 = select i1 %1063, i32 268435583, i32 11
  %1065 = icmp eq i8 %1062, 2
  %1066 = select i1 %1065, i32 268435578, i32 %1064
  %1067 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1068 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %1069 = load %class.TIntermNode*, %class.TIntermNode** %1068, align 8
  %1070 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %1066, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1067, i32 0, %class.TIntermNode* %1069, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1071:                                             ; preds = %52
  %1072 = icmp eq i32 %1, 2
  br i1 %1072, label %1073, label %1306

1073:                                             ; preds = %1071
  %1074 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %1075 = load i8, i8* %1074, align 8
  %1076 = icmp eq i8 %1075, 3
  %1077 = select i1 %1076, i32 268435583, i32 11
  %1078 = icmp eq i8 %1075, 2
  %1079 = select i1 %1078, i32 268435578, i32 %1077
  %1080 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %1081 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1082 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %1083 = load %class.TIntermNode*, %class.TIntermNode** %1082, align 8
  %1084 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %1079, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1081, i32 0, %class.TIntermNode* %1083, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %1085 = load i8, i8* %1074, align 8
  %1086 = icmp eq i8 %1085, 3
  %1087 = select i1 %1086, i32 268435582, i32 10
  %1088 = icmp eq i8 %1085, 2
  %1089 = select i1 %1088, i32 268435577, i32 %1087
  %1090 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %2, i64 0, i32 0, i32 0, i32 0
  %1091 = load %class.TIntermNode**, %class.TIntermNode*** %1080, align 8
  %1092 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %1091, i64 2
  %1093 = load %class.TIntermNode*, %class.TIntermNode** %1092, align 8
  %1094 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %1089, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1090, i32 0, %class.TIntermNode* %1093, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1095:                                             ; preds = %52
  %1096 = icmp eq i32 %1, 2
  br i1 %1096, label %1097, label %1306

1097:                                             ; preds = %1095
  %1098 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %1099 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 2
  %1100 = load %class.TIntermNode*, %class.TIntermNode** %1099, align 8
  %1101 = bitcast %class.TIntermNode* %1100 to %class.TIntermTyped* (%class.TIntermNode*)***
  %1102 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %1101, align 8
  %1103 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1102, i64 1
  %1104 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1103, align 8
  %1105 = call %class.TIntermTyped* %1104(%class.TIntermNode* %1100) #21
  %1106 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1105, i64 0, i32 1, i32 0
  %1107 = load i8, i8* %1106, align 8
  %1108 = icmp eq i8 %1107, 4
  %1109 = load %class.TIntermNode**, %class.TIntermNode*** %1098, align 8
  %1110 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %1109, i64 2
  %1111 = load %class.TIntermNode*, %class.TIntermNode** %1110, align 8
  %1112 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %1109, i64 1
  %1113 = load %class.TIntermNode*, %class.TIntermNode** %1112, align 8
  %1114 = load %class.TIntermNode*, %class.TIntermNode** %1109, align 8
  br i1 %1108, label %1115, label %1117

1115:                                             ; preds = %1097
  %1116 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435555, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1111, i32 0, %class.TIntermNode* %1113, i32 0, %class.TIntermNode* %1114, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1117:                                             ; preds = %1097
  %1118 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 18, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1111, i32 0, %class.TIntermNode* %1113, i32 0, %class.TIntermNode* %1114, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1119:                                             ; preds = %52
  %1120 = icmp eq i32 %1, 2
  br i1 %1120, label %1121, label %1306

1121:                                             ; preds = %1119
  %1122 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1123 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %1124 = load %class.TIntermNode*, %class.TIntermNode** %1123, align 8
  %1125 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435517, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1122, i32 0, %class.TIntermNode* %1124, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1126:                                             ; preds = %52
  %1127 = icmp eq i32 %1, 2
  br i1 %1127, label %1128, label %1306

1128:                                             ; preds = %1126
  %1129 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1130 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %1131 = load %class.TIntermNode*, %class.TIntermNode** %1130, align 8
  %1132 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 2
  %1133 = load %class.TIntermNode*, %class.TIntermNode** %1132, align 8
  %1134 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435518, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1129, i32 0, %class.TIntermNode* %1131, i32 0, %class.TIntermNode* %1133, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1135:                                             ; preds = %52
  %1136 = icmp eq i32 %1, 2
  br i1 %1136, label %1137, label %1306

1137:                                             ; preds = %1135
  %1138 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %1139 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1140 = bitcast %class.TIntermNode* %1139 to %class.TIntermTyped* (%class.TIntermNode*)***
  %1141 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %1140, align 8
  %1142 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1141, i64 1
  %1143 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1142, align 8
  %1144 = call %class.TIntermTyped* %1143(%class.TIntermNode* %1139) #21
  %1145 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1144, i64 0, i32 1, i32 3
  %1146 = load i8, i8* %1145, align 1
  %1147 = zext i8 %1146 to i32
  %1148 = call i32 @_ZN2sw6Shader11OPCODE_DISTEi(i32 %1147) #21
  %1149 = load %class.TIntermNode**, %class.TIntermNode*** %1138, align 8
  %1150 = load %class.TIntermNode*, %class.TIntermNode** %1149, align 8
  %1151 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %1149, i64 1
  %1152 = load %class.TIntermNode*, %class.TIntermNode** %1151, align 8
  %1153 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %1148, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1150, i32 0, %class.TIntermNode* %1152, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1154:                                             ; preds = %52
  %1155 = icmp eq i32 %1, 2
  br i1 %1155, label %1156, label %1306

1156:                                             ; preds = %1154
  %1157 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %1158 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1159 = bitcast %class.TIntermNode* %1158 to %class.TIntermTyped* (%class.TIntermNode*)***
  %1160 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %1159, align 8
  %1161 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1160, i64 1
  %1162 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1161, align 8
  %1163 = call %class.TIntermTyped* %1162(%class.TIntermNode* %1158) #21
  %1164 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1163, i64 0, i32 1, i32 3
  %1165 = load i8, i8* %1164, align 1
  %1166 = zext i8 %1165 to i32
  %1167 = call i32 @_ZN2sw6Shader9OPCODE_DPEi(i32 %1166) #21
  %1168 = load %class.TIntermNode**, %class.TIntermNode*** %1157, align 8
  %1169 = load %class.TIntermNode*, %class.TIntermNode** %1168, align 8
  %1170 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %1168, i64 1
  %1171 = load %class.TIntermNode*, %class.TIntermNode** %1170, align 8
  %1172 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %1167, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1169, i32 0, %class.TIntermNode* %1171, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1173:                                             ; preds = %52
  %1174 = icmp eq i32 %1, 2
  br i1 %1174, label %1175, label %1306

1175:                                             ; preds = %1173
  %1176 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1177 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %1178 = load %class.TIntermNode*, %class.TIntermNode** %1177, align 8
  %1179 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 33, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1176, i32 0, %class.TIntermNode* %1178, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1180:                                             ; preds = %52
  %1181 = icmp eq i32 %1, 2
  br i1 %1181, label %1182, label %1306

1182:                                             ; preds = %1180
  %1183 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %1184 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1185 = bitcast %class.TIntermNode* %1184 to %class.TIntermTyped* (%class.TIntermNode*)***
  %1186 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %1185, align 8
  %1187 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1186, i64 1
  %1188 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1187, align 8
  %1189 = call %class.TIntermTyped* %1188(%class.TIntermNode* %1184) #21
  %1190 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1189, i64 0, i32 1, i32 3
  %1191 = load i8, i8* %1190, align 1
  %1192 = zext i8 %1191 to i32
  %1193 = call i32 @_ZN2sw6Shader14OPCODE_FORWARDEi(i32 %1192) #21
  %1194 = load %class.TIntermNode**, %class.TIntermNode*** %1183, align 8
  %1195 = load %class.TIntermNode*, %class.TIntermNode** %1194, align 8
  %1196 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %1194, i64 1
  %1197 = load %class.TIntermNode*, %class.TIntermNode** %1196, align 8
  %1198 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %1194, i64 2
  %1199 = load %class.TIntermNode*, %class.TIntermNode** %1198, align 8
  %1200 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %1193, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1195, i32 0, %class.TIntermNode* %1197, i32 0, %class.TIntermNode* %1199, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1201:                                             ; preds = %52
  %1202 = icmp eq i32 %1, 2
  br i1 %1202, label %1203, label %1306

1203:                                             ; preds = %1201
  %1204 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %1205 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1206 = bitcast %class.TIntermNode* %1205 to %class.TIntermTyped* (%class.TIntermNode*)***
  %1207 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %1206, align 8
  %1208 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1207, i64 1
  %1209 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1208, align 8
  %1210 = call %class.TIntermTyped* %1209(%class.TIntermNode* %1205) #21
  %1211 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1210, i64 0, i32 1, i32 3
  %1212 = load i8, i8* %1211, align 1
  %1213 = zext i8 %1212 to i32
  %1214 = call i32 @_ZN2sw6Shader14OPCODE_REFLECTEi(i32 %1213) #21
  %1215 = load %class.TIntermNode**, %class.TIntermNode*** %1204, align 8
  %1216 = load %class.TIntermNode*, %class.TIntermNode** %1215, align 8
  %1217 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %1215, i64 1
  %1218 = load %class.TIntermNode*, %class.TIntermNode** %1217, align 8
  %1219 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %1214, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1216, i32 0, %class.TIntermNode* %1218, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1220:                                             ; preds = %52
  %1221 = icmp eq i32 %1, 2
  br i1 %1221, label %1222, label %1306

1222:                                             ; preds = %1220
  %1223 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %1224 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1225 = bitcast %class.TIntermNode* %1224 to %class.TIntermTyped* (%class.TIntermNode*)***
  %1226 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %1225, align 8
  %1227 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1226, i64 1
  %1228 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1227, align 8
  %1229 = call %class.TIntermTyped* %1228(%class.TIntermNode* %1224) #21
  %1230 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1229, i64 0, i32 1, i32 3
  %1231 = load i8, i8* %1230, align 1
  %1232 = zext i8 %1231 to i32
  %1233 = call i32 @_ZN2sw6Shader14OPCODE_REFRACTEi(i32 %1232) #21
  %1234 = load %class.TIntermNode**, %class.TIntermNode*** %1223, align 8
  %1235 = load %class.TIntermNode*, %class.TIntermNode** %1234, align 8
  %1236 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %1234, i64 1
  %1237 = load %class.TIntermNode*, %class.TIntermNode** %1236, align 8
  %1238 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %1234, i64 2
  %1239 = load %class.TIntermNode*, %class.TIntermNode** %1238, align 8
  %1240 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %1233, %class.TIntermTyped* %64, i32 0, %class.TIntermNode* %1235, i32 0, %class.TIntermNode* %1237, i32 0, %class.TIntermNode* %1239, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %1306

1241:                                             ; preds = %52
  %1242 = icmp eq i32 %1, 2
  br i1 %1242, label %1243, label %1306

1243:                                             ; preds = %1241
  %1244 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %1245 = load %class.TIntermNode*, %class.TIntermNode** %77, align 8
  %1246 = bitcast %class.TIntermNode* %1245 to %class.TIntermTyped* (%class.TIntermNode*)***
  %1247 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %1246, align 8
  %1248 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1247, i64 1
  %1249 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1248, align 8
  %1250 = call %class.TIntermTyped* %1249(%class.TIntermNode* %1245) #21
  %1251 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1250, i64 0, i32 1, i32 3
  %1252 = load i8, i8* %1251, align 1
  %1253 = zext i8 %1252 to i32
  %1254 = icmp eq i8 %1252, 0
  br i1 %1254, label %1306, label %1255

1255:                                             ; preds = %1243, %1255
  %1256 = phi i32 [ %1262, %1255 ], [ 0, %1243 ]
  %1257 = load %class.TIntermNode**, %class.TIntermNode*** %1244, align 8
  %1258 = load %class.TIntermNode*, %class.TIntermNode** %1257, align 8
  %1259 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %1257, i64 1
  %1260 = load %class.TIntermNode*, %class.TIntermNode** %1259, align 8
  %1261 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 5, %class.TIntermTyped* %64, i32 %1256, %class.TIntermNode* %1258, i32 %1256, %class.TIntermNode* %1260, i32 %1256, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %1262 = add nuw nsw i32 %1256, 1
  %1263 = icmp eq i32 %1262, %1253
  br i1 %1263, label %1306, label %1255

1264:                                             ; preds = %52
  %1265 = icmp eq i32 %1, 2
  br i1 %1265, label %1266, label %1306

1266:                                             ; preds = %1264
  %1267 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %66, i64 0, i32 0, i32 0
  %1268 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %77, i64 1
  %1269 = load %class.TIntermNode*, %class.TIntermNode** %1268, align 8
  %1270 = bitcast %class.TIntermNode* %1269 to %class.TIntermTyped* (%class.TIntermNode*)***
  %1271 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %1270, align 8
  %1272 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1271, i64 1
  %1273 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1272, align 8
  %1274 = call %class.TIntermTyped* %1273(%class.TIntermNode* %1269) #21
  %1275 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1274, i64 0, i32 1, i32 3
  %1276 = load i8, i8* %1275, align 1
  %1277 = icmp eq i8 %1276, 0
  br i1 %1277, label %1306, label %1278

1278:                                             ; preds = %1266, %1278
  %1279 = phi i32 [ %1293, %1278 ], [ 0, %1266 ]
  %1280 = load %class.TIntermNode**, %class.TIntermNode*** %1267, align 8
  %1281 = load %class.TIntermNode*, %class.TIntermNode** %1280, align 8
  %1282 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %1280, i64 1
  %1283 = load %class.TIntermNode*, %class.TIntermNode** %1282, align 8
  %1284 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 5, %class.TIntermTyped* %64, i32 %1279, %class.TIntermNode* %1281, i32 0, %class.TIntermNode* %1283, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  %1285 = mul nuw nsw i32 %1279, 85
  %1286 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %1284, i64 0, i32 12, i64 1, i32 1
  %1287 = bitcast [3 x i8]* %1286 to i24*
  %1288 = trunc i32 %1285 to i24
  %1289 = load i24, i24* %1287, align 1
  %1290 = and i24 %1288, 255
  %1291 = and i24 %1289, -256
  %1292 = or i24 %1291, %1290
  store i24 %1292, i24* %1287, align 1
  %1293 = add nuw nsw i32 %1279, 1
  %1294 = load %class.TIntermNode**, %class.TIntermNode*** %1267, align 8
  %1295 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %1294, i64 1
  %1296 = load %class.TIntermNode*, %class.TIntermNode** %1295, align 8
  %1297 = bitcast %class.TIntermNode* %1296 to %class.TIntermTyped* (%class.TIntermNode*)***
  %1298 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %1297, align 8
  %1299 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1298, i64 1
  %1300 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %1299, align 8
  %1301 = call %class.TIntermTyped* %1300(%class.TIntermNode* %1296) #21
  %1302 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1301, i64 0, i32 1, i32 3
  %1303 = load i8, i8* %1302, align 1
  %1304 = zext i8 %1303 to i32
  %1305 = icmp ult i32 %1293, %1304
  br i1 %1305, label %1278, label %1306

1306:                                             ; preds = %949, %920, %755, %830, %699, %351, %1255, %1278, %1266, %1243, %742, %759, %767, %555, %323, %80, %78, %255, %239, %544, %256, %545, %703, %925, %973, %971, %979, %977, %985, %983, %991, %989, %997, %995, %1003, %1001, %1009, %1007, %1016, %1014, %1033, %1031, %1040, %1038, %1047, %1045, %1060, %1058, %1073, %1071, %1115, %1117, %1095, %1121, %1119, %1128, %1126, %1137, %1135, %1156, %1154, %1175, %1173, %1182, %1180, %1203, %1201, %1222, %1220, %1241, %1264, %52, %83, %279
  %1307 = phi i1 [ false, %279 ], [ true, %83 ], [ true, %52 ], [ true, %1264 ], [ true, %1241 ], [ true, %1220 ], [ true, %1222 ], [ true, %1201 ], [ true, %1203 ], [ true, %1180 ], [ true, %1182 ], [ true, %1173 ], [ true, %1175 ], [ true, %1154 ], [ true, %1156 ], [ true, %1135 ], [ true, %1137 ], [ true, %1126 ], [ true, %1128 ], [ true, %1119 ], [ true, %1121 ], [ true, %1095 ], [ true, %1117 ], [ true, %1115 ], [ true, %1071 ], [ true, %1073 ], [ true, %1058 ], [ true, %1060 ], [ true, %1045 ], [ true, %1047 ], [ true, %1038 ], [ true, %1040 ], [ true, %1031 ], [ true, %1033 ], [ true, %1014 ], [ true, %1016 ], [ true, %1007 ], [ true, %1009 ], [ true, %1001 ], [ true, %1003 ], [ true, %995 ], [ true, %997 ], [ true, %989 ], [ true, %991 ], [ true, %983 ], [ true, %985 ], [ true, %977 ], [ true, %979 ], [ true, %971 ], [ true, %973 ], [ true, %925 ], [ true, %703 ], [ true, %545 ], [ true, %256 ], [ true, %544 ], [ true, %239 ], [ true, %255 ], [ true, %78 ], [ true, %80 ], [ true, %1266 ], [ true, %1243 ], [ true, %323 ], [ true, %555 ], [ true, %767 ], [ true, %759 ], [ true, %742 ], [ true, %1278 ], [ true, %1255 ], [ true, %351 ], [ true, %699 ], [ true, %830 ], [ true, %755 ], [ true, %920 ], [ true, %949 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %22) #20
  br label %1308

1308:                                             ; preds = %18, %1306
  %1309 = phi i1 [ %1307, %1306 ], [ false, %18 ]
  ret i1 %1309
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden %"struct.glsl::Function"* @_ZN4glsl9OutputASM12findFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEE14pool_allocatorIcEEE(%"class.glsl::OutputASM"* nocapture readonly, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(32)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15
  %4 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15, i32 0, i32 1
  %5 = bitcast %"struct.glsl::Function"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.111"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  %10 = inttoptr i64 %8 to %"struct.glsl::Function"*
  br i1 %9, label %79, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %23 = select i1 %15, i8* %21, i8* %22
  %24 = icmp eq i64 %19, 0
  %25 = sub i64 %6, %8
  %26 = sdiv exact i64 %25, 56
  br label %27

27:                                               ; preds = %11, %67
  %28 = phi i64 [ 0, %11 ], [ %69, %67 ]
  %29 = phi i32 [ 0, %11 ], [ %68, %67 ]
  %30 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %10, i64 %28, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %10, i64 %28, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %33 to i64
  %38 = select i1 %34, i64 %36, i64 %37
  %39 = icmp eq i64 %38, %19
  br i1 %39, label %40, label %67

40:                                               ; preds = %27
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %44 = select i1 %34, i8* %42, i8* %43
  br i1 %34, label %51, label %45

45:                                               ; preds = %40
  br i1 %24, label %77, label %46

46:                                               ; preds = %45
  %47 = ptrtoint i8* %42 to i64
  %48 = trunc i64 %47 to i8
  %49 = load i8, i8* %23, align 1
  %50 = icmp eq i8 %49, %48
  br i1 %50, label %52, label %67

51:                                               ; preds = %40
  br i1 %24, label %75, label %64

52:                                               ; preds = %46, %59
  %53 = phi i64 [ %56, %59 ], [ %37, %46 ]
  %54 = phi i8* [ %57, %59 ], [ %43, %46 ]
  %55 = phi i8* [ %60, %59 ], [ %23, %46 ]
  %56 = add i64 %53, -1
  %57 = getelementptr inbounds i8, i8* %54, i64 1
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds i8, i8* %55, i64 1
  %61 = load i8, i8* %57, align 1
  %62 = load i8, i8* %60, align 1
  %63 = icmp eq i8 %61, %62
  br i1 %63, label %52, label %67

64:                                               ; preds = %51
  %65 = tail call i32 @bcmp(i8* %44, i8* %23, i64 %19) #20
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %59, %46, %27, %64
  %68 = add i32 %29, 1
  %69 = zext i32 %68 to i64
  %70 = icmp ugt i64 %26, %69
  br i1 %70, label %27, label %79

71:                                               ; preds = %52
  %72 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %10, i64 %28
  br label %79

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %10, i64 %28
  br label %79

75:                                               ; preds = %51
  %76 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %10, i64 %28
  br label %79

77:                                               ; preds = %45
  %78 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %10, i64 %28
  br label %79

79:                                               ; preds = %67, %2, %73, %75, %77, %71
  %80 = phi %"struct.glsl::Function"* [ %72, %71 ], [ %78, %77 ], [ %76, %75 ], [ %74, %73 ], [ null, %2 ], [ null, %67 ]
  ret %"struct.glsl::Function"* %80
}

; Function Attrs: optsize
declare void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext*, %struct.TSourceLoc* dereferenceable(16), i8*, i8*, i8*) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden nonnull %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM8emitCastEP12TIntermTypediS2_i(%"class.glsl::OutputASM"*, %class.TIntermTyped*, i32, %class.TIntermTyped*, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %3, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 8
  switch i8 %7, label %40 [
    i8 4, label %8
    i8 2, label %13
    i8 3, label %20
    i8 1, label %27
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 8
  %11 = add i8 %10, -1
  %12 = icmp ult i8 %11, 3
  br i1 %12, label %32, label %40

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 1
  %17 = select i1 %16, i32 268435500, i32 1
  %18 = icmp eq i8 %15, 4
  %19 = select i1 %18, i32 268435503, i32 %17
  br label %40

20:                                               ; preds = %5
  %21 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 8
  %23 = icmp eq i8 %22, 1
  %24 = select i1 %23, i32 268435502, i32 1
  %25 = icmp eq i8 %22, 4
  %26 = select i1 %25, i32 268435503, i32 %24
  br label %40

27:                                               ; preds = %5
  %28 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 8
  %30 = add i8 %29, -2
  %31 = icmp ult i8 %30, 3
  br i1 %31, label %36, label %40

32:                                               ; preds = %8
  %33 = sext i8 %11 to i64
  %34 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN4glsl9OutputASM8emitCastEP12TIntermTypediS2_i, i64 0, i64 %33
  %35 = load i32, i32* %34, align 4
  br label %40

36:                                               ; preds = %27
  %37 = sext i8 %30 to i64
  %38 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN4glsl9OutputASM8emitCastEP12TIntermTypediS2_i.70, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4
  br label %40

40:                                               ; preds = %5, %8, %27, %36, %20, %13, %32
  %41 = phi i32 [ %35, %32 ], [ %19, %13 ], [ %26, %20 ], [ %39, %36 ], [ 1, %27 ], [ 1, %8 ], [ 1, %5 ]
  %42 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %3, i64 0, i32 0
  %43 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 %41, %class.TIntermTyped* %1, i32 %2, %class.TIntermNode* %42, i32 %4, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #22
  ret %"struct.sw::Shader::Instruction"* %43
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM11readSwizzleEP12TIntermTypedi(%"class.glsl::OutputASM"* nocapture readnone, %class.TIntermTyped* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 2
  %5 = load i8, i8* %4, align 2
  %6 = icmp eq i8 %5, 20
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds [5 x i8], [5 x i8]* @_ZZN4glsl9OutputASM11readSwizzleEP12TIntermTypediE11swizzleSize, i64 0, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  br label %12

12:                                               ; preds = %3, %7
  %13 = phi i32 [ %11, %7 ], [ 85, %3 ]
  ret i32 %13
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM9writeMaskEP12TIntermTypedi(%"class.glsl::OutputASM"* nocapture readnone, %class.TIntermTyped*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 2
  %5 = load i8, i8* %4, align 2
  %6 = icmp eq i8 %5, 20
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1
  %9 = tail call i32 @_ZN4glsl12registerSizeERK5TTypei(%class.TType* dereferenceable(64) %8, i32 %2) #22
  %10 = sub nsw i32 4, %9
  %11 = lshr i32 15, %10
  br label %12

12:                                               ; preds = %3, %7
  %13 = phi i32 [ %11, %7 ], [ 2, %3 ]
  ret i32 %13
}

; Function Attrs: optsize
declare i32 @_ZN2sw6Shader11OPCODE_DISTEi(i32) local_unnamed_addr #7

; Function Attrs: optsize
declare i32 @_ZN2sw6Shader14OPCODE_FORWARDEi(i32) local_unnamed_addr #7

; Function Attrs: optsize
declare i32 @_ZN2sw6Shader14OPCODE_REFLECTEi(i32) local_unnamed_addr #7

; Function Attrs: optsize
declare i32 @_ZN2sw6Shader14OPCODE_REFRACTEi(i32) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4glsl9OutputASM14visitSelectionE5VisitP16TIntermSelection(%"class.glsl::OutputASM"*, i32, %class.TIntermSelection*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 13
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 12
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %109

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.TIntermSelection, %class.TIntermSelection* %2, i64 0, i32 1
  %11 = load %class.TIntermTyped*, %class.TIntermTyped** %10, align 8
  %12 = getelementptr inbounds %class.TIntermSelection, %class.TIntermSelection* %2, i64 0, i32 2
  %13 = load %class.TIntermNode*, %class.TIntermNode** %12, align 8
  %14 = getelementptr inbounds %class.TIntermSelection, %class.TIntermSelection* %2, i64 0, i32 3
  %15 = load %class.TIntermNode*, %class.TIntermNode** %14, align 8
  %16 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %11, i64 0, i32 0
  %17 = bitcast %class.TIntermTyped* %11 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %18 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %17, align 8
  %19 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %18, i64 2
  %20 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %19, align 8
  %21 = tail call %class.TIntermConstantUnion* %20(%class.TIntermNode* %16) #21
  %22 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %23 = bitcast %class.TIntermTyped* %11 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %24 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %23, align 8
  %25 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %24, align 8
  tail call void %25(%class.TIntermNode* %16, %class.TIntermTraverser* %22) #21
  %26 = getelementptr inbounds %class.TIntermSelection, %class.TIntermSelection* %2, i64 0, i32 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %class.TIntermConstantUnion* %21, null
  br i1 %28, label %74, label %30

30:                                               ; preds = %9
  br i1 %29, label %31, label %47

31:                                               ; preds = %30
  %32 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %21, i64 0, i32 1
  %33 = bitcast %class.ConstantUnion** %32 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %31
  %38 = bitcast %class.TIntermNode* %13 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %39 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %38, align 8
  %40 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %39, align 8
  tail call void %40(%class.TIntermNode* %13, %class.TIntermTraverser* %22) #21
  %41 = getelementptr inbounds %class.TIntermSelection, %class.TIntermSelection* %2, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM4copyEP12TIntermTypedP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %41, %class.TIntermNode* %13, i32 0) #22
  br label %109

42:                                               ; preds = %31
  %43 = bitcast %class.TIntermNode* %15 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %44 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %43, align 8
  %45 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %44, align 8
  tail call void %45(%class.TIntermNode* %15, %class.TIntermTraverser* %22) #21
  %46 = getelementptr inbounds %class.TIntermSelection, %class.TIntermSelection* %2, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM4copyEP12TIntermTypedP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %46, %class.TIntermNode* %15, i32 0) #22
  br label %109

47:                                               ; preds = %30
  %48 = getelementptr inbounds %class.TIntermSelection, %class.TIntermSelection* %2, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN4glsl9OutputASM7trivialEP12TIntermTypedi(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %48, i32 6) #22
  br i1 %49, label %50, label %58

50:                                               ; preds = %47
  %51 = bitcast %class.TIntermNode* %13 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %52 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %51, align 8
  %53 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %52, align 8
  tail call void %53(%class.TIntermNode* %13, %class.TIntermTraverser* %22) #21
  %54 = bitcast %class.TIntermNode* %15 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %55 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %54, align 8
  %56 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %55, align 8
  tail call void %56(%class.TIntermNode* %15, %class.TIntermTraverser* %22) #21
  %57 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435555, %class.TIntermTyped* %48, i32 0, %class.TIntermNode* %16, i32 0, %class.TIntermNode* %13, i32 0, %class.TIntermNode* %15, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %109

58:                                               ; preds = %47
  %59 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 40, %class.TIntermTyped* null, i32 0, %class.TIntermNode* %16, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %60 = icmp eq %class.TIntermNode* %13, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %58
  %62 = bitcast %class.TIntermNode* %13 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %63 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %62, align 8
  %64 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %63, align 8
  tail call void %64(%class.TIntermNode* nonnull %13, %class.TIntermTraverser* %22) #21
  tail call void @_ZN4glsl9OutputASM4copyEP12TIntermTypedP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %48, %class.TIntermNode* nonnull %13, i32 0) #22
  br label %65

65:                                               ; preds = %58, %61
  %66 = icmp eq %class.TIntermNode* %15, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %65
  %68 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 42, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %69 = bitcast %class.TIntermNode* %15 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %70 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %69, align 8
  %71 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %70, align 8
  tail call void %71(%class.TIntermNode* nonnull %15, %class.TIntermTraverser* %22) #21
  tail call void @_ZN4glsl9OutputASM4copyEP12TIntermTypedP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %48, %class.TIntermNode* nonnull %15, i32 0) #22
  br label %72

72:                                               ; preds = %65, %67
  %73 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 43, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %109

74:                                               ; preds = %9
  br i1 %29, label %75, label %93

75:                                               ; preds = %74
  %76 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %21, i64 0, i32 1
  %77 = bitcast %class.ConstantUnion** %76 to i8**
  %78 = load i8*, i8** %77, align 8
  %79 = load i8, i8* %78, align 4, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %75
  %82 = icmp eq %class.TIntermNode* %13, null
  br i1 %82, label %109, label %83

83:                                               ; preds = %81
  %84 = bitcast %class.TIntermNode* %13 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %85 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %84, align 8
  %86 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %85, align 8
  tail call void %86(%class.TIntermNode* nonnull %13, %class.TIntermTraverser* %22) #21
  br label %109

87:                                               ; preds = %75
  %88 = icmp eq %class.TIntermNode* %15, null
  br i1 %88, label %109, label %89

89:                                               ; preds = %87
  %90 = bitcast %class.TIntermNode* %15 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %91 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %90, align 8
  %92 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %91, align 8
  tail call void %92(%class.TIntermNode* nonnull %15, %class.TIntermTraverser* %22) #21
  br label %109

93:                                               ; preds = %74
  %94 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 40, %class.TIntermTyped* null, i32 0, %class.TIntermNode* %16, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %95 = icmp eq %class.TIntermNode* %13, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %93
  %97 = bitcast %class.TIntermNode* %13 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %98 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %97, align 8
  %99 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %98, align 8
  tail call void %99(%class.TIntermNode* nonnull %13, %class.TIntermTraverser* %22) #21
  br label %100

100:                                              ; preds = %93, %96
  %101 = icmp eq %class.TIntermNode* %15, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %100
  %103 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 42, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %104 = bitcast %class.TIntermNode* %15 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %105 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %104, align 8
  %106 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %105, align 8
  tail call void %106(%class.TIntermNode* nonnull %15, %class.TIntermTraverser* %22) #21
  br label %107

107:                                              ; preds = %100, %102
  %108 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 43, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %109

109:                                              ; preds = %50, %72, %107, %42, %37, %81, %87, %89, %83, %3
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4glsl9OutputASM9visitLoopE5VisitP11TIntermLoop(%"class.glsl::OutputASM"*, i32, %class.TIntermLoop*) unnamed_addr #0 align 2 {
  %4 = alloca [26 x i8], align 2
  %5 = alloca [20 x i8], align 4
  %6 = alloca %"struct.glsl::OutputASM::LoopInfo", align 8
  %7 = alloca %"class.glsl::Constant", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.glsl::Temporary", align 8
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 13
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 12
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %183

16:                                               ; preds = %3
  %17 = bitcast %"struct.glsl::OutputASM::LoopInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  call void @_ZN4glsl9OutputASM8LoopInfoC2EP11TIntermLoop(%"struct.glsl::OutputASM::LoopInfo"* nonnull %6, %class.TIntermLoop* %2) #22
  %18 = getelementptr inbounds %"struct.glsl::OutputASM::LoopInfo", %"struct.glsl::OutputASM::LoopInfo"* %6, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %182, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %2, i64 0, i32 3
  %23 = load %class.TIntermNode*, %class.TIntermNode** %22, align 8
  %24 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %2, i64 0, i32 4
  %25 = load %class.TIntermTyped*, %class.TIntermTyped** %24, align 8
  %26 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %2, i64 0, i32 5
  %27 = load %class.TIntermTyped*, %class.TIntermTyped** %26, align 8
  %28 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %2, i64 0, i32 6
  %29 = load %class.TIntermNode*, %class.TIntermNode** %28, align 8
  %30 = bitcast %"class.glsl::Constant"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %30) #20
  %31 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1
  %32 = bitcast [4 x %class.ConstantUnion]* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 0
  %35 = getelementptr inbounds [26 x i8], [26 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %35)
  %36 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %36)
  %37 = getelementptr inbounds [26 x i8], [26 x i8]* %4, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %37, i8 0, i64 24, i1 false)
  %38 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 16, i1 false)
  %39 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = bitcast i32* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #20
  %41 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8 4, i8* %41, align 8
  %42 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 1
  store i8 3, i8* %42, align 1
  %43 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 2
  %44 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 3
  store i8 1, i8* %44, align 1
  %45 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 4
  store i8 1, i8* %45, align 4
  %46 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 5
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds i8, i8* %30, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* nonnull align 2 %35, i64 26, i1 false) #20
  %48 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 10
  %49 = bitcast %struct.TLayoutQualifier* %48 to i64*
  store i64 4294967295, i64* %49, align 8
  %50 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 1, i32 10, i32 2
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds i8, i8* %30, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* nonnull align 4 %36, i64 20, i1 false) #20
  %52 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 1
  store %class.ConstantUnion* %34, %class.ConstantUnion** %52, align 8
  store i8 2, i8* %43, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %35)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %36)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN4glsl8ConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %53 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 4
  br label %54

54:                                               ; preds = %54, %21
  %55 = phi %class.ConstantUnion* [ %34, %21 ], [ %58, %54 ]
  %56 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %55, i64 0, i32 0, i32 0
  store i32 0, i32* %56, align 4
  %57 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %55, i64 0, i32 1
  store i8 0, i8* %57, align 4
  %58 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %55, i64 1
  %59 = icmp eq %class.ConstantUnion* %58, %53
  br i1 %59, label %60, label %54

60:                                               ; preds = %54
  %61 = icmp ult i32 %19, 5
  %62 = bitcast %class.ConstantUnion* %34 to i8*
  store i8 1, i8* %62, align 8
  %63 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 1, i64 0, i32 1
  store i8 4, i8* %63, align 4
  %64 = icmp ne i32 %19, -1
  br i1 %64, label %65, label %75

65:                                               ; preds = %60
  %66 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #20
  %67 = getelementptr inbounds %"struct.glsl::OutputASM::LoopInfo", %"struct.glsl::OutputASM::LoopInfo"* %6, i64 0, i32 1
  %68 = load %class.TIntermSymbol*, %class.TIntermSymbol** %67, align 8
  %69 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %68, i64 0, i32 1
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %8, align 4
  %71 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 17, i32 0
  %72 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJiEEENS_4pairINS_15__tree_iteratorIiPNS_11__tree_nodeIiPvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.118"* %71, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %8) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #20
  br i1 %61, label %75, label %73

73:                                               ; preds = %65
  %74 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435563, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %75

75:                                               ; preds = %65, %73, %60
  %76 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %2, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 2
  br i1 %78, label %79, label %101

79:                                               ; preds = %75
  %80 = bitcast %"class.glsl::Temporary"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %80) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 136, i1 false)
  call void @_ZN4glsl9TemporaryC2EPNS_9OutputASME(%"class.glsl::Temporary"* nonnull %9, %"class.glsl::OutputASM"* %0) #22
  %81 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %9, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0, i32 0
  %83 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* nonnull %81, i32 0, %class.TIntermNode* nonnull %82, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %84 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %9, i64 0, i32 0, i32 0, i32 0
  %85 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435457, %class.TIntermTyped* null, i32 0, %class.TIntermNode* nonnull %84, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %86 = icmp eq %class.TIntermNode* %29, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %89 = bitcast %class.TIntermNode* %29 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %90 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %89, align 8
  %91 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %90, align 8
  call void %91(%class.TIntermNode* nonnull %29, %class.TIntermTraverser* %88) #21
  br label %92

92:                                               ; preds = %79, %87
  %93 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435562, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %94 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %25, i64 0, i32 0
  %95 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %96 = bitcast %class.TIntermTyped* %25 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %97 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %96, align 8
  %98 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %97, align 8
  call void %98(%class.TIntermNode* %94, %class.TIntermTraverser* %95) #21
  %99 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 1, %class.TIntermTyped* nonnull %81, i32 0, %class.TIntermNode* %94, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %100 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435458, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  call void @_ZN4glsl9TemporaryD2Ev(%"class.glsl::Temporary"* nonnull %9) #21
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %80) #20
  br label %172

101:                                              ; preds = %75
  %102 = icmp eq %class.TIntermNode* %23, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %105 = bitcast %class.TIntermNode* %23 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %106 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %105, align 8
  %107 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %106, align 8
  call void %107(%class.TIntermNode* nonnull %23, %class.TIntermTraverser* %104) #21
  br label %108

108:                                              ; preds = %101, %103
  br i1 %61, label %109, label %131

109:                                              ; preds = %108
  %110 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %111 = load %class.TParseContext*, %class.TParseContext** %110, align 8
  %112 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %2, i64 0, i32 0, i32 1
  call void @_ZN13TParseContext4infoERK10TSourceLocPKcS4_S4_(%class.TParseContext* %111, %struct.TSourceLoc* dereferenceable(16) %112, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #21
  %113 = icmp eq %class.TIntermNode* %29, null
  %114 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %115 = bitcast %class.TIntermNode* %29 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %116 = icmp eq %class.TIntermTyped* %27, null
  %117 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %27, i64 0, i32 0
  %118 = bitcast %class.TIntermTyped* %27 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  br label %119

119:                                              ; preds = %128, %109
  %120 = phi i32 [ 0, %109 ], [ %129, %128 ]
  br i1 %113, label %124, label %121

121:                                              ; preds = %119
  %122 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %115, align 8
  %123 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %122, align 8
  call void %123(%class.TIntermNode* nonnull %29, %class.TIntermTraverser* %114) #21
  br label %124

124:                                              ; preds = %119, %121
  br i1 %116, label %128, label %125

125:                                              ; preds = %124
  %126 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %118, align 8
  %127 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %126, align 8
  call void %127(%class.TIntermNode* %117, %class.TIntermTraverser* %114) #21
  br label %128

128:                                              ; preds = %124, %125
  %129 = add nuw i32 %120, 1
  %130 = icmp eq i32 %129, %19
  br i1 %130, label %172, label %119

131:                                              ; preds = %108
  %132 = icmp eq %class.TIntermTyped* %25, null
  br i1 %132, label %139, label %133

133:                                              ; preds = %131
  %134 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %25, i64 0, i32 0
  %135 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %136 = bitcast %class.TIntermTyped* %25 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %137 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %136, align 8
  %138 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %137, align 8
  call void %138(%class.TIntermNode* %134, %class.TIntermTraverser* %135) #21
  br label %141

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %7, i64 0, i32 0, i32 0
  br label %141

141:                                              ; preds = %139, %133
  %142 = phi %class.TIntermTyped* [ %25, %133 ], [ %140, %139 ]
  %143 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %142, i64 0, i32 0
  %144 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435457, %class.TIntermTyped* null, i32 0, %class.TIntermNode* %143, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %145 = icmp eq %class.TIntermNode* %29, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %148 = bitcast %class.TIntermNode* %29 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %149 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %148, align 8
  %150 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %149, align 8
  call void %150(%class.TIntermNode* nonnull %29, %class.TIntermTraverser* %147) #21
  br label %151

151:                                              ; preds = %141, %146
  %152 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435562, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br i1 %64, label %153, label %155

153:                                              ; preds = %151
  %154 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435563, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %155

155:                                              ; preds = %153, %151
  %156 = icmp eq %class.TIntermTyped* %27, null
  br i1 %156, label %163, label %157

157:                                              ; preds = %155
  %158 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %27, i64 0, i32 0
  %159 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %160 = bitcast %class.TIntermTyped* %27 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %161 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %160, align 8
  %162 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %161, align 8
  call void %162(%class.TIntermNode* %158, %class.TIntermTraverser* %159) #21
  br label %163

163:                                              ; preds = %155, %157
  %164 = icmp eq %class.TIntermTyped* %142, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %167 = bitcast %class.TIntermTyped* %142 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %168 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %167, align 8
  %169 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %168, align 8
  call void %169(%class.TIntermNode* %143, %class.TIntermTraverser* %166) #21
  br label %170

170:                                              ; preds = %163, %165
  %171 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435458, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %172

172:                                              ; preds = %128, %170, %92
  br i1 %64, label %173, label %181

173:                                              ; preds = %172
  %174 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174) #20
  %175 = getelementptr inbounds %"struct.glsl::OutputASM::LoopInfo", %"struct.glsl::OutputASM::LoopInfo"* %6, i64 0, i32 1
  %176 = load %class.TIntermSymbol*, %class.TIntermSymbol** %175, align 8
  %177 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %176, i64 0, i32 1
  %178 = load i32, i32* %177, align 8
  store i32 %178, i32* %10, align 4
  %179 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 17, i32 0
  %180 = call i64 @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE14__erase_uniqueIiEEmRKT_(%"class.std::__1::__tree.118"* %179, i32* nonnull dereferenceable(4) %10) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174) #20
  br label %181

181:                                              ; preds = %173, %172
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %30) #20
  br label %182

182:                                              ; preds = %16, %181
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #20
  br label %183

183:                                              ; preds = %3, %182
  ret i1 false
}

; Function Attrs: optsize
declare void @_ZN13TParseContext4infoERK10TSourceLocPKcS4_S4_(%class.TParseContext*, %struct.TSourceLoc* dereferenceable(16), i8*, i8*, i8*) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4glsl9OutputASM11visitBranchE5VisitP13TIntermBranch(%"class.glsl::OutputASM"*, i32, %class.TIntermBranch* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 13
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 12
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %41

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.TIntermBranch, %class.TIntermBranch* %2, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %41 [
    i32 114, label %12
    i32 116, label %16
    i32 117, label %20
    i32 115, label %24
  ]

12:                                               ; preds = %9
  %13 = icmp eq i32 %1, 2
  br i1 %13, label %14, label %41

14:                                               ; preds = %12
  %15 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435558, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %41

16:                                               ; preds = %9
  %17 = icmp eq i32 %1, 2
  br i1 %17, label %18, label %41

18:                                               ; preds = %16
  %19 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 44, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %41

20:                                               ; preds = %9
  %21 = icmp eq i32 %1, 2
  br i1 %21, label %22, label %41

22:                                               ; preds = %20
  %23 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435561, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %41

24:                                               ; preds = %9
  %25 = icmp eq i32 %1, 2
  br i1 %25, label %26, label %41

26:                                               ; preds = %24
  %27 = getelementptr inbounds %class.TIntermBranch, %class.TIntermBranch* %2, i64 0, i32 2
  %28 = load %class.TIntermTyped*, %class.TIntermTyped** %27, align 8
  %29 = icmp eq %class.TIntermTyped* %28, null
  br i1 %29, label %39, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 14
  %32 = load i32, i32* %31, align 8
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 15, i32 0, i32 0
  %35 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %34, align 8
  %36 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %35, i64 %33, i32 3
  %37 = load %class.TIntermTyped*, %class.TIntermTyped** %36, align 8
  %38 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %28, i64 0, i32 0
  tail call void @_ZN4glsl9OutputASM4copyEP12TIntermTypedP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %37, %class.TIntermNode* %38, i32 0) #22
  br label %39

39:                                               ; preds = %26, %30
  %40 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435560, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %41

41:                                               ; preds = %14, %12, %18, %16, %22, %20, %39, %24, %9, %3
  %42 = phi i1 [ false, %3 ], [ true, %9 ], [ true, %24 ], [ true, %39 ], [ true, %20 ], [ true, %22 ], [ true, %16 ], [ true, %18 ], [ true, %12 ], [ true, %14 ]
  ret i1 %42
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4glsl9OutputASM11visitSwitchE5VisitP13TIntermSwitch(%"class.glsl::OutputASM"*, i32, %class.TIntermSwitch* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.glsl::Temporary", align 8
  %5 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 13
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 12
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %124

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.TIntermSwitch, %class.TIntermSwitch* %2, i64 0, i32 1
  %12 = load %class.TIntermTyped*, %class.TIntermTyped** %11, align 8
  %13 = getelementptr inbounds %class.TIntermSwitch, %class.TIntermSwitch* %2, i64 0, i32 2
  %14 = load %class.TIntermAggregate*, %class.TIntermAggregate** %13, align 8
  %15 = icmp ne %class.TIntermTyped* %12, null
  %16 = icmp ne %class.TIntermAggregate* %14, null
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %124

18:                                               ; preds = %10
  %19 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %12, i64 0, i32 0
  %20 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %21 = bitcast %class.TIntermTyped* %12 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %22 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %21, align 8
  %23 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %22, align 8
  tail call void %23(%class.TIntermNode* %19, %class.TIntermTraverser* %20) #21
  %24 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435564, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %25 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %14, i64 0, i32 2, i32 0
  %26 = bitcast %"class.std::__1::vector.77"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %14, i64 0, i32 2, i32 0, i32 0, i32 1
  %29 = bitcast %class.TIntermNode*** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = inttoptr i64 %30 to %class.TIntermNode**
  %32 = inttoptr i64 %27 to %class.TIntermNode**
  %33 = icmp eq %class.TIntermNode** %31, %32
  br i1 %33, label %117, label %34

34:                                               ; preds = %18
  %35 = bitcast %"class.glsl::Temporary"* %4 to i8*
  %36 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %4, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %4, i64 0, i32 0, i32 0, i32 0
  br label %38

38:                                               ; preds = %34, %83
  %39 = phi %class.TIntermNode** [ %32, %34 ], [ %86, %83 ]
  %40 = phi i32 [ 0, %34 ], [ %85, %83 ]
  %41 = phi i64 [ %27, %34 ], [ %87, %83 ]
  %42 = phi i64 [ %30, %34 ], [ %84, %83 ]
  %43 = load %class.TIntermNode*, %class.TIntermNode** %39, align 8
  %44 = bitcast %class.TIntermNode* %43 to %class.TIntermCase* (%class.TIntermNode*)***
  %45 = load %class.TIntermCase* (%class.TIntermNode*)**, %class.TIntermCase* (%class.TIntermNode*)*** %44, align 8
  %46 = getelementptr inbounds %class.TIntermCase* (%class.TIntermNode*)*, %class.TIntermCase* (%class.TIntermNode*)** %45, i64 11
  %47 = load %class.TIntermCase* (%class.TIntermNode*)*, %class.TIntermCase* (%class.TIntermNode*)** %46, align 8
  %48 = call %class.TIntermCase* %47(%class.TIntermNode* %43) #21
  %49 = icmp eq %class.TIntermCase* %48, null
  br i1 %49, label %83, label %50

50:                                               ; preds = %38
  %51 = getelementptr inbounds %class.TIntermCase, %class.TIntermCase* %48, i64 0, i32 1
  %52 = load %class.TIntermTyped*, %class.TIntermTyped** %51, align 8
  %53 = icmp eq %class.TIntermTyped* %52, null
  br i1 %53, label %83, label %54

54:                                               ; preds = %50
  %55 = icmp eq i32 %40, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 42, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %58

58:                                               ; preds = %54, %56
  %59 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %52, i64 0, i32 0
  %60 = bitcast %class.TIntermTyped* %52 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %61 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %60, align 8
  %62 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %61, align 8
  call void %62(%class.TIntermNode* %59, %class.TIntermTraverser* %20) #21
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %35) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 136, i1 false)
  call void @_ZN4glsl9TemporaryC2EPNS_9OutputASME(%"class.glsl::Temporary"* nonnull %4, %"class.glsl::OutputASM"* %0) #22
  call void @_ZN4glsl9OutputASM10emitBinaryEN2sw6Shader6OpcodeEP12TIntermTypedP11TIntermNodeS7_S7_(%"class.glsl::OutputASM"* %0, i32 268435515, %class.TIntermTyped* nonnull %36, %class.TIntermNode* %19, %class.TIntermNode* %59, %class.TIntermNode* null) #22
  %63 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 40, %class.TIntermTyped* null, i32 0, %class.TIntermNode* nonnull %37, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %64 = add nsw i32 %40, 1
  br label %65

65:                                               ; preds = %70, %58
  %66 = phi %class.TIntermNode** [ %39, %58 ], [ %67, %70 ]
  %67 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %66, i64 1
  %68 = load %class.TIntermNode**, %class.TIntermNode*** %28, align 8
  %69 = icmp eq %class.TIntermNode** %67, %68
  br i1 %69, label %82, label %70

70:                                               ; preds = %65
  %71 = load %class.TIntermNode*, %class.TIntermNode** %67, align 8
  %72 = bitcast %class.TIntermNode* %71 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %73 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %72, align 8
  %74 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %73, align 8
  call void %74(%class.TIntermNode* %71, %class.TIntermTraverser* %20) #21
  %75 = load %class.TIntermNode*, %class.TIntermNode** %67, align 8
  %76 = bitcast %class.TIntermNode* %75 to %class.TIntermBranch* (%class.TIntermNode*)***
  %77 = load %class.TIntermBranch* (%class.TIntermNode*)**, %class.TIntermBranch* (%class.TIntermNode*)*** %76, align 8
  %78 = getelementptr inbounds %class.TIntermBranch* (%class.TIntermNode*)*, %class.TIntermBranch* (%class.TIntermNode*)** %77, i64 9
  %79 = load %class.TIntermBranch* (%class.TIntermNode*)*, %class.TIntermBranch* (%class.TIntermNode*)** %78, align 8
  %80 = call %class.TIntermBranch* %79(%class.TIntermNode* %75) #21
  %81 = icmp eq %class.TIntermBranch* %80, null
  br i1 %81, label %65, label %82

82:                                               ; preds = %65, %70
  call void @_ZN4glsl9TemporaryD2Ev(%"class.glsl::Temporary"* nonnull %4) #21
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %35) #20
  br label %83

83:                                               ; preds = %82, %50, %38
  %84 = phi i64 [ %42, %38 ], [ %42, %82 ], [ %41, %50 ]
  %85 = phi i32 [ %40, %38 ], [ %64, %82 ], [ %40, %50 ]
  %86 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %39, i64 1
  %87 = ptrtoint %class.TIntermNode** %86 to i64
  %88 = load %class.TIntermNode**, %class.TIntermNode*** %28, align 8
  %89 = icmp eq %class.TIntermNode** %88, %86
  br i1 %89, label %90, label %38

90:                                               ; preds = %83
  %91 = inttoptr i64 %84 to %class.TIntermNode**
  %92 = icmp eq %class.TIntermNode** %86, %91
  br i1 %92, label %115, label %93

93:                                               ; preds = %90
  %94 = icmp eq i32 %85, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %93
  %96 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 42, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %97

97:                                               ; preds = %93, %95
  br label %98

98:                                               ; preds = %97, %103
  %99 = phi %class.TIntermNode** [ %100, %103 ], [ %91, %97 ]
  %100 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %99, i64 1
  %101 = load %class.TIntermNode**, %class.TIntermNode*** %28, align 8
  %102 = icmp eq %class.TIntermNode** %100, %101
  br i1 %102, label %115, label %103

103:                                              ; preds = %98
  %104 = load %class.TIntermNode*, %class.TIntermNode** %100, align 8
  %105 = bitcast %class.TIntermNode* %104 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %106 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %105, align 8
  %107 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %106, align 8
  call void %107(%class.TIntermNode* %104, %class.TIntermTraverser* %20) #21
  %108 = load %class.TIntermNode*, %class.TIntermNode** %100, align 8
  %109 = bitcast %class.TIntermNode* %108 to %class.TIntermBranch* (%class.TIntermNode*)***
  %110 = load %class.TIntermBranch* (%class.TIntermNode*)**, %class.TIntermBranch* (%class.TIntermNode*)*** %109, align 8
  %111 = getelementptr inbounds %class.TIntermBranch* (%class.TIntermNode*)*, %class.TIntermBranch* (%class.TIntermNode*)** %110, i64 9
  %112 = load %class.TIntermBranch* (%class.TIntermNode*)*, %class.TIntermBranch* (%class.TIntermNode*)** %111, align 8
  %113 = call %class.TIntermBranch* %112(%class.TIntermNode* %108) #21
  %114 = icmp eq %class.TIntermBranch* %113, null
  br i1 %114, label %98, label %115

115:                                              ; preds = %98, %103, %90
  %116 = icmp sgt i32 %85, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %119, %18, %115
  %118 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435565, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %124

119:                                              ; preds = %115, %119
  %120 = phi i32 [ %122, %119 ], [ 0, %115 ]
  %121 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 43, %class.TIntermTyped* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %122 = add nuw nsw i32 %120, 1
  %123 = icmp eq i32 %122, %85
  br i1 %123, label %117, label %119

124:                                              ; preds = %117, %10, %3
  ret i1 false
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: optsize
declare void @_ZN2sw6Shader11InstructionC1ENS0_6OpcodeE(%"struct.sw::Shader::Instruction"*, i32) unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM11destinationERN2sw6Shader20DestinationParameterEP12TIntermTypedi(%"class.glsl::OutputASM"*, %"struct.sw::Shader::DestinationParameter"* nocapture dereferenceable(28), %class.TIntermTyped*, i32) local_unnamed_addr #0 align 2 {
  %5 = tail call i32 @_ZN4glsl9OutputASM12registerTypeEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %2) #22
  %6 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %1, i64 0, i32 0, i32 1
  %7 = trunc i32 %5 to i8
  store i8 %7, i8* %6, align 4
  %8 = tail call i32 @_ZN4glsl9OutputASM13registerIndexEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %2) #22
  %9 = add i32 %8, %3
  %10 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 2
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 20
  br i1 %13, label %21, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1
  %16 = tail call i32 @_ZN4glsl12registerSizeERK5TTypei(%class.TType* dereferenceable(64) %15, i32 %3) #21
  %17 = sub nsw i32 4, %16
  %18 = lshr i32 15, %17
  %19 = load i32, i32* %10, align 4
  %20 = trunc i32 %18 to i8
  br label %21

21:                                               ; preds = %4, %14
  %22 = phi i32 [ %9, %4 ], [ %19, %14 ]
  %23 = phi i8 [ 2, %4 ], [ %20, %14 ]
  %24 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %1, i64 0, i32 1, i32 0
  store i8 %23, i8* %24, align 1
  %25 = icmp ugt i32 %22, 4095
  br i1 %25, label %26, label %34

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %28 = load %class.TParseContext*, %class.TParseContext** %27, align 8
  %29 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 3
  %31 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %30, align 8
  %32 = icmp eq %"class.sw::PixelShader"* %31, null
  %33 = select i1 %32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0)
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %28, %struct.TSourceLoc* dereferenceable(16) %29, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.30, i64 0, i64 0), i8* %33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #21
  br label %34

34:                                               ; preds = %26, %21
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM6sourceERN2sw6Shader15SourceParameterEP11TIntermNodei(%"class.glsl::OutputASM"*, %"struct.sw::Shader::SourceParameter"* nocapture dereferenceable(28), %class.TIntermNode*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.glsl::Temporary", align 8
  %6 = alloca %"struct.glsl::OutputASM::ArgumentInfo", align 8
  %7 = alloca %"struct.glsl::OutputASM::ArgumentInfo", align 8
  %8 = icmp eq %class.TIntermNode* %2, null
  br i1 %8, label %263, label %9

9:                                                ; preds = %4
  %10 = bitcast %class.TIntermNode* %2 to %class.TIntermTyped* (%class.TIntermNode*)***
  %11 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %10, align 8
  %12 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %11, i64 1
  %13 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %12, align 8
  %14 = tail call %class.TIntermTyped* %13(%class.TIntermNode* nonnull %2) #21
  %15 = bitcast %"class.glsl::Temporary"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %15) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 136, i1 false)
  call void @_ZN4glsl9TemporaryC2EPNS_9OutputASME(%"class.glsl::Temporary"* nonnull %5, %"class.glsl::OutputASM"* %0) #22
  %16 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1, i32 9
  %17 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %16, align 8
  %18 = icmp eq %class.TInterfaceBlock* %17, null
  br i1 %18, label %122, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %14, i64 0, i32 1, i32 2
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %122

23:                                               ; preds = %19
  %24 = bitcast %"struct.glsl::OutputASM::ArgumentInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %24) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 88, i1 false)
  call void @_ZN4glsl9OutputASM15getArgumentInfoEP12TIntermTypedi(%"struct.glsl::OutputASM::ArgumentInfo"* nonnull sret %6, %"class.glsl::OutputASM"* %0, %class.TIntermTyped* %14, i32 %3) #22
  %25 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %6, i64 0, i32 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 4
  br i1 %27, label %28, label %58

28:                                               ; preds = %23
  %29 = call i8* @_Znwm(i64 208) #24
  %30 = bitcast i8* %29 to %"struct.sw::Shader::Instruction"*
  call void @_ZN2sw6Shader11InstructionC1ENS0_6OpcodeE(%"struct.sw::Shader::Instruction"* nonnull %30, i32 268435503) #21
  %31 = getelementptr inbounds i8, i8* %29, i64 32
  %32 = getelementptr inbounds i8, i8* %29, i64 56
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %5, i64 0, i32 0, i32 0
  %34 = call i32 @_ZN4glsl9OutputASM13registerIndexEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* nonnull %33) #22
  %35 = bitcast i8* %31 to i32*
  store i32 %34, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %29, i64 60
  %37 = getelementptr inbounds i8, i8* %29, i64 84
  store i8 2, i8* %37, align 4
  %38 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %6, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds i8, i8* %29, i64 85
  %41 = bitcast i8* %40 to i24*
  %42 = trunc i32 %39 to i24
  %43 = load i24, i24* %41, align 1
  %44 = shl i24 %42, 16
  %45 = and i24 %43, 65535
  %46 = or i24 %45, %44
  store i24 %46, i24* %41, align 1
  %47 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %6, i64 0, i32 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %6, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %6, i64 0, i32 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = mul nsw i32 %52, %50
  %54 = add nsw i32 %53, %48
  %55 = bitcast i8* %36 to i32*
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 2
  %57 = load %"class.sw::Shader"*, %"class.sw::Shader"** %56, align 8
  call void @_ZN2sw6Shader6appendEPNS0_11InstructionE(%"class.sw::Shader"* %57, %"struct.sw::Shader::Instruction"* nonnull %30) #21
  br label %119

58:                                               ; preds = %23
  %59 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %6, i64 0, i32 0, i32 1, i32 10
  %60 = bitcast %struct.TLayoutQualifier* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, -4294967296
  %63 = icmp eq i64 %62, 4294967296
  br i1 %63, label %64, label %119

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %6, i64 0, i32 0, i32 1, i32 4
  %66 = load i8, i8* %65, align 4
  %67 = icmp ugt i8 %66, 1
  br i1 %67, label %68, label %119

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %6, i64 0, i32 0, i32 1, i32 3
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = zext i8 %66 to i32
  %73 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %5, i64 0, i32 0, i32 0
  %74 = call i32 @_ZN4glsl9OutputASM13registerIndexEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* nonnull %73) #22
  %75 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %6, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = sdiv i32 %76, %71
  %78 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %6, i64 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %6, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = mul nsw i32 %81, %77
  %83 = add nsw i32 %82, %79
  %84 = srem i32 %76, %71
  %85 = mul nsw i32 %84, 85
  %86 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %6, i64 0, i32 2
  %87 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %6, i64 0, i32 0, i32 0, i32 2
  %88 = trunc i32 %85 to i24
  %89 = and i24 %88, 255
  %90 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 2
  br label %91

91:                                               ; preds = %91, %68
  %92 = phi i32 [ 0, %68 ], [ %117, %91 ]
  %93 = call i8* @_Znwm(i64 208) #24
  %94 = bitcast i8* %93 to %"struct.sw::Shader::Instruction"*
  call void @_ZN2sw6Shader11InstructionC1ENS0_6OpcodeE(%"struct.sw::Shader::Instruction"* nonnull %94, i32 1) #21
  %95 = getelementptr inbounds i8, i8* %93, i64 32
  %96 = getelementptr inbounds i8, i8* %93, i64 56
  store i8 0, i8* %96, align 8
  %97 = bitcast i8* %95 to i32*
  store i32 %74, i32* %97, align 8
  %98 = shl i32 1, %92
  %99 = trunc i32 %98 to i8
  %100 = getelementptr inbounds i8, i8* %93, i64 57
  store i8 %99, i8* %100, align 1
  %101 = getelementptr inbounds i8, i8* %93, i64 60
  %102 = getelementptr inbounds i8, i8* %93, i64 84
  store i8 2, i8* %102, align 4
  %103 = load i32, i32* %86, align 4
  %104 = getelementptr inbounds i8, i8* %93, i64 85
  %105 = bitcast i8* %104 to i24*
  %106 = trunc i32 %103 to i24
  %107 = load i24, i24* %105, align 1
  %108 = shl i24 %106, 16
  %109 = and i24 %107, 65280
  %110 = or i24 %109, %108
  %111 = load i32, i32* %87, align 8
  %112 = mul nsw i32 %111, %92
  %113 = add nsw i32 %83, %112
  %114 = bitcast i8* %101 to i32*
  store i32 %113, i32* %114, align 4
  %115 = or i24 %110, %89
  store i24 %115, i24* %105, align 1
  %116 = load %"class.sw::Shader"*, %"class.sw::Shader"** %90, align 8
  call void @_ZN2sw6Shader6appendEPNS0_11InstructionE(%"class.sw::Shader"* %116, %"struct.sw::Shader::Instruction"* nonnull %94) #21
  %117 = add nuw nsw i32 %92, 1
  %118 = icmp eq i32 %117, %72
  br i1 %118, label %119, label %91

119:                                              ; preds = %91, %58, %64, %28
  %120 = phi %class.TIntermTyped* [ %33, %28 ], [ %14, %64 ], [ %14, %58 ], [ %73, %91 ]
  %121 = phi i32 [ 0, %28 ], [ %3, %64 ], [ %3, %58 ], [ 0, %91 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %24) #20
  br label %122

122:                                              ; preds = %9, %119, %19
  %123 = phi %class.TIntermTyped* [ %120, %119 ], [ %14, %19 ], [ %14, %9 ]
  %124 = phi i32 [ %121, %119 ], [ %3, %19 ], [ %3, %9 ]
  %125 = bitcast %"struct.glsl::OutputASM::ArgumentInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %125) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 88, i1 false)
  call void @_ZN4glsl9OutputASM15getArgumentInfoEP12TIntermTypedi(%"struct.glsl::OutputASM::ArgumentInfo"* nonnull sret %7, %"class.glsl::OutputASM"* %0, %class.TIntermTyped* %123, i32 %124) #22
  %126 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %7, i64 0, i32 0, i32 1
  %127 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %7, i64 0, i32 1
  %128 = load i32, i32* %127, align 8
  %129 = call i32 @_ZN4glsl12registerSizeERK5TTypei(%class.TType* dereferenceable(64) %126, i32 %128) #22
  %130 = call i32 @_ZN4glsl9OutputASM12registerTypeEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %123) #22
  %131 = getelementptr inbounds %"struct.sw::Shader::SourceParameter", %"struct.sw::Shader::SourceParameter"* %1, i64 0, i32 0, i32 1
  %132 = trunc i32 %130 to i8
  store i8 %132, i8* %131, align 4
  %133 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %7, i64 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"struct.sw::Shader::SourceParameter", %"struct.sw::Shader::SourceParameter"* %1, i64 0, i32 1
  %136 = bitcast [3 x i8]* %135 to i24*
  %137 = trunc i32 %134 to i24
  %138 = load i24, i24* %136, align 1
  %139 = shl i24 %137, 16
  %140 = and i24 %138, 65535
  %141 = or i24 %140, %139
  store i24 %141, i24* %136, align 1
  %142 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %123, i64 0, i32 0
  %143 = bitcast %class.TIntermTyped* %123 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %144 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %143, align 8
  %145 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %144, i64 2
  %146 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %145, align 8
  %147 = call %class.TIntermConstantUnion* %146(%class.TIntermNode* %142) #21
  %148 = icmp eq %class.TIntermConstantUnion* %147, null
  br i1 %148, label %214, label %149

149:                                              ; preds = %122
  %150 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %143, align 8
  %151 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %150, i64 2
  %152 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %151, align 8
  %153 = call %class.TIntermConstantUnion* %152(%class.TIntermNode* %142) #21
  %154 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %153, i64 0, i32 1
  %155 = load %class.ConstantUnion*, %class.ConstantUnion** %154, align 8
  %156 = icmp eq %class.ConstantUnion* %155, null
  br i1 %156, label %214, label %157

157:                                              ; preds = %149
  %158 = load i32, i32* %127, align 8
  %159 = call i32 @_ZN4glsl14componentCountERK5TTypei(%class.TType* dereferenceable(64) %126, i32 %158) #22
  %160 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %143, align 8
  %161 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %160, i64 2
  %162 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %161, align 8
  %163 = call %class.TIntermConstantUnion* %162(%class.TIntermNode* %142) #21
  %164 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %163, i64 0, i32 1
  %165 = load %class.ConstantUnion*, %class.ConstantUnion** %164, align 8
  %166 = icmp eq i32 %129, 1
  %167 = bitcast %"struct.sw::Shader::SourceParameter"* %1 to [4 x float]*
  %168 = sext i32 %159 to i64
  %169 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %165, i64 %168
  %170 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %165, i64 %168, i32 1
  %171 = bitcast %class.ConstantUnion* %169 to i8*
  %172 = bitcast %class.ConstantUnion* %169 to float*
  %173 = sext i32 %129 to i64
  br label %174

174:                                              ; preds = %209, %157
  %175 = phi i64 [ 0, %157 ], [ %212, %209 ]
  br i1 %166, label %176, label %188

176:                                              ; preds = %174
  %177 = load i8, i8* %170, align 4
  switch i8 %177, label %209 [
    i8 2, label %178
    i8 3, label %180
    i8 1, label %182
    i8 4, label %184
  ]

178:                                              ; preds = %176
  %179 = load float, float* %172, align 4
  br label %209

180:                                              ; preds = %176
  %181 = load float, float* %172, align 4
  br label %209

182:                                              ; preds = %176
  %183 = load float, float* %172, align 4
  br label %209

184:                                              ; preds = %176
  %185 = load i8, i8* %171, align 4, !range !2
  %186 = icmp eq i8 %185, 0
  %187 = select i1 %186, float 0.000000e+00, float 0xFFFFFFFFE0000000
  br label %209

188:                                              ; preds = %174
  %189 = icmp slt i64 %175, %173
  br i1 %189, label %190, label %209

190:                                              ; preds = %188
  %191 = add nsw i64 %175, %168
  %192 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %165, i64 %191
  %193 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %165, i64 %191, i32 1
  %194 = load i8, i8* %193, align 4
  switch i8 %194, label %209 [
    i8 2, label %195
    i8 3, label %198
    i8 1, label %201
    i8 4, label %204
  ]

195:                                              ; preds = %190
  %196 = bitcast %class.ConstantUnion* %192 to float*
  %197 = load float, float* %196, align 4
  br label %209

198:                                              ; preds = %190
  %199 = bitcast %class.ConstantUnion* %192 to float*
  %200 = load float, float* %199, align 4
  br label %209

201:                                              ; preds = %190
  %202 = bitcast %class.ConstantUnion* %192 to float*
  %203 = load float, float* %202, align 4
  br label %209

204:                                              ; preds = %190
  %205 = bitcast %class.ConstantUnion* %192 to i8*
  %206 = load i8, i8* %205, align 4, !range !2
  %207 = icmp eq i8 %206, 0
  %208 = select i1 %207, float 0.000000e+00, float 0xFFFFFFFFE0000000
  br label %209

209:                                              ; preds = %188, %204, %201, %198, %195, %190, %184, %182, %180, %178, %176
  %210 = phi float [ %187, %184 ], [ %183, %182 ], [ %181, %180 ], [ %179, %178 ], [ 0.000000e+00, %176 ], [ %208, %204 ], [ %203, %201 ], [ %200, %198 ], [ %197, %195 ], [ 0.000000e+00, %190 ], [ 0.000000e+00, %188 ]
  %211 = getelementptr inbounds [4 x float], [4 x float]* %167, i64 0, i64 %175
  store float %210, float* %211, align 4
  %212 = add nuw nsw i64 %175, 1
  %213 = icmp eq i64 %212, 4
  br i1 %213, label %243, label %174

214:                                              ; preds = %149, %122
  %215 = call i32 @_ZN4glsl9OutputASM13registerIndexEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %123) #22
  %216 = load i32, i32* %127, align 8
  %217 = add i32 %216, %215
  %218 = getelementptr inbounds %"struct.sw::Shader::SourceParameter", %"struct.sw::Shader::SourceParameter"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 %217, i32* %218, align 4
  %219 = load i24, i24* %136, align 1
  %220 = icmp ult i24 %219, -65536
  br i1 %220, label %221, label %232

221:                                              ; preds = %214
  %222 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %7, i64 0, i32 0, i32 0, i32 2
  %223 = load i32, i32* %222, align 8
  %224 = icmp sgt i32 %223, 0
  %225 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %7, i64 0, i32 0, i32 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = select i1 %224, i32 %223, i32 %226
  %228 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %7, i64 0, i32 0, i32 0, i32 0
  %229 = load i32, i32* %228, align 8
  %230 = mul nsw i32 %227, %216
  %231 = add nsw i32 %230, %229
  store i32 %231, i32* %218, align 4
  br label %232

232:                                              ; preds = %221, %214
  %233 = phi i32 [ %231, %221 ], [ %217, %214 ]
  %234 = icmp ugt i32 %233, 4095
  br i1 %234, label %235, label %243

235:                                              ; preds = %232
  %236 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %237 = load %class.TParseContext*, %class.TParseContext** %236, align 8
  %238 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %123, i64 0, i32 0, i32 1
  %239 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 3
  %240 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %239, align 8
  %241 = icmp eq %"class.sw::PixelShader"* %240, null
  %242 = select i1 %241, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0)
  call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %237, %struct.TSourceLoc* dereferenceable(16) %238, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.30, i64 0, i64 0), i8* %242, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #21
  br label %243

243:                                              ; preds = %209, %232, %235
  %244 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %123, i64 0, i32 1, i32 0
  %245 = load i8, i8* %244, align 8
  %246 = add i8 %245, -15
  %247 = icmp ult i8 %246, 17
  br i1 %247, label %262, label %248

248:                                              ; preds = %243
  %249 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %123, i64 0, i32 1, i32 2
  %250 = load i8, i8* %249, align 2
  %251 = icmp eq i8 %250, 20
  br i1 %251, label %257, label %252

252:                                              ; preds = %248
  %253 = sext i32 %129 to i64
  %254 = getelementptr inbounds [5 x i8], [5 x i8]* @_ZZN4glsl9OutputASM11readSwizzleEP12TIntermTypediE11swizzleSize, i64 0, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i24
  br label %257

257:                                              ; preds = %248, %252
  %258 = phi i24 [ %256, %252 ], [ 85, %248 ]
  %259 = load i24, i24* %136, align 1
  %260 = and i24 %259, -256
  %261 = or i24 %260, %258
  store i24 %261, i24* %136, align 1
  br label %262

262:                                              ; preds = %257, %243
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %125) #20
  call void @_ZN4glsl9TemporaryD2Ev(%"class.glsl::Temporary"* nonnull %5) #21
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %15) #20
  br label %263

263:                                              ; preds = %4, %262
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw6Shader6appendEPNS0_11InstructionE(%"class.sw::Shader"*, %"struct.sw::Shader::Instruction"*) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden nonnull %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM8emitCastEP12TIntermTypedS2_(%"class.glsl::OutputASM"*, %class.TIntermTyped*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %4 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM8emitCastEP12TIntermTypediS2_i(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1, i32 0, %class.TIntermTyped* %2, i32 0) #22
  ret %"struct.sw::Shader::Instruction"* %4
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl14componentCountERK5TTypei(%class.TType* dereferenceable(64), i32) local_unnamed_addr #0 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %85, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %4
  %9 = tail call i32 @_ZNK5TType20elementRegisterCountEv(%class.TType* %0) #22
  %10 = icmp sgt i32 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %8
  %12 = tail call i32 @_ZNK5TType20elementRegisterCountEv(%class.TType* %0) #22
  %13 = sdiv i32 %1, %12
  %14 = tail call i32 @_ZNK5TType20elementRegisterCountEv(%class.TType* %0) #22
  %15 = mul nsw i32 %14, %13
  %16 = sub nsw i32 %1, %15
  %17 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %0) #22
  %18 = tail call i32 @_ZN4glsl14componentCountERK5TTypei(%class.TType* dereferenceable(64) %0, i32 %16) #22
  %19 = trunc i64 %17 to i32
  %20 = mul i32 %13, %19
  %21 = add i32 %20, %18
  ret i32 %21

22:                                               ; preds = %4, %8
  %23 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 11
  %24 = load %class.TStructure*, %class.TStructure** %23, align 8
  %25 = icmp eq %class.TStructure* %24, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 38
  br i1 %29, label %32, label %78

30:                                               ; preds = %22
  %31 = getelementptr inbounds %class.TStructure, %class.TStructure* %24, i64 0, i32 0, i32 2
  br label %36

32:                                               ; preds = %26
  %33 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 9
  %34 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %33, align 8
  %35 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %34, i64 0, i32 0, i32 2
  br label %36

36:                                               ; preds = %32, %30
  %37 = phi %class.TVector** [ %31, %30 ], [ %35, %32 ]
  %38 = load %class.TVector*, %class.TVector** %37, align 8
  %39 = getelementptr inbounds %class.TVector, %class.TVector* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %class.TField**, %class.TField*** %39, align 8
  %41 = getelementptr inbounds %class.TVector, %class.TVector* %38, i64 0, i32 0, i32 0, i32 1
  %42 = load %class.TField**, %class.TField*** %41, align 8
  %43 = icmp eq %class.TField** %40, %42
  br i1 %43, label %85, label %44

44:                                               ; preds = %36, %69
  %45 = phi i32 [ %55, %69 ], [ %1, %36 ]
  %46 = phi i32 [ %72, %69 ], [ 0, %36 ]
  %47 = phi %class.TField** [ %73, %69 ], [ %40, %36 ]
  %48 = load %class.TField*, %class.TField** %47, align 8
  %49 = getelementptr inbounds %class.TField, %class.TField* %48, i64 0, i32 0
  %50 = load %class.TType*, %class.TType** %49, align 8
  %51 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %50) #22
  %52 = icmp sgt i32 %51, %45
  br i1 %52, label %75, label %53

53:                                               ; preds = %44
  %54 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %50) #22
  %55 = sub nsw i32 %45, %54
  %56 = getelementptr inbounds %class.TType, %class.TType* %50, i64 0, i32 5
  %57 = load i8, i8* %56, align 1, !range !2
  %58 = icmp eq i8 %57, 0
  %59 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %50) #21
  br i1 %58, label %69, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %class.TType, %class.TType* %50, i64 0, i32 6
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %class.TType, %class.TType* %50, i64 0, i32 7
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %62, %64
  %66 = select i1 %65, i32 %64, i32 %62
  %67 = sext i32 %66 to i64
  %68 = mul i64 %59, %67
  br label %69

69:                                               ; preds = %60, %53
  %70 = phi i64 [ %68, %60 ], [ %59, %53 ]
  %71 = trunc i64 %70 to i32
  %72 = add i32 %46, %71
  %73 = getelementptr inbounds %class.TField*, %class.TField** %47, i64 1
  %74 = icmp eq %class.TField** %73, %42
  br i1 %74, label %85, label %44

75:                                               ; preds = %44
  %76 = tail call i32 @_ZN4glsl14componentCountERK5TTypei(%class.TType* dereferenceable(64) %50, i32 %45) #22
  %77 = add nsw i32 %76, %46
  ret i32 %77

78:                                               ; preds = %26
  %79 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %80 = load i8, i8* %79, align 4
  %81 = icmp ugt i8 %80, 1
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = zext i8 %80 to i32
  %84 = mul nsw i32 %83, %1
  br label %85

85:                                               ; preds = %69, %36, %78, %2, %82
  %86 = phi i32 [ %84, %82 ], [ 0, %2 ], [ 0, %78 ], [ 0, %36 ], [ 0, %69 ]
  ret i32 %86
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK5TType20elementRegisterCountEv(%class.TType*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 11
  %3 = load %class.TStructure*, %class.TStructure** %2, align 8
  %4 = icmp eq %class.TStructure* %3, null
  %5 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 38
  br i1 %4, label %8, label %9

8:                                                ; preds = %1
  br i1 %7, label %11, label %42

9:                                                ; preds = %1
  %10 = bitcast %class.TStructure** %2 to %class.TFieldListCollection**
  br i1 %7, label %11, label %14

11:                                               ; preds = %8, %9
  %12 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 9
  %13 = bitcast %class.TInterfaceBlock** %12 to %class.TFieldListCollection**
  br label %14

14:                                               ; preds = %9, %11
  %15 = phi %class.TFieldListCollection** [ %13, %11 ], [ %10, %9 ]
  %16 = load %class.TFieldListCollection*, %class.TFieldListCollection** %15, align 8
  %17 = getelementptr inbounds %class.TFieldListCollection, %class.TFieldListCollection* %16, i64 0, i32 2
  %18 = load %class.TVector*, %class.TVector** %17, align 8
  %19 = getelementptr inbounds %class.TVector, %class.TVector* %18, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %class.TField*** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %class.TVector* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %21, %23
  br i1 %24, label %50, label %25

25:                                               ; preds = %14, %25
  %26 = phi i64 [ %38, %25 ], [ %23, %14 ]
  %27 = phi i64 [ %36, %25 ], [ 0, %14 ]
  %28 = phi i32 [ %35, %25 ], [ 0, %14 ]
  %29 = inttoptr i64 %26 to %class.TField**
  %30 = getelementptr inbounds %class.TField*, %class.TField** %29, i64 %27
  %31 = load %class.TField*, %class.TField** %30, align 8
  %32 = getelementptr inbounds %class.TField, %class.TField* %31, i64 0, i32 0
  %33 = load %class.TType*, %class.TType** %32, align 8
  %34 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %33) #22
  %35 = add nsw i32 %34, %28
  %36 = add nuw i64 %27, 1
  %37 = load i64, i64* %20, align 8
  %38 = load i64, i64* %22, align 8
  %39 = sub i64 %37, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %36, %40
  br i1 %41, label %25, label %50

42:                                               ; preds = %8
  %43 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 4
  %44 = load i8, i8* %43, align 4
  %45 = icmp ugt i8 %44, 1
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 3
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  br label %50

50:                                               ; preds = %25, %14, %42, %46
  %51 = phi i32 [ %49, %46 ], [ 1, %42 ], [ 0, %14 ], [ %35, %25 ]
  ret i32 %51
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK5TType18totalRegisterCountEv(%class.TType*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = tail call i32 @_ZNK5TType20elementRegisterCountEv(%class.TType* %0) #22
  %9 = mul nsw i32 %8, %7
  br label %12

10:                                               ; preds = %1
  %11 = tail call i32 @_ZNK5TType20elementRegisterCountEv(%class.TType* %0) #22
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i32 [ %9, %5 ], [ %11, %10 ]
  ret i32 %13
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl12registerSizeERK5TTypei(%class.TType* dereferenceable(64), i32) local_unnamed_addr #0 {
  br label %3

3:                                                ; preds = %26, %2
  %4 = phi %class.TType* [ %0, %2 ], [ %27, %26 ]
  %5 = phi i32 [ %1, %2 ], [ %28, %26 ]
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 5
  %9 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 11
  %10 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 0
  %11 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 4
  br label %45

12:                                               ; preds = %52, %93, %3
  %13 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 11
  %14 = load %class.TStructure*, %class.TStructure** %13, align 8
  %15 = icmp eq %class.TStructure* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.TStructure, %class.TStructure* %14, i64 0, i32 0, i32 2
  br label %18

18:                                               ; preds = %33, %16
  %19 = phi %class.TVector** [ %17, %16 ], [ %36, %33 ]
  %20 = load %class.TVector*, %class.TVector** %19, align 8
  %21 = getelementptr inbounds %class.TVector, %class.TVector* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %class.TField**, %class.TField*** %21, align 8
  %23 = load %class.TField*, %class.TField** %22, align 8
  %24 = getelementptr inbounds %class.TField, %class.TField* %23, i64 0, i32 0
  %25 = load %class.TType*, %class.TType** %24, align 8
  br label %26

26:                                               ; preds = %79, %18
  %27 = phi %class.TType* [ %25, %18 ], [ %84, %79 ]
  %28 = phi i32 [ 0, %18 ], [ %80, %79 ]
  br label %3

29:                                               ; preds = %12
  %30 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 0
  %31 = load i8, i8* %30, align 8
  %32 = icmp eq i8 %31, 38
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 9
  %35 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %34, align 8
  %36 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %35, i64 0, i32 0, i32 2
  br label %18

37:                                               ; preds = %29
  %38 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 4
  %39 = load i8, i8* %38, align 4
  %40 = icmp ugt i8 %39, 1
  %41 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 3
  %42 = load i8, i8* %41, align 1
  %43 = select i1 %40, i8 %39, i8 %42
  %44 = zext i8 %43 to i32
  br label %96

45:                                               ; preds = %7, %52
  %46 = phi i32 [ %5, %7 ], [ %57, %52 ]
  %47 = load i8, i8* %8, align 1, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  %50 = tail call i32 @_ZNK5TType20elementRegisterCountEv(%class.TType* %4) #22
  %51 = icmp sgt i32 %50, %46
  br i1 %51, label %59, label %52

52:                                               ; preds = %49
  %53 = tail call i32 @_ZNK5TType20elementRegisterCountEv(%class.TType* %4) #22
  %54 = sdiv i32 %46, %53
  %55 = tail call i32 @_ZNK5TType20elementRegisterCountEv(%class.TType* %4) #22
  %56 = mul nsw i32 %55, %54
  %57 = sub nsw i32 %46, %56
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %12, label %45

59:                                               ; preds = %45, %49
  %60 = load %class.TStructure*, %class.TStructure** %9, align 8
  %61 = icmp eq %class.TStructure* %60, null
  br i1 %61, label %62, label %65

62:                                               ; preds = %59
  %63 = load i8, i8* %10, align 8
  %64 = icmp eq i8 %63, 38
  br i1 %64, label %67, label %93

65:                                               ; preds = %59
  %66 = getelementptr inbounds %class.TStructure, %class.TStructure* %60, i64 0, i32 0, i32 2
  br label %71

67:                                               ; preds = %62
  %68 = getelementptr inbounds %class.TType, %class.TType* %4, i64 0, i32 9
  %69 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %68, align 8
  %70 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %69, i64 0, i32 0, i32 2
  br label %71

71:                                               ; preds = %67, %65
  %72 = phi %class.TVector** [ %66, %65 ], [ %70, %67 ]
  %73 = load %class.TVector*, %class.TVector** %72, align 8
  %74 = getelementptr inbounds %class.TVector, %class.TVector* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %class.TField**, %class.TField*** %74, align 8
  %76 = getelementptr inbounds %class.TVector, %class.TVector* %73, i64 0, i32 0, i32 0, i32 1
  %77 = load %class.TField**, %class.TField*** %76, align 8
  %78 = icmp eq %class.TField** %75, %77
  br i1 %78, label %96, label %79

79:                                               ; preds = %71, %87
  %80 = phi i32 [ %89, %87 ], [ %46, %71 ]
  %81 = phi %class.TField** [ %91, %87 ], [ %75, %71 ]
  %82 = load %class.TField*, %class.TField** %81, align 8
  %83 = getelementptr inbounds %class.TField, %class.TField* %82, i64 0, i32 0
  %84 = load %class.TType*, %class.TType** %83, align 8
  %85 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %84) #22
  %86 = icmp sgt i32 %85, %80
  br i1 %86, label %26, label %87

87:                                               ; preds = %79
  %88 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %84) #22
  %89 = sub nsw i32 %80, %88
  %90 = tail call i64 @_ZNK5TType14getElementSizeEv(%class.TType* %84) #21
  %91 = getelementptr inbounds %class.TField*, %class.TField** %81, i64 1
  %92 = icmp eq %class.TField** %91, %77
  br i1 %92, label %96, label %79

93:                                               ; preds = %62
  %94 = load i8, i8* %11, align 4
  %95 = icmp ugt i8 %94, 1
  br i1 %95, label %12, label %96

96:                                               ; preds = %71, %93, %87, %37
  %97 = phi i32 [ %44, %37 ], [ 0, %87 ], [ 0, %93 ], [ 0, %71 ]
  ret i32 %97
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM10getBlockIdEP12TIntermTyped(%"class.glsl::OutputASM"*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.TIntermTyped* %1, null
  br i1 %3, label %62, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 9
  %6 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %5, align 8
  %7 = icmp eq %class.TInterfaceBlock* %6, null
  br i1 %7, label %62, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 2
  %10 = load i8, i8* %9, align 2
  %11 = icmp eq i8 %10, 8
  br i1 %11, label %12, label %62

12:                                               ; preds = %8
  %13 = tail call i32 @_ZN4glsl9OutputASM15uniformRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* nonnull %1) #22
  %14 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %6, i64 0, i32 0, i32 1
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  br label %25

23:                                               ; preds = %12
  %24 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi i8* [ %22, %20 ], [ %24, %23 ]
  %27 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 1
  %28 = load %"class.glsl::Shader"*, %"class.glsl::Shader"** %27, align 8
  %29 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %28, i64 0, i32 5, i32 0, i32 0
  %30 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %29, align 8
  %31 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %28, i64 0, i32 5, i32 0, i32 1
  %32 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %31, align 8
  %33 = icmp eq %"struct.glsl::UniformBlock"* %30, %32
  br i1 %33, label %62, label %34

34:                                               ; preds = %25, %53
  %35 = phi %"class.glsl::Shader"* [ %54, %53 ], [ %28, %25 ]
  %36 = phi %"struct.glsl::UniformBlock"* [ %55, %53 ], [ %30, %25 ]
  %37 = tail call i64 @strlen(i8* %26) #21
  %38 = bitcast %"struct.glsl::UniformBlock"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %40 to i64
  %45 = select i1 %41, i64 %43, i64 %44
  %46 = icmp eq i64 %37, %45
  br i1 %46, label %47, label %53

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %36, i64 0, i32 0
  %49 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string.4"* %48, i64 0, i64 -1, i8* %26, i64 %37) #21
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %47
  %52 = load %"class.glsl::Shader"*, %"class.glsl::Shader"** %27, align 8
  br label %53

53:                                               ; preds = %51, %34
  %54 = phi %"class.glsl::Shader"* [ %52, %51 ], [ %35, %34 ]
  %55 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %36, i64 1
  %56 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %54, i64 0, i32 5, i32 0, i32 1
  %57 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %56, align 8
  %58 = icmp eq %"struct.glsl::UniformBlock"* %55, %57
  br i1 %58, label %62, label %34

59:                                               ; preds = %47
  %60 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %36, i64 0, i32 7
  %61 = load i32, i32* %60, align 4
  br label %62

62:                                               ; preds = %53, %25, %8, %4, %59, %2
  %63 = phi i32 [ %61, %59 ], [ -1, %2 ], [ -1, %4 ], [ -1, %8 ], [ -1, %25 ], [ -1, %53 ]
  ret i32 %63
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM15getArgumentInfoEP12TIntermTypedi(%"struct.glsl::OutputASM::ArgumentInfo"* noalias sret, %"class.glsl::OutputASM"*, %class.TIntermTyped*, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1
  %6 = tail call i32 @_ZN4glsl9OutputASM10getBlockIdEP12TIntermTyped(%"class.glsl::OutputASM"* %1, %class.TIntermTyped* %2) #22
  %7 = bitcast %"struct.glsl::OutputASM::ArgumentInfo"* %0 to i8*
  %8 = bitcast %"struct.glsl::OutputASM::ArgumentInfo"* %0 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 4294967295>, <2 x i64>* %8, align 8
  %9 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %0, i64 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %class.TType, %class.TType* %5, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 64, i1 false) #20
  %11 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %0, i64 0, i32 1
  store i32 -1, i32* %11, align 8
  %12 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %0, i64 0, i32 2
  store i32 -1, i32* %12, align 4
  %13 = icmp eq i32 %6, -1
  br i1 %13, label %97, label %14

14:                                               ; preds = %4
  store i32 0, i32* %12, align 4
  %15 = icmp sgt i32 %6, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %1, i64 0, i32 1
  %18 = zext i32 %6 to i64
  %19 = load %"class.glsl::Shader"*, %"class.glsl::Shader"** %17, align 8
  %20 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %19, i64 0, i32 5, i32 0, i32 0
  br label %29

21:                                               ; preds = %29, %14
  %22 = sext i32 %6 to i64
  %23 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %1, i64 0, i32 11, i32 0, i32 0
  %24 = load %"class.std::__1::map"*, %"class.std::__1::map"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %24, i64 %22, i32 0, i32 1, i32 0, i32 0
  %26 = ptrtoint %"class.std::__1::__tree_end_node"* %25 to i64
  store i32 %3, i32* %11, align 8
  %27 = load i8, i8* %10, align 8
  %28 = icmp eq i8 %27, 38
  br i1 %28, label %40, label %48

29:                                               ; preds = %29, %16
  %30 = phi i32 [ 0, %16 ], [ %37, %29 ]
  %31 = phi i64 [ 0, %16 ], [ %38, %29 ]
  %32 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %20, align 8
  %33 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %32, i64 %31, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, 1
  %36 = select i1 %35, i32 %34, i32 1
  %37 = add nuw nsw i32 %36, %30
  store i32 %37, i32* %12, align 4
  %38 = add nuw nsw i64 %31, 1
  %39 = icmp eq i64 %38, %18
  br i1 %39, label %21, label %29

40:                                               ; preds = %21
  %41 = tail call i32 @_ZNK5TType20elementRegisterCountEv(%class.TType* %5) #22
  %42 = load i32, i32* %11, align 8
  %43 = sdiv i32 %42, %41
  %44 = load i32, i32* %12, align 4
  %45 = add nsw i32 %44, %43
  store i32 %45, i32* %12, align 4
  %46 = mul nsw i32 %43, %41
  %47 = sub nsw i32 %42, %46
  store i32 %47, i32* %11, align 8
  br label %48

48:                                               ; preds = %40, %21
  %49 = phi i32 [ %47, %40 ], [ %3, %21 ]
  %50 = tail call i32 @_ZN4glsl9OutputASM13registerIndexEP12TIntermTyped(%"class.glsl::OutputASM"* %1, %class.TIntermTyped* %2) #22
  %51 = icmp slt i32 %49, 0
  br i1 %51, label %86, label %52

52:                                               ; preds = %48
  %53 = add i32 %49, %50
  %54 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node.200"**
  %55 = load %"class.std::__1::__tree_node.200"*, %"class.std::__1::__tree_node.200"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node.200"* %55, null
  br label %57

57:                                               ; preds = %83, %52
  %58 = phi i32 [ %53, %52 ], [ %84, %83 ]
  br i1 %56, label %83, label %59

59:                                               ; preds = %57, %59
  %60 = phi %"class.std::__1::__tree_end_node"* [ %70, %59 ], [ %25, %57 ]
  %61 = phi %"class.std::__1::__tree_node.200"* [ %71, %59 ], [ %55, %57 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.200", %"class.std::__1::__tree_node.200"* %61, i64 0, i32 1, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp slt i32 %63, %58
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.200", %"class.std::__1::__tree_node.200"* %61, i64 0, i32 0, i32 1
  %66 = bitcast %"class.std::__1::__tree_node_base"** %65 to %"class.std::__1::__tree_node.200"**
  %67 = getelementptr inbounds %"class.std::__1::__tree_node.200", %"class.std::__1::__tree_node.200"* %61, i64 0, i32 0, i32 0
  %68 = bitcast %"class.std::__1::__tree_node.200"* %61 to %"class.std::__1::__tree_node.200"**
  %69 = select i1 %64, %"class.std::__1::__tree_node.200"** %66, %"class.std::__1::__tree_node.200"** %68
  %70 = select i1 %64, %"class.std::__1::__tree_end_node"* %60, %"class.std::__1::__tree_end_node"* %67
  %71 = load %"class.std::__1::__tree_node.200"*, %"class.std::__1::__tree_node.200"** %69, align 8
  %72 = icmp eq %"class.std::__1::__tree_node.200"* %71, null
  br i1 %72, label %73, label %59

73:                                               ; preds = %59
  %74 = icmp eq %"class.std::__1::__tree_end_node"* %70, %25
  br i1 %74, label %83, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 4
  %77 = bitcast %"class.std::__1::__tree_end_node"* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = icmp slt i32 %58, %78
  br i1 %79, label %83, label %80

80:                                               ; preds = %75
  %81 = ptrtoint %"class.std::__1::__tree_end_node"* %70 to i64
  %82 = sub i32 %53, %58
  store i32 %82, i32* %11, align 8
  br label %86

83:                                               ; preds = %75, %73, %57
  %84 = add nsw i32 %58, -1
  %85 = icmp slt i32 %50, %58
  br i1 %85, label %57, label %86

86:                                               ; preds = %83, %48, %80
  %87 = phi i64 [ %81, %80 ], [ %26, %48 ], [ %26, %83 ]
  %88 = inttoptr i64 %87 to %"class.std::__1::__tree_node.200"*
  %89 = getelementptr inbounds %"class.std::__1::__tree_node.200", %"class.std::__1::__tree_node.200"* %88, i64 0, i32 1, i32 0, i32 1
  %90 = bitcast %"struct.glsl::OutputASM::TypedMemberInfo"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %90, i64 80, i1 false)
  %91 = getelementptr inbounds %"struct.glsl::OutputASM::ArgumentInfo", %"struct.glsl::OutputASM::ArgumentInfo"* %0, i64 0, i32 0, i32 1
  %92 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %91) #22
  %93 = load i32, i32* %11, align 8
  %94 = icmp slt i32 %93, %92
  %95 = add nsw i32 %92, -1
  %96 = select i1 %94, i32 %93, i32 %95
  br label %103

97:                                               ; preds = %4
  %98 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %5) #21
  %99 = icmp sgt i32 %98, %3
  br i1 %99, label %103, label %100

100:                                              ; preds = %97
  %101 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %5) #21
  %102 = add nsw i32 %101, -1
  br label %103

103:                                              ; preds = %100, %97, %86
  %104 = phi i32 [ %96, %86 ], [ %102, %100 ], [ %3, %97 ]
  store i32 %104, i32* %11, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM13registerIndexEP12TIntermTyped(%"class.glsl::OutputASM"*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.TIntermTyped* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = add i8 %6, -15
  %8 = icmp ult i8 %7, 17
  br i1 %8, label %9, label %14

9:                                                ; preds = %4
  %10 = tail call i32 @_ZN4glsl9OutputASM15samplerRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* nonnull %1) #21
  %11 = icmp sgt i32 %10, -1
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = tail call i32 @_ZN4glsl9OutputASM15samplerRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* nonnull %1) #22
  br label %128

14:                                               ; preds = %2, %4, %9
  %15 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1
  %16 = tail call i32 @_ZNK5TType25totalSamplerRegisterCountEv(%class.TType* %15) #22
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = tail call i32 @_ZN4glsl9OutputASM15samplerRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 2
  %22 = load i8, i8* %21, align 2
  %23 = icmp eq i8 %22, 2
  br i1 %23, label %24, label %54

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0
  %26 = bitcast %class.TIntermTyped* %1 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %27 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %26, align 8
  %28 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %27, i64 2
  %29 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %28, align 8
  %30 = tail call %class.TIntermConstantUnion* %29(%class.TIntermNode* %25) #21
  %31 = icmp eq %class.TIntermConstantUnion* %30, null
  br i1 %31, label %40, label %32

32:                                               ; preds = %24
  %33 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %26, align 8
  %34 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %33, i64 2
  %35 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %34, align 8
  %36 = tail call %class.TIntermConstantUnion* %35(%class.TIntermNode* %25) #21
  %37 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %36, i64 0, i32 1
  %38 = load %class.ConstantUnion*, %class.ConstantUnion** %37, align 8
  %39 = icmp eq %class.ConstantUnion* %38, null
  br i1 %39, label %40, label %52

40:                                               ; preds = %32, %24
  %41 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 5
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 6
  %46 = load i32, i32* %45, align 8
  %47 = icmp sgt i32 %46, 1
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  %49 = tail call i32 @_ZN4glsl9OutputASM15uniformRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

50:                                               ; preds = %40, %44
  %51 = tail call i32 @_ZN4glsl9OutputASM17temporaryRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

52:                                               ; preds = %32
  %53 = load i8, i8* %21, align 2
  br label %54

54:                                               ; preds = %52, %20
  %55 = phi i8 [ %53, %52 ], [ %22, %20 ]
  switch i8 %55, label %128 [
    i8 0, label %56
    i8 1, label %58
    i8 2, label %60
    i8 3, label %62
    i8 4, label %64
    i8 5, label %66
    i8 9, label %68
    i8 10, label %70
    i8 11, label %73
    i8 12, label %75
    i8 6, label %77
    i8 7, label %79
    i8 29, label %81
    i8 30, label %83
    i8 31, label %85
    i8 32, label %87
    i8 33, label %89
    i8 34, label %91
    i8 8, label %93
    i8 15, label %95
    i8 16, label %97
    i8 17, label %99
    i8 18, label %101
    i8 19, label %103
    i8 20, label %105
    i8 21, label %107
    i8 22, label %111
    i8 23, label %115
    i8 24, label %119
    i8 25, label %123
    i8 27, label %125
  ]

56:                                               ; preds = %54
  %57 = tail call i32 @_ZN4glsl9OutputASM17temporaryRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

58:                                               ; preds = %54
  %59 = tail call i32 @_ZN4glsl9OutputASM17temporaryRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

60:                                               ; preds = %54
  %61 = tail call i32 @_ZN4glsl9OutputASM17temporaryRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

62:                                               ; preds = %54
  %63 = tail call i32 @_ZN4glsl9OutputASM17attributeRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

64:                                               ; preds = %54
  %65 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

66:                                               ; preds = %54
  %67 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

68:                                               ; preds = %54
  %69 = tail call i32 @_ZN4glsl9OutputASM17attributeRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

70:                                               ; preds = %54
  %71 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 10
  %72 = tail call i32 @_ZN4glsl9OutputASM8allocateERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_b(%"class.glsl::OutputASM"* %0, %"class.std::__1::vector.90"* dereferenceable(24) %71, %class.TIntermTyped* %1, i1 zeroext false) #21
  br label %128

73:                                               ; preds = %54
  %74 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

75:                                               ; preds = %54
  %76 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

77:                                               ; preds = %54
  %78 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

79:                                               ; preds = %54
  %80 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

81:                                               ; preds = %54
  %82 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

83:                                               ; preds = %54
  %84 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

85:                                               ; preds = %54
  %86 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

87:                                               ; preds = %54
  %88 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

89:                                               ; preds = %54
  %90 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

91:                                               ; preds = %54
  %92 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

93:                                               ; preds = %54
  %94 = tail call i32 @_ZN4glsl9OutputASM15uniformRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

95:                                               ; preds = %54
  %96 = tail call i32 @_ZN4glsl9OutputASM17temporaryRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

97:                                               ; preds = %54
  %98 = tail call i32 @_ZN4glsl9OutputASM17temporaryRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

99:                                               ; preds = %54
  %100 = tail call i32 @_ZN4glsl9OutputASM17temporaryRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

101:                                              ; preds = %54
  %102 = tail call i32 @_ZN4glsl9OutputASM17temporaryRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

103:                                              ; preds = %54
  %104 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

105:                                              ; preds = %54
  %106 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

107:                                              ; preds = %54
  %108 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 4
  %109 = load %"class.sw::VertexShader"*, %"class.sw::VertexShader"** %108, align 8
  %110 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %109, i64 0, i32 7
  store i8 1, i8* %110, align 8
  br label %128

111:                                              ; preds = %54
  %112 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 4
  %113 = load %"class.sw::VertexShader"*, %"class.sw::VertexShader"** %112, align 8
  %114 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %113, i64 0, i32 8
  store i8 1, i8* %114, align 1
  br label %128

115:                                              ; preds = %54
  %116 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 3
  %117 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %116, align 8
  %118 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %117, i64 0, i32 2
  store i8 1, i8* %118, align 1
  br label %128

119:                                              ; preds = %54
  %120 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 3
  %121 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %120, align 8
  %122 = getelementptr inbounds %"class.sw::PixelShader", %"class.sw::PixelShader"* %121, i64 0, i32 3
  store i8 1, i8* %122, align 2
  br label %128

123:                                              ; preds = %54
  %124 = tail call i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %1) #22
  br label %128

125:                                              ; preds = %54
  %126 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 10
  %127 = tail call i32 @_ZN4glsl9OutputASM8allocateERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_b(%"class.glsl::OutputASM"* %0, %"class.std::__1::vector.90"* dereferenceable(24) %126, %class.TIntermTyped* %1, i1 zeroext false) #21
  br label %128

128:                                              ; preds = %48, %50, %56, %58, %60, %62, %64, %66, %68, %70, %73, %75, %77, %79, %81, %83, %85, %87, %89, %91, %93, %95, %97, %99, %101, %103, %105, %107, %111, %115, %119, %123, %125, %54, %12
  %129 = phi i32 [ %13, %12 ], [ %127, %125 ], [ %124, %123 ], [ 1, %119 ], [ 0, %115 ], [ 3, %111 ], [ 2, %107 ], [ %106, %105 ], [ %104, %103 ], [ %102, %101 ], [ %100, %99 ], [ %98, %97 ], [ %96, %95 ], [ %94, %93 ], [ %92, %91 ], [ %90, %89 ], [ %88, %87 ], [ %86, %85 ], [ %84, %83 ], [ %82, %81 ], [ %80, %79 ], [ %78, %77 ], [ %76, %75 ], [ %74, %73 ], [ %72, %70 ], [ %69, %68 ], [ %67, %66 ], [ %65, %64 ], [ %63, %62 ], [ %61, %60 ], [ %59, %58 ], [ %57, %56 ], [ %49, %48 ], [ %51, %50 ], [ 0, %54 ]
  ret i32 %129
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM12registerTypeEP12TIntermTyped(%"class.glsl::OutputASM"*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.TIntermTyped* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = add i8 %6, -15
  %8 = icmp ult i8 %7, 17
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = tail call i32 @_ZN4glsl9OutputASM15samplerRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* nonnull %1) #21
  %11 = icmp sgt i32 %10, -1
  br i1 %11, label %83, label %12

12:                                               ; preds = %2, %4, %9
  %13 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 2
  %14 = load i8, i8* %13, align 2
  switch i8 %14, label %82 [
    i8 27, label %15
    i8 26, label %20
    i8 2, label %33
    i8 0, label %83
    i8 1, label %83
    i8 3, label %58
    i8 4, label %59
    i8 5, label %60
    i8 9, label %61
    i8 10, label %62
    i8 11, label %63
    i8 12, label %64
    i8 6, label %65
    i8 7, label %66
    i8 29, label %67
    i8 30, label %68
    i8 31, label %69
    i8 32, label %70
    i8 33, label %71
    i8 34, label %72
    i8 8, label %73
    i8 15, label %83
    i8 16, label %83
    i8 17, label %83
    i8 18, label %83
    i8 19, label %74
    i8 20, label %75
    i8 21, label %76
    i8 22, label %77
    i8 23, label %78
    i8 24, label %79
    i8 25, label %80
    i8 28, label %81
  ]

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 16
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 26
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  store i8 27, i8* %16, align 8
  br label %83

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 16
  %22 = load i8, i8* %21, align 8
  %23 = icmp eq i8 %22, 27
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %26 = load %class.TParseContext*, %class.TParseContext** %25, align 8
  %27 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0, i32 1
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %26, %struct.TSourceLoc* dereferenceable(16) %27, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #21
  store i8 26, i8* %21, align 8
  br label %83

28:                                               ; preds = %20
  store i8 26, i8* %21, align 8
  br label %83

29:                                               ; preds = %15
  %30 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %31 = load %class.TParseContext*, %class.TParseContext** %30, align 8
  %32 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0, i32 1
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %31, %struct.TSourceLoc* dereferenceable(16) %32, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #21
  store i8 27, i8* %16, align 8
  br label %83

33:                                               ; preds = %12
  %34 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0
  %35 = bitcast %class.TIntermTyped* %1 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %36 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %35, align 8
  %37 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %36, i64 2
  %38 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %37, align 8
  %39 = tail call %class.TIntermConstantUnion* %38(%class.TIntermNode* %34) #21
  %40 = icmp eq %class.TIntermConstantUnion* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %33
  %42 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %35, align 8
  %43 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %42, i64 2
  %44 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %43, align 8
  %45 = tail call %class.TIntermConstantUnion* %44(%class.TIntermNode* %34) #21
  %46 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %45, i64 0, i32 1
  %47 = load %class.ConstantUnion*, %class.ConstantUnion** %46, align 8
  %48 = icmp eq %class.ConstantUnion* %47, null
  br i1 %48, label %49, label %83

49:                                               ; preds = %41, %33
  %50 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 5
  %51 = load i8, i8* %50, align 1, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 6
  %55 = load i32, i32* %54, align 8
  %56 = icmp sgt i32 %55, 1
  br i1 %56, label %83, label %57

57:                                               ; preds = %49, %53
  br label %83

58:                                               ; preds = %12
  br label %83

59:                                               ; preds = %12
  br label %83

60:                                               ; preds = %12
  br label %83

61:                                               ; preds = %12
  br label %83

62:                                               ; preds = %12
  br label %83

63:                                               ; preds = %12
  br label %83

64:                                               ; preds = %12
  br label %83

65:                                               ; preds = %12
  br label %83

66:                                               ; preds = %12
  br label %83

67:                                               ; preds = %12
  br label %83

68:                                               ; preds = %12
  br label %83

69:                                               ; preds = %12
  br label %83

70:                                               ; preds = %12
  br label %83

71:                                               ; preds = %12
  br label %83

72:                                               ; preds = %12
  br label %83

73:                                               ; preds = %12
  br label %83

74:                                               ; preds = %12
  br label %83

75:                                               ; preds = %12
  br label %83

76:                                               ; preds = %12
  br label %83

77:                                               ; preds = %12
  br label %83

78:                                               ; preds = %12
  br label %83

79:                                               ; preds = %12
  br label %83

80:                                               ; preds = %12
  br label %83

81:                                               ; preds = %12
  br label %83

82:                                               ; preds = %12
  br label %83

83:                                               ; preds = %19, %29, %28, %24, %41, %12, %12, %12, %12, %12, %12, %57, %58, %59, %60, %61, %62, %63, %64, %65, %66, %67, %68, %69, %70, %71, %72, %73, %74, %75, %76, %77, %78, %79, %80, %81, %82, %53, %9
  %84 = phi i32 [ 10, %9 ], [ 23, %82 ], [ 9, %81 ], [ 1, %80 ], [ 17, %79 ], [ 17, %78 ], [ 17, %77 ], [ 17, %76 ], [ 6, %75 ], [ 6, %74 ], [ 2, %73 ], [ 1, %72 ], [ 1, %71 ], [ 1, %70 ], [ 6, %69 ], [ 6, %68 ], [ 6, %67 ], [ 6, %66 ], [ 1, %65 ], [ 1, %64 ], [ 6, %63 ], [ 8, %62 ], [ 1, %61 ], [ 6, %60 ], [ 1, %59 ], [ 1, %58 ], [ 0, %57 ], [ 2, %53 ], [ 0, %12 ], [ 0, %12 ], [ 0, %12 ], [ 0, %12 ], [ 0, %12 ], [ 0, %12 ], [ 20, %41 ], [ 8, %24 ], [ 8, %28 ], [ 8, %29 ], [ 8, %19 ]
  ret i32 %84
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZN4glsl14swizzleElementEii(i32, i32) local_unnamed_addr #6 {
  %3 = shl nsw i32 %1, 1
  %4 = ashr i32 %0, %3
  %5 = and i32 %4, 3
  ret i32 %5
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZN4glsl14swizzleSwizzleEii(i32, i32) local_unnamed_addr #6 {
  %3 = shl i32 %1, 1
  %4 = and i32 %3, 6
  %5 = ashr i32 %0, %4
  %6 = and i32 %5, 3
  %7 = lshr i32 %1, 1
  %8 = and i32 %7, 6
  %9 = ashr i32 %0, %8
  %10 = shl i32 %9, 2
  %11 = and i32 %10, 12
  %12 = or i32 %11, %6
  %13 = lshr i32 %1, 3
  %14 = and i32 %13, 6
  %15 = ashr i32 %0, %14
  %16 = shl i32 %15, 4
  %17 = and i32 %16, 48
  %18 = or i32 %12, %17
  %19 = lshr i32 %1, 5
  %20 = and i32 %19, 6
  %21 = ashr i32 %0, %20
  %22 = shl i32 %21, 6
  %23 = and i32 %22, 192
  %24 = or i32 %18, %23
  ret i32 %24
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM6lvalueERN2sw6Shader20DestinationParameterEP12TIntermTyped(%"class.glsl::OutputASM"*, %"struct.sw::Shader::DestinationParameter"* nocapture dereferenceable(28), %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.glsl::Temporary", align 8
  %5 = alloca %class.TIntermTyped*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = bitcast %"class.glsl::Temporary"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %8) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 136, i1 false)
  call void @_ZN4glsl9TemporaryC2EPNS_9OutputASME(%"class.glsl::Temporary"* nonnull %4, %"class.glsl::OutputASM"* %0) #22
  %9 = bitcast %class.TIntermTyped** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #20
  store %class.TIntermTyped* null, %class.TIntermTyped** %5, align 8
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #20
  store i32 0, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #20
  store i8 15, i8* %7, align 1
  %11 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = call i32 @_ZN4glsl9OutputASM6lvalueERP12TIntermTypedRjRN2sw6Shader8RelativeERhRNS_9TemporaryES2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped** nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %6, %"struct.sw::Shader::Relative"* dereferenceable(20) %11, i8* nonnull dereferenceable(1) %7, %"class.glsl::Temporary"* nonnull dereferenceable(136) %4, %class.TIntermTyped* %2) #22
  %13 = load %class.TIntermTyped*, %class.TIntermTyped** %5, align 8
  %14 = call i32 @_ZN4glsl9OutputASM12registerTypeEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %13) #22
  %15 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %1, i64 0, i32 0, i32 1
  %16 = trunc i32 %14 to i8
  store i8 %16, i8* %15, align 4
  %17 = call i32 @_ZN4glsl9OutputASM13registerIndexEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %13) #22
  %18 = load i32, i32* %6, align 4
  %19 = add i32 %18, %17
  %20 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 %19, i32* %20, align 4
  %21 = load i8, i8* %7, align 1
  %22 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %1, i64 0, i32 1, i32 0
  store i8 %21, i8* %22, align 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #20
  call void @_ZN4glsl9TemporaryD2Ev(%"class.glsl::Temporary"* nonnull %4) #21
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %8) #20
  ret i32 %12
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM6lvalueERP12TIntermTypedRjRN2sw6Shader8RelativeERhRNS_9TemporaryES2_(%"class.glsl::OutputASM"*, %class.TIntermTyped** nocapture dereferenceable(8), i32* nocapture dereferenceable(4), %"struct.sw::Shader::Relative"* nocapture dereferenceable(20), i8* nocapture dereferenceable(1), %"class.glsl::Temporary"* dereferenceable(136), %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %8 = alloca [26 x i8], align 2
  %9 = alloca [20 x i8], align 4
  %10 = alloca %"struct.sw::Shader::SourceParameter", align 4
  %11 = alloca %"class.glsl::Constant", align 8
  %12 = alloca %"class.glsl::Constant", align 8
  %13 = alloca %"class.glsl::Constant", align 8
  %14 = alloca %"class.glsl::Constant", align 8
  %15 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %6, i64 0, i32 0
  %16 = bitcast %class.TIntermTyped* %6 to %class.TIntermBinary* (%class.TIntermNode*)***
  %17 = load %class.TIntermBinary* (%class.TIntermNode*)**, %class.TIntermBinary* (%class.TIntermNode*)*** %16, align 8
  %18 = getelementptr inbounds %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %17, i64 4
  %19 = load %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %18, align 8
  %20 = tail call %class.TIntermBinary* %19(%class.TIntermNode* %15) #21
  %21 = bitcast %class.TIntermTyped* %6 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %22 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %21, align 8
  %23 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %22, i64 7
  %24 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %23, align 8
  %25 = tail call %class.TIntermSymbol* %24(%class.TIntermNode* %15) #21
  %26 = icmp eq %class.TIntermBinary* %20, null
  br i1 %26, label %469, label %27

27:                                               ; preds = %7
  %28 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %20, i64 0, i32 1
  %29 = load %class.TIntermTyped*, %class.TIntermTyped** %28, align 8
  %30 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %20, i64 0, i32 2
  %31 = load %class.TIntermTyped*, %class.TIntermTyped** %30, align 8
  %32 = tail call i32 @_ZN4glsl9OutputASM6lvalueERP12TIntermTypedRjRN2sw6Shader8RelativeERhRNS_9TemporaryES2_(%"class.glsl::OutputASM"* %0, %class.TIntermTyped** dereferenceable(8) %1, i32* dereferenceable(4) %2, %"struct.sw::Shader::Relative"* dereferenceable(20) %3, i8* dereferenceable(1) %4, %"class.glsl::Temporary"* dereferenceable(136) %5, %class.TIntermTyped* %29) #22
  %33 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %20, i64 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  switch i32 %34, label %467 [
    i32 46, label %35
    i32 47, label %89
    i32 50, label %406
    i32 48, label %352
    i32 49, label %356
  ]

35:                                               ; preds = %27
  %36 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %31, i64 0, i32 0
  %37 = bitcast %class.TIntermTyped* %31 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %38 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %37, align 8
  %39 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %38, i64 2
  %40 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %39, align 8
  %41 = tail call %class.TIntermConstantUnion* %40(%class.TIntermNode* %36) #21
  %42 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %41, i64 0, i32 1
  %43 = load %class.ConstantUnion*, %class.ConstantUnion** %42, align 8
  %44 = icmp eq %class.ConstantUnion* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %43, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %35, %45
  %49 = phi i32 [ %47, %45 ], [ 0, %35 ]
  %50 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1, i32 4
  %51 = load i8, i8* %50, align 4
  %52 = icmp ugt i8 %51, 1
  br i1 %52, label %83, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1, i32 11
  %55 = load %class.TStructure*, %class.TStructure** %54, align 8
  %56 = icmp eq %class.TStructure* %55, null
  br i1 %56, label %57, label %78

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1, i32 5
  %59 = load i8, i8* %58, align 1, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %78

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 8
  %64 = icmp eq i8 %63, 38
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = load i8, i8* %4, align 1
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i8 [ 1, %65 ], [ %71, %67 ]
  %69 = and i8 %68, %66
  %70 = icmp eq i8 %69, 0
  %71 = shl i8 %68, 1
  br i1 %70, label %67, label %72

72:                                               ; preds = %67
  %73 = shl nsw i32 %49, 1
  %74 = ashr i32 %32, %73
  %75 = and i32 %74, 3
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  store i8 %77, i8* %4, align 1
  br label %467

78:                                               ; preds = %61, %53, %57
  %79 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1, i32 5
  %80 = load i8, i8* %79, align 1, !range !2
  %81 = icmp ne i8 %80, 0
  %82 = or i1 %52, %81
  br i1 %82, label %83, label %467

83:                                               ; preds = %48, %78
  %84 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %6, i64 0, i32 1
  %85 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %84) #21
  %86 = mul nsw i32 %85, %49
  %87 = load i32, i32* %2, align 4
  %88 = add i32 %87, %86
  store i32 %88, i32* %2, align 4
  br label %467

89:                                               ; preds = %27
  %90 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %31, i64 0, i32 0
  %91 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %92 = bitcast %class.TIntermTyped* %31 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %93 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %92, align 8
  %94 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %93, align 8
  tail call void %94(%class.TIntermNode* %90, %class.TIntermTraverser* %91) #21
  %95 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1, i32 4
  %96 = load i8, i8* %95, align 4
  %97 = icmp ugt i8 %96, 1
  br i1 %97, label %115, label %98

98:                                               ; preds = %89
  %99 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1, i32 11
  %100 = load %class.TStructure*, %class.TStructure** %99, align 8
  %101 = icmp eq %class.TStructure* %100, null
  br i1 %101, label %102, label %110

102:                                              ; preds = %98
  %103 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1, i32 5
  %104 = load i8, i8* %103, align 1, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %102
  %107 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 8
  %109 = icmp eq i8 %108, 38
  br i1 %109, label %110, label %467

110:                                              ; preds = %106, %98, %102
  %111 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1, i32 5
  %112 = load i8, i8* %111, align 1, !range !2
  %113 = icmp ne i8 %112, 0
  %114 = or i1 %97, %113
  br i1 %114, label %115, label %467

115:                                              ; preds = %89, %110
  %116 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %6, i64 0, i32 1
  %117 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %116) #21
  %118 = getelementptr inbounds %"struct.sw::Shader::Relative", %"struct.sw::Shader::Relative"* %3, i64 0, i32 0
  %119 = load i8, i8* %118, align 4
  %120 = icmp eq i8 %119, 23
  br i1 %120, label %121, label %182

121:                                              ; preds = %115
  %122 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1
  %123 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %122) #21
  %124 = icmp sgt i32 %123, 1
  br i1 %124, label %125, label %467

125:                                              ; preds = %121
  %126 = bitcast %"struct.sw::Shader::SourceParameter"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %126) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %126, i8 -86, i64 24, i1 false)
  %127 = getelementptr inbounds %"struct.sw::Shader::SourceParameter", %"struct.sw::Shader::SourceParameter"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %127, align 4
  %128 = getelementptr inbounds %"struct.sw::Shader::SourceParameter", %"struct.sw::Shader::SourceParameter"* %10, i64 0, i32 0, i32 1
  store i8 23, i8* %128, align 4
  %129 = getelementptr inbounds %"struct.sw::Shader::SourceParameter", %"struct.sw::Shader::SourceParameter"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i8 23, i8* %129, align 4
  %130 = getelementptr inbounds %"struct.sw::Shader::SourceParameter", %"struct.sw::Shader::SourceParameter"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  store i32 0, i32* %130, align 4
  %131 = getelementptr inbounds %"struct.sw::Shader::SourceParameter", %"struct.sw::Shader::SourceParameter"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2
  store i8 0, i8* %131, align 4
  %132 = getelementptr inbounds %"struct.sw::Shader::SourceParameter", %"struct.sw::Shader::SourceParameter"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 3
  store i32 1, i32* %132, align 4
  %133 = getelementptr inbounds %"struct.sw::Shader::SourceParameter", %"struct.sw::Shader::SourceParameter"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 4
  store i8 1, i8* %133, align 4
  %134 = getelementptr inbounds %"struct.sw::Shader::SourceParameter", %"struct.sw::Shader::SourceParameter"* %10, i64 0, i32 1
  %135 = bitcast [3 x i8]* %134 to i24*
  store i24 -65308, i24* %135, align 1
  call void @_ZN4glsl9OutputASM6sourceERN2sw6Shader15SourceParameterEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %"struct.sw::Shader::SourceParameter"* nonnull dereferenceable(28) %10, %class.TIntermNode* %90, i32 0) #22
  %136 = bitcast %class.TIntermTyped* %31 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %137 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %136, align 8
  %138 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %137, i64 7
  %139 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %138, align 8
  %140 = tail call %class.TIntermSymbol* %139(%class.TIntermNode* %90) #21
  %141 = icmp eq %class.TIntermSymbol* %140, null
  br i1 %141, label %149, label %142

142:                                              ; preds = %125
  %143 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %136, align 8
  %144 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %143, i64 7
  %145 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %144, align 8
  %146 = tail call %class.TIntermSymbol* %145(%class.TIntermNode* %90) #21
  %147 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %146, i64 0, i32 1
  %148 = load i32, i32* %147, align 8
  br label %149

149:                                              ; preds = %125, %142
  %150 = phi i32 [ %148, %142 ], [ 0, %125 ]
  %151 = load i32, i32* %127, align 4
  %152 = getelementptr inbounds %"struct.sw::Shader::Relative", %"struct.sw::Shader::Relative"* %3, i64 0, i32 1
  store i32 %151, i32* %152, align 4
  %153 = load i8, i8* %128, align 4
  store i8 %153, i8* %118, align 4
  %154 = getelementptr inbounds %"struct.sw::Shader::Relative", %"struct.sw::Shader::Relative"* %3, i64 0, i32 3
  store i32 %117, i32* %154, align 4
  %155 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %31, i64 0, i32 1, i32 2
  %156 = load i8, i8* %155, align 2
  %157 = icmp eq i8 %156, 8
  br i1 %157, label %179, label %158

158:                                              ; preds = %149
  %159 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %160 = bitcast %"class.std::__1::__tree_end_node"* %159 to %"class.std::__1::__tree_node"**
  %161 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %160, align 8
  %162 = icmp eq %"class.std::__1::__tree_node"* %161, null
  br i1 %162, label %179, label %163

163:                                              ; preds = %158, %175
  %164 = phi %"class.std::__1::__tree_node"* [ %177, %175 ], [ %161, %158 ]
  %165 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %164, i64 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = icmp slt i32 %150, %166
  br i1 %167, label %168, label %170

168:                                              ; preds = %163
  %169 = bitcast %"class.std::__1::__tree_node"* %164 to %"class.std::__1::__tree_node"**
  br label %175

170:                                              ; preds = %163
  %171 = icmp slt i32 %166, %150
  br i1 %171, label %172, label %179

172:                                              ; preds = %170
  %173 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %164, i64 0, i32 0, i32 1
  %174 = bitcast %"class.std::__1::__tree_node_base"** %173 to %"class.std::__1::__tree_node"**
  br label %175

175:                                              ; preds = %172, %168
  %176 = phi %"class.std::__1::__tree_node"** [ %169, %168 ], [ %174, %172 ]
  %177 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %176, align 8
  %178 = icmp eq %"class.std::__1::__tree_node"* %177, null
  br i1 %178, label %179, label %163

179:                                              ; preds = %175, %170, %158, %149
  %180 = phi i8 [ 0, %149 ], [ 1, %158 ], [ 1, %175 ], [ 0, %170 ]
  %181 = getelementptr inbounds %"struct.sw::Shader::Relative", %"struct.sw::Shader::Relative"* %3, i64 0, i32 4
  store i8 %180, i8* %181, align 4
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %126) #20
  br label %467

182:                                              ; preds = %115
  %183 = getelementptr inbounds %"struct.sw::Shader::Relative", %"struct.sw::Shader::Relative"* %3, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %5, i64 0, i32 0, i32 0
  %186 = tail call i32 @_ZN4glsl9OutputASM13registerIndexEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %185) #22
  %187 = icmp eq i32 %184, %186
  %188 = icmp eq i32 %117, 1
  br i1 %187, label %311, label %189

189:                                              ; preds = %182
  br i1 %188, label %190, label %233

190:                                              ; preds = %189
  %191 = bitcast %"class.glsl::Constant"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %191) #20
  %192 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 1
  %193 = bitcast [4 x %class.ConstantUnion]* %192 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %193, i8 -86, i64 32, i1 false)
  %194 = getelementptr inbounds %"struct.sw::Shader::Relative", %"struct.sw::Shader::Relative"* %3, i64 0, i32 3
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %197 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 1, i64 0
  %198 = getelementptr inbounds [26 x i8], [26 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %198)
  %199 = getelementptr inbounds [20 x i8], [20 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %199)
  %200 = getelementptr inbounds [26 x i8], [26 x i8]* %8, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %200, i8 0, i64 24, i1 false)
  %201 = getelementptr inbounds [20 x i8], [20 x i8]* %9, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %201, i8 0, i64 16, i1 false)
  %202 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %203 = bitcast i32* %202 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %203, i8 0, i64 16, i1 false) #20
  %204 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8 2, i8* %204, align 8
  %205 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 0, i32 0, i32 1, i32 1
  store i8 3, i8* %205, align 1
  %206 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 0, i32 0, i32 1, i32 2
  %207 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 0, i32 0, i32 1, i32 3
  store i8 1, i8* %207, align 1
  %208 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 0, i32 0, i32 1, i32 4
  store i8 1, i8* %208, align 4
  %209 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 0, i32 0, i32 1, i32 5
  store i8 0, i8* %209, align 1
  %210 = getelementptr inbounds i8, i8* %191, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %210, i8* nonnull align 2 %198, i64 26, i1 false) #20
  %211 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 0, i32 0, i32 1, i32 10
  %212 = bitcast %struct.TLayoutQualifier* %211 to i64*
  store i64 4294967295, i64* %212, align 8
  %213 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 0, i32 0, i32 1, i32 10, i32 2
  store i32 0, i32* %213, align 8
  %214 = getelementptr inbounds i8, i8* %191, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %214, i8* nonnull align 4 %199, i64 20, i1 false) #20
  %215 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 0, i32 1
  store %class.ConstantUnion* %197, %class.ConstantUnion** %215, align 8
  store i8 2, i8* %206, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %198)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %199)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN4glsl8ConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %196, align 8
  %216 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 1, i64 4
  br label %217

217:                                              ; preds = %217, %190
  %218 = phi %class.ConstantUnion* [ %197, %190 ], [ %221, %217 ]
  %219 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %218, i64 0, i32 0, i32 0
  store i32 0, i32* %219, align 4
  %220 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %218, i64 0, i32 1
  store i8 0, i8* %220, align 4
  %221 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %218, i64 1
  %222 = icmp eq %class.ConstantUnion* %221, %216
  br i1 %222, label %223, label %217

223:                                              ; preds = %217
  %224 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %197, i64 0, i32 0, i32 0
  store i32 %195, i32* %224, align 8
  %225 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 1, i64 0, i32 1
  store i8 2, i8* %225, align 4
  %226 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %5, i64 0, i32 0, i32 0, i32 0
  %227 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %11, i64 0, i32 0, i32 0, i32 0
  %228 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435573, %class.TIntermTyped* %185, i32 0, %class.TIntermNode* %226, i32 0, %class.TIntermNode* nonnull %227, i32 0, %class.TIntermNode* %90, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %229 = load i32, i32* %183, align 4
  %230 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %228, i64 0, i32 12, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 %229, i32* %230, align 4
  %231 = load i8, i8* %118, align 4
  %232 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %228, i64 0, i32 12, i64 0, i32 0, i32 1
  store i8 %231, i8* %232, align 4
  br label %307

233:                                              ; preds = %189
  %234 = bitcast %"class.glsl::Constant"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %234) #20
  %235 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 1
  %236 = bitcast [4 x %class.ConstantUnion]* %235 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %236, i8 -86, i64 32, i1 false)
  %237 = getelementptr inbounds %"struct.sw::Shader::Relative", %"struct.sw::Shader::Relative"* %3, i64 0, i32 3
  %238 = load i32, i32* %237, align 4
  %239 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %240 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 1, i64 0
  %241 = getelementptr inbounds [26 x i8], [26 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %241)
  %242 = getelementptr inbounds [20 x i8], [20 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %242)
  %243 = getelementptr inbounds [26 x i8], [26 x i8]* %8, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %243, i8 0, i64 24, i1 false)
  %244 = getelementptr inbounds [20 x i8], [20 x i8]* %9, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %244, i8 0, i64 16, i1 false)
  %245 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %246 = bitcast i32* %245 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %246, i8 0, i64 16, i1 false) #20
  %247 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8 2, i8* %247, align 8
  %248 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 1
  store i8 3, i8* %248, align 1
  %249 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 2
  %250 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 3
  store i8 1, i8* %250, align 1
  %251 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 4
  store i8 1, i8* %251, align 4
  %252 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 5
  store i8 0, i8* %252, align 1
  %253 = getelementptr inbounds i8, i8* %234, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %253, i8* nonnull align 2 %241, i64 26, i1 false) #20
  %254 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 10
  %255 = bitcast %struct.TLayoutQualifier* %254 to i64*
  store i64 4294967295, i64* %255, align 8
  %256 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 1, i32 10, i32 2
  store i32 0, i32* %256, align 8
  %257 = getelementptr inbounds i8, i8* %234, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %257, i8* nonnull align 4 %242, i64 20, i1 false) #20
  %258 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 1
  store %class.ConstantUnion* %240, %class.ConstantUnion** %258, align 8
  store i8 2, i8* %249, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %241)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %242)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN4glsl8ConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %239, align 8
  %259 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 1, i64 4
  br label %260

260:                                              ; preds = %260, %233
  %261 = phi %class.ConstantUnion* [ %240, %233 ], [ %264, %260 ]
  %262 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %261, i64 0, i32 0, i32 0
  store i32 0, i32* %262, align 4
  %263 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %261, i64 0, i32 1
  store i8 0, i8* %263, align 4
  %264 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %261, i64 1
  %265 = icmp eq %class.ConstantUnion* %264, %259
  br i1 %265, label %266, label %260

266:                                              ; preds = %260
  %267 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %240, i64 0, i32 0, i32 0
  store i32 %238, i32* %267, align 8
  %268 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 1, i64 0, i32 1
  store i8 2, i8* %268, align 4
  %269 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %5, i64 0, i32 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %12, i64 0, i32 0, i32 0, i32 0
  %271 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435571, %class.TIntermTyped* %185, i32 0, %class.TIntermNode* %269, i32 0, %class.TIntermNode* nonnull %270, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  %272 = load i32, i32* %183, align 4
  %273 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %271, i64 0, i32 12, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 %272, i32* %273, align 4
  %274 = load i8, i8* %118, align 4
  %275 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %271, i64 0, i32 12, i64 0, i32 0, i32 1
  store i8 %274, i8* %275, align 4
  %276 = bitcast %"class.glsl::Constant"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %276) #20
  %277 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 1
  %278 = bitcast [4 x %class.ConstantUnion]* %277 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %278, i8 -86, i64 32, i1 false)
  %279 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %280 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 1, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %241)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %242)
  call void @llvm.memset.p0i8.i64(i8* align 2 %243, i8 0, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %244, i8 0, i64 16, i1 false)
  %281 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %282 = bitcast i32* %281 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %282, i8 0, i64 16, i1 false) #20
  %283 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8 2, i8* %283, align 8
  %284 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 0, i32 0, i32 1, i32 1
  store i8 3, i8* %284, align 1
  %285 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 0, i32 0, i32 1, i32 2
  %286 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 0, i32 0, i32 1, i32 3
  store i8 1, i8* %286, align 1
  %287 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 0, i32 0, i32 1, i32 4
  store i8 1, i8* %287, align 4
  %288 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 0, i32 0, i32 1, i32 5
  store i8 0, i8* %288, align 1
  %289 = getelementptr inbounds i8, i8* %276, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %289, i8* nonnull align 2 %241, i64 26, i1 false) #20
  %290 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 0, i32 0, i32 1, i32 10
  %291 = bitcast %struct.TLayoutQualifier* %290 to i64*
  store i64 4294967295, i64* %291, align 8
  %292 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 0, i32 0, i32 1, i32 10, i32 2
  store i32 0, i32* %292, align 8
  %293 = getelementptr inbounds i8, i8* %276, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %293, i8* nonnull align 4 %242, i64 20, i1 false) #20
  %294 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 0, i32 1
  store %class.ConstantUnion* %280, %class.ConstantUnion** %294, align 8
  store i8 2, i8* %285, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %241)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %242)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN4glsl8ConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %279, align 8
  %295 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 1, i64 4
  br label %296

296:                                              ; preds = %296, %266
  %297 = phi %class.ConstantUnion* [ %280, %266 ], [ %300, %296 ]
  %298 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %297, i64 0, i32 0, i32 0
  store i32 0, i32* %298, align 4
  %299 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %297, i64 0, i32 1
  store i8 0, i8* %299, align 4
  %300 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %297, i64 1
  %301 = icmp eq %class.ConstantUnion* %300, %295
  br i1 %301, label %302, label %296

302:                                              ; preds = %296
  %303 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %280, i64 0, i32 0, i32 0
  store i32 %117, i32* %303, align 8
  %304 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 1, i64 0, i32 1
  store i8 2, i8* %304, align 4
  %305 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %13, i64 0, i32 0, i32 0, i32 0
  %306 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435573, %class.TIntermTyped* %185, i32 0, %class.TIntermNode* %90, i32 0, %class.TIntermNode* nonnull %305, i32 0, %class.TIntermNode* %269, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %276) #20
  br label %307

307:                                              ; preds = %302, %223
  %308 = phi i8* [ %234, %302 ], [ %191, %223 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %308) #20
  store i8 0, i8* %118, align 4
  %309 = call i32 @_ZN4glsl9OutputASM13registerIndexEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %185) #22
  store i32 %309, i32* %183, align 4
  %310 = getelementptr inbounds %"struct.sw::Shader::Relative", %"struct.sw::Shader::Relative"* %3, i64 0, i32 3
  store i32 1, i32* %310, align 4
  br label %467

311:                                              ; preds = %182
  br i1 %188, label %312, label %315

312:                                              ; preds = %311
  %313 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %5, i64 0, i32 0, i32 0, i32 0
  %314 = tail call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435569, %class.TIntermTyped* %185, i32 0, %class.TIntermNode* %313, i32 0, %class.TIntermNode* %90, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  br label %467

315:                                              ; preds = %311
  %316 = bitcast %"class.glsl::Constant"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %316) #20
  %317 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 1
  %318 = bitcast [4 x %class.ConstantUnion]* %317 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %318, i8 -86, i64 32, i1 false)
  %319 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %320 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 1, i64 0
  %321 = getelementptr inbounds [26 x i8], [26 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 26, i8* nonnull %321)
  %322 = getelementptr inbounds [20 x i8], [20 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %322)
  %323 = getelementptr inbounds [26 x i8], [26 x i8]* %8, i64 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %323, i8 0, i64 24, i1 false)
  %324 = getelementptr inbounds [20 x i8], [20 x i8]* %9, i64 0, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %324, i8 0, i64 16, i1 false)
  %325 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %326 = bitcast i32* %325 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %326, i8 0, i64 16, i1 false) #20
  %327 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8 2, i8* %327, align 8
  %328 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 0, i32 0, i32 1, i32 1
  store i8 3, i8* %328, align 1
  %329 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 0, i32 0, i32 1, i32 2
  %330 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 0, i32 0, i32 1, i32 3
  store i8 1, i8* %330, align 1
  %331 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 0, i32 0, i32 1, i32 4
  store i8 1, i8* %331, align 4
  %332 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 0, i32 0, i32 1, i32 5
  store i8 0, i8* %332, align 1
  %333 = getelementptr inbounds i8, i8* %316, i64 30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %333, i8* nonnull align 2 %321, i64 26, i1 false) #20
  %334 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 0, i32 0, i32 1, i32 10
  %335 = bitcast %struct.TLayoutQualifier* %334 to i64*
  store i64 4294967295, i64* %335, align 8
  %336 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 0, i32 0, i32 1, i32 10, i32 2
  store i32 0, i32* %336, align 8
  %337 = getelementptr inbounds i8, i8* %316, i64 68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %337, i8* nonnull align 4 %322, i64 20, i1 false) #20
  %338 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 0, i32 1
  store %class.ConstantUnion* %320, %class.ConstantUnion** %338, align 8
  store i8 2, i8* %329, align 2
  call void @llvm.lifetime.end.p0i8(i64 26, i8* nonnull %321)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %322)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN4glsl8ConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %319, align 8
  %339 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 1, i64 4
  br label %340

340:                                              ; preds = %340, %315
  %341 = phi %class.ConstantUnion* [ %320, %315 ], [ %344, %340 ]
  %342 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %341, i64 0, i32 0, i32 0
  store i32 0, i32* %342, align 4
  %343 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %341, i64 0, i32 1
  store i8 0, i8* %343, align 4
  %344 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %341, i64 1
  %345 = icmp eq %class.ConstantUnion* %344, %339
  br i1 %345, label %346, label %340

346:                                              ; preds = %340
  %347 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %320, i64 0, i32 0, i32 0
  store i32 %117, i32* %347, align 8
  %348 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 1, i64 0, i32 1
  store i8 2, i8* %348, align 4
  %349 = getelementptr inbounds %"class.glsl::Constant", %"class.glsl::Constant"* %14, i64 0, i32 0, i32 0, i32 0
  %350 = getelementptr inbounds %"class.glsl::Temporary", %"class.glsl::Temporary"* %5, i64 0, i32 0, i32 0, i32 0
  %351 = call %"struct.sw::Shader::Instruction"* @_ZN4glsl9OutputASM4emitEN2sw6Shader6OpcodeEP12TIntermTypediP11TIntermNodeiS7_iS7_iS7_iS7_i(%"class.glsl::OutputASM"* %0, i32 268435573, %class.TIntermTyped* %185, i32 0, %class.TIntermNode* %90, i32 0, %class.TIntermNode* nonnull %349, i32 0, %class.TIntermNode* %350, i32 0, %class.TIntermNode* null, i32 0, %class.TIntermNode* null, i32 0) #21
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %316) #20
  br label %467

352:                                              ; preds = %27
  %353 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1, i32 11
  %354 = load %class.TStructure*, %class.TStructure** %353, align 8
  %355 = getelementptr inbounds %class.TStructure, %class.TStructure* %354, i64 0, i32 0, i32 2
  br label %360

356:                                              ; preds = %27
  %357 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1, i32 9
  %358 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %357, align 8
  %359 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %358, i64 0, i32 0, i32 2
  br label %360

360:                                              ; preds = %356, %352
  %361 = phi %class.TVector** [ %355, %352 ], [ %359, %356 ]
  %362 = load %class.TVector*, %class.TVector** %361, align 8
  %363 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %31, i64 0, i32 0
  %364 = bitcast %class.TIntermTyped* %31 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %365 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %364, align 8
  %366 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %365, i64 2
  %367 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %366, align 8
  %368 = tail call %class.TIntermConstantUnion* %367(%class.TIntermNode* %363) #21
  %369 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %368, i64 0, i32 1
  %370 = load %class.ConstantUnion*, %class.ConstantUnion** %369, align 8
  %371 = icmp eq %class.ConstantUnion* %370, null
  br i1 %371, label %379, label %372

372:                                              ; preds = %360
  %373 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %370, i64 0, i32 0, i32 0
  %374 = load i32, i32* %373, align 4
  %375 = icmp sgt i32 %374, 0
  br i1 %375, label %376, label %379

376:                                              ; preds = %372
  %377 = getelementptr inbounds %class.TVector, %class.TVector* %362, i64 0, i32 0, i32 0, i32 0
  %378 = zext i32 %374 to i64
  br label %394

379:                                              ; preds = %394, %360, %372
  %380 = phi i32 [ 0, %372 ], [ 0, %360 ], [ %403, %394 ]
  %381 = load i32, i32* %2, align 4
  %382 = add i32 %381, %380
  store i32 %382, i32* %2, align 4
  %383 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %6, i64 0, i32 1, i32 2
  %384 = load i8, i8* %383, align 2
  %385 = icmp eq i8 %384, 20
  br i1 %385, label %392, label %386

386:                                              ; preds = %379
  %387 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %6, i64 0, i32 1
  %388 = tail call i32 @_ZN4glsl12registerSizeERK5TTypei(%class.TType* dereferenceable(64) %387, i32 0) #21
  %389 = sub nsw i32 4, %388
  %390 = lshr i32 15, %389
  %391 = trunc i32 %390 to i8
  br label %392

392:                                              ; preds = %379, %386
  %393 = phi i8 [ %391, %386 ], [ 2, %379 ]
  store i8 %393, i8* %4, align 1
  br label %467

394:                                              ; preds = %394, %376
  %395 = phi i64 [ 0, %376 ], [ %404, %394 ]
  %396 = phi i32 [ 0, %376 ], [ %403, %394 ]
  %397 = load %class.TField**, %class.TField*** %377, align 8
  %398 = getelementptr inbounds %class.TField*, %class.TField** %397, i64 %395
  %399 = load %class.TField*, %class.TField** %398, align 8
  %400 = getelementptr inbounds %class.TField, %class.TField* %399, i64 0, i32 0
  %401 = load %class.TType*, %class.TType** %400, align 8
  %402 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %401) #22
  %403 = add nsw i32 %402, %396
  %404 = add nuw nsw i64 %395, 1
  %405 = icmp eq i64 %404, %378
  br i1 %405, label %379, label %394

406:                                              ; preds = %27
  %407 = load i8, i8* %4, align 1
  %408 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %31, i64 0, i32 0
  %409 = bitcast %class.TIntermTyped* %31 to %class.TIntermAggregate* (%class.TIntermNode*)***
  %410 = load %class.TIntermAggregate* (%class.TIntermNode*)**, %class.TIntermAggregate* (%class.TIntermNode*)*** %409, align 8
  %411 = getelementptr inbounds %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %410, i64 3
  %412 = load %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %411, align 8
  %413 = tail call %class.TIntermAggregate* %412(%class.TIntermNode* %408) #21
  %414 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %413, i64 0, i32 2, i32 0
  %415 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %413, i64 0, i32 2, i32 0, i32 0, i32 1
  %416 = bitcast %class.TIntermNode*** %415 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = bitcast %"class.std::__1::vector.77"* %414 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = icmp eq i64 %417, %419
  br i1 %420, label %423, label %427

421:                                              ; preds = %447
  %422 = trunc i32 %453 to i8
  br label %423

423:                                              ; preds = %421, %406
  %424 = phi i32 [ 0, %406 ], [ %459, %421 ]
  %425 = phi i8 [ 0, %406 ], [ %422, %421 ]
  %426 = and i8 %407, %425
  store i8 %426, i8* %4, align 1
  br label %467

427:                                              ; preds = %406, %447
  %428 = phi i64 [ %463, %447 ], [ %419, %406 ]
  %429 = phi i64 [ %461, %447 ], [ 0, %406 ]
  %430 = phi i32 [ %460, %447 ], [ 0, %406 ]
  %431 = phi i32 [ %453, %447 ], [ 0, %406 ]
  %432 = phi i32 [ %459, %447 ], [ 0, %406 ]
  %433 = inttoptr i64 %428 to %class.TIntermNode**
  %434 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %433, i64 %429
  %435 = load %class.TIntermNode*, %class.TIntermNode** %434, align 8
  %436 = bitcast %class.TIntermNode* %435 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %437 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %436, align 8
  %438 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %437, i64 2
  %439 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %438, align 8
  %440 = tail call %class.TIntermConstantUnion* %439(%class.TIntermNode* %435) #21
  %441 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %440, i64 0, i32 1
  %442 = load %class.ConstantUnion*, %class.ConstantUnion** %441, align 8
  %443 = icmp eq %class.ConstantUnion* %442, null
  br i1 %443, label %447, label %444

444:                                              ; preds = %427
  %445 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %442, i64 0, i32 0, i32 0
  %446 = load i32, i32* %445, align 4
  br label %447

447:                                              ; preds = %427, %444
  %448 = phi i32 [ %446, %444 ], [ 0, %427 ]
  %449 = shl nsw i32 %448, 1
  %450 = ashr i32 %32, %449
  %451 = and i32 %450, 3
  %452 = shl i32 1, %451
  %453 = or i32 %452, %431
  %454 = shl nsw i32 %430, 1
  %455 = ashr i32 %32, %454
  %456 = and i32 %455, 3
  %457 = shl nuw nsw i32 %451, 1
  %458 = shl i32 %456, %457
  %459 = or i32 %458, %432
  %460 = add i32 %430, 1
  %461 = zext i32 %460 to i64
  %462 = load i64, i64* %416, align 8
  %463 = load i64, i64* %418, align 8
  %464 = sub i64 %462, %463
  %465 = ashr exact i64 %464, 3
  %466 = icmp ugt i64 %465, %461
  br i1 %466, label %427, label %421

467:                                              ; preds = %27, %106, %482, %498, %110, %78, %83, %72, %307, %346, %312, %121, %179, %392, %423
  %468 = phi i32 [ %424, %423 ], [ 228, %392 ], [ 228, %179 ], [ 228, %121 ], [ 228, %312 ], [ 228, %346 ], [ 228, %307 ], [ 228, %27 ], [ 228, %106 ], [ 228, %83 ], [ %75, %72 ], [ 228, %78 ], [ 228, %110 ], [ 228, %498 ], [ 228, %482 ]
  ret i32 %468

469:                                              ; preds = %7
  %470 = icmp eq %class.TIntermSymbol* %25, null
  br i1 %470, label %484, label %471

471:                                              ; preds = %469
  %472 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %25, i64 0, i32 0
  store %class.TIntermTyped* %472, %class.TIntermTyped** %1, align 8
  store i32 0, i32* %2, align 4
  %473 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %25, i64 0, i32 0, i32 1, i32 2
  %474 = load i8, i8* %473, align 2
  %475 = icmp eq i8 %474, 20
  br i1 %475, label %482, label %476

476:                                              ; preds = %471
  %477 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %25, i64 0, i32 0, i32 1
  %478 = tail call i32 @_ZN4glsl12registerSizeERK5TTypei(%class.TType* dereferenceable(64) %477, i32 0) #21
  %479 = sub nsw i32 4, %478
  %480 = lshr i32 15, %479
  %481 = trunc i32 %480 to i8
  br label %482

482:                                              ; preds = %471, %476
  %483 = phi i8 [ %481, %476 ], [ 2, %471 ]
  store i8 %483, i8* %4, align 1
  br label %467

484:                                              ; preds = %469
  %485 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 0
  %486 = bitcast %class.TIntermTyped* %6 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %487 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %486, align 8
  %488 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %487, align 8
  tail call void %488(%class.TIntermNode* %15, %class.TIntermTraverser* %485) #21
  store %class.TIntermTyped* %6, %class.TIntermTyped** %1, align 8
  store i32 0, i32* %2, align 4
  %489 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %6, i64 0, i32 1, i32 2
  %490 = load i8, i8* %489, align 2
  %491 = icmp eq i8 %490, 20
  br i1 %491, label %498, label %492

492:                                              ; preds = %484
  %493 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %6, i64 0, i32 1
  %494 = tail call i32 @_ZN4glsl12registerSizeERK5TTypei(%class.TType* dereferenceable(64) %493, i32 0) #21
  %495 = sub nsw i32 4, %494
  %496 = lshr i32 15, %495
  %497 = trunc i32 %496 to i8
  br label %498

498:                                              ; preds = %484, %492
  %499 = phi i8 [ %497, %492 ], [ 2, %484 ]
  store i8 %499, i8* %4, align 1
  br label %467
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZN4glsl9OutputASM16hasFlatQualifierEP12TIntermTyped(%"class.glsl::OutputASM"* nocapture readnone, %class.TIntermTyped* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 2
  %4 = load i8, i8* %3, align 2
  %5 = icmp eq i8 %4, 30
  %6 = icmp eq i8 %4, 33
  %7 = or i1 %5, %6
  ret i1 %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM15samplerRegisterEP12TIntermTyped(%"class.glsl::OutputASM"*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0
  %4 = bitcast %class.TIntermTyped* %1 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %5 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %4, align 8
  %6 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %5, i64 7
  %7 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %6, align 8
  %8 = tail call %class.TIntermSymbol* %7(%class.TIntermNode* %3) #21
  %9 = bitcast %class.TIntermTyped* %1 to %class.TIntermBinary* (%class.TIntermNode*)***
  %10 = load %class.TIntermBinary* (%class.TIntermNode*)**, %class.TIntermBinary* (%class.TIntermNode*)*** %9, align 8
  %11 = getelementptr inbounds %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %10, i64 4
  %12 = load %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %11, align 8
  %13 = tail call %class.TIntermBinary* %12(%class.TIntermNode* %3) #21
  %14 = icmp eq %class.TIntermSymbol* %8, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 2
  %17 = load i8, i8* %16, align 2
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %81

19:                                               ; preds = %15
  %20 = tail call i32 @_ZN4glsl9OutputASM15samplerRegisterEP13TIntermSymbol(%"class.glsl::OutputASM"* %0, %class.TIntermSymbol* nonnull %8) #22
  br label %81

21:                                               ; preds = %2
  %22 = icmp eq %class.TIntermBinary* %13, null
  br i1 %22, label %81, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %13, i64 0, i32 1
  %25 = load %class.TIntermTyped*, %class.TIntermTyped** %24, align 8
  %26 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %13, i64 0, i32 2
  %27 = load %class.TIntermTyped*, %class.TIntermTyped** %26, align 8
  %28 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %25, i64 0, i32 1
  %29 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %27, i64 0, i32 0
  %30 = bitcast %class.TIntermTyped* %27 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %31 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %30, align 8
  %32 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %31, i64 2
  %33 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %32, align 8
  %34 = tail call %class.TIntermConstantUnion* %33(%class.TIntermNode* %29) #21
  %35 = icmp eq %class.TIntermConstantUnion* %34, null
  br i1 %35, label %47, label %36

36:                                               ; preds = %23
  %37 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %30, align 8
  %38 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %37, i64 2
  %39 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %38, align 8
  %40 = tail call %class.TIntermConstantUnion* %39(%class.TIntermNode* %29) #21
  %41 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %40, i64 0, i32 1
  %42 = load %class.ConstantUnion*, %class.ConstantUnion** %41, align 8
  %43 = icmp eq %class.ConstantUnion* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %42, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  br label %47

47:                                               ; preds = %44, %36, %23
  %48 = phi i32 [ 0, %23 ], [ %46, %44 ], [ 0, %36 ]
  %49 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %13, i64 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  switch i32 %50, label %81 [
    i32 46, label %51
    i32 48, label %54
  ]

51:                                               ; preds = %47
  %52 = tail call i32 @_ZNK5TType20samplerRegisterCountEv(%class.TType* %28) #22
  %53 = mul nsw i32 %52, %48
  br label %75

54:                                               ; preds = %47
  %55 = icmp sgt i32 %48, 0
  br i1 %55, label %56, label %75

56:                                               ; preds = %54
  %57 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %25, i64 0, i32 1, i32 11
  %58 = load %class.TStructure*, %class.TStructure** %57, align 8
  %59 = getelementptr inbounds %class.TStructure, %class.TStructure* %58, i64 0, i32 0, i32 2
  %60 = load %class.TVector*, %class.TVector** %59, align 8
  %61 = getelementptr inbounds %class.TVector, %class.TVector* %60, i64 0, i32 0, i32 0, i32 0
  %62 = zext i32 %48 to i64
  br label %63

63:                                               ; preds = %63, %56
  %64 = phi i64 [ 0, %56 ], [ %73, %63 ]
  %65 = phi i32 [ 0, %56 ], [ %72, %63 ]
  %66 = load %class.TField**, %class.TField*** %61, align 8
  %67 = getelementptr inbounds %class.TField*, %class.TField** %66, i64 %64
  %68 = load %class.TField*, %class.TField** %67, align 8
  %69 = getelementptr inbounds %class.TField, %class.TField* %68, i64 0, i32 0
  %70 = load %class.TType*, %class.TType** %69, align 8
  %71 = tail call i32 @_ZNK5TType25totalSamplerRegisterCountEv(%class.TType* %70) #22
  %72 = add nsw i32 %71, %65
  %73 = add nuw nsw i64 %64, 1
  %74 = icmp eq i64 %73, %62
  br i1 %74, label %75, label %63

75:                                               ; preds = %63, %54, %51
  %76 = phi i32 [ %53, %51 ], [ 0, %54 ], [ %72, %63 ]
  %77 = tail call i32 @_ZN4glsl9OutputASM15samplerRegisterEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %25) #22
  %78 = icmp slt i32 %77, 0
  %79 = add nsw i32 %77, %76
  %80 = select i1 %78, i32 -1, i32 %79
  ret i32 %80

81:                                               ; preds = %15, %21, %47, %19
  %82 = phi i32 [ %20, %19 ], [ -1, %47 ], [ -1, %21 ], [ -1, %15 ]
  ret i32 %82
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK5TType25totalSamplerRegisterCountEv(%class.TType*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = tail call i32 @_ZNK5TType20samplerRegisterCountEv(%class.TType* %0) #22
  %9 = mul nsw i32 %8, %7
  br label %12

10:                                               ; preds = %1
  %11 = tail call i32 @_ZNK5TType20samplerRegisterCountEv(%class.TType* %0) #22
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i32 [ %9, %5 ], [ %11, %10 ]
  ret i32 %13
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM17temporaryRegisterEP12TIntermTyped(%"class.glsl::OutputASM"*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 5
  %4 = tail call i32 @_ZN4glsl9OutputASM8allocateERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_b(%"class.glsl::OutputASM"* %0, %"class.std::__1::vector.90"* dereferenceable(24) %3, %class.TIntermTyped* %1, i1 zeroext false) #22
  %5 = icmp sgt i32 %4, 4095
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %8 = load %class.TParseContext*, %class.TParseContext** %7, align 8
  %9 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 3
  %11 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %10, align 8
  %12 = icmp eq %"class.sw::PixelShader"* %11, null
  %13 = select i1 %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0)
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %8, %struct.TSourceLoc* dereferenceable(16) %9, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.30, i64 0, i64 0), i8* %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #21
  br label %14

14:                                               ; preds = %6, %2
  ret i32 %4
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM17attributeRegisterEP12TIntermTyped(%"class.glsl::OutputASM"*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer.208", align 8
  %4 = alloca %"struct.sw::Shader::Semantic", align 1
  %5 = alloca %"struct.glsl::Attribute", align 8
  %6 = alloca %"class.std::__1::basic_string.4", align 8
  %7 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 8
  %8 = tail call i32 @_ZN4glsl9OutputASM6lookupERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_(%"class.glsl::OutputASM"* undef, %"class.std::__1::vector.90"* dereferenceable(24) %7, %class.TIntermTyped* %1) #22
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %10, label %151

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0
  %12 = bitcast %class.TIntermTyped* %1 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %13 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %12, align 8
  %14 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %13, i64 7
  %15 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %14, align 8
  %16 = tail call %class.TIntermSymbol* %15(%class.TIntermNode* %11) #21
  %17 = icmp eq %class.TIntermSymbol* %16, null
  br i1 %17, label %151, label %18

18:                                               ; preds = %10
  %19 = tail call i32 @_ZN4glsl9OutputASM8allocateERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_b(%"class.glsl::OutputASM"* %0, %"class.std::__1::vector.90"* dereferenceable(24) %7, %class.TIntermTyped* %1, i1 zeroext false) #22
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %151, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1
  %23 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %22) #21
  %24 = getelementptr inbounds %class.TType, %class.TType* %22, i64 0, i32 0
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, 3
  %27 = select i1 %26, i8 2, i8 0
  %28 = icmp eq i8 %25, 2
  %29 = select i1 %28, i8 1, i8 %27
  %30 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 4
  %31 = load %"class.sw::VertexShader"*, %"class.sw::VertexShader"** %30, align 8
  %32 = icmp ne %"class.sw::VertexShader"* %31, null
  %33 = add nsw i32 %23, %19
  %34 = icmp slt i32 %33, 33
  %35 = and i1 %34, %32
  %36 = icmp sgt i32 %23, 0
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %52

38:                                               ; preds = %21
  %39 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %4, i64 0, i32 0
  %40 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %4, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %4, i64 0, i32 2
  %42 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %4, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #20
  %43 = trunc i32 %19 to i8
  store i8 5, i8* %39, align 1
  store i8 %43, i8* %40, align 1
  store i8 0, i8* %41, align 1
  store i8 0, i8* %42, align 1
  call void @_ZN2sw12VertexShader8setInputEiRKNS_6Shader8SemanticENS0_10AttribTypeE(%"class.sw::VertexShader"* nonnull %31, i32 %19, %"struct.sw::Shader::Semantic"* nonnull dereferenceable(4) %4, i8 zeroext %29) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #20
  %44 = icmp eq i32 %23, 1
  br i1 %44, label %52, label %45

45:                                               ; preds = %38, %45
  %46 = phi i32 [ %50, %45 ], [ 1, %38 ]
  %47 = load %"class.sw::VertexShader"*, %"class.sw::VertexShader"** %30, align 8
  %48 = add nsw i32 %46, %19
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #20
  %49 = trunc i32 %48 to i8
  store i8 5, i8* %39, align 1
  store i8 %49, i8* %40, align 1
  store i8 0, i8* %41, align 1
  store i8 0, i8* %42, align 1
  call void @_ZN2sw12VertexShader8setInputEiRKNS_6Shader8SemanticENS0_10AttribTypeE(%"class.sw::VertexShader"* %47, i32 %48, %"struct.sw::Shader::Semantic"* nonnull dereferenceable(4) %4, i8 zeroext %29) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #20
  %50 = add nuw nsw i32 %46, 1
  %51 = icmp eq i32 %50, %23
  br i1 %51, label %52, label %45

52:                                               ; preds = %45, %38, %21
  %53 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 1
  %54 = load %"class.glsl::Shader"*, %"class.glsl::Shader"** %53, align 8
  %55 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %54, i64 0, i32 4
  %56 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %16, i64 0, i32 2
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  br label %66

64:                                               ; preds = %52
  %65 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  br label %66

66:                                               ; preds = %61, %64
  %67 = phi i8* [ %63, %61 ], [ %65, %64 ]
  %68 = bitcast %"struct.glsl::Attribute"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %68) #20
  %69 = call fastcc i32 @_ZN12_GLOBAL__N_114glVariableTypeERK5TType(%class.TType* dereferenceable(64) %22) #22
  %70 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #20
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string.4"* nonnull %6, i8* %67) #22
  %71 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 6
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 10
  %74 = bitcast %struct.TLayoutQualifier* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = trunc i64 %75 to i32
  %77 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %5, i64 0, i32 2
  %78 = bitcast %"class.std::__1::basic_string.4"* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #20
  %79 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %5, i64 0, i32 0
  store i32 %69, i32* %79, align 8
  %80 = call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(%"class.std::__1::basic_string.4"* %77, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %6) #21
  %81 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %5, i64 0, i32 3
  store i32 %72, i32* %81, align 8
  %82 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %5, i64 0, i32 4
  store i32 %76, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %5, i64 0, i32 5
  store i32 %19, i32* %83, align 8
  %84 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %54, i64 0, i32 4, i32 0, i32 1
  %85 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %84, align 8
  %86 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %54, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %87 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %86, align 8
  %88 = icmp ult %"struct.glsl::Attribute"* %85, %87
  %89 = ptrtoint %"struct.glsl::Attribute"* %87 to i64
  br i1 %88, label %90, label %101

90:                                               ; preds = %66
  %91 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %85, i64 0, i32 0
  %92 = load i32, i32* %79, align 8
  store i32 %92, i32* %91, align 8
  %93 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %85, i64 0, i32 2
  %94 = bitcast %"class.std::__1::basic_string.4"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %78, i64 24, i1 false) #20
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #20
  %95 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %85, i64 0, i32 3
  %96 = bitcast i32* %95 to i8*
  %97 = bitcast i32* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 12, i1 false) #20
  %98 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %85, i64 1
  %99 = ptrtoint %"struct.glsl::Attribute"* %98 to i64
  %100 = bitcast %"struct.glsl::Attribute"** %84 to i64*
  store i64 %99, i64* %100, align 8
  br label %142

101:                                              ; preds = %66
  %102 = ptrtoint %"struct.glsl::Attribute"* %85 to i64
  %103 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %54, i64 0, i32 4, i32 0, i32 2
  %104 = bitcast %"class.std::__1::__compressed_pair.64"* %103 to %"class.std::__1::allocator.67"*
  %105 = bitcast %"struct.std::__1::__split_buffer.208"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %105) #20
  %106 = getelementptr inbounds %"struct.std::__1::__split_buffer.208", %"struct.std::__1::__split_buffer.208"* %3, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 40, i1 false) #20
  %107 = bitcast %"class.std::__1::vector.62"* %55 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %102, %108
  %110 = sdiv exact i64 %109, 48
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 384307168202282325
  br i1 %112, label %113, label %115

113:                                              ; preds = %101
  %114 = bitcast %"class.std::__1::vector.62"* %55 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #23
  unreachable

115:                                              ; preds = %101
  %116 = sub i64 %89, %108
  %117 = sdiv exact i64 %116, 48
  %118 = icmp ult i64 %117, 192153584101141162
  br i1 %118, label %119, label %123

119:                                              ; preds = %115
  %120 = shl nsw i64 %117, 1
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  br label %123

123:                                              ; preds = %115, %119
  %124 = phi i64 [ %122, %119 ], [ 384307168202282325, %115 ]
  call void @_ZNSt3__114__split_bufferIN4glsl9AttributeERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer.208"* nonnull %3, i64 %124, i64 %110, %"class.std::__1::allocator.67"* dereferenceable(1) %104) #21
  %125 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %106, align 8
  %126 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %125, i64 0, i32 0
  %127 = load i32, i32* %79, align 8
  store i32 %127, i32* %126, align 8
  %128 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %125, i64 0, i32 2
  %129 = bitcast %"class.std::__1::basic_string.4"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %78, i64 24, i1 false) #20
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #20
  %130 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %125, i64 0, i32 3
  %131 = bitcast i32* %130 to i8*
  %132 = bitcast i32* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 12, i1 false) #20
  %133 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %106, align 8
  %134 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %133, i64 1
  store %"struct.glsl::Attribute"* %134, %"struct.glsl::Attribute"** %106, align 8
  call void @_ZNSt3__16vectorIN4glsl9AttributeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.62"* %55, %"struct.std::__1::__split_buffer.208"* nonnull dereferenceable(40) %3) #21
  call void @_ZNSt3__114__split_bufferIN4glsl9AttributeERNS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__split_buffer.208"* nonnull %3) #21
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %105) #20
  %135 = bitcast %"class.std::__1::basic_string.4"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %123
  %140 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  call void @_ZdlPv(i8* %141) #24
  br label %142

142:                                              ; preds = %90, %123, %139
  %143 = bitcast %"class.std::__1::basic_string.4"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %149) #24
  br label %150

150:                                              ; preds = %142, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #20
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %68) #20
  br label %151

151:                                              ; preds = %150, %10, %2, %18
  %152 = phi i32 [ -1, %18 ], [ %8, %2 ], [ -1, %10 ], [ %19, %150 ]
  ret i32 %152
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM15varyingRegisterEP12TIntermTyped(%"class.glsl::OutputASM"*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.sw::Shader::Semantic", align 1
  %4 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 7
  %5 = tail call i32 @_ZN4glsl9OutputASM6lookupERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_(%"class.glsl::OutputASM"* undef, %"class.std::__1::vector.90"* dereferenceable(24) %4, %class.TIntermTyped* %1) #22
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %72

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN4glsl9OutputASM8allocateERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_b(%"class.glsl::OutputASM"* %0, %"class.std::__1::vector.90"* dereferenceable(24) %4, %class.TIntermTyped* %1, i1 zeroext false) #22
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %72, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1
  %12 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %11) #21
  %13 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 3
  %14 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %13, align 8
  %15 = icmp eq %"class.sw::PixelShader"* %14, null
  br i1 %15, label %44, label %16

16:                                               ; preds = %10
  %17 = add nsw i32 %12, %8
  %18 = icmp sgt i32 %17, 32
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %21 = load %class.TParseContext*, %class.TParseContext** %20, align 8
  %22 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0, i32 1
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %21, %struct.TSourceLoc* dereferenceable(16) %22, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #21
  br label %72

23:                                               ; preds = %16
  %24 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 2
  %25 = load i8, i8* %24, align 2
  %26 = icmp eq i8 %25, 25
  br i1 %26, label %27, label %40

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 4
  %29 = load i8, i8* %28, align 4
  %30 = icmp ugt i8 %29, 1
  %31 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 3
  %32 = select i1 %30, i8* %28, i8* %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #20
  %36 = trunc i32 %8 to i8
  store i8 5, i8* %35, align 1
  %37 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %3, i64 0, i32 1
  store i8 %36, i8* %37, align 1
  %38 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %3, i64 0, i32 2
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %3, i64 0, i32 3
  store i8 0, i8* %39, align 1
  call void @_ZN2sw11PixelShader8setInputEiiRKNS_6Shader8SemanticE(%"class.sw::PixelShader"* nonnull %14, i32 %8, i32 %34, %"struct.sw::Shader::Semantic"* nonnull dereferenceable(4) %3) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #20
  br label %60

40:                                               ; preds = %23
  %41 = icmp eq i8 %25, 30
  %42 = icmp eq i8 %25, 33
  %43 = or i1 %41, %42
  tail call void @_ZN4glsl9OutputASM20setPixelShaderInputsERK5TTypeib(%"class.glsl::OutputASM"* %0, %class.TType* dereferenceable(64) %11, i32 %8, i1 zeroext %43) #22
  br label %60

44:                                               ; preds = %10
  %45 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 4
  %46 = load %"class.sw::VertexShader"*, %"class.sw::VertexShader"** %45, align 8
  %47 = icmp eq %"class.sw::VertexShader"* %46, null
  br i1 %47, label %60, label %48

48:                                               ; preds = %44
  %49 = add nsw i32 %12, %8
  %50 = icmp sgt i32 %49, 34
  br i1 %50, label %51, label %55

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %53 = load %class.TParseContext*, %class.TParseContext** %52, align 8
  %54 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0, i32 1
  tail call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %53, %struct.TSourceLoc* dereferenceable(16) %54, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #21
  br label %72

55:                                               ; preds = %48
  %56 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 2
  %57 = load i8, i8* %56, align 2
  switch i8 %57, label %60 [
    i8 19, label %58
    i8 20, label %59
  ]

58:                                               ; preds = %55
  tail call void @_ZN2sw12VertexShader19setPositionRegisterEi(%"class.sw::VertexShader"* nonnull %46, i32 %8) #21
  br label %60

59:                                               ; preds = %55
  tail call void @_ZN2sw12VertexShader20setPointSizeRegisterEi(%"class.sw::VertexShader"* nonnull %46, i32 %8) #21
  br label %60

60:                                               ; preds = %55, %44, %59, %58, %27, %40
  %61 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 2
  %62 = load i8, i8* %61, align 2
  %63 = icmp eq i8 %62, 25
  br i1 %63, label %72, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0
  %66 = bitcast %class.TIntermTyped* %1 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %67 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %66, align 8
  %68 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %67, i64 7
  %69 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %68, align 8
  %70 = call %class.TIntermSymbol* %69(%class.TIntermNode* %65) #21
  %71 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %70, i64 0, i32 2
  call void @_ZN4glsl9OutputASM14declareVaryingERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEi(%"class.glsl::OutputASM"* %0, %class.TType* dereferenceable(64) %11, %"class.std::__1::basic_string"* dereferenceable(32) %71, i32 %8) #21
  br label %72

72:                                               ; preds = %64, %60, %2, %51, %19, %7
  %73 = phi i32 [ 0, %51 ], [ 0, %7 ], [ 0, %19 ], [ %5, %2 ], [ %8, %60 ], [ %8, %64 ]
  ret i32 %73
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM22fragmentOutputRegisterEP12TIntermTyped(%"class.glsl::OutputASM"*, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 10
  %4 = tail call i32 @_ZN4glsl9OutputASM8allocateERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_b(%"class.glsl::OutputASM"* %0, %"class.std::__1::vector.90"* dereferenceable(24) %3, %class.TIntermTyped* %1, i1 zeroext false) #22
  ret i32 %4
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM4costEP11TIntermNodei(%"class.glsl::OutputASM"*, %class.TIntermNode*, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp slt i32 %2, 0
  br i1 %4, label %120, label %5

5:                                                ; preds = %3, %57
  %6 = phi i32 [ %59, %57 ], [ %2, %3 ]
  %7 = phi %class.TIntermNode* [ %58, %57 ], [ %1, %3 ]
  %8 = bitcast %class.TIntermNode* %7 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %9 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %8, align 8
  %10 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %9, i64 7
  %11 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %10, align 8
  %12 = tail call %class.TIntermSymbol* %11(%class.TIntermNode* %7) #21
  %13 = icmp eq %class.TIntermSymbol* %12, null
  br i1 %13, label %14, label %120

14:                                               ; preds = %5, %40
  %15 = phi %class.TIntermNode* [ %41, %40 ], [ %7, %5 ]
  %16 = bitcast %class.TIntermNode* %15 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %17 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %16, align 8
  %18 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %17, i64 2
  %19 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %18, align 8
  %20 = tail call %class.TIntermConstantUnion* %19(%class.TIntermNode* %15) #21
  %21 = icmp eq %class.TIntermConstantUnion* %20, null
  br i1 %21, label %22, label %120

22:                                               ; preds = %14
  %23 = bitcast %class.TIntermNode* %15 to %class.TIntermBinary* (%class.TIntermNode*)***
  %24 = load %class.TIntermBinary* (%class.TIntermNode*)**, %class.TIntermBinary* (%class.TIntermNode*)*** %23, align 8
  %25 = getelementptr inbounds %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %24, i64 4
  %26 = load %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %25, align 8
  %27 = tail call %class.TIntermBinary* %26(%class.TIntermNode* %15) #21
  %28 = icmp eq %class.TIntermBinary* %27, null
  br i1 %28, label %61, label %29

29:                                               ; preds = %22
  %30 = load %class.TIntermBinary* (%class.TIntermNode*)**, %class.TIntermBinary* (%class.TIntermNode*)*** %23, align 8
  %31 = getelementptr inbounds %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %30, i64 4
  %32 = load %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %31, align 8
  %33 = tail call %class.TIntermBinary* %32(%class.TIntermNode* %15) #21
  %34 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %33, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  switch i32 %35, label %120 [
    i32 50, label %36
    i32 46, label %36
    i32 48, label %36
    i32 49, label %36
    i32 16, label %48
    i32 17, label %48
    i32 18, label %48
  ]

36:                                               ; preds = %29, %29, %29, %29
  %37 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %33, i64 0, i32 1
  %38 = load %class.TIntermTyped*, %class.TIntermTyped** %37, align 8
  %39 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %38, i64 0, i32 0
  br label %40

40:                                               ; preds = %36, %110
  %41 = phi %class.TIntermNode* [ %39, %36 ], [ %116, %110 ]
  %42 = bitcast %class.TIntermNode* %41 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %43 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %42, align 8
  %44 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %43, i64 7
  %45 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %44, align 8
  %46 = tail call %class.TIntermSymbol* %45(%class.TIntermNode* %41) #21
  %47 = icmp eq %class.TIntermSymbol* %46, null
  br i1 %47, label %14, label %120

48:                                               ; preds = %29, %29, %29
  %49 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %33, i64 0, i32 1
  %50 = load %class.TIntermTyped*, %class.TIntermTyped** %49, align 8
  %51 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %50, i64 0, i32 0
  %52 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %33, i64 0, i32 2
  %53 = load %class.TIntermTyped*, %class.TIntermTyped** %52, align 8
  %54 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %53, i64 0, i32 0
  %55 = add nsw i32 %6, -1
  %56 = tail call i32 @_ZN4glsl9OutputASM4costEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermNode* %54, i32 %55) #22
  br label %57

57:                                               ; preds = %48, %76, %117
  %58 = phi %class.TIntermNode* [ %100, %117 ], [ %79, %76 ], [ %51, %48 ]
  %59 = phi i32 [ %119, %117 ], [ %80, %76 ], [ %56, %48 ]
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %120, label %5

61:                                               ; preds = %22
  %62 = bitcast %class.TIntermNode* %15 to %class.TIntermUnary* (%class.TIntermNode*)***
  %63 = load %class.TIntermUnary* (%class.TIntermNode*)**, %class.TIntermUnary* (%class.TIntermNode*)*** %62, align 8
  %64 = getelementptr inbounds %class.TIntermUnary* (%class.TIntermNode*)*, %class.TIntermUnary* (%class.TIntermNode*)** %63, i64 5
  %65 = load %class.TIntermUnary* (%class.TIntermNode*)*, %class.TIntermUnary* (%class.TIntermNode*)** %64, align 8
  %66 = tail call %class.TIntermUnary* %65(%class.TIntermNode* %15) #21
  %67 = icmp eq %class.TIntermUnary* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %61
  %69 = bitcast %class.TIntermNode* %15 to %class.TIntermUnary* (%class.TIntermNode*)***
  %70 = load %class.TIntermUnary* (%class.TIntermNode*)**, %class.TIntermUnary* (%class.TIntermNode*)*** %69, align 8
  %71 = getelementptr inbounds %class.TIntermUnary* (%class.TIntermNode*)*, %class.TIntermUnary* (%class.TIntermNode*)** %70, i64 5
  %72 = load %class.TIntermUnary* (%class.TIntermNode*)*, %class.TIntermUnary* (%class.TIntermNode*)** %71, align 8
  %73 = tail call %class.TIntermUnary* %72(%class.TIntermNode* %15) #21
  %74 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %73, i64 0, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  switch i32 %75, label %120 [
    i32 72, label %76
    i32 8, label %76
  ]

76:                                               ; preds = %68, %68
  %77 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %73, i64 0, i32 1
  %78 = load %class.TIntermTyped*, %class.TIntermTyped** %77, align 8
  %79 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %78, i64 0, i32 0
  %80 = add nsw i32 %6, -1
  br label %57

81:                                               ; preds = %61
  %82 = bitcast %class.TIntermNode* %15 to %class.TIntermSelection* (%class.TIntermNode*)***
  %83 = load %class.TIntermSelection* (%class.TIntermNode*)**, %class.TIntermSelection* (%class.TIntermNode*)*** %82, align 8
  %84 = getelementptr inbounds %class.TIntermSelection* (%class.TIntermNode*)*, %class.TIntermSelection* (%class.TIntermNode*)** %83, i64 6
  %85 = load %class.TIntermSelection* (%class.TIntermNode*)*, %class.TIntermSelection* (%class.TIntermNode*)** %84, align 8
  %86 = tail call %class.TIntermSelection* %85(%class.TIntermNode* %15) #21
  %87 = icmp eq %class.TIntermSelection* %86, null
  br i1 %87, label %120, label %88

88:                                               ; preds = %81
  %89 = load %class.TIntermSelection* (%class.TIntermNode*)**, %class.TIntermSelection* (%class.TIntermNode*)*** %82, align 8
  %90 = getelementptr inbounds %class.TIntermSelection* (%class.TIntermNode*)*, %class.TIntermSelection* (%class.TIntermNode*)** %89, i64 6
  %91 = load %class.TIntermSelection* (%class.TIntermNode*)*, %class.TIntermSelection* (%class.TIntermNode*)** %90, align 8
  %92 = tail call %class.TIntermSelection* %91(%class.TIntermNode* %15) #21
  %93 = getelementptr inbounds %class.TIntermSelection, %class.TIntermSelection* %92, i64 0, i32 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 8
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %120, label %96

96:                                               ; preds = %88
  %97 = getelementptr inbounds %class.TIntermSelection, %class.TIntermSelection* %92, i64 0, i32 1
  %98 = load %class.TIntermTyped*, %class.TIntermTyped** %97, align 8
  %99 = getelementptr inbounds %class.TIntermSelection, %class.TIntermSelection* %92, i64 0, i32 2
  %100 = load %class.TIntermNode*, %class.TIntermNode** %99, align 8
  %101 = getelementptr inbounds %class.TIntermSelection, %class.TIntermSelection* %92, i64 0, i32 3
  %102 = load %class.TIntermNode*, %class.TIntermNode** %101, align 8
  %103 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %98, i64 0, i32 0
  %104 = bitcast %class.TIntermTyped* %98 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %105 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %104, align 8
  %106 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %105, i64 2
  %107 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %106, align 8
  %108 = tail call %class.TIntermConstantUnion* %107(%class.TIntermNode* %103) #21
  %109 = icmp eq %class.TIntermConstantUnion* %108, null
  br i1 %109, label %117, label %110

110:                                              ; preds = %96
  %111 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %108, i64 0, i32 1
  %112 = bitcast %class.ConstantUnion** %111 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = load i8, i8* %113, align 4, !range !2
  %115 = icmp eq i8 %114, 0
  %116 = select i1 %115, %class.TIntermNode* %102, %class.TIntermNode* %100
  br label %40

117:                                              ; preds = %96
  %118 = add nsw i32 %6, -2
  %119 = tail call i32 @_ZN4glsl9OutputASM4costEP11TIntermNodei(%"class.glsl::OutputASM"* %0, %class.TIntermNode* %102, i32 %118) #22
  br label %57

120:                                              ; preds = %68, %57, %5, %88, %81, %29, %14, %40, %3
  %121 = phi i32 [ %2, %3 ], [ %6, %40 ], [ %6, %14 ], [ -1, %29 ], [ -1, %81 ], [ -1, %88 ], [ %59, %57 ], [ -1, %68 ], [ %6, %5 ]
  ret i32 %121
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM8allocateERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_b(%"class.glsl::OutputASM"* nocapture readonly, %"class.std::__1::vector.90"* dereferenceable(24), %class.TIntermTyped*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = ptrtoint %class.TIntermTyped* %2 to i64
  %6 = tail call i32 @_ZN4glsl9OutputASM6lookupERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_(%"class.glsl::OutputASM"* undef, %"class.std::__1::vector.90"* dereferenceable(24) %1, %class.TIntermTyped* %2) #22
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %8, label %156

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZN4glsl9OutputASM18arrayExceedsLimitsEP12TIntermTyped(%"class.glsl::OutputASM"* %0, %class.TIntermTyped* %2) #22
  br i1 %9, label %156, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1
  br i1 %3, label %12, label %14

12:                                               ; preds = %10
  %13 = tail call i32 @_ZNK5TType25totalSamplerRegisterCountEv(%class.TType* %11) #21
  br label %16

14:                                               ; preds = %10
  %15 = tail call i32 @_ZNK5TType18blockRegisterCountEv(%class.TType* %11) #21
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i32 [ %13, %12 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %1, i64 0, i32 0, i32 1
  %19 = bitcast %class.TIntermTyped*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.90"* %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = icmp eq i64 %23, 0
  %25 = inttoptr i64 %22 to %class.TIntermTyped**
  %26 = inttoptr i64 %20 to %class.TIntermTyped**
  br i1 %24, label %83, label %27

27:                                               ; preds = %16
  %28 = ashr exact i64 %23, 3
  %29 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %1, i64 0, i32 0, i32 0
  %30 = icmp ugt i32 %17, 1
  %31 = zext i32 %17 to i64
  br label %32

32:                                               ; preds = %27, %79
  %33 = phi i64 [ 0, %27 ], [ %81, %79 ]
  %34 = phi i32 [ 0, %27 ], [ %80, %79 ]
  %35 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %25, i64 %33
  %36 = load %class.TIntermTyped*, %class.TIntermTyped** %35, align 8
  %37 = icmp eq %class.TIntermTyped* %36, null
  br i1 %37, label %38, label %79

38:                                               ; preds = %32
  br i1 %30, label %39, label %58

39:                                               ; preds = %38, %50
  %40 = phi i64 [ %51, %50 ], [ 1, %38 ]
  %41 = phi i32 [ %52, %50 ], [ 1, %38 ]
  %42 = trunc i64 %40 to i32
  %43 = add i32 %34, %42
  %44 = zext i32 %43 to i64
  %45 = icmp ugt i64 %28, %44
  br i1 %45, label %46, label %56

46:                                               ; preds = %39
  %47 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %25, i64 %44
  %48 = load %class.TIntermTyped*, %class.TIntermTyped** %47, align 8
  %49 = icmp eq %class.TIntermTyped* %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = add nuw nsw i64 %40, 1
  %52 = add nuw i32 %41, 1
  %53 = icmp eq i64 %51, %31
  br i1 %53, label %58, label %39

54:                                               ; preds = %46
  %55 = trunc i64 %40 to i32
  br label %58

56:                                               ; preds = %39
  %57 = trunc i64 %40 to i32
  br label %58

58:                                               ; preds = %50, %54, %56, %38
  %59 = phi i32 [ 1, %38 ], [ %55, %54 ], [ %57, %56 ], [ %52, %50 ]
  %60 = icmp eq i32 %59, %17
  br i1 %60, label %61, label %79

61:                                               ; preds = %58
  %62 = icmp eq i32 %17, 0
  br i1 %62, label %156, label %63

63:                                               ; preds = %61
  %64 = zext i32 %17 to i64
  %65 = zext i32 %34 to i64
  %66 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %25, i64 %65
  %67 = bitcast %class.TIntermTyped** %66 to i64*
  store i64 %5, i64* %67, align 8
  %68 = icmp eq i32 %17, 1
  br i1 %68, label %156, label %69

69:                                               ; preds = %63, %69
  %70 = phi i64 [ %77, %69 ], [ 1, %63 ]
  %71 = load %class.TIntermTyped**, %class.TIntermTyped*** %29, align 8
  %72 = trunc i64 %70 to i32
  %73 = add i32 %34, %72
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %71, i64 %74
  %76 = bitcast %class.TIntermTyped** %75 to i64*
  store i64 %5, i64* %76, align 8
  %77 = add nuw nsw i64 %70, 1
  %78 = icmp eq i64 %77, %64
  br i1 %78, label %156, label %69

79:                                               ; preds = %58, %32
  %80 = add i32 %34, 1
  %81 = zext i32 %80 to i64
  %82 = icmp ugt i64 %28, %81
  br i1 %82, label %32, label %83

83:                                               ; preds = %79, %16
  %84 = lshr exact i64 %23, 3
  %85 = trunc i64 %84 to i32
  %86 = icmp eq i32 %17, 0
  br i1 %86, label %156, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %89 = bitcast %class.TIntermTyped*** %88 to i64*
  %90 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %1, i64 0, i32 0, i32 0
  br label %91

91:                                               ; preds = %154, %87
  %92 = phi %class.TIntermTyped** [ %26, %87 ], [ %155, %154 ]
  %93 = phi i32 [ 0, %87 ], [ %152, %154 ]
  %94 = load %class.TIntermTyped**, %class.TIntermTyped*** %88, align 8
  %95 = icmp eq %class.TIntermTyped** %92, %94
  br i1 %95, label %100, label %96

96:                                               ; preds = %91
  %97 = bitcast %class.TIntermTyped** %92 to i64*
  store i64 %5, i64* %97, align 8
  %98 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %92, i64 1
  %99 = ptrtoint %class.TIntermTyped** %98 to i64
  store i64 %99, i64* %19, align 8
  br label %151

100:                                              ; preds = %91
  %101 = ptrtoint %class.TIntermTyped** %94 to i64
  %102 = load i64, i64* %21, align 8
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 3
  %105 = add nsw i64 %104, 1
  %106 = icmp ugt i64 %105, 2305843009213693951
  br i1 %106, label %107, label %109

107:                                              ; preds = %100
  %108 = bitcast %"class.std::__1::vector.90"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %108) #23
  unreachable

109:                                              ; preds = %100
  %110 = icmp ult i64 %104, 1152921504606846975
  br i1 %110, label %111, label %119

111:                                              ; preds = %109
  %112 = ashr exact i64 %103, 2
  %113 = icmp ult i64 %112, %105
  %114 = select i1 %113, i64 %105, i64 %112
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %124, label %116

116:                                              ; preds = %111
  %117 = icmp ugt i64 %114, 2305843009213693951
  br i1 %117, label %118, label %119

118:                                              ; preds = %116
  tail call void @abort() #23
  unreachable

119:                                              ; preds = %116, %109
  %120 = phi i64 [ %114, %116 ], [ 2305843009213693951, %109 ]
  %121 = shl i64 %120, 3
  %122 = tail call i8* @_Znwm(i64 %121) #24
  %123 = bitcast i8* %122 to %class.TIntermTyped**
  br label %124

124:                                              ; preds = %119, %111
  %125 = phi i64 [ %120, %119 ], [ 0, %111 ]
  %126 = phi %class.TIntermTyped** [ %123, %119 ], [ null, %111 ]
  %127 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %126, i64 %104
  %128 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %126, i64 %125
  %129 = ptrtoint %class.TIntermTyped** %128 to i64
  %130 = bitcast %class.TIntermTyped** %127 to i64*
  store i64 %5, i64* %130, align 8
  %131 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %127, i64 1
  %132 = ptrtoint %class.TIntermTyped** %131 to i64
  %133 = load %class.TIntermTyped**, %class.TIntermTyped*** %90, align 8
  %134 = load i64, i64* %19, align 8
  %135 = ptrtoint %class.TIntermTyped** %133 to i64
  %136 = sub i64 %134, %135
  %137 = ashr exact i64 %136, 3
  %138 = sub nsw i64 0, %137
  %139 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %127, i64 %138
  %140 = ptrtoint %class.TIntermTyped** %139 to i64
  %141 = icmp sgt i64 %136, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %124
  %143 = bitcast %class.TIntermTyped** %139 to i8*
  %144 = bitcast %class.TIntermTyped** %133 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 %136, i1 false) #20
  %145 = load %class.TIntermTyped**, %class.TIntermTyped*** %90, align 8
  br label %146

146:                                              ; preds = %142, %124
  %147 = phi %class.TIntermTyped** [ %133, %124 ], [ %145, %142 ]
  store i64 %140, i64* %21, align 8
  store i64 %132, i64* %19, align 8
  store i64 %129, i64* %89, align 8
  %148 = icmp eq %class.TIntermTyped** %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %146
  %150 = bitcast %class.TIntermTyped** %147 to i8*
  tail call void @_ZdlPv(i8* %150) #24
  br label %151

151:                                              ; preds = %96, %146, %149
  %152 = add nuw i32 %93, 1
  %153 = icmp eq i32 %152, %17
  br i1 %153, label %156, label %154

154:                                              ; preds = %151
  %155 = load %class.TIntermTyped**, %class.TIntermTyped*** %18, align 8
  br label %91

156:                                              ; preds = %69, %151, %63, %61, %83, %4, %8
  %157 = phi i32 [ -1, %8 ], [ %6, %4 ], [ %34, %61 ], [ %85, %83 ], [ %34, %63 ], [ %85, %151 ], [ %34, %69 ]
  ret i32 %157
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM20setPixelShaderInputsERK5TTypeib(%"class.glsl::OutputASM"* nocapture readonly, %class.TType* dereferenceable(64), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.sw::Shader::Semantic", align 1
  %6 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 11
  %7 = load %class.TStructure*, %class.TStructure** %6, align 8
  %8 = icmp eq %class.TStructure* %7, null
  br i1 %8, label %9, label %21

9:                                                ; preds = %4
  %10 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %1) #22
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %52

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 4
  %15 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 3
  %16 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %5, i64 0, i32 0
  %17 = zext i1 %3 to i8
  %18 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %5, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %5, i64 0, i32 2
  %20 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %5, i64 0, i32 3
  br label %39

21:                                               ; preds = %4
  %22 = getelementptr inbounds %class.TStructure, %class.TStructure* %7, i64 0, i32 0, i32 2
  %23 = load %class.TVector*, %class.TVector** %22, align 8
  %24 = getelementptr inbounds %class.TVector, %class.TVector* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %class.TField**, %class.TField*** %24, align 8
  %26 = getelementptr inbounds %class.TVector, %class.TVector* %23, i64 0, i32 0, i32 0, i32 1
  %27 = load %class.TField**, %class.TField*** %26, align 8
  %28 = icmp eq %class.TField** %25, %27
  br i1 %28, label %52, label %29

29:                                               ; preds = %21, %29
  %30 = phi i32 [ %36, %29 ], [ %2, %21 ]
  %31 = phi %class.TField** [ %37, %29 ], [ %25, %21 ]
  %32 = load %class.TField*, %class.TField** %31, align 8
  %33 = getelementptr inbounds %class.TField, %class.TField* %32, i64 0, i32 0
  %34 = load %class.TType*, %class.TType** %33, align 8
  tail call void @_ZN4glsl9OutputASM20setPixelShaderInputsERK5TTypeib(%"class.glsl::OutputASM"* %0, %class.TType* dereferenceable(64) %34, i32 %30, i1 zeroext %3) #22
  %35 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %34) #22
  %36 = add nsw i32 %35, %30
  %37 = getelementptr inbounds %class.TField*, %class.TField** %31, i64 1
  %38 = icmp eq %class.TField** %37, %27
  br i1 %38, label %52, label %29

39:                                               ; preds = %12, %39
  %40 = phi i32 [ 0, %12 ], [ %49, %39 ]
  %41 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %13, align 8
  %42 = add nsw i32 %40, %2
  %43 = load i8, i8* %14, align 4
  %44 = icmp ugt i8 %43, 1
  %45 = load i8, i8* %15, align 1
  %46 = select i1 %44, i8 %43, i8 %45
  %47 = zext i8 %46 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #20
  %48 = trunc i32 %42 to i8
  store i8 10, i8* %16, align 1
  store i8 %48, i8* %18, align 1
  store i8 0, i8* %19, align 1
  store i8 %17, i8* %20, align 1
  call void @_ZN2sw11PixelShader8setInputEiiRKNS_6Shader8SemanticE(%"class.sw::PixelShader"* %41, i32 %42, i32 %47, %"struct.sw::Shader::Semantic"* nonnull dereferenceable(4) %5) #21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #20
  %49 = add nuw nsw i32 %40, 1
  %50 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %1) #22
  %51 = icmp slt i32 %49, %50
  br i1 %51, label %39, label %52

52:                                               ; preds = %29, %39, %21, %9
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw11PixelShader8setInputEiiRKNS_6Shader8SemanticE(%"class.sw::PixelShader"*, i32, i32, %"struct.sw::Shader::Semantic"* dereferenceable(4)) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM6lookupERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_(%"class.glsl::OutputASM"* nocapture readnone, %"class.std::__1::vector.90"* nocapture readonly dereferenceable(24), %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %class.TIntermTyped*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.90"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  %10 = inttoptr i64 %8 to %class.TIntermTyped**
  br i1 %9, label %24, label %11

11:                                               ; preds = %3
  %12 = sub i64 %6, %8
  %13 = ashr exact i64 %12, 3
  br label %14

14:                                               ; preds = %11, %20
  %15 = phi i64 [ 0, %11 ], [ %22, %20 ]
  %16 = phi i32 [ 0, %11 ], [ %21, %20 ]
  %17 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %10, i64 %15
  %18 = load %class.TIntermTyped*, %class.TIntermTyped** %17, align 8
  %19 = icmp eq %class.TIntermTyped* %18, %2
  br i1 %19, label %155, label %20

20:                                               ; preds = %14
  %21 = add i32 %16, 1
  %22 = zext i32 %21 to i64
  %23 = icmp ugt i64 %13, %22
  br i1 %23, label %14, label %24

24:                                               ; preds = %20, %3
  %25 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 0
  %26 = bitcast %class.TIntermTyped* %2 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %27 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %26, align 8
  %28 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %27, i64 7
  %29 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %28, align 8
  %30 = tail call %class.TIntermSymbol* %29(%class.TIntermNode* %25) #21
  %31 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 8
  %33 = icmp eq i8 %32, 38
  br i1 %33, label %34, label %118

34:                                               ; preds = %24
  %35 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %2, i64 0, i32 1, i32 9
  %36 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %35, align 8
  %37 = icmp eq %class.TInterfaceBlock* %36, null
  br i1 %37, label %118, label %38

38:                                               ; preds = %34
  %39 = load i64, i64* %5, align 8
  %40 = load i64, i64* %7, align 8
  %41 = icmp eq i64 %39, %40
  %42 = inttoptr i64 %40 to %class.TIntermTyped**
  br i1 %41, label %155, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %36, i64 0, i32 0, i32 1
  %45 = sub i64 %39, %40
  %46 = ashr exact i64 %45, 3
  br label %47

47:                                               ; preds = %43, %114
  %48 = phi i64 [ 0, %43 ], [ %116, %114 ]
  %49 = phi i32 [ 0, %43 ], [ %115, %114 ]
  %50 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %42, i64 %48
  %51 = load %class.TIntermTyped*, %class.TIntermTyped** %50, align 8
  %52 = icmp eq %class.TIntermTyped* %51, null
  br i1 %52, label %114, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %51, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 8
  %56 = icmp eq i8 %55, 38
  br i1 %56, label %57, label %114

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %51, i64 0, i32 1, i32 9
  %59 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %58, align 8
  %60 = icmp eq %class.TInterfaceBlock* %59, null
  br i1 %60, label %114, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %59, i64 0, i32 0, i32 1
  %63 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %62, align 8
  %64 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %44, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = zext i8 %67 to i64
  %72 = select i1 %68, i64 %70, i64 %71
  %73 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %75 to i64
  %80 = select i1 %76, i64 %78, i64 %79
  %81 = icmp eq i64 %72, %80
  br i1 %81, label %82, label %114

82:                                               ; preds = %61
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  %86 = select i1 %68, i8* %84, i8* %85
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  %90 = select i1 %76, i8* %88, i8* %89
  %91 = icmp eq i64 %72, 0
  br i1 %68, label %98, label %92

92:                                               ; preds = %82
  br i1 %91, label %155, label %93

93:                                               ; preds = %92
  %94 = ptrtoint i8* %84 to i64
  %95 = trunc i64 %94 to i8
  %96 = load i8, i8* %90, align 1
  %97 = icmp eq i8 %96, %95
  br i1 %97, label %99, label %114

98:                                               ; preds = %82
  br i1 %91, label %155, label %111

99:                                               ; preds = %93, %106
  %100 = phi i64 [ %103, %106 ], [ %71, %93 ]
  %101 = phi i8* [ %104, %106 ], [ %85, %93 ]
  %102 = phi i8* [ %107, %106 ], [ %90, %93 ]
  %103 = add i64 %100, -1
  %104 = getelementptr inbounds i8, i8* %101, i64 1
  %105 = icmp eq i64 %103, 0
  br i1 %105, label %155, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds i8, i8* %102, i64 1
  %108 = load i8, i8* %104, align 1
  %109 = load i8, i8* %107, align 1
  %110 = icmp eq i8 %108, %109
  br i1 %110, label %99, label %114

111:                                              ; preds = %98
  %112 = tail call i32 @bcmp(i8* %86, i8* %90, i64 %72) #20
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %155, label %114

114:                                              ; preds = %106, %93, %61, %53, %57, %111, %47
  %115 = add i32 %49, 1
  %116 = zext i32 %115 to i64
  %117 = icmp ugt i64 %46, %116
  br i1 %117, label %47, label %155

118:                                              ; preds = %24, %34
  %119 = icmp eq %class.TIntermSymbol* %30, null
  br i1 %119, label %155, label %120

120:                                              ; preds = %118
  %121 = load i64, i64* %5, align 8
  %122 = load i64, i64* %7, align 8
  %123 = icmp eq i64 %121, %122
  br i1 %123, label %155, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %30, i64 0, i32 1
  br label %126

126:                                              ; preds = %124, %147
  %127 = phi i64 [ %122, %124 ], [ %151, %147 ]
  %128 = phi i64 [ 0, %124 ], [ %149, %147 ]
  %129 = phi i32 [ 0, %124 ], [ %148, %147 ]
  %130 = inttoptr i64 %127 to %class.TIntermTyped**
  %131 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %130, i64 %128
  %132 = load %class.TIntermTyped*, %class.TIntermTyped** %131, align 8
  %133 = icmp eq %class.TIntermTyped* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %132, i64 0, i32 0
  %136 = bitcast %class.TIntermTyped* %132 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %137 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %136, align 8
  %138 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %137, i64 7
  %139 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %138, align 8
  %140 = tail call %class.TIntermSymbol* %139(%class.TIntermNode* %135) #21
  %141 = icmp eq %class.TIntermSymbol* %140, null
  br i1 %141, label %147, label %142

142:                                              ; preds = %134
  %143 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %140, i64 0, i32 1
  %144 = load i32, i32* %143, align 8
  %145 = load i32, i32* %125, align 8
  %146 = icmp eq i32 %144, %145
  br i1 %146, label %155, label %147

147:                                              ; preds = %134, %142, %126
  %148 = add i32 %129, 1
  %149 = zext i32 %148 to i64
  %150 = load i64, i64* %5, align 8
  %151 = load i64, i64* %7, align 8
  %152 = sub i64 %150, %151
  %153 = ashr exact i64 %152, 3
  %154 = icmp ugt i64 %153, %149
  br i1 %154, label %126, label %155

155:                                              ; preds = %14, %111, %114, %98, %92, %99, %142, %147, %38, %120, %118
  %156 = phi i32 [ -1, %118 ], [ -1, %120 ], [ -1, %38 ], [ %129, %142 ], [ -1, %147 ], [ %49, %99 ], [ %49, %111 ], [ -1, %114 ], [ %49, %98 ], [ %49, %92 ], [ %16, %14 ]
  ret i32 %156
}

; Function Attrs: optsize
declare void @_ZN2sw12VertexShader19setPositionRegisterEi(%"class.sw::VertexShader"*, i32) local_unnamed_addr #7

; Function Attrs: optsize
declare void @_ZN2sw12VertexShader20setPointSizeRegisterEi(%"class.sw::VertexShader"*, i32) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM14declareVaryingERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEi(%"class.glsl::OutputASM"* nocapture readonly, %class.TType* dereferenceable(64), %"class.std::__1::basic_string"* dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.glsl::Varying", align 8
  %8 = alloca %"class.std::__1::basic_string.4", align 8
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  %17 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 1
  %18 = load %"class.glsl::Shader"*, %"class.glsl::Shader"** %17, align 8
  %19 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %18, i64 0, i32 1
  %20 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 11
  %21 = load %class.TStructure*, %class.TStructure** %20, align 8
  %22 = icmp eq %class.TStructure* %21, null
  br i1 %22, label %126, label %23

23:                                               ; preds = %4
  %24 = getelementptr inbounds %class.TStructure, %class.TStructure* %21, i64 0, i32 0, i32 2
  %25 = load %class.TVector*, %class.TVector** %24, align 8
  %26 = getelementptr inbounds %class.TVector, %class.TVector* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %class.TField**, %class.TField*** %26, align 8
  %28 = getelementptr inbounds %class.TVector, %class.TVector* %25, i64 0, i32 0, i32 0, i32 1
  %29 = load %class.TField**, %class.TField*** %28, align 8
  %30 = icmp eq %class.TField** %27, %29
  br i1 %30, label %188, label %31

31:                                               ; preds = %23
  %32 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %33 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 1, i32 0
  %38 = bitcast %class.pool_allocator* %37 to i64*
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 1
  %40 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %39 to i64*
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 1
  %45 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %44 to i64*
  %46 = load %class.TField*, %class.TField** %27, align 8
  %47 = getelementptr inbounds %class.TField, %class.TField* %46, i64 0, i32 0
  %48 = load %class.TType*, %class.TType** %47, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #20
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #20
  %49 = load i64, i64* %38, align 8, !noalias !6
  store i64 %49, i64* %40, align 8, !alias.scope !11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #20, !alias.scope !11
  %50 = icmp slt i8 %11, 0
  %51 = load i64, i64* %41, align 8
  %52 = zext i8 %11 to i64
  %53 = select i1 %50, i64 %51, i64 %52
  %54 = add i64 %53, 1
  %55 = icmp ugt i64 %54, -17
  br i1 %55, label %58, label %56

56:                                               ; preds = %31
  %57 = select i1 %50, i8* %14, i8* %15
  br label %60

58:                                               ; preds = %112, %31
  %59 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %59) #23
  unreachable

60:                                               ; preds = %56, %112
  %61 = phi i64 [ %54, %56 ], [ %124, %112 ]
  %62 = phi i8* [ %57, %56 ], [ %123, %112 ]
  %63 = phi i64 [ %53, %56 ], [ %122, %112 ]
  %64 = phi i64 [ %49, %56 ], [ %118, %112 ]
  %65 = phi %class.TType* [ %48, %56 ], [ %117, %112 ]
  %66 = phi %class.TField** [ %27, %56 ], [ %110, %112 ]
  %67 = phi i32 [ %3, %56 ], [ %109, %112 ]
  %68 = icmp ult i64 %61, 23
  br i1 %68, label %75, label %69

69:                                               ; preds = %60
  %70 = inttoptr i64 %64 to %class.TPoolAllocator*
  %71 = add nuw i64 %63, 17
  %72 = and i64 %71, -16
  %73 = call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %70, i64 %72) #21
  store i8* %73, i8** %34, align 8, !alias.scope !11
  %74 = or i64 %72, -9223372036854775808
  store i64 %74, i64* %36, align 8, !alias.scope !11
  store i64 %63, i64* %35, align 8, !alias.scope !11
  br label %78

75:                                               ; preds = %60
  %76 = trunc i64 %63 to i8
  store i8 %76, i8* %43, align 1, !alias.scope !11
  %77 = icmp eq i64 %63, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %69, %75
  %79 = phi i8* [ %73, %69 ], [ %33, %75 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %79, i8* align 1 %62, i64 %63, i1 false) #20
  br label %80

80:                                               ; preds = %75, %78
  %81 = phi i8* [ %33, %75 ], [ %79, %78 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %63
  store i8 0, i8* %82, align 1
  %83 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i64 0, i64 0), i64 1) #21
  %84 = load %class.TField*, %class.TField** %66, align 8
  %85 = getelementptr inbounds %class.TField, %class.TField* %84, i64 0, i32 1
  %86 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %85, align 8
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1, !noalias !12
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8, !noalias !12
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8, !noalias !12
  %95 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  %96 = zext i8 %89 to i64
  %97 = select i1 %90, i8* %92, i8* %95
  %98 = select i1 %90, i64 %94, i64 %96
  %99 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %97, i64 %98) #21, !noalias !12
  %100 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %100, i64 24, i1 false) #20
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 1
  %102 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %101 to i64*
  %103 = load i64, i64* %102, align 8, !noalias !12
  store i64 %103, i64* %45, align 8, !alias.scope !12
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 24, i1 false) #20, !noalias !12
  call void @_ZN4glsl9OutputASM14declareVaryingERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEi(%"class.glsl::OutputASM"* %0, %class.TType* dereferenceable(64) %65, %"class.std::__1::basic_string"* nonnull dereferenceable(32) %5, i32 %67) #22
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #20
  %104 = icmp sgt i32 %67, -1
  br i1 %104, label %105, label %108

105:                                              ; preds = %80
  %106 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %65) #22
  %107 = add nsw i32 %106, %67
  br label %108

108:                                              ; preds = %105, %80
  %109 = phi i32 [ %107, %105 ], [ %67, %80 ]
  %110 = getelementptr inbounds %class.TField*, %class.TField** %66, i64 1
  %111 = icmp eq %class.TField** %110, %29
  br i1 %111, label %188, label %112

112:                                              ; preds = %108
  %113 = load i8, i8* %10, align 1, !noalias !11
  %114 = load i8*, i8** %13, align 8
  %115 = load %class.TField*, %class.TField** %110, align 8
  %116 = getelementptr inbounds %class.TField, %class.TField* %115, i64 0, i32 0
  %117 = load %class.TType*, %class.TType** %116, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #20
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #20
  %118 = load i64, i64* %38, align 8, !noalias !6
  store i64 %118, i64* %40, align 8, !alias.scope !11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #20, !alias.scope !11
  %119 = icmp slt i8 %113, 0
  %120 = load i64, i64* %41, align 8
  %121 = zext i8 %113 to i64
  %122 = select i1 %119, i64 %120, i64 %121
  %123 = select i1 %119, i8* %114, i8* %15
  %124 = add i64 %122, 1
  %125 = icmp ugt i64 %124, -17
  br i1 %125, label %58, label %60

126:                                              ; preds = %4
  %127 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %18, i64 0, i32 1, i32 0, i32 0, i32 1
  %128 = bitcast %"struct.std::__1::__list_node_base"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %19, i64 0, i32 0, i32 0
  %131 = inttoptr i64 %129 to %"struct.std::__1::__list_node_base"*
  %132 = icmp eq %"struct.std::__1::__list_node_base"* %130, %131
  br i1 %132, label %162, label %133

133:                                              ; preds = %126, %156
  %134 = phi %"struct.std::__1::__list_node_base"* [ %160, %156 ], [ %131, %126 ]
  %135 = phi i64 [ %159, %156 ], [ %129, %126 ]
  %136 = inttoptr i64 %135 to %"struct.std::__1::__list_node"*
  %137 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %136, i64 0, i32 1, i32 0, i32 2
  %138 = tail call i64 @strlen(i8* %16) #21
  %139 = bitcast %"class.std::__1::basic_string.4"* %137 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  %143 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %136, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = zext i8 %141 to i64
  %146 = select i1 %142, i64 %144, i64 %145
  %147 = icmp eq i64 %138, %146
  br i1 %147, label %148, label %156

148:                                              ; preds = %133
  %149 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string.4"* %137, i64 0, i64 -1, i8* %16, i64 %138) #21
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %156

151:                                              ; preds = %148
  %152 = icmp sgt i32 %3, -1
  br i1 %152, label %153, label %188

153:                                              ; preds = %151
  %154 = inttoptr i64 %135 to %"struct.std::__1::__list_node"*
  %155 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %154, i64 0, i32 1, i32 0, i32 4
  store i32 %3, i32* %155, align 4
  br label %188

156:                                              ; preds = %133, %148
  %157 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %134, i64 0, i32 1
  %158 = bitcast %"struct.std::__1::__list_node_base"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = inttoptr i64 %159 to %"struct.std::__1::__list_node_base"*
  %161 = icmp eq %"struct.std::__1::__list_node_base"* %130, %160
  br i1 %161, label %162, label %133

162:                                              ; preds = %156, %126
  %163 = bitcast %"struct.glsl::Varying"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %163) #20
  %164 = bitcast %"class.std::__1::basic_string.4"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %164) #20
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string.4"* nonnull %8, i8* %16) #22
  %165 = getelementptr inbounds %"struct.glsl::Varying", %"struct.glsl::Varying"* %7, i64 0, i32 0
  call void @_ZN4glsl14ShaderVariableC2ERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEi(%"struct.glsl::ShaderVariable"* nonnull %165, %class.TType* dereferenceable(64) %1, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %8, i32 %3) #21
  %166 = getelementptr inbounds %"struct.glsl::Varying", %"struct.glsl::Varying"* %7, i64 0, i32 1
  %167 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 2
  %168 = load i8, i8* %167, align 2
  store i8 %168, i8* %166, align 8
  %169 = getelementptr inbounds %"struct.glsl::Varying", %"struct.glsl::Varying"* %7, i64 0, i32 2
  store i32 0, i32* %169, align 4
  call void @_ZNSt3__14listIN4glsl7VaryingENS_9allocatorIS2_EEE9push_backEOS2_(%"class.std::__1::list"* %19, %"struct.glsl::Varying"* nonnull dereferenceable(72) %7) #22
  %170 = getelementptr inbounds %"struct.glsl::Varying", %"struct.glsl::Varying"* %7, i64 0, i32 0, i32 5, i32 0
  call void @_ZNSt3__113__vector_baseIN4glsl14ShaderVariableENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.13"* %170) #21
  %171 = getelementptr inbounds %"struct.glsl::Varying", %"struct.glsl::Varying"* %7, i64 0, i32 0, i32 2
  %172 = bitcast %"class.std::__1::basic_string.4"* %171 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %162
  %177 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load i8*, i8** %177, align 8
  call void @_ZdlPv(i8* %178) #24
  br label %179

179:                                              ; preds = %162, %176
  %180 = bitcast %"class.std::__1::basic_string.4"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %180, i64 0, i32 1, i32 0
  %182 = load i8, i8* %181, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %187

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  call void @_ZdlPv(i8* %186) #24
  br label %187

187:                                              ; preds = %179, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #20
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %163) #20
  br label %188

188:                                              ; preds = %108, %23, %153, %151, %187
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN4glsl7VaryingENS_9allocatorIS2_EEE9push_backEOS2_(%"class.std::__1::list"*, %"struct.glsl::Varying"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 88) #24, !noalias !15
  %4 = bitcast i8* %3 to %"struct.std::__1::__list_node_base"**
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast %"struct.glsl::Varying"* %1 to i64*
  %7 = bitcast i8* %5 to i64*
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 24
  %10 = getelementptr inbounds %"struct.glsl::Varying", %"struct.glsl::Varying"* %1, i64 0, i32 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %11, i64 24, i1 false) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #20
  %12 = getelementptr inbounds i8, i8* %3, i64 48
  %13 = getelementptr inbounds %"struct.glsl::Varying", %"struct.glsl::Varying"* %1, i64 0, i32 0, i32 3
  %14 = getelementptr inbounds %"struct.glsl::Varying", %"struct.glsl::Varying"* %1, i64 0, i32 0, i32 5
  %15 = bitcast i32* %13 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  %17 = bitcast i8* %12 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds %"struct.glsl::Varying", %"struct.glsl::Varying"* %1, i64 0, i32 0, i32 5, i32 0, i32 1
  %19 = getelementptr inbounds i8, i8* %3, i64 64
  %20 = bitcast %"struct.glsl::ShaderVariable"** %18 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8
  %22 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> %21, <2 x i64>* %22, align 8
  %23 = bitcast %"class.std::__1::vector.12"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #20
  %24 = getelementptr inbounds i8, i8* %3, i64 80
  %25 = getelementptr inbounds %"struct.glsl::Varying", %"struct.glsl::Varying"* %1, i64 0, i32 1
  %26 = bitcast i8* %25 to i64*
  %27 = bitcast i8* %24 to i64*
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds i8, i8* %3, i64 8
  %31 = bitcast i8* %30 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %29, %"struct.std::__1::__list_node_base"** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %32, align 8
  store %"struct.std::__1::__list_node_base"* %33, %"struct.std::__1::__list_node_base"** %4, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %33, i64 0, i32 1
  %35 = bitcast %"struct.std::__1::__list_node_base"** %34 to i8**
  store i8* %3, i8** %35, align 8
  %36 = bitcast %"class.std::__1::list"* %0 to i8**
  store i8* %3, i8** %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %37, align 8
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM6lookupERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEEP15TInterfaceBlock(%"class.glsl::OutputASM"* nocapture readnone, %"class.std::__1::vector.90"* nocapture readonly dereferenceable(24), %class.TInterfaceBlock* readnone) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %class.TIntermTyped*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.90"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  %10 = inttoptr i64 %8 to %class.TIntermTyped**
  br i1 %9, label %28, label %11

11:                                               ; preds = %3
  %12 = sub i64 %6, %8
  %13 = ashr exact i64 %12, 3
  br label %14

14:                                               ; preds = %11, %24
  %15 = phi i64 [ 0, %11 ], [ %26, %24 ]
  %16 = phi i32 [ 0, %11 ], [ %25, %24 ]
  %17 = getelementptr inbounds %class.TIntermTyped*, %class.TIntermTyped** %10, i64 %15
  %18 = load %class.TIntermTyped*, %class.TIntermTyped** %17, align 8
  %19 = icmp eq %class.TIntermTyped* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %18, i64 0, i32 1, i32 9
  %22 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %21, align 8
  %23 = icmp eq %class.TInterfaceBlock* %22, %2
  br i1 %23, label %28, label %24

24:                                               ; preds = %14, %20
  %25 = add i32 %16, 1
  %26 = zext i32 %25 to i64
  %27 = icmp ugt i64 %13, %26
  br i1 %27, label %14, label %28

28:                                               ; preds = %20, %24, %3
  %29 = phi i32 [ -1, %3 ], [ -1, %24 ], [ %16, %20 ]
  ret i32 %29
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM17blockMemberLookupERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEi(%"class.glsl::OutputASM"* nocapture readonly, %class.TType* nocapture readonly dereferenceable(64), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 9
  %6 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %5, align 8
  %7 = icmp eq %class.TInterfaceBlock* %6, null
  br i1 %7, label %143, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 1
  %10 = load %"class.glsl::Shader"*, %"class.glsl::Shader"** %9, align 8
  %11 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %6, i64 0, i32 0, i32 2
  %12 = load %class.TVector*, %class.TVector** %11, align 8
  %13 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %6, i64 0, i32 0, i32 1
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 0
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 38
  br i1 %17, label %143, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %10, i64 0, i32 5
  %20 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %10, i64 0, i32 5, i32 0, i32 1
  %21 = bitcast %"struct.glsl::UniformBlock"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.69"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  br i1 %25, label %143, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %26, %136
  %32 = phi i64 [ %24, %26 ], [ %137, %136 ]
  %33 = phi i64 [ %22, %26 ], [ %138, %136 ]
  %34 = phi i64 [ 0, %26 ], [ %139, %136 ]
  %35 = inttoptr i64 %32 to %"struct.glsl::UniformBlock"*
  %36 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %35, i64 %34, i32 0
  %37 = load i8, i8* %28, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %31
  %40 = load i8*, i8** %30, align 8
  br label %41

41:                                               ; preds = %31, %39
  %42 = phi i8* [ %40, %39 ], [ %29, %31 ]
  %43 = tail call i64 @strlen(i8* %42) #21
  %44 = bitcast %"class.std::__1::basic_string.4"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  %48 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %35, i64 %34, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = zext i8 %46 to i64
  %51 = select i1 %47, i64 %49, i64 %50
  %52 = icmp eq i64 %43, %51
  br i1 %52, label %53, label %136

53:                                               ; preds = %41
  %54 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string.4"* %36, i64 0, i64 -1, i8* %42, i64 %43) #21
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = load i64, i64* %21, align 8
  %58 = load i64, i64* %23, align 8
  br label %136

59:                                               ; preds = %53
  %60 = getelementptr inbounds %class.TVector, %class.TVector* %12, i64 0, i32 0, i32 0, i32 1
  %61 = bitcast %class.TField*** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %class.TVector* %12 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %62, %64
  br i1 %65, label %143, label %66

66:                                               ; preds = %59
  %67 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %72

72:                                               ; preds = %66, %125
  %73 = phi i64 [ %64, %66 ], [ %132, %125 ]
  %74 = phi i64 [ 0, %66 ], [ %130, %125 ]
  %75 = phi i32 [ %3, %66 ], [ %129, %125 ]
  %76 = inttoptr i64 %73 to %class.TField**
  %77 = getelementptr inbounds %class.TField*, %class.TField** %76, i64 %74
  %78 = load %class.TField*, %class.TField** %77, align 8
  %79 = getelementptr inbounds %class.TField, %class.TField* %78, i64 0, i32 1
  %80 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %79, align 8
  %81 = bitcast %"class.std::__1::basic_string"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = zext i8 %83 to i64
  %88 = select i1 %84, i64 %86, i64 %87
  %89 = load i8, i8* %68, align 1
  %90 = icmp slt i8 %89, 0
  %91 = load i64, i64* %69, align 8
  %92 = zext i8 %89 to i64
  %93 = select i1 %90, i64 %91, i64 %92
  %94 = icmp eq i64 %88, %93
  br i1 %94, label %95, label %125

95:                                               ; preds = %72
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = bitcast %"class.std::__1::basic_string"* %80 to i8*
  %99 = select i1 %84, i8* %97, i8* %98
  %100 = load i8*, i8** %70, align 8
  %101 = select i1 %90, i8* %100, i8* %71
  %102 = icmp eq i64 %88, 0
  br i1 %84, label %109, label %103

103:                                              ; preds = %95
  br i1 %102, label %143, label %104

104:                                              ; preds = %103
  %105 = ptrtoint i8* %97 to i64
  %106 = trunc i64 %105 to i8
  %107 = load i8, i8* %101, align 1
  %108 = icmp eq i8 %107, %106
  br i1 %108, label %110, label %125

109:                                              ; preds = %95
  br i1 %102, label %143, label %122

110:                                              ; preds = %104, %117
  %111 = phi i64 [ %114, %117 ], [ %87, %104 ]
  %112 = phi i8* [ %115, %117 ], [ %98, %104 ]
  %113 = phi i8* [ %118, %117 ], [ %101, %104 ]
  %114 = add i64 %111, -1
  %115 = getelementptr inbounds i8, i8* %112, i64 1
  %116 = icmp eq i64 %114, 0
  br i1 %116, label %143, label %117

117:                                              ; preds = %110
  %118 = getelementptr inbounds i8, i8* %113, i64 1
  %119 = load i8, i8* %115, align 1
  %120 = load i8, i8* %118, align 1
  %121 = icmp eq i8 %119, %120
  br i1 %121, label %110, label %125

122:                                              ; preds = %109
  %123 = tail call i32 @bcmp(i8* %99, i8* %101, i64 %88) #20
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %143, label %125

125:                                              ; preds = %117, %104, %72, %122
  %126 = getelementptr inbounds %class.TField, %class.TField* %78, i64 0, i32 0
  %127 = load %class.TType*, %class.TType** %126, align 8
  %128 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %127) #22
  %129 = add nsw i32 %128, %75
  %130 = add nuw i64 %74, 1
  %131 = load i64, i64* %61, align 8
  %132 = load i64, i64* %63, align 8
  %133 = sub i64 %131, %132
  %134 = ashr exact i64 %133, 3
  %135 = icmp ult i64 %130, %134
  br i1 %135, label %72, label %143

136:                                              ; preds = %56, %41
  %137 = phi i64 [ %58, %56 ], [ %32, %41 ]
  %138 = phi i64 [ %57, %56 ], [ %33, %41 ]
  %139 = add nuw i64 %34, 1
  %140 = sub i64 %138, %137
  %141 = sdiv exact i64 %140, 72
  %142 = icmp ult i64 %139, %141
  br i1 %142, label %31, label %143

143:                                              ; preds = %136, %122, %109, %103, %125, %110, %59, %18, %8, %4
  %144 = phi i32 [ -1, %4 ], [ -1, %8 ], [ %3, %59 ], [ -1, %18 ], [ %75, %110 ], [ %75, %122 ], [ %75, %109 ], [ %75, %103 ], [ %129, %125 ], [ -1, %136 ]
  ret i32 %144
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM14declareUniformERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEibiPNS_18BlockLayoutEncoderE(%"class.glsl::OutputASM"*, %class.TType* dereferenceable(64), %"class.std::__1::basic_string"* dereferenceable(32), i32, i1 zeroext, i32, %"class.glsl::BlockLayoutEncoder"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"struct.std::__1::__split_buffer.222", align 8
  %9 = alloca [20 x i8], align 16
  %10 = alloca %"struct.std::__1::__split_buffer.228", align 8
  %11 = alloca %"struct.std::__1::__split_buffer.225", align 8
  %12 = alloca %"struct.std::__1::__split_buffer.222", align 8
  %13 = alloca %"struct.std::__1::pair.185", align 8
  %14 = alloca %"struct.glsl::Uniform", align 8
  %15 = alloca %"class.std::__1::basic_string.4", align 8
  %16 = alloca %"struct.glsl::UniformBlock", align 8
  %17 = alloca %"class.std::__1::basic_string.4", align 8
  %18 = alloca %"class.std::__1::map", align 8
  %19 = alloca %"class.glsl::Std140BlockEncoder", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"struct.glsl::Uniform", align 8
  %23 = alloca %"class.std::__1::basic_string.4", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"class.std::__1::basic_string", align 8
  %30 = alloca %"class.std::__1::basic_string", align 8
  %31 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 11
  %32 = load %class.TStructure*, %class.TStructure** %31, align 8
  %33 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 0
  %34 = load i8, i8* %33, align 8
  %35 = icmp eq i8 %34, 38
  %36 = icmp eq i32 %5, -1
  %37 = or i1 %36, %35
  %38 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 9
  %39 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %38, align 8
  %40 = select i1 %37, %class.TInterfaceBlock* %39, %class.TInterfaceBlock* null
  %41 = icmp ne %class.TStructure* %32, null
  %42 = icmp ne %class.TInterfaceBlock* %40, null
  %43 = or i1 %41, %42
  %44 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 1
  %45 = load %"class.glsl::Shader"*, %"class.glsl::Shader"** %44, align 8
  br i1 %43, label %327, label %46

46:                                               ; preds = %7
  %47 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %45, i64 0, i32 2
  %48 = icmp ne %"class.glsl::BlockLayoutEncoder"* %6, null
  br i1 %48, label %49, label %55

49:                                               ; preds = %46
  %50 = tail call { i64, i64 } @_ZN4glsl18BlockLayoutEncoder10encodeTypeERK5TType(%"class.glsl::BlockLayoutEncoder"* nonnull %6, %class.TType* dereferenceable(64) %1) #22
  %51 = extractvalue { i64, i64 } %50, 0
  %52 = trunc i64 %51 to i32
  %53 = extractvalue { i64, i64 } %50, 1
  %54 = and i64 %51, -4294967296
  br label %55

55:                                               ; preds = %46, %49
  %56 = phi i64 [ %53, %49 ], [ 4294967295, %46 ]
  %57 = phi i32 [ %52, %49 ], [ -1, %46 ]
  %58 = phi i64 [ %54, %49 ], [ -4294967296, %46 ]
  %59 = icmp sgt i32 %5, -1
  br i1 %59, label %60, label %153

60:                                               ; preds = %55
  %61 = sext i32 %5 to i64
  %62 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 11, i32 0, i32 0
  %63 = load %"class.std::__1::map"*, %"class.std::__1::map"** %62, align 8
  %64 = bitcast %"struct.std::__1::pair.185"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %64) #20
  %65 = zext i32 %57 to i64
  %66 = or i64 %58, %65
  %67 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %13, i64 0, i32 0
  store i32 %3, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %13, i64 0, i32 1
  %69 = bitcast %"struct.glsl::OutputASM::TypedMemberInfo"* %68 to i64*
  store i64 %66, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %13, i64 0, i32 1, i32 0, i32 2
  %71 = bitcast i32* %70 to i64*
  store i64 %56, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %13, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %33, i64 64, i1 false)
  %73 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %63, i64 %61, i32 0
  %74 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIiJNS_4pairIKiS4_EEEEENSE_INS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %73, i32* nonnull dereferenceable(4) %67, %"struct.std::__1::pair.185"* nonnull dereferenceable(88) %13) #21
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %64) #20
  %75 = load %"class.glsl::Shader"*, %"class.glsl::Shader"** %44, align 8
  %76 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %75, i64 0, i32 5, i32 0, i32 0
  %77 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %76, align 8
  %78 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %77, i64 %61, i32 5
  %79 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %45, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"struct.glsl::Uniform"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.std::__1::vector.55"* %47 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 %81, %83
  %85 = sdiv exact i64 %84, 88
  %86 = trunc i64 %85 to i32
  %87 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %77, i64 %61, i32 5, i32 0, i32 1
  %88 = load i32*, i32** %87, align 8
  %89 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %77, i64 %61, i32 5, i32 0, i32 2, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = icmp ult i32* %88, %90
  %92 = ptrtoint i32* %90 to i64
  br i1 %91, label %93, label %97

93:                                               ; preds = %60
  store i32 %86, i32* %88, align 4
  %94 = getelementptr inbounds i32, i32* %88, i64 1
  %95 = ptrtoint i32* %94 to i64
  %96 = bitcast i32** %87 to i64*
  store i64 %95, i64* %96, align 8
  br label %153

97:                                               ; preds = %60
  %98 = ptrtoint i32* %88 to i64
  %99 = bitcast i32** %87 to i64*
  %100 = bitcast %"class.std::__1::vector.25"* %78 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %98, %101
  %103 = ashr exact i64 %102, 2
  %104 = add nsw i64 %103, 1
  %105 = icmp ugt i64 %104, 4611686018427387903
  br i1 %105, label %106, label %108

106:                                              ; preds = %97
  %107 = bitcast %"class.std::__1::vector.25"* %78 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %107) #23
  unreachable

108:                                              ; preds = %97
  %109 = bitcast i32** %89 to i64*
  %110 = sub i64 %92, %101
  %111 = ashr exact i64 %110, 2
  %112 = icmp ult i64 %111, 2305843009213693951
  br i1 %112, label %113, label %121

113:                                              ; preds = %108
  %114 = ashr exact i64 %110, 1
  %115 = icmp ult i64 %114, %104
  %116 = select i1 %115, i64 %104, i64 %114
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %126, label %118

118:                                              ; preds = %113
  %119 = icmp ugt i64 %116, 4611686018427387903
  br i1 %119, label %120, label %121

120:                                              ; preds = %118
  call void @abort() #23
  unreachable

121:                                              ; preds = %118, %108
  %122 = phi i64 [ %116, %118 ], [ 4611686018427387903, %108 ]
  %123 = shl i64 %122, 2
  %124 = call i8* @_Znwm(i64 %123) #24
  %125 = bitcast i8* %124 to i32*
  br label %126

126:                                              ; preds = %121, %113
  %127 = phi i64 [ %122, %121 ], [ 0, %113 ]
  %128 = phi i32* [ %125, %121 ], [ null, %113 ]
  %129 = getelementptr inbounds i32, i32* %128, i64 %103
  %130 = getelementptr inbounds i32, i32* %128, i64 %127
  %131 = ptrtoint i32* %130 to i64
  store i32 %86, i32* %129, align 4
  %132 = getelementptr inbounds i32, i32* %129, i64 1
  %133 = ptrtoint i32* %132 to i64
  %134 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %78, i64 0, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = load i64, i64* %99, align 8
  %137 = ptrtoint i32* %135 to i64
  %138 = sub i64 %136, %137
  %139 = ashr exact i64 %138, 2
  %140 = sub nsw i64 0, %139
  %141 = getelementptr inbounds i32, i32* %129, i64 %140
  %142 = ptrtoint i32* %141 to i64
  %143 = icmp sgt i64 %138, 0
  br i1 %143, label %144, label %148

144:                                              ; preds = %126
  %145 = bitcast i32* %141 to i8*
  %146 = bitcast i32* %135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %146, i64 %138, i1 false) #20
  %147 = load i32*, i32** %134, align 8
  br label %148

148:                                              ; preds = %144, %126
  %149 = phi i32* [ %135, %126 ], [ %147, %144 ]
  store i64 %142, i64* %100, align 8
  store i64 %133, i64* %99, align 8
  store i64 %131, i64* %109, align 8
  %150 = icmp eq i32* %149, null
  br i1 %150, label %153, label %151

151:                                              ; preds = %148
  %152 = bitcast i32* %149 to i8*
  call void @_ZdlPv(i8* %152) #24
  br label %153

153:                                              ; preds = %151, %148, %93, %55
  br i1 %48, label %154, label %165

154:                                              ; preds = %153
  %155 = load %"class.glsl::Shader"*, %"class.glsl::Shader"** %44, align 8
  %156 = sext i32 %5 to i64
  %157 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %155, i64 0, i32 5, i32 0, i32 0
  %158 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %157, align 8
  %159 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %158, i64 %156, i32 6
  %160 = load i32, i32* %159, align 8
  %161 = sext i32 %160 to i64
  %162 = sext i32 %57 to i64
  %163 = lshr i64 %162, 4
  %164 = add nsw i64 %163, %161
  br label %167

165:                                              ; preds = %153
  %166 = sext i32 %3 to i64
  br label %167

167:                                              ; preds = %165, %154
  %168 = phi i64 [ %164, %154 ], [ %166, %165 ]
  %169 = trunc i64 %168 to i32
  %170 = load i8, i8* %33, align 8
  %171 = add i8 %170, -15
  %172 = icmp ult i8 %171, 17
  %173 = and i1 %172, %4
  br i1 %173, label %174, label %186

174:                                              ; preds = %167
  %175 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %1) #22
  %176 = icmp sgt i32 %175, 0
  br i1 %176, label %177, label %186

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 2
  br label %179

179:                                              ; preds = %177, %179
  %180 = phi i32 [ 0, %177 ], [ %183, %179 ]
  %181 = load %"class.sw::Shader"*, %"class.sw::Shader"** %178, align 8
  %182 = add nsw i32 %180, %169
  call void @_ZN2sw6Shader14declareSamplerEi(%"class.sw::Shader"* %181, i32 %182) #21
  %183 = add nuw nsw i32 %180, 1
  %184 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %1) #22
  %185 = icmp slt i32 %183, %184
  br i1 %185, label %179, label %186

186:                                              ; preds = %179, %174, %167
  %187 = xor i1 %172, %4
  br i1 %187, label %1074, label %188

188:                                              ; preds = %186
  %189 = bitcast %"struct.glsl::Uniform"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %189) #20
  %190 = bitcast %"class.std::__1::basic_string.4"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #20
  %191 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load i8*, i8** %195, align 8
  %197 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %198 = select i1 %194, i8* %196, i8* %197
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string.4"* nonnull %15, i8* %198) #22
  %199 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 0
  call void @_ZN4glsl14ShaderVariableC2ERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEi(%"struct.glsl::ShaderVariable"* nonnull %199, %class.TType* dereferenceable(64) %1, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %15, i32 %169) #21
  %200 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 1
  store i32 %5, i32* %200, align 8
  %201 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 2
  %202 = bitcast %"struct.glsl::BlockMemberInfo"* %201 to i64*
  %203 = zext i32 %57 to i64
  %204 = or i64 %58, %203
  store i64 %204, i64* %202, align 4
  %205 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 2, i32 2
  %206 = bitcast i32* %205 to i64*
  store i64 %56, i64* %206, align 4
  %207 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %45, i64 0, i32 2, i32 0, i32 1
  %208 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %207, align 8
  %209 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %45, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %210 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %209, align 8
  %211 = icmp ult %"struct.glsl::Uniform"* %208, %210
  %212 = ptrtoint %"struct.glsl::Uniform"* %210 to i64
  br i1 %211, label %213, label %249

213:                                              ; preds = %188
  %214 = bitcast %"struct.glsl::Uniform"* %14 to i64*
  %215 = bitcast %"struct.glsl::Uniform"* %208 to i64*
  %216 = load i64, i64* %214, align 8
  store i64 %216, i64* %215, align 8
  %217 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %208, i64 0, i32 0, i32 2
  %218 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 0, i32 2
  %219 = bitcast %"class.std::__1::basic_string.4"* %217 to i8*
  %220 = bitcast %"class.std::__1::basic_string.4"* %218 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %220, i64 24, i1 false) #20
  call void @llvm.memset.p0i8.i64(i8* align 8 %220, i8 0, i64 24, i1 false) #20
  %221 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %208, i64 0, i32 0, i32 3
  %222 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 0, i32 3
  %223 = bitcast i32* %222 to i64*
  %224 = bitcast i32* %221 to i64*
  %225 = load i64, i64* %223, align 8
  store i64 %225, i64* %224, align 8
  %226 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %208, i64 0, i32 0, i32 5
  %227 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 0, i32 5
  %228 = bitcast %"class.std::__1::vector.12"* %226 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %228, i8 0, i64 24, i1 false) #20
  %229 = bitcast %"class.std::__1::vector.12"* %227 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.std::__1::vector.12"* %226 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 0, i32 5, i32 0, i32 1
  %233 = bitcast %"struct.glsl::ShaderVariable"** %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %208, i64 0, i32 0, i32 5, i32 0, i32 1
  %236 = bitcast %"struct.glsl::ShaderVariable"** %235 to i64*
  store i64 %234, i64* %236, align 8
  %237 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %238 = bitcast %"struct.glsl::ShaderVariable"** %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %208, i64 0, i32 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %241 = bitcast %"struct.glsl::ShaderVariable"** %240 to i64*
  store i64 %239, i64* %241, align 8
  %242 = bitcast %"class.std::__1::vector.12"* %227 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %242, i8 0, i64 24, i1 false) #20
  %243 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %208, i64 0, i32 1
  %244 = bitcast i32* %243 to i8*
  %245 = bitcast i32* %200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %244, i8* align 8 %245, i64 17, i1 false) #20
  %246 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %208, i64 1
  %247 = ptrtoint %"struct.glsl::Uniform"* %246 to i64
  %248 = bitcast %"struct.glsl::Uniform"** %207 to i64*
  store i64 %247, i64* %248, align 8
  br label %308

249:                                              ; preds = %188
  %250 = ptrtoint %"struct.glsl::Uniform"* %208 to i64
  %251 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %45, i64 0, i32 2, i32 0, i32 2
  %252 = bitcast %"class.std::__1::__compressed_pair.57"* %251 to %"class.std::__1::allocator.60"*
  %253 = bitcast %"struct.std::__1::__split_buffer.222"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %253) #20
  %254 = getelementptr inbounds %"struct.std::__1::__split_buffer.222", %"struct.std::__1::__split_buffer.222"* %12, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %253, i8 -86, i64 40, i1 false) #20
  %255 = bitcast %"class.std::__1::vector.55"* %47 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = sub i64 %250, %256
  %258 = sdiv exact i64 %257, 88
  %259 = add nsw i64 %258, 1
  %260 = icmp ugt i64 %259, 209622091746699450
  br i1 %260, label %261, label %263

261:                                              ; preds = %249
  %262 = bitcast %"class.std::__1::vector.55"* %47 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %262) #23
  unreachable

263:                                              ; preds = %249
  %264 = sub i64 %212, %256
  %265 = sdiv exact i64 %264, 88
  %266 = icmp ult i64 %265, 104811045873349725
  br i1 %266, label %267, label %271

267:                                              ; preds = %263
  %268 = shl nsw i64 %265, 1
  %269 = icmp ult i64 %268, %259
  %270 = select i1 %269, i64 %259, i64 %268
  br label %271

271:                                              ; preds = %263, %267
  %272 = phi i64 [ %270, %267 ], [ 209622091746699450, %263 ]
  call void @_ZNSt3__114__split_bufferIN4glsl7UniformERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer.222"* nonnull %12, i64 %272, i64 %258, %"class.std::__1::allocator.60"* dereferenceable(1) %252) #21
  %273 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %254, align 8
  %274 = bitcast %"struct.glsl::Uniform"* %14 to i64*
  %275 = bitcast %"struct.glsl::Uniform"* %273 to i64*
  %276 = load i64, i64* %274, align 8
  store i64 %276, i64* %275, align 8
  %277 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %273, i64 0, i32 0, i32 2
  %278 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 0, i32 2
  %279 = bitcast %"class.std::__1::basic_string.4"* %277 to i8*
  %280 = bitcast %"class.std::__1::basic_string.4"* %278 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* align 8 %280, i64 24, i1 false) #20
  call void @llvm.memset.p0i8.i64(i8* align 8 %280, i8 0, i64 24, i1 false) #20
  %281 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %273, i64 0, i32 0, i32 3
  %282 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 0, i32 3
  %283 = bitcast i32* %282 to i64*
  %284 = bitcast i32* %281 to i64*
  %285 = load i64, i64* %283, align 8
  store i64 %285, i64* %284, align 8
  %286 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %273, i64 0, i32 0, i32 5
  %287 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 0, i32 5
  %288 = bitcast %"class.std::__1::vector.12"* %286 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %288, i8 0, i64 24, i1 false) #20
  %289 = bitcast %"class.std::__1::vector.12"* %287 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.std::__1::vector.12"* %286 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 0, i32 5, i32 0, i32 1
  %293 = bitcast %"struct.glsl::ShaderVariable"** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %273, i64 0, i32 0, i32 5, i32 0, i32 1
  %296 = bitcast %"struct.glsl::ShaderVariable"** %295 to i64*
  store i64 %294, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %298 = bitcast %"struct.glsl::ShaderVariable"** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %273, i64 0, i32 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %301 = bitcast %"struct.glsl::ShaderVariable"** %300 to i64*
  store i64 %299, i64* %301, align 8
  %302 = bitcast %"class.std::__1::vector.12"* %287 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %302, i8 0, i64 24, i1 false) #20
  %303 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %273, i64 0, i32 1
  %304 = bitcast i32* %303 to i8*
  %305 = bitcast i32* %200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %304, i8* align 8 %305, i64 17, i1 false) #20
  %306 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %254, align 8
  %307 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %306, i64 1
  store %"struct.glsl::Uniform"* %307, %"struct.glsl::Uniform"** %254, align 8
  call void @_ZNSt3__16vectorIN4glsl7UniformENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.55"* %47, %"struct.std::__1::__split_buffer.222"* nonnull dereferenceable(40) %12) #21
  call void @_ZNSt3__114__split_bufferIN4glsl7UniformERNS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__split_buffer.222"* nonnull %12) #21
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %253) #20
  br label %308

308:                                              ; preds = %213, %271
  %309 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 0, i32 5, i32 0
  call void @_ZNSt3__113__vector_baseIN4glsl14ShaderVariableENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.13"* %309) #21
  %310 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 0, i32 0, i32 2
  %311 = bitcast %"class.std::__1::basic_string.4"* %310 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %312 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %311, i64 0, i32 1, i32 0
  %313 = load i8, i8* %312, align 1
  %314 = icmp slt i8 %313, 0
  br i1 %314, label %315, label %318

315:                                              ; preds = %308
  %316 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %310, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load i8*, i8** %316, align 8
  call void @_ZdlPv(i8* %317) #24
  br label %318

318:                                              ; preds = %308, %315
  %319 = bitcast %"class.std::__1::basic_string.4"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %319, i64 0, i32 1, i32 0
  %321 = load i8, i8* %320, align 1
  %322 = icmp slt i8 %321, 0
  br i1 %322, label %323, label %326

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load i8*, i8** %324, align 8
  call void @_ZdlPv(i8* %325) #24
  br label %326

326:                                              ; preds = %318, %323
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #20
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %189) #20
  br label %1074

327:                                              ; preds = %7
  br i1 %42, label %328, label %693

328:                                              ; preds = %327
  %329 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %45, i64 0, i32 5
  %330 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %40, i64 0, i32 0, i32 2
  %331 = load %class.TVector*, %class.TVector** %330, align 8
  %332 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %40, i64 0, i32 0, i32 1
  %333 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %332, align 8
  %334 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %45, i64 0, i32 5, i32 0, i32 1
  %335 = bitcast %"struct.glsl::UniformBlock"** %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = bitcast %"class.std::__1::vector.69"* %329 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = sub i64 %336, %338
  %340 = sdiv exact i64 %339, 72
  %341 = trunc i64 %340 to i32
  %342 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %40, i64 0, i32 4
  %343 = load i32, i32* %342, align 8
  %344 = icmp eq i32 %343, 1
  %345 = bitcast %"struct.glsl::UniformBlock"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %345) #20
  %346 = bitcast %"class.std::__1::basic_string.4"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %346) #20
  %347 = bitcast %"class.std::__1::basic_string"* %333 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %348 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %347, i64 0, i32 1, i32 0
  %349 = load i8, i8* %348, align 1
  %350 = icmp slt i8 %349, 0
  br i1 %350, label %351, label %354

351:                                              ; preds = %328
  %352 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %333, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = load i8*, i8** %352, align 8
  br label %356

354:                                              ; preds = %328
  %355 = bitcast %"class.std::__1::basic_string"* %333 to i8*
  br label %356

356:                                              ; preds = %351, %354
  %357 = phi i8* [ %353, %351 ], [ %355, %354 ]
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string.4"* nonnull %17, i8* %357) #22
  %358 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %40, i64 0, i32 2
  %359 = load i32, i32* %358, align 8
  %360 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %40, i64 0, i32 3
  %361 = load i32, i32* %360, align 4
  %362 = zext i1 %344 to i8
  %363 = bitcast %"class.std::__1::basic_string.4"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %364 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %363, i64 0, i32 1, i32 0
  %365 = load i8, i8* %364, align 1
  %366 = icmp slt i8 %365, 0
  br i1 %366, label %368, label %367

367:                                              ; preds = %356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %345, i8* nonnull align 8 %346, i64 24, i1 false) #20
  br label %374

368:                                              ; preds = %356
  %369 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 0
  %370 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load i8*, i8** %370, align 8
  %372 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %373 = load i64, i64* %372, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.4"* nonnull %369, i8* %371, i64 %373) #21
  br label %374

374:                                              ; preds = %367, %368
  %375 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 1
  store i32 0, i32* %375, align 8
  %376 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 2
  store i32 %359, i32* %376, align 4
  %377 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 3
  store i32 %361, i32* %377, align 8
  %378 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 4
  store i8 %362, i8* %378, align 4
  %379 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 5
  %380 = bitcast %"class.std::__1::vector.25"* %379 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %380, i8 0, i64 24, i1 false) #20
  %381 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 6
  store i32 %3, i32* %381, align 8
  %382 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 7
  store i32 %341, i32* %382, align 4
  %383 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %334, align 8
  %384 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %45, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %385 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %384, align 8
  %386 = icmp ult %"struct.glsl::UniformBlock"* %383, %385
  %387 = ptrtoint %"struct.glsl::UniformBlock"* %385 to i64
  br i1 %386, label %388, label %414

388:                                              ; preds = %374
  %389 = bitcast %"struct.glsl::UniformBlock"* %383 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %389, i8* nonnull align 8 %345, i64 24, i1 false) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %345, i8 0, i64 24, i1 false) #20
  %390 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %383, i64 0, i32 1
  %391 = bitcast i32* %390 to i8*
  %392 = bitcast i32* %375 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %391, i8* align 8 %392, i64 13, i1 false) #20
  %393 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %383, i64 0, i32 5
  %394 = bitcast %"class.std::__1::vector.25"* %393 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %394, i8 0, i64 24, i1 false) #20
  %395 = bitcast %"class.std::__1::vector.25"* %379 to i64*
  %396 = load i64, i64* %395, align 8
  %397 = bitcast %"class.std::__1::vector.25"* %393 to i64*
  store i64 %396, i64* %397, align 8
  %398 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 5, i32 0, i32 1
  %399 = bitcast i32** %398 to i64*
  %400 = load i64, i64* %399, align 8
  %401 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %383, i64 0, i32 5, i32 0, i32 1
  %402 = bitcast i32** %401 to i64*
  store i64 %400, i64* %402, align 8
  %403 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %404 = bitcast i32** %403 to i64*
  %405 = load i64, i64* %404, align 8
  %406 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %383, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %407 = bitcast i32** %406 to i64*
  store i64 %405, i64* %407, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %380, i8 0, i64 24, i1 false) #20
  %408 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %383, i64 0, i32 6
  %409 = bitcast i32* %381 to i64*
  %410 = bitcast i32* %408 to i64*
  %411 = load i64, i64* %409, align 8
  store i64 %411, i64* %410, align 8
  %412 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %383, i64 1
  %413 = ptrtoint %"struct.glsl::UniformBlock"* %412 to i64
  store i64 %413, i64* %335, align 8
  br label %471

414:                                              ; preds = %374
  %415 = ptrtoint %"struct.glsl::UniformBlock"* %383 to i64
  %416 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %45, i64 0, i32 5, i32 0, i32 2
  %417 = bitcast %"class.std::__1::__compressed_pair.71"* %416 to %"class.std::__1::allocator.74"*
  %418 = bitcast %"struct.std::__1::__split_buffer.225"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %418) #20
  %419 = getelementptr inbounds %"struct.std::__1::__split_buffer.225", %"struct.std::__1::__split_buffer.225"* %11, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %418, i8 -86, i64 40, i1 false) #20
  %420 = load i64, i64* %337, align 8
  %421 = sub i64 %415, %420
  %422 = sdiv exact i64 %421, 72
  %423 = add nsw i64 %422, 1
  %424 = icmp ugt i64 %423, 256204778801521550
  br i1 %424, label %425, label %427

425:                                              ; preds = %414
  %426 = bitcast %"class.std::__1::vector.69"* %329 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %426) #23
  unreachable

427:                                              ; preds = %414
  %428 = sub i64 %387, %420
  %429 = sdiv exact i64 %428, 72
  %430 = icmp ult i64 %429, 128102389400760775
  br i1 %430, label %431, label %435

431:                                              ; preds = %427
  %432 = shl nsw i64 %429, 1
  %433 = icmp ult i64 %432, %423
  %434 = select i1 %433, i64 %423, i64 %432
  br label %435

435:                                              ; preds = %431, %427
  %436 = phi i64 [ %434, %431 ], [ 256204778801521550, %427 ]
  call void @_ZNSt3__114__split_bufferIN4glsl12UniformBlockERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer.225"* nonnull %11, i64 %436, i64 %422, %"class.std::__1::allocator.74"* dereferenceable(1) %417) #21
  %437 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %419, align 8
  %438 = bitcast %"struct.glsl::UniformBlock"* %437 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %438, i8* nonnull align 8 %345, i64 24, i1 false) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %345, i8 0, i64 24, i1 false) #20
  %439 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %437, i64 0, i32 1
  %440 = bitcast i32* %439 to i8*
  %441 = bitcast i32* %375 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %440, i8* align 8 %441, i64 13, i1 false) #20
  %442 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %437, i64 0, i32 5
  %443 = bitcast %"class.std::__1::vector.25"* %442 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %443, i8 0, i64 24, i1 false) #20
  %444 = bitcast %"class.std::__1::vector.25"* %379 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast %"class.std::__1::vector.25"* %442 to i64*
  store i64 %445, i64* %446, align 8
  %447 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 5, i32 0, i32 1
  %448 = bitcast i32** %447 to i64*
  %449 = load i64, i64* %448, align 8
  %450 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %437, i64 0, i32 5, i32 0, i32 1
  %451 = bitcast i32** %450 to i64*
  store i64 %449, i64* %451, align 8
  %452 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %453 = bitcast i32** %452 to i64*
  %454 = load i64, i64* %453, align 8
  %455 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %437, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %456 = bitcast i32** %455 to i64*
  store i64 %454, i64* %456, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %380, i8 0, i64 24, i1 false) #20
  %457 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %437, i64 0, i32 6
  %458 = bitcast i32* %381 to i64*
  %459 = bitcast i32* %457 to i64*
  %460 = load i64, i64* %458, align 8
  store i64 %460, i64* %459, align 8
  %461 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %419, align 8
  %462 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %461, i64 1
  store %"struct.glsl::UniformBlock"* %462, %"struct.glsl::UniformBlock"** %419, align 8
  call void @_ZNSt3__16vectorIN4glsl12UniformBlockENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.69"* %329, %"struct.std::__1::__split_buffer.225"* nonnull dereferenceable(40) %11) #21
  call void @_ZNSt3__114__split_bufferIN4glsl12UniformBlockERNS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__split_buffer.225"* nonnull %11) #21
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %418) #20
  %463 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 5, i32 0, i32 0
  %464 = load i32*, i32** %463, align 8
  %465 = icmp eq i32* %464, null
  br i1 %465, label %471, label %466

466:                                              ; preds = %435
  %467 = bitcast i32* %464 to i8*
  %468 = ptrtoint i32* %464 to i64
  %469 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 5, i32 0, i32 1
  %470 = bitcast i32** %469 to i64*
  store i64 %468, i64* %470, align 8
  call void @_ZdlPv(i8* %467) #24
  br label %471

471:                                              ; preds = %388, %466, %435
  %472 = bitcast %"struct.glsl::UniformBlock"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %473 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %472, i64 0, i32 1, i32 0
  %474 = load i8, i8* %473, align 1
  %475 = icmp slt i8 %474, 0
  br i1 %475, label %476, label %479

476:                                              ; preds = %471
  %477 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %478 = load i8*, i8** %477, align 8
  call void @_ZdlPv(i8* %478) #24
  br label %479

479:                                              ; preds = %471, %476
  %480 = load i8, i8* %364, align 1
  %481 = icmp slt i8 %480, 0
  br i1 %481, label %482, label %485

482:                                              ; preds = %479
  %483 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %484 = load i8*, i8** %483, align 8
  call void @_ZdlPv(i8* %484) #24
  br label %485

485:                                              ; preds = %479, %482
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %346) #20
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %345) #20
  %486 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 11
  %487 = bitcast %"class.std::__1::map"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %487) #20
  %488 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %489 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  %490 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 0
  %491 = bitcast %"class.std::__1::__tree_node_base"** %488 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %491, i8 0, i64 16, i1 false) #20
  store %"class.std::__1::__tree_end_node"* %489, %"class.std::__1::__tree_end_node"** %490, align 8
  %492 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 11, i32 0, i32 1
  %493 = load %"class.std::__1::map"*, %"class.std::__1::map"** %492, align 8
  %494 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %495 = load %"class.std::__1::map"*, %"class.std::__1::map"** %494, align 8
  %496 = icmp ult %"class.std::__1::map"* %493, %495
  %497 = ptrtoint %"class.std::__1::map"* %495 to i64
  br i1 %496, label %498, label %521

498:                                              ; preds = %485
  %499 = ptrtoint %"class.std::__1::__tree_end_node"* %489 to i64
  %500 = bitcast %"class.std::__1::map"* %493 to i64*
  store i64 %499, i64* %500, align 8
  %501 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %493, i64 0, i32 0, i32 1
  %502 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 1
  %503 = bitcast %"class.std::__1::__compressed_pair.99"* %502 to i64*
  %504 = bitcast %"class.std::__1::__compressed_pair.99"* %501 to i64*
  %505 = load i64, i64* %503, align 8
  store i64 %505, i64* %504, align 8
  %506 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  %507 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %493, i64 0, i32 0, i32 2, i32 0, i32 0
  %508 = load i64, i64* %506, align 8
  store i64 %508, i64* %507, align 8
  %509 = icmp eq i64 %508, 0
  %510 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %493, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %509, label %511, label %513

511:                                              ; preds = %498
  %512 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %493, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %510, %"class.std::__1::__tree_end_node"** %512, align 8
  br label %517

513:                                              ; preds = %498
  %514 = inttoptr i64 %505 to %"class.std::__1::__tree_node_base"*
  %515 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %514, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %510, %"class.std::__1::__tree_end_node"** %515, align 8
  store %"class.std::__1::__tree_end_node"* %489, %"class.std::__1::__tree_end_node"** %490, align 8
  %516 = bitcast %"class.std::__1::__tree_end_node"* %489 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %516, i8 0, i64 16, i1 false) #20
  br label %517

517:                                              ; preds = %513, %511
  %518 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %493, i64 1
  %519 = ptrtoint %"class.std::__1::map"* %518 to i64
  %520 = bitcast %"class.std::__1::map"** %492 to i64*
  store i64 %519, i64* %520, align 8
  br label %568

521:                                              ; preds = %485
  %522 = ptrtoint %"class.std::__1::map"* %493 to i64
  %523 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 11, i32 0, i32 2
  %524 = bitcast %"class.std::__1::__compressed_pair.106"* %523 to %"class.std::__1::allocator.109"*
  %525 = bitcast %"struct.std::__1::__split_buffer.228"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %525) #20
  %526 = getelementptr inbounds %"struct.std::__1::__split_buffer.228", %"struct.std::__1::__split_buffer.228"* %10, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %525, i8 -86, i64 40, i1 false) #20
  %527 = bitcast %"class.std::__1::vector.97"* %486 to i64*
  %528 = load i64, i64* %527, align 8
  %529 = sub i64 %522, %528
  %530 = sdiv exact i64 %529, 24
  %531 = add nsw i64 %530, 1
  %532 = icmp ugt i64 %531, 768614336404564650
  br i1 %532, label %533, label %535

533:                                              ; preds = %521
  %534 = bitcast %"class.std::__1::vector.97"* %486 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %534) #23
  unreachable

535:                                              ; preds = %521
  %536 = sub i64 %497, %528
  %537 = sdiv exact i64 %536, 24
  %538 = icmp ult i64 %537, 384307168202282325
  br i1 %538, label %539, label %543

539:                                              ; preds = %535
  %540 = shl nsw i64 %537, 1
  %541 = icmp ult i64 %540, %531
  %542 = select i1 %541, i64 %531, i64 %540
  br label %543

543:                                              ; preds = %539, %535
  %544 = phi i64 [ %542, %539 ], [ 768614336404564650, %535 ]
  call void @_ZNSt3__114__split_bufferINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEERNS7_ISC_EEEC2EmmSE_(%"struct.std::__1::__split_buffer.228"* nonnull %10, i64 %544, i64 %530, %"class.std::__1::allocator.109"* dereferenceable(1) %524) #21
  %545 = load %"class.std::__1::map"*, %"class.std::__1::map"** %526, align 8
  %546 = bitcast %"class.std::__1::map"* %18 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"class.std::__1::map"* %545 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %545, i64 0, i32 0, i32 1
  %550 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 1
  %551 = bitcast %"class.std::__1::__compressed_pair.99"* %550 to i64*
  %552 = bitcast %"class.std::__1::__compressed_pair.99"* %549 to i64*
  %553 = load i64, i64* %551, align 8
  store i64 %553, i64* %552, align 8
  %554 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  %555 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %545, i64 0, i32 0, i32 2, i32 0, i32 0
  %556 = load i64, i64* %554, align 8
  store i64 %556, i64* %555, align 8
  %557 = icmp eq i64 %556, 0
  %558 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %545, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %557, label %559, label %561

559:                                              ; preds = %543
  %560 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %545, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %558, %"class.std::__1::__tree_end_node"** %560, align 8
  br label %565

561:                                              ; preds = %543
  %562 = inttoptr i64 %553 to %"class.std::__1::__tree_node_base"*
  %563 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %562, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %558, %"class.std::__1::__tree_end_node"** %563, align 8
  store %"class.std::__1::__tree_end_node"* %489, %"class.std::__1::__tree_end_node"** %490, align 8
  %564 = bitcast %"class.std::__1::__tree_end_node"* %489 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %564, i8 0, i64 16, i1 false) #20
  br label %565

565:                                              ; preds = %559, %561
  %566 = load %"class.std::__1::map"*, %"class.std::__1::map"** %526, align 8
  %567 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %566, i64 1
  store %"class.std::__1::map"* %567, %"class.std::__1::map"** %526, align 8
  call void @_ZNSt3__16vectorINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEENS7_ISC_EEE26__swap_out_circular_bufferERNS_14__split_bufferISC_RSD_EE(%"class.std::__1::vector.97"* %486, %"struct.std::__1::__split_buffer.228"* nonnull dereferenceable(40) %10) #21
  call void @_ZNSt3__114__split_bufferINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEERNS7_ISC_EEED2Ev(%"struct.std::__1::__split_buffer.228"* nonnull %10) #21
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %525) #20
  br label %568

568:                                              ; preds = %517, %565
  %569 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0
  %570 = bitcast %"class.std::__1::__tree_end_node"* %489 to %"class.std::__1::__tree_node.200"**
  %571 = load %"class.std::__1::__tree_node.200"*, %"class.std::__1::__tree_node.200"** %570, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* nonnull %569, %"class.std::__1::__tree_node.200"* %571) #21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %487) #20
  %572 = bitcast %"class.glsl::Std140BlockEncoder"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %572) #20
  %573 = getelementptr inbounds %"class.glsl::Std140BlockEncoder", %"class.glsl::Std140BlockEncoder"* %19, i64 0, i32 0, i32 0
  %574 = getelementptr inbounds %"class.glsl::Std140BlockEncoder", %"class.glsl::Std140BlockEncoder"* %19, i64 0, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4glsl18Std140BlockEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %573, align 8
  store i64 0, i64* %574, align 8
  %575 = getelementptr inbounds %class.TVector, %class.TVector* %331, i64 0, i32 0, i32 0, i32 0
  %576 = load %class.TField**, %class.TField*** %575, align 8
  %577 = getelementptr inbounds %class.TVector, %class.TVector* %331, i64 0, i32 0, i32 0, i32 1
  %578 = load %class.TField**, %class.TField*** %577, align 8
  %579 = icmp eq %class.TField** %576, %578
  br i1 %579, label %606, label %580

580:                                              ; preds = %568
  %581 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %582 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %40, i64 0, i32 1
  %583 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %584 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %585 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %586 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %587 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %333, i64 0, i32 0, i32 1, i32 0
  %588 = bitcast %class.pool_allocator* %587 to i64*
  %589 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 1
  %590 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %589 to i64*
  %591 = bitcast %"class.std::__1::basic_string"* %333 to i8*
  %592 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %333, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %593 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %333, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %594 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %595 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %594, i64 0, i32 1, i32 0
  %596 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 1
  %597 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %596 to i64*
  %598 = getelementptr inbounds %"class.glsl::Std140BlockEncoder", %"class.glsl::Std140BlockEncoder"* %19, i64 0, i32 0
  %599 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  br label %613

600:                                              ; preds = %688
  %601 = load i64, i64* %574, align 8
  %602 = trunc i64 %601 to i32
  %603 = shl i32 %602, 2
  %604 = add i32 %603, 12
  %605 = and i32 %604, -16
  br label %606

606:                                              ; preds = %600, %568
  %607 = phi i32 [ %605, %600 ], [ 0, %568 ]
  %608 = shl i64 %340, 32
  %609 = ashr exact i64 %608, 32
  %610 = getelementptr inbounds %"class.std::__1::vector.69", %"class.std::__1::vector.69"* %329, i64 0, i32 0, i32 0
  %611 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %610, align 8
  %612 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %611, i64 %609, i32 1
  store i32 %607, i32* %612, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %572) #20
  br label %1074

613:                                              ; preds = %580, %688
  %614 = phi i32 [ %3, %580 ], [ %690, %688 ]
  %615 = phi %class.TField** [ %576, %580 ], [ %691, %688 ]
  %616 = load %class.TField*, %class.TField** %615, align 8
  %617 = getelementptr inbounds %class.TField, %class.TField* %616, i64 0, i32 0
  %618 = load %class.TType*, %class.TType** %617, align 8
  %619 = getelementptr inbounds %class.TField, %class.TField* %616, i64 0, i32 1
  %620 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %619, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %581) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %599, i8 -86, i64 32, i1 false)
  %621 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %582, align 8
  %622 = icmp eq %"class.std::__1::basic_string"* %621, null
  br i1 %622, label %673, label %623

623:                                              ; preds = %613
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %583) #20
  %624 = load i64, i64* %588, align 8, !noalias !18
  store i64 %624, i64* %590, align 8, !alias.scope !23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %583, i8 0, i64 24, i1 false) #20, !alias.scope !23
  %625 = load i8, i8* %348, align 1, !noalias !23
  %626 = icmp slt i8 %625, 0
  %627 = inttoptr i64 %624 to %class.TPoolAllocator*
  br i1 %626, label %628, label %631

628:                                              ; preds = %623
  %629 = load i64, i64* %592, align 8, !noalias !23
  %630 = load i8*, i8** %593, align 8, !noalias !23
  br label %633

631:                                              ; preds = %623
  %632 = zext i8 %625 to i64
  br label %633

633:                                              ; preds = %631, %628
  %634 = phi i64 [ %629, %628 ], [ %632, %631 ]
  %635 = phi i8* [ %630, %628 ], [ %591, %631 ]
  %636 = add i64 %634, 1
  %637 = icmp ugt i64 %636, -17
  br i1 %637, label %638, label %640

638:                                              ; preds = %633
  %639 = bitcast %"class.std::__1::basic_string"* %21 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %639) #23
  unreachable

640:                                              ; preds = %633
  %641 = icmp ult i64 %636, 23
  br i1 %641, label %647, label %642

642:                                              ; preds = %640
  %643 = add nuw i64 %634, 17
  %644 = and i64 %643, -16
  %645 = call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %627, i64 %644) #21
  store i8* %645, i8** %584, align 8, !alias.scope !23
  %646 = or i64 %644, -9223372036854775808
  store i64 %646, i64* %586, align 8, !alias.scope !23
  store i64 %634, i64* %585, align 8, !alias.scope !23
  br label %650

647:                                              ; preds = %640
  %648 = trunc i64 %634 to i8
  store i8 %648, i8* %595, align 1, !alias.scope !23
  %649 = icmp eq i64 %634, 0
  br i1 %649, label %652, label %650

650:                                              ; preds = %642, %647
  %651 = phi i8* [ %645, %642 ], [ %583, %647 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %651, i8* align 1 %635, i64 %634, i1 false) #20
  br label %652

652:                                              ; preds = %647, %650
  %653 = phi i8* [ %583, %647 ], [ %651, %650 ]
  %654 = getelementptr inbounds i8, i8* %653, i64 %634
  store i8 0, i8* %654, align 1
  %655 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i64 0, i64 0), i64 1) #21
  %656 = bitcast %"class.std::__1::basic_string"* %620 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %657 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %656, i64 0, i32 1, i32 0
  %658 = load i8, i8* %657, align 1, !noalias !24
  %659 = icmp slt i8 %658, 0
  %660 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %620, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = load i8*, i8** %660, align 8, !noalias !24
  %662 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %620, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %663 = load i64, i64* %662, align 8, !noalias !24
  %664 = bitcast %"class.std::__1::basic_string"* %620 to i8*
  %665 = zext i8 %658 to i64
  %666 = select i1 %659, i8* %661, i8* %664
  %667 = select i1 %659, i64 %663, i64 %665
  %668 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %21, i8* %666, i64 %667) #21, !noalias !24
  %669 = bitcast %"class.std::__1::basic_string"* %668 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %581, i8* align 8 %669, i64 24, i1 false) #20
  %670 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %668, i64 0, i32 0, i32 1
  %671 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %670 to i64*
  %672 = load i64, i64* %671, align 8, !noalias !24
  store i64 %672, i64* %597, align 8, !alias.scope !24
  call void @llvm.memset.p0i8.i64(i8* align 8 %669, i8 0, i64 24, i1 false) #20, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %583) #20
  br label %688

673:                                              ; preds = %613
  %674 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %620, i64 0, i32 0, i32 1, i32 0
  %675 = bitcast %class.pool_allocator* %674 to i64*
  %676 = load i64, i64* %675, align 8, !noalias !27
  store i64 %676, i64* %597, align 8
  %677 = bitcast %"class.std::__1::basic_string"* %620 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %678 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %677, i64 0, i32 1, i32 0
  %679 = load i8, i8* %678, align 1
  %680 = icmp slt i8 %679, 0
  br i1 %680, label %683, label %681

681:                                              ; preds = %673
  %682 = bitcast %"class.std::__1::basic_string"* %620 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %581, i8* align 8 %682, i64 24, i1 false) #20
  br label %688

683:                                              ; preds = %673
  %684 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %620, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %685 = load i8*, i8** %684, align 8
  %686 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %620, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %687 = load i64, i64* %686, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %20, i8* %685, i64 %687) #21
  br label %688

688:                                              ; preds = %683, %681, %652
  call void @_ZN4glsl9OutputASM14declareUniformERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEibiPNS_18BlockLayoutEncoderE(%"class.glsl::OutputASM"* %0, %class.TType* dereferenceable(64) %618, %"class.std::__1::basic_string"* nonnull dereferenceable(32) %20, i32 %614, i1 zeroext %4, i32 %341, %"class.glsl::BlockLayoutEncoder"* nonnull %598) #22
  %689 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %618) #22
  %690 = add nsw i32 %689, %614
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %581) #20
  %691 = getelementptr inbounds %class.TField*, %class.TField** %615, i64 1
  %692 = icmp eq %class.TField** %691, %578
  br i1 %692, label %600, label %613

693:                                              ; preds = %327
  %694 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %45, i64 0, i32 3
  %695 = bitcast %"struct.glsl::Uniform"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %695) #20
  %696 = bitcast %"class.std::__1::basic_string.4"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %696) #20
  %697 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %698 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %697, i64 0, i32 1, i32 0
  %699 = load i8, i8* %698, align 1
  %700 = icmp slt i8 %699, 0
  %701 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %702 = load i8*, i8** %701, align 8
  %703 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %704 = select i1 %700, i8* %702, i8* %703
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string.4"* nonnull %23, i8* %704) #22
  %705 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 0
  call void @_ZN4glsl14ShaderVariableC2ERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEi(%"struct.glsl::ShaderVariable"* nonnull %705, %class.TType* dereferenceable(64) %1, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %23, i32 %3) #21
  %706 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 1
  store i32 -1, i32* %706, align 8
  %707 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 2
  %708 = bitcast %"struct.glsl::BlockMemberInfo"* %707 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 4294967295>, <2 x i64>* %708, align 4
  %709 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %45, i64 0, i32 3, i32 0, i32 1
  %710 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %709, align 8
  %711 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %45, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %712 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %711, align 8
  %713 = icmp ult %"struct.glsl::Uniform"* %710, %712
  %714 = ptrtoint %"struct.glsl::Uniform"* %712 to i64
  br i1 %713, label %715, label %751

715:                                              ; preds = %693
  %716 = bitcast %"struct.glsl::Uniform"* %22 to i64*
  %717 = bitcast %"struct.glsl::Uniform"* %710 to i64*
  %718 = load i64, i64* %716, align 8
  store i64 %718, i64* %717, align 8
  %719 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %710, i64 0, i32 0, i32 2
  %720 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 0, i32 2
  %721 = bitcast %"class.std::__1::basic_string.4"* %719 to i8*
  %722 = bitcast %"class.std::__1::basic_string.4"* %720 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %721, i8* align 8 %722, i64 24, i1 false) #20
  call void @llvm.memset.p0i8.i64(i8* align 8 %722, i8 0, i64 24, i1 false) #20
  %723 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %710, i64 0, i32 0, i32 3
  %724 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 0, i32 3
  %725 = bitcast i32* %724 to i64*
  %726 = bitcast i32* %723 to i64*
  %727 = load i64, i64* %725, align 8
  store i64 %727, i64* %726, align 8
  %728 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %710, i64 0, i32 0, i32 5
  %729 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 0, i32 5
  %730 = bitcast %"class.std::__1::vector.12"* %728 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %730, i8 0, i64 24, i1 false) #20
  %731 = bitcast %"class.std::__1::vector.12"* %729 to i64*
  %732 = load i64, i64* %731, align 8
  %733 = bitcast %"class.std::__1::vector.12"* %728 to i64*
  store i64 %732, i64* %733, align 8
  %734 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 0, i32 5, i32 0, i32 1
  %735 = bitcast %"struct.glsl::ShaderVariable"** %734 to i64*
  %736 = load i64, i64* %735, align 8
  %737 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %710, i64 0, i32 0, i32 5, i32 0, i32 1
  %738 = bitcast %"struct.glsl::ShaderVariable"** %737 to i64*
  store i64 %736, i64* %738, align 8
  %739 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %740 = bitcast %"struct.glsl::ShaderVariable"** %739 to i64*
  %741 = load i64, i64* %740, align 8
  %742 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %710, i64 0, i32 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %743 = bitcast %"struct.glsl::ShaderVariable"** %742 to i64*
  store i64 %741, i64* %743, align 8
  %744 = bitcast %"class.std::__1::vector.12"* %729 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %744, i8 0, i64 24, i1 false) #20
  %745 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %710, i64 0, i32 1
  %746 = bitcast i32* %745 to i8*
  %747 = bitcast i32* %706 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %746, i8* align 8 %747, i64 17, i1 false) #20
  %748 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %710, i64 1
  %749 = ptrtoint %"struct.glsl::Uniform"* %748 to i64
  %750 = bitcast %"struct.glsl::Uniform"** %709 to i64*
  store i64 %749, i64* %750, align 8
  br label %810

751:                                              ; preds = %693
  %752 = ptrtoint %"struct.glsl::Uniform"* %710 to i64
  %753 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %45, i64 0, i32 3, i32 0, i32 2
  %754 = bitcast %"class.std::__1::__compressed_pair.57"* %753 to %"class.std::__1::allocator.60"*
  %755 = bitcast %"struct.std::__1::__split_buffer.222"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %755) #20
  %756 = getelementptr inbounds %"struct.std::__1::__split_buffer.222", %"struct.std::__1::__split_buffer.222"* %8, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %755, i8 -86, i64 40, i1 false) #20
  %757 = bitcast %"class.std::__1::vector.55"* %694 to i64*
  %758 = load i64, i64* %757, align 8
  %759 = sub i64 %752, %758
  %760 = sdiv exact i64 %759, 88
  %761 = add nsw i64 %760, 1
  %762 = icmp ugt i64 %761, 209622091746699450
  br i1 %762, label %763, label %765

763:                                              ; preds = %751
  %764 = bitcast %"class.std::__1::vector.55"* %694 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %764) #23
  unreachable

765:                                              ; preds = %751
  %766 = sub i64 %714, %758
  %767 = sdiv exact i64 %766, 88
  %768 = icmp ult i64 %767, 104811045873349725
  br i1 %768, label %769, label %773

769:                                              ; preds = %765
  %770 = shl nsw i64 %767, 1
  %771 = icmp ult i64 %770, %761
  %772 = select i1 %771, i64 %761, i64 %770
  br label %773

773:                                              ; preds = %765, %769
  %774 = phi i64 [ %772, %769 ], [ 209622091746699450, %765 ]
  call void @_ZNSt3__114__split_bufferIN4glsl7UniformERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer.222"* nonnull %8, i64 %774, i64 %760, %"class.std::__1::allocator.60"* dereferenceable(1) %754) #21
  %775 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %756, align 8
  %776 = bitcast %"struct.glsl::Uniform"* %22 to i64*
  %777 = bitcast %"struct.glsl::Uniform"* %775 to i64*
  %778 = load i64, i64* %776, align 8
  store i64 %778, i64* %777, align 8
  %779 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %775, i64 0, i32 0, i32 2
  %780 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 0, i32 2
  %781 = bitcast %"class.std::__1::basic_string.4"* %779 to i8*
  %782 = bitcast %"class.std::__1::basic_string.4"* %780 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %781, i8* align 8 %782, i64 24, i1 false) #20
  call void @llvm.memset.p0i8.i64(i8* align 8 %782, i8 0, i64 24, i1 false) #20
  %783 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %775, i64 0, i32 0, i32 3
  %784 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 0, i32 3
  %785 = bitcast i32* %784 to i64*
  %786 = bitcast i32* %783 to i64*
  %787 = load i64, i64* %785, align 8
  store i64 %787, i64* %786, align 8
  %788 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %775, i64 0, i32 0, i32 5
  %789 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 0, i32 5
  %790 = bitcast %"class.std::__1::vector.12"* %788 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %790, i8 0, i64 24, i1 false) #20
  %791 = bitcast %"class.std::__1::vector.12"* %789 to i64*
  %792 = load i64, i64* %791, align 8
  %793 = bitcast %"class.std::__1::vector.12"* %788 to i64*
  store i64 %792, i64* %793, align 8
  %794 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 0, i32 5, i32 0, i32 1
  %795 = bitcast %"struct.glsl::ShaderVariable"** %794 to i64*
  %796 = load i64, i64* %795, align 8
  %797 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %775, i64 0, i32 0, i32 5, i32 0, i32 1
  %798 = bitcast %"struct.glsl::ShaderVariable"** %797 to i64*
  store i64 %796, i64* %798, align 8
  %799 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %800 = bitcast %"struct.glsl::ShaderVariable"** %799 to i64*
  %801 = load i64, i64* %800, align 8
  %802 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %775, i64 0, i32 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %803 = bitcast %"struct.glsl::ShaderVariable"** %802 to i64*
  store i64 %801, i64* %803, align 8
  %804 = bitcast %"class.std::__1::vector.12"* %789 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %804, i8 0, i64 24, i1 false) #20
  %805 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %775, i64 0, i32 1
  %806 = bitcast i32* %805 to i8*
  %807 = bitcast i32* %706 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %806, i8* align 8 %807, i64 17, i1 false) #20
  %808 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %756, align 8
  %809 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %808, i64 1
  store %"struct.glsl::Uniform"* %809, %"struct.glsl::Uniform"** %756, align 8
  call void @_ZNSt3__16vectorIN4glsl7UniformENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.55"* %694, %"struct.std::__1::__split_buffer.222"* nonnull dereferenceable(40) %8) #21
  call void @_ZNSt3__114__split_bufferIN4glsl7UniformERNS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__split_buffer.222"* nonnull %8) #21
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %755) #20
  br label %810

810:                                              ; preds = %715, %773
  %811 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 0, i32 5, i32 0
  call void @_ZNSt3__113__vector_baseIN4glsl14ShaderVariableENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.13"* %811) #21
  %812 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %22, i64 0, i32 0, i32 2
  %813 = bitcast %"class.std::__1::basic_string.4"* %812 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %814 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %813, i64 0, i32 1, i32 0
  %815 = load i8, i8* %814, align 1
  %816 = icmp slt i8 %815, 0
  br i1 %816, label %817, label %820

817:                                              ; preds = %810
  %818 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %812, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %819 = load i8*, i8** %818, align 8
  call void @_ZdlPv(i8* %819) #24
  br label %820

820:                                              ; preds = %810, %817
  %821 = bitcast %"class.std::__1::basic_string.4"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %822 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %821, i64 0, i32 1, i32 0
  %823 = load i8, i8* %822, align 1
  %824 = icmp slt i8 %823, 0
  br i1 %824, label %825, label %828

825:                                              ; preds = %820
  %826 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %827 = load i8*, i8** %826, align 8
  call void @_ZdlPv(i8* %827) #24
  br label %828

828:                                              ; preds = %820, %825
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %696) #20
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %695) #20
  %829 = getelementptr inbounds %class.TStructure, %class.TStructure* %32, i64 0, i32 0, i32 2
  %830 = load %class.TVector*, %class.TVector** %829, align 8
  %831 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 5
  %832 = load i8, i8* %831, align 1, !range !2
  %833 = icmp eq i8 %832, 0
  br i1 %833, label %976, label %834

834:                                              ; preds = %828
  %835 = load i8, i8* %33, align 8
  %836 = icmp eq i8 %835, 38
  %837 = or i1 %41, %836
  br i1 %837, label %838, label %976

838:                                              ; preds = %834
  %839 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 6
  %840 = load i32, i32* %839, align 8
  %841 = icmp sgt i32 %840, 0
  br i1 %841, label %842, label %1074

842:                                              ; preds = %838
  %843 = icmp ne %"class.glsl::BlockLayoutEncoder"* %6, null
  %844 = bitcast %"class.glsl::BlockLayoutEncoder"* %6 to void (%"class.glsl::BlockLayoutEncoder"*)***
  %845 = getelementptr inbounds %class.TVector, %class.TVector* %830, i64 0, i32 0, i32 0, i32 0
  %846 = getelementptr inbounds %class.TVector, %class.TVector* %830, i64 0, i32 0, i32 0, i32 1
  %847 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %848 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %849 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %850 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  %851 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %852 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %853 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %854 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 1, i32 0
  %855 = bitcast %class.pool_allocator* %854 to i64*
  %856 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 1
  %857 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %856 to i64*
  %858 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %859 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %860 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %859, i64 0, i32 1, i32 0
  %861 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %862 = getelementptr inbounds [20 x i8], [20 x i8]* %9, i64 0, i64 0
  %863 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %864 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %863, i64 0, i32 1, i32 0
  %865 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %866 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %867 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 1
  %868 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %867 to i64*
  %869 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 1
  %870 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %869 to i64*
  %871 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 1
  %872 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %871 to i64*
  %873 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  br label %874

874:                                              ; preds = %842, %972
  %875 = phi i32 [ 0, %842 ], [ %973, %972 ]
  %876 = phi i32 [ %3, %842 ], [ %886, %972 ]
  br i1 %843, label %877, label %881

877:                                              ; preds = %874
  %878 = load void (%"class.glsl::BlockLayoutEncoder"*)**, void (%"class.glsl::BlockLayoutEncoder"*)*** %844, align 8
  %879 = getelementptr inbounds void (%"class.glsl::BlockLayoutEncoder"*)*, void (%"class.glsl::BlockLayoutEncoder"*)** %878, i64 2
  %880 = load void (%"class.glsl::BlockLayoutEncoder"*)*, void (%"class.glsl::BlockLayoutEncoder"*)** %879, align 8
  call void %880(%"class.glsl::BlockLayoutEncoder"* nonnull %6) #21
  br label %881

881:                                              ; preds = %877, %874
  %882 = load %class.TField**, %class.TField*** %845, align 8
  %883 = load %class.TField**, %class.TField*** %846, align 8
  %884 = icmp eq %class.TField** %882, %883
  br i1 %884, label %885, label %887

885:                                              ; preds = %963, %881
  %886 = phi i32 [ %876, %881 ], [ %965, %963 ]
  br i1 %843, label %968, label %972

887:                                              ; preds = %881, %963
  %888 = phi i32 [ %965, %963 ], [ %876, %881 ]
  %889 = phi %class.TField** [ %966, %963 ], [ %882, %881 ]
  %890 = load %class.TField*, %class.TField** %889, align 8
  %891 = getelementptr inbounds %class.TField, %class.TField* %890, i64 0, i32 0
  %892 = load %class.TType*, %class.TType** %891, align 8
  %893 = getelementptr inbounds %class.TField, %class.TField* %890, i64 0, i32 1
  %894 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %893, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %847) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %873, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %848) #20
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %849) #20
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %850) #20
  %895 = load i64, i64* %855, align 8, !noalias !30
  store i64 %895, i64* %857, align 8, !alias.scope !35
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %850, i8 0, i64 24, i1 false) #20, !alias.scope !35
  %896 = load i8, i8* %698, align 1, !noalias !35
  %897 = icmp slt i8 %896, 0
  %898 = inttoptr i64 %895 to %class.TPoolAllocator*
  %899 = load i64, i64* %858, align 8
  %900 = load i8*, i8** %701, align 8
  %901 = zext i8 %896 to i64
  %902 = select i1 %897, i64 %899, i64 %901
  %903 = select i1 %897, i8* %900, i8* %703
  %904 = add i64 %902, 1
  %905 = icmp ugt i64 %904, -17
  br i1 %905, label %906, label %908

906:                                              ; preds = %887
  %907 = bitcast %"class.std::__1::basic_string"* %27 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %907) #23
  unreachable

908:                                              ; preds = %887
  %909 = icmp ult i64 %904, 23
  br i1 %909, label %915, label %910

910:                                              ; preds = %908
  %911 = add nuw i64 %902, 17
  %912 = and i64 %911, -16
  %913 = call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %898, i64 %912) #21
  store i8* %913, i8** %851, align 8, !alias.scope !35
  %914 = or i64 %912, -9223372036854775808
  store i64 %914, i64* %853, align 8, !alias.scope !35
  store i64 %902, i64* %852, align 8, !alias.scope !35
  br label %918

915:                                              ; preds = %908
  %916 = trunc i64 %902 to i8
  store i8 %916, i8* %860, align 1, !alias.scope !35
  %917 = icmp eq i64 %902, 0
  br i1 %917, label %920, label %918

918:                                              ; preds = %910, %915
  %919 = phi i8* [ %913, %910 ], [ %850, %915 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %919, i8* align 1 %903, i64 %902, i1 false) #20
  br label %920

920:                                              ; preds = %915, %918
  %921 = phi i8* [ %850, %915 ], [ %919, %918 ]
  %922 = getelementptr inbounds i8, i8* %921, i64 %902
  store i8 0, i8* %922, align 1
  %923 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.50, i64 0, i64 0), i64 1) #21
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %861) #20
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %862) #20, !noalias !36
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %862, i8 -86, i64 20, i1 false) #20, !noalias !36
  %924 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %862, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %875) #21, !noalias !36
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %28, i8* nonnull %862) #21
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %862) #20, !noalias !36
  %925 = load i8, i8* %864, align 1, !noalias !39
  %926 = icmp slt i8 %925, 0
  %927 = load i8*, i8** %865, align 8, !noalias !39
  %928 = load i64, i64* %866, align 8, !noalias !39
  %929 = zext i8 %925 to i64
  %930 = select i1 %926, i8* %927, i8* %861
  %931 = select i1 %926, i64 %928, i64 %929
  %932 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %27, i8* %930, i64 %931) #21, !noalias !39
  %933 = bitcast %"class.std::__1::basic_string"* %932 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %849, i8* align 8 %933, i64 24, i1 false) #20
  %934 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %932, i64 0, i32 0, i32 1
  %935 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %934 to i64*
  %936 = load i64, i64* %935, align 8, !noalias !39
  store i64 %936, i64* %868, align 8, !alias.scope !39
  call void @llvm.memset.p0i8.i64(i8* align 8 %933, i8 0, i64 24, i1 false) #20, !noalias !39
  %937 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i64 0, i64 0), i64 2) #21, !noalias !42
  %938 = bitcast %"class.std::__1::basic_string"* %937 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %848, i8* align 8 %938, i64 24, i1 false) #20
  %939 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %937, i64 0, i32 0, i32 1
  %940 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %939 to i64*
  %941 = load i64, i64* %940, align 8, !noalias !42
  store i64 %941, i64* %870, align 8, !alias.scope !42
  call void @llvm.memset.p0i8.i64(i8* align 8 %938, i8 0, i64 24, i1 false) #20, !noalias !42
  %942 = bitcast %"class.std::__1::basic_string"* %894 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %943 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %942, i64 0, i32 1, i32 0
  %944 = load i8, i8* %943, align 1, !noalias !45
  %945 = icmp slt i8 %944, 0
  %946 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %894, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %947 = load i8*, i8** %946, align 8, !noalias !45
  %948 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %894, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %949 = load i64, i64* %948, align 8, !noalias !45
  %950 = bitcast %"class.std::__1::basic_string"* %894 to i8*
  %951 = zext i8 %944 to i64
  %952 = select i1 %945, i8* %947, i8* %950
  %953 = select i1 %945, i64 %949, i64 %951
  %954 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %25, i8* %952, i64 %953) #21, !noalias !45
  %955 = bitcast %"class.std::__1::basic_string"* %954 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %847, i8* align 8 %955, i64 24, i1 false) #20
  %956 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %954, i64 0, i32 0, i32 1
  %957 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %956 to i64*
  %958 = load i64, i64* %957, align 8, !noalias !45
  store i64 %958, i64* %872, align 8, !alias.scope !45
  call void @llvm.memset.p0i8.i64(i8* align 8 %955, i8 0, i64 24, i1 false) #20, !noalias !45
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %861) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %850) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %849) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %848) #20
  call void @_ZN4glsl9OutputASM14declareUniformERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEibiPNS_18BlockLayoutEncoderE(%"class.glsl::OutputASM"* %0, %class.TType* dereferenceable(64) %892, %"class.std::__1::basic_string"* nonnull dereferenceable(32) %24, i32 %888, i1 zeroext %4, i32 %5, %"class.glsl::BlockLayoutEncoder"* %6) #22
  br i1 %4, label %959, label %961

959:                                              ; preds = %920
  %960 = call i32 @_ZNK5TType25totalSamplerRegisterCountEv(%class.TType* %892) #22
  br label %963

961:                                              ; preds = %920
  %962 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %892) #22
  br label %963

963:                                              ; preds = %961, %959
  %964 = phi i32 [ %960, %959 ], [ %962, %961 ]
  %965 = add nsw i32 %964, %888
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %847) #20
  %966 = getelementptr inbounds %class.TField*, %class.TField** %889, i64 1
  %967 = icmp eq %class.TField** %966, %883
  br i1 %967, label %885, label %887

968:                                              ; preds = %885
  %969 = load void (%"class.glsl::BlockLayoutEncoder"*)**, void (%"class.glsl::BlockLayoutEncoder"*)*** %844, align 8
  %970 = getelementptr inbounds void (%"class.glsl::BlockLayoutEncoder"*)*, void (%"class.glsl::BlockLayoutEncoder"*)** %969, i64 3
  %971 = load void (%"class.glsl::BlockLayoutEncoder"*)*, void (%"class.glsl::BlockLayoutEncoder"*)** %970, align 8
  call void %971(%"class.glsl::BlockLayoutEncoder"* nonnull %6) #21
  br label %972

972:                                              ; preds = %885, %968
  %973 = add nuw nsw i32 %875, 1
  %974 = load i32, i32* %839, align 8
  %975 = icmp slt i32 %973, %974
  br i1 %975, label %874, label %1074

976:                                              ; preds = %828, %834
  %977 = icmp ne %"class.glsl::BlockLayoutEncoder"* %6, null
  br i1 %977, label %978, label %983

978:                                              ; preds = %976
  %979 = bitcast %"class.glsl::BlockLayoutEncoder"* %6 to void (%"class.glsl::BlockLayoutEncoder"*)***
  %980 = load void (%"class.glsl::BlockLayoutEncoder"*)**, void (%"class.glsl::BlockLayoutEncoder"*)*** %979, align 8
  %981 = getelementptr inbounds void (%"class.glsl::BlockLayoutEncoder"*)*, void (%"class.glsl::BlockLayoutEncoder"*)** %980, i64 2
  %982 = load void (%"class.glsl::BlockLayoutEncoder"*)*, void (%"class.glsl::BlockLayoutEncoder"*)** %981, align 8
  call void %982(%"class.glsl::BlockLayoutEncoder"* nonnull %6) #21
  br label %983

983:                                              ; preds = %978, %976
  %984 = getelementptr inbounds %class.TVector, %class.TVector* %830, i64 0, i32 0, i32 0, i32 0
  %985 = load %class.TField**, %class.TField*** %984, align 8
  %986 = getelementptr inbounds %class.TVector, %class.TVector* %830, i64 0, i32 0, i32 0, i32 1
  %987 = load %class.TField**, %class.TField*** %986, align 8
  %988 = icmp eq %class.TField** %985, %987
  br i1 %988, label %1005, label %989

989:                                              ; preds = %983
  %990 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %991 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %992 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %993 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %994 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %995 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 1, i32 0
  %996 = bitcast %class.pool_allocator* %995 to i64*
  %997 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 1
  %998 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %997 to i64*
  %999 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1000 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %1001 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %1000, i64 0, i32 1, i32 0
  %1002 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 1
  %1003 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %1002 to i64*
  %1004 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  br label %1006

1005:                                             ; preds = %1064, %983
  br i1 %977, label %1069, label %1074

1006:                                             ; preds = %989, %1064
  %1007 = phi i32 [ %3, %989 ], [ %1066, %1064 ]
  %1008 = phi %class.TField** [ %985, %989 ], [ %1067, %1064 ]
  %1009 = load %class.TField*, %class.TField** %1008, align 8
  %1010 = getelementptr inbounds %class.TField, %class.TField* %1009, i64 0, i32 0
  %1011 = load %class.TType*, %class.TType** %1010, align 8
  %1012 = getelementptr inbounds %class.TField, %class.TField* %1009, i64 0, i32 1
  %1013 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1012, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %990) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1004, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %991) #20
  %1014 = load i64, i64* %996, align 8, !noalias !48
  store i64 %1014, i64* %998, align 8, !alias.scope !53
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %991, i8 0, i64 24, i1 false) #20, !alias.scope !53
  %1015 = load i8, i8* %698, align 1, !noalias !53
  %1016 = icmp slt i8 %1015, 0
  %1017 = inttoptr i64 %1014 to %class.TPoolAllocator*
  %1018 = load i64, i64* %999, align 8
  %1019 = load i8*, i8** %701, align 8
  %1020 = zext i8 %1015 to i64
  %1021 = select i1 %1016, i64 %1018, i64 %1020
  %1022 = select i1 %1016, i8* %1019, i8* %703
  %1023 = add i64 %1021, 1
  %1024 = icmp ugt i64 %1023, -17
  br i1 %1024, label %1025, label %1027

1025:                                             ; preds = %1006
  %1026 = bitcast %"class.std::__1::basic_string"* %30 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1026) #23
  unreachable

1027:                                             ; preds = %1006
  %1028 = icmp ult i64 %1023, 23
  br i1 %1028, label %1034, label %1029

1029:                                             ; preds = %1027
  %1030 = add nuw i64 %1021, 17
  %1031 = and i64 %1030, -16
  %1032 = call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %1017, i64 %1031) #21
  store i8* %1032, i8** %992, align 8, !alias.scope !53
  %1033 = or i64 %1031, -9223372036854775808
  store i64 %1033, i64* %994, align 8, !alias.scope !53
  store i64 %1021, i64* %993, align 8, !alias.scope !53
  br label %1037

1034:                                             ; preds = %1027
  %1035 = trunc i64 %1021 to i8
  store i8 %1035, i8* %1001, align 1, !alias.scope !53
  %1036 = icmp eq i64 %1021, 0
  br i1 %1036, label %1039, label %1037

1037:                                             ; preds = %1029, %1034
  %1038 = phi i8* [ %1032, %1029 ], [ %991, %1034 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1038, i8* align 1 %1022, i64 %1021, i1 false) #20
  br label %1039

1039:                                             ; preds = %1034, %1037
  %1040 = phi i8* [ %991, %1034 ], [ %1038, %1037 ]
  %1041 = getelementptr inbounds i8, i8* %1040, i64 %1021
  store i8 0, i8* %1041, align 1
  %1042 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i64 0, i64 0), i64 1) #21
  %1043 = bitcast %"class.std::__1::basic_string"* %1013 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %1044 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %1043, i64 0, i32 1, i32 0
  %1045 = load i8, i8* %1044, align 1, !noalias !54
  %1046 = icmp slt i8 %1045, 0
  %1047 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1013, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1048 = load i8*, i8** %1047, align 8, !noalias !54
  %1049 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1013, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1050 = load i64, i64* %1049, align 8, !noalias !54
  %1051 = bitcast %"class.std::__1::basic_string"* %1013 to i8*
  %1052 = zext i8 %1045 to i64
  %1053 = select i1 %1046, i8* %1048, i8* %1051
  %1054 = select i1 %1046, i64 %1050, i64 %1052
  %1055 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %30, i8* %1053, i64 %1054) #21, !noalias !54
  %1056 = bitcast %"class.std::__1::basic_string"* %1055 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %990, i8* align 8 %1056, i64 24, i1 false) #20
  %1057 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1055, i64 0, i32 0, i32 1
  %1058 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %1057 to i64*
  %1059 = load i64, i64* %1058, align 8, !noalias !54
  store i64 %1059, i64* %1003, align 8, !alias.scope !54
  call void @llvm.memset.p0i8.i64(i8* align 8 %1056, i8 0, i64 24, i1 false) #20, !noalias !54
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %991) #20
  call void @_ZN4glsl9OutputASM14declareUniformERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEibiPNS_18BlockLayoutEncoderE(%"class.glsl::OutputASM"* %0, %class.TType* dereferenceable(64) %1011, %"class.std::__1::basic_string"* nonnull dereferenceable(32) %29, i32 %1007, i1 zeroext %4, i32 %5, %"class.glsl::BlockLayoutEncoder"* %6) #22
  br i1 %4, label %1060, label %1062

1060:                                             ; preds = %1039
  %1061 = call i32 @_ZNK5TType25totalSamplerRegisterCountEv(%class.TType* %1011) #22
  br label %1064

1062:                                             ; preds = %1039
  %1063 = call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %1011) #22
  br label %1064

1064:                                             ; preds = %1062, %1060
  %1065 = phi i32 [ %1061, %1060 ], [ %1063, %1062 ]
  %1066 = add nsw i32 %1065, %1007
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %990) #20
  %1067 = getelementptr inbounds %class.TField*, %class.TField** %1008, i64 1
  %1068 = icmp eq %class.TField** %1067, %987
  br i1 %1068, label %1005, label %1006

1069:                                             ; preds = %1005
  %1070 = bitcast %"class.glsl::BlockLayoutEncoder"* %6 to void (%"class.glsl::BlockLayoutEncoder"*)***
  %1071 = load void (%"class.glsl::BlockLayoutEncoder"*)**, void (%"class.glsl::BlockLayoutEncoder"*)*** %1070, align 8
  %1072 = getelementptr inbounds void (%"class.glsl::BlockLayoutEncoder"*)*, void (%"class.glsl::BlockLayoutEncoder"*)** %1071, i64 3
  %1073 = load void (%"class.glsl::BlockLayoutEncoder"*)*, void (%"class.glsl::BlockLayoutEncoder"*)** %1072, align 8
  call void %1073(%"class.glsl::BlockLayoutEncoder"* nonnull %6) #21
  br label %1074

1074:                                             ; preds = %972, %838, %326, %186, %1069, %1005, %606
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw12VertexShader8setInputEiRKNS_6Shader8SemanticENS0_10AttribTypeE(%"class.sw::VertexShader"*, i32, %"struct.sw::Shader::Semantic"* dereferenceable(4), i8 zeroext) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM15samplerRegisterEP13TIntermSymbol(%"class.glsl::OutputASM"*, %class.TIntermSymbol*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 0
  %5 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 9
  %7 = tail call i32 @_ZN4glsl9OutputASM6lookupERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_(%"class.glsl::OutputASM"* undef, %"class.std::__1::vector.90"* dereferenceable(24) %6, %class.TIntermTyped* %4) #22
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %30

9:                                                ; preds = %2
  %10 = tail call i32 @_ZN4glsl9OutputASM8allocateERNSt3__16vectorIP12TIntermTypedNS1_9allocatorIS4_EEEES4_b(%"class.glsl::OutputASM"* %0, %"class.std::__1::vector.90"* dereferenceable(24) %6, %class.TIntermTyped* %4, i1 zeroext true) #22
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %30, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 0, i32 1, i32 2
  %14 = load i8, i8* %13, align 2
  %15 = icmp eq i8 %14, 8
  br i1 %15, label %16, label %30

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 2
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  br label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  br label %27

27:                                               ; preds = %22, %25
  %28 = phi i8* [ %24, %22 ], [ %26, %25 ]
  %29 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #20
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* %28) #22
  call void @_ZN4glsl9OutputASM14declareUniformERK5TTypeRKNSt3__112basic_stringIcNS4_11char_traitsIcEE14pool_allocatorIcEEEibiPNS_18BlockLayoutEncoderE(%"class.glsl::OutputASM"* %0, %class.TType* dereferenceable(64) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(32) %3, i32 %10, i1 zeroext true, i32 -1, %"class.glsl::BlockLayoutEncoder"* null) #22
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #20
  br label %30

30:                                               ; preds = %2, %27, %12, %9
  %31 = phi i32 [ 0, %9 ], [ %10, %27 ], [ %10, %12 ], [ %7, %2 ]
  ret i32 %31
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK5TType20samplerRegisterCountEv(%class.TType*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 11
  %3 = load %class.TStructure*, %class.TStructure** %2, align 8
  %4 = icmp eq %class.TStructure* %3, null
  %5 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  br i1 %4, label %39, label %7

7:                                                ; preds = %1
  %8 = icmp eq i8 %6, 38
  %9 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 9
  %10 = bitcast %class.TInterfaceBlock** %9 to %class.TFieldListCollection**
  %11 = bitcast %class.TStructure** %2 to %class.TFieldListCollection**
  %12 = select i1 %8, %class.TFieldListCollection** %10, %class.TFieldListCollection** %11
  %13 = load %class.TFieldListCollection*, %class.TFieldListCollection** %12, align 8
  %14 = getelementptr inbounds %class.TFieldListCollection, %class.TFieldListCollection* %13, i64 0, i32 2
  %15 = load %class.TVector*, %class.TVector** %14, align 8
  %16 = getelementptr inbounds %class.TVector, %class.TVector* %15, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %class.TField*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %class.TVector* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %43, label %22

22:                                               ; preds = %7, %22
  %23 = phi i64 [ %35, %22 ], [ %20, %7 ]
  %24 = phi i64 [ %33, %22 ], [ 0, %7 ]
  %25 = phi i32 [ %32, %22 ], [ 0, %7 ]
  %26 = inttoptr i64 %23 to %class.TField**
  %27 = getelementptr inbounds %class.TField*, %class.TField** %26, i64 %24
  %28 = load %class.TField*, %class.TField** %27, align 8
  %29 = getelementptr inbounds %class.TField, %class.TField* %28, i64 0, i32 0
  %30 = load %class.TType*, %class.TType** %29, align 8
  %31 = tail call i32 @_ZNK5TType25totalSamplerRegisterCountEv(%class.TType* %30) #22
  %32 = add nsw i32 %31, %25
  %33 = add nuw i64 %24, 1
  %34 = load i64, i64* %17, align 8
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %34, %35
  %37 = ashr exact i64 %36, 3
  %38 = icmp ult i64 %33, %37
  br i1 %38, label %22, label %43

39:                                               ; preds = %1
  %40 = add i8 %6, -15
  %41 = icmp ult i8 %40, 17
  %42 = zext i1 %41 to i32
  br label %43

43:                                               ; preds = %22, %7, %39
  %44 = phi i32 [ %42, %39 ], [ 0, %7 ], [ %32, %22 ]
  ret i32 %44
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4glsl9OutputASM18arrayExceedsLimitsEP12TIntermTyped(%"class.glsl::OutputASM"* nocapture readonly, %class.TIntermTyped*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_stringstream", align 8
  %6 = alloca %"class.std::__1::basic_string.4", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #20
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #22
  %11 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 4
  %12 = load %"class.sw::VertexShader"*, %"class.sw::VertexShader"** %11, align 8
  %13 = icmp eq %"class.sw::VertexShader"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 3
  %16 = load %"class.sw::PixelShader"*, %"class.sw::PixelShader"** %15, align 8
  %17 = icmp eq %"class.sw::PixelShader"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %14, %2
  %19 = phi i8* [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i64 0, i64 0), %2 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i64 0, i64 0), %14 ]
  %20 = call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6assignEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* %19) #21
  br label %21

21:                                               ; preds = %18, %14
  %22 = getelementptr inbounds %"class.glsl::OutputASM", %"class.glsl::OutputASM"* %0, i64 0, i32 18
  %23 = load %class.TParseContext*, %class.TParseContext** %22, align 8
  %24 = getelementptr inbounds %class.TParseContext, %class.TParseContext* %23, i64 0, i32 1
  %25 = load %class.TSymbolTable*, %class.TSymbolTable** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #20
  %27 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %8, align 8
  %32 = select i1 %30, i8* %31, i8* %7
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* %32) #22
  %33 = load %class.TParseContext*, %class.TParseContext** %22, align 8
  %34 = getelementptr inbounds %class.TParseContext, %class.TParseContext* %33, i64 0, i32 10
  %35 = load i32, i32* %34, align 8
  %36 = call %class.TSymbol* @_ZNK12TSymbolTable11findBuiltInERKNSt3__112basic_stringIcNS0_11char_traitsIcEE14pool_allocatorIcEEEi(%class.TSymbolTable* %25, %"class.std::__1::basic_string"* nonnull dereferenceable(32) %4, i32 %35) #21
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #20
  %37 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 6
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %class.TSymbol, %class.TSymbol* %36, i64 4
  %40 = bitcast %class.TSymbol* %39 to %class.ConstantUnion**
  %41 = load %class.ConstantUnion*, %class.ConstantUnion** %40, align 8
  %42 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %41, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %38, %43
  br i1 %44, label %45, label %125

45:                                               ; preds = %21
  %46 = bitcast %"class.std::__1::basic_stringstream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %46) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 280, i1 false)
  call void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"* nonnull %5, i32 24) #21
  %47 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::basic_ostream.base"* %47 to %"class.std::__1::basic_ostream"*
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %48, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i64 0, i64 0), i64 12) #21
  %50 = load i32, i32* %37, align 8
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %49, i32 %50) #21
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %51, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i64 0, i64 0), i64 2) #21
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %52, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i64 0, i64 0), i64 17) #21
  %54 = load i8, i8* %28, align 1
  %55 = icmp slt i8 %54, 0
  %56 = load i8*, i8** %8, align 8
  %57 = load i64, i64* %9, align 8
  %58 = zext i8 %54 to i64
  %59 = select i1 %55, i8* %56, i8* %7
  %60 = select i1 %55, i64 %57, i64 %58
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %53, i8* %59, i64 %60) #21
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %61, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), i64 2) #21
  %63 = load %class.ConstantUnion*, %class.ConstantUnion** %40, align 8
  %64 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %63, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %62, i32 %65) #21
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %66, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.49, i64 0, i64 0), i64 1) #21
  %68 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #20
  %69 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1
  %71 = bitcast %"class.std::__1::basic_string.4"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 24, i1 false)
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.4"* nonnull sret %6, %"class.std::__1::basic_stringbuf"* %70) #21
  %72 = load %class.TParseContext*, %class.TParseContext** %22, align 8
  %73 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 0, i32 1
  %74 = bitcast %"class.std::__1::basic_string.4"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = load i8*, i8** %69, align 8
  %79 = select i1 %77, i8* %78, i8* %68
  %80 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %1, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 8
  switch i8 %81, label %92 [
    i8 0, label %93
    i8 1, label %82
    i8 2, label %83
    i8 3, label %84
    i8 4, label %85
    i8 15, label %86
    i8 17, label %87
    i8 19, label %88
    i8 20, label %89
    i8 16, label %90
    i8 37, label %91
  ]

82:                                               ; preds = %45
  br label %93

83:                                               ; preds = %45
  br label %93

84:                                               ; preds = %45
  br label %93

85:                                               ; preds = %45
  br label %93

86:                                               ; preds = %45
  br label %93

87:                                               ; preds = %45
  br label %93

88:                                               ; preds = %45
  br label %93

89:                                               ; preds = %45
  br label %93

90:                                               ; preds = %45
  br label %93

91:                                               ; preds = %45
  br label %93

92:                                               ; preds = %45
  br label %93

93:                                               ; preds = %45, %82, %83, %84, %85, %86, %87, %88, %89, %90, %91, %92
  %94 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i64 0, i64 0), %92 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i64 0, i64 0), %91 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0), %90 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.61, i64 0, i64 0), %89 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0), %88 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59, i64 0, i64 0), %87 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.58, i64 0, i64 0), %86 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), %85 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0), %84 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), %83 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0), %82 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), %45 ]
  call void @_ZN13TParseContext5errorERK10TSourceLocPKcS4_S4_(%class.TParseContext* %72, %struct.TSourceLoc* dereferenceable(16) %73, i8* %79, i8* nonnull %94, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0)) #21
  %95 = load i8, i8* %75, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %98) #24
  br label %99

99:                                               ; preds = %93, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #20
  %100 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %101 = bitcast %"class.std::__1::basic_stringstream"* %5 to i64*
  store i64 %100, i64* %101, align 8
  %102 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %103 = inttoptr i64 %100 to i8*
  %104 = getelementptr i8, i8* %103, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds i8, i8* %46, i64 %106
  %108 = bitcast i8* %107 to i64*
  store i64 %102, i64* %108, align 8
  %109 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %110 = bitcast %"class.std::__1::basic_ostream.base"* %47 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %70, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1, i32 1
  %113 = bitcast %"class.std::__1::basic_string.4"* %112 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %99
  %118 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %119) #24
  br label %120

120:                                              ; preds = %99, %117
  %121 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %70, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %121) #21
  %122 = bitcast %"class.std::__1::basic_stringstream"* %5 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %122, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #21
  %123 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 2
  %124 = bitcast %"class.std::__1::basic_ios.base"* %123 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %124) #21
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %46) #20
  br label %125

125:                                              ; preds = %21, %120
  %126 = phi i1 [ true, %120 ], [ false, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #20
  ret i1 %126
}

; Function Attrs: optsize
declare %class.TSymbol* @_ZNK12TSymbolTable11findBuiltInERKNSt3__112basic_stringIcNS0_11char_traitsIcEE14pool_allocatorIcEEEi(%class.TSymbolTable*, %"class.std::__1::basic_string"* dereferenceable(32), i32) local_unnamed_addr #7

; Function Attrs: optsize
declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #7

; Function Attrs: optsize
declare void @_ZN2sw6Shader14declareSamplerEi(%"class.sw::Shader"*, i32) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4glsl18BlockLayoutEncoderD2Ev(%"class.glsl::BlockLayoutEncoder"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN4glsl9OutputASM4dim2EP11TIntermNode(%class.TIntermNode*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.TIntermNode* %0 to %class.TIntermTyped* (%class.TIntermNode*)***
  %3 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %2, align 8
  %4 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %3, i64 1
  %5 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %4, align 8
  %6 = tail call %class.TIntermTyped* %5(%class.TIntermNode* %0) #21
  %7 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %6, i64 0, i32 1, i32 4
  %8 = load i8, i8* %7, align 4
  %9 = zext i8 %8 to i32
  ret i32 %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4glsl9OutputASM8LoopInfoC2EP11TIntermLoop(%"struct.glsl::OutputASM::LoopInfo"* nocapture, %class.TIntermLoop* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.glsl::LoopUnrollable", align 8
  %4 = getelementptr inbounds %"struct.glsl::OutputASM::LoopInfo", %"struct.glsl::OutputASM::LoopInfo"* %0, i64 0, i32 0
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.glsl::OutputASM::LoopInfo", %"struct.glsl::OutputASM::LoopInfo"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.glsl::OutputASM::LoopInfo", %"struct.glsl::OutputASM::LoopInfo"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.glsl::OutputASM::LoopInfo", %"struct.glsl::OutputASM::LoopInfo"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"struct.glsl::OutputASM::LoopInfo", %"struct.glsl::OutputASM::LoopInfo"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.glsl::OutputASM::LoopInfo", %"struct.glsl::OutputASM::LoopInfo"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 3
  %11 = bitcast %class.TIntermSymbol** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false)
  %12 = load %class.TIntermNode*, %class.TIntermNode** %10, align 8
  %13 = icmp eq %class.TIntermNode* %12, null
  br i1 %13, label %84, label %14

14:                                               ; preds = %2
  %15 = bitcast %class.TIntermNode* %12 to %class.TIntermAggregate* (%class.TIntermNode*)***
  %16 = load %class.TIntermAggregate* (%class.TIntermNode*)**, %class.TIntermAggregate* (%class.TIntermNode*)*** %15, align 8
  %17 = getelementptr inbounds %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %16, i64 3
  %18 = load %class.TIntermAggregate* (%class.TIntermNode*)*, %class.TIntermAggregate* (%class.TIntermNode*)** %17, align 8
  %19 = tail call %class.TIntermAggregate* %18(%class.TIntermNode* nonnull %12) #21
  %20 = icmp eq %class.TIntermAggregate* %19, null
  br i1 %20, label %84, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.TIntermAggregate, %class.TIntermAggregate* %19, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load %class.TIntermNode**, %class.TIntermNode*** %22, align 8
  %24 = load %class.TIntermNode*, %class.TIntermNode** %23, align 8
  %25 = bitcast %class.TIntermNode* %24 to %class.TIntermTyped* (%class.TIntermNode*)***
  %26 = load %class.TIntermTyped* (%class.TIntermNode*)**, %class.TIntermTyped* (%class.TIntermNode*)*** %25, align 8
  %27 = getelementptr inbounds %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %26, i64 1
  %28 = load %class.TIntermTyped* (%class.TIntermNode*)*, %class.TIntermTyped* (%class.TIntermNode*)** %27, align 8
  %29 = tail call %class.TIntermTyped* %28(%class.TIntermNode* %24) #21
  %30 = icmp eq %class.TIntermTyped* %29, null
  br i1 %30, label %84, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1, i32 2
  %33 = load i8, i8* %32, align 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %84

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 8
  %38 = icmp eq i8 %37, 2
  br i1 %38, label %39, label %84

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %29, i64 0, i32 0
  %41 = bitcast %class.TIntermTyped* %29 to %class.TIntermBinary* (%class.TIntermNode*)***
  %42 = load %class.TIntermBinary* (%class.TIntermNode*)**, %class.TIntermBinary* (%class.TIntermNode*)*** %41, align 8
  %43 = getelementptr inbounds %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %42, i64 4
  %44 = load %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %43, align 8
  %45 = tail call %class.TIntermBinary* %44(%class.TIntermNode* %40) #21
  %46 = icmp eq %class.TIntermBinary* %45, null
  br i1 %46, label %84, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %45, i64 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 145
  br i1 %50, label %51, label %84

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %45, i64 0, i32 1
  %53 = load %class.TIntermTyped*, %class.TIntermTyped** %52, align 8
  %54 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %53, i64 0, i32 0
  %55 = bitcast %class.TIntermTyped* %53 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %56 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %55, align 8
  %57 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %56, i64 7
  %58 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %57, align 8
  %59 = tail call %class.TIntermSymbol* %58(%class.TIntermNode* %54) #21
  %60 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %45, i64 0, i32 2
  %61 = load %class.TIntermTyped*, %class.TIntermTyped** %60, align 8
  %62 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %61, i64 0, i32 0
  %63 = bitcast %class.TIntermTyped* %61 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %64 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %63, align 8
  %65 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %64, i64 2
  %66 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %65, align 8
  %67 = tail call %class.TIntermConstantUnion* %66(%class.TIntermNode* %62) #21
  %68 = icmp ne %class.TIntermSymbol* %59, null
  %69 = icmp ne %class.TIntermConstantUnion* %67, null
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %84

71:                                               ; preds = %51
  %72 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %67, i64 0, i32 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 8
  %74 = icmp eq i8 %73, 2
  br i1 %74, label %75, label %84

75:                                               ; preds = %71
  %76 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %67, i64 0, i32 0, i32 1, i32 3
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 1
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  store %class.TIntermSymbol* %59, %class.TIntermSymbol** %5, align 8
  %80 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %67, i64 0, i32 1
  %81 = load %class.ConstantUnion*, %class.ConstantUnion** %80, align 8
  %82 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %81, i64 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %7, align 4
  br label %84

84:                                               ; preds = %14, %47, %39, %71, %75, %79, %51, %21, %35, %31, %2
  %85 = load %class.TIntermSymbol*, %class.TIntermSymbol** %5, align 8
  %86 = icmp eq %class.TIntermSymbol* %85, null
  br i1 %86, label %324, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 4
  %89 = load %class.TIntermTyped*, %class.TIntermTyped** %88, align 8
  %90 = icmp eq %class.TIntermTyped* %89, null
  br i1 %90, label %141, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %89, i64 0, i32 0
  %93 = bitcast %class.TIntermTyped* %89 to %class.TIntermBinary* (%class.TIntermNode*)***
  %94 = load %class.TIntermBinary* (%class.TIntermNode*)**, %class.TIntermBinary* (%class.TIntermNode*)*** %93, align 8
  %95 = getelementptr inbounds %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %94, i64 4
  %96 = load %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %95, align 8
  %97 = tail call %class.TIntermBinary* %96(%class.TIntermNode* %92) #21
  %98 = icmp eq %class.TIntermBinary* %97, null
  br i1 %98, label %141, label %99

99:                                               ; preds = %91
  %100 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %97, i64 0, i32 1
  %101 = load %class.TIntermTyped*, %class.TIntermTyped** %100, align 8
  %102 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %101, i64 0, i32 0
  %103 = bitcast %class.TIntermTyped* %101 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %104 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %103, align 8
  %105 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %104, i64 7
  %106 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %105, align 8
  %107 = tail call %class.TIntermSymbol* %106(%class.TIntermNode* %102) #21
  %108 = icmp eq %class.TIntermSymbol* %107, null
  br i1 %108, label %141, label %109

109:                                              ; preds = %99
  %110 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %107, i64 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = load %class.TIntermSymbol*, %class.TIntermSymbol** %5, align 8
  %113 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %112, i64 0, i32 1
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %111, %114
  br i1 %115, label %116, label %143

116:                                              ; preds = %109
  %117 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %97, i64 0, i32 2
  %118 = load %class.TIntermTyped*, %class.TIntermTyped** %117, align 8
  %119 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %118, i64 0, i32 0
  %120 = bitcast %class.TIntermTyped* %118 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %121 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %120, align 8
  %122 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %121, i64 2
  %123 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %122, align 8
  %124 = tail call %class.TIntermConstantUnion* %123(%class.TIntermNode* %119) #21
  %125 = icmp eq %class.TIntermConstantUnion* %124, null
  br i1 %125, label %141, label %126

126:                                              ; preds = %116
  %127 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %124, i64 0, i32 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 8
  %129 = icmp eq i8 %128, 2
  br i1 %129, label %130, label %141

130:                                              ; preds = %126
  %131 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %124, i64 0, i32 0, i32 1, i32 3
  %132 = load i8, i8* %131, align 1
  %133 = icmp eq i8 %132, 1
  br i1 %133, label %134, label %141

134:                                              ; preds = %130
  %135 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %97, i64 0, i32 0, i32 1
  %136 = load i32, i32* %135, align 8
  store i32 %136, i32* %6, align 8
  %137 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %124, i64 0, i32 1
  %138 = load %class.ConstantUnion*, %class.ConstantUnion** %137, align 8
  %139 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %138, i64 0, i32 0, i32 0
  %140 = load i32, i32* %139, align 4
  store i32 %140, i32* %8, align 8
  br label %141

141:                                              ; preds = %91, %87, %134, %130, %126, %116, %99
  %142 = load %class.TIntermSymbol*, %class.TIntermSymbol** %5, align 8
  br label %143

143:                                              ; preds = %141, %109
  %144 = phi %class.TIntermSymbol* [ %142, %141 ], [ %112, %109 ]
  %145 = icmp eq %class.TIntermSymbol* %144, null
  br i1 %145, label %241, label %146

146:                                              ; preds = %143
  %147 = load i32, i32* %6, align 8
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %241, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 5
  %151 = load %class.TIntermTyped*, %class.TIntermTyped** %150, align 8
  %152 = icmp eq %class.TIntermTyped* %151, null
  br i1 %152, label %241, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %151, i64 0, i32 0
  %155 = bitcast %class.TIntermTyped* %151 to %class.TIntermBinary* (%class.TIntermNode*)***
  %156 = load %class.TIntermBinary* (%class.TIntermNode*)**, %class.TIntermBinary* (%class.TIntermNode*)*** %155, align 8
  %157 = getelementptr inbounds %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %156, i64 4
  %158 = load %class.TIntermBinary* (%class.TIntermNode*)*, %class.TIntermBinary* (%class.TIntermNode*)** %157, align 8
  %159 = tail call %class.TIntermBinary* %158(%class.TIntermNode* %154) #21
  %160 = load %class.TIntermTyped*, %class.TIntermTyped** %150, align 8
  %161 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %160, i64 0, i32 0
  %162 = bitcast %class.TIntermTyped* %160 to %class.TIntermUnary* (%class.TIntermNode*)***
  %163 = load %class.TIntermUnary* (%class.TIntermNode*)**, %class.TIntermUnary* (%class.TIntermNode*)*** %162, align 8
  %164 = getelementptr inbounds %class.TIntermUnary* (%class.TIntermNode*)*, %class.TIntermUnary* (%class.TIntermNode*)** %163, i64 5
  %165 = load %class.TIntermUnary* (%class.TIntermNode*)*, %class.TIntermUnary* (%class.TIntermNode*)** %164, align 8
  %166 = tail call %class.TIntermUnary* %165(%class.TIntermNode* %161) #21
  %167 = icmp eq %class.TIntermBinary* %159, null
  br i1 %167, label %214, label %168

168:                                              ; preds = %153
  %169 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %159, i64 0, i32 1
  %170 = load %class.TIntermTyped*, %class.TIntermTyped** %169, align 8
  %171 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %170, i64 0, i32 0
  %172 = bitcast %class.TIntermTyped* %170 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %173 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %172, align 8
  %174 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %173, i64 7
  %175 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %174, align 8
  %176 = tail call %class.TIntermSymbol* %175(%class.TIntermNode* %171) #21
  %177 = icmp eq %class.TIntermSymbol* %176, null
  br i1 %177, label %241, label %178

178:                                              ; preds = %168
  %179 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %176, i64 0, i32 1
  %180 = load i32, i32* %179, align 8
  %181 = load %class.TIntermSymbol*, %class.TIntermSymbol** %5, align 8
  %182 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %181, i64 0, i32 1
  %183 = load i32, i32* %182, align 8
  %184 = icmp eq i32 %180, %183
  br i1 %184, label %185, label %243

185:                                              ; preds = %178
  %186 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %159, i64 0, i32 0, i32 1
  %187 = load i32, i32* %186, align 8
  %188 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %159, i64 0, i32 2
  %189 = load %class.TIntermTyped*, %class.TIntermTyped** %188, align 8
  %190 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %189, i64 0, i32 0
  %191 = bitcast %class.TIntermTyped* %189 to %class.TIntermConstantUnion* (%class.TIntermNode*)***
  %192 = load %class.TIntermConstantUnion* (%class.TIntermNode*)**, %class.TIntermConstantUnion* (%class.TIntermNode*)*** %191, align 8
  %193 = getelementptr inbounds %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %192, i64 2
  %194 = load %class.TIntermConstantUnion* (%class.TIntermNode*)*, %class.TIntermConstantUnion* (%class.TIntermNode*)** %193, align 8
  %195 = tail call %class.TIntermConstantUnion* %194(%class.TIntermNode* %190) #21
  %196 = icmp eq %class.TIntermConstantUnion* %195, null
  br i1 %196, label %241, label %197

197:                                              ; preds = %185
  %198 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %195, i64 0, i32 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 8
  %200 = icmp eq i8 %199, 2
  br i1 %200, label %201, label %241

201:                                              ; preds = %197
  %202 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %195, i64 0, i32 0, i32 1, i32 3
  %203 = load i8, i8* %202, align 1
  %204 = icmp eq i8 %203, 1
  br i1 %204, label %205, label %241

205:                                              ; preds = %201
  %206 = getelementptr inbounds %class.TIntermConstantUnion, %class.TIntermConstantUnion* %195, i64 0, i32 1
  %207 = load %class.ConstantUnion*, %class.ConstantUnion** %206, align 8
  %208 = getelementptr inbounds %class.ConstantUnion, %class.ConstantUnion* %207, i64 0, i32 0, i32 0
  %209 = load i32, i32* %208, align 4
  switch i32 %187, label %213 [
    i32 146, label %210
    i32 147, label %211
  ]

210:                                              ; preds = %205
  store i32 %209, i32* %9, align 4
  br label %241

211:                                              ; preds = %205
  %212 = sub nsw i32 0, %209
  store i32 %212, i32* %9, align 4
  br label %241

213:                                              ; preds = %205
  store i32 0, i32* %9, align 4
  br label %241

214:                                              ; preds = %153
  %215 = icmp eq %class.TIntermUnary* %166, null
  br i1 %215, label %241, label %216

216:                                              ; preds = %214
  %217 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %166, i64 0, i32 1
  %218 = load %class.TIntermTyped*, %class.TIntermTyped** %217, align 8
  %219 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %218, i64 0, i32 0
  %220 = bitcast %class.TIntermTyped* %218 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %221 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %220, align 8
  %222 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %221, i64 7
  %223 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %222, align 8
  %224 = tail call %class.TIntermSymbol* %223(%class.TIntermNode* %219) #21
  %225 = icmp eq %class.TIntermSymbol* %224, null
  br i1 %225, label %241, label %226

226:                                              ; preds = %216
  %227 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %224, i64 0, i32 1
  %228 = load i32, i32* %227, align 8
  %229 = load %class.TIntermSymbol*, %class.TIntermSymbol** %5, align 8
  %230 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %229, i64 0, i32 1
  %231 = load i32, i32* %230, align 8
  %232 = icmp eq i32 %228, %231
  br i1 %232, label %233, label %243

233:                                              ; preds = %226
  %234 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %166, i64 0, i32 0, i32 1
  %235 = load i32, i32* %234, align 8
  switch i32 %235, label %240 [
    i32 12, label %236
    i32 13, label %237
    i32 14, label %238
    i32 15, label %239
  ]

236:                                              ; preds = %233
  store i32 1, i32* %9, align 4
  br label %241

237:                                              ; preds = %233
  store i32 -1, i32* %9, align 4
  br label %241

238:                                              ; preds = %233
  store i32 1, i32* %9, align 4
  br label %241

239:                                              ; preds = %233
  store i32 -1, i32* %9, align 4
  br label %241

240:                                              ; preds = %233
  store i32 0, i32* %9, align 4
  br label %241

241:                                              ; preds = %143, %146, %149, %216, %240, %239, %238, %237, %236, %168, %210, %211, %213, %185, %197, %201, %214
  %242 = load %class.TIntermSymbol*, %class.TIntermSymbol** %5, align 8
  br label %243

243:                                              ; preds = %241, %178, %226
  %244 = phi %class.TIntermSymbol* [ %242, %241 ], [ %181, %178 ], [ %229, %226 ]
  %245 = icmp eq %class.TIntermSymbol* %244, null
  br i1 %245, label %324, label %246

246:                                              ; preds = %243
  %247 = load i32, i32* %6, align 8
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %246
  %250 = load i32, i32* %9, align 4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %324, label %252

252:                                              ; preds = %249
  %253 = bitcast %"class.glsl::LoopUnrollable"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %253) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %253, i8 -86, i64 80, i1 false)
  %254 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %3, i64 0, i32 0, i32 0
  %255 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %3, i64 0, i32 0, i32 1
  store i8 1, i8* %255, align 8
  %256 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %3, i64 0, i32 0, i32 2
  %257 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %3, i64 0, i32 0, i32 6, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %256, i8 0, i64 31, i1 false) #20
  %258 = tail call %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() #21
  store %class.TPoolAllocator* %258, %class.TPoolAllocator** %257, align 8
  %259 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %3, i64 0, i32 0, i32 7
  %260 = bitcast %"class.std::__1::vector.83"* %259 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %260, i8 0, i64 24, i1 false) #20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN4glsl14LoopUnrollableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %254, align 8
  %261 = load %class.TIntermSymbol*, %class.TIntermSymbol** %5, align 8
  %262 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %261, i64 0, i32 1
  %263 = load i32, i32* %262, align 8
  %264 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %3, i64 0, i32 1
  store i8 1, i8* %264, align 8
  %265 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %3, i64 0, i32 2
  store i32 %263, i32* %265, align 4
  %266 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 6
  %267 = load %class.TIntermNode*, %class.TIntermNode** %266, align 8
  %268 = icmp eq %class.TIntermNode* %267, null
  br i1 %268, label %276, label %269

269:                                              ; preds = %252
  %270 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %3, i64 0, i32 0
  %271 = bitcast %class.TIntermNode* %267 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %272 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %271, align 8
  %273 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %272, align 8
  call void %273(%class.TIntermNode* nonnull %267, %class.TIntermTraverser* nonnull %270) #21
  %274 = load i8, i8* %264, align 8, !range !2
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %305, label %276

276:                                              ; preds = %269, %252
  %277 = load i32, i32* %6, align 8
  switch i32 %277, label %305 [
    i32 26, label %278
    i32 27, label %281
    i32 25, label %284
    i32 24, label %291
  ]

278:                                              ; preds = %276
  store i32 24, i32* %6, align 8
  %279 = load i32, i32* %8, align 8
  %280 = add nsw i32 %279, 1
  store i32 %280, i32* %8, align 8
  br label %293

281:                                              ; preds = %276
  store i32 24, i32* %6, align 8
  %282 = load i32, i32* %8, align 8
  %283 = add nsw i32 %282, -1
  store i32 %283, i32* %8, align 8
  br label %286

284:                                              ; preds = %276
  store i32 24, i32* %6, align 8
  %285 = load i32, i32* %8, align 4
  br label %286

286:                                              ; preds = %281, %284
  %287 = phi i32 [ %283, %281 ], [ %285, %284 ]
  %288 = load i32, i32* %7, align 4
  store i32 %287, i32* %7, align 4
  store i32 %288, i32* %8, align 4
  %289 = load i32, i32* %9, align 4
  %290 = sub nsw i32 0, %289
  store i32 %290, i32* %9, align 4
  br label %291

291:                                              ; preds = %276, %286
  %292 = load i32, i32* %8, align 8
  br label %293

293:                                              ; preds = %291, %278
  %294 = phi i32 [ %292, %291 ], [ %280, %278 ]
  %295 = load i32, i32* %7, align 4
  %296 = icmp sgt i32 %294, %295
  br i1 %296, label %297, label %305

297:                                              ; preds = %293
  %298 = load i32, i32* %9, align 4
  %299 = icmp slt i32 %298, 0
  br i1 %299, label %305, label %300

300:                                              ; preds = %297
  %301 = xor i32 %295, -1
  %302 = add i32 %294, %301
  %303 = add i32 %302, %298
  %304 = sdiv i32 %303, %298
  br label %305

305:                                              ; preds = %276, %297, %293, %269, %300
  %306 = phi i32 [ %304, %300 ], [ -1, %269 ], [ 0, %293 ], [ -1, %297 ], [ -1, %276 ]
  store i32 %306, i32* %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %254, align 8
  %307 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %308 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %307, align 8
  %309 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %308, null
  br i1 %309, label %315, label %310

310:                                              ; preds = %305
  %311 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %308 to i64
  %312 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %3, i64 0, i32 0, i32 7, i32 0, i32 1
  %313 = bitcast %"struct.TIntermTraverser::ParentBlock"** %312 to i64*
  store i64 %311, i64* %313, align 8
  %314 = bitcast %"struct.TIntermTraverser::ParentBlock"* %308 to i8*
  call void @_ZdlPv(i8* %314) #24
  br label %315

315:                                              ; preds = %310, %305
  %316 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %3, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %317 = load %class.TIntermNode**, %class.TIntermNode*** %316, align 8
  %318 = icmp eq %class.TIntermNode** %317, null
  br i1 %318, label %323, label %319

319:                                              ; preds = %315
  %320 = ptrtoint %class.TIntermNode** %317 to i64
  %321 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %3, i64 0, i32 0, i32 6, i32 0, i32 0, i32 1
  %322 = bitcast %class.TIntermNode*** %321 to i64*
  store i64 %320, i64* %322, align 8
  br label %323

323:                                              ; preds = %315, %319
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %253) #20
  ret void

324:                                              ; preds = %84, %249, %246, %243
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4glsl14LoopUnrollable8traverseEP11TIntermLoopi(%"class.glsl::LoopUnrollable"*, %class.TIntermLoop* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 1
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 2
  store i32 %2, i32* %5, align 4
  %6 = getelementptr inbounds %class.TIntermLoop, %class.TIntermLoop* %1, i64 0, i32 6
  %7 = load %class.TIntermNode*, %class.TIntermNode** %6, align 8
  %8 = icmp eq %class.TIntermNode* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 0
  %11 = bitcast %class.TIntermNode* %7 to void (%class.TIntermNode*, %class.TIntermTraverser*)***
  %12 = load void (%class.TIntermNode*, %class.TIntermTraverser*)**, void (%class.TIntermNode*, %class.TIntermTraverser*)*** %11, align 8
  %13 = load void (%class.TIntermNode*, %class.TIntermTraverser*)*, void (%class.TIntermNode*, %class.TIntermTraverser*)** %12, align 8
  tail call void %13(%class.TIntermNode* nonnull %7, %class.TIntermTraverser* %10) #21
  %14 = load i8, i8* %4, align 8, !range !2
  %15 = icmp ne i8 %14, 0
  br label %16

16:                                               ; preds = %3, %9
  %17 = phi i1 [ true, %3 ], [ %15, %9 ]
  ret i1 %17
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverserD2Ev(%class.TIntermTraverser*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %3, align 8
  %5 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %4 to i64
  %8 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 1
  %9 = bitcast %"struct.TIntermTraverser::ParentBlock"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.TIntermTraverser::ParentBlock"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #24
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %14 = icmp eq %class.TIntermNode** %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %class.TIntermNode** %13 to i64
  %17 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %18 = bitcast %class.TIntermNode*** %17 to i64*
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN4glsl14LoopUnrollable11visitSymbolEP13TIntermSymbol(%"class.glsl::LoopUnrollable"* nocapture, %class.TIntermSymbol* nocapture readonly) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %1, i64 0, i32 0, i32 1, i32 2
  %10 = load i8, i8* %9, align 2
  %11 = and i8 %10, -2
  %12 = icmp eq i8 %11, 16
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 1
  store i8 0, i8* %14, align 8
  br label %15

15:                                               ; preds = %8, %13, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4glsl14LoopUnrollable11visitBinaryE5VisitP13TIntermBinary(%"class.glsl::LoopUnrollable"* nocapture, i32, %class.TIntermBinary*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %29, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.TIntermBinary, %class.TIntermBinary* %2, i64 0, i32 1
  %9 = load %class.TIntermTyped*, %class.TIntermTyped** %8, align 8
  %10 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %9, i64 0, i32 0
  %11 = bitcast %class.TIntermTyped* %9 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %12 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %11, align 8
  %13 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %12, i64 7
  %14 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %13, align 8
  %15 = tail call %class.TIntermSymbol* %14(%class.TIntermNode* %10) #21
  %16 = bitcast %class.TIntermBinary* %2 to %class.TIntermOperator*
  %17 = tail call zeroext i1 @_ZNK15TIntermOperator13modifiesStateEv(%class.TIntermOperator* %16) #21
  %18 = icmp ne %class.TIntermSymbol* %15, null
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %7
  %21 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp ne i32 %22, %24
  br label %26

26:                                               ; preds = %20, %7
  %27 = phi i1 [ true, %7 ], [ %25, %20 ]
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %4, align 8
  br label %29

29:                                               ; preds = %3, %26
  %30 = phi i1 [ %27, %26 ], [ false, %3 ]
  ret i1 %30
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK15TIntermOperator13modifiesStateEv(%class.TIntermOperator*) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4glsl14LoopUnrollable10visitUnaryE5VisitP12TIntermUnary(%"class.glsl::LoopUnrollable"* nocapture, i32, %class.TIntermUnary*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %29, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.TIntermUnary, %class.TIntermUnary* %2, i64 0, i32 1
  %9 = load %class.TIntermTyped*, %class.TIntermTyped** %8, align 8
  %10 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %9, i64 0, i32 0
  %11 = bitcast %class.TIntermTyped* %9 to %class.TIntermSymbol* (%class.TIntermNode*)***
  %12 = load %class.TIntermSymbol* (%class.TIntermNode*)**, %class.TIntermSymbol* (%class.TIntermNode*)*** %11, align 8
  %13 = getelementptr inbounds %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %12, i64 7
  %14 = load %class.TIntermSymbol* (%class.TIntermNode*)*, %class.TIntermSymbol* (%class.TIntermNode*)** %13, align 8
  %15 = tail call %class.TIntermSymbol* %14(%class.TIntermNode* %10) #21
  %16 = bitcast %class.TIntermUnary* %2 to %class.TIntermOperator*
  %17 = tail call zeroext i1 @_ZNK15TIntermOperator13modifiesStateEv(%class.TIntermOperator* %16) #21
  %18 = icmp ne %class.TIntermSymbol* %15, null
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %7
  %21 = getelementptr inbounds %class.TIntermSymbol, %class.TIntermSymbol* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp ne i32 %22, %24
  br label %26

26:                                               ; preds = %20, %7
  %27 = phi i1 [ true, %7 ], [ %25, %20 ]
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %4, align 8
  br label %29

29:                                               ; preds = %3, %26
  %30 = phi i1 [ %27, %26 ], [ false, %3 ]
  ret i1 %30
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4glsl14LoopUnrollable11visitBranchE5VisitP13TIntermBranch(%"class.glsl::LoopUnrollable"* nocapture, i32, %class.TIntermBranch* nocapture readonly) unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.TIntermBranch, %class.TIntermBranch* %2, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -114
  %11 = icmp ult i32 %10, 4
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  store i8 0, i8* %4, align 8
  br label %13

13:                                               ; preds = %12, %7, %3
  %14 = phi i1 [ false, %3 ], [ true, %7 ], [ false, %12 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZN4glsl14LoopUnrollable14visitAggregateE5VisitP16TIntermAggregate(%"class.glsl::LoopUnrollable"* nocapture readonly, i32, %class.TIntermAggregate* nocapture readnone) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4glsl6ShaderD2Ev(%"class.glsl::Shader"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4glsl6ShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNSt3__113__vector_baseIN4glsl12UniformBlockENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.70"* %3) #21
  %4 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNSt3__113__vector_baseIN4glsl9AttributeENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.63"* %4) #21
  %5 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNSt3__113__vector_baseIN4glsl7UniformENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.56"* %5) #21
  %6 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNSt3__113__vector_baseIN4glsl7UniformENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.56"* %6) #21
  %7 = getelementptr inbounds %"class.glsl::Shader", %"class.glsl::Shader"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__110__list_impIN4glsl7VaryingENS_9allocatorIS2_EEE5clearEv(%"class.std::__1::__list_imp"* %7) #21
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4glsl6ShaderD0Ev(%"class.glsl::Shader"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #25
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4glsl18Std140BlockEncoderD0Ev(%"class.glsl::Std140BlockEncoder"*) unnamed_addr #10 comdat align 2 {
  %2 = bitcast %"class.glsl::Std140BlockEncoder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #24
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverser18visitConstantUnionEP20TIntermConstantUnion(%class.TIntermTraverser*, %class.TIntermConstantUnion*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser9visitCaseE5VisitP11TIntermCase(%class.TIntermTraverser*, i32, %class.TIntermCase*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4glsl14LoopUnrollableD0Ev(%"class.glsl::LoopUnrollable"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %4 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %3, align 8
  %5 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %4 to i64
  %8 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 0, i32 7, i32 0, i32 1
  %9 = bitcast %"struct.TIntermTraverser::ParentBlock"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.TIntermTraverser::ParentBlock"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #24
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %14 = icmp eq %class.TIntermNode** %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %class.TIntermNode** %13 to i64
  %17 = getelementptr inbounds %"class.glsl::LoopUnrollable", %"class.glsl::LoopUnrollable"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 1
  %18 = bitcast %class.TIntermNode*** %17 to i64*
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser14visitSelectionE5VisitP16TIntermSelection(%class.TIntermTraverser*, i32, %class.TIntermSelection*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser9visitLoopE5VisitP11TIntermLoop(%class.TIntermTraverser*, i32, %class.TIntermLoop*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitSwitchE5VisitP13TIntermSwitch(%class.TIntermTraverser*, i32, %class.TIntermSwitch*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4glsl18BlockLayoutEncoderD0Ev(%"class.glsl::BlockLayoutEncoder"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #25
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseIN4glsl14ShaderVariableENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.13"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base.13", %"class.std::__1::__vector_base.13"* %0, i64 0, i32 0
  %3 = load %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** %2, align 8
  %4 = icmp eq %"struct.glsl::ShaderVariable"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.glsl::ShaderVariable"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::__vector_base.13", %"class.std::__1::__vector_base.13"* %0, i64 0, i32 1
  %8 = load %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** %7, align 8
  %9 = icmp eq %"struct.glsl::ShaderVariable"* %8, %3
  br i1 %9, label %20, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__vector_base.13", %"class.std::__1::__vector_base.13"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::__compressed_pair.14"* %11 to %"class.std::__1::allocator.17"*
  br label %13

13:                                               ; preds = %10, %13
  %14 = phi %"struct.glsl::ShaderVariable"* [ %8, %10 ], [ %15, %13 ]
  %15 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %14, i64 -1
  tail call void @_ZNSt3__19allocatorIN4glsl14ShaderVariableEE7destroyEPS2_(%"class.std::__1::allocator.17"* %12, %"struct.glsl::ShaderVariable"* %15) #21
  %16 = icmp eq %"struct.glsl::ShaderVariable"* %15, %3
  br i1 %16, label %17, label %13

17:                                               ; preds = %13
  %18 = bitcast %"class.std::__1::__vector_base.13"* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %5, %17
  %21 = phi i8* [ %19, %17 ], [ %6, %5 ]
  store %"struct.glsl::ShaderVariable"* %3, %"struct.glsl::ShaderVariable"** %7, align 8
  tail call void @_ZdlPv(i8* %21) #24
  br label %22

22:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__19allocatorIN4glsl14ShaderVariableEE7destroyEPS2_(%"class.std::__1::allocator.17"*, %"struct.glsl::ShaderVariable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %1, i64 0, i32 5, i32 0
  tail call void @_ZNSt3__113__vector_baseIN4glsl14ShaderVariableENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.13"* %3) #21
  %4 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %1, i64 0, i32 2
  %5 = bitcast %"class.std::__1::basic_string.4"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #24
  br label %12

12:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: optsize
declare i64 @_ZNK5TType13getStructSizeEv(%class.TType*) local_unnamed_addr #7

; Function Attrs: optsize
declare i64 @_ZNK20TFieldListCollection19calculateObjectSizeEv(%class.TFieldListCollection*) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %16

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = zext i8 %6 to i64
  br label %16

16:                                               ; preds = %8, %13
  %17 = phi i8* [ %10, %8 ], [ %14, %13 ]
  %18 = phi i64 [ %12, %8 ], [ %15, %13 ]
  %19 = icmp ugt i64 %18, %2
  br i1 %19, label %20, label %34

20:                                               ; preds = %16
  %21 = sub i64 %18, %2
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds i8, i8* %17, i64 %2
  %25 = zext i8 %1 to i32
  %26 = tail call i8* @memchr(i8* %24, i32 %25, i64 %21) #21
  br label %27

27:                                               ; preds = %23, %20
  %28 = phi i8* [ %26, %23 ], [ null, %20 ]
  %29 = icmp eq i8* %28, null
  %30 = ptrtoint i8* %28 to i64
  %31 = ptrtoint i8* %17 to i64
  %32 = sub i64 %30, %31
  %33 = select i1 %29, i64 -1, i64 %32
  br label %34

34:                                               ; preds = %16, %27
  %35 = phi i64 [ -1, %16 ], [ %33, %27 ]
  ret i64 %35
}

; Function Attrs: nofree nounwind optsize readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #12

; Function Attrs: optsize
declare %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #7

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #13

; Function Attrs: optsize
declare i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator*, i64) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverserD0Ev(%class.TIntermTraverser*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV16TIntermTraverser, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"struct.TIntermTraverser::ParentBlock"*, %"struct.TIntermTraverser::ParentBlock"** %3, align 8
  %5 = icmp eq %"struct.TIntermTraverser::ParentBlock"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.TIntermTraverser::ParentBlock"* %4 to i64
  %8 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 7, i32 0, i32 1
  %9 = bitcast %"struct.TIntermTraverser::ParentBlock"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.TIntermTraverser::ParentBlock"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #24
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.TIntermNode**, %class.TIntermNode*** %12, align 8
  %14 = icmp eq %class.TIntermNode** %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %class.TIntermNode** %13 to i64
  %17 = getelementptr inbounds %class.TIntermTraverser, %class.TIntermTraverser* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %18 = bitcast %class.TIntermNode*** %17 to i64*
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN16TIntermTraverser11visitSymbolEP13TIntermSymbol(%class.TIntermTraverser*, %class.TIntermSymbol*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitBinaryE5VisitP13TIntermBinary(%class.TIntermTraverser*, i32, %class.TIntermBinary*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser10visitUnaryE5VisitP12TIntermUnary(%class.TIntermTraverser*, i32, %class.TIntermUnary*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser14visitAggregateE5VisitP16TIntermAggregate(%class.TIntermTraverser*, i32, %class.TIntermAggregate*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16TIntermTraverser11visitBranchE5VisitP13TIntermBranch(%class.TIntermTraverser*, i32, %class.TIntermBranch*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: optsize
declare void @_ZN13TIntermSymbol8traverseEP16TIntermTraverser(%class.TIntermSymbol*, %class.TIntermTraverser*) unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermTyped* @_ZN12TIntermTyped10getAsTypedEv(%class.TIntermTyped*) unnamed_addr #0 comdat align 2 {
  ret %class.TIntermTyped* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermConstantUnion* @_ZN11TIntermNode18getAsConstantUnionEv(%class.TIntermNode*) unnamed_addr #0 comdat align 2 {
  ret %class.TIntermConstantUnion* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermAggregate* @_ZN11TIntermNode14getAsAggregateEv(%class.TIntermNode*) unnamed_addr #0 comdat align 2 {
  ret %class.TIntermAggregate* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermBinary* @_ZN11TIntermNode15getAsBinaryNodeEv(%class.TIntermNode*) unnamed_addr #0 comdat align 2 {
  ret %class.TIntermBinary* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermUnary* @_ZN11TIntermNode14getAsUnaryNodeEv(%class.TIntermNode*) unnamed_addr #0 comdat align 2 {
  ret %class.TIntermUnary* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermSelection* @_ZN11TIntermNode18getAsSelectionNodeEv(%class.TIntermNode*) unnamed_addr #0 comdat align 2 {
  ret %class.TIntermSelection* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermSymbol* @_ZN13TIntermSymbol15getAsSymbolNodeEv(%class.TIntermSymbol*) unnamed_addr #0 comdat align 2 {
  ret %class.TIntermSymbol* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermLoop* @_ZN11TIntermNode13getAsLoopNodeEv(%class.TIntermNode*) unnamed_addr #0 comdat align 2 {
  ret %class.TIntermLoop* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermBranch* @_ZN11TIntermNode15getAsBranchNodeEv(%class.TIntermNode*) unnamed_addr #0 comdat align 2 {
  ret %class.TIntermBranch* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermSwitch* @_ZN11TIntermNode15getAsSwitchNodeEv(%class.TIntermNode*) unnamed_addr #0 comdat align 2 {
  ret %class.TIntermSwitch* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermCase* @_ZN11TIntermNode13getAsCaseNodeEv(%class.TIntermNode*) unnamed_addr #0 comdat align 2 {
  ret %class.TIntermCase* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4glsl9TemporaryD0Ev(%"class.glsl::Temporary"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4glsl9TemporaryD2Ev(%"class.glsl::Temporary"* %0) #21
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN12TIntermTyped7setTypeERK5TType(%class.TIntermTyped*, %class.TType* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.TIntermTyped, %class.TIntermTyped* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %class.TType, %class.TType* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 64, i1 false)
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %3, label %33, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %8, label %23, label %13

13:                                               ; preds = %4
  br i1 %12, label %17, label %14

14:                                               ; preds = %13
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  br label %33

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = tail call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %0, i8* %19, i64 %21) #22
  br label %33

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %29 = zext i8 %11 to i64
  %30 = select i1 %12, i8* %25, i8* %28
  %31 = select i1 %12, i64 %27, i64 %29
  %32 = tail call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %0, i8* %30, i64 %31) #22
  br label %33

33:                                               ; preds = %14, %2, %23, %17
  %34 = phi %"class.std::__1::basic_string"* [ %32, %23 ], [ %22, %17 ], [ %0, %2 ], [ %0, %14 ]
  ret %"class.std::__1::basic_string"* %34
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermSymbol* @_ZN11TIntermNode15getAsSymbolNodeEv(%class.TIntermNode*) unnamed_addr #0 comdat align 2 {
  ret %class.TIntermSymbol* null
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN11TIntermNodeD2Ev(%class.TIntermNode*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #14

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ult i64 %2, 23
  br i1 %4, label %5, label %14

5:                                                ; preds = %3
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %7 = trunc i64 %2 to i8
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 %7, i8* %9, align 1
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %1, i64 %2, i1 false) #20
  br label %12

12:                                               ; preds = %5, %11
  %13 = getelementptr inbounds i8, i8* %6, i64 %2
  store i8 0, i8* %13, align 1
  br label %20

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i64
  %19 = add i64 %2, -22
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE21__grow_by_and_replaceEmmmmmmPKc(%"class.std::__1::basic_string"* %0, i64 22, i64 %19, i64 %18, i64 0, i64 %18, i64 %2, i8* %1) #22
  br label %20

20:                                               ; preds = %14, %12
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 9223372036854775807
  %7 = icmp ugt i64 %6, %2
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %11, align 8
  %12 = icmp eq i64 %2, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %1, i64 %2, i1 false) #20
  br label %14

14:                                               ; preds = %8, %13
  %15 = getelementptr inbounds i8, i8* %10, i64 %2
  store i8 0, i8* %15, align 1
  br label %22

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %6, -1
  %20 = add i64 %2, 1
  %21 = sub i64 %20, %6
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE21__grow_by_and_replaceEmmmmmmPKc(%"class.std::__1::basic_string"* %0, i64 %19, i64 %21, i64 %18, i64 0, i64 %18, i64 %2, i8* %1) #22
  br label %22

22:                                               ; preds = %16, %14
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE21__grow_by_and_replaceEmmmmmmPKc(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i8*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 -18, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #23
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i8* [ %20, %18 ], [ %22, %21 ]
  %25 = icmp ult i64 %1, 9223372036854775783
  br i1 %25, label %26, label %35

26:                                               ; preds = %23
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 23
  br i1 %31, label %35, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 16
  %34 = and i64 %33, -16
  br label %35

35:                                               ; preds = %23, %32, %26
  %36 = phi i64 [ %34, %32 ], [ 23, %26 ], [ -17, %23 ]
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %class.TPoolAllocator*, %class.TPoolAllocator** %37, align 8
  %39 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %38, i64 %36) #21
  %40 = icmp eq i64 %4, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %35
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %24, i64 %4, i1 false) #20
  br label %42

42:                                               ; preds = %35, %41
  %43 = icmp eq i64 %6, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds i8, i8* %39, i64 %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %7, i64 %6, i1 false) #20
  br label %46

46:                                               ; preds = %42, %44
  %47 = sub i64 %3, %5
  %48 = sub i64 %47, %4
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds i8, i8* %39, i64 %4
  %52 = getelementptr inbounds i8, i8* %51, i64 %6
  %53 = getelementptr inbounds i8, i8* %24, i64 %4
  %54 = getelementptr inbounds i8, i8* %53, i64 %5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %54, i64 %48, i1 false) #20
  br label %55

55:                                               ; preds = %50, %46
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %56, align 8
  %57 = or i64 %36, -9223372036854775808
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %57, i64* %58, align 8
  %59 = add i64 %47, %6
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %39, i64 %59
  store i8 0, i8* %61, align 1
  ret void
}

; Function Attrs: optsize
declare void @_ZN20TIntermConstantUnion8traverseEP16TIntermTraverser(%class.TIntermConstantUnion*, %class.TIntermTraverser*) unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %class.TIntermConstantUnion* @_ZN20TIntermConstantUnion18getAsConstantUnionEv(%class.TIntermConstantUnion*) unnamed_addr #0 comdat align 2 {
  ret %class.TIntermConstantUnion* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4glsl8ConstantD0Ev(%"class.glsl::Constant"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #15

; Function Attrs: nounwind optsize
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #15

; Function Attrs: nounwind optsize
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #15

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK5TType18blockRegisterCountEv(%class.TType*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 9
  %3 = load %class.TInterfaceBlock*, %class.TInterfaceBlock** %2, align 8
  %4 = icmp eq %class.TInterfaceBlock* %3, null
  br i1 %4, label %35, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.TType, %class.TType* %0, i64 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 38
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.TInterfaceBlock, %class.TInterfaceBlock* %3, i64 0, i32 0, i32 2
  %11 = load %class.TVector*, %class.TVector** %10, align 8
  %12 = getelementptr inbounds %class.TVector, %class.TVector* %11, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %class.TField*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %class.TVector* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %14, %16
  br i1 %17, label %37, label %18

18:                                               ; preds = %9, %18
  %19 = phi i64 [ %31, %18 ], [ %16, %9 ]
  %20 = phi i64 [ %29, %18 ], [ 0, %9 ]
  %21 = phi i32 [ %28, %18 ], [ 0, %9 ]
  %22 = inttoptr i64 %19 to %class.TField**
  %23 = getelementptr inbounds %class.TField*, %class.TField** %22, i64 %20
  %24 = load %class.TField*, %class.TField** %23, align 8
  %25 = getelementptr inbounds %class.TField, %class.TField* %24, i64 0, i32 0
  %26 = load %class.TType*, %class.TType** %25, align 8
  %27 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %26) #22
  %28 = add nsw i32 %27, %21
  %29 = add nuw i64 %20, 1
  %30 = load i64, i64* %13, align 8
  %31 = load i64, i64* %15, align 8
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = icmp ult i64 %29, %33
  br i1 %34, label %18, label %37

35:                                               ; preds = %1, %5
  %36 = tail call i32 @_ZNK5TType18totalRegisterCountEv(%class.TType* %0) #22
  br label %37

37:                                               ; preds = %18, %9, %35
  %38 = phi i32 [ %36, %35 ], [ 0, %9 ], [ %28, %18 ]
  ret i32 %38
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseIN4glsl12UniformBlockENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.70"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base.70", %"class.std::__1::__vector_base.70"* %0, i64 0, i32 0
  %3 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %2, align 8
  %4 = icmp eq %"struct.glsl::UniformBlock"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.glsl::UniformBlock"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::__vector_base.70", %"class.std::__1::__vector_base.70"* %0, i64 0, i32 1
  %8 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %7, align 8
  %9 = icmp eq %"struct.glsl::UniformBlock"* %8, %3
  br i1 %9, label %20, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__vector_base.70", %"class.std::__1::__vector_base.70"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::__compressed_pair.71"* %11 to %"class.std::__1::allocator.74"*
  br label %13

13:                                               ; preds = %13, %10
  %14 = phi %"struct.glsl::UniformBlock"* [ %8, %10 ], [ %15, %13 ]
  %15 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %14, i64 -1
  tail call void @_ZNSt3__19allocatorIN4glsl12UniformBlockEE7destroyEPS2_(%"class.std::__1::allocator.74"* %12, %"struct.glsl::UniformBlock"* %15) #21
  %16 = icmp eq %"struct.glsl::UniformBlock"* %15, %3
  br i1 %16, label %17, label %13

17:                                               ; preds = %13
  %18 = bitcast %"class.std::__1::__vector_base.70"* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %5, %17
  %21 = phi i8* [ %19, %17 ], [ %6, %5 ]
  store %"struct.glsl::UniformBlock"* %3, %"struct.glsl::UniformBlock"** %7, align 8
  tail call void @_ZdlPv(i8* %21) #24
  br label %22

22:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__19allocatorIN4glsl12UniformBlockEE7destroyEPS2_(%"class.std::__1::allocator.74"*, %"struct.glsl::UniformBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %1, i64 0, i32 5, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %1, i64 0, i32 5, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #24
  br label %11

11:                                               ; preds = %6, %2
  %12 = bitcast %"struct.glsl::UniformBlock"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #24
  br label %19

19:                                               ; preds = %11, %16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseIN4glsl9AttributeENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.63"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base.63", %"class.std::__1::__vector_base.63"* %0, i64 0, i32 0
  %3 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %2, align 8
  %4 = icmp eq %"struct.glsl::Attribute"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  tail call void @_ZNSt3__113__vector_baseIN4glsl9AttributeENS_9allocatorIS2_EEE5clearEv(%"class.std::__1::__vector_base.63"* %0) #21
  %6 = bitcast %"class.std::__1::__vector_base.63"* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @_ZdlPv(i8* %7) #24
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseIN4glsl9AttributeENS_9allocatorIS2_EEE5clearEv(%"class.std::__1::__vector_base.63"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base.63", %"class.std::__1::__vector_base.63"* %0, i64 0, i32 0
  %3 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__vector_base.63", %"class.std::__1::__vector_base.63"* %0, i64 0, i32 1
  %5 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %4, align 8
  %6 = icmp eq %"struct.glsl::Attribute"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"struct.glsl::Attribute"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %8, i64 -1
  %10 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %8, i64 -1, i32 2
  %11 = bitcast %"class.std::__1::basic_string.4"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #24
  br label %18

18:                                               ; preds = %15, %7
  %19 = icmp eq %"struct.glsl::Attribute"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"struct.glsl::Attribute"* %3, %"struct.glsl::Attribute"** %4, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseIN4glsl7UniformENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.56"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base.56", %"class.std::__1::__vector_base.56"* %0, i64 0, i32 0
  %3 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %2, align 8
  %4 = icmp eq %"struct.glsl::Uniform"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.glsl::Uniform"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::__vector_base.56", %"class.std::__1::__vector_base.56"* %0, i64 0, i32 1
  %8 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %7, align 8
  %9 = icmp eq %"struct.glsl::Uniform"* %8, %3
  br i1 %9, label %20, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__vector_base.56", %"class.std::__1::__vector_base.56"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::__compressed_pair.57"* %11 to %"class.std::__1::allocator.60"*
  br label %13

13:                                               ; preds = %13, %10
  %14 = phi %"struct.glsl::Uniform"* [ %8, %10 ], [ %15, %13 ]
  %15 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %14, i64 -1
  tail call void @_ZNSt3__19allocatorIN4glsl7UniformEE7destroyEPS2_(%"class.std::__1::allocator.60"* %12, %"struct.glsl::Uniform"* %15) #21
  %16 = icmp eq %"struct.glsl::Uniform"* %15, %3
  br i1 %16, label %17, label %13

17:                                               ; preds = %13
  %18 = bitcast %"class.std::__1::__vector_base.56"* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %5, %17
  %21 = phi i8* [ %19, %17 ], [ %6, %5 ]
  store %"struct.glsl::Uniform"* %3, %"struct.glsl::Uniform"** %7, align 8
  tail call void @_ZdlPv(i8* %21) #24
  br label %22

22:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__19allocatorIN4glsl7UniformEE7destroyEPS2_(%"class.std::__1::allocator.60"*, %"struct.glsl::Uniform"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %1, i64 0, i32 0, i32 5, i32 0
  tail call void @_ZNSt3__113__vector_baseIN4glsl14ShaderVariableENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.13"* %3) #21
  %4 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %1, i64 0, i32 0, i32 2
  %5 = bitcast %"class.std::__1::basic_string.4"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #24
  br label %12

12:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__list_impIN4glsl7VaryingENS_9allocatorIS2_EEE5clearEv(%"class.std::__1::__list_imp"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::__compressed_pair.50"* %6 to %"class.std::__1::allocator.53"*
  %8 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 0, i32 1
  %14 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %9, i64 0, i32 0
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64*
  store i64 %15, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::__list_node_base"* %9 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64**
  %23 = load i64*, i64** %22, align 8
  store i64 %21, i64* %23, align 8
  store i64 0, i64* %2, align 8
  %24 = icmp eq %"struct.std::__1::__list_node_base"* %9, %10
  br i1 %24, label %33, label %25

25:                                               ; preds = %5, %25
  %26 = phi %"struct.std::__1::__list_node_base"* [ %28, %25 ], [ %9, %5 ]
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 0, i32 1
  %28 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 1
  %30 = bitcast %"struct.std::__1::__list_node_base"* %29 to %"struct.glsl::Varying"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN4glsl7VaryingEPvEEEEE7destroyIS4_vvEEvRS7_PT_(%"class.std::__1::allocator.53"* dereferenceable(1) %7, %"struct.glsl::Varying"* %30) #22
  %31 = bitcast %"struct.std::__1::__list_node_base"* %26 to i8*
  tail call void @_ZdlPv(i8* %31) #24
  %32 = icmp eq %"struct.std::__1::__list_node_base"* %28, %10
  br i1 %32, label %33, label %25

33:                                               ; preds = %25, %5, %1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN4glsl7VaryingEPvEEEEE7destroyIS4_vvEEvRS7_PT_(%"class.std::__1::allocator.53"* dereferenceable(1), %"struct.glsl::Varying"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.glsl::Varying", %"struct.glsl::Varying"* %1, i64 0, i32 0, i32 5, i32 0
  tail call void @_ZNSt3__113__vector_baseIN4glsl14ShaderVariableENS_9allocatorIS2_EEED2Ev(%"class.std::__1::__vector_base.13"* %3) #21
  %4 = getelementptr inbounds %"struct.glsl::Varying", %"struct.glsl::Varying"* %1, i64 0, i32 0, i32 2
  %5 = bitcast %"class.std::__1::basic_string.4"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #24
  br label %12

12:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: argmemonly nofree nounwind optsize readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #16

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #17

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ult i64 %2, 23
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %7 = trunc i64 %2 to i8
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 %7, i8* %9, align 1
  br label %24

10:                                               ; preds = %3
  %11 = icmp ugt i64 %2, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %13) #23
  unreachable

14:                                               ; preds = %10
  %15 = add nuw i64 %2, 16
  %16 = and i64 %15, -16
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %class.TPoolAllocator*, %class.TPoolAllocator** %17, align 8
  %19 = tail call i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* %18, i64 %16) #21
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = or i64 %16, -9223372036854775808
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %23, align 8
  br label %24

24:                                               ; preds = %14, %5
  %25 = phi i8* [ %6, %5 ], [ %19, %14 ]
  %26 = add nuw i64 %2, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %1, i64 %26, i1 false) #20
  ret void
}

; Function Attrs: optsize
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.4"*, i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4glsl14ShaderVariableERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer"*, i64, i64, %"class.std::__1::allocator.17"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  store %"struct.glsl::ShaderVariable"* null, %"struct.glsl::ShaderVariable"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0
  store %"class.std::__1::allocator.17"* %3, %"class.std::__1::allocator.17"** %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp ugt i64 %1, 288230376151711743
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @abort() #23
  unreachable

11:                                               ; preds = %8
  %12 = shl i64 %1, 6
  %13 = tail call i8* @_Znwm(i64 %12) #24
  %14 = bitcast i8* %13 to %"struct.glsl::ShaderVariable"*
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi %"struct.glsl::ShaderVariable"* [ %14, %11 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  store %"struct.glsl::ShaderVariable"* %16, %"struct.glsl::ShaderVariable"** %17, align 8
  %18 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %16, i64 %2
  %19 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  store %"struct.glsl::ShaderVariable"* %18, %"struct.glsl::ShaderVariable"** %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  store %"struct.glsl::ShaderVariable"* %18, %"struct.glsl::ShaderVariable"** %20, align 8
  %21 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %16, i64 %1
  store %"struct.glsl::ShaderVariable"* %21, %"struct.glsl::ShaderVariable"** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4glsl14ShaderVariableENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.12"*, %"struct.std::__1::__split_buffer"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.std::__1::__compressed_pair.14"* %3 to %"class.std::__1::allocator.17"*
  %5 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 1
  tail call void @_ZNSt3__146__construct_backward_with_exception_guaranteesINS_9allocatorIN4glsl14ShaderVariableEEEPS3_EEvRT_T0_S8_RS8_(%"class.std::__1::allocator.17"* dereferenceable(1) %4, %"struct.glsl::ShaderVariable"* %6, %"struct.glsl::ShaderVariable"* %8, %"struct.glsl::ShaderVariable"** dereferenceable(8) %9) #22
  %10 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.glsl::ShaderVariable"** %9 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 2
  %15 = bitcast %"struct.glsl::ShaderVariable"** %7 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"struct.glsl::ShaderVariable"** %14 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 3, i32 0, i32 0
  %21 = bitcast %"struct.glsl::ShaderVariable"** %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"struct.glsl::ShaderVariable"** %20 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %21, align 8
  store i64 %22, i64* %23, align 8
  %25 = load i64, i64* %12, align 8
  %26 = bitcast %"struct.std::__1::__split_buffer"* %1 to i64*
  store i64 %25, i64* %26, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4glsl14ShaderVariableERNS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__split_buffer"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZNSt3__114__split_bufferIN4glsl14ShaderVariableERNS_9allocatorIS2_EEE5clearEv(%"struct.std::__1::__split_buffer"* %0) #21
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %3 = load %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** %2, align 8
  %4 = icmp eq %"struct.glsl::ShaderVariable"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.glsl::ShaderVariable"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #24
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__146__construct_backward_with_exception_guaranteesINS_9allocatorIN4glsl14ShaderVariableEEEPS3_EEvRT_T0_S8_RS8_(%"class.std::__1::allocator.17"* dereferenceable(1), %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"struct.glsl::ShaderVariable"* %2, %1
  br i1 %5, label %45, label %6

6:                                                ; preds = %4
  %7 = load %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** %3, align 8
  br label %8

8:                                                ; preds = %6, %8
  %9 = phi %"struct.glsl::ShaderVariable"* [ %43, %8 ], [ %7, %6 ]
  %10 = phi %"struct.glsl::ShaderVariable"* [ %12, %8 ], [ %2, %6 ]
  %11 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %9, i64 -1
  %12 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %10, i64 -1
  %13 = bitcast %"struct.glsl::ShaderVariable"* %12 to i64*
  %14 = bitcast %"struct.glsl::ShaderVariable"* %11 to i64*
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %9, i64 -1, i32 2
  %17 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %10, i64 -1, i32 2
  %18 = bitcast %"class.std::__1::basic_string.4"* %16 to i8*
  %19 = bitcast %"class.std::__1::basic_string.4"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #20
  %20 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %9, i64 -1, i32 3
  %21 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %10, i64 -1, i32 3
  %22 = bitcast i32* %21 to i64*
  %23 = bitcast i32* %20 to i64*
  %24 = load i64, i64* %22, align 8
  store i64 %24, i64* %23, align 8
  %25 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %9, i64 -1, i32 5
  %26 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %10, i64 -1, i32 5
  %27 = bitcast %"class.std::__1::vector.12"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #20
  %28 = bitcast %"class.std::__1::vector.12"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.12"* %25 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %10, i64 -1, i32 5, i32 0, i32 1
  %32 = bitcast %"struct.glsl::ShaderVariable"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %9, i64 -1, i32 5, i32 0, i32 1
  %35 = bitcast %"struct.glsl::ShaderVariable"** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %10, i64 -1, i32 5, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"struct.glsl::ShaderVariable"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %9, i64 -1, i32 5, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"struct.glsl::ShaderVariable"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast %"class.std::__1::vector.12"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #20
  %42 = load %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** %3, align 8
  %43 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %42, i64 -1
  store %"struct.glsl::ShaderVariable"* %43, %"struct.glsl::ShaderVariable"** %3, align 8
  %44 = icmp eq %"struct.glsl::ShaderVariable"* %12, %1
  br i1 %44, label %45, label %8

45:                                               ; preds = %8, %4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4glsl14ShaderVariableERNS_9allocatorIS2_EEE5clearEv(%"struct.std::__1::__split_buffer"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %3 = load %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %5 = load %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** %4, align 8
  %6 = icmp eq %"struct.glsl::ShaderVariable"* %5, %3
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi %"struct.glsl::ShaderVariable"* [ %5, %7 ], [ %13, %9 ]
  %11 = load %"class.std::__1::allocator.17"*, %"class.std::__1::allocator.17"** %8, align 8
  %12 = getelementptr inbounds %"struct.glsl::ShaderVariable", %"struct.glsl::ShaderVariable"* %10, i64 -1
  store %"struct.glsl::ShaderVariable"* %12, %"struct.glsl::ShaderVariable"** %4, align 8
  tail call void @_ZNSt3__19allocatorIN4glsl14ShaderVariableEE7destroyEPS2_(%"class.std::__1::allocator.17"* %11, %"struct.glsl::ShaderVariable"* %12) #21
  %13 = load %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"** %4, align 8
  %14 = icmp eq %"struct.glsl::ShaderVariable"* %13, %3
  br i1 %14, label %15, label %9

15:                                               ; preds = %9, %1
  ret void
}

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.4"*, i8*, i64) local_unnamed_addr #7

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.4"*, i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %15

13:                                               ; preds = %5
  %14 = zext i8 %8 to i64
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %12, %10 ], [ %14, %13 ]
  %17 = icmp ult i64 %16, %1
  %18 = icmp eq i64 %4, -1
  %19 = or i1 %18, %17
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %21) #23
  unreachable

22:                                               ; preds = %15
  %23 = sub i64 %16, %1
  %24 = icmp ult i64 %23, %2
  %25 = select i1 %24, i64 %23, i64 %2
  br i1 %9, label %26, label %29

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  br label %31

29:                                               ; preds = %22
  %30 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %31

31:                                               ; preds = %26, %29
  %32 = phi i8* [ %28, %26 ], [ %30, %29 ]
  %33 = icmp ugt i64 %25, %4
  %34 = select i1 %33, i64 %4, i64 %25
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds i8, i8* %32, i64 %1
  %38 = tail call i32 @memcmp(i8* %37, i8* %3, i64 %34) #21
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %31, %36
  %41 = icmp ult i64 %25, %4
  %42 = zext i1 %33 to i32
  %43 = select i1 %41, i32 -1, i32 %42
  ret i32 %43

44:                                               ; preds = %36
  ret i32 %38
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #13

; Function Attrs: nofree nounwind optsize readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEENS7_ISC_EEED2Ev(%"class.std::__1::__vector_base.98"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base.98", %"class.std::__1::__vector_base.98"* %0, i64 0, i32 0
  %3 = load %"class.std::__1::map"*, %"class.std::__1::map"** %2, align 8
  %4 = icmp eq %"class.std::__1::map"* %3, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.std::__1::map"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::__vector_base.98", %"class.std::__1::__vector_base.98"* %0, i64 0, i32 1
  %8 = load %"class.std::__1::map"*, %"class.std::__1::map"** %7, align 8
  %9 = icmp eq %"class.std::__1::map"* %8, %3
  br i1 %9, label %21, label %10

10:                                               ; preds = %5, %10
  %11 = phi %"class.std::__1::map"* [ %12, %10 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 -1
  %13 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 -1, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node.200"**
  %16 = load %"class.std::__1::__tree_node.200"*, %"class.std::__1::__tree_node.200"** %15, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %13, %"class.std::__1::__tree_node.200"* %16) #21
  %17 = icmp eq %"class.std::__1::map"* %12, %3
  br i1 %17, label %18, label %10

18:                                               ; preds = %10
  %19 = bitcast %"class.std::__1::__vector_base.98"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  br label %21

21:                                               ; preds = %5, %18
  %22 = phi i8* [ %20, %18 ], [ %6, %5 ]
  store %"class.std::__1::map"* %3, %"class.std::__1::map"** %7, align 8
  tail call void @_ZdlPv(i8* %22) #24
  br label %23

23:                                               ; preds = %1, %21
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.118"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.118"* %0, %"class.std::__1::__tree_node"* %6) #21
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.118"* %0, %"class.std::__1::__tree_node"* %9) #21
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #24
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4glsl8FunctionERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer.191"*, i64, i64, %"class.std::__1::allocator.116"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 3, i32 0, i32 0
  store %"struct.glsl::Function"* null, %"struct.glsl::Function"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 3, i32 1, i32 0
  store %"class.std::__1::allocator.116"* %3, %"class.std::__1::allocator.116"** %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp ugt i64 %1, 329406144173384850
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @abort() #23
  unreachable

11:                                               ; preds = %8
  %12 = mul i64 %1, 56
  %13 = tail call i8* @_Znwm(i64 %12) #24
  %14 = bitcast i8* %13 to %"struct.glsl::Function"*
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi %"struct.glsl::Function"* [ %14, %11 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 0
  store %"struct.glsl::Function"* %16, %"struct.glsl::Function"** %17, align 8
  %18 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %16, i64 %2
  %19 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 2
  store %"struct.glsl::Function"* %18, %"struct.glsl::Function"** %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 1
  store %"struct.glsl::Function"* %18, %"struct.glsl::Function"** %20, align 8
  %21 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %16, i64 %1
  store %"struct.glsl::Function"* %21, %"struct.glsl::Function"** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4glsl8FunctionENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.111"*, %"struct.std::__1::__split_buffer.191"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.111", %"class.std::__1::vector.111"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.111", %"class.std::__1::vector.111"* %0, i64 0, i32 0, i32 1
  %6 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %1, i64 0, i32 1
  %8 = icmp eq %"struct.glsl::Function"* %6, %4
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = ptrtoint %"struct.glsl::Function"* %4 to i64
  %11 = bitcast %"struct.glsl::Function"** %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.111"* %0 to i64*
  br label %44

14:                                               ; preds = %2
  %15 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %7, align 8
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"struct.glsl::Function"* [ %37, %16 ], [ %15, %14 ]
  %18 = phi %"struct.glsl::Function"* [ %19, %16 ], [ %6, %14 ]
  %19 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %18, i64 -1
  %20 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %17, i64 -1, i32 0
  %21 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %19, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %17, i64 -1, i32 1
  %24 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %18, i64 -1, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #20
  %27 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %17, i64 -1, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %18, i64 -1, i32 1, i32 0, i32 1
  %29 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %27 to i64*
  store i64 %30, i64* %31, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #20
  %32 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %17, i64 -1, i32 2
  %33 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %18, i64 -1, i32 2
  %34 = bitcast %class.TVector.76** %32 to i8*
  %35 = bitcast %class.TVector.76** %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false) #20
  %36 = load %"struct.glsl::Function"*, %"struct.glsl::Function"** %7, align 8
  %37 = getelementptr inbounds %"struct.glsl::Function", %"struct.glsl::Function"* %36, i64 -1
  store %"struct.glsl::Function"* %37, %"struct.glsl::Function"** %7, align 8
  %38 = icmp eq %"struct.glsl::Function"* %19, %4
  br i1 %38, label %39, label %16

39:                                               ; preds = %16
  %40 = ptrtoint %"struct.glsl::Function"* %37 to i64
  %41 = bitcast %"class.std::__1::vector.111"* %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.glsl::Function"** %7 to i64*
  br label %44

44:                                               ; preds = %9, %39
  %45 = phi i64* [ %11, %9 ], [ %43, %39 ]
  %46 = phi i64* [ %13, %9 ], [ %41, %39 ]
  %47 = phi i64 [ %12, %9 ], [ %40, %39 ]
  %48 = phi i64 [ %10, %9 ], [ %42, %39 ]
  store i64 %47, i64* %46, align 8
  store i64 %48, i64* %45, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %1, i64 0, i32 2
  %50 = bitcast %"struct.glsl::Function"** %5 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"struct.glsl::Function"** %49 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %50, align 8
  store i64 %51, i64* %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::vector.111", %"class.std::__1::vector.111"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %1, i64 0, i32 3, i32 0, i32 0
  %56 = bitcast %"struct.glsl::Function"** %54 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.glsl::Function"** %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  store i64 %57, i64* %58, align 8
  %60 = load i64, i64* %45, align 8
  %61 = bitcast %"struct.std::__1::__split_buffer.191"* %1 to i64*
  store i64 %60, i64* %61, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJiEEENS_4pairINS_15__tree_iteratorIiPNS_11__tree_nodeIiPvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.118"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.118", %"class.std::__1::__tree.118"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.118", %"class.std::__1::__tree.118"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i32, i32* %1, align 4
  br label %11

11:                                               ; preds = %33, %8
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %6, %8 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %9, %8 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %10, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp slt i32 %15, %10
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %4, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %52

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 32) #24, !noalias !57
  %47 = getelementptr inbounds i8, i8* %46, i64 28
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %2, align 4, !noalias !57
  store i32 %49, i32* %48, align 4, !noalias !57
  %50 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %51 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSA_SA_(%"class.std::__1::__tree.118"* %0, %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_node_base"** dereferenceable(8) %41, %"class.std::__1::__tree_node_base"* nonnull %51) #21
  br label %52

52:                                               ; preds = %45, %39
  %53 = phi i8 [ 1, %45 ], [ 0, %39 ]
  %54 = phi %"class.std::__1::__tree_node"* [ %50, %45 ], [ %43, %39 ]
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %54, i64 0, i32 0, i32 0
  %56 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %55, 0
  %57 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %56, i8 %53, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %57
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSA_SA_(%"class.std::__1::__tree.118"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3, i64 0, i32 2
  %6 = bitcast %"class.std::__1::__tree_node_base"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %5, align 8
  store %"class.std::__1::__tree_node_base"* %3, %"class.std::__1::__tree_node_base"** %2, align 8
  %7 = getelementptr inbounds %"class.std::__1::__tree.118", %"class.std::__1::__tree.118"* %0, i64 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node_base"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = ptrtoint %"class.std::__1::__tree_node_base"* %10 to i64
  %14 = bitcast %"class.std::__1::__tree.118"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2, align 8
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi %"class.std::__1::__tree_node_base"* [ %3, %4 ], [ %15, %12 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree.118", %"class.std::__1::__tree.118"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %19, %"class.std::__1::__tree_node_base"* %17) #21
  %20 = getelementptr inbounds %"class.std::__1::__tree.118", %"class.std::__1::__tree.118"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE14__erase_uniqueIiEEmRKT_(%"class.std::__1::__tree.118"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.118", %"class.std::__1::__tree.118"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %33, label %7

7:                                                ; preds = %2
  %8 = load i32, i32* %1, align 4
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %20, %9 ]
  %11 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %21, %9 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, %8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_node_base"** %15 to %"class.std::__1::__tree_node"**
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node"* %11 to %"class.std::__1::__tree_node"**
  %19 = select i1 %14, %"class.std::__1::__tree_node"** %16, %"class.std::__1::__tree_node"** %18
  %20 = select i1 %14, %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"* %17
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %19, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %23, label %9

23:                                               ; preds = %9
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %20, %3
  br i1 %24, label %33, label %25

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node"*
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %8, %28
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE21__remove_node_pointerEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.118"* %0, %"class.std::__1::__tree_node"* %26) #21
  %32 = bitcast %"class.std::__1::__tree_end_node"* %20 to i8*
  tail call void @_ZdlPv(i8* %32) #24
  br label %33

33:                                               ; preds = %25, %23, %2, %30
  %34 = phi i64 [ 1, %30 ], [ 0, %2 ], [ 0, %23 ], [ 0, %25 ]
  ret i64 %34
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE21__remove_node_pointerEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.118"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %5 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node_base"* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node_base"*
  %9 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 2
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %8
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %5, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %7, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %7 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %7, %19
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %7 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree.118", %"class.std::__1::__tree.118"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %3
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree.118"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %35, %30
  %39 = getelementptr inbounds %"class.std::__1::__tree.118", %"class.std::__1::__tree.118"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree.118", %"class.std::__1::__tree.118"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #21
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: optsize
declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string.4"*, i64, i64, i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 9223372036854775807
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  br label %17

15:                                               ; preds = %3
  %16 = zext i8 %6 to i64
  br label %17

17:                                               ; preds = %8, %15
  %18 = phi i64 [ %12, %8 ], [ 22, %15 ]
  %19 = phi i64 [ %14, %8 ], [ %16, %15 ]
  %20 = sub i64 %18, %19
  %21 = icmp ult i64 %20, %2
  br i1 %21, label %42, label %22

22:                                               ; preds = %17
  %23 = icmp eq i64 %2, 0
  br i1 %23, label %45, label %24

24:                                               ; preds = %22
  br i1 %7, label %25, label %28

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  br label %30

28:                                               ; preds = %24
  %29 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %30

30:                                               ; preds = %25, %28
  %31 = phi i8* [ %27, %25 ], [ %29, %28 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %1, i64 %2, i1 false) #20
  %33 = add i64 %19, %2
  %34 = load i8, i8* %5, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %37, align 8
  br label %40

38:                                               ; preds = %30
  %39 = trunc i64 %33 to i8
  store i8 %39, i8* %5, align 1
  br label %40

40:                                               ; preds = %36, %38
  %41 = getelementptr inbounds i8, i8* %31, i64 %33
  store i8 0, i8* %41, align 1
  br label %45

42:                                               ; preds = %17
  %43 = add i64 %19, %2
  %44 = sub i64 %43, %18
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE21__grow_by_and_replaceEmmmmmmPKc(%"class.std::__1::basic_string"* %0, i64 %18, i64 %44, i64 %19, i64 %19, i64 0, i64 %2, i8* %1) #22
  br label %45

45:                                               ; preds = %22, %40, %42
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4glsl9AttributeERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer.208"*, i64, i64, %"class.std::__1::allocator.67"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.208", %"struct.std::__1::__split_buffer.208"* %0, i64 0, i32 3, i32 0, i32 0
  store %"struct.glsl::Attribute"* null, %"struct.glsl::Attribute"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.208", %"struct.std::__1::__split_buffer.208"* %0, i64 0, i32 3, i32 1, i32 0
  store %"class.std::__1::allocator.67"* %3, %"class.std::__1::allocator.67"** %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp ugt i64 %1, 384307168202282325
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @abort() #23
  unreachable

11:                                               ; preds = %8
  %12 = mul i64 %1, 48
  %13 = tail call i8* @_Znwm(i64 %12) #24
  %14 = bitcast i8* %13 to %"struct.glsl::Attribute"*
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi %"struct.glsl::Attribute"* [ %14, %11 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.208", %"struct.std::__1::__split_buffer.208"* %0, i64 0, i32 0
  store %"struct.glsl::Attribute"* %16, %"struct.glsl::Attribute"** %17, align 8
  %18 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %16, i64 %2
  %19 = getelementptr inbounds %"struct.std::__1::__split_buffer.208", %"struct.std::__1::__split_buffer.208"* %0, i64 0, i32 2
  store %"struct.glsl::Attribute"* %18, %"struct.glsl::Attribute"** %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer.208", %"struct.std::__1::__split_buffer.208"* %0, i64 0, i32 1
  store %"struct.glsl::Attribute"* %18, %"struct.glsl::Attribute"** %20, align 8
  %21 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %16, i64 %1
  store %"struct.glsl::Attribute"* %21, %"struct.glsl::Attribute"** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4glsl9AttributeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.62"*, %"struct.std::__1::__split_buffer.208"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %0, i64 0, i32 0, i32 1
  %6 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer.208", %"struct.std::__1::__split_buffer.208"* %1, i64 0, i32 1
  %8 = icmp eq %"struct.glsl::Attribute"* %6, %4
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = ptrtoint %"struct.glsl::Attribute"* %4 to i64
  %11 = bitcast %"struct.glsl::Attribute"** %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.62"* %0 to i64*
  br label %39

14:                                               ; preds = %2
  %15 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %7, align 8
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"struct.glsl::Attribute"* [ %32, %16 ], [ %15, %14 ]
  %18 = phi %"struct.glsl::Attribute"* [ %19, %16 ], [ %6, %14 ]
  %19 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %18, i64 -1
  %20 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %17, i64 -1, i32 0
  %21 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %19, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %17, i64 -1, i32 2
  %24 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %18, i64 -1, i32 2
  %25 = bitcast %"class.std::__1::basic_string.4"* %23 to i8*
  %26 = bitcast %"class.std::__1::basic_string.4"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #20
  %27 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %17, i64 -1, i32 3
  %28 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %18, i64 -1, i32 3
  %29 = bitcast i32* %27 to i8*
  %30 = bitcast i32* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 12, i1 false) #20
  %31 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %7, align 8
  %32 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %31, i64 -1
  store %"struct.glsl::Attribute"* %32, %"struct.glsl::Attribute"** %7, align 8
  %33 = icmp eq %"struct.glsl::Attribute"* %19, %4
  br i1 %33, label %34, label %16

34:                                               ; preds = %16
  %35 = ptrtoint %"struct.glsl::Attribute"* %32 to i64
  %36 = bitcast %"class.std::__1::vector.62"* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"struct.glsl::Attribute"** %7 to i64*
  br label %39

39:                                               ; preds = %9, %34
  %40 = phi i64* [ %11, %9 ], [ %38, %34 ]
  %41 = phi i64* [ %13, %9 ], [ %36, %34 ]
  %42 = phi i64 [ %12, %9 ], [ %35, %34 ]
  %43 = phi i64 [ %10, %9 ], [ %37, %34 ]
  store i64 %42, i64* %41, align 8
  store i64 %43, i64* %40, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__split_buffer.208", %"struct.std::__1::__split_buffer.208"* %1, i64 0, i32 2
  %45 = bitcast %"struct.glsl::Attribute"** %5 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"struct.glsl::Attribute"** %44 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %45, align 8
  store i64 %46, i64* %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::__split_buffer.208", %"struct.std::__1::__split_buffer.208"* %1, i64 0, i32 3, i32 0, i32 0
  %51 = bitcast %"struct.glsl::Attribute"** %49 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"struct.glsl::Attribute"** %50 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %51, align 8
  store i64 %52, i64* %53, align 8
  %55 = load i64, i64* %40, align 8
  %56 = bitcast %"struct.std::__1::__split_buffer.208"* %1 to i64*
  store i64 %55, i64* %56, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4glsl9AttributeERNS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__split_buffer.208"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer.208", %"struct.std::__1::__split_buffer.208"* %0, i64 0, i32 1
  %3 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %2, align 8
  tail call void @_ZNSt3__114__split_bufferIN4glsl9AttributeERNS_9allocatorIS2_EEE17__destruct_at_endEPS2_(%"struct.std::__1::__split_buffer.208"* %0, %"struct.glsl::Attribute"* %3) #21
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.208", %"struct.std::__1::__split_buffer.208"* %0, i64 0, i32 0
  %5 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %4, align 8
  %6 = icmp eq %"struct.glsl::Attribute"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.glsl::Attribute"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #24
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4glsl9AttributeERNS_9allocatorIS2_EEE17__destruct_at_endEPS2_(%"struct.std::__1::__split_buffer.208"*, %"struct.glsl::Attribute"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.208", %"struct.std::__1::__split_buffer.208"* %0, i64 0, i32 2
  %4 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %3, align 8
  %5 = icmp eq %"struct.glsl::Attribute"* %4, %1
  br i1 %5, label %21, label %6

6:                                                ; preds = %2, %18
  %7 = phi %"struct.glsl::Attribute"* [ %19, %18 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %7, i64 -1
  store %"struct.glsl::Attribute"* %8, %"struct.glsl::Attribute"** %3, align 8
  %9 = getelementptr inbounds %"struct.glsl::Attribute", %"struct.glsl::Attribute"* %7, i64 -1, i32 2
  %10 = bitcast %"class.std::__1::basic_string.4"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  tail call void @_ZdlPv(i8* %16) #24
  %17 = load %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"** %3, align 8
  br label %18

18:                                               ; preds = %14, %6
  %19 = phi %"struct.glsl::Attribute"* [ %8, %6 ], [ %17, %14 ]
  %20 = icmp eq %"struct.glsl::Attribute"* %19, %1
  br i1 %20, label %21, label %6

21:                                               ; preds = %18, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE6assignEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = tail call i1 @llvm.is.constant.i8(i8 %3)
  %5 = tail call i64 @strlen(i8* %1) #21
  br i1 %4, label %6, label %28

6:                                                ; preds = %2
  %7 = icmp ult i64 %5, 23
  br i1 %7, label %8, label %26

8:                                                ; preds = %6
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  br label %20

17:                                               ; preds = %8
  %18 = trunc i64 %5 to i8
  store i8 %18, i8* %10, align 1
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %20

20:                                               ; preds = %17, %13
  %21 = phi i8* [ %16, %13 ], [ %19, %17 ]
  %22 = icmp eq i64 %5, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %1, i64 %5, i1 false) #20
  br label %24

24:                                               ; preds = %20, %23
  %25 = getelementptr inbounds i8, i8* %21, i64 %5
  store i8 0, i8* %25, align 1
  br label %30

26:                                               ; preds = %6
  %27 = tail call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %1, i64 %5) #22
  br label %30

28:                                               ; preds = %2
  %29 = tail call dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %1, i64 %5) #21
  br label %30

30:                                               ; preds = %24, %26, %28
  %31 = phi %"class.std::__1::basic_string"* [ %29, %28 ], [ %0, %24 ], [ %27, %26 ]
  ret %"class.std::__1::basic_string"* %31
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #18

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 9223372036854775807
  %12 = add nsw i64 %11, -1
  br label %13

13:                                               ; preds = %3, %8
  %14 = phi i64 [ %12, %8 ], [ 22, %3 ]
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %34, label %16

16:                                               ; preds = %13
  br i1 %7, label %17, label %20

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  br label %22

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i8* [ %19, %17 ], [ %21, %20 ]
  %24 = icmp eq i64 %2, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %1, i64 %2, i1 false) #20
  br label %26

26:                                               ; preds = %22, %25
  %27 = getelementptr inbounds i8, i8* %23, i64 %2
  store i8 0, i8* %27, align 1
  %28 = load i8, i8* %5, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %31, align 8
  br label %43

32:                                               ; preds = %26
  %33 = trunc i64 %2 to i8
  store i8 %33, i8* %5, align 1
  br label %43

34:                                               ; preds = %13
  br i1 %7, label %35, label %38

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  br label %40

38:                                               ; preds = %34
  %39 = zext i8 %6 to i64
  br label %40

40:                                               ; preds = %35, %38
  %41 = phi i64 [ %37, %35 ], [ %39, %38 ]
  %42 = sub i64 %2, %14
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE21__grow_by_and_replaceEmmmmmmPKc(%"class.std::__1::basic_string"* %0, i64 %14, i64 %42, i64 %41, i64 0, i64 %41, i64 %2, i8* %1) #22
  br label %43

43:                                               ; preds = %32, %30, %40
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %6, i64 0, i32 0
  %8 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %9 = bitcast %"class.std::__1::basic_stringstream"* %0 to i64*
  store i64 %8, i64* %9, align 8
  %10 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %11 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8**
  %12 = inttoptr i64 %8 to i8*
  %13 = getelementptr i8, i8* %12, i64 -24
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = bitcast i8* %17 to i64*
  store i64 %10, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %19, align 8
  %20 = load i8*, i8** %11, align 8
  %21 = getelementptr i8, i8* %20, i64 -24
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds i8, i8* %16, i64 %23
  %25 = bitcast i8* %24 to %"class.std::__1::ios_base"*
  %26 = bitcast %"class.std::__1::basic_stringbuf"* %6 to i8*
  tail call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %25, i8* %26) #21
  %27 = getelementptr inbounds i8, i8* %24, i64 136
  %28 = bitcast i8* %27 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %28, align 8
  %29 = getelementptr inbounds i8, i8* %24, i64 144
  %30 = bitcast i8* %29 to i32*
  store i32 -1, i32* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1
  %32 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %33 = bitcast %"class.std::__1::basic_ostream.base"* %31 to i64*
  store i64 %32, i64* %33, align 8
  %34 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %35 = inttoptr i64 %32 to i8*
  %36 = getelementptr i8, i8* %35, i64 -24
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::basic_ostream.base"* %31 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 %38
  %41 = bitcast i8* %40 to i64*
  store i64 %34, i64* %41, align 8
  %42 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %42, i64* %9, align 8
  %43 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %44 = inttoptr i64 %42 to i8*
  %45 = getelementptr i8, i8* %44, i64 -24
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds i8, i8* %16, i64 %47
  %49 = bitcast i8* %48 to i64*
  store i64 %43, i64* %49, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %7) #21
  %50 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 1
  %52 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 3
  %53 = bitcast %"class.std::__1::basic_string.4"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 32, i1 false) #20
  store i32 %1, i32* %52, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #7

; Function Attrs: optsize
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #21
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #20
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #21
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #21
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #21
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #20
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44) #22
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #21
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #20
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: optsize
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string.4", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #21
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string.4"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #20
  %32 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string.4"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #24
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string.4"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #20
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #21
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #24
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #20
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #21
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #15

; Function Attrs: optsize
declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #7

; Function Attrs: nounwind optsize
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #15

; Function Attrs: optsize
declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #7

; Function Attrs: optsize
declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #7

; Function Attrs: optsize
declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.4"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIiJNS_4pairIKiS4_EEEEENSE_INS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, i32* dereferenceable(4), %"struct.std::__1::pair.185"* dereferenceable(88)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.200"**
  %6 = load %"class.std::__1::__tree_node.200"*, %"class.std::__1::__tree_node.200"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.200"* %6, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i32, i32* %1, align 4
  br label %11

11:                                               ; preds = %33, %8
  %12 = phi %"class.std::__1::__tree_node.200"* [ %36, %33 ], [ %6, %8 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %9, %8 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node.200", %"class.std::__1::__tree_node.200"* %12, i64 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %10, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.200", %"class.std::__1::__tree_node.200"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.200", %"class.std::__1::__tree_node.200"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp slt i32 %15, %10
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.200", %"class.std::__1::__tree_node.200"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.200", %"class.std::__1::__tree_node.200"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.200", %"class.std::__1::__tree_node.200"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node.200"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %4, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node.200"**
  %43 = load %"class.std::__1::__tree_node.200"*, %"class.std::__1::__tree_node.200"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node.200"* %43, null
  br i1 %44, label %45, label %51

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 120) #24, !noalias !60
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = bitcast %"struct.std::__1::pair.185"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 88, i1 false) #20, !noalias !60
  %49 = bitcast i8* %46 to %"class.std::__1::__tree_node.200"*
  %50 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSH_SH_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_node_base"** dereferenceable(8) %41, %"class.std::__1::__tree_node_base"* nonnull %50) #21
  br label %51

51:                                               ; preds = %45, %39
  %52 = phi i8 [ 1, %45 ], [ 0, %39 ]
  %53 = phi %"class.std::__1::__tree_node.200"* [ %49, %45 ], [ %43, %39 ]
  %54 = getelementptr inbounds %"class.std::__1::__tree_node.200", %"class.std::__1::__tree_node.200"* %53, i64 0, i32 0, i32 0
  %55 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %54, 0
  %56 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %55, i8 %52, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %56
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSH_SH_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3, i64 0, i32 2
  %6 = bitcast %"class.std::__1::__tree_node_base"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %5, align 8
  store %"class.std::__1::__tree_node_base"* %3, %"class.std::__1::__tree_node_base"** %2, align 8
  %7 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node_base"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = ptrtoint %"class.std::__1::__tree_node_base"* %10 to i64
  %14 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2, align 8
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi %"class.std::__1::__tree_node_base"* [ %3, %4 ], [ %15, %12 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %19, %"class.std::__1::__tree_node_base"* %17) #21
  %20 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4glsl7UniformERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer.222"*, i64, i64, %"class.std::__1::allocator.60"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.222", %"struct.std::__1::__split_buffer.222"* %0, i64 0, i32 3, i32 0, i32 0
  store %"struct.glsl::Uniform"* null, %"struct.glsl::Uniform"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.222", %"struct.std::__1::__split_buffer.222"* %0, i64 0, i32 3, i32 1, i32 0
  store %"class.std::__1::allocator.60"* %3, %"class.std::__1::allocator.60"** %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp ugt i64 %1, 209622091746699450
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @abort() #23
  unreachable

11:                                               ; preds = %8
  %12 = mul i64 %1, 88
  %13 = tail call i8* @_Znwm(i64 %12) #24
  %14 = bitcast i8* %13 to %"struct.glsl::Uniform"*
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi %"struct.glsl::Uniform"* [ %14, %11 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.222", %"struct.std::__1::__split_buffer.222"* %0, i64 0, i32 0
  store %"struct.glsl::Uniform"* %16, %"struct.glsl::Uniform"** %17, align 8
  %18 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %16, i64 %2
  %19 = getelementptr inbounds %"struct.std::__1::__split_buffer.222", %"struct.std::__1::__split_buffer.222"* %0, i64 0, i32 2
  store %"struct.glsl::Uniform"* %18, %"struct.glsl::Uniform"** %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer.222", %"struct.std::__1::__split_buffer.222"* %0, i64 0, i32 1
  store %"struct.glsl::Uniform"* %18, %"struct.glsl::Uniform"** %20, align 8
  %21 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %16, i64 %1
  store %"struct.glsl::Uniform"* %21, %"struct.glsl::Uniform"** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4glsl7UniformENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.55"*, %"struct.std::__1::__split_buffer.222"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.std::__1::__compressed_pair.57"* %3 to %"class.std::__1::allocator.60"*
  %5 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer.222", %"struct.std::__1::__split_buffer.222"* %1, i64 0, i32 1
  tail call void @_ZNSt3__146__construct_backward_with_exception_guaranteesINS_9allocatorIN4glsl7UniformEEEPS3_EEvRT_T0_S8_RS8_(%"class.std::__1::allocator.60"* dereferenceable(1) %4, %"struct.glsl::Uniform"* %6, %"struct.glsl::Uniform"* %8, %"struct.glsl::Uniform"** dereferenceable(8) %9) #22
  %10 = bitcast %"class.std::__1::vector.55"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.glsl::Uniform"** %9 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.222", %"struct.std::__1::__split_buffer.222"* %1, i64 0, i32 2
  %15 = bitcast %"struct.glsl::Uniform"** %7 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"struct.glsl::Uniform"** %14 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer.222", %"struct.std::__1::__split_buffer.222"* %1, i64 0, i32 3, i32 0, i32 0
  %21 = bitcast %"struct.glsl::Uniform"** %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"struct.glsl::Uniform"** %20 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %21, align 8
  store i64 %22, i64* %23, align 8
  %25 = load i64, i64* %12, align 8
  %26 = bitcast %"struct.std::__1::__split_buffer.222"* %1 to i64*
  store i64 %25, i64* %26, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4glsl7UniformERNS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__split_buffer.222"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZNSt3__114__split_bufferIN4glsl7UniformERNS_9allocatorIS2_EEE5clearEv(%"struct.std::__1::__split_buffer.222"* %0) #21
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer.222", %"struct.std::__1::__split_buffer.222"* %0, i64 0, i32 0
  %3 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %2, align 8
  %4 = icmp eq %"struct.glsl::Uniform"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.glsl::Uniform"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #24
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__146__construct_backward_with_exception_guaranteesINS_9allocatorIN4glsl7UniformEEEPS3_EEvRT_T0_S8_RS8_(%"class.std::__1::allocator.60"* dereferenceable(1), %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"struct.glsl::Uniform"* %2, %1
  br i1 %5, label %49, label %6

6:                                                ; preds = %4
  %7 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %3, align 8
  br label %8

8:                                                ; preds = %6, %8
  %9 = phi %"struct.glsl::Uniform"* [ %47, %8 ], [ %7, %6 ]
  %10 = phi %"struct.glsl::Uniform"* [ %12, %8 ], [ %2, %6 ]
  %11 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %9, i64 -1
  %12 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %10, i64 -1
  %13 = bitcast %"struct.glsl::Uniform"* %12 to i64*
  %14 = bitcast %"struct.glsl::Uniform"* %11 to i64*
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %9, i64 -1, i32 0, i32 2
  %17 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %10, i64 -1, i32 0, i32 2
  %18 = bitcast %"class.std::__1::basic_string.4"* %16 to i8*
  %19 = bitcast %"class.std::__1::basic_string.4"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #20
  %20 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %9, i64 -1, i32 0, i32 3
  %21 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %10, i64 -1, i32 0, i32 3
  %22 = bitcast i32* %21 to i64*
  %23 = bitcast i32* %20 to i64*
  %24 = load i64, i64* %22, align 8
  store i64 %24, i64* %23, align 8
  %25 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %9, i64 -1, i32 0, i32 5
  %26 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %10, i64 -1, i32 0, i32 5
  %27 = bitcast %"class.std::__1::vector.12"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #20
  %28 = bitcast %"class.std::__1::vector.12"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.12"* %25 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %10, i64 -1, i32 0, i32 5, i32 0, i32 1
  %32 = bitcast %"struct.glsl::ShaderVariable"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %9, i64 -1, i32 0, i32 5, i32 0, i32 1
  %35 = bitcast %"struct.glsl::ShaderVariable"** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %10, i64 -1, i32 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"struct.glsl::ShaderVariable"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %9, i64 -1, i32 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"struct.glsl::ShaderVariable"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast %"class.std::__1::vector.12"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #20
  %42 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %9, i64 -1, i32 1
  %43 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %10, i64 -1, i32 1
  %44 = bitcast i32* %42 to i8*
  %45 = bitcast i32* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 17, i1 false) #20
  %46 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %3, align 8
  %47 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %46, i64 -1
  store %"struct.glsl::Uniform"* %47, %"struct.glsl::Uniform"** %3, align 8
  %48 = icmp eq %"struct.glsl::Uniform"* %12, %1
  br i1 %48, label %49, label %8

49:                                               ; preds = %8, %4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4glsl7UniformERNS_9allocatorIS2_EEE5clearEv(%"struct.std::__1::__split_buffer.222"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer.222", %"struct.std::__1::__split_buffer.222"* %0, i64 0, i32 1
  %3 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.222", %"struct.std::__1::__split_buffer.222"* %0, i64 0, i32 2
  %5 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %4, align 8
  %6 = icmp eq %"struct.glsl::Uniform"* %5, %3
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.222", %"struct.std::__1::__split_buffer.222"* %0, i64 0, i32 3, i32 1, i32 0
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi %"struct.glsl::Uniform"* [ %5, %7 ], [ %13, %9 ]
  %11 = load %"class.std::__1::allocator.60"*, %"class.std::__1::allocator.60"** %8, align 8
  %12 = getelementptr inbounds %"struct.glsl::Uniform", %"struct.glsl::Uniform"* %10, i64 -1
  store %"struct.glsl::Uniform"* %12, %"struct.glsl::Uniform"** %4, align 8
  tail call void @_ZNSt3__19allocatorIN4glsl7UniformEE7destroyEPS2_(%"class.std::__1::allocator.60"* %11, %"struct.glsl::Uniform"* %12) #21
  %13 = load %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"** %4, align 8
  %14 = icmp eq %"struct.glsl::Uniform"* %13, %3
  br i1 %14, label %15, label %9

15:                                               ; preds = %9, %1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4glsl12UniformBlockERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer.225"*, i64, i64, %"class.std::__1::allocator.74"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.225", %"struct.std::__1::__split_buffer.225"* %0, i64 0, i32 3, i32 0, i32 0
  store %"struct.glsl::UniformBlock"* null, %"struct.glsl::UniformBlock"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.225", %"struct.std::__1::__split_buffer.225"* %0, i64 0, i32 3, i32 1, i32 0
  store %"class.std::__1::allocator.74"* %3, %"class.std::__1::allocator.74"** %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp ugt i64 %1, 256204778801521550
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @abort() #23
  unreachable

11:                                               ; preds = %8
  %12 = mul i64 %1, 72
  %13 = tail call i8* @_Znwm(i64 %12) #24
  %14 = bitcast i8* %13 to %"struct.glsl::UniformBlock"*
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi %"struct.glsl::UniformBlock"* [ %14, %11 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.225", %"struct.std::__1::__split_buffer.225"* %0, i64 0, i32 0
  store %"struct.glsl::UniformBlock"* %16, %"struct.glsl::UniformBlock"** %17, align 8
  %18 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 %2
  %19 = getelementptr inbounds %"struct.std::__1::__split_buffer.225", %"struct.std::__1::__split_buffer.225"* %0, i64 0, i32 2
  store %"struct.glsl::UniformBlock"* %18, %"struct.glsl::UniformBlock"** %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer.225", %"struct.std::__1::__split_buffer.225"* %0, i64 0, i32 1
  store %"struct.glsl::UniformBlock"* %18, %"struct.glsl::UniformBlock"** %20, align 8
  %21 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %16, i64 %1
  store %"struct.glsl::UniformBlock"* %21, %"struct.glsl::UniformBlock"** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4glsl12UniformBlockENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(%"class.std::__1::vector.69"*, %"struct.std::__1::__split_buffer.225"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.69", %"class.std::__1::vector.69"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.std::__1::__compressed_pair.71"* %3 to %"class.std::__1::allocator.74"*
  %5 = getelementptr inbounds %"class.std::__1::vector.69", %"class.std::__1::vector.69"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.69", %"class.std::__1::vector.69"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer.225", %"struct.std::__1::__split_buffer.225"* %1, i64 0, i32 1
  tail call void @_ZNSt3__146__construct_backward_with_exception_guaranteesINS_9allocatorIN4glsl12UniformBlockEEEPS3_EEvRT_T0_S8_RS8_(%"class.std::__1::allocator.74"* dereferenceable(1) %4, %"struct.glsl::UniformBlock"* %6, %"struct.glsl::UniformBlock"* %8, %"struct.glsl::UniformBlock"** dereferenceable(8) %9) #22
  %10 = bitcast %"class.std::__1::vector.69"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.glsl::UniformBlock"** %9 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.225", %"struct.std::__1::__split_buffer.225"* %1, i64 0, i32 2
  %15 = bitcast %"struct.glsl::UniformBlock"** %7 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"struct.glsl::UniformBlock"** %14 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector.69", %"class.std::__1::vector.69"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer.225", %"struct.std::__1::__split_buffer.225"* %1, i64 0, i32 3, i32 0, i32 0
  %21 = bitcast %"struct.glsl::UniformBlock"** %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"struct.glsl::UniformBlock"** %20 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %21, align 8
  store i64 %22, i64* %23, align 8
  %25 = load i64, i64* %12, align 8
  %26 = bitcast %"struct.std::__1::__split_buffer.225"* %1 to i64*
  store i64 %25, i64* %26, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4glsl12UniformBlockERNS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__split_buffer.225"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZNSt3__114__split_bufferIN4glsl12UniformBlockERNS_9allocatorIS2_EEE5clearEv(%"struct.std::__1::__split_buffer.225"* %0) #21
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer.225", %"struct.std::__1::__split_buffer.225"* %0, i64 0, i32 0
  %3 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %2, align 8
  %4 = icmp eq %"struct.glsl::UniformBlock"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.glsl::UniformBlock"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #24
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__146__construct_backward_with_exception_guaranteesINS_9allocatorIN4glsl12UniformBlockEEEPS3_EEvRT_T0_S8_RS8_(%"class.std::__1::allocator.74"* dereferenceable(1), %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"struct.glsl::UniformBlock"* %2, %1
  br i1 %5, label %44, label %6

6:                                                ; preds = %4
  %7 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %3, align 8
  br label %8

8:                                                ; preds = %6, %8
  %9 = phi %"struct.glsl::UniformBlock"* [ %42, %8 ], [ %7, %6 ]
  %10 = phi %"struct.glsl::UniformBlock"* [ %12, %8 ], [ %2, %6 ]
  %11 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %9, i64 -1
  %12 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %10, i64 -1
  %13 = bitcast %"struct.glsl::UniformBlock"* %11 to i8*
  %14 = bitcast %"struct.glsl::UniformBlock"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #20
  %15 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %9, i64 -1, i32 1
  %16 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %10, i64 -1, i32 1
  %17 = bitcast i32* %15 to i8*
  %18 = bitcast i32* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 13, i1 false) #20
  %19 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %9, i64 -1, i32 5
  %20 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %10, i64 -1, i32 5
  %21 = bitcast %"class.std::__1::vector.25"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #20
  %22 = bitcast %"class.std::__1::vector.25"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.25"* %19 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %10, i64 -1, i32 5, i32 0, i32 1
  %26 = bitcast i32** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %9, i64 -1, i32 5, i32 0, i32 1
  %29 = bitcast i32** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %10, i64 -1, i32 5, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast i32** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %9, i64 -1, i32 5, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast i32** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = bitcast %"class.std::__1::vector.25"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #20
  %36 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %9, i64 -1, i32 6
  %37 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %10, i64 -1, i32 6
  %38 = bitcast i32* %37 to i64*
  %39 = bitcast i32* %36 to i64*
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  %41 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %3, align 8
  %42 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %41, i64 -1
  store %"struct.glsl::UniformBlock"* %42, %"struct.glsl::UniformBlock"** %3, align 8
  %43 = icmp eq %"struct.glsl::UniformBlock"* %12, %1
  br i1 %43, label %44, label %8

44:                                               ; preds = %8, %4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4glsl12UniformBlockERNS_9allocatorIS2_EEE5clearEv(%"struct.std::__1::__split_buffer.225"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer.225", %"struct.std::__1::__split_buffer.225"* %0, i64 0, i32 1
  %3 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.225", %"struct.std::__1::__split_buffer.225"* %0, i64 0, i32 2
  %5 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %4, align 8
  %6 = icmp eq %"struct.glsl::UniformBlock"* %5, %3
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.225", %"struct.std::__1::__split_buffer.225"* %0, i64 0, i32 3, i32 1, i32 0
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi %"struct.glsl::UniformBlock"* [ %5, %7 ], [ %13, %9 ]
  %11 = load %"class.std::__1::allocator.74"*, %"class.std::__1::allocator.74"** %8, align 8
  %12 = getelementptr inbounds %"struct.glsl::UniformBlock", %"struct.glsl::UniformBlock"* %10, i64 -1
  store %"struct.glsl::UniformBlock"* %12, %"struct.glsl::UniformBlock"** %4, align 8
  tail call void @_ZNSt3__19allocatorIN4glsl12UniformBlockEE7destroyEPS2_(%"class.std::__1::allocator.74"* %11, %"struct.glsl::UniformBlock"* %12) #21
  %13 = load %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"** %4, align 8
  %14 = icmp eq %"struct.glsl::UniformBlock"* %13, %3
  br i1 %14, label %15, label %9

15:                                               ; preds = %9, %1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.200"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.200"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.200"* %1 to %"class.std::__1::__tree_node.200"**
  %6 = load %"class.std::__1::__tree_node.200"*, %"class.std::__1::__tree_node.200"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.200"* %6) #21
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.200", %"class.std::__1::__tree_node.200"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.200"**
  %9 = load %"class.std::__1::__tree_node.200"*, %"class.std::__1::__tree_node.200"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.200"* %9) #21
  %10 = bitcast %"class.std::__1::__tree_node.200"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #24
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEERNS7_ISC_EEEC2EmmSE_(%"struct.std::__1::__split_buffer.228"*, i64, i64, %"class.std::__1::allocator.109"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.228", %"struct.std::__1::__split_buffer.228"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.std::__1::map"* null, %"class.std::__1::map"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.228", %"struct.std::__1::__split_buffer.228"* %0, i64 0, i32 3, i32 1, i32 0
  store %"class.std::__1::allocator.109"* %3, %"class.std::__1::allocator.109"** %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp ugt i64 %1, 768614336404564650
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @abort() #23
  unreachable

11:                                               ; preds = %8
  %12 = mul i64 %1, 24
  %13 = tail call i8* @_Znwm(i64 %12) #24
  %14 = bitcast i8* %13 to %"class.std::__1::map"*
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi %"class.std::__1::map"* [ %14, %11 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.228", %"struct.std::__1::__split_buffer.228"* %0, i64 0, i32 0
  store %"class.std::__1::map"* %16, %"class.std::__1::map"** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %16, i64 %2
  %19 = getelementptr inbounds %"struct.std::__1::__split_buffer.228", %"struct.std::__1::__split_buffer.228"* %0, i64 0, i32 2
  store %"class.std::__1::map"* %18, %"class.std::__1::map"** %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer.228", %"struct.std::__1::__split_buffer.228"* %0, i64 0, i32 1
  store %"class.std::__1::map"* %18, %"class.std::__1::map"** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %16, i64 %1
  store %"class.std::__1::map"* %21, %"class.std::__1::map"** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEENS7_ISC_EEE26__swap_out_circular_bufferERNS_14__split_bufferISC_RSD_EE(%"class.std::__1::vector.97"*, %"struct.std::__1::__split_buffer.228"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::map"*, %"class.std::__1::map"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.std::__1::map"*, %"class.std::__1::map"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer.228", %"struct.std::__1::__split_buffer.228"* %1, i64 0, i32 1
  %8 = icmp eq %"class.std::__1::map"* %6, %4
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = ptrtoint %"class.std::__1::map"* %4 to i64
  %11 = bitcast %"class.std::__1::map"** %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.97"* %0 to i64*
  br label %51

14:                                               ; preds = %2
  %15 = load %"class.std::__1::map"*, %"class.std::__1::map"** %7, align 8
  br label %16

16:                                               ; preds = %42, %14
  %17 = phi %"class.std::__1::map"* [ %44, %42 ], [ %15, %14 ]
  %18 = phi %"class.std::__1::map"* [ %20, %42 ], [ %6, %14 ]
  %19 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %17, i64 -1
  %20 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 -1
  %21 = bitcast %"class.std::__1::map"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::map"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %17, i64 -1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 -1, i32 0, i32 1
  %26 = bitcast %"class.std::__1::__compressed_pair.99"* %25 to i64*
  %27 = bitcast %"class.std::__1::__compressed_pair.99"* %24 to i64*
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 -1, i32 0, i32 2, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %17, i64 -1, i32 0, i32 2, i32 0, i32 0
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %17, i64 -1, i32 0, i32 1, i32 0, i32 0
  br i1 %32, label %34, label %36

34:                                               ; preds = %16
  %35 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %19, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %33, %"class.std::__1::__tree_end_node"** %35, align 8
  br label %42

36:                                               ; preds = %16
  %37 = inttoptr i64 %28 to %"class.std::__1::__tree_node_base"*
  %38 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %20, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %37, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %33, %"class.std::__1::__tree_end_node"** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 -1, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %38, align 8
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #20
  br label %42

42:                                               ; preds = %36, %34
  %43 = load %"class.std::__1::map"*, %"class.std::__1::map"** %7, align 8
  %44 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %43, i64 -1
  store %"class.std::__1::map"* %44, %"class.std::__1::map"** %7, align 8
  %45 = icmp eq %"class.std::__1::map"* %20, %4
  br i1 %45, label %46, label %16

46:                                               ; preds = %42
  %47 = ptrtoint %"class.std::__1::map"* %44 to i64
  %48 = bitcast %"class.std::__1::vector.97"* %0 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.std::__1::map"** %7 to i64*
  br label %51

51:                                               ; preds = %9, %46
  %52 = phi i64* [ %11, %9 ], [ %50, %46 ]
  %53 = phi i64* [ %13, %9 ], [ %48, %46 ]
  %54 = phi i64 [ %12, %9 ], [ %47, %46 ]
  %55 = phi i64 [ %10, %9 ], [ %49, %46 ]
  store i64 %54, i64* %53, align 8
  store i64 %55, i64* %52, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__split_buffer.228", %"struct.std::__1::__split_buffer.228"* %1, i64 0, i32 2
  %57 = bitcast %"class.std::__1::map"** %5 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::map"** %56 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %57, align 8
  store i64 %58, i64* %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::__1::__split_buffer.228", %"struct.std::__1::__split_buffer.228"* %1, i64 0, i32 3, i32 0, i32 0
  %63 = bitcast %"class.std::__1::map"** %61 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.std::__1::map"** %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  store i64 %64, i64* %65, align 8
  %67 = load i64, i64* %52, align 8
  %68 = bitcast %"struct.std::__1::__split_buffer.228"* %1 to i64*
  store i64 %67, i64* %68, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEERNS7_ISC_EEED2Ev(%"struct.std::__1::__split_buffer.228"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZNSt3__114__split_bufferINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEERNS7_ISC_EEE5clearEv(%"struct.std::__1::__split_buffer.228"* %0) #21
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer.228", %"struct.std::__1::__split_buffer.228"* %0, i64 0, i32 0
  %3 = load %"class.std::__1::map"*, %"class.std::__1::map"** %2, align 8
  %4 = icmp eq %"class.std::__1::map"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.std::__1::map"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #24
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_3mapIiN4glsl9OutputASM15TypedMemberInfoENS_4lessIiEENS_9allocatorINS_4pairIKiS4_EEEEEERNS7_ISC_EEE5clearEv(%"struct.std::__1::__split_buffer.228"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer.228", %"struct.std::__1::__split_buffer.228"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::map"*, %"class.std::__1::map"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.228", %"struct.std::__1::__split_buffer.228"* %0, i64 0, i32 2
  %5 = load %"class.std::__1::map"*, %"class.std::__1::map"** %4, align 8
  %6 = icmp eq %"class.std::__1::map"* %5, %3
  br i1 %6, label %16, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"class.std::__1::map"* [ %14, %7 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 -1
  store %"class.std::__1::map"* %9, %"class.std::__1::map"** %4, align 8
  %10 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 -1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.200"**
  %13 = load %"class.std::__1::__tree_node.200"*, %"class.std::__1::__tree_node.200"** %12, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %10, %"class.std::__1::__tree_node.200"* %13) #21
  %14 = load %"class.std::__1::map"*, %"class.std::__1::map"** %4, align 8
  %15 = icmp eq %"class.std::__1::map"* %14, %3
  br i1 %15, label %16, label %7

16:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #19

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { cold noreturn nounwind }
attributes #15 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { argmemonly nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind readnone }
attributes #19 = { nofree nounwind readonly }
attributes #20 = { nounwind }
attributes #21 = { nounwind optsize }
attributes #22 = { optsize }
attributes #23 = { noreturn nounwind optsize }
attributes #24 = { builtin nounwind optsize }
attributes #25 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__116allocator_traitsI14pool_allocatorIcEE37select_on_container_copy_constructionIS2_vvEES2_RKS2_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__116allocator_traitsI14pool_allocatorIcEE37select_on_container_copy_constructionIS2_vvEES2_RKS2_"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE13get_allocatorEv: argument 0"}
!8 = distinct !{!8, !"_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE13get_allocatorEv"}
!9 = distinct !{!9, !10, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!11 = !{!9}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__14listIN4glsl7VaryingENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__14listIN4glsl7VaryingENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE13get_allocatorEv: argument 0"}
!20 = distinct !{!20, !"_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE13get_allocatorEv"}
!21 = distinct !{!21, !22, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!23 = !{!21}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__116allocator_traitsI14pool_allocatorIcEE37select_on_container_copy_constructionIS2_vvEES2_RKS2_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__116allocator_traitsI14pool_allocatorIcEE37select_on_container_copy_constructionIS2_vvEES2_RKS2_"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE13get_allocatorEv: argument 0"}
!32 = distinct !{!32, !"_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE13get_allocatorEv"}
!33 = distinct !{!33, !34, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!35 = !{!33}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN4glsl3strEi: argument 0"}
!38 = distinct !{!38, !"_ZN4glsl3strEi"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!47 = distinct !{!47, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!48 = !{!49, !51}
!49 = distinct !{!49, !50, !"_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE13get_allocatorEv: argument 0"}
!50 = distinct !{!50, !"_ZNKSt3__112basic_stringIcNS_11char_traitsIcEE14pool_allocatorIcEE13get_allocatorEv"}
!51 = distinct !{!51, !52, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!53 = !{!51}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__1plIcNS_11char_traitsIcEE14pool_allocatorIcEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!59 = distinct !{!59, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJNS_4pairIKiS4_EEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISK_EEEEEEDpOT_: argument 0"}
!62 = distinct !{!62, !"_ZNSt3__16__treeINS_12__value_typeIiN4glsl9OutputASM15TypedMemberInfoEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJNS_4pairIKiS4_EEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISK_EEEEEEDpOT_"}
