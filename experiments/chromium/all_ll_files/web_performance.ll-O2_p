; ModuleID = '../../third_party/blink/renderer/core/exported/web_performance.cc'
source_filename = "../../third_party/blink/renderer/core/exported/web_performance.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.166", i32, [4 x i8], %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.304", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.310", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.334", %"class.std::__1::unique_ptr.340", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.347", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.284", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.202" = type { %"struct.std::__1::__atomic_base.203" }
%"struct.std::__1::__atomic_base.203" = type { %"struct.std::__1::__atomic_base.204" }
%"struct.std::__1::__atomic_base.204" = type { %"struct.std::__1::__cxx_atomic_impl.205" }
%"struct.std::__1::__cxx_atomic_impl.205" = type { %"struct.std::__1::__cxx_atomic_base_impl.206" }
%"struct.std::__1::__cxx_atomic_base_impl.206" = type { i64 }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist.213"* }
%"class.blink::Worklist.213" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::Worklist.220"* }
%"class.blink::Worklist.220" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::Worklist.227"* }
%"class.blink::Worklist.227" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::Worklist.234"* }
%"class.blink::Worklist.234" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::Worklist.241"* }
%"class.blink::Worklist.241" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::Worklist.248"* }
%"class.blink::Worklist.248" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::Worklist.255"* }
%"class.blink::Worklist.255" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.202" }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.262", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264", %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { i64 }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { float }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.287", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.296" }
%"class.WTF::Vector.296" = type { %"class.WTF::VectorBuffer.297" }
%"class.WTF::VectorBuffer.297" = type { %"class.WTF::VectorBufferBase.298" }
%"class.WTF::VectorBufferBase.298" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.310" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.313" }
%"class.WTF::VectorBuffer.313" = type { %"class.WTF::VectorBufferBase.314" }
%"class.WTF::VectorBufferBase.314" = type { %"struct.std::__1::pair.315"*, i32, i32 }
%"struct.std::__1::pair.315" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.328" }
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.213"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.220"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.227"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.234"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.241"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.351", i64 }
%"class.std::__1::vector.351" = type { %"class.std::__1::__vector_base.352" }
%"class.std::__1::__vector_base.352" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.353" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.346 }
%class.scoped_refptr.346 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.347" = type { %"struct.std::__1::__atomic_base.348" }
%"struct.std::__1::__atomic_base.348" = type { %"struct.std::__1::__cxx_atomic_impl.349" }
%"struct.std::__1::__cxx_atomic_impl.349" = type { %"struct.std::__1::__cxx_atomic_base_impl.350" }
%"struct.std::__1::__cxx_atomic_base_impl.350" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::WebPerformance" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WindowPerformance" = type { %"class.blink::Performance", %"class.blink::PerformanceMonitor::Client", %"class.blink::ExecutionContextClient", %"class.blink::PageVisibilityObserver", i64, i64, i16, %"class.blink::HeapDeque.51", %"class.WTF::Deque.58", %"class.blink::Member.22", %"class.blink::Member.63", %"class.blink::Member.70", %"class.blink::Member.72", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional" }
%"class.blink::Performance" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::HeapVector.8", %"class.blink::HeapDeque", i32, i8, %"class.blink::HeapVector.8", i32, %"class.blink::HeapVector.8", i32, %"class.blink::HeapVector.8", %"class.blink::HeapVector.8", %"class.blink::HeapVector.8", %"class.blink::HeapVector.8", %"class.blink::Member.14", %"class.blink::Member.20", %"class.blink::Member.14", %"class.blink::Member.14", %"class.blink::Member.22", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"*, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet", %class.scoped_refptr.31, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.45" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::HeapDeque" = type { %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::Member<blink::PerformanceEntry>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PerformanceEntry>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13" }
%"class.WTF::VectorBufferBase.13" = type { %"class.blink::Member.14"*, i32, i32 }
%"class.blink::HeapVector.8" = type { %"class.WTF::Vector.11" }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::UserTiming"* }
%"class.blink::UserTiming" = type opaque
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::PerformanceEntry"* }
%"class.blink::PerformanceEntry" = type <{ %"class.blink::ScriptWrappable", double, %"class.WTF::AtomicString", double, i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.27", i32, i32 }
%"class.WTF::Vector.27" = type { %"class.WTF::VectorBuffer.28" }
%"class.WTF::VectorBuffer.28" = type { %"class.WTF::VectorBufferBase.29" }
%"class.WTF::VectorBufferBase.29" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%class.scoped_refptr.31 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.32" }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i32 }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.31, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.37 }
%class.scoped_refptr.37 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.38", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.38" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.39" }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::Performance"* }
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::BackgroundTracingHelper"* }
%"class.blink::BackgroundTracingHelper" = type opaque
%"class.blink::PerformanceMonitor::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.47" }
%"class.blink::WeakMember.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.117", i32, i8, [3 x i8], %"class.blink::HeapVector.119", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.127", %"class.blink::Member.129", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.138", %"class.blink::Member.144", %"class.blink::Member.146", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.76" }
%"class.WTF::HashMap.76" = type { %"class.WTF::HashTable.77" }
%"class.WTF::HashTable.77" = type <{ %"struct.WTF::KeyValuePair.79"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.79" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.85" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.82" }
%"class.WTF::HashTable.82" = type <{ %"class.blink::WeakMember.84"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.84" = type opaque
%"class.blink::Supplementable.85" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.86" }
%"class.blink::HeapHashMap.86" = type { %"class.WTF::HashMap.89" }
%"class.WTF::HashMap.89" = type { %"class.WTF::HashTable.90" }
%"class.WTF::HashTable.90" = type <{ %"struct.WTF::KeyValuePair.92"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.92" = type { i8*, %"class.blink::Member.162" }
%"class.blink::Member.162" = type { %"class.blink::MemberBase.163" }
%"class.blink::MemberBase.163" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.164" }
%"class.blink::Member.164" = type { %"class.blink::MemberBase.165" }
%"class.blink::MemberBase.165" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.93, %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106", %"class.blink::Member.112", i32, [4 x i8], %"class.WTF::HashSet.113", i32, i32 }
%class.scoped_refptr.93 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.94", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.99 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.94" = type { %"class.absl::optional_internal::optional_data.95" }
%"class.absl::optional_internal::optional_data.95" = type { %"class.absl::optional_internal::optional_data_base.96" }
%"class.absl::optional_internal::optional_data_base.96" = type { %"class.absl::optional_internal::optional_data_dtor_base.97" }
%"class.absl::optional_internal::optional_data_dtor_base.97" = type { i8, %union.anon.98 }
%union.anon.98 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.99 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.112" = type { %"class.blink::MemberBase.48" }
%"class.WTF::HashSet.113" = type { %"class.WTF::HashTable.114" }
%"class.WTF::HashTable.114" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.119" = type { %"class.WTF::Vector.122" }
%"class.WTF::Vector.122" = type { %"class.WTF::VectorBuffer.123" }
%"class.WTF::VectorBuffer.123" = type { %"class.WTF::VectorBufferBase.124" }
%"class.WTF::VectorBufferBase.124" = type { %"class.blink::Member.125"*, i32, i32 }
%"class.blink::Member.125" = type opaque
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.131", i32, i32 }
%"class.blink::HeapHashMap.131" = type { %"class.WTF::HashMap.134" }
%"class.WTF::HashMap.134" = type { %"class.WTF::HashTable.135" }
%"class.WTF::HashTable.135" = type <{ %"struct.WTF::KeyValuePair.137"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.137" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::PageVisibilityObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.49" }
%"class.blink::WeakMember.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::HeapDeque.51" = type { %"class.WTF::Deque.54" }
%"class.WTF::Deque.54" = type { %"class.WTF::Deque<blink::Member<blink::PerformanceEventTiming>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PerformanceEventTiming>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.56" }
%"class.WTF::VectorBuffer.56" = type { %"class.WTF::VectorBufferBase.57" }
%"class.WTF::VectorBufferBase.57" = type { %"class.blink::Member.22"*, i32, i32 }
%"class.WTF::Deque.58" = type { %"class.WTF::Deque<unsigned long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<unsigned long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.61" }
%"class.WTF::VectorBuffer.61" = type { %"class.WTF::VectorBufferBase.62" }
%"class.WTF::VectorBufferBase.62" = type { i64*, i32, i32 }
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::PerformanceEventTiming"* }
%"class.blink::PerformanceEventTiming" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::EventCounts"* }
%"class.blink::EventCounts" = type { %"class.blink::ScriptWrappable", %"class.blink::Maplike", %"class.WTF::HashMap.65" }
%"class.blink::Maplike" = type { %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.WTF::HashMap.65" = type { %"class.WTF::HashTable.66" }
%"class.WTF::HashTable.66" = type <{ %"struct.WTF::KeyValuePair.69"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.69" = type opaque
%"class.blink::Member.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::PerformanceNavigation"* }
%"class.blink::PerformanceNavigation" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::PerformanceTiming"* }
%"class.blink::PerformanceTiming" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeDelta" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::WindowPerformance"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PtrStorageImpl" = type { %"class.blink::Persistent"* }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"*, %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"*, %"class.std::__1::__compressed_pair.148" }
%"struct.blink::WebPerformance::BackForwardCacheRestoreTiming" = type { double, double, %"struct.std::__1::array", %"class.absl::optional" }
%"struct.std::__1::array" = type { [3 x double] }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"* }
%"class.WTF::Vector.151" = type { %"class.WTF::VectorBuffer.152" }
%"class.WTF::VectorBuffer.152" = type { %"class.WTF::VectorBufferBase.153" }
%"class.WTF::VectorBufferBase.153" = type { %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"*, i32, i32 }
%"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming" = type { i64, i64, %"struct.std::__1::array.154", %"class.absl::optional" }
%"struct.std::__1::array.154" = type { [3 x i64] }
%"class.blink::PersistentLocation" = type { %"class.base::Location" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.360 }
%union.anon.360 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink14PtrStorageImplINS_17WindowPerformanceELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_ = comdat any

$_ZN5blink14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_17WindowPerformanceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink17PerformanceTiming29BackForwardCacheRestoreTimingELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink14WebPerformanceC1EPNS_17WindowPerformanceE = hidden unnamed_addr alias void (%"class.blink::WebPerformance"*, %"class.blink::WindowPerformance"*), void (%"class.blink::WebPerformance"*, %"class.blink::WindowPerformance"*)* @_ZN5blink14WebPerformanceC2EPNS_17WindowPerformanceE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebPerformance5ResetEv(%"class.blink::WebPerformance"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #6
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #6
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %24 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  store %"class.blink::PersistentNode"* %22, %"class.blink::PersistentNode"** %23, align 8
  br label %28

28:                                               ; preds = %16, %5
  %29 = bitcast %"class.blink::Persistent"* %3 to i8*
  tail call void @free(i8* %29) #6
  br label %30

30:                                               ; preds = %1, %28
  store %"class.blink::Persistent"* null, %"class.blink::Persistent"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebPerformance6AssignERKS0_(%"class.blink::WebPerformance"*, %"class.blink::WebPerformance"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::PtrStorageImpl"*
  %4 = bitcast %"class.blink::WebPerformance"* %1 to %"class.blink::Persistent"**
  %5 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %4, align 8
  %6 = icmp eq %"class.blink::Persistent"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::WindowPerformance"* [ %9, %7 ], [ null, %2 ]
  tail call void @_ZN5blink14PtrStorageImplINS_17WindowPerformanceELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %3, %"class.blink::WindowPerformance"* %11) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14WebPerformance17GetNavigationTypeEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceNavigation"* @_ZNK5blink17WindowPerformance10navigationEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call zeroext i8 @_ZNK5blink21PerformanceNavigation4typeEv(%"class.blink::PerformanceNavigation"* %10) #6
  %12 = icmp eq i8 %11, 1
  %13 = select i1 %12, i32 3, i32 5
  %14 = icmp eq i8 %11, 2
  %15 = select i1 %14, i32 2, i32 %13
  ret i32 %15
}

declare %"class.blink::PerformanceNavigation"* @_ZNK5blink17WindowPerformance10navigationEv(%"class.blink::WindowPerformance"*) unnamed_addr #1

declare zeroext i8 @_ZNK5blink21PerformanceNavigation4typeEv(%"class.blink::PerformanceNavigation"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance15NavigationStartEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming15navigationStartEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"*) unnamed_addr #1

declare i64 @_ZNK5blink17PerformanceTiming15navigationStartEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14WebPerformance30NavigationStartAsMonotonicTimeEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming30NavigationStartAsMonotonicTimeEv(%"class.blink::PerformanceTiming"* %10) #6
  ret i64 %11
}

declare i64 @_ZNK5blink17PerformanceTiming30NavigationStartAsMonotonicTimeEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14WebPerformance23BackForwardCacheRestoreEv(%"class.blink::WebVector"* noalias nocapture sret, %"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.151", align 8
  %4 = bitcast %"class.WTF::Vector.151"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %3, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.blink::WebPerformance"* %1 to %"class.blink::Persistent"**
  %8 = bitcast %"class.WTF::Vector.151"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %7, align 8
  %10 = icmp eq %"class.blink::Persistent"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %9, i64 0, i32 0, i32 0
  %13 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %12, align 8
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi %"class.blink::WindowPerformance"* [ %13, %11 ], [ null, %2 ]
  %16 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %15) #6
  call void @_ZNK5blink17PerformanceTiming23BackForwardCacheRestoreEv(%"class.WTF::Vector.151"* nonnull sret %3, %"class.blink::PerformanceTiming"* %16) #6
  %17 = load i32, i32* %6, align 4
  %18 = zext i32 %17 to i64
  %19 = bitcast %"class.blink::WebVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #6
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %83, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = mul nuw nsw i64 %18, 56
  %25 = call i8* @_Znwm(i64 %24) #7
  %26 = bitcast i8* %25 to %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"*
  %27 = bitcast %"class.blink::WebVector"* %0 to i8**
  store i8* %25, i8** %27, align 8
  %28 = getelementptr inbounds %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming", %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"* %26, i64 %18
  store %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"* %28, %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"** %22, align 8
  %29 = bitcast %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"** %23 to i64*
  %30 = ptrtoint i8* %25 to i64
  %31 = add nsw i64 %18, -1
  %32 = getelementptr %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming", %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"* %26, i64 %31, i32 0
  %33 = ptrtoint double* %32 to i64
  %34 = sub i64 %33, %30
  %35 = urem i64 %34, 56
  %36 = add i64 %34, 56
  %37 = sub i64 %36, %35
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 %37, i1 false) #6
  %38 = ptrtoint %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"* %28 to i64
  store i64 %38, i64* %29, align 8
  br label %39

39:                                               ; preds = %21, %39
  %40 = phi i64 [ 0, %21 ], [ %79, %39 ]
  %41 = trunc i64 %40 to i32
  %42 = call dereferenceable(56) %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* @_ZN3WTF6VectorIN5blink17PerformanceTiming29BackForwardCacheRestoreTimingELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.151"* nonnull %3, i32 %41) #6
  %43 = getelementptr inbounds %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming", %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* %42, i64 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = uitofp i64 %44 to double
  %46 = fdiv double %45, 1.000000e+03
  %47 = getelementptr inbounds %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming", %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"* %26, i64 %40, i32 0
  store double %46, double* %47, align 8
  %48 = call dereferenceable(56) %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* @_ZN3WTF6VectorIN5blink17PerformanceTiming29BackForwardCacheRestoreTimingELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.151"* nonnull %3, i32 %41) #6
  %49 = getelementptr inbounds %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming", %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* %48, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = uitofp i64 %50 to double
  %52 = fdiv double %51, 1.000000e+03
  %53 = getelementptr inbounds %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming", %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"* %26, i64 %40, i32 1
  store double %52, double* %53, align 8
  %54 = call dereferenceable(56) %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* @_ZN3WTF6VectorIN5blink17PerformanceTiming29BackForwardCacheRestoreTimingELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.151"* nonnull %3, i32 %41) #6
  %55 = call dereferenceable(56) %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* @_ZN3WTF6VectorIN5blink17PerformanceTiming29BackForwardCacheRestoreTimingELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.151"* nonnull %3, i32 %41) #6
  %56 = getelementptr inbounds %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming", %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* %55, i64 0, i32 2, i32 0, i64 0
  %57 = load i64, i64* %56, align 8
  %58 = uitofp i64 %57 to double
  %59 = fdiv double %58, 1.000000e+03
  %60 = getelementptr inbounds %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming", %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"* %26, i64 %40, i32 2, i32 0, i64 0
  store double %59, double* %60, align 8
  %61 = call dereferenceable(56) %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* @_ZN3WTF6VectorIN5blink17PerformanceTiming29BackForwardCacheRestoreTimingELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.151"* nonnull %3, i32 %41) #6
  %62 = call dereferenceable(56) %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* @_ZN3WTF6VectorIN5blink17PerformanceTiming29BackForwardCacheRestoreTimingELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.151"* nonnull %3, i32 %41) #6
  %63 = getelementptr inbounds %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming", %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* %62, i64 0, i32 2, i32 0, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = uitofp i64 %64 to double
  %66 = fdiv double %65, 1.000000e+03
  %67 = getelementptr inbounds %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming", %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"* %26, i64 %40, i32 2, i32 0, i64 1
  store double %66, double* %67, align 8
  %68 = call dereferenceable(56) %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* @_ZN3WTF6VectorIN5blink17PerformanceTiming29BackForwardCacheRestoreTimingELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.151"* nonnull %3, i32 %41) #6
  %69 = call dereferenceable(56) %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* @_ZN3WTF6VectorIN5blink17PerformanceTiming29BackForwardCacheRestoreTimingELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.151"* nonnull %3, i32 %41) #6
  %70 = getelementptr inbounds %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming", %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* %69, i64 0, i32 2, i32 0, i64 2
  %71 = load i64, i64* %70, align 8
  %72 = uitofp i64 %71 to double
  %73 = fdiv double %72, 1.000000e+03
  %74 = getelementptr inbounds %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming", %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"* %26, i64 %40, i32 2, i32 0, i64 2
  store double %73, double* %74, align 8
  %75 = call dereferenceable(56) %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* @_ZN3WTF6VectorIN5blink17PerformanceTiming29BackForwardCacheRestoreTimingELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.151"* nonnull %3, i32 %41) #6
  %76 = call dereferenceable(56) %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* @_ZN3WTF6VectorIN5blink17PerformanceTiming29BackForwardCacheRestoreTimingELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.151"* nonnull %3, i32 %41) #6
  %77 = getelementptr inbounds %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming", %"struct.blink::WebPerformance::BackForwardCacheRestoreTiming"* %26, i64 %40, i32 3, i32 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming", %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* %76, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false)
  %79 = add nuw nsw i64 %40, 1
  %80 = load i32, i32* %6, align 4
  %81 = zext i32 %80 to i64
  %82 = icmp ult i64 %79, %81
  br i1 %82, label %39, label %83

83:                                               ; preds = %39, %14
  %84 = phi i32 [ 0, %14 ], [ %80, %39 ]
  %85 = load %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"*, %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"** %5, align 8
  %86 = icmp eq %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* %85, null
  %87 = bitcast %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* %85 to i8*
  br i1 %86, label %92, label %88, !prof !3

88:                                               ; preds = %83
  %89 = icmp eq i32 %84, 0
  br i1 %89, label %91, label %90, !prof !2

90:                                               ; preds = %88
  store i32 0, i32* %6, align 4
  br label %91

91:                                               ; preds = %90, %88
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %87) #6
  store %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* null, %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"** %5, align 8
  br label %92

92:                                               ; preds = %83, %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK5blink17PerformanceTiming23BackForwardCacheRestoreEv(%"class.WTF::Vector.151"* sret, %"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance23InputForNavigationStartEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming10inputStartEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming10inputStartEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance14UnloadEventEndEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming14unloadEventEndEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming14unloadEventEndEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance13RedirectStartEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming13redirectStartEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming13redirectStartEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance11RedirectEndEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming11redirectEndEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming11redirectEndEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK5blink14WebPerformance13RedirectCountEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceNavigation"* @_ZNK5blink17WindowPerformance10navigationEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call zeroext i16 @_ZNK5blink21PerformanceNavigation13redirectCountEv(%"class.blink::PerformanceNavigation"* %10) #6
  ret i16 %11
}

declare zeroext i16 @_ZNK5blink21PerformanceNavigation13redirectCountEv(%"class.blink::PerformanceNavigation"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance10FetchStartEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming10fetchStartEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming10fetchStartEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance17DomainLookupStartEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming17domainLookupStartEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming17domainLookupStartEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance15DomainLookupEndEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming15domainLookupEndEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming15domainLookupEndEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance12ConnectStartEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming12connectStartEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming12connectStartEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance10ConnectEndEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming10connectEndEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming10connectEndEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance12RequestStartEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming12requestStartEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming12requestStartEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance13ResponseStartEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming13responseStartEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming13responseStartEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance11ResponseEndEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming11responseEndEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming11responseEndEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance10DomLoadingEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming10domLoadingEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming10domLoadingEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance14DomInteractiveEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming14domInteractiveEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming14domInteractiveEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance26DomContentLoadedEventStartEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming26domContentLoadedEventStartEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming26domContentLoadedEventStartEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance24DomContentLoadedEventEndEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming24domContentLoadedEventEndEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming24domContentLoadedEventEndEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance11DomCompleteEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming11domCompleteEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming11domCompleteEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance14LoadEventStartEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming14loadEventStartEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming14loadEventStartEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance12LoadEventEndEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming12loadEventEndEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming12loadEventEndEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance10FirstPaintEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming10FirstPaintEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming10FirstPaintEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance15FirstImagePaintEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming15FirstImagePaintEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming15FirstImagePaintEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance20FirstContentfulPaintEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming20FirstContentfulPaintEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming20FirstContentfulPaintEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14WebPerformance35FirstContentfulPaintAsMonotonicTimeEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming35FirstContentfulPaintAsMonotonicTimeEv(%"class.blink::PerformanceTiming"* %10) #6
  ret i64 %11
}

declare i64 @_ZNK5blink17PerformanceTiming35FirstContentfulPaintAsMonotonicTimeEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance20FirstMeaningfulPaintEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming20FirstMeaningfulPaintEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming20FirstMeaningfulPaintEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance29FirstMeaningfulPaintCandidateEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming29FirstMeaningfulPaintCandidateEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming29FirstMeaningfulPaintCandidateEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance17LargestImagePaintEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming17LargestImagePaintEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming17LargestImagePaintEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14WebPerformance21LargestImagePaintSizeEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming21LargestImagePaintSizeEv(%"class.blink::PerformanceTiming"* %10) #6
  ret i64 %11
}

declare i64 @_ZNK5blink17PerformanceTiming21LargestImagePaintSizeEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance16LargestTextPaintEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming16LargestTextPaintEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming16LargestTextPaintEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14WebPerformance20LargestTextPaintSizeEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming20LargestTextPaintSizeEv(%"class.blink::PerformanceTiming"* %10) #6
  ret i64 %11
}

declare i64 @_ZNK5blink17PerformanceTiming20LargestTextPaintSizeEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14WebPerformance37LargestContentfulPaintAsMonotonicTimeEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming37LargestContentfulPaintAsMonotonicTimeEv(%"class.blink::PerformanceTiming"* %10) #6
  ret i64 %11
}

declare i64 @_ZNK5blink17PerformanceTiming37LargestContentfulPaintAsMonotonicTimeEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance29ExperimentalLargestImagePaintEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming29ExperimentalLargestImagePaintEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming29ExperimentalLargestImagePaintEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14WebPerformance33ExperimentalLargestImagePaintSizeEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming33ExperimentalLargestImagePaintSizeEv(%"class.blink::PerformanceTiming"* %10) #6
  ret i64 %11
}

declare i64 @_ZNK5blink17PerformanceTiming33ExperimentalLargestImagePaintSizeEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance28ExperimentalLargestTextPaintEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming28ExperimentalLargestTextPaintEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming28ExperimentalLargestTextPaintEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14WebPerformance32ExperimentalLargestTextPaintSizeEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming32ExperimentalLargestTextPaintSizeEv(%"class.blink::PerformanceTiming"* %10) #6
  ret i64 %11
}

declare i64 @_ZNK5blink17PerformanceTiming32ExperimentalLargestTextPaintSizeEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance20FirstEligibleToPaintEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming20FirstEligibleToPaintEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming20FirstEligibleToPaintEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance35FirstInputOrScrollNotifiedTimestampEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming35FirstInputOrScrollNotifiedTimestampEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming35FirstInputOrScrollNotifiedTimestampEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink14WebPerformance15FirstInputDelayEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call { i8, i64 } @_ZNK5blink17PerformanceTiming15FirstInputDelayEv(%"class.blink::PerformanceTiming"* %10) #6
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZNK5blink17PerformanceTiming15FirstInputDelayEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink14WebPerformance19FirstInputTimestampEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call { i8, i64 } @_ZNK5blink17PerformanceTiming19FirstInputTimestampEv(%"class.blink::PerformanceTiming"* %10) #6
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZNK5blink17PerformanceTiming19FirstInputTimestampEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink14WebPerformance17LongestInputDelayEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call { i8, i64 } @_ZNK5blink17PerformanceTiming17LongestInputDelayEv(%"class.blink::PerformanceTiming"* %10) #6
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZNK5blink17PerformanceTiming17LongestInputDelayEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink14WebPerformance21LongestInputTimestampEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call { i8, i64 } @_ZNK5blink17PerformanceTiming21LongestInputTimestampEv(%"class.blink::PerformanceTiming"* %10) #6
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZNK5blink17PerformanceTiming21LongestInputTimestampEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink14WebPerformance24FirstInputProcessingTimeEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call { i8, i64 } @_ZNK5blink17PerformanceTiming24FirstInputProcessingTimeEv(%"class.blink::PerformanceTiming"* %10) #6
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZNK5blink17PerformanceTiming24FirstInputProcessingTimeEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink14WebPerformance16FirstScrollDelayEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call { i8, i64 } @_ZNK5blink17PerformanceTiming16FirstScrollDelayEv(%"class.blink::PerformanceTiming"* %10) #6
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZNK5blink17PerformanceTiming16FirstScrollDelayEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink14WebPerformance20FirstScrollTimestampEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call { i8, i64 } @_ZNK5blink17PerformanceTiming20FirstScrollTimestampEv(%"class.blink::PerformanceTiming"* %10) #6
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZNK5blink17PerformanceTiming20FirstScrollTimestampEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance10ParseStartEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming10ParseStartEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming10ParseStartEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance9ParseStopEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming9ParseStopEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming9ParseStopEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance32ParseBlockedOnScriptLoadDurationEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming32ParseBlockedOnScriptLoadDurationEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming32ParseBlockedOnScriptLoadDurationEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance49ParseBlockedOnScriptLoadFromDocumentWriteDurationEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming49ParseBlockedOnScriptLoadFromDocumentWriteDurationEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming49ParseBlockedOnScriptLoadFromDocumentWriteDurationEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance37ParseBlockedOnScriptExecutionDurationEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming37ParseBlockedOnScriptExecutionDurationEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming37ParseBlockedOnScriptExecutionDurationEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14WebPerformance54ParseBlockedOnScriptExecutionFromDocumentWriteDurationEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call i64 @_ZNK5blink17PerformanceTiming54ParseBlockedOnScriptExecutionFromDocumentWriteDurationEv(%"class.blink::PerformanceTiming"* %10) #6
  %12 = uitofp i64 %11 to double
  %13 = fdiv double %12, 1.000000e+03
  ret double %13
}

declare i64 @_ZNK5blink17PerformanceTiming54ParseBlockedOnScriptExecutionFromDocumentWriteDurationEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink14WebPerformance24LastPortalActivatedPaintEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call { i8, i64 } @_ZNK5blink17PerformanceTiming24LastPortalActivatedPaintEv(%"class.blink::PerformanceTiming"* %10) #6
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZNK5blink17PerformanceTiming24LastPortalActivatedPaintEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink14WebPerformance11UnloadStartEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call { i8, i64 } @_ZNK5blink17PerformanceTiming11UnloadStartEv(%"class.blink::PerformanceTiming"* %10) #6
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZNK5blink17PerformanceTiming11UnloadStartEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink14WebPerformance9UnloadEndEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call { i8, i64 } @_ZNK5blink17PerformanceTiming9UnloadEndEv(%"class.blink::PerformanceTiming"* %10) #6
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZNK5blink17PerformanceTiming9UnloadEndEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink14WebPerformance19CommitNavigationEndEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call { i8, i64 } @_ZNK5blink17PerformanceTiming19CommitNavigationEndEv(%"class.blink::PerformanceTiming"* %10) #6
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZNK5blink17PerformanceTiming19CommitNavigationEndEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink14WebPerformance25UserTimingMarkFullyLoadedEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call { i8, i64 } @_ZNK5blink17PerformanceTiming25UserTimingMarkFullyLoadedEv(%"class.blink::PerformanceTiming"* %10) #6
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZNK5blink17PerformanceTiming25UserTimingMarkFullyLoadedEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink14WebPerformance26UserTimingMarkFullyVisibleEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call { i8, i64 } @_ZNK5blink17PerformanceTiming26UserTimingMarkFullyVisibleEv(%"class.blink::PerformanceTiming"* %10) #6
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZNK5blink17PerformanceTiming26UserTimingMarkFullyVisibleEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink14WebPerformance25UserTimingMarkInteractiveEv(%"class.blink::WebPerformance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::Persistent"**
  %3 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %2, align 8
  %4 = icmp eq %"class.blink::Persistent"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::WindowPerformance"* [ %7, %5 ], [ null, %1 ]
  %10 = tail call %"class.blink::PerformanceTiming"* @_ZNK5blink17WindowPerformance6timingEv(%"class.blink::WindowPerformance"* %9) #6
  %11 = tail call { i8, i64 } @_ZNK5blink17PerformanceTiming25UserTimingMarkInteractiveEv(%"class.blink::PerformanceTiming"* %10) #6
  ret { i8, i64 } %11
}

declare { i8, i64 } @_ZNK5blink17PerformanceTiming25UserTimingMarkInteractiveEv(%"class.blink::PerformanceTiming"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebPerformanceC2EPNS_17WindowPerformanceE(%"class.blink::WebPerformance"*, %"class.blink::WindowPerformance"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebPerformance", %"class.blink::WebPerformance"* %0, i64 0, i32 0, i32 0
  store i8* null, i8** %3, align 8
  %4 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_17WindowPerformanceELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %4, %"class.blink::WindowPerformance"* %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.blink::WebPerformance"* @_ZN5blink14WebPerformanceaSEPNS_17WindowPerformanceE(%"class.blink::WebPerformance"* returned, %"class.blink::WindowPerformance"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebPerformance"* %0 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_17WindowPerformanceELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %3, %"class.blink::WindowPerformance"* %1) #6
  ret %"class.blink::WebPerformance"* %0
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PtrStorageImplINS_17WindowPerformanceELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"*, %"class.blink::WindowPerformance"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::PersistentLocation", align 8
  %4 = icmp eq %"class.blink::WindowPerformance"* %1, null
  %5 = getelementptr inbounds %"class.blink::PtrStorageImpl", %"class.blink::PtrStorageImpl"* %0, i64 0, i32 0
  %6 = load %"class.blink::Persistent"*, %"class.blink::Persistent"** %5, align 8
  %7 = icmp eq %"class.blink::Persistent"* %6, null
  br i1 %4, label %8, label %35

8:                                                ; preds = %2
  br i1 %7, label %34, label %9

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %6, i64 0, i32 0, i32 1, i32 0
  %11 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %12 = icmp eq %"class.blink::PersistentNode"* %11, null
  br i1 %12, label %32, label %13

13:                                               ; preds = %9
  %14 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %15 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %14, i64 0, i32 1
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %15) #6
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %13
  %19 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %15, i8* %19) #6
  br label %20

20:                                               ; preds = %18, %13
  %21 = phi i8* [ %19, %18 ], [ %16, %13 ]
  %22 = bitcast i8* %21 to %"class.blink::ThreadState"**
  %23 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %24, align 8
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %25, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::PersistentRegion"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::PersistentNode"* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %26, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %31, align 8
  store %"class.blink::PersistentNode"* %26, %"class.blink::PersistentNode"** %27, align 8
  br label %32

32:                                               ; preds = %20, %9
  %33 = bitcast %"class.blink::Persistent"* %6 to i8*
  tail call void @free(i8* %33) #6
  br label %34

34:                                               ; preds = %8, %32
  store %"class.blink::Persistent"* null, %"class.blink::Persistent"** %5, align 8
  br label %45

35:                                               ; preds = %2
  br i1 %7, label %36, label %42

36:                                               ; preds = %35
  %37 = tail call noalias i8* @malloc(i64 16) #6
  %38 = bitcast %"class.blink::PersistentLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 32, i1 false) #6
  %39 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %39) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #6
  %40 = bitcast %"class.blink::PtrStorageImpl"* %0 to i8**
  store i8* %37, i8** %40, align 8
  %41 = bitcast i8* %37 to %"class.blink::Persistent"*
  br label %42

42:                                               ; preds = %35, %36
  %43 = phi %"class.blink::Persistent"* [ %6, %35 ], [ %41, %36 ]
  %44 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %43, i64 0, i32 0
  call void @_ZN5blink14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase"* %44, %"class.blink::WindowPerformance"* nonnull %1) #6
  br label %45

45:                                               ; preds = %42, %34
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase"*, %"class.blink::WindowPerformance"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::WindowPerformance"* %1, %"class.blink::WindowPerformance"** %3, align 8
  %4 = ptrtoint %"class.blink::WindowPerformance"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #6
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #6
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !2

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #6
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #6
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #6
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %46, %35, %28, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17WindowPerformanceELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::WindowPerformance"**
  %5 = load %"class.blink::WindowPerformance"*, %"class.blink::WindowPerformance"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #6
  %7 = icmp eq %"class.blink::WindowPerformance"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::WindowPerformance"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, {}* bitcast (void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17WindowPerformanceEE5TraceEPNS_7VisitorEPKv to {}*), %"class.base::Location"* nonnull dereferenceable(32) %3) #6
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17WindowPerformanceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WindowPerformance"*
  tail call void @_ZNK5blink17WindowPerformance5TraceEPNS_7VisitorE(%"class.blink::WindowPerformance"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZNK5blink17WindowPerformance5TraceEPNS_7VisitorE(%"class.blink::WindowPerformance"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* @_ZN3WTF6VectorIN5blink17PerformanceTiming29BackForwardCacheRestoreTimingELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.151"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector.151", %"class.WTF::Vector.151"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"*, %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming", %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* %24, i64 %25
  ret %"struct.blink::PerformanceTiming::BackForwardCacheRestoreTiming"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
