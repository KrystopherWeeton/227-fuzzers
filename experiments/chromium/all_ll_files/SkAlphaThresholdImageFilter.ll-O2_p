; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkAlphaThresholdImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkAlphaThresholdImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%struct.SkRGBA4f = type { float, float, float, float }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.SkSTArray.250 = type { %class.SkAlignedSTStorage.251, %class.SkTArray.252 }
%class.SkAlignedSTStorage.251 = type { [16 x i8] }
%class.SkTArray.252 = type { %class.sk_sp*, i64 }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.2*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.8*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.2*, i8*, i64, i8*)*, i8* }
%class.sk_sp.8 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray.250 }
%"class.(anonymous namespace)::SkAlphaThresholdImageFilter" = type { %class.SkImageFilter_Base.base, %class.SkRegion, float, float }
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.16*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.18, %"class.skif::LayerSpace.19" }
%"class.skif::LayerSpace.19" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%"class.SkRegion::Iterator" = type <{ %class.SkRegion*, i32*, %struct.SkIRect, i8, [7 x i8] }>
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.158, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.158 = type { %class.SkAlignedSTStorage.159, %class.SkTArray.160 }
%class.SkAlignedSTStorage.159 = type { [8 x i8] }
%class.SkTArray.160 = type { %"class.std::__1::unique_ptr.155"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.91, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.91 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.92, %class.sk_sp.93, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.129" }
%class.SkNVRefCnt.92 = type { %"struct.std::__1::atomic" }
%class.sk_sp.93 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.94 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.16, i8* }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.94 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.95, void (i8*)*, i8* }
%class.SkNVRefCnt.95 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.96, i32, [4 x i8] }
%union.anon.96 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.93, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.126, %class.sk_sp.128, %class.sk_sp.128 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.106, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.117, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.106 = type { %class.SkTHashTable.107 }
%class.SkTHashTable.107 = type { i32, i32, %class.SkAutoTArray.108 }
%class.SkAutoTArray.108 = type { %"class.std::__1::unique_ptr.109" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.115, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.115 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.116, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.116 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.117 = type { %class.SkTHashTable.118 }
%class.SkTHashTable.118 = type { i32, i32, %class.SkAutoTArray.119 }
%class.SkAutoTArray.119 = type { %"class.std::__1::unique_ptr.120" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.126 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.127, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.127 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.128 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.129" = type { %"struct.std::__1::__atomic_base.130" }
%"struct.std::__1::__atomic_base.130" = type { %"struct.std::__1::__atomic_base.131" }
%"struct.std::__1::__atomic_base.131" = type { %"struct.std::__1::__cxx_atomic_impl.132" }
%"struct.std::__1::__cxx_atomic_impl.132" = type { %"struct.std::__1::__cxx_atomic_base_impl.133" }
%"struct.std::__1::__cxx_atomic_base_impl.133" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.SkBitmap = type { %class.sk_sp.208, %class.SkPixmap, %class.sk_sp.209 }
%class.sk_sp.208 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.209 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%struct.SkPoint = type { float, float }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.21", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.202" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.20 }
%class.sk_sp.20 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap.32, %class.SkTHashMap.42, %class.SkTArray.53, %class.SkTArray.28, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.24"*, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.28, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.27 }
%class.sk_sp.27 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.32 = type { %class.SkTHashTable.33 }
%class.SkTHashTable.33 = type { i32, i32, %class.SkAutoTArray.34 }
%class.SkAutoTArray.34 = type { %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.38" }
%"struct.std::__1::pair.38" = type { i32, i32 }
%class.SkTHashMap.42 = type { %class.SkTHashTable.43 }
%class.SkTHashTable.43 = type { i32, i32, %class.SkAutoTArray.44 }
%class.SkAutoTArray.44 = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.48" }
%"struct.std::__1::pair.48" = type { i32, %class.SkTArray.49* }
%class.SkTArray.49 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.53 = type { %"class.std::__1::unique_ptr.54"*, i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.49, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%class.SkTArray.28 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.72 }
%class.SkFibBlockSizes.72 = type { i32 }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.79, %class.SkTArray.88, %class.GrOpsTask*, %class.SkSTArray.167, %class.SkSTArray.170, %"class.std::__1::unique_ptr.172", %class.sk_sp.188, %class.GrTokenTracker, i8, i8, %class.SkTArray.189, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.79 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.80", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.83, i8, [7 x i8] }>
%class.sk_sp.83 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.84, i8*, i64 }
%class.GrNonAtomicRef.84 = type { i32 }
%class.SkTArray.88 = type { %class.sk_sp.89*, i64 }
%class.sk_sp.89 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.134, i32, i32, %class.SkSTArray.141, %class.SkSTArray.141, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.90 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.90 = type { %class.sk_sp.91*, i64 }
%class.SkTArray.134 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.135", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.141 = type { %class.SkAlignedSTStorage.142, %class.SkTArray.143 }
%class.SkAlignedSTStorage.142 = type { [8 x i8] }
%class.SkTArray.143 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.144, %class.sk_sp.164, %class.SkTArray.166, %struct.SkRect, %struct.SkIRect }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.144 = type { %class.SkAlignedSTStorage.145, %class.SkTArray.146 }
%class.SkAlignedSTStorage.145 = type { [2000 x i8] }
%class.SkTArray.146 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.147", %class.GrOp* }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.147", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.155" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.153 }
%union.anon.153 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.154, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.154 = type { i32 }
%class.sk_sp.164 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.165, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.165 = type { %"struct.std::__1::atomic" }
%class.SkTArray.166 = type { %class.GrSurfaceProxy**, i64 }
%class.SkSTArray.167 = type { %class.SkAlignedSTStorage.168, %class.SkTArray.169 }
%class.SkAlignedSTStorage.168 = type { [32 x i8] }
%class.SkTArray.169 = type { i32*, i64 }
%class.SkSTArray.170 = type { %class.SkAlignedSTStorage.171, %class.SkTArray.88 }
%class.SkAlignedSTStorage.171 = type { [32 x i8] }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.175, %"class.std::__1::unique_ptr.179", %class.GrPathRenderer* }
%class.SkSTArray.175 = type { %class.SkAlignedSTStorage.176, %class.SkTArray.177 }
%class.SkAlignedSTStorage.176 = type { [64 x i8] }
%class.SkTArray.177 = type { %class.sk_sp.178*, i64 }
%class.sk_sp.178 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.188 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.189 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.190, i32, %class.GrRenderTask** }
%class.SkTHashMap.190 = type { %class.SkTHashTable.191 }
%class.SkTHashTable.191 = type { i32, i32, %class.SkAutoTArray.192 }
%class.SkAutoTArray.192 = type { %"class.std::__1::unique_ptr.193" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %class.GrProxyProvider* }
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.214, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrColorInfo = type { %class.sk_sp.14, %class.sk_sp.213, i32, i32 }
%class.sk_sp.213 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.sk_sp.214 = type { %class.GrOpsTask* }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.215, %class.SkAutoTMalloc }
%class.SkAutoTArray.215 = type { %"class.std::__1::unique_ptr.216" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.219 }
%union.anon.219 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.220, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp.220 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.221, %struct.SkRect, [4 x i8], %class.SkTDArray.222, %class.SkTDArray.223, %class.SkTDArray.224, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.221 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.222 = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.223 = type { i8*, i32, i32 }
%class.SkTDArray.224 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.225 }
%class.SkTDArray.225 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%struct.SkPackedGlyphID = type { i32 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.229" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %struct.SkPoint* }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.234, %class.SkSTArray.239, %class.SkSTArray.242 }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.233" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.233" = type { %struct.SkPoint* }
%class.SkZip.234 = type { %"class.std::__1::tuple.235", i64 }
%"class.std::__1::tuple.235" = type { %"struct.std::__1::__tuple_impl.236" }
%"struct.std::__1::__tuple_impl.236" = type { %"class.std::__1::__tuple_leaf.237", %"class.std::__1::__tuple_leaf.238" }
%"class.std::__1::__tuple_leaf.237" = type { i16* }
%"class.std::__1::__tuple_leaf.238" = type { %struct.SkPoint* }
%class.SkSTArray.239 = type { %class.SkAlignedSTStorage.240, %class.SkTArray.241 }
%class.SkAlignedSTStorage.240 = type { [8 x i8] }
%class.SkTArray.241 = type { i16*, i64 }
%class.SkSTArray.242 = type { %class.SkAlignedSTStorage.243, %class.SkTArray.244 }
%class.SkAlignedSTStorage.243 = type { [32 x i8] }
%class.SkTArray.244 = type { %struct.SkPoint*, i64 }
%class.GrSurfaceFillContext = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.214, i8, [7 x i8] }>
%class.GrClip = type opaque
%class.GrStyle = type opaque
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

@.str = private unnamed_addr constant [28 x i8] c"SkAlphaThresholdImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"SkAlphaThresholdFilterImpl\00", align 1
@_ZN4skifL11kNoCropRectE = internal unnamed_addr constant %struct.SkRect { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000 }, align 4
@_ZTVN12_GLOBAL__N_127SkAlphaThresholdImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::SkAlphaThresholdImageFilter"*)* @_ZN12_GLOBAL__N_127SkAlphaThresholdImageFilterD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkAlphaThresholdImageFilter"*)* @_ZN12_GLOBAL__N_127SkAlphaThresholdImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkAlphaThresholdImageFilter"*)* @_ZNK12_GLOBAL__N_127SkAlphaThresholdImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkAlphaThresholdImageFilter"*)* @_ZNK12_GLOBAL__N_127SkAlphaThresholdImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkAlphaThresholdImageFilter"*, %class.SkWriteBuffer*)* @_ZNK12_GLOBAL__N_127SkAlphaThresholdImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)* @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.18*, %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_127SkAlphaThresholdImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@_ZL17SK_PMColor4fWHITE = internal unnamed_addr constant %struct.SkRGBA4f { float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00 }, align 4
@_ZTV33GrAlphaThresholdFragmentProcessor = external unnamed_addr constant { [10 x i8*] }, align 8
@__const._ZN12_GLOBAL__N_127SkAlphaThresholdImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.250 } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray.250 { %class.SkAlignedSTStorage.251 { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray.252 { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters14AlphaThresholdERK8SkRegionff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, %class.SkRegion* dereferenceable(24), float, float, %class.sk_sp* nocapture, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = alloca %class.sk_sp, align 8
  %14 = bitcast i32* %7 to float*
  store float %2, float* %14, align 4
  %15 = bitcast i32* %8 to float*
  store float %3, float* %15, align 4
  %16 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  store float 0.000000e+00, float* %9, align 4
  %17 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  store float 1.000000e+00, float* %10, align 4
  %18 = fcmp ogt float %2, 1.000000e+00
  %19 = select i1 %18, float* %10, float* %14
  %20 = load float, float* %19, align 4
  %21 = fcmp ogt float %20, 0.000000e+00
  %22 = select i1 %21, float* %19, float* %9
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  %25 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25)
  store float 0.000000e+00, float* %11, align 4
  %26 = bitcast float* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26)
  store float 1.000000e+00, float* %12, align 4
  %27 = fcmp ogt float %3, 1.000000e+00
  %28 = select i1 %27, float* %12, float* %15
  %29 = load float, float* %28, align 4
  %30 = fcmp ogt float %29, 0.000000e+00
  %31 = select i1 %30, float* %28, float* %11
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25)
  %34 = and i32 %24, 2139095040
  %35 = icmp eq i32 %34, 2139095040
  %36 = and i32 %33, 2139095040
  %37 = icmp eq i32 %36, 2139095040
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %6
  %40 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %40, align 8
  br label %88

41:                                               ; preds = %6
  %42 = tail call i8* @_Znwm(i64 112) #10
  %43 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %44 = bitcast %class.sk_sp* %4 to i64*
  %45 = load i64, i64* %44, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %43, align 8
  %46 = bitcast %class.sk_sp* %13 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %5, i64 0, i32 0
  %48 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %5, i64 0, i32 0, i32 0
  %49 = load float, float* %48, align 4
  %50 = fcmp une float %49, 0xFFF0000000000000
  br i1 %50, label %63, label %51

51:                                               ; preds = %41
  %52 = getelementptr inbounds float, float* %48, i64 1
  %53 = load float, float* %52, align 4
  %54 = fcmp une float %53, 0xFFF0000000000000
  br i1 %54, label %63, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds float, float* %48, i64 2
  %57 = load float, float* %56, align 4
  %58 = fcmp une float %57, 0x7FF0000000000000
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds float, float* %48, i64 3
  %61 = load float, float* %60, align 4
  %62 = fcmp une float %61, 0x7FF0000000000000
  br i1 %62, label %63, label %64

63:                                               ; preds = %59, %55, %51, %41
  br label %64

64:                                               ; preds = %59, %63
  %65 = phi %struct.SkRect* [ %47, %63 ], [ null, %59 ]
  %66 = bitcast i8* %42 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %66, %class.sk_sp* nonnull %13, i32 1, %struct.SkRect* %65) #11
  %67 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_127SkAlphaThresholdImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds i8, i8* %42, i64 80
  %69 = bitcast i8* %68 to %class.SkRegion*
  call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %69, %class.SkRegion* dereferenceable(24) %1) #11
  %70 = getelementptr inbounds i8, i8* %42, i64 104
  %71 = bitcast i8* %70 to i32*
  store i32 %24, i32* %71, align 8
  %72 = getelementptr inbounds i8, i8* %42, i64 108
  %73 = bitcast i8* %72 to i32*
  store i32 %33, i32* %73, align 4
  %74 = bitcast %class.sk_sp* %0 to i8**
  store i8* %42, i8** %74, align 8
  %75 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 0, i32 0
  %76 = load %class.SkImageFilter*, %class.SkImageFilter** %75, align 8
  %77 = icmp eq %class.SkImageFilter* %76, null
  br i1 %77, label %88, label %78

78:                                               ; preds = %64
  %79 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %76, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 -1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %88

82:                                               ; preds = %78
  %83 = bitcast %class.SkImageFilter* %76 to %class.SkRefCntBase*
  %84 = bitcast %class.SkImageFilter* %76 to void (%class.SkRefCntBase*)***
  %85 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %84, align 8
  %86 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, i64 2
  %87 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, align 8
  call void %87(%class.SkRefCntBase* nonnull %83) #11
  br label %88

88:                                               ; preds = %82, %78, %64, %39
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z46SkRegisterAlphaThresholdImageFilterFlattenablev() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_127SkAlphaThresholdImageFilter10CreateProcER12SkReadBuffer) #11
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_127SkAlphaThresholdImageFilter10CreateProcER12SkReadBuffer) #11
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.15*, %class.SkReadBuffer*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_127SkAlphaThresholdImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %"class.SkImageFilter_Base::Common", align 8
  %4 = alloca %class.SkRegion, align 8
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %"struct.SkImageFilters::CropRect", align 4
  %8 = bitcast %"class.SkImageFilter_Base::Common"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray.250 }* @__const._ZN12_GLOBAL__N_127SkAlphaThresholdImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 16
  %11 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 0
  %12 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 24
  %13 = bitcast i8* %12 to i64*
  %14 = bitcast i8* %10 to i8**
  store i8* %11, i8** %14, align 8
  store i64 17179869184, i64* %13, align 8
  %15 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %3, %class.SkReadBuffer* dereferenceable(136) %1, i32 1) #11
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %17, align 8
  br label %55

18:                                               ; preds = %2
  %19 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %20 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #11
  %21 = bitcast %class.SkRegion* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = bitcast %class.SkRegion* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %4) #11
  call void @_ZN12SkReadBuffer10readRegionEP8SkRegion(%class.SkReadBuffer* %1, %class.SkRegion* nonnull %4) #11
  %23 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  %24 = bitcast i8* %10 to %class.sk_sp**
  %25 = load %class.sk_sp*, %class.sk_sp** %24, align 8, !noalias !2
  %26 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %25, i64 0, i32 0
  %28 = load %class.SkImageFilter*, %class.SkImageFilter** %27, align 8, !noalias !2
  %29 = icmp eq %class.SkImageFilter* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %18
  %31 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic, !noalias !2
  br label %33

33:                                               ; preds = %30, %18
  store %class.SkImageFilter* %28, %class.SkImageFilter** %26, align 8, !alias.scope !2
  %34 = bitcast %"struct.SkImageFilters::CropRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = load i32, i32* %9, align 8
  %36 = icmp eq i32 %35, 0
  %37 = select i1 %36, i8* bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i8* %8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %34, i8* align 4 %37, i64 16, i1 false) #11
  call void @_ZN14SkImageFilters14AlphaThresholdERK8SkRegionff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* nonnull sret %5, %class.SkRegion* nonnull dereferenceable(24) %4, float %19, float %20, %class.sk_sp* nonnull %6, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %7)
  %38 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %39 = bitcast %class.sk_sp* %5 to i64*
  %40 = load i64, i64* %39, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %38, align 8
  %41 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %40, i64* %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  %42 = load %class.SkImageFilter*, %class.SkImageFilter** %26, align 8
  %43 = icmp eq %class.SkImageFilter* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %33
  %45 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %42, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %class.SkImageFilter* %42 to %class.SkRefCntBase*
  %50 = bitcast %class.SkImageFilter* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  call void %53(%class.SkRefCntBase* nonnull %49) #11
  br label %54

54:                                               ; preds = %33, %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  br label %55

55:                                               ; preds = %54, %16
  %56 = load i64, i64* %13, align 8
  %57 = and i64 %56, 4294967294
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = bitcast i8* %10 to %class.sk_sp**
  br label %65

61:                                               ; preds = %81, %55
  %62 = phi i64 [ %56, %55 ], [ %83, %81 ]
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %89, label %87

65:                                               ; preds = %81, %59
  %66 = phi i64 [ 0, %59 ], [ %82, %81 ]
  %67 = load %class.sk_sp*, %class.sk_sp** %60, align 8
  %68 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %67, i64 %66, i32 0
  %69 = load %class.SkImageFilter*, %class.SkImageFilter** %68, align 8
  %70 = icmp eq %class.SkImageFilter* %69, null
  br i1 %70, label %81, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %69, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %81

75:                                               ; preds = %71
  %76 = bitcast %class.SkImageFilter* %69 to %class.SkRefCntBase*
  %77 = bitcast %class.SkImageFilter* %69 to void (%class.SkRefCntBase*)***
  %78 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %77, align 8
  %79 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, i64 2
  %80 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, align 8
  call void %80(%class.SkRefCntBase* nonnull %76) #11
  br label %81

81:                                               ; preds = %75, %71, %65
  %82 = add nuw nsw i64 %66, 1
  %83 = load i64, i64* %13, align 8
  %84 = lshr i64 %83, 1
  %85 = and i64 %84, 2147483647
  %86 = icmp ult i64 %82, %85
  br i1 %86, label %65, label %61

87:                                               ; preds = %61
  %88 = load i8*, i8** %14, align 8
  call void @_Z7sk_freePv(i8* %88) #11
  br label %89

89:                                               ; preds = %61, %87
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #11
  ret void
}

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #3

declare void @_ZN8SkRegionC1ERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_127SkAlphaThresholdImageFilterD2Ev(%"class.(anonymous namespace)::SkAlphaThresholdImageFilter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SkAlphaThresholdImageFilter", %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_127SkAlphaThresholdImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkAlphaThresholdImageFilter", %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %0, i64 0, i32 1
  tail call void @_ZN8SkRegionD1Ev(%class.SkRegion* %3) #11
  %4 = bitcast %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %4) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_127SkAlphaThresholdImageFilterD0Ev(%"class.(anonymous namespace)::SkAlphaThresholdImageFilter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SkAlphaThresholdImageFilter", %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_127SkAlphaThresholdImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkAlphaThresholdImageFilter", %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %0, i64 0, i32 1
  tail call void @_ZN8SkRegionD1Ev(%class.SkRegion* %3) #11
  %4 = bitcast %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %4) #11
  %5 = bitcast %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_127SkAlphaThresholdImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_127SkAlphaThresholdImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_127SkAlphaThresholdImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_127SkAlphaThresholdImageFilter7flattenER13SkWriteBuffer(%"class.(anonymous namespace)::SkAlphaThresholdImageFilter"*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #11
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SkAlphaThresholdImageFilter", %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %0, i64 0, i32 2
  %5 = load float, float* %4, align 8
  %6 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %7 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %7, i64 5
  %9 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %8, align 8
  tail call void %9(%class.SkWriteBuffer* %1, float %5) #11
  %10 = getelementptr inbounds %"class.(anonymous namespace)::SkAlphaThresholdImageFilter", %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %0, i64 0, i32 3
  %11 = load float, float* %10, align 4
  %12 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %6, align 8
  %13 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %12, i64 5
  %14 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %13, align 8
  tail call void %14(%class.SkWriteBuffer* %1, float %11) #11
  %15 = getelementptr inbounds %"class.(anonymous namespace)::SkAlphaThresholdImageFilter", %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %0, i64 0, i32 1
  %16 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkRegion*)***
  %17 = load void (%class.SkWriteBuffer*, %class.SkRegion*)**, void (%class.SkWriteBuffer*, %class.SkRegion*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkRegion*)*, void (%class.SkWriteBuffer*, %class.SkRegion*)** %17, i64 23
  %19 = load void (%class.SkWriteBuffer*, %class.SkRegion*)*, void (%class.SkWriteBuffer*, %class.SkRegion*)** %18, align 8
  tail call void %19(%class.SkWriteBuffer* %1, %class.SkRegion* dereferenceable(24) %15) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare { <2 x float>, <2 x float> } @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect(%class.SkImageFilter*, %struct.SkRect* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_127SkAlphaThresholdImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.18* noalias sret, %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #6 align 2 {
  %5 = alloca %class.sk_sp.14, align 8
  %6 = alloca %"class.SkRegion::Iterator", align 8
  %7 = alloca %class.GrPaint, align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca %"class.skif::FilterResult", align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %struct.SkIRect*
  %12 = alloca %struct.SkIRect, align 4
  %13 = alloca %class.GrSurfaceProxyView, align 8
  %14 = alloca %class.SkMatrix, align 4
  %15 = alloca %class.GrSurfaceProxyView, align 8
  %16 = alloca %class.GrSurfaceProxyView, align 8
  %17 = alloca %class.SkMatrix, align 16
  %18 = alloca %class.GrSurfaceProxyView, align 8
  %19 = alloca %class.SkMatrix, align 16
  %20 = alloca %class.SkBitmap, align 8
  %21 = alloca %class.SkMatrix, align 16
  %22 = alloca %struct.SkImageInfo, align 16
  %23 = alloca %class.SkBitmap, align 8
  %24 = alloca %struct.SkPoint, align 4
  %25 = alloca { i64, i64 }, align 8
  %26 = bitcast { i64, i64 }* %25 to %struct.SkIRect*
  %27 = bitcast %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %1 to %class.SkImageFilter_Base*
  %28 = bitcast %"class.skif::FilterResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11, !noalias !5
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %9, %class.SkImageFilter_Base* %27, i32 0, %"class.skif::Context"* dereferenceable(136) %2) #11, !noalias !5
  %29 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %9, i64 0, i32 0, i32 0
  %30 = load %class.SkSpecialImage*, %class.SkSpecialImage** %29, align 8, !noalias !8
  %31 = icmp eq %class.SkSpecialImage* %30, null
  br i1 %31, label %49, label %32

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %9, i64 0, i32 1, i32 0
  %34 = bitcast %struct.SkIPoint* %33 to i64*
  %35 = load i64, i64* %34, align 8, !noalias !8
  %36 = trunc i64 %35 to i32
  %37 = lshr i64 %35, 32
  %38 = trunc i64 %37 to i32
  %39 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 1 monotonic, !noalias !8
  %41 = atomicrmw add i32* %39, i32 -1 acq_rel, !noalias !5
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %51

43:                                               ; preds = %32
  %44 = bitcast %class.SkSpecialImage* %30 to %class.SkRefCntBase*
  %45 = bitcast %class.SkSpecialImage* %30 to void (%class.SkRefCntBase*)***
  %46 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %45, align 8, !noalias !5
  %47 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, i64 2
  %48 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, align 8, !noalias !5
  call void %48(%class.SkRefCntBase* nonnull %44) #11, !noalias !5
  br label %51

49:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11, !noalias !5
  %50 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %50, align 8
  br label %678

51:                                               ; preds = %43, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11, !noalias !5
  %52 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #11
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %54 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %30, i64 0, i32 2, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %30, i64 0, i32 2, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = sub i32 %55, %57
  %59 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %30, i64 0, i32 2, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %30, i64 0, i32 2, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = sub i32 %60, %62
  %64 = shl i64 %35, 32
  %65 = ashr exact i64 %64, 32
  %66 = sext i32 %58 to i64
  %67 = add nsw i64 %65, %66
  %68 = icmp slt i64 %67, 2147483647
  %69 = select i1 %68, i64 %67, i64 2147483647
  %70 = icmp sgt i64 %69, -2147483647
  %71 = select i1 %70, i64 %69, i64 -2147483647
  %72 = ashr i64 %35, 32
  %73 = sext i32 %63 to i64
  %74 = add nsw i64 %72, %73
  %75 = icmp slt i64 %74, 2147483647
  %76 = select i1 %75, i64 %74, i64 2147483647
  %77 = icmp sgt i64 %76, -2147483647
  %78 = select i1 %77, i64 %76, i64 -2147483647
  %79 = shl nsw i64 %78, 32
  %80 = and i64 %71, 4294967295
  %81 = or i64 %79, %80
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  store i64 %35, i64* %82, align 8
  store i64 %81, i64* %53, align 8
  %83 = bitcast %struct.SkIRect* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #11
  %84 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %12, i64 0, i32 0
  %85 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %12, i64 0, i32 1
  %86 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %12, i64 0, i32 2
  %87 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %12, i64 0, i32 3
  %88 = bitcast %struct.SkIRect* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %88, i8 -86, i64 16, i1 false)
  %89 = call zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base* %27, %"class.skif::Context"* dereferenceable(136) %2, %struct.SkIRect* nonnull dereferenceable(16) %11, %struct.SkIRect* nonnull %12) #11
  br i1 %89, label %92, label %90

90:                                               ; preds = %51
  %91 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %91, align 8
  br label %669

92:                                               ; preds = %51
  %93 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %94 = load %class.SkSpecialImage*, %class.SkSpecialImage** %93, align 8
  %95 = call zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage* %94) #11
  br i1 %95, label %96, label %431

96:                                               ; preds = %92
  %97 = load %class.SkSpecialImage*, %class.SkSpecialImage** %93, align 8
  %98 = call %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage* %97) #11
  %99 = bitcast %class.GrSurfaceProxyView* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #11
  %100 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %13, i64 0, i32 0, i32 0
  %101 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %13, i64 0, i32 1
  %102 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %13, i64 0, i32 2, i32 0
  %103 = bitcast %class.GrSurfaceProxyView* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 16, i1 false)
  call void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* nonnull sret %13, %class.SkSpecialImage* nonnull %30, %class.GrRecordingContext* %98) #11
  %104 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %100, align 8
  %105 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %104, i64 0, i32 15
  %106 = load i8, i8* %105, align 1, !range !11
  %107 = icmp ne i8 %106, 0
  %108 = load i32, i32* %84, align 4
  %109 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %108, i32* %109, align 4
  %110 = load i32, i32* %85, align 4
  %111 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %110, i32* %111, align 4
  %112 = sext i32 %108 to i64
  %113 = sub i64 0, %64
  %114 = ashr exact i64 %113, 32
  %115 = add nsw i64 %114, %112
  %116 = icmp slt i64 %115, 2147483647
  %117 = select i1 %116, i64 %115, i64 2147483647
  %118 = icmp sgt i64 %117, -2147483647
  %119 = select i1 %118, i64 %117, i64 -2147483647
  %120 = trunc i64 %119 to i32
  store i32 %120, i32* %84, align 4
  %121 = sext i32 %110 to i64
  %122 = and i64 %35, -4294967296
  %123 = sub i64 0, %122
  %124 = ashr exact i64 %123, 32
  %125 = add nsw i64 %124, %121
  %126 = icmp slt i64 %125, 2147483647
  %127 = select i1 %126, i64 %125, i64 2147483647
  %128 = icmp sgt i64 %127, -2147483647
  %129 = select i1 %128, i64 %127, i64 -2147483647
  %130 = trunc i64 %129 to i32
  store i32 %130, i32* %85, align 4
  %131 = load i32, i32* %86, align 4
  %132 = sext i32 %131 to i64
  %133 = add nsw i64 %114, %132
  %134 = icmp slt i64 %133, 2147483647
  %135 = select i1 %134, i64 %133, i64 2147483647
  %136 = icmp sgt i64 %135, -2147483647
  %137 = select i1 %136, i64 %135, i64 -2147483647
  %138 = trunc i64 %137 to i32
  store i32 %138, i32* %86, align 4
  %139 = load i32, i32* %87, align 4
  %140 = sext i32 %139 to i64
  %141 = add nsw i64 %124, %140
  %142 = icmp slt i64 %141, 2147483647
  %143 = select i1 %142, i64 %141, i64 2147483647
  %144 = icmp sgt i64 %143, -2147483647
  %145 = select i1 %144, i64 %143, i64 -2147483647
  %146 = trunc i64 %145 to i32
  store i32 %146, i32* %87, align 4
  %147 = bitcast %class.SkMatrix* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %147) #11
  %148 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %149 = bitcast %class.SkMatrix* %148 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %147, i8* align 4 %149, i64 40, i1 false)
  %150 = sub nsw i32 0, %108
  %151 = sitofp i32 %150 to float
  %152 = sub nsw i32 0, %110
  %153 = sitofp i32 %152 to float
  %154 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %14, float %151, float %153) #11
  %155 = bitcast %class.GrSurfaceProxyView* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #11
  %156 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 0, i32 0
  %157 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 1
  %158 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 2, i32 0
  %159 = bitcast %class.GrSurfaceProxyView* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 -86, i64 16, i1 false)
  %160 = load %class.SkSpecialImage*, %class.SkSpecialImage** %93, align 8
  %161 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %160, i64 0, i32 1
  %162 = bitcast %class.sk_sp.14* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162)
  %163 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %164 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %5, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %164, align 8, !noalias !12
  %165 = load i32, i32* %86, align 4, !noalias !12
  %166 = load i32, i32* %84, align 4, !noalias !12
  %167 = sub i32 %165, %166
  %168 = load i32, i32* %87, align 4, !noalias !12
  %169 = load i32, i32* %85, align 4, !noalias !12
  %170 = sub i32 %168, %169
  %171 = zext i32 %170 to i64
  %172 = shl nuw i64 %171, 32
  %173 = zext i32 %167 to i64
  %174 = or i64 %172, %173
  %175 = call %class.GrSurfaceDrawContext* @_ZN20GrSurfaceDrawContext16MakeWithFallbackEP18GrRecordingContext11GrColorType5sk_spI12SkColorSpaceE12SkBackingFit7SkISizeRK14SkSurfacePropsi11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %98, i32 1, %class.sk_sp.14* nonnull %5, i32 0, i64 %174, %class.SkSurfaceProps* dereferenceable(8) %161, i32 1, i1 zeroext false, i1 zeroext false, i32 1, i1 zeroext true) #11, !noalias !12
  %176 = load %class.SkColorSpace*, %class.SkColorSpace** %164, align 8, !noalias !12
  %177 = icmp eq %class.SkColorSpace* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %96
  %179 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw add i32* %179, i32 -1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %184

182:                                              ; preds = %178
  %183 = bitcast %class.SkColorSpace* %176 to i8*
  call void @_ZdlPv(i8* %183) #10
  br label %184

184:                                              ; preds = %182, %178, %96
  %185 = icmp eq %class.GrSurfaceDrawContext* %175, null
  br i1 %185, label %186, label %188

186:                                              ; preds = %184
  %187 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 16, i1 false) #11, !alias.scope !12
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %187, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %258

188:                                              ; preds = %184
  %189 = bitcast %"class.SkRegion::Iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %189) #11, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 -86, i64 40, i1 false) #11, !noalias !12
  %190 = getelementptr inbounds %"class.(anonymous namespace)::SkAlphaThresholdImageFilter", %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %1, i64 0, i32 1
  call void @_ZN8SkRegion8IteratorC1ERKS_(%"class.SkRegion::Iterator"* nonnull %6, %class.SkRegion* dereferenceable(24) %190) #11
  %191 = bitcast %class.GrSurfaceDrawContext* %175 to %class.GrSurfaceFillContext*
  call void @_ZN20GrSurfaceFillContext13internalClearEPK7SkIRectNSt3__15arrayIfLm4EEEb(%class.GrSurfaceFillContext* nonnull %191, %struct.SkIRect* null, <2 x float> zeroinitializer, <2 x float> zeroinitializer, i1 zeroext false) #11
  %192 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %6, i64 0, i32 3
  %193 = load i8, i8* %192, align 8, !range !11, !noalias !12
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %195, label %242

195:                                              ; preds = %188
  %196 = bitcast %class.GrPaint* %7 to i8*
  %197 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %198 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %199 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %7, i64 0, i32 3
  %200 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %7, i64 0, i32 6, i64 0
  %201 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %7, i64 0, i32 5
  %202 = bitcast %struct.SkRGBA4f* %201 to i8*
  %203 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  %204 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %6, i64 0, i32 2, i32 0
  %205 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %6, i64 0, i32 2, i32 1
  %206 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %6, i64 0, i32 2, i32 2
  %207 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %6, i64 0, i32 2, i32 3
  %208 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %209 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %210 = bitcast i8* %200 to i32*
  br label %211

211:                                              ; preds = %239, %195
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %196) #11, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %196, i8 -86, i64 28, i1 false) #11, !noalias !12
  store i32 -1431655766, i32* %210, align 4, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %196, i8 0, i64 24, i1 false) #11, !noalias !12
  store i8 1, i8* %199, align 8, !noalias !12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %202, i8* align 4 bitcast (%struct.SkRGBA4f* @_ZL17SK_PMColor4fWHITE to i8*), i64 16, i1 false) #11
  call void @_ZN7GrPaint22setPorterDuffXPFactoryE11SkBlendMode(%class.GrPaint* nonnull %7, i32 1) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %203) #11, !noalias !12
  %212 = load i32, i32* %204, align 8, !noalias !12
  %213 = sitofp i32 %212 to float
  %214 = insertelement <2 x float> undef, float %213, i32 0
  %215 = load i32, i32* %205, align 4, !noalias !12
  %216 = sitofp i32 %215 to float
  %217 = insertelement <2 x float> %214, float %216, i32 1
  %218 = load i32, i32* %206, align 8, !noalias !12
  %219 = sitofp i32 %218 to float
  %220 = insertelement <2 x float> undef, float %219, i32 0
  %221 = load i32, i32* %207, align 4, !noalias !12
  %222 = sitofp i32 %221 to float
  %223 = insertelement <2 x float> %220, float %222, i32 1
  store <2 x float> %217, <2 x float>* %208, align 8, !noalias !12
  store <2 x float> %223, <2 x float>* %209, align 8, !noalias !12
  call void @_ZN20GrSurfaceDrawContext8drawRectEPK6GrClipO7GrPaint4GrAARK8SkMatrixRK6SkRectPK7GrStyle(%class.GrSurfaceDrawContext* nonnull %175, %class.GrClip* null, %class.GrPaint* nonnull dereferenceable(48) %7, i1 zeroext false, %class.SkMatrix* nonnull dereferenceable(40) %14, %struct.SkRect* nonnull dereferenceable(16) %163, %class.GrStyle* null) #11
  call void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %203) #11, !noalias !12
  %224 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %198, align 8, !noalias !12
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %198, align 8, !noalias !12
  %225 = icmp eq %class.GrFragmentProcessor* %224, null
  br i1 %225, label %231, label %226

226:                                              ; preds = %211
  %227 = bitcast %class.GrFragmentProcessor* %224 to void (%class.GrFragmentProcessor*)***
  %228 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %227, align 8
  %229 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %228, i64 1
  %230 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %229, align 8
  call void %230(%class.GrFragmentProcessor* nonnull %224) #11
  br label %231

231:                                              ; preds = %226, %211
  %232 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %197, align 8, !noalias !12
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %197, align 8, !noalias !12
  %233 = icmp eq %class.GrFragmentProcessor* %232, null
  br i1 %233, label %239, label %234

234:                                              ; preds = %231
  %235 = bitcast %class.GrFragmentProcessor* %232 to void (%class.GrFragmentProcessor*)***
  %236 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %235, align 8
  %237 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %236, i64 1
  %238 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %237, align 8
  call void %238(%class.GrFragmentProcessor* nonnull %232) #11
  br label %239

239:                                              ; preds = %234, %231
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %196) #11, !noalias !12
  %240 = load i8, i8* %192, align 8, !range !11, !noalias !12
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %211, label %242

242:                                              ; preds = %239, %188
  %243 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %175, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %244 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %243, align 8, !noalias !15
  %245 = icmp eq %class.GrSurfaceProxy* %244, null
  br i1 %245, label %249, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %244, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = atomicrmw add i32* %247, i32 1 monotonic, !noalias !15
  br label %249

249:                                              ; preds = %246, %242
  store %class.GrSurfaceProxy* %244, %class.GrSurfaceProxy** %156, align 8, !alias.scope !18
  %250 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %175, i64 0, i32 0, i32 0, i32 2, i32 1
  %251 = load i32, i32* %250, align 8, !noalias !15
  store i32 %251, i32* %157, align 8, !alias.scope !18
  %252 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %175, i64 0, i32 0, i32 0, i32 2, i32 2, i32 0
  %253 = load i16, i16* %252, align 2, !noalias !15
  store i16 %253, i16* %158, align 4, !alias.scope !18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %189) #11, !noalias !12
  %254 = bitcast %class.GrSurfaceDrawContext* %175 to void (%class.GrSurfaceDrawContext*)***
  %255 = load void (%class.GrSurfaceDrawContext*)**, void (%class.GrSurfaceDrawContext*)*** %254, align 8
  %256 = getelementptr inbounds void (%class.GrSurfaceDrawContext*)*, void (%class.GrSurfaceDrawContext*)** %255, i64 1
  %257 = load void (%class.GrSurfaceDrawContext*)*, void (%class.GrSurfaceDrawContext*)** %256, align 8
  call void %257(%class.GrSurfaceDrawContext* nonnull %175) #11
  br label %258

258:                                              ; preds = %186, %249
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162)
  %259 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %156, align 8
  %260 = icmp eq %class.GrSurfaceProxy* %259, null
  br i1 %260, label %261, label %263

261:                                              ; preds = %258
  %262 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %262, align 8
  br label %415

263:                                              ; preds = %258
  %264 = ptrtoint %class.GrSurfaceProxy* %259 to i64
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %156, align 8
  %265 = bitcast %class.GrSurfaceProxyView* %16 to i64*
  store i64 %264, i64* %265, align 8
  %266 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 1
  %267 = load i32, i32* %157, align 8
  store i32 %267, i32* %266, align 8
  %268 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 2, i32 0
  %269 = load i16, i16* %158, align 4
  store i16 %269, i16* %268, align 4
  %270 = bitcast %class.SkMatrix* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %270) #11
  %271 = load i32, i32* %84, align 4
  %272 = sub nsw i32 0, %271
  %273 = sitofp i32 %272 to float
  %274 = load i32, i32* %85, align 4
  %275 = sub nsw i32 0, %274
  %276 = sitofp i32 %275 to float
  %277 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 1
  %278 = bitcast %class.SkMatrix* %17 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %278, align 16, !alias.scope !19
  %279 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 0, i64 4
  %280 = bitcast float* %279 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %280, align 16, !alias.scope !19
  %281 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %281, align 16, !alias.scope !19
  store i32 16, i32* %277, align 4, !alias.scope !19
  %282 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %17, float %273, float %276) #11
  %283 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %16, i32 2, %class.SkMatrix* nonnull dereferenceable(40) %17, i32 0, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %270) #11
  %284 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %16, i64 0, i32 0, i32 0
  %285 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %284, align 8
  %286 = icmp eq %class.GrSurfaceProxy* %285, null
  br i1 %286, label %299, label %287

287:                                              ; preds = %263
  %288 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %285, i64 0, i32 1
  %289 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %288, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = atomicrmw add i32* %289, i32 -1 acq_rel
  %291 = icmp eq i32 %290, 1
  br i1 %291, label %292, label %299

292:                                              ; preds = %287
  %293 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %288, i64 -2
  %294 = bitcast %class.SkNVRefCnt.92* %293 to %class.GrSurfaceProxy*
  %295 = bitcast %class.SkNVRefCnt.92* %293 to void (%class.GrSurfaceProxy*)***
  %296 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %295, align 8
  %297 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %296, i64 1
  %298 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %297, align 8
  call void %298(%class.GrSurfaceProxy* nonnull %294) #11
  br label %299

299:                                              ; preds = %263, %287, %292
  %300 = bitcast %class.GrSurfaceProxyView* %13 to i64*
  %301 = load i64, i64* %300, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %100, align 8
  %302 = bitcast %class.GrSurfaceProxyView* %18 to i64*
  store i64 %301, i64* %302, align 8
  %303 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 1
  %304 = load i32, i32* %101, align 8
  store i32 %304, i32* %303, align 8
  %305 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 2, i32 0
  %306 = load i16, i16* %102, align 4
  store i16 %306, i16* %305, align 4
  %307 = bitcast %class.SkSpecialImage* %30 to i32 (%class.SkSpecialImage*)***
  %308 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %307, align 8
  %309 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %308, i64 3
  %310 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %309, align 8
  %311 = call i32 %310(%class.SkSpecialImage* nonnull %30) #11
  %312 = bitcast %class.SkMatrix* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %312) #11
  %313 = load i32, i32* %56, align 4
  %314 = sitofp i32 %313 to float
  %315 = load i32, i32* %61, align 4
  %316 = sitofp i32 %315 to float
  %317 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %19, i64 0, i32 1
  %318 = bitcast %class.SkMatrix* %19 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %318, align 16, !alias.scope !22
  %319 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %19, i64 0, i32 0, i64 4
  %320 = bitcast float* %319 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %320, align 16, !alias.scope !22
  %321 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %19, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %321, align 16, !alias.scope !22
  store i32 16, i32* %317, align 4, !alias.scope !22
  %322 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %19, float %314, float %316) #11
  %323 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %18, i32 %311, %class.SkMatrix* nonnull dereferenceable(40) %19, i32 0, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %312) #11
  %324 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 0, i32 0
  %325 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %324, align 8
  %326 = icmp eq %class.GrSurfaceProxy* %325, null
  br i1 %326, label %339, label %327

327:                                              ; preds = %299
  %328 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %325, i64 0, i32 1
  %329 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %328, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = atomicrmw add i32* %329, i32 -1 acq_rel
  %331 = icmp eq i32 %330, 1
  br i1 %331, label %332, label %339

332:                                              ; preds = %327
  %333 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %328, i64 -2
  %334 = bitcast %class.SkNVRefCnt.92* %333 to %class.GrSurfaceProxy*
  %335 = bitcast %class.SkNVRefCnt.92* %333 to void (%class.GrSurfaceProxy*)***
  %336 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %335, align 8
  %337 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %336, i64 1
  %338 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %337, align 8
  call void %338(%class.GrSurfaceProxy* nonnull %334) #11
  br label %339

339:                                              ; preds = %299, %327, %332
  %340 = call %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage* nonnull %30) #11
  %341 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %307, align 8
  %342 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %341, i64 3
  %343 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %342, align 8
  %344 = call i32 %343(%class.SkSpecialImage* nonnull %30) #11
  %345 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %346 = load %class.SkColorSpace*, %class.SkColorSpace** %345, align 8
  %347 = call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor* %323, %class.SkColorSpace* %340, i32 %344, %class.SkColorSpace* %346, i32 2) #11
  %348 = icmp eq %class.GrFragmentProcessor* %347, null
  br i1 %348, label %392, label %349

349:                                              ; preds = %339
  %350 = getelementptr inbounds %"class.(anonymous namespace)::SkAlphaThresholdImageFilter", %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %1, i64 0, i32 2
  %351 = bitcast float* %350 to i32*
  %352 = load i32, i32* %351, align 8
  %353 = getelementptr inbounds %"class.(anonymous namespace)::SkAlphaThresholdImageFilter", %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %1, i64 0, i32 3
  %354 = load float, float* %353, align 4
  %355 = call i8* @_ZN11GrProcessornwEm(i64 72) #11
  %356 = bitcast i8* %355 to %class.GrFragmentProcessor*
  %357 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %347, i64 0, i32 3
  %358 = load i32, i32* %357, align 8
  %359 = fcmp oge float %354, 1.000000e+00
  %360 = select i1 %359, i32 2, i32 0
  %361 = and i32 %358, %360
  %362 = bitcast i8* %355 to i32 (...)***
  %363 = getelementptr inbounds i8, i8* %355, i64 8
  %364 = bitcast i8* %363 to i32*
  store i32 23, i32* %364, align 8
  %365 = getelementptr inbounds i8, i8* %355, i64 12
  %366 = bitcast i8* %365 to i32*
  store i32 0, i32* %366, align 4
  %367 = getelementptr inbounds i8, i8* %355, i64 24
  %368 = getelementptr inbounds i8, i8* %355, i64 16
  %369 = getelementptr inbounds i8, i8* %355, i64 32
  %370 = bitcast i8* %369 to i64*
  %371 = bitcast i8* %367 to i8**
  store i8* %368, i8** %371, align 8
  store i64 8589934592, i64* %370, align 8
  %372 = getelementptr inbounds i8, i8* %355, i64 40
  %373 = bitcast i8* %372 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %373, align 8
  %374 = getelementptr inbounds i8, i8* %355, i64 48
  %375 = bitcast i8* %374 to i32*
  store i32 %361, i32* %375, align 8
  %376 = getelementptr inbounds i8, i8* %355, i64 52
  %377 = bitcast i8* %376 to i32*
  store i32 0, i32* %377, align 4
  %378 = getelementptr inbounds i8, i8* %355, i64 56
  store i8 0, i8* %378, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV33GrAlphaThresholdFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %362, align 8
  %379 = getelementptr inbounds i8, i8* %355, i64 60
  %380 = bitcast i8* %379 to i32*
  store i32 %352, i32* %380, align 4
  %381 = getelementptr inbounds i8, i8* %355, i64 64
  %382 = bitcast i8* %381 to float*
  store float %354, float* %382, align 8
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %356, %class.GrFragmentProcessor* nonnull %347, i64 1) #11
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %356, %class.GrFragmentProcessor* %283, i64 1) #11
  %383 = icmp eq i8* %355, null
  br i1 %383, label %390, label %384

384:                                              ; preds = %349
  %385 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %386 = load i32, i32* %385, align 8
  %387 = load %class.SkColorSpace*, %class.SkColorSpace** %345, align 8
  %388 = load %class.SkSpecialImage*, %class.SkSpecialImage** %93, align 8
  %389 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %388, i64 0, i32 1
  call void @_ZN18SkImageFilter_Base10DrawWithFPEP18GrRecordingContextNSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEERK7SkIRect11SkColorTypePK12SkColorSpaceRK14SkSurfaceProps11GrProtected(%class.sk_sp.18* sret %0, %class.GrRecordingContext* %98, %class.GrFragmentProcessor* nonnull %356, %struct.SkIRect* nonnull dereferenceable(16) %12, i32 %386, %class.SkColorSpace* %387, %class.SkSurfaceProps* dereferenceable(8) %389, i1 zeroext %107) #11
  br label %400

390:                                              ; preds = %349
  %391 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %391, align 8
  br label %400

392:                                              ; preds = %339
  %393 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %393, align 8
  %394 = icmp eq %class.GrFragmentProcessor* %283, null
  br i1 %394, label %400, label %395

395:                                              ; preds = %392
  %396 = bitcast %class.GrFragmentProcessor* %283 to void (%class.GrFragmentProcessor*)***
  %397 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %396, align 8
  %398 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %397, i64 1
  %399 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %398, align 8
  call void %399(%class.GrFragmentProcessor* nonnull %283) #11
  br label %400

400:                                              ; preds = %390, %384, %395, %392
  %401 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %156, align 8
  %402 = icmp eq %class.GrSurfaceProxy* %401, null
  br i1 %402, label %415, label %403

403:                                              ; preds = %400
  %404 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %401, i64 0, i32 1
  %405 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %404, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %406 = atomicrmw add i32* %405, i32 -1 acq_rel
  %407 = icmp eq i32 %406, 1
  br i1 %407, label %408, label %415

408:                                              ; preds = %403
  %409 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %404, i64 -2
  %410 = bitcast %class.SkNVRefCnt.92* %409 to %class.GrSurfaceProxy*
  %411 = bitcast %class.SkNVRefCnt.92* %409 to void (%class.GrSurfaceProxy*)***
  %412 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %411, align 8
  %413 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %412, i64 1
  %414 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %413, align 8
  call void %414(%class.GrSurfaceProxy* nonnull %410) #11
  br label %415

415:                                              ; preds = %261, %400, %403, %408
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %147) #11
  %416 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %100, align 8
  %417 = icmp eq %class.GrSurfaceProxy* %416, null
  br i1 %417, label %430, label %418

418:                                              ; preds = %415
  %419 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %416, i64 0, i32 1
  %420 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %419, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %421 = atomicrmw add i32* %420, i32 -1 acq_rel
  %422 = icmp eq i32 %421, 1
  br i1 %422, label %423, label %430

423:                                              ; preds = %418
  %424 = getelementptr inbounds %class.SkNVRefCnt.92, %class.SkNVRefCnt.92* %419, i64 -2
  %425 = bitcast %class.SkNVRefCnt.92* %424 to %class.GrSurfaceProxy*
  %426 = bitcast %class.SkNVRefCnt.92* %424 to void (%class.GrSurfaceProxy*)***
  %427 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %426, align 8
  %428 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %427, i64 1
  %429 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %428, align 8
  call void %429(%class.GrSurfaceProxy* nonnull %425) #11
  br label %430

430:                                              ; preds = %415, %418, %423
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #11
  br label %669

431:                                              ; preds = %92
  %432 = bitcast %class.SkBitmap* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %432) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %432, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %20) #11
  %433 = call zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage* nonnull %30, %class.SkBitmap* nonnull %20) #11
  br i1 %433, label %436, label %434

434:                                              ; preds = %431
  %435 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %435, align 8
  br label %668

436:                                              ; preds = %431
  %437 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %20, i64 0, i32 1, i32 2, i32 0, i32 1
  %438 = load i32, i32* %437, align 8
  %439 = icmp eq i32 %438, 6
  br i1 %439, label %442, label %440

440:                                              ; preds = %436
  %441 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %441, align 8
  br label %668

442:                                              ; preds = %436
  %443 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %20, i64 0, i32 1, i32 0
  %444 = load i8*, i8** %443, align 8
  %445 = icmp eq i8* %444, null
  br i1 %445, label %454, label %446

446:                                              ; preds = %442
  %447 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %20, i64 0, i32 1, i32 2, i32 1, i32 0
  %448 = load i32, i32* %447, align 8
  %449 = icmp slt i32 %448, 1
  br i1 %449, label %454, label %450

450:                                              ; preds = %446
  %451 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %20, i64 0, i32 1, i32 2, i32 1, i32 1
  %452 = load i32, i32* %451, align 4
  %453 = icmp slt i32 %452, 1
  br i1 %453, label %454, label %456

454:                                              ; preds = %442, %450, %446
  %455 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %455, align 8
  br label %668

456:                                              ; preds = %450
  %457 = bitcast %class.SkMatrix* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %457) #11
  %458 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 1
  %459 = bitcast %class.SkMatrix* %21 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %459, align 16
  %460 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 0, i64 4
  %461 = bitcast float* %460 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %461, align 16
  %462 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %462, align 16
  store i32 16, i32* %458, align 4
  %463 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %464 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1, i32 1
  %465 = load i32, i32* %464, align 4
  %466 = trunc i32 %465 to i8
  %467 = icmp slt i8 %466, 0
  br i1 %467, label %468, label %471

468:                                              ; preds = %456
  %469 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %463) #11
  %470 = zext i8 %469 to i32
  store i32 %470, i32* %464, align 4
  br label %471

471:                                              ; preds = %468, %456
  %472 = phi i32 [ %470, %468 ], [ %465, %456 ]
  %473 = and i32 %472, 15
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %477

475:                                              ; preds = %471
  %476 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %21) #11
  br label %481

477:                                              ; preds = %471
  %478 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %463, %class.SkMatrix* nonnull %21) #11
  br i1 %478, label %481, label %479

479:                                              ; preds = %477
  %480 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %480, align 8
  br label %667

481:                                              ; preds = %477, %475
  %482 = bitcast %struct.SkImageInfo* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %482) #11
  %483 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %22, i64 0, i32 0, i32 0, i32 0
  %484 = load i32, i32* %86, align 4
  %485 = load i32, i32* %84, align 4
  %486 = sub i32 %484, %485
  %487 = load i32, i32* %87, align 4
  %488 = load i32, i32* %85, align 4
  %489 = sub i32 %487, %488
  %490 = zext i32 %489 to i64
  %491 = shl nuw i64 %490, 32
  %492 = zext i32 %486 to i64
  %493 = or i64 %491, %492
  %494 = bitcast %struct.SkImageInfo* %22 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %494, align 16, !alias.scope !25
  %495 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %22, i64 0, i32 1
  %496 = bitcast %struct.SkISize* %495 to i64*
  store i64 %493, i64* %496, align 16, !alias.scope !25
  %497 = bitcast %class.SkBitmap* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %497) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %497, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %23) #11
  %498 = sext i32 %486 to i64
  %499 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %22, i64 0, i32 0
  %500 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %499) #11
  %501 = sext i32 %500 to i64
  %502 = mul nsw i64 %501, %498
  %503 = icmp ult i64 %502, 2147483648
  %504 = select i1 %503, i64 %502, i64 0
  %505 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %23, %struct.SkImageInfo* nonnull dereferenceable(24) %22, i64 %504) #11
  br i1 %505, label %508, label %506

506:                                              ; preds = %481
  %507 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %507, align 8
  br label %657

508:                                              ; preds = %481
  %509 = getelementptr inbounds %"class.(anonymous namespace)::SkAlphaThresholdImageFilter", %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %1, i64 0, i32 2
  %510 = load float, float* %509, align 8
  %511 = fmul float %510, 2.550000e+02
  %512 = fptoui float %511 to i32
  %513 = getelementptr inbounds %"class.(anonymous namespace)::SkAlphaThresholdImageFilter", %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %1, i64 0, i32 3
  %514 = load float, float* %513, align 4
  %515 = fmul float %514, 2.550000e+02
  %516 = fptoui float %515 to i32
  %517 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %23, i64 0, i32 1, i32 0
  %518 = bitcast i8** %517 to i32**
  %519 = load i32*, i32** %518, align 8
  %520 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %23, i64 0, i32 1, i32 2, i32 1, i32 0
  %521 = load i32, i32* %520, align 8
  %522 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %23, i64 0, i32 1, i32 2, i32 1, i32 1
  %523 = load i32, i32* %522, align 4
  %524 = load i32, i32* %85, align 4
  %525 = icmp sgt i32 %523, 0
  br i1 %525, label %526, label %548

526:                                              ; preds = %508
  %527 = sub i32 %524, %38
  %528 = load i32, i32* %84, align 4
  %529 = sub nsw i32 %528, %36
  %530 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %20, i64 0, i32 1, i32 1
  %531 = shl i32 %529, 2
  %532 = sext i32 %531 to i64
  %533 = icmp sgt i32 %521, 0
  %534 = bitcast %struct.SkPoint* %24 to i8*
  %535 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %24, i64 0, i32 0
  %536 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %24, i64 0, i32 1
  %537 = getelementptr inbounds %"class.(anonymous namespace)::SkAlphaThresholdImageFilter", %"class.(anonymous namespace)::SkAlphaThresholdImageFilter"* %1, i64 0, i32 1
  %538 = uitofp i32 %516 to float
  %539 = shl i32 %516, 24
  %540 = uitofp i32 %512 to float
  %541 = shl i32 %512, 24
  %542 = sext i32 %521 to i64
  %543 = sext i32 %527 to i64
  %544 = zext i32 %523 to i64
  %545 = zext i32 %521 to i64
  br label %566

546:                                              ; preds = %579
  %547 = load i32, i32* %85, align 4
  br label %548

548:                                              ; preds = %546, %508
  %549 = phi i32 [ %547, %546 ], [ %524, %508 ]
  %550 = load i32, i32* %84, align 4
  %551 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %550, i32* %551, align 4
  %552 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %549, i32* %552, align 4
  %553 = bitcast { i64, i64 }* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %553) #11
  %554 = load i32, i32* %86, align 4
  %555 = sub i32 %554, %550
  %556 = load i32, i32* %87, align 4
  %557 = sub i32 %556, %549
  %558 = zext i32 %557 to i64
  %559 = shl nuw i64 %558, 32
  %560 = zext i32 %555 to i64
  %561 = or i64 %559, %560
  %562 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i64 0, i32 0
  store i64 0, i64* %562, align 8
  %563 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i64 0, i32 1
  store i64 %561, i64* %563, align 8
  %564 = load %class.SkSpecialImage*, %class.SkSpecialImage** %93, align 8
  %565 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %564, i64 0, i32 1
  call void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.18* sret %0, %struct.SkIRect* nonnull dereferenceable(16) %26, %class.SkBitmap* nonnull dereferenceable(56) %23, %class.SkSurfaceProps* dereferenceable(8) %565) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %553) #11
  br label %657

566:                                              ; preds = %579, %526
  %567 = phi i64 [ 0, %526 ], [ %580, %579 ]
  %568 = add nsw i64 %567, %543
  %569 = load i8*, i8** %443, align 8
  %570 = load i64, i64* %530, align 8
  %571 = mul i64 %570, %568
  %572 = getelementptr inbounds i8, i8* %569, i64 %532
  %573 = getelementptr inbounds i8, i8* %572, i64 %571
  %574 = bitcast i8* %573 to i32*
  br i1 %533, label %575, label %579

575:                                              ; preds = %566
  %576 = trunc i64 %567 to i32
  %577 = sitofp i32 %576 to float
  %578 = mul nsw i64 %567, %542
  br label %582

579:                                              ; preds = %651, %566
  %580 = add nuw nsw i64 %567, 1
  %581 = icmp eq i64 %580, %544
  br i1 %581, label %546, label %566

582:                                              ; preds = %651, %575
  %583 = phi i64 [ 0, %575 ], [ %655, %651 ]
  %584 = getelementptr inbounds i32, i32* %574, i64 %583
  %585 = load i32, i32* %584, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %534) #11
  store float 0xFFFFFFFFE0000000, float* %535, align 4
  store float 0xFFFFFFFFE0000000, float* %536, align 4
  %586 = trunc i64 %583 to i32
  %587 = sitofp i32 %586 to float
  %588 = load i32, i32* %84, align 4
  %589 = sitofp i32 %588 to float
  %590 = fadd float %587, %589
  %591 = load i32, i32* %85, align 4
  %592 = sitofp i32 %591 to float
  %593 = fadd float %577, %592
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* nonnull %21, float %590, float %593, %struct.SkPoint* nonnull %24) #11
  %594 = load float, float* %535, align 4
  %595 = fptosi float %594 to i32
  %596 = load float, float* %536, align 4
  %597 = fptosi float %596 to i32
  %598 = call zeroext i1 @_ZNK8SkRegion8containsEii(%class.SkRegion* %537, i32 %595, i32 %597) #11
  %599 = load i32, i32* %584, align 4
  %600 = lshr i32 %599, 24
  br i1 %598, label %601, label %627

601:                                              ; preds = %582
  %602 = icmp ult i32 %600, %512
  br i1 %602, label %603, label %651

603:                                              ; preds = %601
  %604 = icmp eq i32 %600, 0
  %605 = select i1 %604, i32 1, i32 %600
  %606 = uitofp i32 %605 to float
  %607 = fdiv float %540, %606
  %608 = lshr i32 %599, 16
  %609 = and i32 %608, 255
  %610 = uitofp i32 %609 to float
  %611 = fmul float %607, %610
  %612 = fptoui float %611 to i32
  %613 = lshr i32 %599, 8
  %614 = and i32 %613, 255
  %615 = uitofp i32 %614 to float
  %616 = fmul float %607, %615
  %617 = fptoui float %616 to i32
  %618 = and i32 %599, 255
  %619 = uitofp i32 %618 to float
  %620 = fmul float %607, %619
  %621 = fptoui float %620 to i32
  %622 = shl i32 %612, 16
  %623 = shl i32 %617, 8
  %624 = or i32 %541, %621
  %625 = or i32 %624, %622
  %626 = or i32 %625, %623
  br label %651

627:                                              ; preds = %582
  %628 = icmp ugt i32 %600, %516
  br i1 %628, label %629, label %651

629:                                              ; preds = %627
  %630 = uitofp i32 %600 to float
  %631 = fdiv float %538, %630
  %632 = lshr i32 %599, 16
  %633 = and i32 %632, 255
  %634 = uitofp i32 %633 to float
  %635 = fmul float %631, %634
  %636 = fptoui float %635 to i32
  %637 = lshr i32 %599, 8
  %638 = and i32 %637, 255
  %639 = uitofp i32 %638 to float
  %640 = fmul float %631, %639
  %641 = fptoui float %640 to i32
  %642 = and i32 %599, 255
  %643 = uitofp i32 %642 to float
  %644 = fmul float %631, %643
  %645 = fptoui float %644 to i32
  %646 = shl i32 %636, 16
  %647 = shl i32 %641, 8
  %648 = or i32 %539, %645
  %649 = or i32 %648, %646
  %650 = or i32 %649, %647
  br label %651

651:                                              ; preds = %627, %629, %601, %603
  %652 = phi i32 [ %626, %603 ], [ %585, %601 ], [ %650, %629 ], [ %585, %627 ]
  %653 = add nsw i64 %583, %578
  %654 = getelementptr inbounds i32, i32* %519, i64 %653
  store i32 %652, i32* %654, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %534) #11
  %655 = add nuw nsw i64 %583, 1
  %656 = icmp eq i64 %655, %545
  br i1 %656, label %579, label %582

657:                                              ; preds = %548, %506
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %497) #11
  %658 = load %class.SkColorSpace*, %class.SkColorSpace** %483, align 16
  %659 = icmp eq %class.SkColorSpace* %658, null
  br i1 %659, label %666, label %660

660:                                              ; preds = %657
  %661 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %658, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %662 = atomicrmw add i32* %661, i32 -1 acq_rel
  %663 = icmp eq i32 %662, 1
  br i1 %663, label %664, label %666

664:                                              ; preds = %660
  %665 = bitcast %class.SkColorSpace* %658 to i8*
  call void @_ZdlPv(i8* %665) #10
  br label %666

666:                                              ; preds = %657, %660, %664
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %482) #11
  br label %667

667:                                              ; preds = %666, %479
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %457) #11
  br label %668

668:                                              ; preds = %667, %454, %440, %434
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %432) #11
  br label %669

669:                                              ; preds = %668, %430, %90
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #11
  %670 = atomicrmw add i32* %39, i32 -1 acq_rel
  %671 = icmp eq i32 %670, 1
  br i1 %671, label %672, label %678

672:                                              ; preds = %669
  %673 = bitcast %class.SkSpecialImage* %30 to %class.SkRefCntBase*
  %674 = bitcast %class.SkSpecialImage* %30 to void (%class.SkRefCntBase*)***
  %675 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %674, align 8
  %676 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %675, i64 2
  %677 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %676, align 8
  call void %677(%class.SkRefCntBase* nonnull %673) #11
  br label %678

678:                                              ; preds = %49, %669, %672
  ret void
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #3

declare { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #3

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK18SkImageFilter_Base13applyCropRectERKN4skif7ContextERK7SkIRectPS4_(%class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136), %struct.SkIRect* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #3

declare void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* sret, %class.SkSpecialImage*, %class.GrRecordingContext*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i32, i32) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) local_unnamed_addr #3

declare %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage*) local_unnamed_addr #3

declare void @_ZN18SkImageFilter_Base10DrawWithFPEP18GrRecordingContextNSt3__110unique_ptrI19GrFragmentProcessorNS2_14default_deleteIS4_EEEERK7SkIRect11SkColorTypePK12SkColorSpaceRK14SkSurfaceProps11GrProtected(%class.sk_sp.18* sret, %class.GrRecordingContext*, %class.GrFragmentProcessor*, %struct.SkIRect* dereferenceable(16), i32, %class.SkColorSpace*, %class.SkSurfaceProps* dereferenceable(8), i1 zeroext) local_unnamed_addr #3

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #3

declare zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage*, %class.SkBitmap*) local_unnamed_addr #3

declare void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix*, float, float, %struct.SkPoint*) local_unnamed_addr #3

declare zeroext i1 @_ZNK8SkRegion8containsEii(%class.SkRegion*, i32, i32) local_unnamed_addr #3

declare void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.18* sret, %struct.SkIRect* dereferenceable(16), %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #7

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #3

declare zeroext i1 @_ZNK14SkSpecialImage15isTextureBackedEv(%class.SkSpecialImage*) local_unnamed_addr #3

declare %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage*) local_unnamed_addr #3

declare %class.GrSurfaceDrawContext* @_ZN20GrSurfaceDrawContext16MakeWithFallbackEP18GrRecordingContext11GrColorType5sk_spI12SkColorSpaceE12SkBackingFit7SkISizeRK14SkSurfacePropsi11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext*, i32, %class.sk_sp.14*, i32, i64, %class.SkSurfaceProps* dereferenceable(8), i32, i1 zeroext, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #3

declare void @_ZN8SkRegion8IteratorC1ERKS_(%"class.SkRegion::Iterator"*, %class.SkRegion* dereferenceable(24)) unnamed_addr #3

declare void @_ZN7GrPaint22setPorterDuffXPFactoryE11SkBlendMode(%class.GrPaint*, i32) local_unnamed_addr #3

declare void @_ZN20GrSurfaceDrawContext8drawRectEPK6GrClipO7GrPaint4GrAARK8SkMatrixRK6SkRectPK7GrStyle(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrPaint* dereferenceable(48), i1 zeroext, %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), %class.GrStyle*) local_unnamed_addr #3

declare void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #11
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #11
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #11
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZN20GrSurfaceFillContext13internalClearEPK7SkIRectNSt3__15arrayIfLm4EEEb(%class.GrSurfaceFillContext*, %struct.SkIRect*, <2 x float>, <2 x float>, i1 zeroext) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #3

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #3

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #3

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #3

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #3

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #3

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #3

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #3

declare void @_ZN8SkRegionC1Ev(%class.SkRegion*) unnamed_addr #3

declare void @_ZN12SkReadBuffer10readRegionEP8SkRegion(%class.SkReadBuffer*, %class.SkRegion*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!4 = distinct !{!4, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!7 = distinct !{!7, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!10 = distinct !{!10, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK12_GLOBAL__N_127SkAlphaThresholdImageFilter17createMaskTextureEP18GrRecordingContextRK8SkMatrixRK7SkIRectRK14SkSurfaceProps: argument 0"}
!14 = distinct !{!14, !"_ZNK12_GLOBAL__N_127SkAlphaThresholdImageFilter17createMaskTextureEP18GrRecordingContextRK8SkMatrixRK7SkIRectRK14SkSurfaceProps"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!17 = distinct !{!17, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!18 = !{!16, !13}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!21 = distinct !{!21, !"_ZN8SkMatrix9TranslateEff"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!24 = distinct !{!24, !"_ZN8SkMatrix9TranslateEff"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!27 = distinct !{!27, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!28 = distinct !{!28, !29, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!29 = distinct !{!29, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE"}
