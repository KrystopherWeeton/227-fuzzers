; ModuleID = '../../third_party/skia/src/codec/SkIcoCodec.cpp'
source_filename = "../../third_party/skia/src/codec/SkIcoCodec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkIcoCodec = type { %class.SkCodec.base, %"class.std::__1::unique_ptr.26", %class.SkCodec* }
%class.SkCodec.base = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.6", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8 }>
%struct.SkEncodedInfo = type { i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr.0" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.SkEncodedInfo::ICCProfile"* }
%"class.SkEncodedInfo::ICCProfile" = type { %struct.skcms_ICCProfile, %class.sk_sp }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.SkStream* }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.12, i32, i32 }
%class.sk_sp.12 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.13, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.13 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.3, [8 x i8] }
%struct.anon.3 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.SkTArray* }
%class.SkCodec = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.6", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8, [6 x i8] }>
%class.SkStream = type { i32 (...)** }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkCodec* }
%struct.Entry = type { i32, i32 }
%class.SkMemoryStream = type { %class.SkStreamMemory, %class.sk_sp, i64 }
%class.SkStreamMemory = type { %class.SkStreamAsset }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkPngChunkReader = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSampler = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.38", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.38" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.39", %class.sk_sp, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.39" = type { [4 x %class.SkPixmap] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"struct.SkCodec::FrameInfo" = type { i32, i32, i8, i32, i8, i32, i32, %struct.SkIRect }
%class.SkFrameHolder = type opaque

$_ZN10SkIcoCodecD2Ev = comdat any

$_ZN10SkIcoCodecD0Ev = comdat any

$_ZNK10SkIcoCodec18onGetEncodedFormatEv = comdat any

$_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ = comdat any

$_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps = comdat any

$_ZNK7SkCodec16onGetValidSubsetEP7SkIRect = comdat any

$_ZN7SkCodec8onRewindEv = comdat any

$_ZN10SkIcoCodec19conversionSupportedERK11SkImageInfobb = comdat any

$_ZNK10SkIcoCodec14usesColorXformEv = comdat any

$_ZN7SkCodec15onGetFrameCountEv = comdat any

$_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE = comdat any

$_ZN7SkCodec20onGetRepetitionCountEv = comdat any

$_ZNK7SkCodec14getFrameHolderEv = comdat any

$_ZNK13SkEncodedInfo13makeImageInfoEv = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEELb1EE12checkReallocEiNS6_11ReallocTypeE = comdat any

@_ZZN10SkIcoCodec5IsIcoEPKvmE6icoSig = internal constant [4 x i8] c"\00\00\01\00", align 1
@_ZZN10SkIcoCodec5IsIcoEPKvmE6curSig = internal constant [4 x i8] c"\00\00\02\00", align 1
@_ZTV10SkIcoCodec = hidden unnamed_addr constant { [26 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkIcoCodec*)* @_ZN10SkIcoCodecD2Ev to i8*), i8* bitcast (void (%class.SkIcoCodec*)* @_ZN10SkIcoCodecD0Ev to i8*), i8* bitcast (i64 (%class.SkIcoCodec*, float)* @_ZNK10SkIcoCodec21onGetScaledDimensionsEf to i8*), i8* bitcast (i1 (%class.SkIcoCodec*, %struct.SkISize*)* @_ZN10SkIcoCodec21onDimensionsSupportedERK7SkISize to i8*), i8* bitcast (i32 (%class.SkIcoCodec*)* @_ZNK10SkIcoCodec18onGetEncodedFormatEv to i8*), i8* bitcast (i32 (%class.SkIcoCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)* @_ZN10SkIcoCodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi to i8*), i8* bitcast (i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)* @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkIRect*)* @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkCodec*)* @_ZN7SkCodec8onRewindEv to i8*), i8* bitcast (i32 (%class.SkIcoCodec*)* @_ZNK10SkIcoCodec18onGetScanlineOrderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, i32)* @_ZNK7SkCodec16onOutputScanlineEi to i8*), i8* bitcast (i1 (%class.SkIcoCodec*, %struct.SkImageInfo*, i1, i1)* @_ZN10SkIcoCodec19conversionSupportedERK11SkImageInfobb to i8*), i8* bitcast (i1 (%class.SkIcoCodec*)* @_ZNK10SkIcoCodec14usesColorXformEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec15onGetFrameCountEv to i8*), i8* bitcast (i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)* @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec20onGetRepetitionCountEv to i8*), i8* bitcast (%class.SkFrameHolder* (%class.SkCodec*)* @_ZNK7SkCodec14getFrameHolderEv to i8*), i8* bitcast (i32 (%class.SkIcoCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)* @_ZN10SkIcoCodec21onStartScanlineDecodeERK11SkImageInfoRKN7SkCodec7OptionsE to i8*), i8* bitcast (i32 (%class.SkIcoCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)* @_ZN10SkIcoCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKN7SkCodec7OptionsE to i8*), i8* bitcast (i32 (%class.SkIcoCodec*, i32*)* @_ZN10SkIcoCodec19onIncrementalDecodeEPi to i8*), i8* bitcast (i1 (%class.SkIcoCodec*, i32)* @_ZN10SkIcoCodec15onSkipScanlinesEi to i8*), i8* bitcast (i32 (%class.SkIcoCodec*, i8*, i32, i64)* @_ZN10SkIcoCodec14onGetScanlinesEPvim to i8*), i8* bitcast (%class.SkSampler* (%class.SkIcoCodec*, i1)* @_ZN10SkIcoCodec10getSamplerEb to i8*)] }, align 8

@_ZN10SkIcoCodecC1EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEP8SkTArrayINS3_I7SkCodecNS5_IS9_EEEELb1EE = hidden unnamed_addr alias void (%class.SkIcoCodec*, %struct.SkEncodedInfo*, %class.SkStream*, %class.SkTArray*), void (%class.SkIcoCodec*, %struct.SkEncodedInfo*, %class.SkStream*, %class.SkTArray*)* @_ZN10SkIcoCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEP8SkTArrayINS3_I7SkCodecNS5_IS9_EEEELb1EE

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10SkIcoCodec5IsIcoEPKvm(i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp ugt i64 %1, 3
  br i1 %3, label %4, label %10

4:                                                ; preds = %2
  %5 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN10SkIcoCodec5IsIcoEPKvmE6icoSig, i64 0, i64 0), i64 4)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN10SkIcoCodec5IsIcoEPKvmE6curSig, i64 0, i64 0), i64 4)
  %9 = icmp eq i32 %8, 0
  br label %10

10:                                               ; preds = %4, %7, %2
  %11 = phi i1 [ false, %2 ], [ true, %4 ], [ %9, %7 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCodec* @_ZN10SkIcoCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE(%class.SkStream*, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.SkImageInfo, align 8
  %9 = alloca %struct.SkEncodedInfo, align 16
  %10 = bitcast %class.SkStream* %0 to i8* (%class.SkStream*)***
  %11 = load i8* (%class.SkStream*)**, i8* (%class.SkStream*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %11, i64 12
  %13 = load i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %12, align 8
  %14 = tail call i8* %13(%class.SkStream* %0) #12
  %15 = icmp eq i8* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %2
  %17 = ptrtoint %class.SkStream* %0 to i64
  %18 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = load i8* (%class.SkStream*)**, i8* (%class.SkStream*)*** %10, align 8
  %20 = getelementptr inbounds i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %19, i64 12
  %21 = load i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %20, align 8
  %22 = tail call i8* %21(%class.SkStream* %0) #12
  %23 = bitcast %class.SkStream* %0 to i64 (%class.SkStream*)***
  %24 = load i64 (%class.SkStream*)**, i64 (%class.SkStream*)*** %23, align 8
  %25 = getelementptr inbounds i64 (%class.SkStream*)*, i64 (%class.SkStream*)** %24, i64 11
  %26 = load i64 (%class.SkStream*)*, i64 (%class.SkStream*)** %25, align 8
  %27 = tail call i64 %26(%class.SkStream* %0) #12
  call void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp* nonnull sret %3, i8* %22, i64 %27, void (i8*, i8*)* nonnull @_ZN6SkData16DummyReleaseProcEPKvPv, i8* null) #12
  %28 = bitcast %class.sk_sp* %3 to i64*
  %29 = load i64, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %40

30:                                               ; preds = %2
  %31 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_Z18SkCopyStreamToDataP8SkStream(%class.sk_sp* nonnull sret %4, %class.SkStream* %0) #12
  %32 = bitcast %class.sk_sp* %4 to i64*
  %33 = load i64, i64* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  %34 = icmp eq %class.SkStream* %0, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = bitcast %class.SkStream* %0 to void (%class.SkStream*)***
  %37 = load void (%class.SkStream*)**, void (%class.SkStream*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkStream*)*, void (%class.SkStream*)** %37, i64 1
  %39 = load void (%class.SkStream*)*, void (%class.SkStream*)** %38, align 8
  call void %39(%class.SkStream* nonnull %0) #12
  br label %40

40:                                               ; preds = %35, %30, %16
  %41 = phi i64 [ %29, %16 ], [ %33, %30 ], [ %33, %35 ]
  %42 = phi i64 [ %17, %16 ], [ 0, %30 ], [ 0, %35 ]
  %43 = inttoptr i64 %41 to %class.SkData*
  %44 = getelementptr inbounds %class.SkData, %class.SkData* %43, i64 0, i32 4
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %45, 6
  br i1 %46, label %47, label %48

47:                                               ; preds = %40
  store i32 1, i32* %1, align 4
  br label %304

48:                                               ; preds = %40
  %49 = getelementptr inbounds %class.SkData, %class.SkData* %43, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 4
  %52 = bitcast i8* %51 to i16*
  %53 = load i16, i16* %52, align 1
  %54 = zext i16 %53 to i32
  %55 = icmp eq i16 %53, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %48
  store i32 6, i32* %1, align 4
  br label %304

57:                                               ; preds = %48
  %58 = zext i16 %53 to i64
  %59 = shl nuw nsw i64 %58, 3
  %60 = call i8* @_Z15sk_malloc_flagsmj(i64 %59, i32 0) #12
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %63

62:                                               ; preds = %57
  store i32 8, i32* %1, align 4
  br label %304

63:                                               ; preds = %57
  %64 = bitcast i8* %60 to %struct.Entry*
  %65 = zext i16 %53 to i64
  br label %66

66:                                               ; preds = %77, %63
  %67 = phi i64 [ 0, %63 ], [ %73, %77 ]
  %68 = load i8*, i8** %49, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 6
  %70 = shl i64 %67, 4
  %71 = getelementptr inbounds i8, i8* %69, i64 %70
  %72 = load i64, i64* %44, align 8
  %73 = add nuw nsw i64 %67, 1
  %74 = shl i64 %73, 4
  %75 = or i64 %74, 6
  %76 = icmp ult i64 %72, %75
  br i1 %76, label %87, label %77

77:                                               ; preds = %66
  %78 = getelementptr inbounds i8, i8* %71, i64 8
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 1
  %81 = getelementptr inbounds i8, i8* %71, i64 12
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 1
  %84 = getelementptr inbounds %struct.Entry, %struct.Entry* %64, i64 %67, i32 0
  store i32 %83, i32* %84, align 4
  %85 = getelementptr inbounds %struct.Entry, %struct.Entry* %64, i64 %67, i32 1
  store i32 %80, i32* %85, align 4
  %86 = icmp eq i64 %73, %65
  br i1 %86, label %88, label %66

87:                                               ; preds = %66
  store i32 1, i32* %1, align 4
  br label %301

88:                                               ; preds = %77
  store i32 6, i32* %1, align 4
  %89 = getelementptr inbounds %struct.Entry, %struct.Entry* %64, i64 %58
  %90 = ptrtoint %struct.Entry* %89 to i64
  %91 = ptrtoint i8* %60 to i64
  %92 = sub i64 %90, %91
  %93 = lshr exact i64 %92, 3
  %94 = trunc i64 %93 to i32
  %95 = icmp slt i32 %94, 2
  br i1 %95, label %101, label %96

96:                                               ; preds = %88
  %97 = add nsw i32 %94, -2
  %98 = call i32 @llvm.ctlz.i32(i32 %97, i1 false) #12, !range !2
  %99 = shl nuw nsw i32 %98, 1
  %100 = sub nsw i32 64, %99
  call fastcc void @_Z12SkTIntroSortIZN10SkIcoCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS1_14default_deleteIS3_EEEEPN7SkCodec6ResultEE5EntryZNS0_14MakeFromStreamES6_S9_E13EntryLessThanEviPT_iRKT0_(i32 %100, %struct.Entry* nonnull %64, i32 %94) #12
  br label %101

101:                                              ; preds = %96, %88
  %102 = shl nuw nsw i32 %54, 4
  %103 = or i32 %102, 6
  %104 = call i8* @_Znwm(i64 16) #13
  %105 = bitcast i8* %104 to %class.SkTArray*
  %106 = getelementptr inbounds i8, i8* %104, i64 8
  %107 = bitcast i8* %106 to i64*
  %108 = bitcast i8* %104 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %108, align 8
  store i64 1, i64* %107, align 8
  call void @_ZN8SkTArrayINSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEELb1EE12checkReallocEiNS6_11ReallocTypeE(%class.SkTArray* nonnull %105, i32 %54, i32 0) #12
  %109 = load i64, i64* %107, align 8
  %110 = shl i64 %109, 32
  %111 = and i64 %110, 4294967296
  %112 = and i64 %109, -4294967297
  %113 = or i64 %111, %112
  store i64 %113, i64* %107, align 8
  %114 = ptrtoint i8* %104 to i64
  %115 = bitcast %class.sk_sp* %5 to i8*
  %116 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %117 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %118 = bitcast i32* %7 to i8*
  %119 = zext i16 %53 to i64
  br label %120

120:                                              ; preds = %189, %101
  %121 = phi i64 [ 0, %101 ], [ %191, %189 ]
  %122 = phi i32 [ %103, %101 ], [ %190, %189 ]
  %123 = getelementptr inbounds %struct.Entry, %struct.Entry* %64, i64 %121, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %struct.Entry, %struct.Entry* %64, i64 %121, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = icmp ult i32 %124, %122
  br i1 %127, label %189, label %128

128:                                              ; preds = %120
  %129 = zext i32 %124 to i64
  %130 = load i64, i64* %44, align 8
  %131 = icmp ugt i64 %130, %129
  br i1 %131, label %132, label %193

132:                                              ; preds = %128
  %133 = add i32 %126, %124
  %134 = zext i32 %133 to i64
  %135 = icmp ult i64 %130, %134
  br i1 %135, label %136, label %137

136:                                              ; preds = %132
  store i32 1, i32* %1, align 4
  br label %193

137:                                              ; preds = %132
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #12
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %116, align 8
  %138 = zext i32 %126 to i64
  call void @_ZN6SkData10MakeSubsetEPKS_mm(%class.sk_sp* nonnull sret %5, %class.SkData* %43, i64 %129, i64 %138) #12
  %139 = load %class.SkData*, %class.SkData** %116, align 8
  %140 = icmp eq %class.SkData* %139, null
  br i1 %140, label %144, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %class.SkData, %class.SkData* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = atomicrmw add i32* %142, i32 1 monotonic
  br label %144

144:                                              ; preds = %137, %141
  store %class.SkData* %139, %class.SkData** %117, align 8
  %145 = call %class.SkMemoryStream* @_ZN14SkMemoryStream4MakeE5sk_spI6SkDataE(%class.sk_sp* nonnull %6) #12
  %146 = load %class.SkData*, %class.SkData** %117, align 8
  %147 = icmp eq %class.SkData* %146, null
  br i1 %147, label %154, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %class.SkData, %class.SkData* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 -1 acq_rel
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %154

152:                                              ; preds = %148
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %146) #12
  %153 = bitcast %class.SkData* %146 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %153) #12
  br label %154

154:                                              ; preds = %144, %148, %152
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #12
  store i32 -1431655766, i32* %7, align 4
  %155 = load %class.SkData*, %class.SkData** %116, align 8
  %156 = getelementptr inbounds %class.SkData, %class.SkData* %155, i64 0, i32 3
  %157 = load i8*, i8** %156, align 8
  %158 = getelementptr inbounds %class.SkData, %class.SkData* %155, i64 0, i32 4
  %159 = load i64, i64* %158, align 8
  %160 = call zeroext i1 @_ZN10SkPngCodec5IsPngEPKvm(i8* %157, i64 %159) #12
  %161 = getelementptr inbounds %class.SkMemoryStream, %class.SkMemoryStream* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %160, label %162, label %164

162:                                              ; preds = %154
  %163 = call %class.SkCodec* @_ZN10SkPngCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultEP16SkPngChunkReader(%class.SkStream* %161, i32* nonnull %7, %class.SkPngChunkReader* null) #12
  br label %166

164:                                              ; preds = %154
  %165 = call %class.SkCodec* @_ZN10SkBmpCodec11MakeFromIcoENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE(%class.SkStream* %161, i32* nonnull %7) #12
  br label %166

166:                                              ; preds = %164, %162
  %167 = phi %class.SkCodec* [ %163, %162 ], [ %165, %164 ]
  %168 = icmp eq %class.SkCodec* %167, null
  br i1 %168, label %179, label %169

169:                                              ; preds = %166
  call void @_ZN8SkTArrayINSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEELb1EE12checkReallocEiNS6_11ReallocTypeE(%class.SkTArray* nonnull %105, i32 1, i32 1) #12
  %170 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %108, align 8
  %171 = load i64, i64* %107, align 8
  %172 = lshr i64 %171, 1
  %173 = and i64 %172, 2147483647
  %174 = add i64 %171, 2
  %175 = and i64 %174, 4294967294
  %176 = and i64 %171, -4294967295
  %177 = or i64 %175, %176
  store i64 %177, i64* %107, align 8
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %170, i64 %173, i32 0, i32 0, i32 0
  store %class.SkCodec* %167, %class.SkCodec** %178, align 8
  br label %179

179:                                              ; preds = %166, %169
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #12
  %180 = load %class.SkData*, %class.SkData** %116, align 8
  %181 = icmp eq %class.SkData* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %class.SkData, %class.SkData* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = atomicrmw add i32* %183, i32 -1 acq_rel
  %185 = icmp eq i32 %184, 1
  br i1 %185, label %186, label %188

186:                                              ; preds = %182
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %180) #12
  %187 = bitcast %class.SkData* %180 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %187) #12
  br label %188

188:                                              ; preds = %179, %182, %186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #12
  br label %189

189:                                              ; preds = %188, %120
  %190 = phi i32 [ %133, %188 ], [ %122, %120 ]
  %191 = add nuw nsw i64 %121, 1
  %192 = icmp eq i64 %191, %119
  br i1 %192, label %193, label %120

193:                                              ; preds = %128, %189, %136
  %194 = load i64, i64* %107, align 8
  %195 = and i64 %194, 4294967294
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %294, label %197

197:                                              ; preds = %193
  %198 = bitcast %struct.SkImageInfo* %8 to i8*
  %199 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %200 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 1, i32 0
  %201 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0
  %202 = bitcast %struct.SkImageInfo* %8 to i8*
  br label %260

203:                                              ; preds = %288
  %204 = sext i32 %279 to i64
  %205 = bitcast %struct.SkEncodedInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %205) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %205, i8 -86, i64 32, i1 false)
  %206 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %108, align 8
  %207 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %206, i64 %204, i32 0, i32 0, i32 0
  %208 = load %class.SkCodec*, %class.SkCodec** %207, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %205, i8 -86, i64 24, i1 false) #12, !alias.scope !3
  %209 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %208, i64 0, i32 1, i32 0
  %210 = bitcast i32* %209 to <4 x i32>*
  %211 = load <4 x i32>, <4 x i32>* %210, align 8, !noalias !3
  %212 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %208, i64 0, i32 1, i32 4
  %213 = load i8, i8* %212, align 8, !noalias !3
  %214 = bitcast %struct.SkEncodedInfo* %9 to <4 x i32>*
  store <4 x i32> %211, <4 x i32>* %214, align 16, !alias.scope !6
  %215 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 4
  store i8 %213, i8* %215, align 16, !alias.scope !6
  %216 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 5
  %217 = bitcast %"class.std::__1::unique_ptr.0"* %216 to i64*
  store i64 0, i64* %217, align 8, !alias.scope !6
  %218 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %208, i64 0, i32 1, i32 5, i32 0, i32 0, i32 0
  %219 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %218, align 8, !noalias !3
  %220 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %219, null
  br i1 %220, label %234, label %221

221:                                              ; preds = %203
  %222 = call i8* @_Znwm(i64 1016) #13, !noalias !3
  %223 = bitcast %"class.SkEncodedInfo::ICCProfile"* %219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %222, i8* nonnull align 8 %223, i64 1008, i1 false) #12, !noalias !3
  %224 = getelementptr inbounds i8, i8* %222, i64 1008
  %225 = bitcast i8* %224 to %class.SkData**
  %226 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %219, i64 0, i32 1, i32 0
  %227 = load %class.SkData*, %class.SkData** %226, align 8, !noalias !3
  %228 = icmp eq %class.SkData* %227, null
  br i1 %228, label %232, label %229

229:                                              ; preds = %221
  %230 = getelementptr inbounds %class.SkData, %class.SkData* %227, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = atomicrmw add i32* %230, i32 1 monotonic, !noalias !3
  br label %232

232:                                              ; preds = %229, %221
  store %class.SkData* %227, %class.SkData** %225, align 8, !noalias !3
  %233 = ptrtoint i8* %222 to i64
  store i64 %233, i64* %217, align 8, !alias.scope !3
  br label %234

234:                                              ; preds = %203, %232
  store i32 0, i32* %1, align 4
  %235 = call i8* @_Znwm(i64 1160) #13
  %236 = inttoptr i64 %42 to %class.SkStream*
  %237 = bitcast i8* %235 to %class.SkCodec*
  call void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec* nonnull %237, %struct.SkEncodedInfo* nonnull dereferenceable(32) %9, i32 0, %class.SkStream* %236, i32 1) #12
  %238 = bitcast i8* %235 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV10SkIcoCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %238, align 8
  %239 = getelementptr inbounds i8, i8* %235, i64 1144
  %240 = bitcast i8* %239 to i64*
  store i64 %114, i64* %240, align 8
  %241 = getelementptr inbounds i8, i8* %235, i64 1152
  %242 = bitcast i8* %241 to %class.SkCodec**
  store %class.SkCodec* null, %class.SkCodec** %242, align 8
  %243 = ptrtoint i8* %235 to i64
  %244 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %245 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %244, align 8
  store %"class.SkEncodedInfo::ICCProfile"* null, %"class.SkEncodedInfo::ICCProfile"** %244, align 8
  %246 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %245, null
  br i1 %246, label %259, label %247

247:                                              ; preds = %234
  %248 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %245, i64 0, i32 1, i32 0
  %249 = load %class.SkData*, %class.SkData** %248, align 8
  %250 = icmp eq %class.SkData* %249, null
  br i1 %250, label %257, label %251

251:                                              ; preds = %247
  %252 = getelementptr inbounds %class.SkData, %class.SkData* %249, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = atomicrmw add i32* %252, i32 -1 acq_rel
  %254 = icmp eq i32 %253, 1
  br i1 %254, label %255, label %257

255:                                              ; preds = %251
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %249) #12
  %256 = bitcast %class.SkData* %249 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %256) #12
  br label %257

257:                                              ; preds = %255, %251, %247
  %258 = bitcast %"class.SkEncodedInfo::ICCProfile"* %245 to i8*
  call void @_ZdlPv(i8* %258) #13
  br label %259

259:                                              ; preds = %257, %234
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %205) #12
  br label %301

260:                                              ; preds = %197, %288
  %261 = phi i64 [ 0, %197 ], [ %289, %288 ]
  %262 = phi i32 [ 0, %197 ], [ %279, %288 ]
  %263 = phi i64 [ 0, %197 ], [ %277, %288 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %198) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 -86, i64 24, i1 false)
  %264 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %108, align 8
  %265 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %264, i64 %261, i32 0, i32 0, i32 0
  %266 = load %class.SkCodec*, %class.SkCodec** %265, align 8
  %267 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %266, i64 0, i32 1
  call void @_ZNK13SkEncodedInfo13makeImageInfoEv(%struct.SkImageInfo* nonnull sret %8, %struct.SkEncodedInfo* %267) #12
  %268 = load i32, i32* %200, align 8
  %269 = sext i32 %268 to i64
  %270 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %201) #12
  %271 = sext i32 %270 to i64
  %272 = mul nsw i64 %271, %269
  %273 = icmp ult i64 %272, 2147483648
  %274 = select i1 %273, i64 %272, i64 0
  %275 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nonnull %8, i64 %274) #12
  %276 = icmp ugt i64 %275, %263
  %277 = select i1 %276, i64 %275, i64 %263
  %278 = trunc i64 %261 to i32
  %279 = select i1 %276, i32 %278, i32 %262
  %280 = load %class.SkColorSpace*, %class.SkColorSpace** %199, align 8
  %281 = icmp eq %class.SkColorSpace* %280, null
  br i1 %281, label %288, label %282

282:                                              ; preds = %260
  %283 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %280, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = atomicrmw add i32* %283, i32 -1 acq_rel
  %285 = icmp eq i32 %284, 1
  br i1 %285, label %286, label %288

286:                                              ; preds = %282
  %287 = bitcast %class.SkColorSpace* %280 to i8*
  call void @_ZdlPv(i8* %287) #13
  br label %288

288:                                              ; preds = %260, %282, %286
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %198) #12
  %289 = add nuw nsw i64 %261, 1
  %290 = load i64, i64* %107, align 8
  %291 = lshr i64 %290, 1
  %292 = and i64 %291, 2147483647
  %293 = icmp ult i64 %289, %292
  br i1 %293, label %260, label %203

294:                                              ; preds = %193
  %295 = and i64 %194, 1
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %300, label %297

297:                                              ; preds = %294
  %298 = bitcast i8* %104 to i8**
  %299 = load i8*, i8** %298, align 8
  call void @_Z7sk_freePv(i8* %299) #12
  br label %300

300:                                              ; preds = %297, %294
  call void @_ZdlPv(i8* nonnull %104) #13
  br label %301

301:                                              ; preds = %87, %259, %300
  %302 = phi i64 [ %42, %87 ], [ 0, %259 ], [ %42, %300 ]
  %303 = phi i64 [ 0, %87 ], [ %243, %259 ], [ 0, %300 ]
  call void @_Z7sk_freePv(i8* nonnull %60) #12
  br label %304

304:                                              ; preds = %301, %62, %56, %47
  %305 = phi i64 [ %42, %47 ], [ %42, %56 ], [ %42, %62 ], [ %302, %301 ]
  %306 = phi i64 [ 0, %47 ], [ 0, %56 ], [ 0, %62 ], [ %303, %301 ]
  %307 = icmp eq i64 %41, 0
  br i1 %307, label %314, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %class.SkData, %class.SkData* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = atomicrmw add i32* %309, i32 -1 acq_rel
  %311 = icmp eq i32 %310, 1
  br i1 %311, label %312, label %314

312:                                              ; preds = %308
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %43) #12
  %313 = inttoptr i64 %41 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %313) #12
  br label %314

314:                                              ; preds = %304, %308, %312
  %315 = icmp eq i64 %305, 0
  br i1 %315, label %322, label %316

316:                                              ; preds = %314
  %317 = inttoptr i64 %305 to %class.SkStream*
  %318 = inttoptr i64 %305 to void (%class.SkStream*)***
  %319 = load void (%class.SkStream*)**, void (%class.SkStream*)*** %318, align 8
  %320 = getelementptr inbounds void (%class.SkStream*)*, void (%class.SkStream*)** %319, i64 1
  %321 = load void (%class.SkStream*)*, void (%class.SkStream*)** %320, align 8
  call void %321(%class.SkStream* nonnull %317) #12
  br label %322

322:                                              ; preds = %314, %316
  %323 = inttoptr i64 %306 to %class.SkCodec*
  ret %class.SkCodec* %323
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_Z18SkCopyStreamToDataP8SkStream(%class.sk_sp* sret, %class.SkStream*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN6SkData10MakeSubsetEPKS_mm(%class.sk_sp* sret, %class.SkData*, i64, i64) local_unnamed_addr #3

declare %class.SkMemoryStream* @_ZN14SkMemoryStream4MakeE5sk_spI6SkDataE(%class.sk_sp*) local_unnamed_addr #3

declare zeroext i1 @_ZN10SkPngCodec5IsPngEPKvm(i8*, i64) local_unnamed_addr #3

declare %class.SkCodec* @_ZN10SkPngCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultEP16SkPngChunkReader(%class.SkStream*, i32*, %class.SkPngChunkReader*) local_unnamed_addr #3

declare %class.SkCodec* @_ZN10SkBmpCodec11MakeFromIcoENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE(%class.SkStream*, i32*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkIcoCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEP8SkTArrayINS3_I7SkCodecNS5_IS9_EEEELb1EE(%class.SkIcoCodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*, %class.SkTArray*) unnamed_addr #1 align 2 {
  %5 = bitcast %class.SkIcoCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec* %5, %struct.SkEncodedInfo* dereferenceable(32) %1, i32 0, %class.SkStream* %2, i32 1) #12
  %6 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV10SkIcoCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 1
  %8 = ptrtoint %class.SkTArray* %3 to i64
  %9 = bitcast %"class.std::__1::unique_ptr.26"* %7 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 2
  store %class.SkCodec* null, %class.SkCodec** %10, align 8
  ret void
}

declare void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec*, %struct.SkEncodedInfo* dereferenceable(32), i32, %class.SkStream*, i32) unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK10SkIcoCodec21onGetScaledDimensionsEf(%class.SkIcoCodec* nocapture readonly, float) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = sitofp i32 %4 to float
  %8 = fmul float %7, %1
  %9 = sitofp i32 %6 to float
  %10 = fmul float %8, %9
  %11 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %class.SkTArray*, %class.SkTArray** %11, align 8
  %13 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %12, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 4294967294
  %16 = icmp eq i64 %15, 0
  %17 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %12, i64 0, i32 0
  %18 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  br i1 %16, label %28, label %19

19:                                               ; preds = %2
  %20 = mul nsw i32 %6, %4
  %21 = sitofp i32 %20 to float
  %22 = fsub float %21, %10
  %23 = fadd float %22, 1.000000e+00
  %24 = lshr i64 %14, 1
  %25 = and i64 %24, 2147483647
  br label %40

26:                                               ; preds = %40
  %27 = sext i32 %58 to i64
  br label %28

28:                                               ; preds = %26, %2
  %29 = phi i64 [ -1, %2 ], [ %27, %26 ]
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 %29, i32 0, i32 0, i32 0
  %31 = load %class.SkCodec*, %class.SkCodec** %30, align 8
  %32 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %31, i64 0, i32 1, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %31, i64 0, i32 1, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = shl nuw i64 %36, 32
  %38 = zext i32 %33 to i64
  %39 = or i64 %37, %38
  ret i64 %39

40:                                               ; preds = %19, %40
  %41 = phi i64 [ 0, %19 ], [ %60, %40 ]
  %42 = phi float [ %23, %19 ], [ %59, %40 ]
  %43 = phi i32 [ -1, %19 ], [ %58, %40 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 %41, i32 0, i32 0, i32 0
  %45 = load %class.SkCodec*, %class.SkCodec** %44, align 8
  %46 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %45, i64 0, i32 1, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %45, i64 0, i32 1, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = mul nsw i32 %49, %47
  %51 = sitofp i32 %50 to float
  %52 = fsub float %51, %10
  %53 = fcmp olt float %52, 0.000000e+00
  %54 = fsub float -0.000000e+00, %52
  %55 = select i1 %53, float %54, float %52
  %56 = fcmp olt float %55, %42
  %57 = trunc i64 %41 to i32
  %58 = select i1 %56, i32 %57, i32 %43
  %59 = select i1 %56, float %55, float %42
  %60 = add nuw nsw i64 %41, 1
  %61 = icmp ult i64 %60, %25
  br i1 %61, label %40, label %26
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN10SkIcoCodec11chooseCodecERK7SkISizei(%class.SkIcoCodec* nocapture readonly, %struct.SkISize* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %class.SkTArray*, %class.SkTArray** %4, align 8
  %6 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = trunc i64 %8 to i32
  %10 = and i32 %9, 2147483647
  %11 = icmp sgt i32 %10, %2
  br i1 %11, label %12, label %37

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %2 to i64
  %18 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %5, i64 0, i32 0
  %19 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %18, align 8
  %20 = zext i32 %10 to i64
  br label %21

21:                                               ; preds = %12, %32
  %22 = phi i64 [ %17, %12 ], [ %33, %32 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 %22, i32 0, i32 0, i32 0
  %24 = load %class.SkCodec*, %class.SkCodec** %23, align 8
  %25 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %24, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %14
  br i1 %27, label %28, label %32

28:                                               ; preds = %21
  %29 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %24, i64 0, i32 1, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, %16
  br i1 %31, label %35, label %32

32:                                               ; preds = %21, %28
  %33 = add nsw i64 %22, 1
  %34 = icmp slt i64 %33, %20
  br i1 %34, label %21, label %37

35:                                               ; preds = %28
  %36 = trunc i64 %22 to i32
  br label %37

37:                                               ; preds = %32, %35, %3
  %38 = phi i32 [ -1, %3 ], [ %36, %35 ], [ -1, %32 ]
  ret i32 %38
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10SkIcoCodec21onDimensionsSupportedERK7SkISize(%class.SkIcoCodec* nocapture readonly, %struct.SkISize* nocapture readonly dereferenceable(8)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkTArray*, %class.SkTArray** %3, align 8
  %5 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %4, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 1
  %8 = trunc i64 %7 to i32
  %9 = and i32 %8, 2147483647
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %36, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %4, i64 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %18 = zext i32 %9 to i64
  br label %19

19:                                               ; preds = %30, %11
  %20 = phi i64 [ 0, %11 ], [ %31, %30 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 %20, i32 0, i32 0, i32 0
  %22 = load %class.SkCodec*, %class.SkCodec** %21, align 8
  %23 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %22, i64 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, %13
  br i1 %25, label %26, label %30

26:                                               ; preds = %19
  %27 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %22, i64 0, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %15
  br i1 %29, label %33, label %30

30:                                               ; preds = %26, %19
  %31 = add nuw nsw i64 %20, 1
  %32 = icmp eq i64 %31, %18
  br i1 %32, label %36, label %19

33:                                               ; preds = %26
  %34 = trunc i64 %20 to i32
  %35 = icmp sgt i32 %34, -1
  br label %36

36:                                               ; preds = %30, %2, %33
  %37 = phi i1 [ false, %2 ], [ %35, %33 ], [ false, %30 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkIcoCodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi(%class.SkIcoCodec* nocapture readonly, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* dereferenceable(24), i32* nocapture) unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 1
  %8 = load %struct.SkIRect*, %struct.SkIRect** %7, align 8
  %9 = icmp eq %struct.SkIRect* %8, null
  br i1 %9, label %10, label %70

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %12 = bitcast %struct.SkISize* %11 to i64*
  %13 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %class.SkTArray*, %class.SkTArray** %13, align 8
  %15 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %14, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = lshr i64 %16, 1
  %18 = trunc i64 %17 to i32
  %19 = and i32 %18, 2147483647
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %70, label %29

21:                                               ; preds = %59
  %22 = load %class.SkTArray*, %class.SkTArray** %13, align 8
  %23 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %22, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = lshr i64 %24, 1
  %26 = trunc i64 %25 to i32
  %27 = and i32 %26, 2147483647
  %28 = icmp sgt i32 %27, %66
  br i1 %28, label %29, label %70

29:                                               ; preds = %10, %21
  %30 = phi i32 [ %27, %21 ], [ %19, %10 ]
  %31 = phi %class.SkTArray* [ %22, %21 ], [ %14, %10 ]
  %32 = phi i32 [ %64, %21 ], [ 4, %10 ]
  %33 = phi i32 [ %66, %21 ], [ 0, %10 ]
  %34 = load i64, i64* %12, align 8
  %35 = lshr i64 %34, 32
  %36 = trunc i64 %34 to i32
  %37 = trunc i64 %35 to i32
  %38 = sext i32 %33 to i64
  %39 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %31, i64 0, i32 0
  %40 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %39, align 8
  %41 = zext i32 %30 to i64
  br label %42

42:                                               ; preds = %53, %29
  %43 = phi i64 [ %38, %29 ], [ %54, %53 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 %43, i32 0, i32 0, i32 0
  %45 = load %class.SkCodec*, %class.SkCodec** %44, align 8
  %46 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %45, i64 0, i32 1, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, %36
  br i1 %48, label %49, label %53

49:                                               ; preds = %42
  %50 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %45, i64 0, i32 1, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %37
  br i1 %52, label %56, label %53

53:                                               ; preds = %49, %42
  %54 = add nsw i64 %43, 1
  %55 = icmp slt i64 %54, %41
  br i1 %55, label %42, label %70

56:                                               ; preds = %49
  %57 = trunc i64 %43 to i32
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %56
  %60 = shl i64 %43, 32
  %61 = ashr exact i64 %60, 32
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 %61, i32 0, i32 0, i32 0
  %63 = load %class.SkCodec*, %class.SkCodec** %62, align 8
  %64 = tail call i32 @_ZN7SkCodec9getPixelsERK11SkImageInfoPvmPKNS_7OptionsE(%class.SkCodec* %63, %struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, %"struct.SkCodec::Options"* %4) #12
  %65 = icmp ult i32 %64, 2
  %66 = add nuw nsw i32 %57, 1
  br i1 %65, label %67, label %21

67:                                               ; preds = %59
  %68 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %5, align 4
  br label %70

70:                                               ; preds = %56, %21, %53, %10, %67, %6
  %71 = phi i32 [ 9, %6 ], [ %64, %67 ], [ 4, %10 ], [ %32, %53 ], [ %32, %56 ], [ %64, %21 ]
  ret i32 %71
}

declare i32 @_ZN7SkCodec9getPixelsERK11SkImageInfoPvmPKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkIcoCodec21onStartScanlineDecodeERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkIcoCodec* nocapture, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %5 = bitcast %struct.SkISize* %4 to i64*
  %6 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %class.SkTArray*, %class.SkTArray** %6, align 8
  %8 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %7, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %9, 1
  %11 = trunc i64 %10 to i32
  %12 = and i32 %11, 2147483647
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %62, label %22

14:                                               ; preds = %52
  %15 = load %class.SkTArray*, %class.SkTArray** %6, align 8
  %16 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %15, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = lshr i64 %17, 1
  %19 = trunc i64 %18 to i32
  %20 = and i32 %19, 2147483647
  %21 = icmp sgt i32 %20, %59
  br i1 %21, label %22, label %62

22:                                               ; preds = %3, %14
  %23 = phi i32 [ %20, %14 ], [ %12, %3 ]
  %24 = phi %class.SkTArray* [ %15, %14 ], [ %7, %3 ]
  %25 = phi i32 [ %57, %14 ], [ 4, %3 ]
  %26 = phi i32 [ %59, %14 ], [ 0, %3 ]
  %27 = load i64, i64* %5, align 8
  %28 = lshr i64 %27, 32
  %29 = trunc i64 %27 to i32
  %30 = trunc i64 %28 to i32
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %24, i64 0, i32 0
  %33 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %34 = zext i32 %23 to i64
  br label %35

35:                                               ; preds = %46, %22
  %36 = phi i64 [ %31, %22 ], [ %47, %46 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 %36, i32 0, i32 0, i32 0
  %38 = load %class.SkCodec*, %class.SkCodec** %37, align 8
  %39 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %38, i64 0, i32 1, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, %29
  br i1 %41, label %42, label %46

42:                                               ; preds = %35
  %43 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %38, i64 0, i32 1, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, %30
  br i1 %45, label %49, label %46

46:                                               ; preds = %42, %35
  %47 = add nsw i64 %36, 1
  %48 = icmp slt i64 %47, %34
  br i1 %48, label %35, label %62

49:                                               ; preds = %42
  %50 = trunc i64 %36 to i32
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %62, label %52

52:                                               ; preds = %49
  %53 = shl i64 %36, 32
  %54 = ashr exact i64 %53, 32
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 %54, i32 0, i32 0, i32 0
  %56 = load %class.SkCodec*, %class.SkCodec** %55, align 8
  %57 = tail call i32 @_ZN7SkCodec19startScanlineDecodeERK11SkImageInfoPKNS_7OptionsE(%class.SkCodec* %56, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* %2) #12
  %58 = icmp eq i32 %57, 0
  %59 = add nuw nsw i32 %50, 1
  br i1 %58, label %60, label %14

60:                                               ; preds = %52
  %61 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 2
  store %class.SkCodec* %56, %class.SkCodec** %61, align 8
  br label %62

62:                                               ; preds = %49, %14, %46, %3, %60
  %63 = phi i32 [ 0, %60 ], [ 4, %3 ], [ %25, %46 ], [ %25, %49 ], [ %57, %14 ]
  ret i32 %63
}

declare i32 @_ZN7SkCodec19startScanlineDecodeERK11SkImageInfoPKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkIcoCodec14onGetScanlinesEPvim(%class.SkIcoCodec* nocapture readonly, i8*, i32, i64) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 2
  %6 = load %class.SkCodec*, %class.SkCodec** %5, align 8
  %7 = tail call i32 @_ZN7SkCodec12getScanlinesEPvim(%class.SkCodec* %6, i8* %1, i32 %2, i64 %3) #12
  ret i32 %7
}

declare i32 @_ZN7SkCodec12getScanlinesEPvim(%class.SkCodec*, i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkIcoCodec15onSkipScanlinesEi(%class.SkIcoCodec* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 2
  %4 = load %class.SkCodec*, %class.SkCodec** %3, align 8
  %5 = tail call zeroext i1 @_ZN7SkCodec13skipScanlinesEi(%class.SkCodec* %4, i32 %1) #12
  ret i1 %5
}

declare zeroext i1 @_ZN7SkCodec13skipScanlinesEi(%class.SkCodec*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkIcoCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKN7SkCodec7OptionsE(%class.SkIcoCodec* nocapture, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %7 = bitcast %struct.SkISize* %6 to i64*
  %8 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %class.SkTArray*, %class.SkTArray** %8, align 8
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %9, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = lshr i64 %11, 1
  %13 = trunc i64 %12 to i32
  %14 = and i32 %13, 2147483647
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %5, %56
  %17 = phi i32 [ %63, %56 ], [ %14, %5 ]
  %18 = phi %class.SkTArray* [ %58, %56 ], [ %9, %5 ]
  %19 = phi i32 [ %57, %56 ], [ 0, %5 ]
  %20 = load i64, i64* %7, align 8
  %21 = lshr i64 %20, 32
  %22 = trunc i64 %20 to i32
  %23 = trunc i64 %21 to i32
  %24 = sext i32 %19 to i64
  %25 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %18, i64 0, i32 0
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %25, align 8
  %27 = zext i32 %17 to i64
  br label %28

28:                                               ; preds = %39, %16
  %29 = phi i64 [ %24, %16 ], [ %40, %39 ]
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 %29, i32 0, i32 0, i32 0
  %31 = load %class.SkCodec*, %class.SkCodec** %30, align 8
  %32 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %31, i64 0, i32 1, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, %22
  br i1 %34, label %35, label %39

35:                                               ; preds = %28
  %36 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %31, i64 0, i32 1, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, %23
  br i1 %38, label %42, label %39

39:                                               ; preds = %35, %28
  %40 = add nsw i64 %29, 1
  %41 = icmp slt i64 %40, %27
  br i1 %41, label %28, label %65

42:                                               ; preds = %35
  %43 = trunc i64 %29 to i32
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %65, label %45

45:                                               ; preds = %42
  %46 = shl i64 %29, 32
  %47 = ashr exact i64 %46, 32
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 %47, i32 0, i32 0, i32 0
  %49 = load %class.SkCodec*, %class.SkCodec** %48, align 8
  %50 = tail call i32 @_ZN7SkCodec22startIncrementalDecodeERK11SkImageInfoPvmPKNS_7OptionsE(%class.SkCodec* %49, %struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, %"struct.SkCodec::Options"* %4) #12
  switch i32 %50, label %56 [
    i32 0, label %51
    i32 9, label %53
  ]

51:                                               ; preds = %45
  %52 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 2
  store %class.SkCodec* %49, %class.SkCodec** %52, align 8
  br label %65

53:                                               ; preds = %45
  %54 = tail call i32 @_ZN7SkCodec19startScanlineDecodeERK11SkImageInfoPKNS_7OptionsE(%class.SkCodec* %49, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* null) #12
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %53, %45
  %57 = add nuw nsw i32 %43, 1
  %58 = load %class.SkTArray*, %class.SkTArray** %8, align 8
  %59 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %58, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = lshr i64 %60, 1
  %62 = trunc i64 %61 to i32
  %63 = and i32 %62, 2147483647
  %64 = icmp sgt i32 %63, %57
  br i1 %64, label %16, label %65

65:                                               ; preds = %42, %56, %53, %39, %5, %51
  %66 = phi i32 [ 0, %51 ], [ 4, %5 ], [ 4, %39 ], [ 4, %42 ], [ 4, %56 ], [ 9, %53 ]
  ret i32 %66
}

declare i32 @_ZN7SkCodec22startIncrementalDecodeERK11SkImageInfoPvmPKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkIcoCodec19onIncrementalDecodeEPi(%class.SkIcoCodec* nocapture readonly, i32*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 2
  %4 = load %class.SkCodec*, %class.SkCodec** %3, align 8
  %5 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %4, i64 0, i32 15
  %6 = load i8, i8* %5, align 8, !range !11
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %class.SkCodec* %4 to i32 (%class.SkCodec*, i32*)***
  %10 = load i32 (%class.SkCodec*, i32*)**, i32 (%class.SkCodec*, i32*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%class.SkCodec*, i32*)*, i32 (%class.SkCodec*, i32*)** %10, i64 20
  %12 = load i32 (%class.SkCodec*, i32*)*, i32 (%class.SkCodec*, i32*)** %11, align 8
  %13 = tail call i32 %12(%class.SkCodec* %4, i32* %1) #12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i32 [ %13, %8 ], [ 5, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10SkIcoCodec18onGetScanlineOrderEv(%class.SkIcoCodec* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 2
  %3 = load %class.SkCodec*, %class.SkCodec** %2, align 8
  %4 = icmp eq %class.SkCodec* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.SkCodec* %3 to i32 (%class.SkCodec*)***
  %7 = load i32 (%class.SkCodec*)**, i32 (%class.SkCodec*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %7, i64 10
  %9 = load i32 (%class.SkCodec*)*, i32 (%class.SkCodec*)** %8, align 8
  %10 = tail call i32 %9(%class.SkCodec* nonnull %3) #12
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i32 [ %10, %5 ], [ 0, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkSampler* @_ZN10SkIcoCodec10getSamplerEb(%class.SkIcoCodec* nocapture readonly, i1 zeroext) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 2
  %4 = load %class.SkCodec*, %class.SkCodec** %3, align 8
  %5 = icmp eq %class.SkCodec* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %class.SkCodec* %4 to %class.SkSampler* (%class.SkCodec*, i1)***
  %8 = load %class.SkSampler* (%class.SkCodec*, i1)**, %class.SkSampler* (%class.SkCodec*, i1)*** %7, align 8
  %9 = getelementptr inbounds %class.SkSampler* (%class.SkCodec*, i1)*, %class.SkSampler* (%class.SkCodec*, i1)** %8, i64 23
  %10 = load %class.SkSampler* (%class.SkCodec*, i1)*, %class.SkSampler* (%class.SkCodec*, i1)** %9, align 8
  %11 = tail call %class.SkSampler* %10(%class.SkCodec* nonnull %4, i1 zeroext %1) #12
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi %class.SkSampler* [ %11, %6 ], [ null, %2 ]
  ret %class.SkSampler* %13
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkIcoCodecD2Ev(%class.SkIcoCodec*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV10SkIcoCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkTArray*, %class.SkTArray** %3, align 8
  store %class.SkTArray* null, %class.SkTArray** %3, align 8
  %5 = icmp eq %class.SkTArray* %4, null
  br i1 %5, label %39, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %4, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 4294967294
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %4, i64 0, i32 0
  br label %17

13:                                               ; preds = %28, %6
  %14 = phi i64 [ %8, %6 ], [ %30, %28 ]
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %37, label %34

17:                                               ; preds = %28, %11
  %18 = phi i64 [ 0, %11 ], [ %29, %28 ]
  %19 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 %18, i32 0, i32 0, i32 0
  %21 = load %class.SkCodec*, %class.SkCodec** %20, align 8
  store %class.SkCodec* null, %class.SkCodec** %20, align 8
  %22 = icmp eq %class.SkCodec* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %17
  %24 = bitcast %class.SkCodec* %21 to void (%class.SkCodec*)***
  %25 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %25, i64 1
  %27 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %26, align 8
  tail call void %27(%class.SkCodec* nonnull %21) #12
  br label %28

28:                                               ; preds = %23, %17
  %29 = add nuw nsw i64 %18, 1
  %30 = load i64, i64* %7, align 8
  %31 = lshr i64 %30, 1
  %32 = and i64 %31, 2147483647
  %33 = icmp ult i64 %29, %32
  br i1 %33, label %17, label %13

34:                                               ; preds = %13
  %35 = bitcast %class.SkTArray* %4 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_Z7sk_freePv(i8* %36) #12
  br label %37

37:                                               ; preds = %34, %13
  %38 = bitcast %class.SkTArray* %4 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %1, %37
  %40 = bitcast %class.SkIcoCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecD2Ev(%class.SkCodec* %40) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkIcoCodecD0Ev(%class.SkIcoCodec*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV10SkIcoCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkIcoCodec, %class.SkIcoCodec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkTArray*, %class.SkTArray** %3, align 8
  store %class.SkTArray* null, %class.SkTArray** %3, align 8
  %5 = icmp eq %class.SkTArray* %4, null
  br i1 %5, label %39, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %4, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 4294967294
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %4, i64 0, i32 0
  br label %17

13:                                               ; preds = %28, %6
  %14 = phi i64 [ %8, %6 ], [ %30, %28 ]
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %37, label %34

17:                                               ; preds = %28, %11
  %18 = phi i64 [ 0, %11 ], [ %29, %28 ]
  %19 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 %18, i32 0, i32 0, i32 0
  %21 = load %class.SkCodec*, %class.SkCodec** %20, align 8
  store %class.SkCodec* null, %class.SkCodec** %20, align 8
  %22 = icmp eq %class.SkCodec* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %17
  %24 = bitcast %class.SkCodec* %21 to void (%class.SkCodec*)***
  %25 = load void (%class.SkCodec*)**, void (%class.SkCodec*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkCodec*)*, void (%class.SkCodec*)** %25, i64 1
  %27 = load void (%class.SkCodec*)*, void (%class.SkCodec*)** %26, align 8
  tail call void %27(%class.SkCodec* nonnull %21) #12
  br label %28

28:                                               ; preds = %23, %17
  %29 = add nuw nsw i64 %18, 1
  %30 = load i64, i64* %7, align 8
  %31 = lshr i64 %30, 1
  %32 = and i64 %31, 2147483647
  %33 = icmp ult i64 %29, %32
  br i1 %33, label %17, label %13

34:                                               ; preds = %13
  %35 = bitcast %class.SkTArray* %4 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_Z7sk_freePv(i8* %36) #12
  br label %37

37:                                               ; preds = %34, %13
  %38 = bitcast %class.SkTArray* %4 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %1, %37
  %40 = bitcast %class.SkIcoCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecD2Ev(%class.SkCodec* %40) #12
  %41 = bitcast %class.SkIcoCodec* %0 to i8*
  tail call void @_ZdlPv(i8* %41) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK10SkIcoCodec18onGetEncodedFormatEv(%class.SkIcoCodec*) unnamed_addr #1 comdat align 2 {
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps(%class.SkCodec*, %class.SkYUVAPixmaps* dereferenceable(208)) unnamed_addr #1 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect(%class.SkCodec*, %struct.SkIRect*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7SkCodec8onRewindEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

declare i32 @_ZNK7SkCodec16onOutputScanlineEi(%class.SkCodec*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN10SkIcoCodec19conversionSupportedERK11SkImageInfobb(%class.SkIcoCodec*, %struct.SkImageInfo* dereferenceable(24), i1 zeroext, i1 zeroext) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK10SkIcoCodec14usesColorXformEv(%class.SkIcoCodec*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetFrameCountEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE(%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec20onGetRepetitionCountEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkFrameHolder* @_ZNK7SkCodec14getFrameHolderEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret %class.SkFrameHolder* null
}

declare void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp* sret, i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #3

declare void @_ZN6SkData16DummyReleaseProcEPKvPv(i8*, i8*) #3

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13SkEncodedInfo13makeImageInfoEv(%struct.SkImageInfo* noalias sret, %struct.SkEncodedInfo*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.sk_sp.12, align 8
  %4 = alloca %class.sk_sp.12, align 8
  %5 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %7 [
    i32 0, label %11
    i32 2, label %10
  ]

7:                                                ; preds = %2
  %8 = icmp eq i32 %6, 3
  %9 = select i1 %8, i64 2, i64 6
  br label %11

10:                                               ; preds = %2
  br label %11

11:                                               ; preds = %2, %10, %7
  %12 = phi i64 [ 11, %2 ], [ %9, %7 ], [ 1, %10 ]
  %13 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i64 4294967296, i64 12884901888
  %17 = bitcast %class.sk_sp.12* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %3, i64 0, i32 0
  store %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %class.SkColorSpace** %18, align 8
  %19 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %20 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %19, align 8
  %21 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %11
  store %class.SkColorSpace* null, %class.SkColorSpace** %18, align 8
  br label %29

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %20, i64 0, i32 0
  call void @_ZN12SkColorSpace4MakeERK16skcms_ICCProfile(%class.sk_sp.12* nonnull sret %3, %struct.skcms_ICCProfile* dereferenceable(1008) %24) #12
  %25 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %26 = icmp eq %class.SkColorSpace* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = ptrtoint %class.SkColorSpace* %25 to i64
  br label %54

29:                                               ; preds = %23, %22
  %30 = bitcast %class.sk_sp.12* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.12* nonnull sret %4) #12
  %31 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %4, i64 0, i32 0
  %32 = bitcast %class.sk_sp.12* %4 to i64*
  %33 = load i64, i64* %32, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %31, align 8
  %34 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %35 = bitcast %class.sk_sp.12* %3 to i64*
  store i64 %33, i64* %35, align 8
  %36 = icmp eq %class.SkColorSpace* %34, null
  br i1 %36, label %52, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = bitcast %class.SkColorSpace* %34 to i8*
  call void @_ZdlPv(i8* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = load %class.SkColorSpace*, %class.SkColorSpace** %31, align 8
  %45 = icmp eq %class.SkColorSpace* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = bitcast %class.SkColorSpace* %44 to i8*
  call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %29, %43, %46, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  %53 = load i64, i64* %35, align 8
  br label %54

54:                                               ; preds = %52, %27
  %55 = phi i64 [ %28, %27 ], [ %53, %52 ]
  %56 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = or i64 %16, %12
  %61 = zext i32 %59 to i64
  %62 = shl nuw i64 %61, 32
  %63 = zext i32 %57 to i64
  %64 = or i64 %62, %63
  %65 = bitcast %struct.SkImageInfo* %0 to i64*
  store i64 %55, i64* %65, align 8, !alias.scope !12
  %66 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %67 = bitcast i32* %66 to i64*
  store i64 %60, i64* %67, align 8, !alias.scope !12
  %68 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1
  %69 = bitcast %struct.SkISize* %68 to i64*
  store i64 %64, i64* %69, align 8, !alias.scope !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  ret void
}

declare void @_ZN12SkColorSpace4MakeERK16skcms_ICCProfile(%class.sk_sp.12* sret, %struct.skcms_ICCProfile* dereferenceable(1008)) local_unnamed_addr #3

declare void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.12* sret) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #3

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7SkCodecD2Ev(%class.SkCodec*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #8

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @_Z12SkTIntroSortIZN10SkIcoCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS1_14default_deleteIS3_EEEEPN7SkCodec6ResultEE5EntryZNS0_14MakeFromStreamES6_S9_E13EntryLessThanEviPT_iRKT0_(i32, %struct.Entry*, i32) unnamed_addr #9 {
  %4 = icmp slt i32 %2, 33
  br i1 %4, label %5, label %42

5:                                                ; preds = %226, %3
  %6 = phi i32 [ %2, %3 ], [ %239, %226 ]
  %7 = phi %struct.Entry* [ %1, %3 ], [ %238, %226 ]
  %8 = sext i32 %6 to i64
  %9 = add nsw i64 %8, -1
  %10 = getelementptr inbounds %struct.Entry, %struct.Entry* %7, i64 %9
  %11 = icmp slt i32 %6, 2
  br i1 %11, label %241, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.Entry, %struct.Entry* %7, i64 1
  br label %14

14:                                               ; preds = %39, %12
  %15 = phi %struct.Entry* [ %40, %39 ], [ %13, %12 ]
  %16 = phi %struct.Entry* [ %15, %39 ], [ %7, %12 ]
  %17 = bitcast %struct.Entry* %15 to i64*
  %18 = load i64, i64* %17, align 4
  %19 = bitcast %struct.Entry* %16 to i64*
  %20 = load i64, i64* %19, align 4
  %21 = trunc i64 %18 to i32
  %22 = trunc i64 %20 to i32
  %23 = icmp ult i32 %21, %22
  br i1 %23, label %24, label %39

24:                                               ; preds = %14, %31
  %25 = phi %struct.Entry* [ %26, %31 ], [ %15, %14 ]
  %26 = getelementptr inbounds %struct.Entry, %struct.Entry* %25, i64 -1
  %27 = bitcast %struct.Entry* %26 to i64*
  %28 = bitcast %struct.Entry* %25 to i64*
  %29 = load i64, i64* %27, align 4
  store i64 %29, i64* %28, align 4
  %30 = icmp ugt %struct.Entry* %26, %7
  br i1 %30, label %31, label %37

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.Entry, %struct.Entry* %25, i64 -2
  %33 = bitcast %struct.Entry* %32 to i64*
  %34 = load i64, i64* %33, align 4
  %35 = trunc i64 %34 to i32
  %36 = icmp ult i32 %21, %35
  br i1 %36, label %24, label %37

37:                                               ; preds = %31, %24
  %38 = bitcast %struct.Entry* %26 to i64*
  store i64 %18, i64* %38, align 4
  br label %39

39:                                               ; preds = %37, %14
  %40 = getelementptr inbounds %struct.Entry, %struct.Entry* %15, i64 1
  %41 = icmp ugt %struct.Entry* %40, %10
  br i1 %41, label %241, label %14

42:                                               ; preds = %3, %226
  %43 = phi i32 [ %169, %226 ], [ %0, %3 ]
  %44 = phi %struct.Entry* [ %238, %226 ], [ %1, %3 ]
  %45 = phi i32 [ %239, %226 ], [ %2, %3 ]
  %46 = icmp eq i32 %43, 0
  br i1 %46, label %47, label %168

47:                                               ; preds = %42
  %48 = sext i32 %45 to i64
  %49 = lshr i64 %48, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %61

51:                                               ; preds = %47
  %52 = add nsw i64 %48, -1
  br label %56

53:                                               ; preds = %101
  %54 = add nsw i64 %48, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %241, label %56

56:                                               ; preds = %51, %53
  %57 = phi i64 [ %52, %51 ], [ %54, %53 ]
  %58 = bitcast %struct.Entry* %44 to i64*
  %59 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 0, i32 0
  %60 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 0, i32 1
  br label %106

61:                                               ; preds = %47, %101
  %62 = phi i64 [ %63, %101 ], [ %49, %47 ]
  %63 = add nsw i64 %62, -1
  %64 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %63, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %63, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = shl i64 %62, 1
  %69 = icmp ugt i64 %68, %48
  br i1 %69, label %101, label %70

70:                                               ; preds = %61, %96
  %71 = phi i64 [ %99, %96 ], [ %68, %61 ]
  %72 = phi i64 [ %88, %96 ], [ %62, %61 ]
  %73 = icmp ult i64 %71, %48
  br i1 %73, label %74, label %87

74:                                               ; preds = %70
  %75 = add i64 %71, -1
  %76 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %75
  %77 = bitcast %struct.Entry* %76 to i64*
  %78 = load i64, i64* %77, align 4
  %79 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %71
  %80 = bitcast %struct.Entry* %79 to i64*
  %81 = load i64, i64* %80, align 4
  %82 = trunc i64 %78 to i32
  %83 = trunc i64 %81 to i32
  %84 = icmp ult i32 %82, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %71, %85
  br label %87

87:                                               ; preds = %74, %70
  %88 = phi i64 [ %71, %70 ], [ %86, %74 ]
  %89 = add i64 %88, -1
  %90 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %89
  %91 = bitcast %struct.Entry* %90 to i64*
  %92 = load i64, i64* %91, align 4
  %93 = trunc i64 %92 to i32
  %94 = icmp ult i32 %65, %93
  %95 = add i64 %72, -1
  br i1 %94, label %96, label %101

96:                                               ; preds = %87
  %97 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %95
  %98 = bitcast %struct.Entry* %97 to i64*
  store i64 %92, i64* %98, align 4
  %99 = shl i64 %88, 1
  %100 = icmp ugt i64 %99, %48
  br i1 %100, label %101, label %70

101:                                              ; preds = %96, %87, %61
  %102 = phi i64 [ %63, %61 ], [ %89, %96 ], [ %95, %87 ]
  %103 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %102, i32 0
  store i32 %65, i32* %103, align 4
  %104 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %102, i32 1
  store i32 %67, i32* %104, align 4
  %105 = icmp eq i64 %63, 0
  br i1 %105, label %53, label %61

106:                                              ; preds = %161, %56
  %107 = phi i64 [ %57, %56 ], [ %166, %161 ]
  %108 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %107
  %109 = load i64, i64* %58, align 4
  %110 = bitcast %struct.Entry* %108 to i64*
  %111 = load i64, i64* %110, align 4
  store i64 %111, i64* %58, align 4
  store i64 %109, i64* %110, align 4
  %112 = load i32, i32* %59, align 4
  %113 = load i32, i32* %60, align 4
  %114 = icmp eq i64 %107, 1
  br i1 %114, label %161, label %118

115:                                              ; preds = %135
  %116 = lshr i64 %136, 1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %161, label %146

118:                                              ; preds = %106, %135
  %119 = phi i64 [ %136, %135 ], [ 1, %106 ]
  %120 = phi i64 [ %144, %135 ], [ 2, %106 ]
  %121 = icmp ult i64 %120, %107
  br i1 %121, label %122, label %135

122:                                              ; preds = %118
  %123 = add i64 %120, -1
  %124 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %123
  %125 = bitcast %struct.Entry* %124 to i64*
  %126 = load i64, i64* %125, align 4
  %127 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %120
  %128 = bitcast %struct.Entry* %127 to i64*
  %129 = load i64, i64* %128, align 4
  %130 = trunc i64 %126 to i32
  %131 = trunc i64 %129 to i32
  %132 = icmp ult i32 %130, %131
  %133 = zext i1 %132 to i64
  %134 = or i64 %120, %133
  br label %135

135:                                              ; preds = %122, %118
  %136 = phi i64 [ %120, %118 ], [ %134, %122 ]
  %137 = add i64 %136, -1
  %138 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %137
  %139 = add i64 %119, -1
  %140 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %139
  %141 = bitcast %struct.Entry* %138 to i64*
  %142 = bitcast %struct.Entry* %140 to i64*
  %143 = load i64, i64* %141, align 4
  store i64 %143, i64* %142, align 4
  %144 = shl i64 %136, 1
  %145 = icmp ugt i64 %144, %107
  br i1 %145, label %115, label %118

146:                                              ; preds = %115, %155
  %147 = phi i64 [ %159, %155 ], [ %116, %115 ]
  %148 = phi i64 [ %147, %155 ], [ %136, %115 ]
  %149 = add nsw i64 %147, -1
  %150 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %149
  %151 = bitcast %struct.Entry* %150 to i64*
  %152 = load i64, i64* %151, align 4
  %153 = trunc i64 %152 to i32
  %154 = icmp ugt i32 %112, %153
  br i1 %154, label %155, label %161

155:                                              ; preds = %146
  %156 = add i64 %148, -1
  %157 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %156
  %158 = bitcast %struct.Entry* %157 to i64*
  store i64 %152, i64* %158, align 4
  %159 = lshr i64 %147, 1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %146

161:                                              ; preds = %155, %146, %115, %106
  %162 = phi i64 [ %136, %115 ], [ 1, %106 ], [ %147, %155 ], [ %148, %146 ]
  %163 = add i64 %162, -1
  %164 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %163, i32 0
  store i32 %112, i32* %164, align 4
  %165 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %163, i32 1
  store i32 %113, i32* %165, align 4
  %166 = add i64 %107, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %241, label %106

168:                                              ; preds = %42
  %169 = add nsw i32 %43, -1
  %170 = add nsw i32 %45, -1
  %171 = ashr i32 %170, 1
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %172
  %174 = sext i32 %45 to i64
  %175 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 -1
  %176 = getelementptr inbounds %struct.Entry, %struct.Entry* %175, i64 %174
  %177 = getelementptr inbounds %struct.Entry, %struct.Entry* %173, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = bitcast %struct.Entry* %173 to i64*
  %180 = load i64, i64* %179, align 4
  %181 = bitcast %struct.Entry* %176 to i64*
  %182 = load i64, i64* %181, align 4
  store i64 %182, i64* %179, align 4
  store i64 %180, i64* %181, align 4
  %183 = icmp ugt %struct.Entry* %176, %44
  br i1 %183, label %184, label %226

184:                                              ; preds = %168
  %185 = shl nsw i64 %174, 3
  %186 = add nsw i64 %185, -9
  %187 = and i64 %186, 8
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %200

189:                                              ; preds = %184
  %190 = bitcast %struct.Entry* %44 to i64*
  %191 = load i64, i64* %190, align 4
  %192 = trunc i64 %191 to i32
  %193 = icmp ugt i32 %178, %192
  br i1 %193, label %194, label %197

194:                                              ; preds = %189
  %195 = bitcast %struct.Entry* %44 to i64*
  store i64 %191, i64* %195, align 4
  %196 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 1
  br label %197

197:                                              ; preds = %194, %189
  %198 = phi %struct.Entry* [ %196, %194 ], [ %44, %189 ]
  %199 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 1
  br label %200

200:                                              ; preds = %197, %184
  %201 = phi %struct.Entry* [ %199, %197 ], [ %44, %184 ]
  %202 = phi %struct.Entry* [ %198, %197 ], [ %44, %184 ]
  %203 = phi %struct.Entry* [ %198, %197 ], [ undef, %184 ]
  %204 = icmp eq i64 %186, 7
  br i1 %204, label %223, label %205

205:                                              ; preds = %200, %246
  %206 = phi %struct.Entry* [ %248, %246 ], [ %201, %200 ]
  %207 = phi %struct.Entry* [ %247, %246 ], [ %202, %200 ]
  %208 = bitcast %struct.Entry* %206 to i64*
  %209 = load i64, i64* %208, align 4
  %210 = trunc i64 %209 to i32
  %211 = icmp ugt i32 %178, %210
  br i1 %211, label %212, label %216

212:                                              ; preds = %205
  %213 = bitcast %struct.Entry* %207 to i64*
  %214 = load i64, i64* %213, align 4
  store i64 %214, i64* %208, align 4
  store i64 %209, i64* %213, align 4
  %215 = getelementptr inbounds %struct.Entry, %struct.Entry* %207, i64 1
  br label %216

216:                                              ; preds = %212, %205
  %217 = phi %struct.Entry* [ %215, %212 ], [ %207, %205 ]
  %218 = getelementptr inbounds %struct.Entry, %struct.Entry* %206, i64 1
  %219 = bitcast %struct.Entry* %218 to i64*
  %220 = load i64, i64* %219, align 4
  %221 = trunc i64 %220 to i32
  %222 = icmp ugt i32 %178, %221
  br i1 %222, label %242, label %246

223:                                              ; preds = %246, %200
  %224 = phi %struct.Entry* [ %203, %200 ], [ %247, %246 ]
  %225 = load i64, i64* %181, align 4
  br label %226

226:                                              ; preds = %168, %223
  %227 = phi i64 [ %180, %168 ], [ %225, %223 ]
  %228 = phi %struct.Entry* [ %44, %168 ], [ %224, %223 ]
  %229 = bitcast %struct.Entry* %228 to i64*
  %230 = load i64, i64* %229, align 4
  store i64 %227, i64* %229, align 4
  store i64 %230, i64* %181, align 4
  %231 = ptrtoint %struct.Entry* %228 to i64
  %232 = ptrtoint %struct.Entry* %44 to i64
  %233 = sub i64 %231, %232
  %234 = lshr exact i64 %233, 3
  %235 = trunc i64 %234 to i32
  tail call fastcc void @_Z12SkTIntroSortIZN10SkIcoCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS1_14default_deleteIS3_EEEEPN7SkCodec6ResultEE5EntryZNS0_14MakeFromStreamES6_S9_E13EntryLessThanEviPT_iRKT0_(i32 %169, %struct.Entry* %44, i32 %235)
  %236 = add nsw i32 %235, 1
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds %struct.Entry, %struct.Entry* %44, i64 %237
  %239 = sub nsw i32 %45, %236
  %240 = icmp slt i32 %239, 33
  br i1 %240, label %5, label %42

241:                                              ; preds = %161, %39, %53, %5
  ret void

242:                                              ; preds = %216
  %243 = bitcast %struct.Entry* %217 to i64*
  %244 = load i64, i64* %243, align 4
  store i64 %244, i64* %219, align 4
  store i64 %220, i64* %243, align 4
  %245 = getelementptr inbounds %struct.Entry, %struct.Entry* %217, i64 1
  br label %246

246:                                              ; preds = %242, %216
  %247 = phi %struct.Entry* [ %245, %242 ], [ %217, %216 ]
  %248 = getelementptr inbounds %struct.Entry, %struct.Entry* %206, i64 2
  %249 = icmp ult %struct.Entry* %248, %176
  br i1 %249, label %205, label %223
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #10

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrI7SkCodecNS0_14default_deleteIS2_EEEELb1EE12checkReallocEiNS6_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %65

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #12
  %45 = load i64, i64* %4, align 8
  %46 = shl i64 %45, 2
  %47 = and i64 %46, 17179869176
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = bitcast %class.SkTArray* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #12
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %class.SkTArray* %0 to i8**
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %59) #12
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  store i8* %44, i8** %57, align 8
  %63 = and i64 %62, -4294967298
  %64 = or i64 %63, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %32, %21
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK13SkEncodedInfo4copyEv: argument 0"}
!5 = distinct !{!5, !"_ZNK13SkEncodedInfo4copyEv"}
!6 = !{!7, !9, !4}
!7 = distinct !{!7, !8, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE: argument 0"}
!8 = distinct !{!8, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE"}
!9 = distinct !{!9, !10, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEi: argument 0"}
!10 = distinct !{!10, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEi"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!14 = distinct !{!14, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
