; ModuleID = '../../components/autofill/core/browser/autofill_profile_save_strike_database.cc'
source_filename = "../../components/autofill/core/browser/autofill_profile_save_strike_database.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::FeatureParam" = type <{ %"struct.base::Feature"*, i8*, i32, [4 x i8] }>
%"struct.base::Feature" = type { i8*, i32 }
%"class.autofill::AutofillProfileSaveStrikeDatabase" = type { %"class.autofill::StrikeDatabaseIntegratorBase" }
%"class.autofill::StrikeDatabaseIntegratorBase" = type { i32 (...)**, %"class.autofill::StrikeDatabaseBase"* }
%"class.autofill::StrikeDatabaseBase" = type { %class.KeyedService }
%class.KeyedService = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.20" }
%"class.std::__1::__tree.20" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__tree_node.30" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm = comdat any

$_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE14__count_uniqueIS6_EEmRKT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

@_ZTVN8autofill33AutofillProfileSaveStrikeDatabaseE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::AutofillProfileSaveStrikeDatabase"*)* @_ZN8autofill33AutofillProfileSaveStrikeDatabaseD2Ev to i8*), i8* bitcast (void (%"class.autofill::AutofillProfileSaveStrikeDatabase"*)* @_ZN8autofill33AutofillProfileSaveStrikeDatabaseD0Ev to i8*), i8* bitcast ({ i8, i64 } (%"class.autofill::AutofillProfileSaveStrikeDatabase"*)* @_ZNK8autofill33AutofillProfileSaveStrikeDatabase17GetMaximumEntriesEv to i8*), i8* bitcast ({ i8, i64 } (%"class.autofill::AutofillProfileSaveStrikeDatabase"*)* @_ZNK8autofill33AutofillProfileSaveStrikeDatabase29GetMaximumEntriesAfterCleanupEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.autofill::AutofillProfileSaveStrikeDatabase"*)* @_ZNK8autofill33AutofillProfileSaveStrikeDatabase16GetProjectPrefixEv to i8*), i8* bitcast (i32 (%"class.autofill::AutofillProfileSaveStrikeDatabase"*)* @_ZNK8autofill33AutofillProfileSaveStrikeDatabase18GetMaxStrikesLimitEv to i8*), i8* bitcast ({ i8, i64 } (%"class.autofill::AutofillProfileSaveStrikeDatabase"*)* @_ZNK8autofill33AutofillProfileSaveStrikeDatabase18GetExpiryTimeDeltaEv to i8*), i8* bitcast (i1 (%"class.autofill::AutofillProfileSaveStrikeDatabase"*)* @_ZNK8autofill33AutofillProfileSaveStrikeDatabase17UniqueIdsRequiredEv to i8*)] }, align 8
@.str = private unnamed_addr constant [20 x i8] c"AutofillProfileSave\00", align 1
@_ZN8autofill8features53kAutofillAutoBlockSaveAddressProfilePromptStrikeLimitE = external global %"struct.base::FeatureParam", align 8
@_ZN8autofill8features56kAutofillAutoBlockSaveAddressProfilePromptExpirationDaysE = external global %"struct.base::FeatureParam", align 8

@_ZN8autofill33AutofillProfileSaveStrikeDatabaseC1EPNS_18StrikeDatabaseBaseE = hidden unnamed_addr alias void (%"class.autofill::AutofillProfileSaveStrikeDatabase"*, %"class.autofill::StrikeDatabaseBase"*), void (%"class.autofill::AutofillProfileSaveStrikeDatabase"*, %"class.autofill::StrikeDatabaseBase"*)* @_ZN8autofill33AutofillProfileSaveStrikeDatabaseC2EPNS_18StrikeDatabaseBaseE
@_ZN8autofill33AutofillProfileSaveStrikeDatabaseD1Ev = hidden unnamed_addr alias void (%"class.autofill::AutofillProfileSaveStrikeDatabase"*), void (%"class.autofill::AutofillProfileSaveStrikeDatabase"*)* @_ZN8autofill33AutofillProfileSaveStrikeDatabaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill33AutofillProfileSaveStrikeDatabaseC2EPNS_18StrikeDatabaseBaseE(%"class.autofill::AutofillProfileSaveStrikeDatabase"*, %"class.autofill::StrikeDatabaseBase"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::AutofillProfileSaveStrikeDatabase", %"class.autofill::AutofillProfileSaveStrikeDatabase"* %0, i64 0, i32 0
  tail call void @_ZN8autofill28StrikeDatabaseIntegratorBaseC2EPNS_18StrikeDatabaseBaseE(%"class.autofill::StrikeDatabaseIntegratorBase"* %3, %"class.autofill::StrikeDatabaseBase"* %1) #11
  %4 = getelementptr inbounds %"class.autofill::AutofillProfileSaveStrikeDatabase", %"class.autofill::AutofillProfileSaveStrikeDatabase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN8autofill33AutofillProfileSaveStrikeDatabaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  tail call void @_ZN8autofill28StrikeDatabaseIntegratorBase20RemoveExpiredStrikesEv(%"class.autofill::StrikeDatabaseIntegratorBase"* %3) #11
  ret void
}

declare void @_ZN8autofill28StrikeDatabaseIntegratorBaseC2EPNS_18StrikeDatabaseBaseE(%"class.autofill::StrikeDatabaseIntegratorBase"*, %"class.autofill::StrikeDatabaseBase"*) unnamed_addr #1

declare void @_ZN8autofill28StrikeDatabaseIntegratorBase20RemoveExpiredStrikesEv(%"class.autofill::StrikeDatabaseIntegratorBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8autofill28StrikeDatabaseIntegratorBaseD2Ev(%"class.autofill::StrikeDatabaseIntegratorBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill33AutofillProfileSaveStrikeDatabaseD2Ev(%"class.autofill::AutofillProfileSaveStrikeDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillProfileSaveStrikeDatabase", %"class.autofill::AutofillProfileSaveStrikeDatabase"* %0, i64 0, i32 0
  tail call void @_ZN8autofill28StrikeDatabaseIntegratorBaseD2Ev(%"class.autofill::StrikeDatabaseIntegratorBase"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill33AutofillProfileSaveStrikeDatabaseD0Ev(%"class.autofill::AutofillProfileSaveStrikeDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AutofillProfileSaveStrikeDatabase", %"class.autofill::AutofillProfileSaveStrikeDatabase"* %0, i64 0, i32 0
  tail call void @_ZN8autofill28StrikeDatabaseIntegratorBaseD2Ev(%"class.autofill::StrikeDatabaseIntegratorBase"* %2) #11
  %3 = bitcast %"class.autofill::AutofillProfileSaveStrikeDatabase"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8, i64 } @_ZNK8autofill33AutofillProfileSaveStrikeDatabase17GetMaximumEntriesEv(%"class.autofill::AutofillProfileSaveStrikeDatabase"* nocapture readnone) unnamed_addr #4 align 2 {
  ret { i8, i64 } { i8 1, i64 200 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8, i64 } @_ZNK8autofill33AutofillProfileSaveStrikeDatabase29GetMaximumEntriesAfterCleanupEv(%"class.autofill::AutofillProfileSaveStrikeDatabase"* nocapture readnone) unnamed_addr #4 align 2 {
  ret { i8, i64 } { i8 1, i64 150 }
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8autofill33AutofillProfileSaveStrikeDatabase16GetProjectPrefixEv(%"class.std::__1::basic_string"* noalias sret, %"class.autofill::AutofillProfileSaveStrikeDatabase"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 19, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 19, i1 false) #11
  %6 = getelementptr inbounds i8, i8* %5, i64 19
  store i8 0, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8autofill33AutofillProfileSaveStrikeDatabase18GetMaxStrikesLimitEv(%"class.autofill::AutofillProfileSaveStrikeDatabase"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN8autofill8features53kAutofillAutoBlockSaveAddressProfilePromptStrikeLimitE) #11
  ret i32 %2
}

declare i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK8autofill33AutofillProfileSaveStrikeDatabase18GetExpiryTimeDeltaEv(%"class.autofill::AutofillProfileSaveStrikeDatabase"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN8autofill8features56kAutofillAutoBlockSaveAddressProfilePromptExpirationDaysE) #11
  %3 = icmp eq i32 %2, 2147483647
  %4 = sext i32 %2 to i64
  %5 = mul nsw i64 %4, 86400000000
  %6 = select i1 %3, i64 9223372036854775807, i64 %5
  %7 = insertvalue { i8, i64 } { i8 1, i64 undef }, i64 %6, 1
  ret { i8, i64 } %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8autofill33AutofillProfileSaveStrikeDatabase17UniqueIdsRequiredEv(%"class.autofill::AutofillProfileSaveStrikeDatabase"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill33AutofillProfileSaveStrikeDatabase20ClearStrikesByOriginERKNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEE(%"class.autofill::AutofillProfileSaveStrikeDatabase"*, %"class.std::__1::set"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN8autofill33AutofillProfileSaveStrikeDatabase35ClearStrikesByOriginAndTimeInternalERKNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEEN4base4TimeESG_(%"class.autofill::AutofillProfileSaveStrikeDatabase"* %0, %"class.std::__1::set"* dereferenceable(24) %1, i64 -9223372036854775808, i64 9223372036854775807)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill33AutofillProfileSaveStrikeDatabase35ClearStrikesByOriginAndTimeInternalERKNSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEEN4base4TimeESG_(%"class.autofill::AutofillProfileSaveStrikeDatabase"*, %"class.std::__1::set"* dereferenceable(24), i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = icmp eq i64 %2, 0
  %8 = select i1 %7, i64 -9223372036854775808, i64 %2
  %9 = icmp eq i64 %3, 0
  %10 = select i1 %9, i64 9223372036854775807, i64 %3
  %11 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #11
  %15 = getelementptr inbounds %"class.autofill::AutofillProfileSaveStrikeDatabase", %"class.autofill::AutofillProfileSaveStrikeDatabase"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.autofill::AutofillProfileSaveStrikeDatabase", %"class.autofill::AutofillProfileSaveStrikeDatabase"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.autofill::StrikeDatabaseBase"*, %"class.autofill::StrikeDatabaseBase"** %16, align 8
  %18 = bitcast %"class.autofill::StrikeDatabaseBase"* %17 to %"class.std::__1::map"* (%"class.autofill::StrikeDatabaseBase"*)***
  %19 = load %"class.std::__1::map"* (%"class.autofill::StrikeDatabaseBase"*)**, %"class.std::__1::map"* (%"class.autofill::StrikeDatabaseBase"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::map"* (%"class.autofill::StrikeDatabaseBase"*)*, %"class.std::__1::map"* (%"class.autofill::StrikeDatabaseBase"*)** %19, i64 13
  %21 = load %"class.std::__1::map"* (%"class.autofill::StrikeDatabaseBase"*)*, %"class.std::__1::map"* (%"class.autofill::StrikeDatabaseBase"*)** %20, align 8
  %22 = tail call dereferenceable(24) %"class.std::__1::map"* %21(%"class.autofill::StrikeDatabaseBase"* %17) #11
  %23 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector"* nonnull %5, i64 %24)
  %25 = load %"class.autofill::StrikeDatabaseBase"*, %"class.autofill::StrikeDatabaseBase"** %16, align 8
  %26 = bitcast %"class.autofill::StrikeDatabaseBase"* %25 to %"class.std::__1::map"* (%"class.autofill::StrikeDatabaseBase"*)***
  %27 = load %"class.std::__1::map"* (%"class.autofill::StrikeDatabaseBase"*)**, %"class.std::__1::map"* (%"class.autofill::StrikeDatabaseBase"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::map"* (%"class.autofill::StrikeDatabaseBase"*)*, %"class.std::__1::map"* (%"class.autofill::StrikeDatabaseBase"*)** %27, i64 13
  %29 = load %"class.std::__1::map"* (%"class.autofill::StrikeDatabaseBase"*)*, %"class.std::__1::map"* (%"class.autofill::StrikeDatabaseBase"*)** %28, align 8
  %30 = call dereferenceable(24) %"class.std::__1::map"* %29(%"class.autofill::StrikeDatabaseBase"* %25) #11
  %31 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %30, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %32, %33
  br i1 %34, label %44, label %35

35:                                               ; preds = %4
  %36 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0
  %42 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %43 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %69

44:                                               ; preds = %148, %4
  call void @_ZN8autofill28StrikeDatabaseIntegratorBase19ClearStrikesForKeysERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.autofill::StrikeDatabaseIntegratorBase"* %15, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #11
  %45 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %46 = icmp eq %"class.std::__1::basic_string"* %45, null
  br i1 %46, label %68, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  %49 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %50 = icmp eq %"class.std::__1::basic_string"* %49, %45
  br i1 %50, label %66, label %51

51:                                               ; preds = %47, %61
  %52 = phi %"class.std::__1::basic_string"* [ %53, %61 ], [ %49, %47 ]
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 -1
  %54 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %58, %51
  %62 = icmp eq %"class.std::__1::basic_string"* %53, %45
  br i1 %62, label %63, label %51

63:                                               ; preds = %61
  %64 = bitcast %"class.std::__1::vector"* %5 to i8**
  %65 = load i8*, i8** %64, align 8
  br label %66

66:                                               ; preds = %63, %47
  %67 = phi i8* [ %65, %63 ], [ %48, %47 ]
  store %"class.std::__1::basic_string"* %45, %"class.std::__1::basic_string"** %13, align 8
  call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %44, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  ret void

69:                                               ; preds = %35, %148
  %70 = phi %"class.std::__1::__tree_end_node"* [ %32, %35 ], [ %149, %148 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"class.std::__1::basic_string"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false)
  call void @_ZNK8autofill28StrikeDatabaseIntegratorBase12GetIdFromKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.autofill::StrikeDatabaseIntegratorBase"* %15, %"class.std::__1::basic_string"* dereferenceable(24) %72) #11
  %73 = load i8, i8* %40, align 1
  %74 = icmp slt i8 %73, 0
  %75 = load i64, i64* %38, align 8
  %76 = zext i8 %73 to i64
  %77 = select i1 %74, i64 %75, i64 %76
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %117, label %79

79:                                               ; preds = %69
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 10
  %81 = bitcast %"class.std::__1::__tree_end_node"* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = call i64 @_ZN4base4Time26FromDeltaSinceWindowsEpochENS_9TimeDeltaE(i64 %82) #11
  %84 = icmp sge i64 %83, %8
  %85 = icmp sle i64 %83, %10
  %86 = and i1 %84, %85
  br i1 %86, label %87, label %112

87:                                               ; preds = %79
  %88 = call i64 @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE14__count_uniqueIS6_EEmRKT_(%"class.std::__1::__tree"* %41, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #11
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %112, label %90

90:                                               ; preds = %87
  %91 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %92 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %93 = icmp eq %"class.std::__1::basic_string"* %91, %92
  br i1 %93, label %111, label %94

94:                                               ; preds = %90
  %95 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %94
  %100 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  %101 = bitcast %"class.std::__1::__tree_end_node"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 24, i1 false) #11
  br label %108

102:                                              ; preds = %94
  %103 = bitcast %"class.std::__1::__tree_end_node"* %71 to i8**
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 5
  %106 = bitcast %"class.std::__1::__tree_end_node"* %105 to i64*
  %107 = load i64, i64* %106, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %91, i8* %104, i64 %107) #11
  br label %108

108:                                              ; preds = %102, %99
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 1
  %110 = ptrtoint %"class.std::__1::basic_string"* %109 to i64
  store i64 %110, i64* %42, align 8
  br label %112

111:                                              ; preds = %90
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %72) #11
  br label %112

112:                                              ; preds = %111, %108, %87, %79
  %113 = load i8, i8* %40, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %120

115:                                              ; preds = %112
  %116 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %116) #12
  br label %120

117:                                              ; preds = %69
  br i1 %74, label %118, label %120

118:                                              ; preds = %117
  %119 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %118, %117, %115, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  %121 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 1, i32 0
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, null
  br i1 %123, label %124, label %132

124:                                              ; preds = %120
  %125 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.std::__1::__tree_node_base"*
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 2
  %127 = bitcast %"class.std::__1::__tree_end_node"* %126 to %"class.std::__1::__tree_end_node"**
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %127, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %125
  br i1 %131, label %148, label %139

132:                                              ; preds = %120, %132
  %133 = phi %"class.std::__1::__tree_node_base"* [ %135, %132 ], [ %122, %120 ]
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, null
  br i1 %136, label %137, label %132

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 0
  br label %148

139:                                              ; preds = %124, %139
  %140 = phi %"class.std::__1::__tree_end_node"** [ %143, %139 ], [ %127, %124 ]
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to %"class.std::__1::__tree_node_base"**
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %144 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, %142
  br i1 %147, label %148, label %139

148:                                              ; preds = %139, %124, %137
  %149 = phi %"class.std::__1::__tree_end_node"* [ %138, %137 ], [ %128, %124 ], [ %144, %139 ]
  %150 = icmp eq %"class.std::__1::__tree_end_node"* %149, %33
  br i1 %150, label %44, label %69
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  br i1 %10, label %12, label %62

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #13
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::basic_string"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::basic_string"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::basic_string"*
  %29 = icmp eq %"class.std::__1::basic_string"* %28, %11
  br i1 %29, label %30, label %31

30:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %57

31:                                               ; preds = %17, %31
  %32 = phi %"class.std::__1::basic_string"* [ %34, %31 ], [ %24, %17 ]
  %33 = phi %"class.std::__1::basic_string"* [ %35, %31 ], [ %28, %17 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 -1
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #11
  %38 = icmp eq %"class.std::__1::basic_string"* %35, %11
  br i1 %38, label %39, label %31

39:                                               ; preds = %31
  %40 = ptrtoint %"class.std::__1::basic_string"* %34 to i64
  %41 = load i64, i64* %6, align 8
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %43 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  store i64 %40, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %42, %43
  br i1 %44, label %57, label %45

45:                                               ; preds = %39, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %42, %39 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %43
  br i1 %56, label %57, label %45

57:                                               ; preds = %55, %30, %39
  %58 = phi i64 [ %7, %30 ], [ %41, %39 ], [ %41, %55 ]
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %60, %57, %2
  ret void
}

declare void @_ZNK8autofill28StrikeDatabaseIntegratorBase12GetIdFromKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.autofill::StrikeDatabaseIntegratorBase"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare i64 @_ZN4base4Time26FromDeltaSinceWindowsEpochENS_9TimeDeltaE(i64) local_unnamed_addr #1

declare void @_ZN8autofill28StrikeDatabaseIntegratorBase19ClearStrikesForKeysERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.autofill::StrikeDatabaseIntegratorBase"*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE14__count_uniqueIS6_EEmRKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.30"**
  %5 = load %"class.std::__1::__tree_node.30"*, %"class.std::__1::__tree_node.30"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.30"* %5, null
  br i1 %6, label %67, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %7, %63
  %21 = phi %"class.std::__1::__tree_node.30"* [ %5, %7 ], [ %65, %63 ]
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.30", %"class.std::__1::__tree_node.30"* %21, i64 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.30", %"class.std::__1::__tree_node.30"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = icmp ult i64 %30, %15
  %32 = select i1 %31, i64 %30, i64 %15
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %20
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %38 = select i1 %26, i8* %36, i8* %37
  %39 = tail call i32 @memcmp(i8* %19, i8* %38, i64 %32) #11
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %34, %20
  %42 = icmp ult i64 %15, %30
  br i1 %42, label %45, label %47

43:                                               ; preds = %34
  %44 = icmp slt i32 %39, 0
  br i1 %44, label %45, label %53

45:                                               ; preds = %41, %43
  %46 = bitcast %"class.std::__1::__tree_node.30"* %21 to %"class.std::__1::__tree_node.30"**
  br label %63

47:                                               ; preds = %41
  br i1 %33, label %57, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %52 = select i1 %26, i8* %50, i8* %51
  br label %53

53:                                               ; preds = %48, %43
  %54 = phi i8* [ %52, %48 ], [ %38, %43 ]
  %55 = tail call i32 @memcmp(i8* %54, i8* %19, i64 %32) #11
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %53, %47
  br i1 %31, label %60, label %67

58:                                               ; preds = %53
  %59 = icmp slt i32 %55, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %57, %58
  %61 = getelementptr inbounds %"class.std::__1::__tree_node.30", %"class.std::__1::__tree_node.30"* %21, i64 0, i32 0, i32 1
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node.30"**
  br label %63

63:                                               ; preds = %60, %45
  %64 = phi %"class.std::__1::__tree_node.30"** [ %46, %45 ], [ %62, %60 ]
  %65 = load %"class.std::__1::__tree_node.30"*, %"class.std::__1::__tree_node.30"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node.30"* %65, null
  br i1 %66, label %67, label %20

67:                                               ; preds = %58, %63, %57, %2
  %68 = phi i64 [ 0, %2 ], [ 1, %57 ], [ 0, %63 ], [ 1, %58 ]
  ret i64 %68
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #11
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #11
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
