; ModuleID = '../../third_party/webrtc/common_audio/vad/vad_sp.c'
source_filename = "../../third_party/webrtc/common_audio/vad/vad_sp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.VadInstT_ = type { i32, [4 x i32], %struct.WebRtcSpl_State48khzTo8khz, [12 x i16], [12 x i16], [12 x i16], [12 x i16], i32, i16, i16, [96 x i16], [96 x i16], [6 x i16], [5 x i16], [5 x i16], [4 x i16], [3 x i16], [3 x i16], [3 x i16], [3 x i16], i32 }
%struct.WebRtcSpl_State48khzTo8khz = type { [8 x i32], [16 x i32], [8 x i32], [8 x i32] }

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcVad_Downsampling(i16* nocapture readonly, i16* nocapture, i32* nocapture, i64) local_unnamed_addr #0 {
  %5 = load i32, i32* %2, align 4
  %6 = getelementptr inbounds i32, i32* %2, i64 1
  %7 = load i32, i32* %6, align 4
  %8 = lshr i64 %3, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %50, label %10

10:                                               ; preds = %4, %10
  %11 = phi i64 [ %48, %10 ], [ 0, %4 ]
  %12 = phi i32 [ %47, %10 ], [ %7, %4 ]
  %13 = phi i32 [ %30, %10 ], [ %5, %4 ]
  %14 = phi i16* [ %42, %10 ], [ %0, %4 ]
  %15 = phi i16* [ %39, %10 ], [ %1, %4 ]
  %16 = lshr i32 %13, 1
  %17 = load i16, i16* %14, align 2
  %18 = sext i16 %17 to i32
  %19 = mul nsw i32 %18, 5243
  %20 = lshr i32 %19, 14
  %21 = add nuw i32 %20, %16
  %22 = trunc i32 %21 to i16
  store i16 %22, i16* %15, align 2
  %23 = getelementptr inbounds i16, i16* %14, i64 1
  %24 = load i16, i16* %14, align 2
  %25 = sext i16 %24 to i32
  %26 = shl i32 %21, 16
  %27 = ashr exact i32 %26, 16
  %28 = mul nsw i32 %27, 5243
  %29 = ashr i32 %28, 12
  %30 = sub nsw i32 %25, %29
  %31 = lshr i32 %12, 1
  %32 = load i16, i16* %23, align 2
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %33, 1392
  %35 = ashr i32 %34, 14
  %36 = add i32 %35, %31
  %37 = shl i32 %36, 16
  %38 = ashr exact i32 %37, 16
  %39 = getelementptr inbounds i16, i16* %15, i64 1
  %40 = add nsw i32 %38, %27
  %41 = trunc i32 %40 to i16
  store i16 %41, i16* %15, align 2
  %42 = getelementptr inbounds i16, i16* %14, i64 2
  %43 = load i16, i16* %23, align 2
  %44 = sext i16 %43 to i32
  %45 = mul nsw i32 %38, 1392
  %46 = ashr i32 %45, 12
  %47 = sub nsw i32 %44, %46
  %48 = add nuw nsw i64 %11, 1
  %49 = icmp eq i64 %48, %8
  br i1 %49, label %50, label %10

50:                                               ; preds = %10, %4
  %51 = phi i32 [ %5, %4 ], [ %30, %10 ]
  %52 = phi i32 [ %7, %4 ], [ %47, %10 ]
  store i32 %51, i32* %2, align 4
  store i32 %52, i32* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i16 @WebRtcVad_FindMinimum(%struct.VadInstT_*, i16 signext, i32) local_unnamed_addr #0 {
  %4 = shl i32 %2, 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.VadInstT_, %struct.VadInstT_* %0, i64 0, i32 10, i64 %5
  %7 = getelementptr inbounds %struct.VadInstT_, %struct.VadInstT_* %0, i64 0, i32 11, i64 %5
  %8 = getelementptr inbounds i16, i16* %6, i64 15
  %9 = getelementptr inbounds i16, i16* %7, i64 15
  br label %10

10:                                               ; preds = %94, %3
  %11 = phi i64 [ 0, %3 ], [ %95, %94 ]
  %12 = sub nsw i64 7, %11
  %13 = lshr i64 %12, 3
  %14 = add nuw nsw i64 %13, 1
  %15 = sub nsw i64 15, %11
  %16 = getelementptr inbounds i16, i16* %6, i64 %11
  %17 = load i16, i16* %16, align 2
  %18 = icmp eq i16 %17, 100
  br i1 %18, label %19, label %81

19:                                               ; preds = %10
  %20 = icmp ult i64 %11, 15
  br i1 %20, label %21, label %93

21:                                               ; preds = %19
  %22 = icmp ult i64 %15, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %79, %21
  %24 = phi i64 [ %11, %21 ], [ %27, %79 ]
  br label %83

25:                                               ; preds = %21
  %26 = and i64 %15, -8
  %27 = add i64 %11, %26
  %28 = and i64 %14, 1
  %29 = icmp eq i64 %13, 0
  br i1 %29, label %63, label %30

30:                                               ; preds = %25
  %31 = sub nuw nsw i64 %14, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %60, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %61, %32 ]
  %35 = add i64 %11, %33
  %36 = add nuw nsw i64 %35, 1
  %37 = getelementptr inbounds i16, i16* %7, i64 %36
  %38 = bitcast i16* %37 to <8 x i16>*
  %39 = load <8 x i16>, <8 x i16>* %38, align 2
  %40 = getelementptr inbounds i16, i16* %7, i64 %35
  %41 = bitcast i16* %40 to <8 x i16>*
  store <8 x i16> %39, <8 x i16>* %41, align 2
  %42 = getelementptr inbounds i16, i16* %6, i64 %36
  %43 = bitcast i16* %42 to <8 x i16>*
  %44 = load <8 x i16>, <8 x i16>* %43, align 2
  %45 = getelementptr inbounds i16, i16* %6, i64 %35
  %46 = bitcast i16* %45 to <8 x i16>*
  store <8 x i16> %44, <8 x i16>* %46, align 2
  %47 = or i64 %33, 8
  %48 = add i64 %11, %47
  %49 = add nuw nsw i64 %48, 1
  %50 = getelementptr inbounds i16, i16* %7, i64 %49
  %51 = bitcast i16* %50 to <8 x i16>*
  %52 = load <8 x i16>, <8 x i16>* %51, align 2
  %53 = getelementptr inbounds i16, i16* %7, i64 %48
  %54 = bitcast i16* %53 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %54, align 2
  %55 = getelementptr inbounds i16, i16* %6, i64 %49
  %56 = bitcast i16* %55 to <8 x i16>*
  %57 = load <8 x i16>, <8 x i16>* %56, align 2
  %58 = getelementptr inbounds i16, i16* %6, i64 %48
  %59 = bitcast i16* %58 to <8 x i16>*
  store <8 x i16> %57, <8 x i16>* %59, align 2
  %60 = add i64 %33, 16
  %61 = add i64 %34, -2
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %32, !llvm.loop !2

63:                                               ; preds = %32, %25
  %64 = phi i64 [ 0, %25 ], [ %60, %32 ]
  %65 = icmp eq i64 %28, 0
  br i1 %65, label %79, label %66

66:                                               ; preds = %63
  %67 = add i64 %11, %64
  %68 = add nuw nsw i64 %67, 1
  %69 = getelementptr inbounds i16, i16* %7, i64 %68
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2
  %72 = getelementptr inbounds i16, i16* %7, i64 %67
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %73, align 2
  %74 = getelementptr inbounds i16, i16* %6, i64 %68
  %75 = bitcast i16* %74 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2
  %77 = getelementptr inbounds i16, i16* %6, i64 %67
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %78, align 2
  br label %79

79:                                               ; preds = %63, %66
  %80 = icmp eq i64 %15, %26
  br i1 %80, label %93, label %23

81:                                               ; preds = %10
  %82 = add i16 %17, 1
  store i16 %82, i16* %16, align 2
  br label %94

83:                                               ; preds = %23, %83
  %84 = phi i64 [ %85, %83 ], [ %24, %23 ]
  %85 = add nuw nsw i64 %84, 1
  %86 = getelementptr inbounds i16, i16* %7, i64 %85
  %87 = load i16, i16* %86, align 2
  %88 = getelementptr inbounds i16, i16* %7, i64 %84
  store i16 %87, i16* %88, align 2
  %89 = getelementptr inbounds i16, i16* %6, i64 %85
  %90 = load i16, i16* %89, align 2
  %91 = getelementptr inbounds i16, i16* %6, i64 %84
  store i16 %90, i16* %91, align 2
  %92 = icmp eq i64 %85, 15
  br i1 %92, label %93, label %83, !llvm.loop !4

93:                                               ; preds = %83, %79, %19
  store i16 101, i16* %8, align 2
  store i16 10000, i16* %9, align 2
  br label %94

94:                                               ; preds = %81, %93
  %95 = add nuw nsw i64 %11, 1
  %96 = icmp eq i64 %95, 16
  br i1 %96, label %97, label %10

97:                                               ; preds = %94
  %98 = getelementptr inbounds i16, i16* %7, i64 7
  %99 = load i16, i16* %98, align 2
  %100 = icmp sgt i16 %99, %1
  br i1 %100, label %101, label %132

101:                                              ; preds = %97
  %102 = getelementptr inbounds i16, i16* %7, i64 3
  %103 = load i16, i16* %102, align 2
  %104 = icmp sgt i16 %103, %1
  br i1 %104, label %105, label %118

105:                                              ; preds = %101
  %106 = getelementptr inbounds i16, i16* %7, i64 1
  %107 = load i16, i16* %106, align 2
  %108 = icmp sgt i16 %107, %1
  br i1 %108, label %109, label %113

109:                                              ; preds = %105
  %110 = load i16, i16* %7, align 2
  %111 = icmp sle i16 %110, %1
  %112 = zext i1 %111 to i32
  br label %166

113:                                              ; preds = %105
  %114 = getelementptr inbounds i16, i16* %7, i64 2
  %115 = load i16, i16* %114, align 2
  %116 = icmp sgt i16 %115, %1
  %117 = select i1 %116, i32 2, i32 3
  br label %166

118:                                              ; preds = %101
  %119 = getelementptr inbounds i16, i16* %7, i64 5
  %120 = load i16, i16* %119, align 2
  %121 = icmp sgt i16 %120, %1
  br i1 %121, label %122, label %127

122:                                              ; preds = %118
  %123 = getelementptr inbounds i16, i16* %7, i64 4
  %124 = load i16, i16* %123, align 2
  %125 = icmp sgt i16 %124, %1
  %126 = select i1 %125, i32 4, i32 5
  br label %166

127:                                              ; preds = %118
  %128 = getelementptr inbounds i16, i16* %7, i64 6
  %129 = load i16, i16* %128, align 2
  %130 = icmp sgt i16 %129, %1
  %131 = select i1 %130, i32 6, i32 7
  br label %166

132:                                              ; preds = %97
  %133 = load i16, i16* %9, align 2
  %134 = icmp sgt i16 %133, %1
  br i1 %134, label %135, label %184

135:                                              ; preds = %132
  %136 = getelementptr inbounds i16, i16* %7, i64 11
  %137 = load i16, i16* %136, align 2
  %138 = icmp sgt i16 %137, %1
  br i1 %138, label %139, label %153

139:                                              ; preds = %135
  %140 = getelementptr inbounds i16, i16* %7, i64 9
  %141 = load i16, i16* %140, align 2
  %142 = icmp sgt i16 %141, %1
  br i1 %142, label %143, label %148

143:                                              ; preds = %139
  %144 = getelementptr inbounds i16, i16* %7, i64 8
  %145 = load i16, i16* %144, align 2
  %146 = icmp sgt i16 %145, %1
  %147 = select i1 %146, i32 8, i32 9
  br label %166

148:                                              ; preds = %139
  %149 = getelementptr inbounds i16, i16* %7, i64 10
  %150 = load i16, i16* %149, align 2
  %151 = icmp sgt i16 %150, %1
  %152 = select i1 %151, i32 10, i32 11
  br label %166

153:                                              ; preds = %135
  %154 = getelementptr inbounds i16, i16* %7, i64 13
  %155 = load i16, i16* %154, align 2
  %156 = icmp sgt i16 %155, %1
  br i1 %156, label %157, label %162

157:                                              ; preds = %153
  %158 = getelementptr inbounds i16, i16* %7, i64 12
  %159 = load i16, i16* %158, align 2
  %160 = icmp sgt i16 %159, %1
  %161 = select i1 %160, i32 12, i32 13
  br label %166

162:                                              ; preds = %153
  %163 = getelementptr inbounds i16, i16* %7, i64 14
  %164 = load i16, i16* %163, align 2
  %165 = icmp sgt i16 %164, %1
  br i1 %165, label %166, label %179

166:                                              ; preds = %162, %109, %113, %122, %127, %143, %148, %157
  %167 = phi i32 [ %161, %157 ], [ %152, %148 ], [ %147, %143 ], [ %131, %127 ], [ %126, %122 ], [ %117, %113 ], [ %112, %109 ], [ 14, %162 ]
  %168 = zext i32 %167 to i64
  br label %169

169:                                              ; preds = %166, %169
  %170 = phi i64 [ 15, %166 ], [ %171, %169 ]
  %171 = add nsw i64 %170, -1
  %172 = getelementptr inbounds i16, i16* %7, i64 %171
  %173 = load i16, i16* %172, align 2
  %174 = getelementptr inbounds i16, i16* %7, i64 %170
  store i16 %173, i16* %174, align 2
  %175 = getelementptr inbounds i16, i16* %6, i64 %171
  %176 = load i16, i16* %175, align 2
  %177 = getelementptr inbounds i16, i16* %6, i64 %170
  store i16 %176, i16* %177, align 2
  %178 = icmp sgt i64 %171, %168
  br i1 %178, label %169, label %179

179:                                              ; preds = %169, %162
  %180 = phi i32 [ 15, %162 ], [ %167, %169 ]
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds i16, i16* %7, i64 %181
  store i16 %1, i16* %182, align 2
  %183 = getelementptr inbounds i16, i16* %6, i64 %181
  store i16 1, i16* %183, align 2
  br label %184

184:                                              ; preds = %132, %179
  %185 = getelementptr inbounds %struct.VadInstT_, %struct.VadInstT_* %0, i64 0, i32 7
  %186 = load i32, i32* %185, align 4
  %187 = icmp sgt i32 %186, 2
  br i1 %187, label %188, label %190

188:                                              ; preds = %184
  %189 = getelementptr inbounds i16, i16* %7, i64 2
  br label %196

190:                                              ; preds = %184
  %191 = icmp sgt i32 %186, 0
  br i1 %191, label %196, label %192

192:                                              ; preds = %190
  %193 = sext i32 %2 to i64
  %194 = getelementptr inbounds %struct.VadInstT_, %struct.VadInstT_* %0, i64 0, i32 12, i64 %193
  %195 = load i16, i16* %194, align 2
  br label %205

196:                                              ; preds = %190, %188
  %197 = phi i16* [ %189, %188 ], [ %7, %190 ]
  %198 = load i16, i16* %197, align 2
  %199 = sext i32 %2 to i64
  %200 = getelementptr inbounds %struct.VadInstT_, %struct.VadInstT_* %0, i64 0, i32 12, i64 %199
  %201 = load i16, i16* %200, align 2
  %202 = icmp slt i16 %198, %201
  %203 = select i1 %202, i32 6553, i32 32439
  %204 = sext i16 %198 to i32
  br label %205

205:                                              ; preds = %192, %196
  %206 = phi i64 [ %193, %192 ], [ %199, %196 ]
  %207 = phi i16 [ %195, %192 ], [ %201, %196 ]
  %208 = phi i32 [ 1600, %192 ], [ %204, %196 ]
  %209 = phi i32 [ 0, %192 ], [ %203, %196 ]
  %210 = add nuw nsw i32 %209, 1
  %211 = getelementptr inbounds %struct.VadInstT_, %struct.VadInstT_* %0, i64 0, i32 12, i64 %206
  %212 = sext i16 %207 to i32
  %213 = mul nsw i32 %210, %212
  %214 = xor i32 %209, 32767
  %215 = mul nsw i32 %214, %208
  %216 = add i32 %215, 16384
  %217 = add i32 %216, %213
  %218 = lshr i32 %217, 15
  %219 = trunc i32 %218 to i16
  store i16 %219, i16* %211, align 2
  ret i16 %219
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
