; ModuleID = '../../net/ssl/ssl_server_config.cc'
source_filename = "../../net/ssl/ssl_server_config.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::SSLServerConfig" = type { i16, i16, i8, %"class.std::__1::vector", i8, %"class.absl::optional", %"class.absl::optional", %"class.std::__1::vector.1", i32, %"class.std::__1::vector.8", %"class.net::ClientCertVerifier"*, %"class.std::__1::vector.21", %"class.base::flat_map", %"class.std::__1::vector.35" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i16*, i16*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i16* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i16 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i32* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.12 }
%union.anon.12 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::basic_string"* }
%"class.net::ClientCertVerifier" = type opaque
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.28" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.30" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::vector.35" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { i8*, i8*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__16vectorINS_4pairIN3net9NextProtoENS0_IhNS_9allocatorIhEEEEEENS4_IS7_EEEC2ERKS9_ = comdat any

@_ZN3net21kDefaultSSLVersionMinE = external local_unnamed_addr constant i16, align 2
@_ZN3net21kDefaultSSLVersionMaxE = external local_unnamed_addr constant i16, align 2

@_ZN3net15SSLServerConfigC1Ev = hidden unnamed_addr alias void (%"struct.net::SSLServerConfig"*), void (%"struct.net::SSLServerConfig"*)* @_ZN3net15SSLServerConfigC2Ev
@_ZN3net15SSLServerConfigC1ERKS0_ = hidden unnamed_addr alias void (%"struct.net::SSLServerConfig"*, %"struct.net::SSLServerConfig"*), void (%"struct.net::SSLServerConfig"*, %"struct.net::SSLServerConfig"*)* @_ZN3net15SSLServerConfigC2ERKS0_
@_ZN3net15SSLServerConfigD1Ev = hidden unnamed_addr alias void (%"struct.net::SSLServerConfig"*), void (%"struct.net::SSLServerConfig"*)* @_ZN3net15SSLServerConfigD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15SSLServerConfigC2Ev(%"struct.net::SSLServerConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 0
  %3 = load i16, i16* @_ZN3net21kDefaultSSLVersionMinE, align 2
  store i16 %3, i16* %2, align 8
  %4 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 1
  %5 = load i16, i16* @_ZN3net21kDefaultSSLVersionMaxE, align 2
  store i16 %5, i16* %4, align 2
  %6 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 2
  %9 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 2
  %10 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 9
  %12 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 25, i1 false)
  %13 = bitcast %"class.std::__1::vector.1"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 28, i1 false)
  %14 = bitcast %"class.std::__1::vector.8"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 104, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15SSLServerConfigC2ERKS0_(%"struct.net::SSLServerConfig"*, %"struct.net::SSLServerConfig"* dereferenceable(184)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::SSLServerConfig"* %0 to i8*
  %4 = bitcast %"struct.net::SSLServerConfig"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 5, i1 false)
  %5 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %1, i64 0, i32 3
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #6
  %8 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %1, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 1
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = icmp slt i64 %13, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #7
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #8
  %22 = bitcast i8* %21 to i16*
  %23 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 3, i32 0, i32 1
  %24 = bitcast i16** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds i16, i16* %22, i64 %14
  %27 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store i16* %26, i16** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast i16** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint i16* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = lshr exact i64 %34, 1
  %38 = bitcast i16* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %21, i8* align 2 %38, i64 %34, i1 false) #6
  %39 = getelementptr inbounds i16, i16* %22, i64 %37
  %40 = ptrtoint i16* %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %2, %41
  %44 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 4
  %45 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %1, i64 0, i32 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 10, i1 false)
  %46 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 7
  %47 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %1, i64 0, i32 7
  %48 = bitcast %"class.std::__1::vector.1"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #6
  %49 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %1, i64 0, i32 7, i32 0, i32 1
  %50 = bitcast i32** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.1"* %47 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = ashr exact i64 %54, 2
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %84, label %57

57:                                               ; preds = %43
  %58 = icmp ugt i64 %55, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::vector.1"* %46 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #7
  unreachable

61:                                               ; preds = %57
  %62 = tail call i8* @_Znwm(i64 %54) #8
  %63 = bitcast i8* %62 to i32*
  %64 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 7, i32 0, i32 1
  %65 = bitcast i32** %64 to i8**
  store i8* %62, i8** %65, align 8
  %66 = bitcast %"class.std::__1::vector.1"* %46 to i8**
  store i8* %62, i8** %66, align 8
  %67 = getelementptr inbounds i32, i32* %63, i64 %55
  %68 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  store i32* %67, i32** %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %47, i64 0, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = load i64, i64* %50, align 8
  %72 = bitcast i32** %64 to i64*
  %73 = ptrtoint i8* %62 to i64
  %74 = ptrtoint i32* %70 to i64
  %75 = sub i64 %71, %74
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %77, label %82

77:                                               ; preds = %61
  %78 = lshr exact i64 %75, 2
  %79 = bitcast i32* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %62, i8* align 4 %79, i64 %75, i1 false) #6
  %80 = getelementptr inbounds i32, i32* %63, i64 %78
  %81 = ptrtoint i32* %80 to i64
  br label %82

82:                                               ; preds = %77, %61
  %83 = phi i64 [ %81, %77 ], [ %73, %61 ]
  store i64 %83, i64* %72, align 8
  br label %84

84:                                               ; preds = %43, %82
  %85 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 8
  %86 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %1, i64 0, i32 8
  %87 = load i32, i32* %86, align 8
  store i32 %87, i32* %85, align 8
  %88 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 9
  %89 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %1, i64 0, i32 9
  %90 = bitcast %"class.std::__1::vector.8"* %88 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 24, i1 false) #6
  %91 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %1, i64 0, i32 9, i32 0, i32 1
  %92 = bitcast %"class.std::__1::basic_string"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.std::__1::vector.8"* %89 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = sdiv exact i64 %96, 24
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %140, label %99

99:                                               ; preds = %84
  %100 = icmp ugt i64 %97, 768614336404564650
  br i1 %100, label %101, label %103

101:                                              ; preds = %99
  %102 = bitcast %"class.std::__1::vector.8"* %88 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %102) #7
  unreachable

103:                                              ; preds = %99
  %104 = tail call i8* @_Znwm(i64 %96) #8
  %105 = bitcast i8* %104 to %"class.std::__1::basic_string"*
  %106 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 9, i32 0, i32 1
  %107 = bitcast %"class.std::__1::basic_string"** %106 to i8**
  store i8* %104, i8** %107, align 8
  %108 = bitcast %"class.std::__1::vector.8"* %88 to i8**
  store i8* %104, i8** %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 %97
  %110 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %109, %"class.std::__1::basic_string"** %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %89, i64 0, i32 0, i32 0
  %112 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %111, align 8
  %113 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %91, align 8
  %114 = bitcast %"class.std::__1::basic_string"** %106 to i64*
  %115 = ptrtoint i8* %104 to i64
  %116 = icmp eq %"class.std::__1::basic_string"* %112, %113
  br i1 %116, label %138, label %117

117:                                              ; preds = %103, %132
  %118 = phi %"class.std::__1::basic_string"* [ %134, %132 ], [ %105, %103 ]
  %119 = phi %"class.std::__1::basic_string"* [ %133, %132 ], [ %112, %103 ]
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %127, label %124

124:                                              ; preds = %117
  %125 = bitcast %"class.std::__1::basic_string"* %118 to i8*
  %126 = bitcast %"class.std::__1::basic_string"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 24, i1 false) #6
  br label %132

127:                                              ; preds = %117
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %118, i8* %129, i64 %131) #6
  br label %132

132:                                              ; preds = %127, %124
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 1
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 1
  %135 = icmp eq %"class.std::__1::basic_string"* %133, %113
  br i1 %135, label %136, label %117

136:                                              ; preds = %132
  %137 = ptrtoint %"class.std::__1::basic_string"* %134 to i64
  br label %138

138:                                              ; preds = %136, %103
  %139 = phi i64 [ %115, %103 ], [ %137, %136 ]
  store i64 %139, i64* %114, align 8
  br label %140

140:                                              ; preds = %84, %138
  %141 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 10
  %142 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %1, i64 0, i32 10
  %143 = bitcast %"class.net::ClientCertVerifier"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.net::ClientCertVerifier"** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 11
  %147 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %1, i64 0, i32 11
  %148 = bitcast %"class.std::__1::vector.21"* %146 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 24, i1 false) #6
  %149 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %1, i64 0, i32 11, i32 0, i32 1
  %150 = bitcast i32** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::vector.21"* %147 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %151, %153
  %155 = ashr exact i64 %154, 2
  %156 = icmp eq i64 %154, 0
  br i1 %156, label %184, label %157

157:                                              ; preds = %140
  %158 = icmp ugt i64 %155, 4611686018427387903
  br i1 %158, label %159, label %161

159:                                              ; preds = %157
  %160 = bitcast %"class.std::__1::vector.21"* %146 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %160) #7
  unreachable

161:                                              ; preds = %157
  %162 = tail call i8* @_Znwm(i64 %154) #8
  %163 = bitcast i8* %162 to i32*
  %164 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 11, i32 0, i32 1
  %165 = bitcast i32** %164 to i8**
  store i8* %162, i8** %165, align 8
  %166 = bitcast %"class.std::__1::vector.21"* %146 to i8**
  store i8* %162, i8** %166, align 8
  %167 = getelementptr inbounds i32, i32* %163, i64 %155
  %168 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  store i32* %167, i32** %168, align 8
  %169 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %147, i64 0, i32 0, i32 0
  %170 = load i32*, i32** %169, align 8
  %171 = load i64, i64* %150, align 8
  %172 = bitcast i32** %164 to i64*
  %173 = ptrtoint i8* %162 to i64
  %174 = ptrtoint i32* %170 to i64
  %175 = sub i64 %171, %174
  %176 = icmp sgt i64 %175, 0
  br i1 %176, label %177, label %182

177:                                              ; preds = %161
  %178 = lshr exact i64 %175, 2
  %179 = bitcast i32* %170 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %162, i8* align 4 %179, i64 %175, i1 false) #6
  %180 = getelementptr inbounds i32, i32* %163, i64 %178
  %181 = ptrtoint i32* %180 to i64
  br label %182

182:                                              ; preds = %177, %161
  %183 = phi i64 [ %181, %177 ], [ %173, %161 ]
  store i64 %183, i64* %172, align 8
  br label %184

184:                                              ; preds = %140, %182
  %185 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 12, i32 0, i32 0
  %186 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %1, i64 0, i32 12, i32 0, i32 0
  tail call void @_ZNSt3__16vectorINS_4pairIN3net9NextProtoENS0_IhNS_9allocatorIhEEEEEENS4_IS7_EEEC2ERKS9_(%"class.std::__1::vector.28"* %185, %"class.std::__1::vector.28"* dereferenceable(24) %186) #6
  %187 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 13
  %188 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %1, i64 0, i32 13
  %189 = bitcast %"class.std::__1::vector.35"* %187 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 24, i1 false) #6
  %190 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %1, i64 0, i32 13, i32 0, i32 1
  %191 = bitcast i8** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.std::__1::vector.35"* %188 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %192, %194
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %219, label %197

197:                                              ; preds = %184
  %198 = icmp slt i64 %195, 0
  br i1 %198, label %199, label %201

199:                                              ; preds = %197
  %200 = bitcast %"class.std::__1::vector.35"* %187 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %200) #7
  unreachable

201:                                              ; preds = %197
  %202 = tail call i8* @_Znwm(i64 %195) #8
  %203 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 13, i32 0, i32 1
  store i8* %202, i8** %203, align 8
  %204 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %187, i64 0, i32 0, i32 0
  store i8* %202, i8** %204, align 8
  %205 = getelementptr inbounds i8, i8* %202, i64 %195
  %206 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  store i8* %205, i8** %206, align 8
  %207 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %188, i64 0, i32 0, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = load i64, i64* %191, align 8
  %210 = bitcast i8** %203 to i64*
  %211 = ptrtoint i8* %208 to i64
  %212 = sub i64 %209, %211
  %213 = icmp sgt i64 %212, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %201
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %202, i8* align 1 %208, i64 %212, i1 false) #6
  %215 = getelementptr inbounds i8, i8* %202, i64 %212
  br label %216

216:                                              ; preds = %214, %201
  %217 = phi i8* [ %215, %214 ], [ %202, %201 ]
  %218 = ptrtoint i8* %217 to i64
  store i64 %218, i64* %210, align 8
  br label %219

219:                                              ; preds = %184, %216
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15SSLServerConfigD2Ev(%"struct.net::SSLServerConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 13, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 13, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_ZdlPv(i8* nonnull %3) #8
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 12, i32 0
  %11 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = icmp eq %"struct.std::__1::pair"* %12, null
  br i1 %13, label %36, label %14

14:                                               ; preds = %9
  %15 = bitcast %"struct.std::__1::pair"* %12 to i8*
  %16 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1
  %17 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %16, align 8
  %18 = icmp eq %"struct.std::__1::pair"* %17, %12
  br i1 %18, label %34, label %19

19:                                               ; preds = %14, %29
  %20 = phi %"struct.std::__1::pair"* [ %21, %29 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 -1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 -1, i32 1, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = ptrtoint i8* %23 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 -1, i32 1, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  store i64 %26, i64* %28, align 8
  tail call void @_ZdlPv(i8* nonnull %23) #8
  br label %29

29:                                               ; preds = %25, %19
  %30 = icmp eq %"struct.std::__1::pair"* %21, %12
  br i1 %30, label %31, label %19

31:                                               ; preds = %29
  %32 = bitcast %"class.base::internal::flat_tree"* %10 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %14
  %35 = phi i8* [ %33, %31 ], [ %15, %14 ]
  store %"struct.std::__1::pair"* %12, %"struct.std::__1::pair"** %16, align 8
  tail call void @_ZdlPv(i8* %35) #8
  br label %36

36:                                               ; preds = %9, %34
  %37 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 11, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = icmp eq i32* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = ptrtoint i32* %38 to i64
  %42 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 11, i32 0, i32 1
  %43 = bitcast i32** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = bitcast i32* %38 to i8*
  tail call void @_ZdlPv(i8* %44) #8
  br label %45

45:                                               ; preds = %36, %40
  %46 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 9
  %47 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %47, align 8
  %49 = icmp eq %"class.std::__1::basic_string"* %48, null
  br i1 %49, label %72, label %50

50:                                               ; preds = %45
  %51 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %52 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 9, i32 0, i32 1
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = icmp eq %"class.std::__1::basic_string"* %53, %48
  br i1 %54, label %70, label %55

55:                                               ; preds = %50, %65
  %56 = phi %"class.std::__1::basic_string"* [ %57, %65 ], [ %53, %50 ]
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 -1
  %58 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  tail call void @_ZdlPv(i8* %64) #8
  br label %65

65:                                               ; preds = %62, %55
  %66 = icmp eq %"class.std::__1::basic_string"* %57, %48
  br i1 %66, label %67, label %55

67:                                               ; preds = %65
  %68 = bitcast %"class.std::__1::vector.8"* %46 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %50
  %71 = phi i8* [ %69, %67 ], [ %51, %50 ]
  store %"class.std::__1::basic_string"* %48, %"class.std::__1::basic_string"** %52, align 8
  tail call void @_ZdlPv(i8* %71) #8
  br label %72

72:                                               ; preds = %45, %70
  %73 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 7, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = icmp eq i32* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %72
  %77 = ptrtoint i32* %74 to i64
  %78 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 7, i32 0, i32 1
  %79 = bitcast i32** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = bitcast i32* %74 to i8*
  tail call void @_ZdlPv(i8* %80) #8
  br label %81

81:                                               ; preds = %72, %76
  %82 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 3, i32 0, i32 0
  %83 = load i16*, i16** %82, align 8
  %84 = icmp eq i16* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %81
  %86 = ptrtoint i16* %83 to i64
  %87 = getelementptr inbounds %"struct.net::SSLServerConfig", %"struct.net::SSLServerConfig"* %0, i64 0, i32 3, i32 0, i32 1
  %88 = bitcast i16** %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = bitcast i16* %83 to i8*
  tail call void @_ZdlPv(i8* %89) #8
  br label %90

90:                                               ; preds = %81, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIN3net9NextProtoENS0_IhNS_9allocatorIhEEEEEENS4_IS7_EEEC2ERKS9_(%"class.std::__1::vector.28"*, %"class.std::__1::vector.28"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.28"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #6
  %4 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::pair"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.28"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %78, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 576460752303423487
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.28"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #7
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #8
  %18 = bitcast i8* %17 to %"struct.std::__1::pair"*
  %19 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"struct.std::__1::pair"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.28"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair"* %22, %"struct.std::__1::pair"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %1, i64 0, i32 0, i32 0
  %25 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %24, align 8
  %26 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %27 = bitcast %"struct.std::__1::pair"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"struct.std::__1::pair"* %25, %26
  br i1 %29, label %76, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"struct.std::__1::pair"*
  br label %32

32:                                               ; preds = %70, %30
  %33 = phi %"struct.std::__1::pair"* [ %72, %70 ], [ %31, %30 ]
  %34 = phi %"struct.std::__1::pair"* [ %71, %70 ], [ %25, %30 ]
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 0
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 0, i32 0
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %35, align 8
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 0, i32 1
  %40 = bitcast %"class.std::__1::vector.35"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #6
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 0, i32 1, i32 0, i32 1
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.35"* %39 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %70, label %48

48:                                               ; preds = %32
  %49 = icmp slt i64 %46, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::vector.35"* %38 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #7
  unreachable

52:                                               ; preds = %48
  %53 = tail call i8* @_Znwm(i64 %46) #8
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 1, i32 0, i32 1
  store i8* %53, i8** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %38, i64 0, i32 0, i32 0
  store i8* %53, i8** %55, align 8
  %56 = getelementptr inbounds i8, i8* %53, i64 %46
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i8* %56, i8** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %39, i64 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = load i64, i64* %42, align 8
  %61 = bitcast i8** %54 to i64*
  %62 = ptrtoint i8* %59 to i64
  %63 = sub i64 %60, %62
  %64 = icmp sgt i64 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %52
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %53, i8* align 1 %59, i64 %63, i1 false) #6
  %66 = getelementptr inbounds i8, i8* %53, i64 %63
  br label %67

67:                                               ; preds = %65, %52
  %68 = phi i8* [ %66, %65 ], [ %53, %52 ]
  %69 = ptrtoint i8* %68 to i64
  store i64 %69, i64* %61, align 8
  br label %70

70:                                               ; preds = %67, %32
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 1
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 1
  %73 = icmp eq %"struct.std::__1::pair"* %71, %26
  br i1 %73, label %74, label %32

74:                                               ; preds = %70
  %75 = ptrtoint %"struct.std::__1::pair"* %72 to i64
  br label %76

76:                                               ; preds = %16, %74
  %77 = phi i64 [ %28, %16 ], [ %75, %74 ]
  store i64 %77, i64* %27, align 8
  br label %78

78:                                               ; preds = %2, %76
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
