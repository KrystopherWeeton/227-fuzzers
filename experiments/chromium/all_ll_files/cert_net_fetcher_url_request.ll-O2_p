; ModuleID = '../../net/cert_net/cert_net_fetcher_url_request.cc'
source_filename = "../../net/cert_net/cert_net_fetcher_url_request.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::CertNetFetcherURLRequest::RequestParams" = type { %class.GURL, i32, i64, %"class.base::TimeDelta" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.base::TimeDelta" = type { i64 }
%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest" = type { %"class.std::__1::map.402", %"class.net::URLRequestContext"* }
%"class.std::__1::map.402" = type { %"class.std::__1::__tree.403" }
%"class.std::__1::__tree.403" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.404", %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i64 }
%"class.net::URLRequestContext" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.net::NetLog"*, %"class.net::HostResolver"*, %"class.net::CertVerifier"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::ProxyResolutionService"*, %"class.net::ProxyDelegate"*, %"class.net::SSLConfigService"*, %"class.net::NetworkDelegate"*, %"class.net::HttpServerProperties"*, %"class.net::HttpUserAgentSettings"*, %"class.net::CookieStore"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SCTAuditingDelegate"*, %"class.net::HttpTransactionFactory"*, %"class.net::URLRequestJobFactory"*, %"class.net::URLRequestThrottlerManager"*, %"class.net::QuicContext"*, %"class.net::NetworkQualityEstimator"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::FtpAuthCache"*, %"class.std::__1::unique_ptr.259", i8, i8, i8, %"class.std::__1::basic_string" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.37", %"class.std::__1::vector.44" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.39" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.46" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::CertVerifier" = type opaque
%"class.net::HttpAuthHandlerFactory" = type opaque
%"class.net::ProxyResolutionService" = type opaque
%"class.net::ProxyDelegate" = type opaque
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.51", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.53" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.net::NetworkDelegate" = type { i32 (...)** }
%"class.net::HttpServerProperties" = type { %"class.net::BrokenAlternativeServices::Delegate", %"class.base::TickClock"*, %"class.base::Clock"*, i8, i8, i8, %"class.std::__1::unique_ptr.58", %"class.net::HttpServerProperties::ServerInfoMap", %"class.net::BrokenAlternativeServices", %"class.net::IPAddress", %"class.base::flat_map", %"class.std::__1::vector.141", %"class.base::MRUCache.148", %"class.base::flat_map.168", i64, %"class.base::OneShotTimer" }
%"class.net::BrokenAlternativeServices::Delegate" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.net::HttpServerPropertiesManager"* }
%"class.net::HttpServerPropertiesManager" = type opaque
%"class.net::HttpServerProperties::ServerInfoMap" = type { %"class.base::MRUCache" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map.68", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.64" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::map.68" = type { %"class.std::__1::__tree.69" }
%"class.std::__1::__tree.69" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.net::BrokenAlternativeServices" = type { %"class.net::BrokenAlternativeServices::Delegate"*, %"class.base::TickClock"*, %"class.std::__1::list.79", %"class.std::__1::map.86", %"class.std::__1::set", %"class.net::RecentlyBrokenAlternativeServices", %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.133" }
%"class.std::__1::list.79" = type { %"class.std::__1::__list_imp.80" }
%"class.std::__1::__list_imp.80" = type { %"struct.std::__1::__list_node_base.81", %"class.std::__1::__compressed_pair.82" }
%"struct.std::__1::__list_node_base.81" = type { %"struct.std::__1::__list_node_base.81"*, %"struct.std::__1::__list_node_base.81"* }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::map.86" = type { %"class.std::__1::__tree.87" }
%"class.std::__1::__tree.87" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.97" }
%"class.std::__1::__tree.97" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.net::RecentlyBrokenAlternativeServices" = type { %"class.base::MRUCache.104" }
%"class.base::MRUCache.104" = type { %"class.base::MRUCacheBase.105" }
%"class.base::MRUCacheBase.105" = type { i32 (...)**, %"class.std::__1::list.106", %"class.std::__1::map.113", i64 }
%"class.std::__1::list.106" = type { %"class.std::__1::__list_imp.107" }
%"class.std::__1::__list_imp.107" = type { %"struct.std::__1::__list_node_base.108", %"class.std::__1::__compressed_pair.109" }
%"struct.std::__1::__list_node_base.108" = type { %"struct.std::__1::__list_node_base.108"*, %"struct.std::__1::__list_node_base.108"* }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::map.113" = type { %"class.std::__1::__tree.114" }
%"class.std::__1::__tree.114" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::WeakPtrFactory.133" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.124 }
%class.scoped_refptr.124 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.125", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.125" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.126" }
%"struct.std::__1::atomic.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__atomic_base.128" }
%"struct.std::__1::__atomic_base.128" = type { %"struct.std::__1::__cxx_atomic_impl.129" }
%"struct.std::__1::__cxx_atomic_impl.129" = type { %"struct.std::__1::__cxx_atomic_base_impl.130" }
%"struct.std::__1::__cxx_atomic_base_impl.130" = type { i8 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.134" }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.136" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.std::__1::basic_string"* }
%"class.base::MRUCache.148" = type { %"class.base::MRUCacheBase.149" }
%"class.base::MRUCacheBase.149" = type { i32 (...)**, %"class.std::__1::list.150", %"class.std::__1::map.157", i64 }
%"class.std::__1::list.150" = type { %"class.std::__1::__list_imp.151" }
%"class.std::__1::__list_imp.151" = type { %"struct.std::__1::__list_node_base.152", %"class.std::__1::__compressed_pair.153" }
%"struct.std::__1::__list_node_base.152" = type { %"struct.std::__1::__list_node_base.152"*, %"struct.std::__1::__list_node_base.152"* }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::map.157" = type { %"class.std::__1::__tree.158" }
%"class.std::__1::__tree.158" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.159", %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::flat_map.168" = type { %"class.base::internal::flat_tree.169" }
%"class.base::internal::flat_tree.169" = type { %"class.std::__1::vector.170" }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { %"struct.std::__1::pair.172"*, %"struct.std::__1::pair.172"*, %"class.std::__1::__compressed_pair.173" }
%"struct.std::__1::pair.172" = type opaque
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::pair.172"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.122, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.122 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.123" }>
%"class.base::RefCountedThreadSafe.123" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.131 }
%class.scoped_refptr.131 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.132", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.132" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::HttpUserAgentSettings" = type opaque
%"class.net::CookieStore" = type opaque
%"class.net::TransportSecurityState" = type <{ %"class.std::__1::map.178", %"class.std::__1::map.189", %"class.std::__1::map.198", %"class.net::TransportSecurityState::Delegate"*, %"class.net::TransportSecurityState::ReportSenderInterface"*, i8, i8, i8, [5 x i8], %"class.net::TransportSecurityState::ExpectCTReporter"*, %"class.net::TransportSecurityState::RequireCTDelegate"*, %"class.net::ExpiringCache", %"class.net::ExpiringCache", i8, [7 x i8], %"class.base::Time", %"class.std::__1::set.221", i8, [7 x i8] }>
%"class.std::__1::map.178" = type { %"class.std::__1::__tree.179" }
%"class.std::__1::__tree.179" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::map.189" = type { %"class.std::__1::__tree.190" }
%"class.std::__1::__tree.190" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.191", %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::map.198" = type { %"class.std::__1::__tree.199" }
%"class.std::__1::__tree.199" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.200", %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.net::TransportSecurityState::Delegate" = type { i32 (...)** }
%"class.net::TransportSecurityState::ReportSenderInterface" = type { i32 (...)** }
%"class.net::TransportSecurityState::ExpectCTReporter" = type { i32 (...)** }
%"class.net::TransportSecurityState::RequireCTDelegate" = type { i32 (...)** }
%"class.net::ExpiringCache" = type <{ i64, %"class.std::__1::map.209", %"struct.std::__1::less.218", %"class.net::NoopEvictionHandler", [6 x i8] }>
%"class.std::__1::map.209" = type { %"class.std::__1::__tree.210" }
%"class.std::__1::__tree.210" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.211", %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::less.218" = type { i8 }
%"class.net::NoopEvictionHandler" = type { i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.220" }
%"class.base::time_internal::TimeBase.220" = type { i64 }
%"class.std::__1::set.221" = type { %"class.std::__1::__tree.222" }
%"class.std::__1::__tree.222" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.net::CTPolicyEnforcer" = type opaque
%"class.net::SCTAuditingDelegate" = type opaque
%"class.net::HttpTransactionFactory" = type opaque
%"class.net::URLRequestJobFactory" = type opaque
%"class.net::URLRequestThrottlerManager" = type opaque
%"class.net::QuicContext" = type { %"class.std::__1::unique_ptr.229", %"struct.net::QuicParams" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.quic::QuicConnectionHelperInterface"* }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"struct.net::QuicParams" = type { %"class.std::__1::vector.235", %"class.std::__1::basic_string", i64, i64, %"class.std::__1::set.242", %"class.std::__1::vector.252", %"class.std::__1::vector.252", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.237" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::set.242" = type { %"class.std::__1::__tree.243" }
%"class.std::__1::__tree.243" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { i32*, i32*, %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { i32* }
%"class.net::NetworkQualityEstimator" = type opaque
%"class.net::ReportingService" = type opaque
%"class.net::NetworkErrorLoggingService" = type opaque
%"class.net::FtpAuthCache" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.std::__1::set.262"* }
%"class.std::__1::set.262" = type opaque
%"class.net::CertNetFetcherURLRequest" = type { %"class.net::CertNetFetcher.base", %class.scoped_refptr.420, %"class.net::URLRequestContext"*, %"class.std::__1::unique_ptr.429" }
%"class.net::CertNetFetcher.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.428" }>
%"class.base::RefCountedThreadSafe.428" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.420 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* }
%"class.net::CertNetFetcherURLRequest::RequestCore" = type { %"class.base::RefCountedThreadSafe", %"class.net::(anonymous namespace)::Job"*, i32, %"class.std::__1::vector.19", %"class.base::WaitableEvent", %class.scoped_refptr.420 }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::(anonymous namespace)::Job" = type { %"class.net::URLRequest::Delegate", %"class.std::__1::vector", %"class.std::__1::unique_ptr.13", %"class.std::__1::vector.19", %"class.std::__1::unique_ptr.26", %class.scoped_refptr.400, %"class.base::OneShotTimer", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* }
%"class.net::URLRequest::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.8" }
%class.scoped_refptr = type { %"class.net::CertNetFetcherURLRequest::RequestCore"* }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %class.scoped_refptr* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.net::CertNetFetcherURLRequest::RequestParams"* }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.net::URLRequest"* }
%"class.net::URLRequest" = type { %"class.base::SupportsUserData.base", %"class.net::URLRequestContext"*, %"class.net::NetLogWithSource", %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.272", %"class.std::__1::vector.279", %"class.net::SiteForCookies", %"class.net::IsolationInfo", i32, i8, i8, %"class.absl::optional.286", %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.net::HttpRequestHeaders", i32, i8, i32, i32, %"class.std::__1::vector.318", %"class.std::__1::vector.325", i32, %"class.net::URLRequest::Delegate"*, i32, %"class.net::HttpResponseInfo", i8, i8, i32, %"class.net::UploadProgress", i32, i32, i8, %"class.std::__1::basic_string", i8, i8, i64, %"class.base::TimeTicks", %"struct.net::LoadTimingInfo", %"class.net::ProxyServer", %"class.absl::optional.382", %"struct.net::NetworkTrafficAnnotationTag", %"class.net::SocketTag", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.395", %"class.base::RepeatingCallback.395", i8, i8, i32, %"class.base::WeakPtrFactory.396" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.net::URLRequestJob"* }
%"class.net::URLRequestJob" = type opaque
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.net::UploadDataStream"* }
%"class.net::UploadDataStream" = type { i32 (...)**, i64, i64, i64, i8, i8, i8, %"class.base::OnceCallback.275", %"class.net::NetLogWithSource" }
%"class.base::OnceCallback.275" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.285 }
%union.anon.285 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.286", %"class.absl::optional.286", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.296" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.291", %"class.absl::optional.291" }
%"class.absl::optional.291" = type { %"class.absl::optional_internal::optional_data.292" }
%"class.absl::optional_internal::optional_data.292" = type { %"class.absl::optional_internal::optional_data_base.293" }
%"class.absl::optional_internal::optional_data_base.293" = type { %"class.absl::optional_internal::optional_data_dtor_base.294" }
%"class.absl::optional_internal::optional_data_dtor_base.294" = type { i8, %union.anon.295 }
%union.anon.295 = type { %"class.net::SchemefulSite" }
%"class.absl::optional.296" = type { %"class.absl::optional_internal::optional_data.297" }
%"class.absl::optional_internal::optional_data.297" = type { %"class.absl::optional_internal::optional_data_base.298" }
%"class.absl::optional_internal::optional_data_base.298" = type { %"class.absl::optional_internal::optional_data_dtor_base.299" }
%"class.absl::optional_internal::optional_data_dtor_base.299" = type { i8, %union.anon.300 }
%union.anon.300 = type { %"class.std::__1::set.301" }
%"class.std::__1::set.301" = type { %"class.std::__1::__tree.302" }
%"class.std::__1::__tree.302" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.absl::optional.286" = type { %"class.absl::optional_internal::optional_data.287" }
%"class.absl::optional_internal::optional_data.287" = type { %"class.absl::optional_internal::optional_data_base.288" }
%"class.absl::optional_internal::optional_data_base.288" = type { %"class.absl::optional_internal::optional_data_dtor_base.289" }
%"class.absl::optional_internal::optional_data_dtor_base.289" = type { i8, %union.anon.290 }
%union.anon.290 = type { %"class.url::Origin" }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.311" }
%"class.std::__1::vector.311" = type { %"class.std::__1::__vector_base.312" }
%"class.std::__1::__vector_base.312" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.313" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.std::__1::vector.318" = type { %"class.std::__1::__vector_base.319" }
%"class.std::__1::__vector_base.319" = type { %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"*, %"class.std::__1::__compressed_pair.320" }
%"struct.net::CookieWithAccessResult" = type <{ %"class.net::CanonicalCookie", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.net::CanonicalCookie" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, i8, i32, i32 }
%"struct.net::CookieAccessResult" = type <{ %"class.net::CookieInclusionStatus", i32, i32, i8, [3 x i8] }>
%"class.net::CookieInclusionStatus" = type { i32, i32 }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.net::CookieWithAccessResult"* }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"struct.net::CookieAndLineWithAccessResult"*, %"struct.net::CookieAndLineWithAccessResult"*, %"class.std::__1::__compressed_pair.332" }
%"struct.net::CookieAndLineWithAccessResult" = type <{ %"class.absl::optional.327", %"class.std::__1::basic_string", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.absl::optional.327" = type { %"class.absl::optional_internal::optional_data.328" }
%"class.absl::optional_internal::optional_data.328" = type { %"class.absl::optional_internal::optional_data_base.329" }
%"class.absl::optional_internal::optional_data_base.329" = type { %"class.absl::optional_internal::optional_data_dtor_base.330" }
%"class.absl::optional_internal::optional_data_dtor_base.330" = type { i8, %union.anon.331 }
%union.anon.331 = type { %"class.net::CanonicalCookie" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.net::CookieAndLineWithAccessResult"* }
%"class.net::HttpResponseInfo" = type { i8, i32, i8, i8, i8, i8, i8, %"class.net::ProxyServer", i8, i8, i8, i8, %"class.base::Time", %"class.net::IPEndPoint", %"class.std::__1::basic_string", i32, %"class.base::Time", %"class.base::Time", %"struct.net::ResolveErrorInfo", %"class.absl::optional.337", %class.scoped_refptr.342, %"class.net::SSLInfo", %class.scoped_refptr.373, %"class.net::HttpVaryData", %"class.std::__1::vector.141" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.337" = type { %"class.absl::optional_internal::optional_data.338" }
%"class.absl::optional_internal::optional_data.338" = type { %"class.absl::optional_internal::optional_data_base.339" }
%"class.absl::optional_internal::optional_data_base.339" = type { %"class.absl::optional_internal::optional_data_dtor_base.340" }
%"class.absl::optional_internal::optional_data_dtor_base.340" = type { i8, %union.anon.341 }
%union.anon.341 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.342 = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type opaque
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.343, %class.scoped_refptr.343, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.356", %"class.std::__1::basic_string", %"class.std::__1::vector.364", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.343 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.344", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.345", %"class.std::__1::vector.349" }
%"class.base::RefCountedThreadSafe.344" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.141", %"class.std::__1::vector.141", %"class.std::__1::vector.141", %"class.std::__1::vector.141" }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.349" = type { %"class.std::__1::__vector_base.350" }
%"class.std::__1::__vector_base.350" = type { %"class.std::__1::unique_ptr.345"*, %"class.std::__1::unique_ptr.345"*, %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.std::__1::unique_ptr.345"* }
%"class.std::__1::vector.356" = type { %"class.std::__1::__vector_base.357" }
%"class.std::__1::__vector_base.357" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.359" }
%"class.net::HashValue" = type { i32, %union.anon.358 }
%union.anon.358 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.364" = type { %"class.std::__1::__vector_base.365" }
%"class.std::__1::__vector_base.365" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.368" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.366, i32, [4 x i8] }>
%class.scoped_refptr.366 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.367", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.367" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%class.scoped_refptr.373 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.374", %"class.std::__1::vector.375", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.374" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.375" = type { %"class.std::__1::__vector_base.376" }
%"class.std::__1::__vector_base.376" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.377" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.net::UploadProgress" = type { i64, i64 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.382" = type { %"class.absl::optional_internal::optional_data.383" }
%"class.absl::optional_internal::optional_data.383" = type { %"class.absl::optional_internal::optional_data_base.384" }
%"class.absl::optional_internal::optional_data_base.384" = type { %"class.absl::optional_internal::optional_data_dtor_base.385" }
%"class.absl::optional_internal::optional_data_dtor_base.385" = type { i8, %union.anon.386 }
%union.anon.386 = type { %"class.base::internal::flat_tree.387" }
%"class.base::internal::flat_tree.387" = type { %"class.std::__1::vector.388" }
%"class.std::__1::vector.388" = type { %"class.std::__1::__vector_base.389" }
%"class.std::__1::__vector_base.389" = type { i32*, i32*, %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { i32* }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.net::SocketTag" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.395" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.396" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.400 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.401", i8* }
%"class.base::RefCountedThreadSafe.401" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { i8*, i8*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i8* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.411, i8, [7 x i8] }>
%class.scoped_refptr.411 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.412", %"class.base::Lock", i8, i8, %"class.std::__1::list.413" }
%"class.base::RefCountedThreadSafe.412" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list.413" = type { %"class.std::__1::__list_imp.414" }
%"class.std::__1::__list_imp.414" = type { %"struct.std::__1::__list_node_base.415", %"class.std::__1::__compressed_pair.416" }
%"struct.std::__1::__list_node_base.415" = type { %"struct.std::__1::__list_node_base.415"*, %"struct.std::__1::__list_node_base.415"* }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.123", [4 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.427" }
%"struct.std::__1::pair.427" = type { %"class.net::(anonymous namespace)::Job"*, %"class.std::__1::unique_ptr.421" }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.net::(anonymous namespace)::Job"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node.461" = type { %"class.std::__1::__tree_node_base.base", %"class.net::SchemefulSite" }
%"class.net::CertNetFetcher::Request" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.net::TransportInfo" = type opaque
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"struct.std::__1::__tuple_impl.488" = type { %"class.std::__1::__tuple_leaf.489", %"class.std::__1::__tuple_leaf.491", %"class.std::__1::__tuple_leaf.492" }
%"class.std::__1::__tuple_leaf.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.net::CertNetFetcherURLRequest"* }
%"class.std::__1::__tuple_leaf.491" = type { %"class.std::__1::unique_ptr.13" }
%"class.std::__1::__tuple_leaf.492" = type { %class.scoped_refptr }
%"class.net::CertNetFetcher" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.428", [4 x i8] }>
%"class.net::(anonymous namespace)::CertNetFetcherRequestImpl" = type { %"class.net::CertNetFetcher::Request", %class.scoped_refptr }

$_ZN13scoped_refptrIN3net24CertNetFetcherURLRequest11RequestCoreEED2Ev = comdat any

$_ZNSt3__16vectorI13scoped_refptrIN3net24CertNetFetcherURLRequest11RequestCoreEENS_9allocatorIS5_EEE5eraseENS_11__wrap_iterIPKS5_EE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorI13scoped_refptrIN3net24CertNetFetcherURLRequest11RequestCoreEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSB_IPKhEES7_S7_ = comdat any

$_ZN3net30DefineNetworkTrafficAnnotationILm33ELm1436EEENS_27NetworkTrafficAnnotationTagERAT__KcRAT0__S2_ = comdat any

$_ZNSt3__16__treeIN3net13SchemefulSiteENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net24CertNetFetcherURLRequest11RequestCoreEFvvEJ13scoped_refptrIS5_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net24CertNetFetcherURLRequest11RequestCoreEFvvEJ13scoped_refptrIS4_EEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net24CertNetFetcherURLRequestEFvNSt3__110unique_ptrINS4_13RequestParamsENS5_14default_deleteIS7_EEEE13scoped_refptrINS4_11RequestCoreEEEJSB_IS4_ESA_SD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net24CertNetFetcherURLRequestEFvNSt3__110unique_ptrINS3_13RequestParamsENS4_14default_deleteIS6_EEEE13scoped_refptrINS3_11RequestCoreEEEJSA_IS3_ES9_SC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJ13scoped_refptrIN3net24CertNetFetcherURLRequestEENS_10unique_ptrINS5_13RequestParamsENS_14default_deleteIS8_EEEES3_INS5_11RequestCoreEEEED2Ev = comdat any

@.str = private unnamed_addr constant [10 x i8] c"CancelJob\00", align 1
@.str.1 = private unnamed_addr constant [51 x i8] c"../../net/cert_net/cert_net_fetcher_url_request.cc\00", align 1
@_ZTVN3net24CertNetFetcherURLRequestE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::CertNetFetcherURLRequest"*)* @_ZN3net24CertNetFetcherURLRequest8ShutdownEv to i8*), i8* bitcast (%"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcherURLRequest"*, %class.GURL*, i32, i32)* @_ZN3net24CertNetFetcherURLRequest14FetchCaIssuersERK4GURLii to i8*), i8* bitcast (%"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcherURLRequest"*, %class.GURL*, i32, i32)* @_ZN3net24CertNetFetcherURLRequest8FetchCrlERK4GURLii to i8*), i8* bitcast (%"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcherURLRequest"*, %class.GURL*, i32, i32)* @_ZN3net24CertNetFetcherURLRequest9FetchOcspERK4GURLii to i8*), i8* bitcast (void (%"class.net::CertNetFetcherURLRequest"*)* @_ZN3net24CertNetFetcherURLRequestD2Ev to i8*), i8* bitcast (void (%"class.net::CertNetFetcherURLRequest"*)* @_ZN3net24CertNetFetcherURLRequestD0Ev to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"DoFetch\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"it != jobs_.end()\00", align 1
@_ZTVN3net12_GLOBAL__N_13JobE = internal unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"struct.net::TransportInfo"*, %"class.base::OnceCallback.275"*)* @_ZN3net10URLRequest8Delegate11OnConnectedEPS0_RKNS_13TransportInfoEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::Job"*, %"class.net::URLRequest"*, %"struct.net::RedirectInfo"*, i8*)* @_ZN3net12_GLOBAL__N_13Job18OnReceivedRedirectEPNS_10URLRequestERKNS_12RedirectInfoEPb to i8*), i8* bitcast (void (%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"class.net::AuthChallengeInfo"*)* @_ZN3net10URLRequest8Delegate14OnAuthRequiredEPS0_RKNS_17AuthChallengeInfoE to i8*), i8* bitcast (void (%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"class.net::SSLCertRequestInfo"*)* @_ZN3net10URLRequest8Delegate22OnCertificateRequestedEPS0_PNS_18SSLCertRequestInfoE to i8*), i8* bitcast (void (%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, i32, %"class.net::SSLInfo"*, i1)* @_ZN3net10URLRequest8Delegate21OnSSLCertificateErrorEPS0_iRKNS_7SSLInfoEb to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::Job"*, %"class.net::URLRequest"*, i32)* @_ZN3net12_GLOBAL__N_13Job17OnResponseStartedEPNS_10URLRequestEi to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::Job"*, %"class.net::URLRequest"*, i32)* @_ZN3net12_GLOBAL__N_13Job15OnReadCompletedEPNS_10URLRequestEi to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::Job"*)* @_ZN3net12_GLOBAL__N_13JobD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::Job"*)* @_ZN3net12_GLOBAL__N_13JobD0Ev to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"certificate_verifier_url_request\00", align 1
@.str.9 = private unnamed_addr constant [1436 x i8] c"\0A        semantics {\0A          sender: \22Certificate Verifier\22\0A          description:\0A            \22When verifying certificates, the browser may need to fetch \22\0A            \22additional URLs that are encoded in the server-provided \22\0A            \22certificate chain. This may be part of revocation checking (\22\0A            \22Online Certificate Status Protocol, Certificate Revocation List), \22\0A            \22or path building (Authority Information Access fetches). Please \22\0A            \22refer to the following for more on above protocols: \22\0A            \22https://tools.ietf.org/html/rfc6960, \22\0A            \22https://tools.ietf.org/html/rfc5280#section-4.2.1.13, and\22\0A            \22https://tools.ietf.org/html/rfc5280#section-5.2.7.\22\0A            \22NOTE: this path is being deprecated. Please see the\22\0A            \22certificate_verifier_url_loader annotation for the new path.\22\0A          trigger:\0A            \22Verifying a certificate (likely in response to navigating to an \22\0A            \22'https://' website).\22\0A          data:\0A            \22In the case of OCSP this may divulge the website being viewed. No \22\0A            \22user data in other cases.\22\0A          destination: OTHER\0A          destination_other:\0A            \22The URL specified in the certificate.\22\0A        }\0A        policy {\0A          cookies_allowed: NO\0A          setting: \22This feature cannot be disabled by settings.\22\0A          policy_exception_justification: \22Not implemented.\22\0A        }\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"StartURLRequest\00", align 1
@_ZTVN3net12_GLOBAL__N_125CertNetFetcherRequestImplE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::CertNetFetcherRequestImpl"*)* @_ZN3net12_GLOBAL__N_125CertNetFetcherRequestImplD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::CertNetFetcherRequestImpl"*)* @_ZN3net12_GLOBAL__N_125CertNetFetcherRequestImplD0Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::CertNetFetcherRequestImpl"*, i32*, %"class.std::__1::vector.19"*)* @_ZN3net12_GLOBAL__N_125CertNetFetcherRequestImpl13WaitForResultEPNS_5ErrorEPNSt3__16vectorIhNS4_9allocatorIhEEEE to i8*)] }, align 8

@_ZN3net24CertNetFetcherURLRequest13RequestParamsC1Ev = hidden unnamed_addr alias void (%"struct.net::CertNetFetcherURLRequest::RequestParams"*), void (%"struct.net::CertNetFetcherURLRequest::RequestParams"*)* @_ZN3net24CertNetFetcherURLRequest13RequestParamsC2Ev
@_ZN3net24CertNetFetcherURLRequest29AsyncCertNetFetcherURLRequestC1EPNS_17URLRequestContextE = hidden unnamed_addr alias void (%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*, %"class.net::URLRequestContext"*), void (%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*, %"class.net::URLRequestContext"*)* @_ZN3net24CertNetFetcherURLRequest29AsyncCertNetFetcherURLRequestC2EPNS_17URLRequestContextE
@_ZN3net24CertNetFetcherURLRequest29AsyncCertNetFetcherURLRequestD1Ev = hidden unnamed_addr alias void (%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*), void (%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*)* @_ZN3net24CertNetFetcherURLRequest29AsyncCertNetFetcherURLRequestD2Ev
@_ZN3net24CertNetFetcherURLRequestC1Ev = hidden unnamed_addr alias void (%"class.net::CertNetFetcherURLRequest"*), void (%"class.net::CertNetFetcherURLRequest"*)* @_ZN3net24CertNetFetcherURLRequestC2Ev
@_ZN3net24CertNetFetcherURLRequestD1Ev = hidden unnamed_addr alias void (%"class.net::CertNetFetcherURLRequest"*), void (%"class.net::CertNetFetcherURLRequest"*)* @_ZN3net24CertNetFetcherURLRequestD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24CertNetFetcherURLRequest13RequestParamsC2Ev(%"struct.net::CertNetFetcherURLRequest::RequestParams"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1Ev(%class.GURL* %2) #11
  %3 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %0, i64 0, i32 2
  %5 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net24CertNetFetcherURLRequest13RequestParamsltERKS1_(%"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"* dereferenceable(144)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1, i64 0, i32 2
  %9 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %6) #11
  br i1 %9, label %30, label %10

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %3) #11
  br i1 %11, label %30, label %12

12:                                               ; preds = %10
  %13 = load i32, i32* %4, align 4
  %14 = load i32, i32* %7, align 4
  %15 = icmp slt i32 %13, %14
  br i1 %15, label %30, label %16

16:                                               ; preds = %12
  %17 = icmp slt i32 %14, %13
  br i1 %17, label %30, label %18

18:                                               ; preds = %16
  %19 = load i64, i64* %5, align 8
  %20 = load i64, i64* %8, align 8
  %21 = icmp ult i64 %19, %20
  br i1 %21, label %30, label %22

22:                                               ; preds = %18
  %23 = icmp ult i64 %20, %19
  br i1 %23, label %30, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1, i64 0, i32 3, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %0, i64 0, i32 3, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp slt i64 %28, %26
  br label %30

30:                                               ; preds = %2, %10, %12, %16, %18, %22, %24
  %31 = phi i1 [ true, %2 ], [ false, %10 ], [ true, %12 ], [ false, %16 ], [ %29, %24 ], [ true, %18 ], [ false, %22 ]
  ret i1 %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24CertNetFetcherURLRequest11RequestCore9CancelJobEv(%"class.net::CertNetFetcherURLRequest::RequestCore"*) #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %0, i64 0, i32 5, i32 0
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = bitcast %"class.base::SingleThreadTaskRunner"* %5 to %"class.base::SequencedTaskRunner"*
  %7 = bitcast %"class.base::SingleThreadTaskRunner"* %5 to i1 (%"class.base::SequencedTaskRunner"*)***
  %8 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %8, i64 5
  %10 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.base::SequencedTaskRunner"* %6) #11
  br i1 %11, label %30, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.base::SingleThreadTaskRunner"** %4 to %"class.base::TaskRunner"**
  %14 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %13, align 8
  %15 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i32 407) #11
  %16 = call i8* @_Znwm(i64 56) #12, !noalias !2
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net24CertNetFetcherURLRequest11RequestCoreEFvvEJ13scoped_refptrIS5_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net24CertNetFetcherURLRequest11RequestCoreEFvvEJ13scoped_refptrIS4_EEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !2
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CertNetFetcherURLRequest::RequestCore"*)* @_ZN3net24CertNetFetcherURLRequest11RequestCore9CancelJobEv to i64), i64 0>, <2 x i64>* %19, align 8, !noalias !2
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = bitcast i8* %20 to %"class.net::CertNetFetcherURLRequest::RequestCore"**
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* %0, %"class.net::CertNetFetcherURLRequest::RequestCore"** %21, align 8, !noalias !2
  %22 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %0, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic, !noalias !2
  br label %26

26:                                               ; preds = %12, %23
  %27 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %16, i8** %27, align 8, !alias.scope !2
  %28 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %14, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #11
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  br label %73

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %0, i64 0, i32 1
  %32 = load %"class.net::(anonymous namespace)::Job"*, %"class.net::(anonymous namespace)::Job"** %31, align 8
  %33 = icmp eq %"class.net::(anonymous namespace)::Job"* %32, null
  br i1 %33, label %65, label %34

34:                                               ; preds = %30
  store %"class.net::(anonymous namespace)::Job"* null, %"class.net::(anonymous namespace)::Job"** %31, align 8
  %35 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %32, i64 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 0
  %37 = load %class.scoped_refptr*, %class.scoped_refptr** %36, align 8
  %38 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %32, i64 0, i32 1, i32 0, i32 1
  %39 = load %class.scoped_refptr*, %class.scoped_refptr** %38, align 8
  %40 = icmp eq %class.scoped_refptr* %37, %39
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %46
  %42 = phi %class.scoped_refptr* [ %47, %46 ], [ %37, %34 ]
  %43 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %42, i64 0, i32 0
  %44 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %43, align 8
  %45 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %44, %0
  br i1 %45, label %49, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %42, i64 1
  %48 = icmp eq %class.scoped_refptr* %47, %39
  br i1 %48, label %49, label %41

49:                                               ; preds = %46, %41, %34
  %50 = phi %class.scoped_refptr* [ %37, %34 ], [ %39, %46 ], [ %42, %41 ]
  %51 = tail call %class.scoped_refptr* @_ZNSt3__16vectorI13scoped_refptrIN3net24CertNetFetcherURLRequest11RequestCoreEENS_9allocatorIS5_EEE5eraseENS_11__wrap_iterIPKS5_EE(%"class.std::__1::vector"* %35, %class.scoped_refptr* %50) #11
  %52 = load %class.scoped_refptr*, %class.scoped_refptr** %36, align 8
  %53 = load %class.scoped_refptr*, %class.scoped_refptr** %38, align 8
  %54 = icmp eq %class.scoped_refptr* %52, %53
  br i1 %54, label %55, label %65

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %32, i64 0, i32 7
  %57 = load %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*, %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"** %56, align 8
  %58 = tail call fastcc %"class.net::(anonymous namespace)::Job"* @_ZN3net24CertNetFetcherURLRequest29AsyncCertNetFetcherURLRequest9RemoveJobEPNS_12_GLOBAL__N_13JobE(%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %57, %"class.net::(anonymous namespace)::Job"* nonnull %32) #11
  %59 = icmp eq %"class.net::(anonymous namespace)::Job"* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = bitcast %"class.net::(anonymous namespace)::Job"* %58 to void (%"class.net::(anonymous namespace)::Job"*)***
  %62 = load void (%"class.net::(anonymous namespace)::Job"*)**, void (%"class.net::(anonymous namespace)::Job"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.net::(anonymous namespace)::Job"*)*, void (%"class.net::(anonymous namespace)::Job"*)** %62, i64 8
  %64 = load void (%"class.net::(anonymous namespace)::Job"*)*, void (%"class.net::(anonymous namespace)::Job"*)** %63, align 8
  tail call void %64(%"class.net::(anonymous namespace)::Job"* nonnull %58) #11
  br label %65

65:                                               ; preds = %60, %55, %49, %30
  %66 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %0, i64 0, i32 2
  store i32 -3, i32* %66, align 8
  %67 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %0, i64 0, i32 3
  %68 = bitcast %"class.std::__1::vector.19"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %0, i64 0, i32 3, i32 0, i32 1
  %71 = bitcast i8** %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %0, i64 0, i32 4
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %72) #11
  br label %73

73:                                               ; preds = %65, %26
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24CertNetFetcherURLRequest11RequestCore20SignalImmediateErrorEv(%"class.net::CertNetFetcherURLRequest::RequestCore"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %0, i64 0, i32 2
  store i32 -3, i32* %2, align 8
  %3 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::vector.19"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %0, i64 0, i32 3, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %0, i64 0, i32 4
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %8) #11
  ret void
}

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24CertNetFetcherURLRequest29AsyncCertNetFetcherURLRequestC2EPNS_17URLRequestContextE(%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*, %"class.net::URLRequestContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 1
  store %"class.net::URLRequestContext"* %1, %"class.net::URLRequestContext"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24CertNetFetcherURLRequest29AsyncCertNetFetcherURLRequestD2Ev(%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIPN3net12_GLOBAL__N_13JobENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS3_13JobComparatorELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.403"* %2, %"class.std::__1::__tree_node"* %5) #11
  %6 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %8, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIPN3net12_GLOBAL__N_13JobENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS3_13JobComparatorELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.403"* %2, %"class.std::__1::__tree_node"* null) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24CertNetFetcherURLRequest29AsyncCertNetFetcherURLRequest5FetchENSt3__110unique_ptrINS0_13RequestParamsENS2_14default_deleteIS4_EEEE13scoped_refptrINS0_11RequestCoreEE(%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"class.net::CertNetFetcherURLRequest::RequestCore"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.url::Origin", align 8
  %6 = alloca %"class.net::IsolationInfo", align 8
  %7 = alloca %"class.net::SiteForCookies", align 8
  %8 = alloca %"class.absl::optional.296", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = ptrtoint %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1 to i64
  %12 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %14 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = icmp eq %"class.std::__1::__tree_end_node"* %13, %14
  br i1 %15, label %160, label %16

16:                                               ; preds = %3, %47
  %17 = phi i64 [ %19, %47 ], [ 0, %3 ]
  %18 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %13, %3 ]
  %19 = add nuw nsw i64 %17, 1
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 1, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %16
  %24 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node_base"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 2
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_end_node"**
  %27 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %24
  br i1 %30, label %47, label %38

31:                                               ; preds = %16, %31
  %32 = phi %"class.std::__1::__tree_node_base"* [ %34, %31 ], [ %21, %16 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %31

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0
  br label %47

38:                                               ; preds = %23, %38
  %39 = phi %"class.std::__1::__tree_end_node"** [ %42, %38 ], [ %26, %23 ]
  %40 = bitcast %"class.std::__1::__tree_end_node"** %39 to %"class.std::__1::__tree_node_base"**
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 2
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, %41
  br i1 %46, label %47, label %38

47:                                               ; preds = %38, %36, %23
  %48 = phi %"class.std::__1::__tree_end_node"* [ %37, %36 ], [ %27, %23 ], [ %43, %38 ]
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %14
  br i1 %49, label %50, label %16

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1, i64 0, i32 0
  %52 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1, i64 0, i32 2
  %54 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1, i64 0, i32 3, i32 0
  br label %55

55:                                               ; preds = %156, %50
  %56 = phi %"class.std::__1::__tree_end_node"* [ %13, %50 ], [ %158, %156 ]
  %57 = phi i64 [ %19, %50 ], [ %157, %156 ]
  %58 = lshr i64 %57, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %94, label %60

60:                                               ; preds = %55, %90
  %61 = phi %"class.std::__1::__tree_end_node"* [ %91, %90 ], [ %56, %55 ]
  %62 = phi i64 [ %92, %90 ], [ %58, %55 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 1, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %66, label %74

66:                                               ; preds = %60
  %67 = bitcast %"class.std::__1::__tree_end_node"* %61 to %"class.std::__1::__tree_node_base"*
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 2
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"class.std::__1::__tree_end_node"**
  %70 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, %67
  br i1 %73, label %90, label %81

74:                                               ; preds = %60, %74
  %75 = phi %"class.std::__1::__tree_node_base"* [ %77, %74 ], [ %64, %60 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, null
  br i1 %78, label %79, label %74

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %75, i64 0, i32 0
  br label %90

81:                                               ; preds = %66, %81
  %82 = phi %"class.std::__1::__tree_end_node"** [ %85, %81 ], [ %69, %66 ]
  %83 = bitcast %"class.std::__1::__tree_end_node"** %82 to %"class.std::__1::__tree_node_base"**
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %84, i64 0, i32 2
  %86 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, %84
  br i1 %89, label %90, label %81

90:                                               ; preds = %81, %79, %66
  %91 = phi %"class.std::__1::__tree_end_node"* [ %80, %79 ], [ %70, %66 ], [ %86, %81 ]
  %92 = add nsw i64 %62, -1
  %93 = icmp sgt i64 %92, 0
  br i1 %93, label %60, label %94

94:                                               ; preds = %90, %55
  %95 = phi %"class.std::__1::__tree_end_node"* [ %56, %55 ], [ %91, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 4
  %97 = bitcast %"class.std::__1::__tree_end_node"* %96 to %"class.net::(anonymous namespace)::Job"**
  %98 = load %"class.net::(anonymous namespace)::Job"*, %"class.net::(anonymous namespace)::Job"** %97, align 8
  %99 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %98, i64 0, i32 2, i32 0, i32 0, i32 0
  %100 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %99, align 8
  %101 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %100, i64 0, i32 0
  %102 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %100, i64 0, i32 1
  %103 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %100, i64 0, i32 2
  %104 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %101, %class.GURL* dereferenceable(120) %51) #11
  br i1 %104, label %124, label %105

105:                                              ; preds = %94
  %106 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %51, %class.GURL* dereferenceable(120) %101) #11
  br i1 %106, label %156, label %107

107:                                              ; preds = %105
  %108 = load i32, i32* %102, align 4
  %109 = load i32, i32* %52, align 4
  %110 = icmp slt i32 %108, %109
  br i1 %110, label %124, label %111

111:                                              ; preds = %107
  %112 = icmp slt i32 %109, %108
  br i1 %112, label %156, label %113

113:                                              ; preds = %111
  %114 = load i64, i64* %103, align 8
  %115 = load i64, i64* %53, align 8
  %116 = icmp ult i64 %114, %115
  br i1 %116, label %124, label %117

117:                                              ; preds = %113
  %118 = icmp ult i64 %115, %114
  br i1 %118, label %156, label %119

119:                                              ; preds = %117
  %120 = load i64, i64* %54, align 8
  %121 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %100, i64 0, i32 3, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = icmp slt i64 %122, %120
  br i1 %123, label %124, label %156

124:                                              ; preds = %119, %113, %107, %94
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 1, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, null
  br i1 %127, label %128, label %136

128:                                              ; preds = %124
  %129 = bitcast %"class.std::__1::__tree_end_node"* %95 to %"class.std::__1::__tree_node_base"*
  %130 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 2
  %131 = bitcast %"class.std::__1::__tree_end_node"* %130 to %"class.std::__1::__tree_end_node"**
  %132 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %131, align 8
  %133 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %132, i64 0, i32 0
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %134, %129
  br i1 %135, label %152, label %143

136:                                              ; preds = %124, %136
  %137 = phi %"class.std::__1::__tree_node_base"* [ %139, %136 ], [ %126, %124 ]
  %138 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %137, i64 0, i32 0, i32 0
  %139 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %138, align 8
  %140 = icmp eq %"class.std::__1::__tree_node_base"* %139, null
  br i1 %140, label %141, label %136

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %137, i64 0, i32 0
  br label %152

143:                                              ; preds = %128, %143
  %144 = phi %"class.std::__1::__tree_end_node"** [ %147, %143 ], [ %131, %128 ]
  %145 = bitcast %"class.std::__1::__tree_end_node"** %144 to %"class.std::__1::__tree_node_base"**
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %146, i64 0, i32 2
  %148 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %147, align 8
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %148, i64 0, i32 0
  %150 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %150, %146
  br i1 %151, label %152, label %143

152:                                              ; preds = %143, %141, %128
  %153 = phi %"class.std::__1::__tree_end_node"* [ %142, %141 ], [ %132, %128 ], [ %148, %143 ]
  %154 = xor i64 %58, -1
  %155 = add i64 %57, %154
  br label %156

156:                                              ; preds = %152, %119, %117, %111, %105
  %157 = phi i64 [ %155, %152 ], [ %58, %119 ], [ %58, %105 ], [ %58, %111 ], [ %58, %117 ]
  %158 = phi %"class.std::__1::__tree_end_node"* [ %153, %152 ], [ %56, %119 ], [ %56, %105 ], [ %56, %111 ], [ %56, %117 ]
  %159 = icmp eq i64 %157, 0
  br i1 %159, label %160, label %55

160:                                              ; preds = %156, %3
  %161 = phi %"class.std::__1::__tree_end_node"* [ %13, %3 ], [ %158, %156 ]
  %162 = icmp eq %"class.std::__1::__tree_end_node"* %161, %14
  br i1 %162, label %199, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %161, i64 4
  %165 = bitcast %"class.std::__1::__tree_end_node"* %164 to %"class.net::(anonymous namespace)::Job"**
  %166 = load %"class.net::(anonymous namespace)::Job"*, %"class.net::(anonymous namespace)::Job"** %165, align 8
  %167 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %166, i64 0, i32 2, i32 0, i32 0, i32 0
  %168 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %167, align 8
  %169 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1, i64 0, i32 0
  %170 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1, i64 0, i32 1
  %171 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1, i64 0, i32 2
  %172 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %168, i64 0, i32 0
  %173 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %168, i64 0, i32 1
  %174 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %168, i64 0, i32 2
  %175 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %169, %class.GURL* dereferenceable(120) %172) #11
  br i1 %175, label %199, label %176

176:                                              ; preds = %163
  %177 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %172, %class.GURL* dereferenceable(120) %169) #11
  br i1 %177, label %196, label %178

178:                                              ; preds = %176
  %179 = load i32, i32* %170, align 4
  %180 = load i32, i32* %173, align 4
  %181 = icmp slt i32 %179, %180
  br i1 %181, label %199, label %182

182:                                              ; preds = %178
  %183 = icmp slt i32 %180, %179
  br i1 %183, label %196, label %184

184:                                              ; preds = %182
  %185 = load i64, i64* %171, align 8
  %186 = load i64, i64* %174, align 8
  %187 = icmp ult i64 %185, %186
  br i1 %187, label %199, label %188

188:                                              ; preds = %184
  %189 = icmp ult i64 %186, %185
  br i1 %189, label %196, label %190

190:                                              ; preds = %188
  %191 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %168, i64 0, i32 3, i32 0
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1, i64 0, i32 3, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = icmp slt i64 %194, %192
  br i1 %195, label %199, label %196

196:                                              ; preds = %176, %182, %188, %190
  %197 = load %"class.net::(anonymous namespace)::Job"*, %"class.net::(anonymous namespace)::Job"** %165, align 8
  %198 = icmp eq %"class.net::(anonymous namespace)::Job"* %197, null
  br i1 %198, label %199, label %552

199:                                              ; preds = %184, %178, %163, %160, %190, %196
  %200 = tail call i8* @_Znwm(i64 216) #12
  %201 = bitcast i8* %200 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3net12_GLOBAL__N_13JobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %201, align 8
  %202 = getelementptr inbounds i8, i8* %200, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %202, i8 0, i64 24, i1 false) #11
  %203 = getelementptr inbounds i8, i8* %200, i64 32
  %204 = bitcast i8* %203 to i64*
  store i64 %11, i64* %204, align 8
  %205 = getelementptr inbounds i8, i8* %200, i64 40
  %206 = getelementptr inbounds i8, i8* %200, i64 80
  %207 = bitcast i8* %206 to %"class.base::OneShotTimer"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %205, i8 0, i64 40, i1 false) #11
  tail call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* %207) #11
  %208 = getelementptr inbounds i8, i8* %200, i64 208
  %209 = bitcast i8* %208 to %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"**
  store %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"** %209, align 8
  %210 = ptrtoint i8* %200 to i64
  %211 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node"**
  %212 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %211, align 8
  %213 = icmp eq %"class.std::__1::__tree_node"* %212, null
  br i1 %213, label %302, label %214

214:                                              ; preds = %199
  %215 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %216 = bitcast i8* %203 to %"struct.net::CertNetFetcherURLRequest::RequestParams"**
  br label %217

217:                                              ; preds = %298, %214
  %218 = phi %"class.std::__1::__tree_node"* [ %301, %298 ], [ %212, %214 ]
  %219 = phi %"class.std::__1::__tree_node_base"** [ %300, %298 ], [ %215, %214 ]
  %220 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %218, i64 0, i32 1, i32 0, i32 0
  %221 = load %"class.net::(anonymous namespace)::Job"*, %"class.net::(anonymous namespace)::Job"** %220, align 8
  %222 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %216, align 8
  %223 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %221, i64 0, i32 2, i32 0, i32 0, i32 0
  %224 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %223, align 8
  %225 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %222, i64 0, i32 0
  %226 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %222, i64 0, i32 1
  %227 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %222, i64 0, i32 2
  %228 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %224, i64 0, i32 0
  %229 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %224, i64 0, i32 1
  %230 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %224, i64 0, i32 2
  %231 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %225, %class.GURL* dereferenceable(120) %228) #11
  br i1 %231, label %252, label %232

232:                                              ; preds = %217
  %233 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %228, %class.GURL* dereferenceable(120) %225) #11
  br i1 %233, label %258, label %234

234:                                              ; preds = %232
  %235 = load i32, i32* %226, align 4
  %236 = load i32, i32* %229, align 4
  %237 = icmp slt i32 %235, %236
  br i1 %237, label %252, label %238

238:                                              ; preds = %234
  %239 = icmp slt i32 %236, %235
  br i1 %239, label %258, label %240

240:                                              ; preds = %238
  %241 = load i64, i64* %227, align 8
  %242 = load i64, i64* %230, align 8
  %243 = icmp ult i64 %241, %242
  br i1 %243, label %252, label %244

244:                                              ; preds = %240
  %245 = icmp ult i64 %242, %241
  br i1 %245, label %258, label %246

246:                                              ; preds = %244
  %247 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %224, i64 0, i32 3, i32 0
  %248 = load i64, i64* %247, align 8
  %249 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %222, i64 0, i32 3, i32 0
  %250 = load i64, i64* %249, align 8
  %251 = icmp slt i64 %250, %248
  br i1 %251, label %252, label %258

252:                                              ; preds = %246, %240, %234, %217
  %253 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %218, i64 0, i32 0, i32 0, i32 0
  %254 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %253, align 8
  %255 = icmp eq %"class.std::__1::__tree_node_base"* %254, null
  br i1 %255, label %256, label %298

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %218, i64 0, i32 0, i32 0
  br label %304

258:                                              ; preds = %246, %244, %238, %232
  %259 = load %"class.net::(anonymous namespace)::Job"*, %"class.net::(anonymous namespace)::Job"** %220, align 8
  %260 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %259, i64 0, i32 2, i32 0, i32 0, i32 0
  %261 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %260, align 8
  %262 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %216, align 8
  %263 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %261, i64 0, i32 0
  %264 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %261, i64 0, i32 1
  %265 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %261, i64 0, i32 2
  %266 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %262, i64 0, i32 0
  %267 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %262, i64 0, i32 1
  %268 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %262, i64 0, i32 2
  %269 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %263, %class.GURL* dereferenceable(120) %266) #11
  br i1 %269, label %290, label %270

270:                                              ; preds = %258
  %271 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %266, %class.GURL* dereferenceable(120) %263) #11
  br i1 %271, label %296, label %272

272:                                              ; preds = %270
  %273 = load i32, i32* %264, align 4
  %274 = load i32, i32* %267, align 4
  %275 = icmp slt i32 %273, %274
  br i1 %275, label %290, label %276

276:                                              ; preds = %272
  %277 = icmp slt i32 %274, %273
  br i1 %277, label %296, label %278

278:                                              ; preds = %276
  %279 = load i64, i64* %265, align 8
  %280 = load i64, i64* %268, align 8
  %281 = icmp ult i64 %279, %280
  br i1 %281, label %290, label %282

282:                                              ; preds = %278
  %283 = icmp ult i64 %280, %279
  br i1 %283, label %296, label %284

284:                                              ; preds = %282
  %285 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %262, i64 0, i32 3, i32 0
  %286 = load i64, i64* %285, align 8
  %287 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %261, i64 0, i32 3, i32 0
  %288 = load i64, i64* %287, align 8
  %289 = icmp slt i64 %288, %286
  br i1 %289, label %290, label %296

290:                                              ; preds = %284, %278, %272, %258
  %291 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %218, i64 0, i32 0, i32 1
  %292 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %291, align 8
  %293 = icmp eq %"class.std::__1::__tree_node_base"* %292, null
  br i1 %293, label %294, label %298

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %218, i64 0, i32 0, i32 0
  br label %304

296:                                              ; preds = %284, %282, %276, %270
  %297 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %218, i64 0, i32 0, i32 0
  br label %304

298:                                              ; preds = %290, %252
  %299 = phi %"class.std::__1::__tree_node_base"* [ %254, %252 ], [ %292, %290 ]
  %300 = phi %"class.std::__1::__tree_node_base"** [ %253, %252 ], [ %291, %290 ]
  %301 = bitcast %"class.std::__1::__tree_node_base"* %299 to %"class.std::__1::__tree_node"*
  br label %217

302:                                              ; preds = %199
  %303 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 0, i32 0
  br label %304

304:                                              ; preds = %302, %296, %294, %256
  %305 = phi %"class.std::__1::__tree_end_node"* [ %14, %302 ], [ %257, %256 ], [ %295, %294 ], [ %297, %296 ]
  %306 = phi %"class.std::__1::__tree_node_base"** [ %303, %302 ], [ %253, %256 ], [ %291, %294 ], [ %219, %296 ]
  %307 = bitcast %"class.std::__1::__tree_node_base"** %306 to %"class.std::__1::__tree_node"**
  %308 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %307, align 8
  %309 = icmp eq %"class.std::__1::__tree_node"* %308, null
  br i1 %309, label %310, label %336

310:                                              ; preds = %304
  %311 = tail call i8* @_Znwm(i64 48) #12, !noalias !7
  %312 = getelementptr inbounds i8, i8* %311, i64 32
  %313 = bitcast i8* %312 to i64*
  store i64 %210, i64* %313, align 8, !noalias !7
  %314 = getelementptr inbounds i8, i8* %311, i64 40
  %315 = bitcast i8* %314 to i64*
  store i64 0, i64* %315, align 8, !noalias !7
  %316 = bitcast i8* %311 to %"class.std::__1::__tree_node"*
  %317 = bitcast i8* %311 to %"class.std::__1::__tree_node_base"*
  %318 = getelementptr inbounds i8, i8* %311, i64 16
  %319 = bitcast i8* %318 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %311, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %305, %"class.std::__1::__tree_end_node"** %319, align 8
  %320 = bitcast %"class.std::__1::__tree_node_base"** %306 to i8**
  store i8* %311, i8** %320, align 8
  %321 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %322 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %321, i64 0, i32 0
  %323 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %322, align 8
  %324 = icmp eq %"class.std::__1::__tree_node_base"* %323, null
  br i1 %324, label %329, label %325

325:                                              ; preds = %310
  %326 = ptrtoint %"class.std::__1::__tree_node_base"* %323 to i64
  %327 = bitcast %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0 to i64*
  store i64 %326, i64* %327, align 8
  %328 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %306, align 8
  br label %329

329:                                              ; preds = %325, %310
  %330 = phi %"class.std::__1::__tree_node_base"* [ %317, %310 ], [ %328, %325 ]
  %331 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %332 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %331, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %332, %"class.std::__1::__tree_node_base"* %330) #11
  %333 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %334 = load i64, i64* %333, align 8
  %335 = add i64 %334, 1
  store i64 %335, i64* %333, align 8
  br label %336

336:                                              ; preds = %304, %329
  %337 = phi %"class.std::__1::__tree_node"* [ %316, %329 ], [ %308, %304 ]
  %338 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %337, i64 0, i32 1, i32 0, i32 1
  %339 = getelementptr inbounds %"class.std::__1::unique_ptr.421", %"class.std::__1::unique_ptr.421"* %338, i64 0, i32 0, i32 0, i32 0
  %340 = load %"class.net::(anonymous namespace)::Job"*, %"class.net::(anonymous namespace)::Job"** %339, align 8
  %341 = bitcast %"class.std::__1::unique_ptr.421"* %338 to i64*
  store i64 %210, i64* %341, align 8
  %342 = icmp eq %"class.net::(anonymous namespace)::Job"* %340, null
  br i1 %342, label %348, label %343

343:                                              ; preds = %336
  %344 = bitcast %"class.net::(anonymous namespace)::Job"* %340 to void (%"class.net::(anonymous namespace)::Job"*)***
  %345 = load void (%"class.net::(anonymous namespace)::Job"*)**, void (%"class.net::(anonymous namespace)::Job"*)*** %344, align 8
  %346 = getelementptr inbounds void (%"class.net::(anonymous namespace)::Job"*)*, void (%"class.net::(anonymous namespace)::Job"*)** %345, i64 8
  %347 = load void (%"class.net::(anonymous namespace)::Job"*)*, void (%"class.net::(anonymous namespace)::Job"*)** %346, align 8
  tail call void %347(%"class.net::(anonymous namespace)::Job"* nonnull %340) #11
  br label %348

348:                                              ; preds = %343, %336
  %349 = bitcast i8* %200 to %"class.net::(anonymous namespace)::Job"*
  tail call fastcc void @_ZN3net12_GLOBAL__N_13Job13AttachRequestE13scoped_refptrINS_24CertNetFetcherURLRequest11RequestCoreEE(%"class.net::(anonymous namespace)::Job"* nonnull %349, %"class.net::CertNetFetcherURLRequest::RequestCore"* %2)
  %350 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 1
  %351 = load %"class.net::URLRequestContext"*, %"class.net::URLRequestContext"** %350, align 8
  %352 = getelementptr inbounds %"class.absl::optional.296", %"class.absl::optional.296"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %352)
  %353 = bitcast %"class.base::OnceCallback"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %353)
  %354 = bitcast i8* %203 to %"struct.net::CertNetFetcherURLRequest::RequestParams"**
  %355 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %354, align 8
  %356 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %355, i64 0, i32 0
  %357 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %356, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #11
  %358 = select i1 %357, i32 0, i32 -301
  br i1 %357, label %450, label %359

359:                                              ; preds = %348
  %360 = bitcast i8* %206 to %"class.base::internal::TimerBase"*
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %360) #11
  %361 = getelementptr inbounds i8, i8* %200, i64 64
  %362 = bitcast i8* %361 to %"class.net::URLRequest"**
  %363 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %362, align 8
  store %"class.net::URLRequest"* null, %"class.net::URLRequest"** %362, align 8
  %364 = icmp eq %"class.net::URLRequest"* %363, null
  br i1 %364, label %370, label %365

365:                                              ; preds = %359
  %366 = bitcast %"class.net::URLRequest"* %363 to void (%"class.net::URLRequest"*)***
  %367 = load void (%"class.net::URLRequest"*)**, void (%"class.net::URLRequest"*)*** %366, align 8
  %368 = getelementptr inbounds void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %367, i64 1
  %369 = load void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %368, align 8
  tail call void %369(%"class.net::URLRequest"* nonnull %363) #11
  br label %370

370:                                              ; preds = %365, %359
  %371 = load %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*, %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"** %209, align 8
  %372 = tail call fastcc %"class.net::(anonymous namespace)::Job"* @_ZN3net24CertNetFetcherURLRequest29AsyncCertNetFetcherURLRequest9RemoveJobEPNS_12_GLOBAL__N_13JobE(%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %371, %"class.net::(anonymous namespace)::Job"* nonnull %349) #11
  %373 = bitcast i8* %202 to %class.scoped_refptr**
  %374 = load %class.scoped_refptr*, %class.scoped_refptr** %373, align 8
  %375 = getelementptr inbounds i8, i8* %200, i64 16
  %376 = bitcast i8* %375 to %class.scoped_refptr**
  %377 = load %class.scoped_refptr*, %class.scoped_refptr** %376, align 8
  %378 = icmp eq %class.scoped_refptr* %374, %377
  br i1 %378, label %442, label %379

379:                                              ; preds = %370
  %380 = bitcast i8* %205 to %"class.std::__1::vector.19"*
  %381 = bitcast i8* %205 to i8**
  %382 = getelementptr inbounds i8, i8* %200, i64 48
  %383 = bitcast i8* %382 to i8**
  br label %384

384:                                              ; preds = %395, %379
  %385 = phi %class.scoped_refptr* [ %374, %379 ], [ %397, %395 ]
  %386 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %385, i64 0, i32 0
  %387 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %386, align 8
  %388 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %387, i64 0, i32 1
  store %"class.net::(anonymous namespace)::Job"* null, %"class.net::(anonymous namespace)::Job"** %388, align 8
  %389 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %387, i64 0, i32 2
  store i32 %358, i32* %389, align 8
  %390 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %387, i64 0, i32 3
  %391 = icmp eq %"class.std::__1::vector.19"* %390, %380
  br i1 %391, label %395, label %392

392:                                              ; preds = %384
  %393 = load i8*, i8** %381, align 8
  %394 = load i8*, i8** %383, align 8
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.19"* %390, i8* %393, i8* %394) #11
  br label %395

395:                                              ; preds = %392, %384
  %396 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %387, i64 0, i32 4
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %396) #11
  %397 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %385, i64 1
  %398 = icmp eq %class.scoped_refptr* %397, %377
  br i1 %398, label %399, label %384

399:                                              ; preds = %395
  %400 = load %class.scoped_refptr*, %class.scoped_refptr** %373, align 8
  %401 = load %class.scoped_refptr*, %class.scoped_refptr** %376, align 8
  %402 = icmp eq %class.scoped_refptr* %401, %400
  br i1 %402, label %442, label %403

403:                                              ; preds = %399, %440
  %404 = phi %class.scoped_refptr* [ %405, %440 ], [ %401, %399 ]
  %405 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %404, i64 -1
  %406 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %405, i64 0, i32 0
  %407 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %406, align 8
  %408 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %407, null
  br i1 %408, label %440, label %409

409:                                              ; preds = %403
  %410 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %407, i64 0, i32 0
  %411 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %407, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = atomicrmw sub i32* %411, i32 1 acq_rel
  %413 = icmp eq i32 %412, 1
  br i1 %413, label %414, label %440

414:                                              ; preds = %409
  %415 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %410, i64 16
  %416 = bitcast %"class.base::RefCountedThreadSafe"* %415 to %"class.base::SingleThreadTaskRunner"**
  %417 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %416, align 8
  %418 = icmp eq %"class.base::SingleThreadTaskRunner"* %417, null
  br i1 %418, label %427, label %419

419:                                              ; preds = %414
  %420 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %417, i64 0, i32 0, i32 0, i32 1
  %421 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %420, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %422 = atomicrmw sub i32* %421, i32 1 acq_rel
  %423 = icmp eq i32 %422, 1
  br i1 %423, label %424, label %427

424:                                              ; preds = %419
  %425 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %420, i64 -2
  %426 = bitcast %"class.base::RefCountedThreadSafe.123"* %425 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %426) #11
  br label %427

427:                                              ; preds = %424, %419, %414
  %428 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %410, i64 12
  %429 = bitcast %"class.base::RefCountedThreadSafe"* %428 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %429) #11
  %430 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %410, i64 6
  %431 = bitcast %"class.base::RefCountedThreadSafe"* %430 to i8**
  %432 = load i8*, i8** %431, align 8
  %433 = icmp eq i8* %432, null
  br i1 %433, label %438, label %434

434:                                              ; preds = %427
  %435 = ptrtoint i8* %432 to i64
  %436 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %410, i64 8
  %437 = bitcast %"class.base::RefCountedThreadSafe"* %436 to i64*
  store i64 %435, i64* %437, align 8
  tail call void @_ZdlPv(i8* nonnull %432) #12
  br label %438

438:                                              ; preds = %434, %427
  %439 = bitcast %"class.net::CertNetFetcherURLRequest::RequestCore"* %407 to i8*
  tail call void @_ZdlPv(i8* %439) #12
  br label %440

440:                                              ; preds = %438, %409, %403
  %441 = icmp eq %class.scoped_refptr* %405, %400
  br i1 %441, label %442, label %403

442:                                              ; preds = %440, %399, %370
  %443 = phi %class.scoped_refptr* [ %400, %399 ], [ %374, %370 ], [ %400, %440 ]
  store %class.scoped_refptr* %443, %class.scoped_refptr** %376, align 8
  %444 = icmp eq %"class.net::(anonymous namespace)::Job"* %372, null
  br i1 %444, label %551, label %445

445:                                              ; preds = %442
  %446 = bitcast %"class.net::(anonymous namespace)::Job"* %372 to void (%"class.net::(anonymous namespace)::Job"*)***
  %447 = load void (%"class.net::(anonymous namespace)::Job"*)**, void (%"class.net::(anonymous namespace)::Job"*)*** %446, align 8
  %448 = getelementptr inbounds void (%"class.net::(anonymous namespace)::Job"*)*, void (%"class.net::(anonymous namespace)::Job"*)** %447, i64 8
  %449 = load void (%"class.net::(anonymous namespace)::Job"*)*, void (%"class.net::(anonymous namespace)::Job"*)** %448, align 8
  tail call void %449(%"class.net::(anonymous namespace)::Job"* nonnull %372) #11
  br label %551

450:                                              ; preds = %348
  %451 = tail call i8* @_Znwm(i64 24) #12
  %452 = bitcast i8* %451 to %"class.net::IOBuffer"*
  tail call void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"* nonnull %452, i64 4096) #11
  %453 = getelementptr inbounds i8, i8* %451, i64 8
  %454 = bitcast i8* %453 to i32*
  %455 = atomicrmw add i32* %454, i32 1 monotonic
  %456 = getelementptr inbounds i8, i8* %200, i64 72
  %457 = ptrtoint i8* %451 to i64
  %458 = bitcast i8* %456 to i64*
  %459 = bitcast i8* %456 to %"class.net::IOBuffer"**
  %460 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %459, align 8
  store i64 %457, i64* %458, align 8
  %461 = icmp eq %"class.net::IOBuffer"* %460, null
  br i1 %461, label %474, label %462

462:                                              ; preds = %450
  %463 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %460, i64 0, i32 1
  %464 = getelementptr inbounds %"class.base::RefCountedThreadSafe.401", %"class.base::RefCountedThreadSafe.401"* %463, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %465 = atomicrmw sub i32* %464, i32 1 acq_rel
  %466 = icmp eq i32 %465, 1
  br i1 %466, label %467, label %474

467:                                              ; preds = %462
  %468 = getelementptr inbounds %"class.base::RefCountedThreadSafe.401", %"class.base::RefCountedThreadSafe.401"* %463, i64 -2
  %469 = bitcast %"class.base::RefCountedThreadSafe.401"* %468 to %"class.net::IOBuffer"*
  %470 = bitcast %"class.base::RefCountedThreadSafe.401"* %468 to void (%"class.net::IOBuffer"*)***
  %471 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %470, align 8
  %472 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %471, i64 1
  %473 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %472, align 8
  tail call void %473(%"class.net::IOBuffer"* nonnull %469) #11
  br label %474

474:                                              ; preds = %467, %462, %450
  %475 = tail call i32 @_ZN3net30DefineNetworkTrafficAnnotationILm33ELm1436EEENS_27NetworkTrafficAnnotationTagERAT__KcRAT0__S2_([33 x i8]* nonnull dereferenceable(33) @.str.8, [1436 x i8]* nonnull dereferenceable(1436) @.str.9) #11
  %476 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %354, align 8
  %477 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %476, i64 0, i32 0
  %478 = bitcast i8* %200 to %"class.net::URLRequest::Delegate"*
  %479 = tail call %"class.net::URLRequest"* @_ZNK3net17URLRequestContext13CreateRequestERK4GURLNS_15RequestPriorityEPNS_10URLRequest8DelegateENS_27NetworkTrafficAnnotationTagE(%"class.net::URLRequestContext"* %351, %class.GURL* dereferenceable(120) %477, i32 2, %"class.net::URLRequest::Delegate"* nonnull %478, i32 %475) #11
  %480 = ptrtoint %"class.net::URLRequest"* %479 to i64
  %481 = getelementptr inbounds i8, i8* %200, i64 64
  %482 = bitcast i8* %481 to %"class.net::URLRequest"**
  %483 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %482, align 8
  %484 = bitcast i8* %481 to i64*
  store i64 %480, i64* %484, align 8
  %485 = icmp eq %"class.net::URLRequest"* %483, null
  br i1 %485, label %491, label %486

486:                                              ; preds = %474
  %487 = bitcast %"class.net::URLRequest"* %483 to void (%"class.net::URLRequest"*)***
  %488 = load void (%"class.net::URLRequest"*)**, void (%"class.net::URLRequest"*)*** %487, align 8
  %489 = getelementptr inbounds void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %488, i64 1
  %490 = load void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %489, align 8
  tail call void %490(%"class.net::URLRequest"* nonnull %483) #11
  br label %491

491:                                              ; preds = %486, %474
  %492 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %354, align 8
  %493 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %492, i64 0, i32 1
  %494 = load i32, i32* %493, align 8
  %495 = icmp eq i32 %494, 1
  br i1 %495, label %496, label %509

496:                                              ; preds = %491
  %497 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %482, align 8
  %498 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %498) #11
  %499 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %500 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %499, i64 0, i32 1, i32 0
  store i8 4, i8* %500, align 1
  %501 = bitcast %"class.std::__1::basic_string"* %4 to i32*
  store i32 1414745936, i32* %501, align 8
  %502 = getelementptr inbounds i8, i8* %498, i64 4
  store i8 0, i8* %502, align 4
  call void @_ZN3net10URLRequest10set_methodERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLRequest"* %497, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #11
  %503 = load i8, i8* %500, align 1
  %504 = icmp slt i8 %503, 0
  br i1 %504, label %505, label %508

505:                                              ; preds = %496
  %506 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %507 = load i8*, i8** %506, align 8
  call void @_ZdlPv(i8* %507) #12
  br label %508

508:                                              ; preds = %505, %496
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %498) #11
  br label %509

509:                                              ; preds = %508, %491
  %510 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %482, align 8
  call void @_ZN3net10URLRequest21set_allow_credentialsEb(%"class.net::URLRequest"* %510, i1 zeroext false) #11
  %511 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %482, align 8
  call void @_ZN3net10URLRequest18SetSecureDnsPolicyENS_15SecureDnsPolicyE(%"class.net::URLRequest"* %511, i32 1) #11
  %512 = bitcast %"class.url::Origin"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %512) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %512, i8 -86, i64 80, i1 false) #11
  %513 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %354, align 8
  %514 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %513, i64 0, i32 0
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %5, %class.GURL* dereferenceable(120) %514) #11
  %515 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %482, align 8
  %516 = bitcast %"class.net::IsolationInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 496, i8* nonnull %516) #11
  %517 = bitcast %"class.net::SiteForCookies"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %517) #11
  call void @_ZN3net14SiteForCookiesC1Ev(%"class.net::SiteForCookies"* nonnull %7) #11
  store i8 0, i8* %352, align 8
  %518 = getelementptr inbounds %"class.absl::optional.296", %"class.absl::optional.296"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %519 = bitcast %union.anon.300* %518 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %519, i8 0, i64 24, i1 false) #11
  call void @_ZN3net13IsolationInfo6CreateENS0_11RequestTypeERKN3url6OriginES5_RKNS_14SiteForCookiesEN4absl8optionalINSt3__13setINS_13SchemefulSiteENSB_4lessISD_EENSB_9allocatorISD_EEEEEE(%"class.net::IsolationInfo"* nonnull sret %6, i32 2, %"class.url::Origin"* nonnull dereferenceable(80) %5, %"class.url::Origin"* nonnull dereferenceable(80) %5, %"class.net::SiteForCookies"* nonnull dereferenceable(88) %7, %"class.absl::optional.296"* nonnull %8) #11
  %520 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %515, i64 0, i32 7
  %521 = call dereferenceable(496) %"class.net::IsolationInfo"* @_ZN3net13IsolationInfoaSERKS0_(%"class.net::IsolationInfo"* %520, %"class.net::IsolationInfo"* nonnull dereferenceable(496) %6) #11
  call void @_ZN3net13IsolationInfoD1Ev(%"class.net::IsolationInfo"* nonnull %6) #11
  %522 = load i8, i8* %352, align 8, !range !10
  %523 = icmp eq i8 %522, 0
  br i1 %523, label %529, label %524

524:                                              ; preds = %509
  %525 = getelementptr inbounds %"class.absl::optional.296", %"class.absl::optional.296"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %526 = getelementptr inbounds %"class.absl::optional.296", %"class.absl::optional.296"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %527 = bitcast %"class.std::__1::__tree_end_node"* %526 to %"class.std::__1::__tree_node.461"**
  %528 = load %"class.std::__1::__tree_node.461"*, %"class.std::__1::__tree_node.461"** %527, align 8
  call void @_ZNSt3__16__treeIN3net13SchemefulSiteENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.302"* %525, %"class.std::__1::__tree_node.461"* %528) #11
  store i8 0, i8* %352, align 8
  br label %529

529:                                              ; preds = %524, %509
  call void @_ZN3net14SiteForCookiesD1Ev(%"class.net::SiteForCookies"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %517) #11
  call void @llvm.lifetime.end.p0i8(i64 496, i8* nonnull %516) #11
  %530 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %482, align 8
  call void @_ZN3net10URLRequest5StartEv(%"class.net::URLRequest"* %530) #11
  %531 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %354, align 8
  %532 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %531, i64 0, i32 3, i32 0
  %533 = load i64, i64* %532, align 8
  %534 = icmp sgt i64 %533, 0
  br i1 %534, label %535, label %550

535:                                              ; preds = %529
  %536 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %536) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i32 535) #11
  %537 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %354, align 8
  %538 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %537, i64 0, i32 3, i32 0
  %539 = load i64, i64* %538, align 8
  %540 = call i8* @_Znwm(i64 64) #12, !noalias !11
  %541 = bitcast i8* %540 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %541, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_13JobEFvNS3_5ErrorEEJNS0_17UnretainedWrapperIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_13JobEFvNS2_5ErrorEEJNS0_17UnretainedWrapperIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !11
  %542 = getelementptr inbounds i8, i8* %540, i64 32
  %543 = bitcast i8* %542 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::Job"*, i32)* @_ZN3net12_GLOBAL__N_13Job11FailRequestENS_5ErrorE to i64), i64 0>, <2 x i64>* %543, align 8, !noalias !11
  %544 = getelementptr inbounds i8, i8* %540, i64 48
  %545 = bitcast i8* %544 to i64*
  store i64 %210, i64* %545, align 8, !noalias !11
  %546 = getelementptr inbounds i8, i8* %540, i64 56
  %547 = bitcast i8* %546 to i32*
  store i32 -7, i32* %547, align 4, !noalias !11
  %548 = bitcast %"class.base::OnceCallback"* %10 to i8**
  store i8* %540, i8** %548, align 8, !alias.scope !11
  call void @_ZN4base12OneShotTimer5StartERKNS_8LocationENS_9TimeDeltaENS_12OnceCallbackIFvvEEE(%"class.base::OneShotTimer"* %207, %"class.base::Location"* nonnull dereferenceable(32) %9, i64 %539, %"class.base::OnceCallback"* nonnull %10) #11
  %549 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %549) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %536) #11
  br label %550

550:                                              ; preds = %535, %529
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %512) #11
  br label %551

551:                                              ; preds = %550, %445, %442
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %352)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %353)
  br label %556

552:                                              ; preds = %196
  tail call fastcc void @_ZN3net12_GLOBAL__N_13Job13AttachRequestE13scoped_refptrINS_24CertNetFetcherURLRequest11RequestCoreEE(%"class.net::(anonymous namespace)::Job"* nonnull %197, %"class.net::CertNetFetcherURLRequest::RequestCore"* %2)
  %553 = icmp eq %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1, null
  br i1 %553, label %556, label %554

554:                                              ; preds = %552
  tail call void @_ZN4GURLD1Ev(%class.GURL* %169) #11
  %555 = bitcast %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1 to i8*
  tail call void @_ZdlPv(i8* %555) #12
  br label %556

556:                                              ; preds = %551, %552, %554
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_13Job13AttachRequestE13scoped_refptrINS_24CertNetFetcherURLRequest11RequestCoreEE(%"class.net::(anonymous namespace)::Job"*, %"class.net::CertNetFetcherURLRequest::RequestCore"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr, align 8
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* %1, %"class.net::CertNetFetcherURLRequest::RequestCore"** %4, align 8
  %5 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %1, i64 0, i32 1
  store %"class.net::(anonymous namespace)::Job"* %0, %"class.net::(anonymous namespace)::Job"** %5, align 8
  %6 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %8 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %9 = load %class.scoped_refptr*, %class.scoped_refptr** %8, align 8
  %10 = icmp ult %class.scoped_refptr* %7, %9
  br i1 %10, label %11, label %17

11:                                               ; preds = %2
  %12 = ptrtoint %"class.net::CertNetFetcherURLRequest::RequestCore"* %1 to i64
  %13 = bitcast %class.scoped_refptr* %7 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* null, %"class.net::CertNetFetcherURLRequest::RequestCore"** %4, align 8
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 1
  %15 = ptrtoint %class.scoped_refptr* %14 to i64
  %16 = bitcast %class.scoped_refptr** %6 to i64*
  store i64 %15, i64* %16, align 8
  br label %52

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorI13scoped_refptrIN3net24CertNetFetcherURLRequest11RequestCoreEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %18, %class.scoped_refptr* nonnull dereferenceable(8) %3) #11
  %19 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %4, align 8
  %20 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %19, null
  br i1 %20, label %52, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %19, i64 0, i32 0
  %23 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %52

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 16
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %27 to %"class.base::SingleThreadTaskRunner"**
  %29 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %28, align 8
  %30 = icmp eq %"class.base::SingleThreadTaskRunner"* %29, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %29, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %32, i64 -2
  %38 = bitcast %"class.base::RefCountedThreadSafe.123"* %37 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %38) #11
  br label %39

39:                                               ; preds = %36, %31, %26
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 12
  %41 = bitcast %"class.base::RefCountedThreadSafe"* %40 to %"class.base::WaitableEvent"*
  call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %41) #11
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 6
  %43 = bitcast %"class.base::RefCountedThreadSafe"* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %39
  %47 = ptrtoint i8* %44 to i64
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 8
  %49 = bitcast %"class.base::RefCountedThreadSafe"* %48 to i64*
  store i64 %47, i64* %49, align 8
  call void @_ZdlPv(i8* nonnull %44) #12
  br label %50

50:                                               ; preds = %46, %39
  %51 = bitcast %"class.net::CertNetFetcherURLRequest::RequestCore"* %19 to i8*
  call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %11, %17, %21, %50
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN3net24CertNetFetcherURLRequest11RequestCoreEED2Ev(%class.scoped_refptr*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %3 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %2, align 8
  %4 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %3, null
  br i1 %4, label %36, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %36

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 16
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %11 to %"class.base::SingleThreadTaskRunner"**
  %13 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %12, align 8
  %14 = icmp eq %"class.base::SingleThreadTaskRunner"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %13, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %16, i64 -2
  %22 = bitcast %"class.base::RefCountedThreadSafe.123"* %21 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %22) #11
  br label %23

23:                                               ; preds = %20, %15, %10
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 12
  %25 = bitcast %"class.base::RefCountedThreadSafe"* %24 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %25) #11
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 6
  %27 = bitcast %"class.base::RefCountedThreadSafe"* %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %23
  %31 = ptrtoint i8* %28 to i64
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 8
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %32 to i64*
  store i64 %31, i64* %33, align 8
  tail call void @_ZdlPv(i8* nonnull %28) #12
  br label %34

34:                                               ; preds = %30, %23
  %35 = bitcast %"class.net::CertNetFetcherURLRequest::RequestCore"* %3 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %5, %34, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24CertNetFetcherURLRequest29AsyncCertNetFetcherURLRequest8ShutdownEv(%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %6, label %12

6:                                                ; preds = %123, %1
  %7 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIPN3net12_GLOBAL__N_13JobENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS3_13JobComparatorELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.403"* %7, %"class.std::__1::__tree_node"* %9) #11
  %10 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %10, align 8
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %2, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %11, align 8
  ret void

12:                                               ; preds = %1, %123
  %13 = phi %"class.std::__1::__tree_end_node"* [ %124, %123 ], [ %3, %1 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 4
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.net::(anonymous namespace)::Job"**
  %16 = load %"class.net::(anonymous namespace)::Job"*, %"class.net::(anonymous namespace)::Job"** %15, align 8
  %17 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %16, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %17) #11
  %18 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %18, align 8
  store %"class.net::URLRequest"* null, %"class.net::URLRequest"** %18, align 8
  %20 = icmp eq %"class.net::URLRequest"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %12
  %22 = bitcast %"class.net::URLRequest"* %19 to void (%"class.net::URLRequest"*)***
  %23 = load void (%"class.net::URLRequest"*)**, void (%"class.net::URLRequest"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %23, i64 1
  %25 = load void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %24, align 8
  tail call void %25(%"class.net::URLRequest"* nonnull %19) #11
  br label %26

26:                                               ; preds = %21, %12
  %27 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %16, i64 0, i32 1, i32 0, i32 0
  %28 = load %class.scoped_refptr*, %class.scoped_refptr** %27, align 8
  %29 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %16, i64 0, i32 1, i32 0, i32 1
  %30 = load %class.scoped_refptr*, %class.scoped_refptr** %29, align 8
  %31 = icmp eq %class.scoped_refptr* %28, %30
  br i1 %31, label %94, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %16, i64 0, i32 3
  %34 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %33, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %16, i64 0, i32 3, i32 0, i32 1
  br label %36

36:                                               ; preds = %47, %32
  %37 = phi %class.scoped_refptr* [ %28, %32 ], [ %49, %47 ]
  %38 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 0, i32 0
  %39 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %38, align 8
  %40 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %39, i64 0, i32 1
  store %"class.net::(anonymous namespace)::Job"* null, %"class.net::(anonymous namespace)::Job"** %40, align 8
  %41 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %39, i64 0, i32 2
  store i32 -3, i32* %41, align 8
  %42 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %39, i64 0, i32 3
  %43 = icmp eq %"class.std::__1::vector.19"* %42, %33
  br i1 %43, label %47, label %44

44:                                               ; preds = %36
  %45 = load i8*, i8** %34, align 8
  %46 = load i8*, i8** %35, align 8
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.19"* %42, i8* %45, i8* %46) #11
  br label %47

47:                                               ; preds = %44, %36
  %48 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %39, i64 0, i32 4
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %48) #11
  %49 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 1
  %50 = icmp eq %class.scoped_refptr* %49, %30
  br i1 %50, label %51, label %36

51:                                               ; preds = %47
  %52 = load %class.scoped_refptr*, %class.scoped_refptr** %27, align 8
  %53 = load %class.scoped_refptr*, %class.scoped_refptr** %29, align 8
  %54 = icmp eq %class.scoped_refptr* %53, %52
  br i1 %54, label %94, label %55

55:                                               ; preds = %51, %92
  %56 = phi %class.scoped_refptr* [ %57, %92 ], [ %53, %51 ]
  %57 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %56, i64 -1
  %58 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %57, i64 0, i32 0
  %59 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %58, align 8
  %60 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %59, null
  br i1 %60, label %92, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %59, i64 0, i32 0
  %63 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw sub i32* %63, i32 1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %92

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %62, i64 16
  %68 = bitcast %"class.base::RefCountedThreadSafe"* %67 to %"class.base::SingleThreadTaskRunner"**
  %69 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %68, align 8
  %70 = icmp eq %"class.base::SingleThreadTaskRunner"* %69, null
  br i1 %70, label %79, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %69, i64 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw sub i32* %73, i32 1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %72, i64 -2
  %78 = bitcast %"class.base::RefCountedThreadSafe.123"* %77 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %78) #11
  br label %79

79:                                               ; preds = %76, %71, %66
  %80 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %62, i64 12
  %81 = bitcast %"class.base::RefCountedThreadSafe"* %80 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %81) #11
  %82 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %62, i64 6
  %83 = bitcast %"class.base::RefCountedThreadSafe"* %82 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %90, label %86

86:                                               ; preds = %79
  %87 = ptrtoint i8* %84 to i64
  %88 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %62, i64 8
  %89 = bitcast %"class.base::RefCountedThreadSafe"* %88 to i64*
  store i64 %87, i64* %89, align 8
  tail call void @_ZdlPv(i8* nonnull %84) #12
  br label %90

90:                                               ; preds = %86, %79
  %91 = bitcast %"class.net::CertNetFetcherURLRequest::RequestCore"* %59 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %90, %61, %55
  %93 = icmp eq %class.scoped_refptr* %57, %52
  br i1 %93, label %94, label %55

94:                                               ; preds = %92, %26, %51
  %95 = phi %class.scoped_refptr* [ %52, %51 ], [ %28, %26 ], [ %52, %92 ]
  store %class.scoped_refptr* %95, %class.scoped_refptr** %29, align 8
  %96 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 1, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %107

99:                                               ; preds = %94
  %100 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node_base"*
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 2
  %102 = bitcast %"class.std::__1::__tree_end_node"* %101 to %"class.std::__1::__tree_end_node"**
  %103 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %102, align 8
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %103, i64 0, i32 0
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, %100
  br i1 %106, label %123, label %114

107:                                              ; preds = %94, %107
  %108 = phi %"class.std::__1::__tree_node_base"* [ %110, %107 ], [ %97, %94 ]
  %109 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, null
  br i1 %111, label %112, label %107

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %108, i64 0, i32 0
  br label %123

114:                                              ; preds = %99, %114
  %115 = phi %"class.std::__1::__tree_end_node"** [ %118, %114 ], [ %102, %99 ]
  %116 = bitcast %"class.std::__1::__tree_end_node"** %115 to %"class.std::__1::__tree_node_base"**
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  %119 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %118, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 0, i32 0
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node_base"* %121, %117
  br i1 %122, label %123, label %114

123:                                              ; preds = %114, %99, %112
  %124 = phi %"class.std::__1::__tree_end_node"* [ %113, %112 ], [ %103, %99 ], [ %119, %114 ]
  %125 = icmp eq %"class.std::__1::__tree_end_node"* %124, %4
  br i1 %125, label %6, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24CertNetFetcherURLRequestC2Ev(%"class.net::CertNetFetcherURLRequest"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net24CertNetFetcherURLRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = tail call dereferenceable(8) %class.scoped_refptr.420* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #11
  %5 = getelementptr inbounds %class.scoped_refptr.420, %class.scoped_refptr.420* %4, i64 0, i32 0
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 1, i32 0
  store %"class.base::SingleThreadTaskRunner"* %6, %"class.base::SingleThreadTaskRunner"** %7, align 8
  %8 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 2
  %14 = bitcast %"class.net::URLRequestContext"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false)
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.420* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24CertNetFetcherURLRequestD2Ev(%"class.net::CertNetFetcherURLRequest"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net24CertNetFetcherURLRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*, %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"** %3, align 8
  store %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* null, %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"** %3, align 8
  %5 = icmp eq %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIPN3net12_GLOBAL__N_13JobENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS3_13JobComparatorELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.403"* %7, %"class.std::__1::__tree_node"* %10) #11
  %11 = bitcast %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %6
  %13 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %13, align 8
  %15 = icmp eq %"class.base::SingleThreadTaskRunner"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %14, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe.123"* %22 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %23) #11
  br label %24

24:                                               ; preds = %12, %16, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24CertNetFetcherURLRequestD0Ev(%"class.net::CertNetFetcherURLRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net24CertNetFetcherURLRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*, %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"** %3, align 8
  store %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* null, %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"** %3, align 8
  %5 = icmp eq %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIPN3net12_GLOBAL__N_13JobENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS3_13JobComparatorELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.403"* %7, %"class.std::__1::__tree_node"* %10) #11
  %11 = bitcast %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %13, align 8
  %15 = icmp eq %"class.base::SingleThreadTaskRunner"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %14, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe.123"* %22 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %23) #11
  br label %24

24:                                               ; preds = %12, %16, %21
  %25 = bitcast %"class.net::CertNetFetcherURLRequest"* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net24CertNetFetcherURLRequest20SetURLRequestContextEPNS_17URLRequestContextE(%"class.net::CertNetFetcherURLRequest"* nocapture, %"class.net::URLRequestContext"*) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 2
  store %"class.net::URLRequestContext"* %1, %"class.net::URLRequestContext"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN3net24CertNetFetcherURLRequest27GetDefaultTimeoutForTestingEv() local_unnamed_addr #7 align 2 {
  ret i64 15000000
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24CertNetFetcherURLRequest8ShutdownEv(%"class.net::CertNetFetcherURLRequest"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*, %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"** %2, align 8
  %4 = icmp eq %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  tail call void @_ZN3net24CertNetFetcherURLRequest29AsyncCertNetFetcherURLRequest8ShutdownEv(%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* nonnull %3)
  %6 = load %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*, %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"** %2, align 8
  store %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* null, %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"** %2, align 8
  %7 = icmp eq %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIPN3net12_GLOBAL__N_13JobENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS3_13JobComparatorELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.403"* %9, %"class.std::__1::__tree_node"* %12) #11
  %13 = bitcast %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %6 to i8*
  tail call void @_ZdlPv(i8* %13) #12
  br label %14

14:                                               ; preds = %1, %8, %5
  %15 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 2
  store %"class.net::URLRequestContext"* null, %"class.net::URLRequestContext"** %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::CertNetFetcher::Request"* @_ZN3net24CertNetFetcherURLRequest14FetchCaIssuersERK4GURLii(%"class.net::CertNetFetcherURLRequest"*, %class.GURL* dereferenceable(120), i32, i32) unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 144) #12
  %6 = bitcast i8* %5 to %"struct.net::CertNetFetcherURLRequest::RequestParams"*
  %7 = bitcast i8* %5 to %class.GURL*
  tail call void @_ZN4GURLC1Ev(%class.GURL* nonnull %7) #11
  %8 = getelementptr inbounds i8, i8* %5, i64 120
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 128
  %11 = bitcast i8* %10 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  %12 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* nonnull %7, %class.GURL* dereferenceable(120) %1) #11
  store i32 0, i32* %9, align 8
  %13 = icmp eq i32 %2, -1
  %14 = sext i32 %2 to i64
  %15 = mul nsw i64 %14, 1000
  %16 = select i1 %13, i64 15000000, i64 %15
  %17 = getelementptr inbounds i8, i8* %5, i64 136
  %18 = bitcast i8* %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = icmp eq i32 %3, -1
  %20 = select i1 %19, i32 65536, i32 %3
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %11, align 8
  %22 = tail call %"class.net::CertNetFetcher::Request"* @_ZN3net24CertNetFetcherURLRequest7DoFetchENSt3__110unique_ptrINS0_13RequestParamsENS1_14default_deleteIS3_EEEE(%"class.net::CertNetFetcherURLRequest"* %0, %"struct.net::CertNetFetcherURLRequest::RequestParams"* nonnull %6)
  ret %"class.net::CertNetFetcher::Request"* %22
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::CertNetFetcher::Request"* @_ZN3net24CertNetFetcherURLRequest7DoFetchENSt3__110unique_ptrINS0_13RequestParamsENS1_14default_deleteIS3_EEEE(%"class.net::CertNetFetcherURLRequest"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = ptrtoint %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1 to i64
  %6 = tail call i8* @_Znwm(i64 72) #12
  %7 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %7, align 8
  %9 = icmp eq %"class.base::SingleThreadTaskRunner"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %2, %10
  %14 = ptrtoint %"class.base::SingleThreadTaskRunner"* %8 to i64
  %15 = bitcast i8* %6 to i32*
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %6, i64 8
  %17 = bitcast i8* %16 to %"class.net::(anonymous namespace)::Job"**
  store %"class.net::(anonymous namespace)::Job"* null, %"class.net::(anonymous namespace)::Job"** %17, align 8
  %18 = getelementptr inbounds i8, i8* %6, i64 16
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #11
  %21 = getelementptr inbounds i8, i8* %6, i64 48
  %22 = bitcast i8* %21 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* %22, i32 0, i32 1) #11
  %23 = getelementptr inbounds i8, i8* %6, i64 64
  %24 = bitcast i8* %23 to i64*
  store i64 %14, i64* %24, align 8
  %25 = ptrtoint i8* %6 to i64
  %26 = atomicrmw add i32* %15, i32 1 monotonic
  %27 = bitcast %"class.base::SingleThreadTaskRunner"** %7 to %"class.base::TaskRunner"**
  %28 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %27, align 8
  %29 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i32 871) #11
  %30 = call i8* @_Znwm(i64 72) #12, !noalias !16
  %31 = bitcast i8* %30 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %31, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net24CertNetFetcherURLRequestEFvNSt3__110unique_ptrINS4_13RequestParamsENS5_14default_deleteIS7_EEEE13scoped_refptrINS4_11RequestCoreEEEJSB_IS4_ESA_SD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net24CertNetFetcherURLRequestEFvNSt3__110unique_ptrINS3_13RequestParamsENS4_14default_deleteIS6_EEEE13scoped_refptrINS3_11RequestCoreEEEJSA_IS3_ES9_SC_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !16
  %32 = getelementptr inbounds i8, i8* %30, i64 32
  %33 = bitcast i8* %32 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::CertNetFetcherURLRequest"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"class.net::CertNetFetcherURLRequest::RequestCore"*)* @_ZN3net24CertNetFetcherURLRequest24DoFetchOnNetworkSequenceENSt3__110unique_ptrINS0_13RequestParamsENS1_14default_deleteIS3_EEEE13scoped_refptrINS0_11RequestCoreEE to i64), i64 0>, <2 x i64>* %33, align 8, !noalias !16
  %34 = getelementptr inbounds i8, i8* %30, i64 48
  %35 = bitcast i8* %34 to %"class.net::CertNetFetcherURLRequest"**
  store %"class.net::CertNetFetcherURLRequest"* %0, %"class.net::CertNetFetcherURLRequest"** %35, align 8, !noalias !16
  %36 = icmp eq %"class.net::CertNetFetcherURLRequest"* %0, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %13
  %38 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic, !noalias !16
  br label %40

40:                                               ; preds = %37, %13
  %41 = getelementptr inbounds i8, i8* %30, i64 56
  %42 = bitcast i8* %41 to i64*
  store i64 %5, i64* %42, align 8, !noalias !16
  %43 = getelementptr inbounds i8, i8* %30, i64 64
  %44 = bitcast i8* %43 to i8**
  store i8* %6, i8** %44, align 8, !noalias !16
  %45 = atomicrmw add i32* %15, i32 1 monotonic, !noalias !16
  %46 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %30, i8** %46, align 8, !alias.scope !16
  %47 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %28, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #11
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %48) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #11
  br i1 %47, label %54, label %49

49:                                               ; preds = %40
  store i32 -3, i32* %19, align 8
  %50 = bitcast i8* %20 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %6, i64 32
  %53 = bitcast i8* %52 to i64*
  store i64 %51, i64* %53, align 8
  call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %22) #11
  br label %54

54:                                               ; preds = %49, %40
  %55 = call i8* @_Znwm(i64 16) #12
  %56 = bitcast i8* %55 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net12_GLOBAL__N_125CertNetFetcherRequestImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = getelementptr inbounds i8, i8* %55, i64 8
  %58 = bitcast i8* %57 to i64*
  store i64 %25, i64* %58, align 8
  %59 = bitcast i8* %55 to %"class.net::CertNetFetcher::Request"*
  ret %"class.net::CertNetFetcher::Request"* %59
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::CertNetFetcher::Request"* @_ZN3net24CertNetFetcherURLRequest8FetchCrlERK4GURLii(%"class.net::CertNetFetcherURLRequest"*, %class.GURL* dereferenceable(120), i32, i32) unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 144) #12
  %6 = bitcast i8* %5 to %"struct.net::CertNetFetcherURLRequest::RequestParams"*
  %7 = bitcast i8* %5 to %class.GURL*
  tail call void @_ZN4GURLC1Ev(%class.GURL* nonnull %7) #11
  %8 = getelementptr inbounds i8, i8* %5, i64 120
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 128
  %11 = bitcast i8* %10 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  %12 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* nonnull %7, %class.GURL* dereferenceable(120) %1) #11
  store i32 0, i32* %9, align 8
  %13 = icmp eq i32 %2, -1
  %14 = sext i32 %2 to i64
  %15 = mul nsw i64 %14, 1000
  %16 = select i1 %13, i64 15000000, i64 %15
  %17 = getelementptr inbounds i8, i8* %5, i64 136
  %18 = bitcast i8* %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = icmp eq i32 %3, -1
  %20 = select i1 %19, i32 5242880, i32 %3
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %11, align 8
  %22 = tail call %"class.net::CertNetFetcher::Request"* @_ZN3net24CertNetFetcherURLRequest7DoFetchENSt3__110unique_ptrINS0_13RequestParamsENS1_14default_deleteIS3_EEEE(%"class.net::CertNetFetcherURLRequest"* %0, %"struct.net::CertNetFetcherURLRequest::RequestParams"* nonnull %6)
  ret %"class.net::CertNetFetcher::Request"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::CertNetFetcher::Request"* @_ZN3net24CertNetFetcherURLRequest9FetchOcspERK4GURLii(%"class.net::CertNetFetcherURLRequest"*, %class.GURL* dereferenceable(120), i32, i32) unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 144) #12
  %6 = bitcast i8* %5 to %"struct.net::CertNetFetcherURLRequest::RequestParams"*
  %7 = bitcast i8* %5 to %class.GURL*
  tail call void @_ZN4GURLC1Ev(%class.GURL* nonnull %7) #11
  %8 = getelementptr inbounds i8, i8* %5, i64 120
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 128
  %11 = bitcast i8* %10 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  %12 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* nonnull %7, %class.GURL* dereferenceable(120) %1) #11
  store i32 0, i32* %9, align 8
  %13 = icmp eq i32 %2, -1
  %14 = sext i32 %2 to i64
  %15 = mul nsw i64 %14, 1000
  %16 = select i1 %13, i64 15000000, i64 %15
  %17 = getelementptr inbounds i8, i8* %5, i64 136
  %18 = bitcast i8* %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = icmp eq i32 %3, -1
  %20 = select i1 %19, i32 65536, i32 %3
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %11, align 8
  %22 = tail call %"class.net::CertNetFetcher::Request"* @_ZN3net24CertNetFetcherURLRequest7DoFetchENSt3__110unique_ptrINS0_13RequestParamsENS1_14default_deleteIS3_EEEE(%"class.net::CertNetFetcherURLRequest"* %0, %"struct.net::CertNetFetcherURLRequest::RequestParams"* nonnull %6)
  ret %"class.net::CertNetFetcher::Request"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24CertNetFetcherURLRequest24DoFetchOnNetworkSequenceENSt3__110unique_ptrINS0_13RequestParamsENS1_14default_deleteIS3_EEEE13scoped_refptrINS0_11RequestCoreEE(%"class.net::CertNetFetcherURLRequest"* nocapture, %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"class.net::CertNetFetcherURLRequest::RequestCore"*) #0 align 2 {
  %4 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 2
  %5 = load %"class.net::URLRequestContext"*, %"class.net::URLRequestContext"** %4, align 8
  %6 = icmp eq %"class.net::URLRequestContext"* %5, null
  %7 = ptrtoint %"class.net::URLRequestContext"* %5 to i64
  br i1 %6, label %8, label %16

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %2, i64 0, i32 2
  store i32 -3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %2, i64 0, i32 3
  %11 = bitcast %"class.std::__1::vector.19"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %2, i64 0, i32 3, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %2, i64 0, i32 4
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %15) #11
  br label %37

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.429"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*, %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"** %18, align 8
  %20 = icmp eq %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %19, null
  br i1 %20, label %21, label %30

21:                                               ; preds = %16
  %22 = tail call i8* @_Znwm(i64 32) #12
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #11
  %24 = bitcast i8* %22 to i8**
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 24
  %26 = bitcast i8* %25 to i64*
  store i64 %7, i64* %26, align 8
  %27 = ptrtoint i8* %22 to i64
  %28 = bitcast %"class.std::__1::unique_ptr.429"* %17 to i64*
  store i64 %27, i64* %28, align 8
  %29 = bitcast i8* %22 to %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*
  br label %30

30:                                               ; preds = %16, %21
  %31 = phi %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* [ %19, %16 ], [ %29, %21 ]
  %32 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %2, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  br label %36

36:                                               ; preds = %30, %33
  tail call void @_ZN3net24CertNetFetcherURLRequest29AsyncCertNetFetcherURLRequest5FetchENSt3__110unique_ptrINS0_13RequestParamsENS2_14default_deleteIS4_EEEE13scoped_refptrINS0_11RequestCoreEE(%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* nonnull %31, %"struct.net::CertNetFetcherURLRequest::RequestParams"* %1, %"class.net::CertNetFetcherURLRequest::RequestCore"* %2)
  br label %37

37:                                               ; preds = %36, %8
  %38 = phi %"struct.net::CertNetFetcherURLRequest::RequestParams"* [ %1, %8 ], [ null, %36 ]
  %39 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %2, null
  br i1 %39, label %71, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %2, i64 0, i32 0
  %42 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %71

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 16
  %47 = bitcast %"class.base::RefCountedThreadSafe"* %46 to %"class.base::SingleThreadTaskRunner"**
  %48 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %47, align 8
  %49 = icmp eq %"class.base::SingleThreadTaskRunner"* %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %48, i64 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw sub i32* %52, i32 1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %51, i64 -2
  %57 = bitcast %"class.base::RefCountedThreadSafe.123"* %56 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %57) #11
  br label %58

58:                                               ; preds = %55, %50, %45
  %59 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 12
  %60 = bitcast %"class.base::RefCountedThreadSafe"* %59 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %60) #11
  %61 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 6
  %62 = bitcast %"class.base::RefCountedThreadSafe"* %61 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %58
  %66 = ptrtoint i8* %63 to i64
  %67 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 8
  %68 = bitcast %"class.base::RefCountedThreadSafe"* %67 to i64*
  store i64 %66, i64* %68, align 8
  tail call void @_ZdlPv(i8* nonnull %63) #12
  br label %69

69:                                               ; preds = %65, %58
  %70 = bitcast %"class.net::CertNetFetcherURLRequest::RequestCore"* %2 to i8*
  tail call void @_ZdlPv(i8* %70) #12
  br label %71

71:                                               ; preds = %37, %40, %69
  %72 = icmp eq %"struct.net::CertNetFetcherURLRequest::RequestParams"* %38, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %38, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %74) #11
  %75 = bitcast %"struct.net::CertNetFetcherURLRequest::RequestParams"* %38 to i8*
  tail call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %71, %73
  ret void
}

declare zeroext i1 @_ZNK4GURLltERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %class.scoped_refptr* @_ZNSt3__16vectorI13scoped_refptrIN3net24CertNetFetcherURLRequest11RequestCoreEENS_9allocatorIS5_EEE5eraseENS_11__wrap_iterIPKS5_EE(%"class.std::__1::vector"*, %class.scoped_refptr*) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %6 = icmp eq %class.scoped_refptr* %3, %5
  br i1 %6, label %55, label %7

7:                                                ; preds = %2, %48
  %8 = phi %class.scoped_refptr* [ %50, %48 ], [ %1, %2 ]
  %9 = phi %class.scoped_refptr* [ %49, %48 ], [ %3, %2 ]
  %10 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %9, i64 0, i32 0
  %11 = bitcast %class.scoped_refptr* %9 to i64*
  %12 = load i64, i64* %11, align 8
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* null, %"class.net::CertNetFetcherURLRequest::RequestCore"** %10, align 8
  %13 = bitcast %class.scoped_refptr* %8 to i64*
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %8, i64 0, i32 0
  %15 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %14, align 8
  store i64 %12, i64* %13, align 8
  %16 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %15, null
  br i1 %16, label %48, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %15, i64 0, i32 0
  %19 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %48

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 16
  %24 = bitcast %"class.base::RefCountedThreadSafe"* %23 to %"class.base::SingleThreadTaskRunner"**
  %25 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %24, align 8
  %26 = icmp eq %"class.base::SingleThreadTaskRunner"* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %25, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %28, i64 -2
  %34 = bitcast %"class.base::RefCountedThreadSafe.123"* %33 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %34) #11
  br label %35

35:                                               ; preds = %32, %27, %22
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 12
  %37 = bitcast %"class.base::RefCountedThreadSafe"* %36 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %37) #11
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 6
  %39 = bitcast %"class.base::RefCountedThreadSafe"* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %35
  %43 = ptrtoint i8* %40 to i64
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 8
  %45 = bitcast %"class.base::RefCountedThreadSafe"* %44 to i64*
  store i64 %43, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %40) #12
  br label %46

46:                                               ; preds = %42, %35
  %47 = bitcast %"class.net::CertNetFetcherURLRequest::RequestCore"* %15 to i8*
  tail call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %46, %17, %7
  %49 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %9, i64 1
  %50 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %8, i64 1
  %51 = icmp eq %class.scoped_refptr* %49, %5
  br i1 %51, label %52, label %7

52:                                               ; preds = %48
  %53 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %54 = icmp eq %class.scoped_refptr* %53, %50
  br i1 %54, label %97, label %55

55:                                               ; preds = %2, %52
  %56 = phi %class.scoped_refptr* [ %50, %52 ], [ %1, %2 ]
  %57 = phi %class.scoped_refptr* [ %53, %52 ], [ %3, %2 ]
  br label %58

58:                                               ; preds = %55, %95
  %59 = phi %class.scoped_refptr* [ %60, %95 ], [ %57, %55 ]
  %60 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %59, i64 -1
  %61 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %60, i64 0, i32 0
  %62 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %61, align 8
  %63 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %62, null
  br i1 %63, label %95, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %62, i64 0, i32 0
  %66 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw sub i32* %66, i32 1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %95

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %65, i64 16
  %71 = bitcast %"class.base::RefCountedThreadSafe"* %70 to %"class.base::SingleThreadTaskRunner"**
  %72 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %71, align 8
  %73 = icmp eq %"class.base::SingleThreadTaskRunner"* %72, null
  br i1 %73, label %82, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %72, i64 0, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw sub i32* %76, i32 1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %75, i64 -2
  %81 = bitcast %"class.base::RefCountedThreadSafe.123"* %80 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %81) #11
  br label %82

82:                                               ; preds = %79, %74, %69
  %83 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %65, i64 12
  %84 = bitcast %"class.base::RefCountedThreadSafe"* %83 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %84) #11
  %85 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %65, i64 6
  %86 = bitcast %"class.base::RefCountedThreadSafe"* %85 to i8**
  %87 = load i8*, i8** %86, align 8
  %88 = icmp eq i8* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %82
  %90 = ptrtoint i8* %87 to i64
  %91 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %65, i64 8
  %92 = bitcast %"class.base::RefCountedThreadSafe"* %91 to i64*
  store i64 %90, i64* %92, align 8
  tail call void @_ZdlPv(i8* nonnull %87) #12
  br label %93

93:                                               ; preds = %89, %82
  %94 = bitcast %"class.net::CertNetFetcherURLRequest::RequestCore"* %62 to i8*
  tail call void @_ZdlPv(i8* %94) #12
  br label %95

95:                                               ; preds = %93, %64, %58
  %96 = icmp eq %class.scoped_refptr* %60, %56
  br i1 %96, label %97, label %58

97:                                               ; preds = %95, %52
  %98 = phi %class.scoped_refptr* [ %50, %52 ], [ %56, %95 ]
  store %class.scoped_refptr* %98, %class.scoped_refptr** %4, align 8
  ret %class.scoped_refptr* %1
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.net::(anonymous namespace)::Job"* @_ZN3net24CertNetFetcherURLRequest29AsyncCertNetFetcherURLRequest9RemoveJobEPNS_12_GLOBAL__N_13JobE(%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*, %"class.net::(anonymous namespace)::Job"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %94, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %8, %53
  %11 = phi %"class.std::__1::__tree_end_node"* [ %55, %53 ], [ %4, %8 ]
  %12 = phi %"class.std::__1::__tree_node"* [ %56, %53 ], [ %6, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.net::(anonymous namespace)::Job"*, %"class.net::(anonymous namespace)::Job"** %13, align 8
  %15 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %14, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %15, align 8
  %17 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %9, align 8
  %18 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %16, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %16, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %16, i64 0, i32 2
  %21 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %17, i64 0, i32 0
  %22 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %17, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %17, i64 0, i32 2
  %24 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %18, %class.GURL* dereferenceable(120) %21) #11
  br i1 %24, label %39, label %25

25:                                               ; preds = %10
  %26 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %21, %class.GURL* dereferenceable(120) %18) #11
  br i1 %26, label %50, label %27

27:                                               ; preds = %25
  %28 = load i32, i32* %19, align 4
  %29 = load i32, i32* %22, align 4
  %30 = icmp slt i32 %28, %29
  br i1 %30, label %39, label %31

31:                                               ; preds = %27
  %32 = icmp slt i32 %29, %28
  br i1 %32, label %50, label %33

33:                                               ; preds = %31
  %34 = load i64, i64* %20, align 8
  %35 = load i64, i64* %23, align 8
  %36 = icmp ult i64 %34, %35
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = icmp ult i64 %35, %34
  br i1 %38, label %50, label %42

39:                                               ; preds = %33, %27, %10
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::__tree_node_base"** %40 to %"class.std::__1::__tree_node"**
  br label %53

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %17, i64 0, i32 3, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %16, i64 0, i32 3, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp slt i64 %46, %44
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::__tree_node_base"** %48 to %"class.std::__1::__tree_node"**
  br i1 %47, label %53, label %50

50:                                               ; preds = %42, %37, %31, %25
  %51 = bitcast %"class.std::__1::__tree_node"* %12 to %"class.std::__1::__tree_node"**
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %53

53:                                               ; preds = %50, %42, %39
  %54 = phi %"class.std::__1::__tree_node"** [ %51, %50 ], [ %41, %39 ], [ %49, %42 ]
  %55 = phi %"class.std::__1::__tree_end_node"* [ %52, %50 ], [ %11, %39 ], [ %11, %42 ]
  %56 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %54, align 8
  %57 = icmp eq %"class.std::__1::__tree_node"* %56, null
  br i1 %57, label %58, label %10

58:                                               ; preds = %53
  %59 = icmp eq %"class.std::__1::__tree_end_node"* %55, %4
  br i1 %59, label %94, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 4
  %62 = bitcast %"class.std::__1::__tree_end_node"* %61 to %"class.net::(anonymous namespace)::Job"**
  %63 = load %"class.net::(anonymous namespace)::Job"*, %"class.net::(anonymous namespace)::Job"** %62, align 8
  %64 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %9, align 8
  %65 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %63, i64 0, i32 2, i32 0, i32 0, i32 0
  %66 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %65, align 8
  %67 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %64, i64 0, i32 0
  %68 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %64, i64 0, i32 1
  %69 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %64, i64 0, i32 2
  %70 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %66, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %66, i64 0, i32 1
  %72 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %66, i64 0, i32 2
  %73 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %67, %class.GURL* dereferenceable(120) %70) #11
  br i1 %73, label %94, label %74

74:                                               ; preds = %60
  %75 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %70, %class.GURL* dereferenceable(120) %67) #11
  br i1 %75, label %97, label %76

76:                                               ; preds = %74
  %77 = load i32, i32* %68, align 4
  %78 = load i32, i32* %71, align 4
  %79 = icmp slt i32 %77, %78
  br i1 %79, label %94, label %80

80:                                               ; preds = %76
  %81 = icmp slt i32 %78, %77
  br i1 %81, label %97, label %82

82:                                               ; preds = %80
  %83 = load i64, i64* %69, align 8
  %84 = load i64, i64* %72, align 8
  %85 = icmp ult i64 %83, %84
  br i1 %85, label %94, label %86

86:                                               ; preds = %82
  %87 = icmp ult i64 %84, %83
  br i1 %87, label %97, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %66, i64 0, i32 3, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %64, i64 0, i32 3, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = icmp slt i64 %92, %90
  br i1 %93, label %94, label %97

94:                                               ; preds = %88, %82, %76, %60, %58, %2
  %95 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i32 733, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0)) #11
  %96 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #11
  br label %97

97:                                               ; preds = %88, %86, %80, %74, %94
  %98 = phi %"class.std::__1::__tree_end_node"* [ %4, %94 ], [ %55, %74 ], [ %55, %80 ], [ %55, %86 ], [ %55, %88 ]
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 5
  %100 = bitcast %"class.std::__1::__tree_end_node"* %99 to %"class.net::(anonymous namespace)::Job"**
  %101 = load %"class.net::(anonymous namespace)::Job"*, %"class.net::(anonymous namespace)::Job"** %100, align 8
  store %"class.net::(anonymous namespace)::Job"* null, %"class.net::(anonymous namespace)::Job"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 1, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %105, label %113

105:                                              ; preds = %97
  %106 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_node_base"*
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 2
  %108 = bitcast %"class.std::__1::__tree_end_node"* %107 to %"class.std::__1::__tree_end_node"**
  %109 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %108, align 8
  %110 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %109, i64 0, i32 0
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_node_base"* %111, %106
  br i1 %112, label %129, label %120

113:                                              ; preds = %97, %113
  %114 = phi %"class.std::__1::__tree_node_base"* [ %116, %113 ], [ %103, %97 ]
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 0, i32 0
  %116 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %115, align 8
  %117 = icmp eq %"class.std::__1::__tree_node_base"* %116, null
  br i1 %117, label %118, label %113

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 0
  br label %129

120:                                              ; preds = %105, %120
  %121 = phi %"class.std::__1::__tree_end_node"** [ %124, %120 ], [ %108, %105 ]
  %122 = bitcast %"class.std::__1::__tree_end_node"** %121 to %"class.std::__1::__tree_node_base"**
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %123, i64 0, i32 2
  %125 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 0, i32 0
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %126, align 8
  %128 = icmp eq %"class.std::__1::__tree_node_base"* %127, %123
  br i1 %128, label %129, label %120

129:                                              ; preds = %120, %118, %105
  %130 = phi %"class.std::__1::__tree_end_node"* [ %119, %118 ], [ %109, %105 ], [ %125, %120 ]
  %131 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %131, align 8
  %133 = icmp eq %"class.std::__1::__tree_end_node"* %132, %98
  br i1 %133, label %134, label %137

134:                                              ; preds = %129
  %135 = ptrtoint %"class.std::__1::__tree_end_node"* %130 to i64
  %136 = bitcast %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0 to i64*
  store i64 %135, i64* %136, align 8
  br label %137

137:                                              ; preds = %134, %129
  %138 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, -1
  store i64 %140, i64* %138, align 8
  %141 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %142, %"class.std::__1::__tree_node_base"* %143) #11
  %144 = load %"class.net::(anonymous namespace)::Job"*, %"class.net::(anonymous namespace)::Job"** %100, align 8
  store %"class.net::(anonymous namespace)::Job"* null, %"class.net::(anonymous namespace)::Job"** %100, align 8
  %145 = icmp eq %"class.net::(anonymous namespace)::Job"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %137
  %147 = bitcast %"class.net::(anonymous namespace)::Job"* %144 to void (%"class.net::(anonymous namespace)::Job"*)***
  %148 = load void (%"class.net::(anonymous namespace)::Job"*)**, void (%"class.net::(anonymous namespace)::Job"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.net::(anonymous namespace)::Job"*)*, void (%"class.net::(anonymous namespace)::Job"*)** %148, i64 8
  %150 = load void (%"class.net::(anonymous namespace)::Job"*)*, void (%"class.net::(anonymous namespace)::Job"*)** %149, align 8
  call void %150(%"class.net::(anonymous namespace)::Job"* nonnull %144) #11
  br label %151

151:                                              ; preds = %137, %146
  %152 = bitcast %"class.std::__1::__tree_end_node"* %98 to i8*
  call void @_ZdlPv(i8* %152) #12
  ret %"class.net::(anonymous namespace)::Job"* %101
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !10
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !10
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !10
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !10
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !10
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !10
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !10
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !10
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !10
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !10
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !10
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !10
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !10
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13scoped_refptrIN3net24CertNetFetcherURLRequest11RequestCoreEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.scoped_refptr** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.scoped_refptr** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %class.scoped_refptr*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.scoped_refptr* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 %9
  %38 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 %35
  %39 = ptrtoint %class.scoped_refptr* %38 to i64
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %41 = bitcast %class.scoped_refptr* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %class.scoped_refptr* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* null, %"class.net::CertNetFetcherURLRequest::RequestCore"** %40, align 8
  %44 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 1
  %45 = ptrtoint %class.scoped_refptr* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.scoped_refptr*, %class.scoped_refptr** %46, align 8
  %48 = ptrtoint %class.scoped_refptr* %47 to i64
  %49 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  %50 = icmp eq %class.scoped_refptr* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.net::CertNetFetcherURLRequest::RequestCore"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.scoped_refptr* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.scoped_refptr* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %60, i64 -1
  %64 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %61, i64 -1
  %65 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 0, i32 0
  %66 = bitcast %class.scoped_refptr* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %class.scoped_refptr* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* null, %"class.net::CertNetFetcherURLRequest::RequestCore"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !21

71:                                               ; preds = %59, %51
  %72 = phi %class.scoped_refptr* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.scoped_refptr* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.scoped_refptr* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.scoped_refptr* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.scoped_refptr* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -1
  %80 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -1
  %81 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %80, i64 0, i32 0
  %82 = bitcast %class.scoped_refptr* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %class.scoped_refptr* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* null, %"class.net::CertNetFetcherURLRequest::RequestCore"** %81, align 8
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -2
  %86 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -2
  %87 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %86, i64 0, i32 0
  %88 = bitcast %class.scoped_refptr* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %class.scoped_refptr* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* null, %"class.net::CertNetFetcherURLRequest::RequestCore"** %87, align 8
  %91 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -3
  %92 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -3
  %93 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %92, i64 0, i32 0
  %94 = bitcast %class.scoped_refptr* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %class.scoped_refptr* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* null, %"class.net::CertNetFetcherURLRequest::RequestCore"** %93, align 8
  %97 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -4
  %98 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -4
  %99 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %98, i64 0, i32 0
  %100 = bitcast %class.scoped_refptr* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %class.scoped_refptr* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* null, %"class.net::CertNetFetcherURLRequest::RequestCore"** %99, align 8
  %103 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -5
  %104 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -5
  %105 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %104, i64 0, i32 0
  %106 = bitcast %class.scoped_refptr* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %class.scoped_refptr* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* null, %"class.net::CertNetFetcherURLRequest::RequestCore"** %105, align 8
  %109 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -6
  %110 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -6
  %111 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %110, i64 0, i32 0
  %112 = bitcast %class.scoped_refptr* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %class.scoped_refptr* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* null, %"class.net::CertNetFetcherURLRequest::RequestCore"** %111, align 8
  %115 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -7
  %116 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -7
  %117 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %116, i64 0, i32 0
  %118 = bitcast %class.scoped_refptr* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %class.scoped_refptr* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* null, %"class.net::CertNetFetcherURLRequest::RequestCore"** %117, align 8
  %121 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -8
  %122 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -8
  %123 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %122, i64 0, i32 0
  %124 = bitcast %class.scoped_refptr* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %class.scoped_refptr* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* null, %"class.net::CertNetFetcherURLRequest::RequestCore"** %123, align 8
  %127 = icmp eq %class.scoped_refptr* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.scoped_refptr* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.scoped_refptr* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.scoped_refptr* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.scoped_refptr* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.scoped_refptr*
  %138 = icmp eq %class.scoped_refptr* %133, %137
  br i1 %138, label %178, label %139

139:                                              ; preds = %132, %176
  %140 = phi %class.scoped_refptr* [ %141, %176 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %140, i64 -1
  %142 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %141, i64 0, i32 0
  %143 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %142, align 8
  %144 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %143, null
  br i1 %144, label %176, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %143, i64 0, i32 0
  %147 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw sub i32* %147, i32 1 acq_rel
  %149 = icmp eq i32 %148, 1
  br i1 %149, label %150, label %176

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %146, i64 16
  %152 = bitcast %"class.base::RefCountedThreadSafe"* %151 to %"class.base::SingleThreadTaskRunner"**
  %153 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %152, align 8
  %154 = icmp eq %"class.base::SingleThreadTaskRunner"* %153, null
  br i1 %154, label %163, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %153, i64 0, i32 0, i32 0, i32 1
  %157 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = atomicrmw sub i32* %157, i32 1 acq_rel
  %159 = icmp eq i32 %158, 1
  br i1 %159, label %160, label %163

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %156, i64 -2
  %162 = bitcast %"class.base::RefCountedThreadSafe.123"* %161 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %162) #11
  br label %163

163:                                              ; preds = %160, %155, %150
  %164 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %146, i64 12
  %165 = bitcast %"class.base::RefCountedThreadSafe"* %164 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %165) #11
  %166 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %146, i64 6
  %167 = bitcast %"class.base::RefCountedThreadSafe"* %166 to i8**
  %168 = load i8*, i8** %167, align 8
  %169 = icmp eq i8* %168, null
  br i1 %169, label %174, label %170

170:                                              ; preds = %163
  %171 = ptrtoint i8* %168 to i64
  %172 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %146, i64 8
  %173 = bitcast %"class.base::RefCountedThreadSafe"* %172 to i64*
  store i64 %171, i64* %173, align 8
  tail call void @_ZdlPv(i8* nonnull %168) #12
  br label %174

174:                                              ; preds = %170, %163
  %175 = bitcast %"class.net::CertNetFetcherURLRequest::RequestCore"* %143 to i8*
  tail call void @_ZdlPv(i8* %175) #12
  br label %176

176:                                              ; preds = %174, %145, %139
  %177 = icmp eq %class.scoped_refptr* %141, %137
  br i1 %177, label %178, label %139

178:                                              ; preds = %176, %132
  %179 = icmp eq i64 %135, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %178
  %181 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %181) #12
  br label %182

182:                                              ; preds = %178, %180
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

declare void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"*) unnamed_addr #1

declare i32 @_ZN3net10URLRequest8Delegate11OnConnectedEPS0_RKNS_13TransportInfoEN4base12OnceCallbackIFviEEE(%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"struct.net::TransportInfo"*, %"class.base::OnceCallback.275"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_13Job18OnReceivedRedirectEPNS_10URLRequestERKNS_12RedirectInfoEPb(%"class.net::(anonymous namespace)::Job"*, %"class.net::URLRequest"* nocapture readnone, %"struct.net::RedirectInfo"* dereferenceable(272), i8* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.net::RedirectInfo", %"struct.net::RedirectInfo"* %2, i64 0, i32 2
  %6 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #11
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %8, align 8
  %10 = tail call i32 @_ZN3net10URLRequest15CancelWithErrorEi(%"class.net::URLRequest"* %9, i32 -301) #11
  tail call fastcc void @_ZN3net12_GLOBAL__N_13Job21OnUrlRequestCompletedEi(%"class.net::(anonymous namespace)::Job"* %0, i32 %10) #11
  br label %11

11:                                               ; preds = %4, %7
  ret void
}

declare void @_ZN3net10URLRequest8Delegate14OnAuthRequiredEPS0_RKNS_17AuthChallengeInfoE(%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"class.net::AuthChallengeInfo"* dereferenceable(184)) unnamed_addr #1

declare void @_ZN3net10URLRequest8Delegate22OnCertificateRequestedEPS0_PNS_18SSLCertRequestInfoE(%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"class.net::SSLCertRequestInfo"*) unnamed_addr #1

declare void @_ZN3net10URLRequest8Delegate21OnSSLCertificateErrorEPS0_iRKNS_7SSLInfoEb(%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, i32, %"class.net::SSLInfo"* dereferenceable(128), i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_13Job17OnResponseStartedEPNS_10URLRequestEi(%"class.net::(anonymous namespace)::Job"*, %"class.net::URLRequest"*, i32) unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call fastcc void @_ZN3net12_GLOBAL__N_13Job21OnUrlRequestCompletedEi(%"class.net::(anonymous namespace)::Job"* %0, i32 %2)
  br label %25

6:                                                ; preds = %3
  %7 = tail call i32 @_ZNK3net10URLRequest15GetResponseCodeEv(%"class.net::URLRequest"* %1) #11
  %8 = icmp eq i32 %7, 200
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %10, align 8
  %12 = tail call i32 @_ZN3net10URLRequest15CancelWithErrorEi(%"class.net::URLRequest"* %11, i32 -379) #11
  tail call fastcc void @_ZN3net12_GLOBAL__N_13Job21OnUrlRequestCompletedEi(%"class.net::(anonymous namespace)::Job"* %0, i32 %12) #11
  br label %25

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 5, i32 0
  br label %15

15:                                               ; preds = %22, %13
  %16 = phi i32 [ 0, %13 ], [ %20, %22 ]
  %17 = icmp sgt i32 %16, -1
  br i1 %17, label %18, label %24

18:                                               ; preds = %15
  %19 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %14, align 8
  %20 = tail call i32 @_ZN3net10URLRequest4ReadEPNS_8IOBufferEi(%"class.net::URLRequest"* %1, %"class.net::IOBuffer"* %19, i32 4096) #11
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = tail call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_13Job16ConsumeBytesReadEPNS_10URLRequestEi(%"class.net::(anonymous namespace)::Job"* %0, i32 %20) #11
  br i1 %23, label %15, label %25

24:                                               ; preds = %15
  tail call fastcc void @_ZN3net12_GLOBAL__N_13Job21OnUrlRequestCompletedEi(%"class.net::(anonymous namespace)::Job"* %0, i32 %16) #11
  br label %25

25:                                               ; preds = %22, %18, %24, %9, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_13Job15OnReadCompletedEPNS_10URLRequestEi(%"class.net::(anonymous namespace)::Job"*, %"class.net::URLRequest"*, i32) unnamed_addr #0 align 2 {
  %4 = tail call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_13Job16ConsumeBytesReadEPNS_10URLRequestEi(%"class.net::(anonymous namespace)::Job"* %0, i32 %2)
  br i1 %4, label %5, label %17

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 5, i32 0
  br label %7

7:                                                ; preds = %14, %5
  %8 = phi i32 [ 0, %5 ], [ %12, %14 ]
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %10, label %16

10:                                               ; preds = %7
  %11 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %6, align 8
  %12 = tail call i32 @_ZN3net10URLRequest4ReadEPNS_8IOBufferEi(%"class.net::URLRequest"* %1, %"class.net::IOBuffer"* %11, i32 4096) #11
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = tail call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_13Job16ConsumeBytesReadEPNS_10URLRequestEi(%"class.net::(anonymous namespace)::Job"* %0, i32 %12) #11
  br i1 %15, label %7, label %17

16:                                               ; preds = %7
  tail call fastcc void @_ZN3net12_GLOBAL__N_13Job21OnUrlRequestCompletedEi(%"class.net::(anonymous namespace)::Job"* %0, i32 %8) #11
  br label %17

17:                                               ; preds = %14, %10, %16, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_13JobD2Ev(%"class.net::(anonymous namespace)::Job"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3net12_GLOBAL__N_13JobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %3) #11
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %4, align 8
  store %"class.net::URLRequest"* null, %"class.net::URLRequest"** %4, align 8
  %6 = icmp eq %"class.net::URLRequest"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.net::URLRequest"* %5 to void (%"class.net::URLRequest"*)***
  %9 = load void (%"class.net::URLRequest"*)**, void (%"class.net::URLRequest"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %9, i64 1
  %11 = load void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %10, align 8
  tail call void %11(%"class.net::URLRequest"* nonnull %5) #11
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 6
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %13) #11
  %14 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 5, i32 0
  %15 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %14, align 8
  %16 = icmp eq %"class.net::IOBuffer"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %15, i64 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe.401", %"class.base::RefCountedThreadSafe.401"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %29

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.401", %"class.base::RefCountedThreadSafe.401"* %18, i64 -2
  %24 = bitcast %"class.base::RefCountedThreadSafe.401"* %23 to %"class.net::IOBuffer"*
  %25 = bitcast %"class.base::RefCountedThreadSafe.401"* %23 to void (%"class.net::IOBuffer"*)***
  %26 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %26, i64 1
  %28 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %27, align 8
  tail call void %28(%"class.net::IOBuffer"* nonnull %24) #11
  br label %29

29:                                               ; preds = %12, %17, %22
  %30 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %4, align 8
  store %"class.net::URLRequest"* null, %"class.net::URLRequest"** %4, align 8
  %31 = icmp eq %"class.net::URLRequest"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.net::URLRequest"* %30 to void (%"class.net::URLRequest"*)***
  %34 = load void (%"class.net::URLRequest"*)**, void (%"class.net::URLRequest"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %34, i64 1
  %36 = load void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %35, align 8
  tail call void %36(%"class.net::URLRequest"* nonnull %30) #11
  br label %37

37:                                               ; preds = %29, %32
  %38 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 3, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = ptrtoint i8* %39 to i64
  %43 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 3, i32 0, i32 1
  %44 = bitcast i8** %43 to i64*
  store i64 %42, i64* %44, align 8
  tail call void @_ZdlPv(i8* nonnull %39) #12
  br label %45

45:                                               ; preds = %37, %41
  %46 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %47 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %46, align 8
  store %"struct.net::CertNetFetcherURLRequest::RequestParams"* null, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %46, align 8
  %48 = icmp eq %"struct.net::CertNetFetcherURLRequest::RequestParams"* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %47, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %50) #11
  %51 = bitcast %"struct.net::CertNetFetcherURLRequest::RequestParams"* %47 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %45, %49
  %53 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 1
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %53, i64 0, i32 0, i32 0
  %55 = load %class.scoped_refptr*, %class.scoped_refptr** %54, align 8
  %56 = icmp eq %class.scoped_refptr* %55, null
  br i1 %56, label %106, label %57

57:                                               ; preds = %52
  %58 = bitcast %class.scoped_refptr* %55 to i8*
  %59 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 1, i32 0, i32 1
  %60 = load %class.scoped_refptr*, %class.scoped_refptr** %59, align 8
  %61 = icmp eq %class.scoped_refptr* %60, %55
  br i1 %61, label %104, label %62

62:                                               ; preds = %57, %99
  %63 = phi %class.scoped_refptr* [ %64, %99 ], [ %60, %57 ]
  %64 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 -1
  %65 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 0, i32 0
  %66 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %65, align 8
  %67 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %66, null
  br i1 %67, label %99, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %66, i64 0, i32 0
  %70 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw sub i32* %70, i32 1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %99

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %69, i64 16
  %75 = bitcast %"class.base::RefCountedThreadSafe"* %74 to %"class.base::SingleThreadTaskRunner"**
  %76 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %75, align 8
  %77 = icmp eq %"class.base::SingleThreadTaskRunner"* %76, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %76, i64 0, i32 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw sub i32* %80, i32 1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %86

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %79, i64 -2
  %85 = bitcast %"class.base::RefCountedThreadSafe.123"* %84 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %85) #11
  br label %86

86:                                               ; preds = %83, %78, %73
  %87 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %69, i64 12
  %88 = bitcast %"class.base::RefCountedThreadSafe"* %87 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %88) #11
  %89 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %69, i64 6
  %90 = bitcast %"class.base::RefCountedThreadSafe"* %89 to i8**
  %91 = load i8*, i8** %90, align 8
  %92 = icmp eq i8* %91, null
  br i1 %92, label %97, label %93

93:                                               ; preds = %86
  %94 = ptrtoint i8* %91 to i64
  %95 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %69, i64 8
  %96 = bitcast %"class.base::RefCountedThreadSafe"* %95 to i64*
  store i64 %94, i64* %96, align 8
  tail call void @_ZdlPv(i8* nonnull %91) #12
  br label %97

97:                                               ; preds = %93, %86
  %98 = bitcast %"class.net::CertNetFetcherURLRequest::RequestCore"* %66 to i8*
  tail call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %97, %68, %62
  %100 = icmp eq %class.scoped_refptr* %64, %55
  br i1 %100, label %101, label %62

101:                                              ; preds = %99
  %102 = bitcast %"class.std::__1::vector"* %53 to i8**
  %103 = load i8*, i8** %102, align 8
  br label %104

104:                                              ; preds = %57, %101
  %105 = phi i8* [ %103, %101 ], [ %58, %57 ]
  store %class.scoped_refptr* %55, %class.scoped_refptr** %59, align 8
  tail call void @_ZdlPv(i8* %105) #12
  br label %106

106:                                              ; preds = %52, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_13JobD0Ev(%"class.net::(anonymous namespace)::Job"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net12_GLOBAL__N_13JobD2Ev(%"class.net::(anonymous namespace)::Job"* %0) #11
  %2 = bitcast %"class.net::(anonymous namespace)::Job"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_13Job11FailRequestENS_5ErrorE(%"class.net::(anonymous namespace)::Job"*, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %3, align 8
  %5 = tail call i32 @_ZN3net10URLRequest15CancelWithErrorEi(%"class.net::URLRequest"* %4, i32 %1) #11
  tail call fastcc void @_ZN3net12_GLOBAL__N_13Job21OnUrlRequestCompletedEi(%"class.net::(anonymous namespace)::Job"* %0, i32 %5)
  ret void
}

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

declare i32 @_ZN3net10URLRequest15CancelWithErrorEi(%"class.net::URLRequest"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_13Job21OnUrlRequestCompletedEi(%"class.net::(anonymous namespace)::Job"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %3) #11
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %4, align 8
  store %"class.net::URLRequest"* null, %"class.net::URLRequest"** %4, align 8
  %6 = icmp eq %"class.net::URLRequest"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.net::URLRequest"* %5 to void (%"class.net::URLRequest"*)***
  %9 = load void (%"class.net::URLRequest"*)**, void (%"class.net::URLRequest"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %9, i64 1
  %11 = load void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %10, align 8
  tail call void %11(%"class.net::URLRequest"* nonnull %5) #11
  br label %12

12:                                               ; preds = %7, %2
  %13 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 7
  %14 = load %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"*, %"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"** %13, align 8
  %15 = tail call fastcc %"class.net::(anonymous namespace)::Job"* @_ZN3net24CertNetFetcherURLRequest29AsyncCertNetFetcherURLRequest9RemoveJobEPNS_12_GLOBAL__N_13JobE(%"class.net::CertNetFetcherURLRequest::AsyncCertNetFetcherURLRequest"* %14, %"class.net::(anonymous namespace)::Job"* %0) #11
  %16 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  %18 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 1, i32 0, i32 1
  %19 = load %class.scoped_refptr*, %class.scoped_refptr** %18, align 8
  %20 = icmp eq %class.scoped_refptr* %17, %19
  br i1 %20, label %83, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %22, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 3, i32 0, i32 1
  br label %25

25:                                               ; preds = %36, %21
  %26 = phi %class.scoped_refptr* [ %17, %21 ], [ %38, %36 ]
  %27 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %26, i64 0, i32 0
  %28 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %27, align 8
  %29 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %28, i64 0, i32 1
  store %"class.net::(anonymous namespace)::Job"* null, %"class.net::(anonymous namespace)::Job"** %29, align 8
  %30 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %28, i64 0, i32 2
  store i32 %1, i32* %30, align 8
  %31 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %28, i64 0, i32 3
  %32 = icmp eq %"class.std::__1::vector.19"* %31, %22
  br i1 %32, label %36, label %33

33:                                               ; preds = %25
  %34 = load i8*, i8** %23, align 8
  %35 = load i8*, i8** %24, align 8
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.19"* %31, i8* %34, i8* %35) #11
  br label %36

36:                                               ; preds = %33, %25
  %37 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %28, i64 0, i32 4
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %37) #11
  %38 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %26, i64 1
  %39 = icmp eq %class.scoped_refptr* %38, %19
  br i1 %39, label %40, label %25

40:                                               ; preds = %36
  %41 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  %42 = load %class.scoped_refptr*, %class.scoped_refptr** %18, align 8
  %43 = icmp eq %class.scoped_refptr* %42, %41
  br i1 %43, label %83, label %44

44:                                               ; preds = %40, %81
  %45 = phi %class.scoped_refptr* [ %46, %81 ], [ %42, %40 ]
  %46 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %45, i64 -1
  %47 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 0, i32 0
  %48 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %47, align 8
  %49 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %48, null
  br i1 %49, label %81, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %48, i64 0, i32 0
  %52 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw sub i32* %52, i32 1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %81

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %51, i64 16
  %57 = bitcast %"class.base::RefCountedThreadSafe"* %56 to %"class.base::SingleThreadTaskRunner"**
  %58 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %57, align 8
  %59 = icmp eq %"class.base::SingleThreadTaskRunner"* %58, null
  br i1 %59, label %68, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %58, i64 0, i32 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw sub i32* %62, i32 1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %61, i64 -2
  %67 = bitcast %"class.base::RefCountedThreadSafe.123"* %66 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %67) #11
  br label %68

68:                                               ; preds = %65, %60, %55
  %69 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %51, i64 12
  %70 = bitcast %"class.base::RefCountedThreadSafe"* %69 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %70) #11
  %71 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %51, i64 6
  %72 = bitcast %"class.base::RefCountedThreadSafe"* %71 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = icmp eq i8* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %68
  %76 = ptrtoint i8* %73 to i64
  %77 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %51, i64 8
  %78 = bitcast %"class.base::RefCountedThreadSafe"* %77 to i64*
  store i64 %76, i64* %78, align 8
  tail call void @_ZdlPv(i8* nonnull %73) #12
  br label %79

79:                                               ; preds = %75, %68
  %80 = bitcast %"class.net::CertNetFetcherURLRequest::RequestCore"* %48 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %79, %50, %44
  %82 = icmp eq %class.scoped_refptr* %46, %41
  br i1 %82, label %83, label %44

83:                                               ; preds = %81, %12, %40
  %84 = phi %class.scoped_refptr* [ %41, %40 ], [ %17, %12 ], [ %41, %81 ]
  store %class.scoped_refptr* %84, %class.scoped_refptr** %18, align 8
  %85 = icmp eq %"class.net::(anonymous namespace)::Job"* %15, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %83
  %87 = bitcast %"class.net::(anonymous namespace)::Job"* %15 to void (%"class.net::(anonymous namespace)::Job"*)***
  %88 = load void (%"class.net::(anonymous namespace)::Job"*)**, void (%"class.net::(anonymous namespace)::Job"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.net::(anonymous namespace)::Job"*)*, void (%"class.net::(anonymous namespace)::Job"*)** %88, i64 8
  %90 = load void (%"class.net::(anonymous namespace)::Job"*)*, void (%"class.net::(anonymous namespace)::Job"*)** %89, align 8
  tail call void %90(%"class.net::(anonymous namespace)::Job"* nonnull %15) #11
  br label %91

91:                                               ; preds = %83, %86
  ret void
}

declare void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.19"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.19"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #11
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #11
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #12
  %46 = bitcast %"class.std::__1::vector.19"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector.19"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #13
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #12
  %61 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #11
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @_ZNK3net10URLRequest15GetResponseCodeEv(%"class.net::URLRequest"*) local_unnamed_addr #1

declare i32 @_ZN3net10URLRequest4ReadEPNS_8IOBufferEi(%"class.net::URLRequest"*, %"class.net::IOBuffer"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net12_GLOBAL__N_13Job16ConsumeBytesReadEPNS_10URLRequestEi(%"class.net::(anonymous namespace)::Job"*, i32) unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 1
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call fastcc void @_ZN3net12_GLOBAL__N_13Job21OnUrlRequestCompletedEi(%"class.net::(anonymous namespace)::Job"* %0, i32 %1)
  br label %53

5:                                                ; preds = %2
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.19"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = add i64 %13, %6
  %15 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %15, align 8
  %17 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %16, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %14, %18
  br i1 %19, label %20, label %24

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %21, align 8
  %23 = tail call i32 @_ZN3net10URLRequest15CancelWithErrorEi(%"class.net::URLRequest"* %22, i32 -8) #11
  tail call fastcc void @_ZN3net12_GLOBAL__N_13Job21OnUrlRequestCompletedEi(%"class.net::(anonymous namespace)::Job"* %0, i32 %23) #11
  br label %53

24:                                               ; preds = %5
  %25 = inttoptr i64 %10 to i8*
  %26 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %28, %12
  %30 = icmp ult i64 %29, %6
  %31 = inttoptr i64 %12 to i8*
  br i1 %30, label %32, label %45

32:                                               ; preds = %24
  %33 = tail call i8* @_Znwm(i64 %6) #12
  %34 = getelementptr inbounds i8, i8* %33, i64 %13
  %35 = ptrtoint i8* %34 to i64
  %36 = getelementptr inbounds i8, i8* %33, i64 %6
  %37 = ptrtoint i8* %36 to i64
  %38 = ptrtoint i8* %33 to i64
  %39 = icmp sgt i64 %13, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* align 1 %31, i64 %13, i1 false) #11
  br label %41

41:                                               ; preds = %40, %32
  store i64 %38, i64* %11, align 8
  store i64 %35, i64* %9, align 8
  store i64 %37, i64* %27, align 8
  %42 = icmp eq i64 %12, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  tail call void @_ZdlPv(i8* nonnull %31) #12
  %44 = load i8*, i8** %8, align 8
  br label %45

45:                                               ; preds = %24, %41, %43
  %46 = phi i8* [ %25, %24 ], [ %34, %41 ], [ %44, %43 ]
  %47 = getelementptr inbounds %"class.net::(anonymous namespace)::Job", %"class.net::(anonymous namespace)::Job"* %0, i64 0, i32 5, i32 0
  %48 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %47, align 8
  %49 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %48, i64 0, i32 2
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %6
  %52 = tail call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector.19"* %7, i8* %46, i8* %50, i8* %51)
  br label %53

53:                                               ; preds = %45, %20, %4
  %54 = phi i1 [ false, %4 ], [ false, %20 ], [ true, %45 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector.19"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %618

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %368, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !23
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !23
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !26, !noalias !23
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !26, !noalias !23
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !23
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !23
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !26, !noalias !23
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !26, !noalias !23
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !23
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !23
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !26, !noalias !23
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !26, !noalias !23
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !23
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !23
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !26, !noalias !23
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !26, !noalias !23
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !28

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !23
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !23
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !26, !noalias !23
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !26, !noalias !23
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !30

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !31

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %618

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !32
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !32
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !35, !noalias !32
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !35, !noalias !32
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !32
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !32
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !35, !noalias !32
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !35, !noalias !32
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !32
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !32
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !35, !noalias !32
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !35, !noalias !32
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !32
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !32
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !35, !noalias !32
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !35, !noalias !32
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !37

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !32
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !32
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !35, !noalias !32
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !35, !noalias !32
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !38

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #11
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !39

263:                                              ; preds = %250, %253
  %264 = icmp eq i8* %144, %2
  br i1 %264, label %618, label %265

265:                                              ; preds = %263
  %266 = sub i64 0, %6
  %267 = getelementptr i8, i8* %144, i64 %266
  %268 = ptrtoint i8* %267 to i64
  %269 = icmp ult i8* %267, inttoptr (i64 32 to i8*)
  br i1 %269, label %358, label %270

270:                                              ; preds = %265
  %271 = ptrtoint i8* %1 to i64
  %272 = sub i64 %271, %6
  %273 = getelementptr i8, i8* %144, i64 %272
  %274 = icmp ugt i8* %144, %1
  %275 = icmp ugt i8* %273, %2
  %276 = and i1 %274, %275
  br i1 %276, label %358, label %277

277:                                              ; preds = %270
  %278 = and i64 %268, -32
  %279 = getelementptr i8, i8* %1, i64 %278
  %280 = getelementptr i8, i8* %2, i64 %278
  %281 = add i64 %278, -32
  %282 = lshr exact i64 %281, 5
  %283 = add nuw nsw i64 %282, 1
  %284 = and i64 %283, 3
  %285 = icmp ult i64 %281, 96
  br i1 %285, label %337, label %286

286:                                              ; preds = %277
  %287 = sub nsw i64 %283, %284
  br label %288

288:                                              ; preds = %288, %286
  %289 = phi i64 [ 0, %286 ], [ %334, %288 ]
  %290 = phi i64 [ %287, %286 ], [ %335, %288 ]
  %291 = getelementptr i8, i8* %1, i64 %289
  %292 = getelementptr i8, i8* %2, i64 %289
  %293 = bitcast i8* %292 to <16 x i8>*
  %294 = load <16 x i8>, <16 x i8>* %293, align 1, !alias.scope !40
  %295 = getelementptr i8, i8* %292, i64 16
  %296 = bitcast i8* %295 to <16 x i8>*
  %297 = load <16 x i8>, <16 x i8>* %296, align 1, !alias.scope !40
  %298 = bitcast i8* %291 to <16 x i8>*
  store <16 x i8> %294, <16 x i8>* %298, align 1, !alias.scope !43, !noalias !40
  %299 = getelementptr i8, i8* %291, i64 16
  %300 = bitcast i8* %299 to <16 x i8>*
  store <16 x i8> %297, <16 x i8>* %300, align 1, !alias.scope !43, !noalias !40
  %301 = or i64 %289, 32
  %302 = getelementptr i8, i8* %1, i64 %301
  %303 = getelementptr i8, i8* %2, i64 %301
  %304 = bitcast i8* %303 to <16 x i8>*
  %305 = load <16 x i8>, <16 x i8>* %304, align 1, !alias.scope !40
  %306 = getelementptr i8, i8* %303, i64 16
  %307 = bitcast i8* %306 to <16 x i8>*
  %308 = load <16 x i8>, <16 x i8>* %307, align 1, !alias.scope !40
  %309 = bitcast i8* %302 to <16 x i8>*
  store <16 x i8> %305, <16 x i8>* %309, align 1, !alias.scope !43, !noalias !40
  %310 = getelementptr i8, i8* %302, i64 16
  %311 = bitcast i8* %310 to <16 x i8>*
  store <16 x i8> %308, <16 x i8>* %311, align 1, !alias.scope !43, !noalias !40
  %312 = or i64 %289, 64
  %313 = getelementptr i8, i8* %1, i64 %312
  %314 = getelementptr i8, i8* %2, i64 %312
  %315 = bitcast i8* %314 to <16 x i8>*
  %316 = load <16 x i8>, <16 x i8>* %315, align 1, !alias.scope !40
  %317 = getelementptr i8, i8* %314, i64 16
  %318 = bitcast i8* %317 to <16 x i8>*
  %319 = load <16 x i8>, <16 x i8>* %318, align 1, !alias.scope !40
  %320 = bitcast i8* %313 to <16 x i8>*
  store <16 x i8> %316, <16 x i8>* %320, align 1, !alias.scope !43, !noalias !40
  %321 = getelementptr i8, i8* %313, i64 16
  %322 = bitcast i8* %321 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %322, align 1, !alias.scope !43, !noalias !40
  %323 = or i64 %289, 96
  %324 = getelementptr i8, i8* %1, i64 %323
  %325 = getelementptr i8, i8* %2, i64 %323
  %326 = bitcast i8* %325 to <16 x i8>*
  %327 = load <16 x i8>, <16 x i8>* %326, align 1, !alias.scope !40
  %328 = getelementptr i8, i8* %325, i64 16
  %329 = bitcast i8* %328 to <16 x i8>*
  %330 = load <16 x i8>, <16 x i8>* %329, align 1, !alias.scope !40
  %331 = bitcast i8* %324 to <16 x i8>*
  store <16 x i8> %327, <16 x i8>* %331, align 1, !alias.scope !43, !noalias !40
  %332 = getelementptr i8, i8* %324, i64 16
  %333 = bitcast i8* %332 to <16 x i8>*
  store <16 x i8> %330, <16 x i8>* %333, align 1, !alias.scope !43, !noalias !40
  %334 = add i64 %289, 128
  %335 = add i64 %290, -4
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %288, !llvm.loop !45

337:                                              ; preds = %288, %277
  %338 = phi i64 [ 0, %277 ], [ %334, %288 ]
  %339 = icmp eq i64 %284, 0
  br i1 %339, label %356, label %340

340:                                              ; preds = %337, %340
  %341 = phi i64 [ %353, %340 ], [ %338, %337 ]
  %342 = phi i64 [ %354, %340 ], [ %284, %337 ]
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = getelementptr i8, i8* %2, i64 %341
  %345 = bitcast i8* %344 to <16 x i8>*
  %346 = load <16 x i8>, <16 x i8>* %345, align 1, !alias.scope !40
  %347 = getelementptr i8, i8* %344, i64 16
  %348 = bitcast i8* %347 to <16 x i8>*
  %349 = load <16 x i8>, <16 x i8>* %348, align 1, !alias.scope !40
  %350 = bitcast i8* %343 to <16 x i8>*
  store <16 x i8> %346, <16 x i8>* %350, align 1, !alias.scope !43, !noalias !40
  %351 = getelementptr i8, i8* %343, i64 16
  %352 = bitcast i8* %351 to <16 x i8>*
  store <16 x i8> %349, <16 x i8>* %352, align 1, !alias.scope !43, !noalias !40
  %353 = add i64 %341, 32
  %354 = add i64 %342, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %340, !llvm.loop !46

356:                                              ; preds = %340, %337
  %357 = icmp eq i64 %278, %268
  br i1 %357, label %618, label %358

358:                                              ; preds = %356, %270, %265
  %359 = phi i8* [ %1, %270 ], [ %1, %265 ], [ %279, %356 ]
  %360 = phi i8* [ %2, %270 ], [ %2, %265 ], [ %280, %356 ]
  br label %361

361:                                              ; preds = %358, %361
  %362 = phi i8* [ %366, %361 ], [ %359, %358 ]
  %363 = phi i8* [ %365, %361 ], [ %360, %358 ]
  %364 = load i8, i8* %363, align 1
  store i8 %364, i8* %362, align 1
  %365 = getelementptr inbounds i8, i8* %363, i64 1
  %366 = getelementptr inbounds i8, i8* %362, i64 1
  %367 = icmp eq i8* %365, %144
  br i1 %367, label %618, label %361, !llvm.loop !47

368:                                              ; preds = %11
  %369 = bitcast %"class.std::__1::vector.19"* %0 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = sub i64 %17, %370
  %372 = add i64 %371, %9
  %373 = icmp slt i64 %372, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %368
  %375 = bitcast %"class.std::__1::vector.19"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %375) #13
  unreachable

376:                                              ; preds = %368
  %377 = sub i64 %14, %370
  %378 = icmp ult i64 %377, 4611686018427387903
  br i1 %378, label %381, label %379

379:                                              ; preds = %376
  %380 = sub i64 %5, %370
  br label %387

381:                                              ; preds = %376
  %382 = shl i64 %377, 1
  %383 = icmp ult i64 %382, %372
  %384 = select i1 %383, i64 %372, i64 %382
  %385 = sub i64 %5, %370
  %386 = icmp eq i64 %384, 0
  br i1 %386, label %391, label %387

387:                                              ; preds = %379, %381
  %388 = phi i64 [ %380, %379 ], [ %385, %381 ]
  %389 = phi i64 [ 9223372036854775807, %379 ], [ %384, %381 ]
  %390 = tail call i8* @_Znwm(i64 %389) #12
  br label %391

391:                                              ; preds = %381, %387
  %392 = phi i64 [ %388, %387 ], [ %385, %381 ]
  %393 = phi i64 [ %389, %387 ], [ 0, %381 ]
  %394 = phi i8* [ %390, %387 ], [ null, %381 ]
  %395 = getelementptr inbounds i8, i8* %394, i64 %392
  %396 = getelementptr inbounds i8, i8* %394, i64 %393
  %397 = getelementptr inbounds i8, i8* %395, i64 %9
  %398 = icmp ult i64 %9, 32
  br i1 %398, label %484, label %399

399:                                              ; preds = %391
  %400 = icmp ult i8* %395, %3
  %401 = icmp ugt i8* %397, %2
  %402 = and i1 %400, %401
  br i1 %402, label %484, label %403

403:                                              ; preds = %399
  %404 = and i64 %9, -32
  %405 = getelementptr i8, i8* %395, i64 %404
  %406 = getelementptr i8, i8* %2, i64 %404
  %407 = add i64 %404, -32
  %408 = lshr exact i64 %407, 5
  %409 = add nuw nsw i64 %408, 1
  %410 = and i64 %409, 3
  %411 = icmp ult i64 %407, 96
  br i1 %411, label %463, label %412

412:                                              ; preds = %403
  %413 = sub nsw i64 %409, %410
  br label %414

414:                                              ; preds = %414, %412
  %415 = phi i64 [ 0, %412 ], [ %460, %414 ]
  %416 = phi i64 [ %413, %412 ], [ %461, %414 ]
  %417 = getelementptr i8, i8* %395, i64 %415
  %418 = getelementptr i8, i8* %2, i64 %415
  %419 = bitcast i8* %418 to <16 x i8>*
  %420 = load <16 x i8>, <16 x i8>* %419, align 1, !alias.scope !48
  %421 = getelementptr i8, i8* %418, i64 16
  %422 = bitcast i8* %421 to <16 x i8>*
  %423 = load <16 x i8>, <16 x i8>* %422, align 1, !alias.scope !48
  %424 = bitcast i8* %417 to <16 x i8>*
  store <16 x i8> %420, <16 x i8>* %424, align 1, !alias.scope !51, !noalias !48
  %425 = getelementptr i8, i8* %417, i64 16
  %426 = bitcast i8* %425 to <16 x i8>*
  store <16 x i8> %423, <16 x i8>* %426, align 1, !alias.scope !51, !noalias !48
  %427 = or i64 %415, 32
  %428 = getelementptr i8, i8* %395, i64 %427
  %429 = getelementptr i8, i8* %2, i64 %427
  %430 = bitcast i8* %429 to <16 x i8>*
  %431 = load <16 x i8>, <16 x i8>* %430, align 1, !alias.scope !48
  %432 = getelementptr i8, i8* %429, i64 16
  %433 = bitcast i8* %432 to <16 x i8>*
  %434 = load <16 x i8>, <16 x i8>* %433, align 1, !alias.scope !48
  %435 = bitcast i8* %428 to <16 x i8>*
  store <16 x i8> %431, <16 x i8>* %435, align 1, !alias.scope !51, !noalias !48
  %436 = getelementptr i8, i8* %428, i64 16
  %437 = bitcast i8* %436 to <16 x i8>*
  store <16 x i8> %434, <16 x i8>* %437, align 1, !alias.scope !51, !noalias !48
  %438 = or i64 %415, 64
  %439 = getelementptr i8, i8* %395, i64 %438
  %440 = getelementptr i8, i8* %2, i64 %438
  %441 = bitcast i8* %440 to <16 x i8>*
  %442 = load <16 x i8>, <16 x i8>* %441, align 1, !alias.scope !48
  %443 = getelementptr i8, i8* %440, i64 16
  %444 = bitcast i8* %443 to <16 x i8>*
  %445 = load <16 x i8>, <16 x i8>* %444, align 1, !alias.scope !48
  %446 = bitcast i8* %439 to <16 x i8>*
  store <16 x i8> %442, <16 x i8>* %446, align 1, !alias.scope !51, !noalias !48
  %447 = getelementptr i8, i8* %439, i64 16
  %448 = bitcast i8* %447 to <16 x i8>*
  store <16 x i8> %445, <16 x i8>* %448, align 1, !alias.scope !51, !noalias !48
  %449 = or i64 %415, 96
  %450 = getelementptr i8, i8* %395, i64 %449
  %451 = getelementptr i8, i8* %2, i64 %449
  %452 = bitcast i8* %451 to <16 x i8>*
  %453 = load <16 x i8>, <16 x i8>* %452, align 1, !alias.scope !48
  %454 = getelementptr i8, i8* %451, i64 16
  %455 = bitcast i8* %454 to <16 x i8>*
  %456 = load <16 x i8>, <16 x i8>* %455, align 1, !alias.scope !48
  %457 = bitcast i8* %450 to <16 x i8>*
  store <16 x i8> %453, <16 x i8>* %457, align 1, !alias.scope !51, !noalias !48
  %458 = getelementptr i8, i8* %450, i64 16
  %459 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %456, <16 x i8>* %459, align 1, !alias.scope !51, !noalias !48
  %460 = add i64 %415, 128
  %461 = add i64 %416, -4
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %414, !llvm.loop !53

463:                                              ; preds = %414, %403
  %464 = phi i64 [ 0, %403 ], [ %460, %414 ]
  %465 = icmp eq i64 %410, 0
  br i1 %465, label %482, label %466

466:                                              ; preds = %463, %466
  %467 = phi i64 [ %479, %466 ], [ %464, %463 ]
  %468 = phi i64 [ %480, %466 ], [ %410, %463 ]
  %469 = getelementptr i8, i8* %395, i64 %467
  %470 = getelementptr i8, i8* %2, i64 %467
  %471 = bitcast i8* %470 to <16 x i8>*
  %472 = load <16 x i8>, <16 x i8>* %471, align 1, !alias.scope !48
  %473 = getelementptr i8, i8* %470, i64 16
  %474 = bitcast i8* %473 to <16 x i8>*
  %475 = load <16 x i8>, <16 x i8>* %474, align 1, !alias.scope !48
  %476 = bitcast i8* %469 to <16 x i8>*
  store <16 x i8> %472, <16 x i8>* %476, align 1, !alias.scope !51, !noalias !48
  %477 = getelementptr i8, i8* %469, i64 16
  %478 = bitcast i8* %477 to <16 x i8>*
  store <16 x i8> %475, <16 x i8>* %478, align 1, !alias.scope !51, !noalias !48
  %479 = add i64 %467, 32
  %480 = add i64 %468, -1
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %482, label %466, !llvm.loop !54

482:                                              ; preds = %466, %463
  %483 = icmp eq i64 %9, %404
  br i1 %483, label %494, label %484

484:                                              ; preds = %482, %399, %391
  %485 = phi i8* [ %395, %399 ], [ %395, %391 ], [ %405, %482 ]
  %486 = phi i8* [ %2, %399 ], [ %2, %391 ], [ %406, %482 ]
  br label %487

487:                                              ; preds = %484, %487
  %488 = phi i8* [ %491, %487 ], [ %485, %484 ]
  %489 = phi i8* [ %492, %487 ], [ %486, %484 ]
  %490 = load i8, i8* %489, align 1
  store i8 %490, i8* %488, align 1
  %491 = getelementptr inbounds i8, i8* %488, i64 1
  %492 = getelementptr inbounds i8, i8* %489, i64 1
  %493 = icmp eq i8* %397, %491
  br i1 %493, label %494, label %487, !llvm.loop !55

494:                                              ; preds = %487, %482
  %495 = ptrtoint i8* %396 to i64
  %496 = load i8*, i8** %7, align 8
  %497 = ptrtoint i8* %496 to i64
  %498 = sub i64 %5, %497
  %499 = sub i64 0, %498
  %500 = getelementptr inbounds i8, i8* %395, i64 %499
  %501 = ptrtoint i8* %500 to i64
  %502 = icmp sgt i64 %498, 0
  br i1 %502, label %503, label %504

503:                                              ; preds = %494
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %500, i8* align 1 %496, i64 %498, i1 false) #11
  br label %504

504:                                              ; preds = %503, %494
  %505 = load i8*, i8** %15, align 8
  %506 = icmp eq i8* %505, %1
  br i1 %506, label %612, label %507

507:                                              ; preds = %504
  %508 = ptrtoint i8* %505 to i64
  %509 = sub i64 %508, %5
  %510 = icmp ult i64 %509, 32
  br i1 %510, label %602, label %511

511:                                              ; preds = %507
  %512 = add i64 %392, %8
  %513 = sub i64 %512, %5
  %514 = sub i64 %513, %6
  %515 = getelementptr i8, i8* %505, i64 %514
  %516 = ptrtoint i8* %515 to i64
  %517 = getelementptr i8, i8* %394, i64 %516
  %518 = icmp ult i8* %397, %505
  %519 = icmp ugt i8* %517, %1
  %520 = and i1 %518, %519
  br i1 %520, label %602, label %521

521:                                              ; preds = %511
  %522 = and i64 %509, -32
  %523 = getelementptr i8, i8* %397, i64 %522
  %524 = getelementptr i8, i8* %1, i64 %522
  %525 = add i64 %522, -32
  %526 = lshr exact i64 %525, 5
  %527 = add nuw nsw i64 %526, 1
  %528 = and i64 %527, 3
  %529 = icmp ult i64 %525, 96
  br i1 %529, label %581, label %530

530:                                              ; preds = %521
  %531 = sub nsw i64 %527, %528
  br label %532

532:                                              ; preds = %532, %530
  %533 = phi i64 [ 0, %530 ], [ %578, %532 ]
  %534 = phi i64 [ %531, %530 ], [ %579, %532 ]
  %535 = getelementptr i8, i8* %397, i64 %533
  %536 = getelementptr i8, i8* %1, i64 %533
  %537 = bitcast i8* %536 to <16 x i8>*
  %538 = load <16 x i8>, <16 x i8>* %537, align 1, !alias.scope !56
  %539 = getelementptr i8, i8* %536, i64 16
  %540 = bitcast i8* %539 to <16 x i8>*
  %541 = load <16 x i8>, <16 x i8>* %540, align 1, !alias.scope !56
  %542 = bitcast i8* %535 to <16 x i8>*
  store <16 x i8> %538, <16 x i8>* %542, align 1, !alias.scope !59, !noalias !56
  %543 = getelementptr i8, i8* %535, i64 16
  %544 = bitcast i8* %543 to <16 x i8>*
  store <16 x i8> %541, <16 x i8>* %544, align 1, !alias.scope !59, !noalias !56
  %545 = or i64 %533, 32
  %546 = getelementptr i8, i8* %397, i64 %545
  %547 = getelementptr i8, i8* %1, i64 %545
  %548 = bitcast i8* %547 to <16 x i8>*
  %549 = load <16 x i8>, <16 x i8>* %548, align 1, !alias.scope !56
  %550 = getelementptr i8, i8* %547, i64 16
  %551 = bitcast i8* %550 to <16 x i8>*
  %552 = load <16 x i8>, <16 x i8>* %551, align 1, !alias.scope !56
  %553 = bitcast i8* %546 to <16 x i8>*
  store <16 x i8> %549, <16 x i8>* %553, align 1, !alias.scope !59, !noalias !56
  %554 = getelementptr i8, i8* %546, i64 16
  %555 = bitcast i8* %554 to <16 x i8>*
  store <16 x i8> %552, <16 x i8>* %555, align 1, !alias.scope !59, !noalias !56
  %556 = or i64 %533, 64
  %557 = getelementptr i8, i8* %397, i64 %556
  %558 = getelementptr i8, i8* %1, i64 %556
  %559 = bitcast i8* %558 to <16 x i8>*
  %560 = load <16 x i8>, <16 x i8>* %559, align 1, !alias.scope !56
  %561 = getelementptr i8, i8* %558, i64 16
  %562 = bitcast i8* %561 to <16 x i8>*
  %563 = load <16 x i8>, <16 x i8>* %562, align 1, !alias.scope !56
  %564 = bitcast i8* %557 to <16 x i8>*
  store <16 x i8> %560, <16 x i8>* %564, align 1, !alias.scope !59, !noalias !56
  %565 = getelementptr i8, i8* %557, i64 16
  %566 = bitcast i8* %565 to <16 x i8>*
  store <16 x i8> %563, <16 x i8>* %566, align 1, !alias.scope !59, !noalias !56
  %567 = or i64 %533, 96
  %568 = getelementptr i8, i8* %397, i64 %567
  %569 = getelementptr i8, i8* %1, i64 %567
  %570 = bitcast i8* %569 to <16 x i8>*
  %571 = load <16 x i8>, <16 x i8>* %570, align 1, !alias.scope !56
  %572 = getelementptr i8, i8* %569, i64 16
  %573 = bitcast i8* %572 to <16 x i8>*
  %574 = load <16 x i8>, <16 x i8>* %573, align 1, !alias.scope !56
  %575 = bitcast i8* %568 to <16 x i8>*
  store <16 x i8> %571, <16 x i8>* %575, align 1, !alias.scope !59, !noalias !56
  %576 = getelementptr i8, i8* %568, i64 16
  %577 = bitcast i8* %576 to <16 x i8>*
  store <16 x i8> %574, <16 x i8>* %577, align 1, !alias.scope !59, !noalias !56
  %578 = add i64 %533, 128
  %579 = add i64 %534, -4
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %532, !llvm.loop !61

581:                                              ; preds = %532, %521
  %582 = phi i64 [ 0, %521 ], [ %578, %532 ]
  %583 = icmp eq i64 %528, 0
  br i1 %583, label %600, label %584

584:                                              ; preds = %581, %584
  %585 = phi i64 [ %597, %584 ], [ %582, %581 ]
  %586 = phi i64 [ %598, %584 ], [ %528, %581 ]
  %587 = getelementptr i8, i8* %397, i64 %585
  %588 = getelementptr i8, i8* %1, i64 %585
  %589 = bitcast i8* %588 to <16 x i8>*
  %590 = load <16 x i8>, <16 x i8>* %589, align 1, !alias.scope !56
  %591 = getelementptr i8, i8* %588, i64 16
  %592 = bitcast i8* %591 to <16 x i8>*
  %593 = load <16 x i8>, <16 x i8>* %592, align 1, !alias.scope !56
  %594 = bitcast i8* %587 to <16 x i8>*
  store <16 x i8> %590, <16 x i8>* %594, align 1, !alias.scope !59, !noalias !56
  %595 = getelementptr i8, i8* %587, i64 16
  %596 = bitcast i8* %595 to <16 x i8>*
  store <16 x i8> %593, <16 x i8>* %596, align 1, !alias.scope !59, !noalias !56
  %597 = add i64 %585, 32
  %598 = add i64 %586, -1
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %600, label %584, !llvm.loop !62

600:                                              ; preds = %584, %581
  %601 = icmp eq i64 %509, %522
  br i1 %601, label %612, label %602

602:                                              ; preds = %600, %511, %507
  %603 = phi i8* [ %397, %511 ], [ %397, %507 ], [ %523, %600 ]
  %604 = phi i8* [ %1, %511 ], [ %1, %507 ], [ %524, %600 ]
  br label %605

605:                                              ; preds = %602, %605
  %606 = phi i8* [ %610, %605 ], [ %603, %602 ]
  %607 = phi i8* [ %609, %605 ], [ %604, %602 ]
  %608 = load i8, i8* %607, align 1
  store i8 %608, i8* %606, align 1
  %609 = getelementptr inbounds i8, i8* %607, i64 1
  %610 = getelementptr inbounds i8, i8* %606, i64 1
  %611 = icmp eq i8* %609, %505
  br i1 %611, label %612, label %605, !llvm.loop !63

612:                                              ; preds = %605, %600, %504
  %613 = phi i8* [ %397, %504 ], [ %523, %600 ], [ %610, %605 ]
  %614 = ptrtoint i8* %613 to i64
  %615 = load i8*, i8** %7, align 8
  store i64 %501, i64* %369, align 8
  store i64 %614, i64* %20, align 8
  store i64 %495, i64* %13, align 8
  %616 = icmp eq i8* %615, null
  br i1 %616, label %618, label %617

617:                                              ; preds = %612
  tail call void @_ZdlPv(i8* nonnull %615) #12
  br label %618

618:                                              ; preds = %361, %356, %617, %612, %136, %263, %4
  %619 = phi i8* [ %1, %4 ], [ %1, %263 ], [ %1, %136 ], [ %395, %612 ], [ %395, %617 ], [ %1, %356 ], [ %1, %361 ]
  ret i8* %619
}

; Function Attrs: nounwind
declare void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3net30DefineNetworkTrafficAnnotationILm33ELm1436EEENS_27NetworkTrafficAnnotationTagERAT__KcRAT0__S2_([33 x i8]* dereferenceable(33), [1436 x i8]* dereferenceable(1436)) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 0
  %4 = load i8, i8* %3, align 1
  %5 = sext i8 %4 to i32
  %6 = mul nsw i32 %5, 31
  %7 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i32
  %10 = add nsw i32 %6, %9
  %11 = urem i32 %10, 138003713
  %12 = mul i32 %11, 31
  %13 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i32
  %16 = add i32 %12, %15
  %17 = urem i32 %16, 138003713
  %18 = mul i32 %17, 31
  %19 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = add i32 %18, %21
  %23 = urem i32 %22, 138003713
  %24 = mul i32 %23, 31
  %25 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 4
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = add i32 %24, %27
  %29 = urem i32 %28, 138003713
  %30 = mul i32 %29, 31
  %31 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 5
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i32
  %34 = add i32 %30, %33
  %35 = urem i32 %34, 138003713
  %36 = mul i32 %35, 31
  %37 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 6
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = add i32 %36, %39
  %41 = urem i32 %40, 138003713
  %42 = mul i32 %41, 31
  %43 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 7
  %44 = load i8, i8* %43, align 1
  %45 = sext i8 %44 to i32
  %46 = add i32 %42, %45
  %47 = urem i32 %46, 138003713
  %48 = mul i32 %47, 31
  %49 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 8
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = add i32 %48, %51
  %53 = urem i32 %52, 138003713
  %54 = mul i32 %53, 31
  %55 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 9
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = add i32 %54, %57
  %59 = urem i32 %58, 138003713
  %60 = mul i32 %59, 31
  %61 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 10
  %62 = load i8, i8* %61, align 1
  %63 = sext i8 %62 to i32
  %64 = add i32 %60, %63
  %65 = urem i32 %64, 138003713
  %66 = mul i32 %65, 31
  %67 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 11
  %68 = load i8, i8* %67, align 1
  %69 = sext i8 %68 to i32
  %70 = add i32 %66, %69
  %71 = urem i32 %70, 138003713
  %72 = mul i32 %71, 31
  %73 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 12
  %74 = load i8, i8* %73, align 1
  %75 = sext i8 %74 to i32
  %76 = add i32 %72, %75
  %77 = urem i32 %76, 138003713
  %78 = mul i32 %77, 31
  %79 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 13
  %80 = load i8, i8* %79, align 1
  %81 = sext i8 %80 to i32
  %82 = add i32 %78, %81
  %83 = urem i32 %82, 138003713
  %84 = mul i32 %83, 31
  %85 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 14
  %86 = load i8, i8* %85, align 1
  %87 = sext i8 %86 to i32
  %88 = add i32 %84, %87
  %89 = urem i32 %88, 138003713
  %90 = mul i32 %89, 31
  %91 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 15
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i32
  %94 = add i32 %90, %93
  %95 = urem i32 %94, 138003713
  %96 = mul i32 %95, 31
  %97 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 16
  %98 = load i8, i8* %97, align 1
  %99 = sext i8 %98 to i32
  %100 = add i32 %96, %99
  %101 = urem i32 %100, 138003713
  %102 = mul i32 %101, 31
  %103 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 17
  %104 = load i8, i8* %103, align 1
  %105 = sext i8 %104 to i32
  %106 = add i32 %102, %105
  %107 = urem i32 %106, 138003713
  %108 = mul i32 %107, 31
  %109 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 18
  %110 = load i8, i8* %109, align 1
  %111 = sext i8 %110 to i32
  %112 = add i32 %108, %111
  %113 = urem i32 %112, 138003713
  %114 = mul i32 %113, 31
  %115 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 19
  %116 = load i8, i8* %115, align 1
  %117 = sext i8 %116 to i32
  %118 = add i32 %114, %117
  %119 = urem i32 %118, 138003713
  %120 = mul i32 %119, 31
  %121 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 20
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = add i32 %120, %123
  %125 = urem i32 %124, 138003713
  %126 = mul i32 %125, 31
  %127 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 21
  %128 = load i8, i8* %127, align 1
  %129 = sext i8 %128 to i32
  %130 = add i32 %126, %129
  %131 = urem i32 %130, 138003713
  %132 = mul i32 %131, 31
  %133 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 22
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = add i32 %132, %135
  %137 = urem i32 %136, 138003713
  %138 = mul i32 %137, 31
  %139 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 23
  %140 = load i8, i8* %139, align 1
  %141 = sext i8 %140 to i32
  %142 = add i32 %138, %141
  %143 = urem i32 %142, 138003713
  %144 = mul i32 %143, 31
  %145 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 24
  %146 = load i8, i8* %145, align 1
  %147 = sext i8 %146 to i32
  %148 = add i32 %144, %147
  %149 = urem i32 %148, 138003713
  %150 = mul i32 %149, 31
  %151 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 25
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = add i32 %150, %153
  %155 = urem i32 %154, 138003713
  %156 = mul i32 %155, 31
  %157 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 26
  %158 = load i8, i8* %157, align 1
  %159 = sext i8 %158 to i32
  %160 = add i32 %156, %159
  %161 = urem i32 %160, 138003713
  %162 = mul i32 %161, 31
  %163 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 27
  %164 = load i8, i8* %163, align 1
  %165 = sext i8 %164 to i32
  %166 = add i32 %162, %165
  %167 = urem i32 %166, 138003713
  %168 = mul i32 %167, 31
  %169 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 28
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = add i32 %168, %171
  %173 = urem i32 %172, 138003713
  %174 = mul i32 %173, 31
  %175 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 29
  %176 = load i8, i8* %175, align 1
  %177 = sext i8 %176 to i32
  %178 = add i32 %174, %177
  %179 = urem i32 %178, 138003713
  %180 = mul i32 %179, 31
  %181 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 30
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = add i32 %180, %183
  %185 = urem i32 %184, 138003713
  %186 = mul i32 %185, 31
  %187 = getelementptr inbounds [33 x i8], [33 x i8]* %0, i64 0, i64 31
  %188 = load i8, i8* %187, align 1
  %189 = sext i8 %188 to i32
  %190 = add i32 %186, %189
  %191 = urem i32 %190, 138003713
  ret i32 %191
}

declare %"class.net::URLRequest"* @_ZNK3net17URLRequestContext13CreateRequestERK4GURLNS_15RequestPriorityEPNS_10URLRequest8DelegateENS_27NetworkTrafficAnnotationTagE(%"class.net::URLRequestContext"*, %class.GURL* dereferenceable(120), i32, %"class.net::URLRequest::Delegate"*, i32) local_unnamed_addr #1

declare void @_ZN3net10URLRequest10set_methodERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLRequest"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3net10URLRequest21set_allow_credentialsEb(%"class.net::URLRequest"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN3net10URLRequest18SetSecureDnsPolicyENS_15SecureDnsPolicyE(%"class.net::URLRequest"*, i32) local_unnamed_addr #1

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZN3net13IsolationInfo6CreateENS0_11RequestTypeERKN3url6OriginES5_RKNS_14SiteForCookiesEN4absl8optionalINSt3__13setINS_13SchemefulSiteENSB_4lessISD_EENSB_9allocatorISD_EEEEEE(%"class.net::IsolationInfo"* sret, i32, %"class.url::Origin"* dereferenceable(80), %"class.url::Origin"* dereferenceable(80), %"class.net::SiteForCookies"* dereferenceable(88), %"class.absl::optional.296"*) local_unnamed_addr #1

declare void @_ZN3net14SiteForCookiesC1Ev(%"class.net::SiteForCookies"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net13IsolationInfoD1Ev(%"class.net::IsolationInfo"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net14SiteForCookiesD1Ev(%"class.net::SiteForCookies"*) unnamed_addr #3

declare void @_ZN3net10URLRequest5StartEv(%"class.net::URLRequest"*) local_unnamed_addr #1

declare void @_ZN4base12OneShotTimer5StartERKNS_8LocationENS_9TimeDeltaENS_12OnceCallbackIFvvEEE(%"class.base::OneShotTimer"*, %"class.base::Location"* dereferenceable(32), i64, %"class.base::OnceCallback"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

declare void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"*, i64) unnamed_addr #1

declare dereferenceable(496) %"class.net::IsolationInfo"* @_ZN3net13IsolationInfoaSERKS0_(%"class.net::IsolationInfo"*, %"class.net::IsolationInfo"* dereferenceable(496)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3net13SchemefulSiteENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.302"*, %"class.std::__1::__tree_node.461"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.461"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.461"* %1 to %"class.std::__1::__tree_node.461"**
  %6 = load %"class.std::__1::__tree_node.461"*, %"class.std::__1::__tree_node.461"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3net13SchemefulSiteENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.302"* %0, %"class.std::__1::__tree_node.461"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.461", %"class.std::__1::__tree_node.461"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.461"**
  %9 = load %"class.std::__1::__tree_node.461"*, %"class.std::__1::__tree_node.461"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3net13SchemefulSiteENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.302"* %0, %"class.std::__1::__tree_node.461"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.461", %"class.std::__1::__tree_node.461"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %10) #11
  %11 = bitcast %"class.std::__1::__tree_node.461"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_13JobEFvNS3_5ErrorEEJNS0_17UnretainedWrapperIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i32*
  %8 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 %12
  %14 = bitcast i8* %13 to %"class.net::(anonymous namespace)::Job"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.net::(anonymous namespace)::Job"*, i32)**
  %23 = load void (%"class.net::(anonymous namespace)::Job"*, i32)*, void (%"class.net::(anonymous namespace)::Job"*, i32)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %9 to void (%"class.net::(anonymous namespace)::Job"*, i32)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.net::(anonymous namespace)::Job"*, i32)* [ %23, %17 ], [ %25, %24 ]
  %28 = load i32, i32* %7, align 4
  tail call void %27(%"class.net::(anonymous namespace)::Job"* %14, i32 %28) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_13JobEFvNS2_5ErrorEEJNS0_17UnretainedWrapperIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net24CertNetFetcherURLRequest11RequestCoreEFvvEJ13scoped_refptrIS5_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.net::CertNetFetcherURLRequest::RequestCore"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.net::CertNetFetcherURLRequest::RequestCore"*)**
  %21 = load void (%"class.net::CertNetFetcherURLRequest::RequestCore"*)*, void (%"class.net::CertNetFetcherURLRequest::RequestCore"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.net::CertNetFetcherURLRequest::RequestCore"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.net::CertNetFetcherURLRequest::RequestCore"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.net::CertNetFetcherURLRequest::RequestCore"* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net24CertNetFetcherURLRequest11RequestCoreEFvvEJ13scoped_refptrIS4_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %41, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.net::CertNetFetcherURLRequest::RequestCore"**
  %6 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %5, align 8
  %7 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %6, null
  br i1 %7, label %39, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %6, i64 0, i32 0
  %10 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %39

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 16
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::SingleThreadTaskRunner"**
  %16 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %15, align 8
  %17 = icmp eq %"class.base::SingleThreadTaskRunner"* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %16, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %19, i64 -2
  %25 = bitcast %"class.base::RefCountedThreadSafe.123"* %24 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %25) #11
  br label %26

26:                                               ; preds = %23, %18, %13
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 12
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %27 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %28) #11
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 6
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %29 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = ptrtoint i8* %31 to i64
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 8
  %36 = bitcast %"class.base::RefCountedThreadSafe"* %35 to i64*
  store i64 %34, i64* %36, align 8
  tail call void @_ZdlPv(i8* nonnull %31) #12
  br label %37

37:                                               ; preds = %33, %26
  %38 = bitcast %"class.net::CertNetFetcherURLRequest::RequestCore"* %6 to i8*
  tail call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %3, %8, %37
  %40 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %39, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__treeINS_12__value_typeIPN3net12_GLOBAL__N_13JobENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS3_13JobComparatorELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.403"* readnone, %"class.std::__1::__tree_node"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIPN3net12_GLOBAL__N_13JobENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS3_13JobComparatorELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.403"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIPN3net12_GLOBAL__N_13JobENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS3_13JobComparatorELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.403"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.net::(anonymous namespace)::Job"*, %"class.net::(anonymous namespace)::Job"** %10, align 8
  store %"class.net::(anonymous namespace)::Job"* null, %"class.net::(anonymous namespace)::Job"** %10, align 8
  %12 = icmp eq %"class.net::(anonymous namespace)::Job"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.net::(anonymous namespace)::Job"* %11 to void (%"class.net::(anonymous namespace)::Job"*)***
  %15 = load void (%"class.net::(anonymous namespace)::Job"*)**, void (%"class.net::(anonymous namespace)::Job"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::(anonymous namespace)::Job"*)*, void (%"class.net::(anonymous namespace)::Job"*)** %15, i64 8
  %17 = load void (%"class.net::(anonymous namespace)::Job"*)*, void (%"class.net::(anonymous namespace)::Job"*)** %16, align 8
  tail call void %17(%"class.net::(anonymous namespace)::Job"* nonnull %11) #11
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !10
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !10
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !10
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net24CertNetFetcherURLRequestEFvNSt3__110unique_ptrINS4_13RequestParamsENS5_14default_deleteIS7_EEEE13scoped_refptrINS4_11RequestCoreEEEJSB_IS4_ESA_SD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.net::CertNetFetcherURLRequest"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.net::CertNetFetcherURLRequest"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"class.net::CertNetFetcherURLRequest::RequestCore"*)**
  %21 = load void (%"class.net::CertNetFetcherURLRequest"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"class.net::CertNetFetcherURLRequest::RequestCore"*)*, void (%"class.net::CertNetFetcherURLRequest"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"class.net::CertNetFetcherURLRequest::RequestCore"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.net::CertNetFetcherURLRequest"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"class.net::CertNetFetcherURLRequest::RequestCore"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.net::CertNetFetcherURLRequest"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"class.net::CertNetFetcherURLRequest::RequestCore"*)* [ %21, %15 ], [ %23, %22 ]
  %26 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %26 to %"struct.net::CertNetFetcherURLRequest::RequestParams"**
  %28 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %27, align 8
  store %"struct.net::CertNetFetcherURLRequest::RequestParams"* null, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %27, align 8
  %29 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %30 = bitcast void (%"class.base::internal::BindStateBase"*)** %29 to %"class.net::CertNetFetcherURLRequest::RequestCore"**
  %31 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %30, align 8
  store %"class.net::CertNetFetcherURLRequest::RequestCore"* null, %"class.net::CertNetFetcherURLRequest::RequestCore"** %30, align 8
  tail call void %25(%"class.net::CertNetFetcherURLRequest"* %12, %"struct.net::CertNetFetcherURLRequest::RequestParams"* %28, %"class.net::CertNetFetcherURLRequest::RequestCore"* %31) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net24CertNetFetcherURLRequestEFvNSt3__110unique_ptrINS3_13RequestParamsENS4_14default_deleteIS6_EEEE13scoped_refptrINS3_11RequestCoreEEEJSA_IS3_ES9_SC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::__tuple_impl.488"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJ13scoped_refptrIN3net24CertNetFetcherURLRequestEENS_10unique_ptrINS5_13RequestParamsENS_14default_deleteIS8_EEEES3_INS5_11RequestCoreEEEED2Ev(%"struct.std::__1::__tuple_impl.488"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJ13scoped_refptrIN3net24CertNetFetcherURLRequestEENS_10unique_ptrINS5_13RequestParamsENS_14default_deleteIS8_EEEES3_INS5_11RequestCoreEEEED2Ev(%"struct.std::__1::__tuple_impl.488"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl.488", %"struct.std::__1::__tuple_impl.488"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %2, align 8
  %4 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %3, null
  br i1 %4, label %36, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %36

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 16
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %11 to %"class.base::SingleThreadTaskRunner"**
  %13 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %12, align 8
  %14 = icmp eq %"class.base::SingleThreadTaskRunner"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %13, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %16, i64 -2
  %22 = bitcast %"class.base::RefCountedThreadSafe.123"* %21 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %22) #11
  br label %23

23:                                               ; preds = %20, %15, %10
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 12
  %25 = bitcast %"class.base::RefCountedThreadSafe"* %24 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %25) #11
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 6
  %27 = bitcast %"class.base::RefCountedThreadSafe"* %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %23
  %31 = ptrtoint i8* %28 to i64
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 8
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %32 to i64*
  store i64 %31, i64* %33, align 8
  tail call void @_ZdlPv(i8* nonnull %28) #12
  br label %34

34:                                               ; preds = %30, %23
  %35 = bitcast %"class.net::CertNetFetcherURLRequest::RequestCore"* %3 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %1, %5, %34
  %37 = getelementptr inbounds %"struct.std::__1::__tuple_impl.488", %"struct.std::__1::__tuple_impl.488"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.net::CertNetFetcherURLRequest::RequestParams"*, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %37, align 8
  store %"struct.net::CertNetFetcherURLRequest::RequestParams"* null, %"struct.net::CertNetFetcherURLRequest::RequestParams"** %37, align 8
  %39 = icmp eq %"struct.net::CertNetFetcherURLRequest::RequestParams"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.net::CertNetFetcherURLRequest::RequestParams", %"struct.net::CertNetFetcherURLRequest::RequestParams"* %38, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %41) #11
  %42 = bitcast %"struct.net::CertNetFetcherURLRequest::RequestParams"* %38 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %36, %40
  %44 = getelementptr inbounds %"struct.std::__1::__tuple_impl.488", %"struct.std::__1::__tuple_impl.488"* %0, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.net::CertNetFetcherURLRequest"*, %"class.net::CertNetFetcherURLRequest"** %44, align 8
  %46 = icmp eq %"class.net::CertNetFetcherURLRequest"* %45, null
  br i1 %46, label %59, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest", %"class.net::CertNetFetcherURLRequest"* %45, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe.428", %"class.base::RefCountedThreadSafe.428"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw sub i32* %49, i32 1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %59

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.428", %"class.base::RefCountedThreadSafe.428"* %48, i64 -2
  %54 = bitcast %"class.base::RefCountedThreadSafe.428"* %53 to %"class.net::CertNetFetcher"*
  %55 = bitcast %"class.base::RefCountedThreadSafe.428"* %53 to void (%"class.net::CertNetFetcher"*)***
  %56 = load void (%"class.net::CertNetFetcher"*)**, void (%"class.net::CertNetFetcher"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.net::CertNetFetcher"*)*, void (%"class.net::CertNetFetcher"*)** %56, i64 5
  %58 = load void (%"class.net::CertNetFetcher"*)*, void (%"class.net::CertNetFetcher"*)** %57, align 8
  tail call void %58(%"class.net::CertNetFetcher"* nonnull %54) #11
  br label %59

59:                                               ; preds = %43, %47, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_125CertNetFetcherRequestImplD2Ev(%"class.net::(anonymous namespace)::CertNetFetcherRequestImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::CertNetFetcherRequestImpl", %"class.net::(anonymous namespace)::CertNetFetcherRequestImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net12_GLOBAL__N_125CertNetFetcherRequestImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::CertNetFetcherRequestImpl", %"class.net::(anonymous namespace)::CertNetFetcherRequestImpl"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  %5 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %4, align 8
  %6 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void @_ZN3net24CertNetFetcherURLRequest11RequestCore9CancelJobEv(%"class.net::CertNetFetcherURLRequest::RequestCore"* nonnull %5)
  br label %8

8:                                                ; preds = %1, %7
  tail call void @_ZN13scoped_refptrIN3net24CertNetFetcherURLRequest11RequestCoreEED2Ev(%class.scoped_refptr* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_125CertNetFetcherRequestImplD0Ev(%"class.net::(anonymous namespace)::CertNetFetcherRequestImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::CertNetFetcherRequestImpl", %"class.net::(anonymous namespace)::CertNetFetcherRequestImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net12_GLOBAL__N_125CertNetFetcherRequestImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::CertNetFetcherRequestImpl", %"class.net::(anonymous namespace)::CertNetFetcherRequestImpl"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %3, align 8
  %5 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %4, null
  br i1 %5, label %40, label %6

6:                                                ; preds = %1
  tail call void @_ZN3net24CertNetFetcherURLRequest11RequestCore9CancelJobEv(%"class.net::CertNetFetcherURLRequest::RequestCore"* nonnull %4) #11
  %7 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %3, align 8
  %8 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %7, null
  br i1 %8, label %40, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %7, i64 0, i32 0
  %11 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %40

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 16
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %15 to %"class.base::SingleThreadTaskRunner"**
  %17 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %16, align 8
  %18 = icmp eq %"class.base::SingleThreadTaskRunner"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %17, i64 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.123"* %25 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %26) #11
  br label %27

27:                                               ; preds = %24, %19, %14
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 12
  %29 = bitcast %"class.base::RefCountedThreadSafe"* %28 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %29) #11
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 6
  %31 = bitcast %"class.base::RefCountedThreadSafe"* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = ptrtoint i8* %32 to i64
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 8
  %37 = bitcast %"class.base::RefCountedThreadSafe"* %36 to i64*
  store i64 %35, i64* %37, align 8
  tail call void @_ZdlPv(i8* nonnull %32) #12
  br label %38

38:                                               ; preds = %34, %27
  %39 = bitcast %"class.net::CertNetFetcherURLRequest::RequestCore"* %7 to i8*
  tail call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %1, %6, %9, %38
  %41 = bitcast %"class.net::(anonymous namespace)::CertNetFetcherRequestImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %41) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_125CertNetFetcherRequestImpl13WaitForResultEPNS_5ErrorEPNSt3__16vectorIhNS4_9allocatorIhEEEE(%"class.net::(anonymous namespace)::CertNetFetcherRequestImpl"* nocapture, i32* nocapture, %"class.std::__1::vector.19"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::CertNetFetcherRequestImpl", %"class.net::(anonymous namespace)::CertNetFetcherRequestImpl"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %6 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %5, align 8
  %7 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %6, i64 0, i32 4
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* %7) #11
  %8 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %6, i64 0, i32 3
  %9 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %2, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %3
  %13 = ptrtoint i8* %10 to i64
  %14 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %2, i64 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i64*
  store i64 %13, i64* %15, align 8
  tail call void @_ZdlPv(i8* nonnull %10) #12
  %16 = bitcast %"class.std::__1::vector.19"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #11
  br label %17

17:                                               ; preds = %3, %12
  %18 = bitcast %"class.std::__1::vector.19"* %8 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.19"* %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %6, i64 0, i32 3, i32 0, i32 1
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %2, i64 0, i32 0, i32 1
  %25 = bitcast i8** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %6, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast i8** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"class.std::__1::vector.19"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #11
  %32 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %6, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %1, align 4
  store i32 -9, i32* %32, align 8
  %34 = bitcast %class.scoped_refptr* %4 to i64*
  %35 = load %"class.net::CertNetFetcherURLRequest::RequestCore"*, %"class.net::CertNetFetcherURLRequest::RequestCore"** %5, align 8
  store i64 0, i64* %34, align 8
  %36 = icmp eq %"class.net::CertNetFetcherURLRequest::RequestCore"* %35, null
  br i1 %36, label %68, label %37

37:                                               ; preds = %17
  %38 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %35, i64 0, i32 0
  %39 = getelementptr inbounds %"class.net::CertNetFetcherURLRequest::RequestCore", %"class.net::CertNetFetcherURLRequest::RequestCore"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %68

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %38, i64 16
  %44 = bitcast %"class.base::RefCountedThreadSafe"* %43 to %"class.base::SingleThreadTaskRunner"**
  %45 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %44, align 8
  %46 = icmp eq %"class.base::SingleThreadTaskRunner"* %45, null
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %45, i64 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw sub i32* %49, i32 1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.123", %"class.base::RefCountedThreadSafe.123"* %48, i64 -2
  %54 = bitcast %"class.base::RefCountedThreadSafe.123"* %53 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %54) #11
  br label %55

55:                                               ; preds = %52, %47, %42
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %38, i64 12
  %57 = bitcast %"class.base::RefCountedThreadSafe"* %56 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %57) #11
  %58 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %38, i64 6
  %59 = bitcast %"class.base::RefCountedThreadSafe"* %58 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %55
  %63 = ptrtoint i8* %60 to i64
  %64 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %38, i64 8
  %65 = bitcast %"class.base::RefCountedThreadSafe"* %64 to i64*
  store i64 %63, i64* %65, align 8
  tail call void @_ZdlPv(i8* nonnull %60) #12
  br label %66

66:                                               ; preds = %62, %55
  %67 = bitcast %"class.net::CertNetFetcherURLRequest::RequestCore"* %35 to i8*
  tail call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %17, %37, %66
  ret void
}

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net24CertNetFetcherURLRequest11RequestCoreEFvvEJPS5_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net24CertNetFetcherURLRequest11RequestCoreEFvvEJPS5_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN3net24CertNetFetcherURLRequest11RequestCoreEFvvEJPS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN3net24CertNetFetcherURLRequest11RequestCoreEFvvEJPS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeINS_12__value_typeIPN3net12_GLOBAL__N_13JobENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS3_13JobComparatorELb1EEENS_9allocatorISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS6_INS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSE_ISS_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeINS_12__value_typeIPN3net12_GLOBAL__N_13JobENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_19__map_value_compareIS5_SA_NS3_13JobComparatorELb1EEENS_9allocatorISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS6_INS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSE_ISS_EEEEEEDpOT_"}
!10 = !{i8 0, i8 2}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_13JobEFvNS3_5ErrorEEJNS0_17UnretainedWrapperIS5_EES6_EEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_13JobEFvNS3_5ErrorEEJNS0_17UnretainedWrapperIS5_EES6_EEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_13JobEFvNS1_5ErrorEEJNS_8internal17UnretainedWrapperIS3_EES4_EEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_13JobEFvNS1_5ErrorEEJNS_8internal17UnretainedWrapperIS3_EES4_EEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net24CertNetFetcherURLRequestEFvNSt3__110unique_ptrINS4_13RequestParamsENS5_14default_deleteIS7_EEEE13scoped_refptrINS4_11RequestCoreEEEJPS4_SA_RSD_EEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net24CertNetFetcherURLRequestEFvNSt3__110unique_ptrINS4_13RequestParamsENS5_14default_deleteIS7_EEEE13scoped_refptrINS4_11RequestCoreEEEJPS4_SA_RSD_EEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceIMN3net24CertNetFetcherURLRequestEFvNSt3__110unique_ptrINS2_13RequestParamsENS3_14default_deleteIS5_EEEE13scoped_refptrINS2_11RequestCoreEEEJPS2_S8_RSB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceIMN3net24CertNetFetcherURLRequestEFvNSt3__110unique_ptrINS2_13RequestParamsENS3_14default_deleteIS5_EEEE13scoped_refptrINS2_11RequestCoreEEEJPS2_S8_RSB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.unroll.disable"}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !29}
!29 = !{!"llvm.loop.isvectorized", i32 1}
!30 = distinct !{!30, !22}
!31 = distinct !{!31, !29}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !29}
!38 = distinct !{!38, !22}
!39 = distinct !{!39, !29}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !29}
!46 = distinct !{!46, !22}
!47 = distinct !{!47, !29}
!48 = !{!49}
!49 = distinct !{!49, !50}
!50 = distinct !{!50, !"LVerDomain"}
!51 = !{!52}
!52 = distinct !{!52, !50}
!53 = distinct !{!53, !29}
!54 = distinct !{!54, !22}
!55 = distinct !{!55, !29}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !29}
!62 = distinct !{!62, !22}
!63 = distinct !{!63, !29}
