; ModuleID = '../../third_party/skia/modules/skottie/src/layers/shapelayer/TrimPaths.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/layers/shapelayer/TrimPaths.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%struct.SkSize = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %class.sk_sp.31*, %class.sk_sp.31*, %"class.std::__1::__compressed_pair.33" }
%class.sk_sp.31 = type { %"class.sksg::GeometryNode"* }
%"class.sksg::GeometryNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.sk_sp.31* }
%class.sk_sp.38 = type { %"class.sksg::Merge"* }
%"class.sksg::Merge" = type { %"class.sksg::GeometryNode.base", %"class.std::__1::vector.39", %class.SkPath }
%"class.sksg::GeometryNode.base" = type { %"class.sksg::Node.base" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.sksg::Merge::Rec"*, %"struct.sksg::Merge::Rec"*, %"class.std::__1::__compressed_pair.41" }
%"struct.sksg::Merge::Rec" = type <{ %class.sk_sp.31, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.sksg::Merge::Rec"* }
%class.SkPath = type <{ %class.sk_sp.46, i32, %"struct.std::__1::atomic.49", %"struct.std::__1::atomic.49", i8, i8 }>
%class.sk_sp.46 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.47, %class.SkTDArray.48, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.47 = type { i8*, i32, i32 }
%class.SkTDArray.48 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.54 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.49" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.54 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.55", [3 x i8] }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i8 }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.sksg::GeometryEffect" = type { %"class.sksg::GeometryNode.base", %class.sk_sp.31, %class.SkPath }
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%"class.sksg::TrimEffect" = type <{ %"class.sksg::GeometryEffect", float, float, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.skottie::internal::DiscardableAdapterBase" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.59 }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%class.sk_sp.59 = type { %"class.sksg::TrimEffect"* }
%"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter" = type <{ %"class.skottie::internal::DiscardableAdapterBase", float, float, float, [4 x i8] }>

$_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE7reserveEm = comdat any

$_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c"m\00", align 1
@_ZTVN7skottie8internal12_GLOBAL__N_117TrimEffectAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117TrimEffectAdapterEN4sksg10TrimEffectEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_117TrimEffectAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_117TrimEffectAdapter6onSyncEv to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@_ZTVN4sksg10TrimEffectE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117TrimEffectAdapterEN4sksg10TrimEffectEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117TrimEffectAdapterEN4sksg10TrimEffectEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117TrimEffectAdapterEN4sksg10TrimEffectEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12ShapeBuilder24AttachTrimGeometryEffectERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEONSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS9_9allocatorISE_EEEE(%"class.std::__1::vector.29"* noalias sret, %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"*, %"class.std::__1::vector.29"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.31, align 8
  %6 = alloca %class.sk_sp.6, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::__1::vector.29", align 8
  %9 = alloca %class.sk_sp.31, align 8
  %10 = alloca %class.sk_sp.38, align 8
  %11 = alloca %class.sk_sp.31, align 8
  %12 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #11
  %13 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  store i64 -6148914691236517206, i64* %7, align 8
  %14 = call zeroext i1 @_ZN7skottie5ParseImEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %12, i64* nonnull %7) #11
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = load i64, i64* %7, align 8
  %17 = icmp eq i64 %16, 1
  br label %19

18:                                               ; preds = %4
  store i64 1, i64* %7, align 8
  br label %19

19:                                               ; preds = %15, %18
  %20 = phi i1 [ %17, %15 ], [ true, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  %21 = bitcast %"class.std::__1::vector.29"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %8, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #11
  br i1 %20, label %74, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %class.sk_sp.31* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = bitcast %class.sk_sp.38* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7skottie8internal12ShapeBuilder13MergeGeometryEONSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS2_9allocatorIS7_EEEENS5_5Merge4ModeE(%class.sk_sp.38* nonnull sret %10, %"class.std::__1::vector.29"* dereferenceable(24) %3, i32 0) #11
  %28 = getelementptr inbounds %class.sk_sp.38, %class.sk_sp.38* %10, i64 0, i32 0
  %29 = bitcast %class.sk_sp.38* %10 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.sksg::Merge"* null, %"class.sksg::Merge"** %28, align 8
  %31 = bitcast %class.sk_sp.31* %9 to i64*
  store i64 %30, i64* %31, align 8
  %32 = load %class.sk_sp.31*, %class.sk_sp.31** %23, align 8
  %33 = load %class.sk_sp.31*, %class.sk_sp.31** %25, align 8
  %34 = icmp ult %class.sk_sp.31* %32, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %24
  %36 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %9, i64 0, i32 0
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %36, align 8
  %37 = bitcast %class.sk_sp.31* %32 to i64*
  store i64 %30, i64* %37, align 8
  %38 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %32, i64 1
  %39 = ptrtoint %class.sk_sp.31* %38 to i64
  %40 = bitcast %class.sk_sp.31** %23 to i64*
  store i64 %39, i64* %40, align 8
  br label %42

41:                                               ; preds = %24
  call void @_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.29"* nonnull %8, %class.sk_sp.31* nonnull dereferenceable(8) %9) #11
  br label %42

42:                                               ; preds = %35, %41
  %43 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %9, i64 0, i32 0
  %44 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %43, align 8
  %45 = icmp eq %"class.sksg::GeometryNode"* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %"class.sksg::GeometryNode"* %44 to %class.SkRefCntBase*
  %52 = bitcast %"class.sksg::GeometryNode"* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  call void %55(%class.SkRefCntBase* nonnull %51) #11
  br label %56

56:                                               ; preds = %42, %46, %50
  %57 = load %"class.sksg::Merge"*, %"class.sksg::Merge"** %28, align 8
  %58 = icmp eq %"class.sksg::Merge"* %57, null
  br i1 %58, label %69, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.sksg::Merge", %"class.sksg::Merge"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = bitcast %"class.sksg::Merge"* %57 to %class.SkRefCntBase*
  %65 = bitcast %"class.sksg::Merge"* %57 to void (%class.SkRefCntBase*)***
  %66 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, i64 2
  %68 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, align 8
  call void %68(%class.SkRefCntBase* nonnull %64) #11
  br label %69

69:                                               ; preds = %56, %59, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %70 = bitcast %class.sk_sp.31** %23 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::vector.29"* %8 to i64*
  %73 = load i64, i64* %72, align 8
  br label %84

74:                                               ; preds = %19
  %75 = bitcast %"class.std::__1::vector.29"* %3 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 1
  %78 = bitcast %class.sk_sp.31** %77 to <2 x i64>*
  %79 = load <2 x i64>, <2 x i64>* %78, align 8
  %80 = bitcast %"class.std::__1::vector.29"* %8 to i64*
  store i64 %76, i64* %80, align 8
  %81 = bitcast %class.sk_sp.31** %23 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %81, align 8
  %82 = bitcast %"class.std::__1::vector.29"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #11
  %83 = extractelement <2 x i64> %79, i32 0
  br label %84

84:                                               ; preds = %74, %69
  %85 = phi i64 [ %76, %74 ], [ %73, %69 ]
  %86 = phi i64 [ %83, %74 ], [ %71, %69 ]
  %87 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %89 = bitcast %"class.std::__1::vector.29"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #11
  %90 = sub i64 %86, %85
  %91 = ashr exact i64 %90, 3
  call void @_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE7reserveEm(%"class.std::__1::vector.29"* %0, i64 %91)
  %92 = load %class.sk_sp.31*, %class.sk_sp.31** %22, align 8
  %93 = load %class.sk_sp.31*, %class.sk_sp.31** %23, align 8
  %94 = icmp eq %class.sk_sp.31* %92, %93
  br i1 %94, label %109, label %95

95:                                               ; preds = %84
  %96 = bitcast %class.sk_sp.31* %11 to i8*
  %97 = bitcast %class.sk_sp.31* %5 to i8*
  %98 = bitcast %class.sk_sp.31* %5 to i64*
  %99 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %5, i64 0, i32 0
  %100 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %2, i64 0, i32 11
  %101 = bitcast %class.sk_sp.6* %6 to i8*
  %102 = bitcast %class.sk_sp.6* %6 to i64*
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  %104 = bitcast %class.sk_sp.31* %11 to i64*
  %105 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %11, i64 0, i32 0
  %106 = bitcast %class.sk_sp.31** %87 to i64*
  br label %140

107:                                              ; preds = %291
  %108 = load %class.sk_sp.31*, %class.sk_sp.31** %22, align 8
  br label %109

109:                                              ; preds = %107, %84
  %110 = phi %class.sk_sp.31* [ %108, %107 ], [ %92, %84 ]
  %111 = icmp eq %class.sk_sp.31* %110, null
  br i1 %111, label %139, label %112

112:                                              ; preds = %109
  %113 = bitcast %class.sk_sp.31* %110 to i8*
  %114 = load %class.sk_sp.31*, %class.sk_sp.31** %23, align 8
  %115 = icmp eq %class.sk_sp.31* %114, %110
  br i1 %115, label %137, label %116

116:                                              ; preds = %112, %132
  %117 = phi %class.sk_sp.31* [ %118, %132 ], [ %114, %112 ]
  %118 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %117, i64 -1
  %119 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %118, i64 0, i32 0
  %120 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %119, align 8
  %121 = icmp eq %"class.sksg::GeometryNode"* %120, null
  br i1 %121, label %132, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %120, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw add i32* %123, i32 -1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  %127 = bitcast %"class.sksg::GeometryNode"* %120 to %class.SkRefCntBase*
  %128 = bitcast %"class.sksg::GeometryNode"* %120 to void (%class.SkRefCntBase*)***
  %129 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %128, align 8
  %130 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, i64 2
  %131 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, align 8
  call void %131(%class.SkRefCntBase* nonnull %127) #11
  br label %132

132:                                              ; preds = %126, %122, %116
  %133 = icmp eq %class.sk_sp.31* %118, %110
  br i1 %133, label %134, label %116

134:                                              ; preds = %132
  %135 = bitcast %"class.std::__1::vector.29"* %8 to i8**
  %136 = load i8*, i8** %135, align 8
  br label %137

137:                                              ; preds = %134, %112
  %138 = phi i8* [ %136, %134 ], [ %113, %112 ]
  store %class.sk_sp.31* %110, %class.sk_sp.31** %23, align 8
  call void @_ZdlPv(i8* %138) #12
  br label %139

139:                                              ; preds = %109, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  ret void

140:                                              ; preds = %95, %291
  %141 = phi %class.sk_sp.31* [ %92, %95 ], [ %292, %291 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #11
  %142 = call i8* @_Znwm(i64 72) #12, !noalias !2
  %143 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %141, i64 0, i32 0
  %144 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %143, align 8, !noalias !2
  %145 = icmp eq %"class.sksg::GeometryNode"* %144, null
  br i1 %145, label %173, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %144, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw add i32* %147, i32 1 monotonic, !noalias !7
  %149 = ptrtoint %"class.sksg::GeometryNode"* %144 to i64
  %150 = call i8* @_Znwm(i64 88) #12, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #11, !noalias !11
  %151 = bitcast i8* %150 to %"class.sksg::GeometryEffect"*
  store i64 %149, i64* %98, align 8, !noalias !11
  call void @_ZN4sksg14GeometryEffectC2E5sk_spINS_12GeometryNodeEE(%"class.sksg::GeometryEffect"* nonnull %151, %class.sk_sp.31* nonnull %5) #11, !noalias !8
  %152 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %99, align 8, !noalias !11
  %153 = icmp eq %"class.sksg::GeometryNode"* %152, null
  br i1 %153, label %164, label %154

154:                                              ; preds = %146
  %155 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %152, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = atomicrmw add i32* %155, i32 -1 acq_rel, !noalias !8
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %158, label %164

158:                                              ; preds = %154
  %159 = bitcast %"class.sksg::GeometryNode"* %152 to %class.SkRefCntBase*
  %160 = bitcast %"class.sksg::GeometryNode"* %152 to void (%class.SkRefCntBase*)***
  %161 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %160, align 8, !noalias !8
  %162 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %161, i64 2
  %163 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %162, align 8, !noalias !8
  call void %163(%class.SkRefCntBase* nonnull %159) #11, !noalias !8
  br label %164

164:                                              ; preds = %158, %154, %146
  %165 = bitcast i8* %150 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg10TrimEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %165, align 8, !noalias !11
  %166 = getelementptr inbounds i8, i8* %150, i64 72
  %167 = bitcast i8* %166 to float*
  store float 0.000000e+00, float* %167, align 8, !noalias !11
  %168 = getelementptr inbounds i8, i8* %150, i64 76
  %169 = bitcast i8* %168 to float*
  store float 1.000000e+00, float* %169, align 4, !noalias !11
  %170 = getelementptr inbounds i8, i8* %150, i64 80
  %171 = bitcast i8* %170 to i32*
  store i32 0, i32* %171, align 8, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #11, !noalias !11
  %172 = ptrtoint i8* %150 to i64
  br label %173

173:                                              ; preds = %164, %140
  %174 = phi i64 [ %172, %164 ], [ 0, %140 ]
  %175 = getelementptr inbounds i8, i8* %142, i64 8
  %176 = bitcast i8* %175 to i32*
  store i32 1, i32* %176, align 4, !noalias !2
  %177 = bitcast i8* %142 to i32 (...)***
  %178 = getelementptr inbounds i8, i8* %142, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 25, i1 false) #11, !noalias !2
  %179 = getelementptr inbounds i8, i8* %142, i64 48
  %180 = bitcast i8* %179 to i64*
  store i64 %174, i64* %180, align 8, !noalias !2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_117TrimEffectAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %177, align 8, !noalias !2
  %181 = getelementptr inbounds i8, i8* %142, i64 56
  %182 = bitcast i8* %181 to float*
  store float 0.000000e+00, float* %182, align 8, !noalias !2
  %183 = getelementptr inbounds i8, i8* %142, i64 60
  %184 = bitcast i8* %183 to float*
  store float 1.000000e+02, float* %184, align 4, !noalias !2
  %185 = getelementptr inbounds i8, i8* %142, i64 64
  %186 = bitcast i8* %185 to float*
  store float 0.000000e+00, float* %186, align 8, !noalias !2
  %187 = bitcast i8* %142 to %"class.skottie::internal::AnimatablePropertyContainer"*
  %188 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11, !noalias !2
  %189 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %188, i64 0, i32 0, i64 0
  %190 = load i8, i8* %189, align 8, !noalias !2
  %191 = and i8 %190, 7
  %192 = icmp eq i8 %191, 7
  %193 = bitcast %"class.skjson::Value"* %188 to %"class.skjson::ObjectValue"*
  %194 = select i1 %192, %"class.skjson::ObjectValue"* %193, %"class.skjson::ObjectValue"* null
  %195 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %187, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %194, float* %182) #11, !noalias !2
  %196 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #11, !noalias !2
  %197 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %196, i64 0, i32 0, i64 0
  %198 = load i8, i8* %197, align 8, !noalias !2
  %199 = and i8 %198, 7
  %200 = icmp eq i8 %199, 7
  %201 = bitcast %"class.skjson::Value"* %196 to %"class.skjson::ObjectValue"*
  %202 = select i1 %200, %"class.skjson::ObjectValue"* %201, %"class.skjson::ObjectValue"* null
  %203 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %187, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %202, float* %184) #11, !noalias !2
  %204 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #11, !noalias !2
  %205 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %204, i64 0, i32 0, i64 0
  %206 = load i8, i8* %205, align 8, !noalias !2
  %207 = and i8 %206, 7
  %208 = icmp eq i8 %207, 7
  %209 = bitcast %"class.skjson::Value"* %204 to %"class.skjson::ObjectValue"*
  %210 = select i1 %208, %"class.skjson::ObjectValue"* %209, %"class.skjson::ObjectValue"* null
  %211 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %187, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %2, %"class.skjson::ObjectValue"* %210, float* %186) #11, !noalias !2
  %212 = ptrtoint i8* %142 to i64
  call void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %187) #11, !noalias !2
  %213 = bitcast i8* %179 to %"class.sksg::TrimEffect"**
  %214 = load %"class.sksg::TrimEffect"*, %"class.sksg::TrimEffect"** %213, align 8, !noalias !12
  %215 = icmp eq %"class.sksg::TrimEffect"* %214, null
  br i1 %215, label %219, label %216

216:                                              ; preds = %173
  %217 = getelementptr inbounds %"class.sksg::TrimEffect", %"class.sksg::TrimEffect"* %214, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = atomicrmw add i32* %217, i32 1 monotonic
  br label %219

219:                                              ; preds = %173, %216
  %220 = ptrtoint %"class.sksg::TrimEffect"* %214 to i64
  %221 = bitcast i8* %178 to %class.sk_sp.6**
  %222 = load %class.sk_sp.6*, %class.sk_sp.6** %221, align 8, !noalias !12
  %223 = getelementptr inbounds i8, i8* %142, i64 24
  %224 = bitcast i8* %223 to %class.sk_sp.6**
  %225 = load %class.sk_sp.6*, %class.sk_sp.6** %224, align 8, !noalias !12
  %226 = icmp eq %class.sk_sp.6* %222, %225
  br i1 %226, label %254, label %227

227:                                              ; preds = %219
  %228 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %100, align 8, !noalias !12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #11, !noalias !12
  store i64 %212, i64* %102, align 8, !noalias !12
  %229 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %228, i64 0, i32 0, i32 1
  %230 = load %class.sk_sp.6*, %class.sk_sp.6** %229, align 8
  %231 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %228, i64 0, i32 0, i32 2, i32 0, i32 0
  %232 = load %class.sk_sp.6*, %class.sk_sp.6** %231, align 8
  %233 = icmp ult %class.sk_sp.6* %230, %232
  br i1 %233, label %234, label %239

234:                                              ; preds = %227
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %103, align 8, !noalias !12
  %235 = bitcast %class.sk_sp.6* %230 to i64*
  store i64 %212, i64* %235, align 8
  %236 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %230, i64 1
  %237 = ptrtoint %class.sk_sp.6* %236 to i64
  %238 = bitcast %class.sk_sp.6** %229 to i64*
  store i64 %237, i64* %238, align 8
  br label %240

239:                                              ; preds = %227
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %228, %class.sk_sp.6* nonnull dereferenceable(8) %6) #11
  br label %240

240:                                              ; preds = %239, %234
  %241 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %103, align 8, !noalias !12
  %242 = icmp eq %"class.skottie::internal::Animator"* %241, null
  br i1 %242, label %253, label %243

243:                                              ; preds = %240
  %244 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %241, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = atomicrmw add i32* %244, i32 -1 acq_rel
  %246 = icmp eq i32 %245, 1
  br i1 %246, label %247, label %253

247:                                              ; preds = %243
  %248 = bitcast %"class.skottie::internal::Animator"* %241 to %class.SkRefCntBase*
  %249 = bitcast %"class.skottie::internal::Animator"* %241 to void (%class.SkRefCntBase*)***
  %250 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %249, align 8
  %251 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %250, i64 2
  %252 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %251, align 8
  call void %252(%class.SkRefCntBase* nonnull %248) #11
  br label %253

253:                                              ; preds = %247, %243, %240
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #11, !noalias !12
  br label %269

254:                                              ; preds = %219
  %255 = bitcast i8* %142 to %"class.skottie::internal::Animator"*
  %256 = bitcast i8* %142 to i1 (%"class.skottie::internal::Animator"*, float)***
  %257 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %256, align 8, !noalias !12
  %258 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %257, i64 3
  %259 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %258, align 8
  %260 = call zeroext i1 %259(%"class.skottie::internal::Animator"* nonnull %255, float 0.000000e+00) #11
  %261 = atomicrmw add i32* %176, i32 -1 acq_rel, !noalias !12
  %262 = icmp eq i32 %261, 1
  br i1 %262, label %263, label %269

263:                                              ; preds = %254
  %264 = bitcast i8* %142 to %class.SkRefCntBase*
  %265 = bitcast i8* %142 to void (%class.SkRefCntBase*)***
  %266 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %265, align 8, !noalias !12
  %267 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %266, i64 2
  %268 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %267, align 8
  call void %268(%class.SkRefCntBase* nonnull %264) #11
  br label %269

269:                                              ; preds = %253, %254, %263
  store i64 %220, i64* %104, align 8
  %270 = load %class.sk_sp.31*, %class.sk_sp.31** %87, align 8
  %271 = load %class.sk_sp.31*, %class.sk_sp.31** %88, align 8
  %272 = icmp ult %class.sk_sp.31* %270, %271
  br i1 %272, label %273, label %277

273:                                              ; preds = %269
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %105, align 8
  %274 = bitcast %class.sk_sp.31* %270 to i64*
  store i64 %220, i64* %274, align 8
  %275 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %270, i64 1
  %276 = ptrtoint %class.sk_sp.31* %275 to i64
  store i64 %276, i64* %106, align 8
  br label %278

277:                                              ; preds = %269
  call void @_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.29"* %0, %class.sk_sp.31* nonnull dereferenceable(8) %11) #11
  br label %278

278:                                              ; preds = %273, %277
  %279 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %105, align 8
  %280 = icmp eq %"class.sksg::GeometryNode"* %279, null
  br i1 %280, label %291, label %281

281:                                              ; preds = %278
  %282 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %279, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = atomicrmw add i32* %282, i32 -1 acq_rel
  %284 = icmp eq i32 %283, 1
  br i1 %284, label %285, label %291

285:                                              ; preds = %281
  %286 = bitcast %"class.sksg::GeometryNode"* %279 to %class.SkRefCntBase*
  %287 = bitcast %"class.sksg::GeometryNode"* %279 to void (%class.SkRefCntBase*)***
  %288 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %287, align 8
  %289 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %288, i64 2
  %290 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %289, align 8
  call void %290(%class.SkRefCntBase* nonnull %286) #11
  br label %291

291:                                              ; preds = %285, %281, %278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #11
  %292 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %141, i64 1
  %293 = icmp eq %class.sk_sp.31* %292, %93
  br i1 %293, label %107, label %140
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7skottie8internal12ShapeBuilder13MergeGeometryEONSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS2_9allocatorIS7_EEEENS5_5Merge4ModeE(%class.sk_sp.38* sret, %"class.std::__1::vector.29"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE7reserveEm(%"class.std::__1::vector.29"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %class.sk_sp.31** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %class.sk_sp.31*
  br i1 %10, label %12, label %140

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %class.sk_sp.31** %13 to i64*
  %15 = icmp ugt i64 %1, 2305843009213693951
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #13
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 3
  %21 = shl i64 %1, 3
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %class.sk_sp.31*
  %24 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %23, i64 %20
  %25 = ptrtoint %class.sk_sp.31* %24 to i64
  %26 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %23, i64 %1
  %27 = ptrtoint %class.sk_sp.31* %26 to i64
  %28 = inttoptr i64 %18 to %class.sk_sp.31*
  %29 = icmp eq %class.sk_sp.31* %28, %11
  br i1 %29, label %57, label %30

30:                                               ; preds = %17
  %31 = getelementptr %class.sk_sp.31, %class.sk_sp.31* %28, i64 -1, i32 0
  %32 = bitcast %"class.sksg::GeometryNode"** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %30, %40
  %41 = phi %class.sk_sp.31* [ %44, %40 ], [ %24, %30 ]
  %42 = phi %class.sk_sp.31* [ %45, %40 ], [ %28, %30 ]
  %43 = phi i64 [ %50, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %41, i64 -1
  %45 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %42, i64 -1
  %46 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %45, i64 0, i32 0
  %47 = bitcast %class.sk_sp.31* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %46, align 8
  %49 = bitcast %class.sk_sp.31* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = add i64 %43, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %40, !llvm.loop !13

52:                                               ; preds = %40, %30
  %53 = phi %class.sk_sp.31* [ undef, %30 ], [ %44, %40 ]
  %54 = phi %class.sk_sp.31* [ %24, %30 ], [ %44, %40 ]
  %55 = phi %class.sk_sp.31* [ %28, %30 ], [ %45, %40 ]
  %56 = icmp ult i8* %34, inttoptr (i64 56 to i8*)
  br i1 %56, label %110, label %58

57:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %135

58:                                               ; preds = %52, %58
  %59 = phi %class.sk_sp.31* [ %103, %58 ], [ %54, %52 ]
  %60 = phi %class.sk_sp.31* [ %104, %58 ], [ %55, %52 ]
  %61 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -1
  %62 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -1
  %63 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %62, i64 0, i32 0
  %64 = bitcast %class.sk_sp.31* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %63, align 8
  %66 = bitcast %class.sk_sp.31* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -2
  %68 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -2
  %69 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %68, i64 0, i32 0
  %70 = bitcast %class.sk_sp.31* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %69, align 8
  %72 = bitcast %class.sk_sp.31* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -3
  %74 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -3
  %75 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %74, i64 0, i32 0
  %76 = bitcast %class.sk_sp.31* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %75, align 8
  %78 = bitcast %class.sk_sp.31* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -4
  %80 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -4
  %81 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.31* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %81, align 8
  %84 = bitcast %class.sk_sp.31* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -5
  %86 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -5
  %87 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.31* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %87, align 8
  %90 = bitcast %class.sk_sp.31* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -6
  %92 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -6
  %93 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.31* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %93, align 8
  %96 = bitcast %class.sk_sp.31* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -7
  %98 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -7
  %99 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.31* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %99, align 8
  %102 = bitcast %class.sk_sp.31* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %59, i64 -8
  %104 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -8
  %105 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.31* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %105, align 8
  %108 = bitcast %class.sk_sp.31* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = icmp eq %class.sk_sp.31* %104, %11
  br i1 %109, label %110, label %58

110:                                              ; preds = %58, %52
  %111 = phi %class.sk_sp.31* [ %53, %52 ], [ %103, %58 ]
  %112 = ptrtoint %class.sk_sp.31* %111 to i64
  %113 = load i64, i64* %6, align 8
  %114 = load %class.sk_sp.31*, %class.sk_sp.31** %13, align 8
  %115 = inttoptr i64 %113 to %class.sk_sp.31*
  store i64 %112, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %116 = icmp eq %class.sk_sp.31* %114, %115
  br i1 %116, label %135, label %117

117:                                              ; preds = %110, %133
  %118 = phi %class.sk_sp.31* [ %119, %133 ], [ %114, %110 ]
  %119 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %118, i64 -1
  %120 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %119, i64 0, i32 0
  %121 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %120, align 8
  %122 = icmp eq %"class.sksg::GeometryNode"* %121, null
  br i1 %122, label %133, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %121, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 -1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = bitcast %"class.sksg::GeometryNode"* %121 to %class.SkRefCntBase*
  %129 = bitcast %"class.sksg::GeometryNode"* %121 to void (%class.SkRefCntBase*)***
  %130 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %129, align 8
  %131 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, i64 2
  %132 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, align 8
  tail call void %132(%class.SkRefCntBase* nonnull %128) #11
  br label %133

133:                                              ; preds = %127, %123, %117
  %134 = icmp eq %class.sk_sp.31* %119, %115
  br i1 %134, label %135, label %117

135:                                              ; preds = %133, %57, %110
  %136 = phi i64 [ %7, %57 ], [ %113, %110 ], [ %113, %133 ]
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %135
  %139 = inttoptr i64 %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %138, %135, %2
  ret void
}

declare zeroext i1 @_ZN7skottie5ParseImEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8), i64*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN4sksg12GeometryNodeEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.29"*, %class.sk_sp.31* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.31** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.29"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.31** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %class.sk_sp.31*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.31* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.31* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.31* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %40, align 8
  %43 = bitcast %class.sk_sp.31* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %37, i64 1
  %45 = ptrtoint %class.sk_sp.31* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.31*, %class.sk_sp.31** %46, align 8
  %48 = ptrtoint %class.sk_sp.31* %47 to i64
  %49 = load %class.sk_sp.31*, %class.sk_sp.31** %3, align 8
  %50 = icmp eq %class.sk_sp.31* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.31, %class.sk_sp.31* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.sksg::GeometryNode"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.31* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.31* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.31* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %65, align 8
  %68 = bitcast %class.sk_sp.31* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !15

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.31* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.31* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.31* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.31* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.31* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.31* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %81, align 8
  %84 = bitcast %class.sk_sp.31* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.31* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %87, align 8
  %90 = bitcast %class.sk_sp.31* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.31* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %93, align 8
  %96 = bitcast %class.sk_sp.31* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.31* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %99, align 8
  %102 = bitcast %class.sk_sp.31* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.31* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %105, align 8
  %108 = bitcast %class.sk_sp.31* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.31* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %111, align 8
  %114 = bitcast %class.sk_sp.31* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.31* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %117, align 8
  %120 = bitcast %class.sk_sp.31* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.31* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %123, align 8
  %126 = bitcast %class.sk_sp.31* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.31* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.31* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.31*, %class.sk_sp.31** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.31* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.31* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.31* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.31*
  %138 = icmp eq %class.sk_sp.31* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.31* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.31, %class.sk_sp.31* %141, i64 0, i32 0
  %143 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %142, align 8
  %144 = icmp eq %"class.sksg::GeometryNode"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %143, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.sksg::GeometryNode"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.sksg::GeometryNode"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #11
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.31* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #12
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #2

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117TrimEffectAdapterEN4sksg10TrimEffectEED2Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117TrimEffectAdapterEN4sksg10TrimEffectEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::TrimEffect"*, %"class.sksg::TrimEffect"** %3, align 8
  %5 = icmp eq %"class.sksg::TrimEffect"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::TrimEffect", %"class.sksg::TrimEffect"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::TrimEffect"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::TrimEffect"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #11
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_117TrimEffectAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter", %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117TrimEffectAdapterEN4sksg10TrimEffectEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter", %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.sksg::TrimEffect"*, %"class.sksg::TrimEffect"** %3, align 8
  %5 = icmp eq %"class.sksg::TrimEffect"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::TrimEffect", %"class.sksg::TrimEffect"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::TrimEffect"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::TrimEffect"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter", %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter", %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #11
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %16, %47
  %50 = bitcast %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_117TrimEffectAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter", %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter"* %0, i64 0, i32 1
  %3 = bitcast float* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 8
  %5 = fdiv <2 x float> %4, <float 1.000000e+02, float 1.000000e+02>
  %6 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter", %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter"* %0, i64 0, i32 3
  %7 = load float, float* %6, align 8
  %8 = fdiv float %7, 3.600000e+02
  %9 = shufflevector <2 x float> %5, <2 x float> undef, <2 x i32> <i32 1, i32 undef>
  %10 = shufflevector <2 x float> %9, <2 x float> %5, <2 x i32> <i32 0, i32 2>
  %11 = fcmp olt <2 x float> %5, %10
  %12 = shufflevector <2 x float> %5, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %13 = shufflevector <2 x float> %5, <2 x float> undef, <2 x i32> zeroinitializer
  %14 = select <2 x i1> %11, <2 x float> %12, <2 x float> %13
  %15 = insertelement <2 x float> undef, float %8, i32 0
  %16 = shufflevector <2 x float> %15, <2 x float> undef, <2 x i32> zeroinitializer
  %17 = fadd <2 x float> %16, %14
  %18 = extractelement <2 x float> %17, i32 0
  %19 = extractelement <2 x float> %17, i32 1
  %20 = fsub float %18, %19
  %21 = fcmp olt float %20, 1.000000e+00
  br i1 %21, label %22, label %30

22:                                               ; preds = %1
  %23 = call <2 x float> @llvm.floor.v2f32(<2 x float> %17)
  %24 = fsub <2 x float> %17, %23
  %25 = extractelement <2 x float> %24, i32 0
  %26 = extractelement <2 x float> %24, i32 1
  %27 = fcmp ogt float %26, %25
  %28 = shufflevector <2 x float> %24, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  br i1 %27, label %29, label %30

29:                                               ; preds = %22
  br label %30

30:                                               ; preds = %1, %22, %29
  %31 = phi i32 [ 1, %29 ], [ 0, %22 ], [ 0, %1 ]
  %32 = phi <2 x float> [ %24, %29 ], [ %28, %22 ], [ <float 0.000000e+00, float 1.000000e+00>, %1 ]
  %33 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter", %"class.skottie::internal::(anonymous namespace)::TrimEffectAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %34 = load %"class.sksg::TrimEffect"*, %"class.sksg::TrimEffect"** %33, align 8
  %35 = getelementptr inbounds %"class.sksg::TrimEffect", %"class.sksg::TrimEffect"* %34, i64 0, i32 1
  %36 = load float, float* %35, align 8
  %37 = extractelement <2 x float> %32, i32 0
  %38 = fcmp oeq float %36, %37
  br i1 %38, label %42, label %39

39:                                               ; preds = %30
  store float %37, float* %35, align 8
  %40 = bitcast %"class.sksg::TrimEffect"* %34 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %40, i1 zeroext true) #11
  %41 = load %"class.sksg::TrimEffect"*, %"class.sksg::TrimEffect"** %33, align 8
  br label %42

42:                                               ; preds = %30, %39
  %43 = phi %"class.sksg::TrimEffect"* [ %34, %30 ], [ %41, %39 ]
  %44 = getelementptr inbounds %"class.sksg::TrimEffect", %"class.sksg::TrimEffect"* %43, i64 0, i32 2
  %45 = load float, float* %44, align 4
  %46 = extractelement <2 x float> %32, i32 1
  %47 = fcmp oeq float %45, %46
  br i1 %47, label %51, label %48

48:                                               ; preds = %42
  store float %46, float* %44, align 4
  %49 = bitcast %"class.sksg::TrimEffect"* %43 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %49, i1 zeroext true) #11
  %50 = load %"class.sksg::TrimEffect"*, %"class.sksg::TrimEffect"** %33, align 8
  br label %51

51:                                               ; preds = %42, %48
  %52 = phi %"class.sksg::TrimEffect"* [ %43, %42 ], [ %50, %48 ]
  %53 = getelementptr inbounds %"class.sksg::TrimEffect", %"class.sksg::TrimEffect"* %52, i64 0, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, %31
  br i1 %55, label %58, label %56

56:                                               ; preds = %51
  store i32 %31, i32* %53, align 8
  %57 = bitcast %"class.sksg::TrimEffect"* %52 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %57, i1 zeroext true) #11
  br label %58

58:                                               ; preds = %51, %56
  ret void
}

declare void @_ZN4sksg14GeometryEffectC2E5sk_spINS_12GeometryNodeEE(%"class.sksg::GeometryEffect"*, %class.sk_sp.31*) unnamed_addr #2

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117TrimEffectAdapterEN4sksg10TrimEffectEED0Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture readnone) unnamed_addr #8 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !16

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #11
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #12
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.floor.v2f32(<2 x float>) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117TrimEffectAdapterEN4sksg10TrimEffectEE4MakeIJRKN6skjson11ObjectValueERKNS0_16AnimationBuilderERK5sk_spINS4_12GeometryNodeEEEEESF_IS3_EDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_117TrimEffectAdapterEN4sksg10TrimEffectEE4MakeIJRKN6skjson11ObjectValueERKNS0_16AnimationBuilderERK5sk_spINS4_12GeometryNodeEEEEESF_IS3_EDpOT_"}
!5 = distinct !{!5, !6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_117TrimEffectAdapterEJRKN6skjson11ObjectValueERKS1_RK5sk_spIN4sksg12GeometryNodeEEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSK_: argument 0"}
!6 = distinct !{!6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_117TrimEffectAdapterEJRKN6skjson11ObjectValueERKS1_RK5sk_spIN4sksg12GeometryNodeEEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSK_"}
!7 = !{!3}
!8 = !{!9, !3}
!9 = distinct !{!9, !10, !"_ZN4sksg10TrimEffect4MakeE5sk_spINS_12GeometryNodeEE: argument 0"}
!10 = distinct !{!10, !"_ZN4sksg10TrimEffect4MakeE5sk_spINS_12GeometryNodeEE"}
!11 = !{!9, !3, !5}
!12 = !{!5}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !14}
