; ModuleID = '../../third_party/libaom/source/libaom/av1/common/idct.c'
source_filename = "../../third_party/libaom/source/libaom/av1/common/idct.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.txfm_param = type { i8, i8, i32, i32, i32, i8, i32 }
%struct.macroblockd = type { i32, i32, i32, i8, [3 x %struct.macroblockd_plane], %struct.TileInfo, %struct.MB_MODE_INFO**, i8, i8, i8, i8, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, i8*, i32, i32, i32, i32, i32, [2 x %struct.scale_factors*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [32 x i8]], i8*, [32 x i8], i8*, i8*, [32 x i8], [3 x %struct.WienerInfo], [3 x %struct.SgrprojInfo], i8, i8, [29 x [8 x %struct.candidate_mv]], [29 x [8 x i16]], i8, i8, [8 x i8], %struct.frame_contexts*, i32, [8 x i32], [8 x i32], i32, i32, %struct.aom_internal_error_info*, %struct.WarpedMotionParams*, i8, [4 x i8], [4 x i8], i8*, %struct.cfl_ctx, [2 x i16], i16*, [2 x i8*], [8 x i8] }
%struct.macroblockd_plane = type { i8, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i8*, i8, i8, [8 x [19 x i8*]], [8 x [19 x i8*]] }
%struct.buf_2d = type { i8*, i8*, i32, i32, i32 }
%struct.TileInfo = type { i32, i32, i32, i32, i32, i32 }
%struct.MB_MODE_INFO = type <{ i8, i8, i8, i8, i32, [2 x %union.int_mv], [2 x i8], [2 x i8], %union.int_interpfilters, i8, i8, i8, i8, %struct.WarpedMotionParams, i8, i8, [6 x i8], %struct.INTERINTER_COMPOUND_DATA, [2 x i8], %struct.FILTER_INTRA_MODE_INFO, i8, i8, %struct.PALETTE_MODE_INFO, i8, i8, [16 x i8], i8, [4 x i8], i16, [7 x i8] }>
%union.int_mv = type { i32 }
%union.int_interpfilters = type { i32 }
%struct.WarpedMotionParams = type { [8 x i32], i16, i16, i16, i16, i8, i8 }
%struct.INTERINTER_COMPOUND_DATA = type { i8*, i8, i8, i8, i8 }
%struct.FILTER_INTRA_MODE_INFO = type { i8, i8 }
%struct.PALETTE_MODE_INFO = type { [24 x i16], [2 x i8] }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)* }
%struct.yv12_buffer_config = type { %union.anon, %union.anon.0, %union.anon.2, %union.anon.4, %union.anon.6, %union.anon.8, i32, [3 x i8*], i8*, i32, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, %struct.aom_metadata_array* }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, i32 }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i32, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { i32, i32 }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { i32, i32 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { i32, i32 }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { i8*, i8*, i8* }
%struct.aom_metadata_array = type { i64, %struct.aom_metadata** }
%struct.aom_metadata = type { i32, i8*, i64, i32 }
%struct.WienerInfo = type { [8 x i16], [8 x i16] }
%struct.SgrprojInfo = type { i32, [2 x i32] }
%struct.candidate_mv = type { %union.int_mv, %union.int_mv }
%struct.frame_contexts = type { [5 x [13 x [3 x i16]]], [5 x [2 x [9 x [3 x i16]]]], [2 x [3 x [3 x i16]]], [2 x [2 x [6 x i16]]], [2 x [2 x [7 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [9 x i16]]], [2 x [2 x [10 x i16]]], [2 x [2 x [11 x i16]]], [2 x [2 x [12 x i16]]], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [42 x [5 x i16]]]], [5 x [2 x [21 x [5 x i16]]]], [6 x [3 x i16]], [2 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [8 x [9 x i16]], [22 x [3 x i16]], [22 x [17 x i16]], [4 x [3 x i16]], [22 x [3 x i16]], [4 x [5 x i16]], [22 x [4 x i16]], [22 x [3 x i16]], [7 x [8 x i16]], [7 x [8 x i16]], [7 x [5 x [9 x i16]]], [7 x [5 x [9 x i16]]], [7 x [3 x [3 x i16]]], [2 x [3 x i16]], [5 x [3 x i16]], [3 x [6 x [3 x i16]]], [5 x [3 x i16]], [3 x [3 x [3 x i16]]], [3 x [3 x [3 x i16]]], [3 x [2 x [3 x i16]]], [21 x [3 x i16]], [6 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [3 x [3 x i16]], [4 x [3 x i16]], %struct.nmv_context, %struct.nmv_context, [3 x i16], %struct.segmentation_probs, [22 x [3 x i16]], [6 x i16], [4 x i16], [3 x i16], [3 x i16], [4 x [14 x i16]], [2 x [13 x [15 x i16]]], [20 x [11 x i16]], [16 x [4 x i16]], [5 x [5 x [14 x i16]]], [8 x [8 x i16]], [4 x [3 x [4 x i16]]], [5 x i16], [4 x [5 x i16]], [5 x i16], [3 x [4 x [13 x [17 x i16]]]], [4 x [4 x [17 x i16]]], [9 x i16], [6 x [17 x i16]], i32 }
%struct.nmv_context = type { [5 x i16], [2 x %struct.nmv_component] }
%struct.nmv_component = type { [12 x i16], [2 x [5 x i16]], [5 x i16], [3 x i16], [3 x i16], [3 x i16], [3 x i16], [10 x [3 x i16]] }
%struct.segmentation_probs = type { [9 x i16], [3 x [3 x i16]], [3 x [9 x i16]] }
%struct.aom_internal_error_info = type opaque
%struct.cfl_ctx = type { [1024 x i16], [1024 x i16], [2 x i32], i32, [2 x [32 x i16]], i32, i32, i32, i32, i32, i32 }

@tx_size_wide = internal unnamed_addr constant [19 x i32] [i32 4, i32 8, i32 16, i32 32, i32 64, i32 4, i32 8, i32 8, i32 16, i32 16, i32 32, i32 32, i32 64, i32 4, i32 16, i32 8, i32 32, i32 16, i32 64], align 16
@tx_size_high = internal unnamed_addr constant [19 x i32] [i32 4, i32 8, i32 16, i32 32, i32 64, i32 8, i32 4, i32 16, i32 8, i32 32, i32 16, i32 64, i32 32, i32 16, i32 4, i32 32, i32 8, i32 64, i32 16], align 16
@av1_highbd_inv_txfm_add = external local_unnamed_addr global void (i32*, i8*, i32, %struct.txfm_param*)*, align 8
@av1_inv_txfm_add = external local_unnamed_addr global void (i32*, i8*, i32, %struct.txfm_param*)*, align 8
@av1_ext_tx_set_lookup = internal unnamed_addr constant [2 x [2 x i8]] [[2 x i8] c"\03\02", [2 x i8] c"\05\04"], align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @av1_get_tx_scale(i8 zeroext) local_unnamed_addr #0 {
  %2 = zext i8 %0 to i64
  %3 = lshr i64 400920, %2
  %4 = trunc i64 %3 to i32
  %5 = and i32 %4, 1
  %6 = lshr i64 6160, %2
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 1
  %9 = add nuw nsw i32 %5, %8
  ret i32 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_iwht4x4_add(i32*, i8*, i32, i32, i32) local_unnamed_addr #2 {
  %6 = icmp sgt i32 %3, 1
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @av1_highbd_iwht4x4_16_add_c(i32* %0, i8* %1, i32 %2, i32 %4) #4
  br label %9

8:                                                ; preds = %5
  tail call void @av1_highbd_iwht4x4_1_add_c(i32* %0, i8* %1, i32 %2, i32 %4) #4
  br label %9

9:                                                ; preds = %8, %7
  ret void
}

declare void @av1_highbd_iwht4x4_16_add_c(i32*, i8*, i32, i32) local_unnamed_addr #3

declare void @av1_highbd_iwht4x4_1_add_c(i32*, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_4x4_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 6
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 1
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @av1_highbd_iwht4x4_16_add_c(i32* %0, i8* %1, i32 %2, i32 %6) #4
  br label %22

15:                                               ; preds = %10
  tail call void @av1_highbd_iwht4x4_1_add_c(i32* %0, i8* %1, i32 %2, i32 %6) #4
  br label %22

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %18 = load i8, i8* %17, align 4
  %19 = ptrtoint i8* %1 to i64
  %20 = shl i64 %19, 1
  %21 = inttoptr i64 %20 to i16*
  tail call void @av1_inv_txfm2d_add_4x4_c(i32* %0, i16* %21, i32 %2, i8 zeroext %18, i32 %6) #4
  br label %22

22:                                               ; preds = %15, %14, %16
  ret void
}

declare void @av1_inv_txfm2d_add_4x4_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_4x8_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @av1_inv_txfm2d_add_4x8_c(i32* %0, i16* %7, i32 %2, i8 zeroext %9, i32 %11) #4
  ret void
}

declare void @av1_inv_txfm2d_add_4x8_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_8x4_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @av1_inv_txfm2d_add_8x4_c(i32* %0, i16* %7, i32 %2, i8 zeroext %9, i32 %11) #4
  ret void
}

declare void @av1_inv_txfm2d_add_8x4_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_16x32_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @av1_inv_txfm2d_add_16x32_c(i32* %0, i16* %7, i32 %2, i8 zeroext %9, i32 %11) #4
  ret void
}

declare void @av1_inv_txfm2d_add_16x32_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_32x16_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @av1_inv_txfm2d_add_32x16_c(i32* %0, i16* %7, i32 %2, i8 zeroext %9, i32 %11) #4
  ret void
}

declare void @av1_inv_txfm2d_add_32x16_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_16x4_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @av1_inv_txfm2d_add_16x4_c(i32* %0, i16* %7, i32 %2, i8 zeroext %9, i32 %11) #4
  ret void
}

declare void @av1_inv_txfm2d_add_16x4_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_4x16_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @av1_inv_txfm2d_add_4x16_c(i32* %0, i16* %7, i32 %2, i8 zeroext %9, i32 %11) #4
  ret void
}

declare void @av1_inv_txfm2d_add_4x16_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_32x8_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @av1_inv_txfm2d_add_32x8_c(i32* %0, i16* %7, i32 %2, i8 zeroext %9, i32 %11) #4
  ret void
}

declare void @av1_inv_txfm2d_add_32x8_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_8x32_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @av1_inv_txfm2d_add_8x32_c(i32* %0, i16* %7, i32 %2, i8 zeroext %9, i32 %11) #4
  ret void
}

declare void @av1_inv_txfm2d_add_8x32_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_32x64_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @av1_inv_txfm2d_add_32x64_c(i32* %0, i16* %7, i32 %2, i8 zeroext %9, i32 %11) #4
  ret void
}

declare void @av1_inv_txfm2d_add_32x64_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_64x32_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @av1_inv_txfm2d_add_64x32_c(i32* %0, i16* %7, i32 %2, i8 zeroext %9, i32 %11) #4
  ret void
}

declare void @av1_inv_txfm2d_add_64x32_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_16x64_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @av1_inv_txfm2d_add_16x64_c(i32* %0, i16* %7, i32 %2, i8 zeroext %9, i32 %11) #4
  ret void
}

declare void @av1_inv_txfm2d_add_16x64_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_64x16_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @av1_inv_txfm2d_add_64x16_c(i32* %0, i16* %7, i32 %2, i8 zeroext %9, i32 %11) #4
  ret void
}

declare void @av1_inv_txfm2d_add_64x16_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_8x8_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %8 = load i8, i8* %7, align 4
  %9 = ptrtoint i8* %1 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  tail call void @av1_inv_txfm2d_add_8x8_c(i32* %0, i16* %11, i32 %2, i8 zeroext %8, i32 %6) #4
  ret void
}

declare void @av1_inv_txfm2d_add_8x8_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_16x16_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %8 = load i8, i8* %7, align 4
  %9 = ptrtoint i8* %1 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  tail call void @av1_inv_txfm2d_add_16x16_c(i32* %0, i16* %11, i32 %2, i8 zeroext %8, i32 %6) #4
  ret void
}

declare void @av1_inv_txfm2d_add_16x16_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_8x16_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @av1_inv_txfm2d_add_8x16_c(i32* %0, i16* %7, i32 %2, i8 zeroext %9, i32 %11) #4
  ret void
}

declare void @av1_inv_txfm2d_add_8x16_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_16x8_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %9 = load i8, i8* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  tail call void @av1_inv_txfm2d_add_16x8_c(i32* %0, i16* %7, i32 %2, i8 zeroext %9, i32 %11) #4
  ret void
}

declare void @av1_inv_txfm2d_add_16x8_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_32x32_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %8 = load i8, i8* %7, align 4
  %9 = ptrtoint i8* %1 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  tail call void @av1_inv_txfm2d_add_32x32_c(i32* %0, i16* %11, i32 %2, i8 zeroext %8, i32 %6) #4
  ret void
}

declare void @av1_inv_txfm2d_add_32x32_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_64x64_c(i32*, i8*, i32, %struct.txfm_param* nocapture readonly) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %8 = load i8, i8* %7, align 4
  %9 = ptrtoint i8* %1 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  tail call void @av1_inv_txfm2d_add_64x64_c(i32* %0, i16* %11, i32 %2, i8 zeroext %8, i32 %6) #4
  ret void
}

declare void @av1_inv_txfm2d_add_64x64_c(i32*, i16*, i32, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_highbd_inv_txfm_add_c(i32*, i8*, i32, %struct.txfm_param* readonly) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 1
  %6 = load i8, i8* %5, align 1
  switch i8 %6, label %169 [
    i8 3, label %7
    i8 2, label %15
    i8 1, label %23
    i8 5, label %31
    i8 6, label %39
    i8 7, label %47
    i8 8, label %55
    i8 9, label %63
    i8 10, label %71
    i8 4, label %79
    i8 11, label %87
    i8 12, label %95
    i8 17, label %103
    i8 18, label %111
    i8 0, label %119
    i8 14, label %137
    i8 13, label %145
    i8 15, label %153
    i8 16, label %161
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %11 = load i8, i8* %10, align 4
  %12 = ptrtoint i8* %1 to i64
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  tail call void @av1_inv_txfm2d_add_32x32_c(i32* %0, i16* %14, i32 %2, i8 zeroext %11, i32 %9) #4
  br label %169

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %19 = load i8, i8* %18, align 4
  %20 = ptrtoint i8* %1 to i64
  %21 = shl i64 %20, 1
  %22 = inttoptr i64 %21 to i16*
  tail call void @av1_inv_txfm2d_add_16x16_c(i32* %0, i16* %22, i32 %2, i8 zeroext %19, i32 %17) #4
  br label %169

23:                                               ; preds = %4
  %24 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %27 = load i8, i8* %26, align 4
  %28 = ptrtoint i8* %1 to i64
  %29 = shl i64 %28, 1
  %30 = inttoptr i64 %29 to i16*
  tail call void @av1_inv_txfm2d_add_8x8_c(i32* %0, i16* %30, i32 %2, i8 zeroext %27, i32 %25) #4
  br label %169

31:                                               ; preds = %4
  %32 = ptrtoint i8* %1 to i64
  %33 = shl i64 %32, 1
  %34 = inttoptr i64 %33 to i16*
  %35 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %36 = load i8, i8* %35, align 4
  %37 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  tail call void @av1_inv_txfm2d_add_4x8_c(i32* %0, i16* %34, i32 %2, i8 zeroext %36, i32 %38) #4
  br label %169

39:                                               ; preds = %4
  %40 = ptrtoint i8* %1 to i64
  %41 = shl i64 %40, 1
  %42 = inttoptr i64 %41 to i16*
  %43 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %44 = load i8, i8* %43, align 4
  %45 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  tail call void @av1_inv_txfm2d_add_8x4_c(i32* %0, i16* %42, i32 %2, i8 zeroext %44, i32 %46) #4
  br label %169

47:                                               ; preds = %4
  %48 = ptrtoint i8* %1 to i64
  %49 = shl i64 %48, 1
  %50 = inttoptr i64 %49 to i16*
  %51 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %52 = load i8, i8* %51, align 4
  %53 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %54 = load i32, i32* %53, align 4
  tail call void @av1_inv_txfm2d_add_8x16_c(i32* %0, i16* %50, i32 %2, i8 zeroext %52, i32 %54) #4
  br label %169

55:                                               ; preds = %4
  %56 = ptrtoint i8* %1 to i64
  %57 = shl i64 %56, 1
  %58 = inttoptr i64 %57 to i16*
  %59 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %60 = load i8, i8* %59, align 4
  %61 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  tail call void @av1_inv_txfm2d_add_16x8_c(i32* %0, i16* %58, i32 %2, i8 zeroext %60, i32 %62) #4
  br label %169

63:                                               ; preds = %4
  %64 = ptrtoint i8* %1 to i64
  %65 = shl i64 %64, 1
  %66 = inttoptr i64 %65 to i16*
  %67 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %68 = load i8, i8* %67, align 4
  %69 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %70 = load i32, i32* %69, align 4
  tail call void @av1_inv_txfm2d_add_16x32_c(i32* %0, i16* %66, i32 %2, i8 zeroext %68, i32 %70) #4
  br label %169

71:                                               ; preds = %4
  %72 = ptrtoint i8* %1 to i64
  %73 = shl i64 %72, 1
  %74 = inttoptr i64 %73 to i16*
  %75 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %76 = load i8, i8* %75, align 4
  %77 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %78 = load i32, i32* %77, align 4
  tail call void @av1_inv_txfm2d_add_32x16_c(i32* %0, i16* %74, i32 %2, i8 zeroext %76, i32 %78) #4
  br label %169

79:                                               ; preds = %4
  %80 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %83 = load i8, i8* %82, align 4
  %84 = ptrtoint i8* %1 to i64
  %85 = shl i64 %84, 1
  %86 = inttoptr i64 %85 to i16*
  tail call void @av1_inv_txfm2d_add_64x64_c(i32* %0, i16* %86, i32 %2, i8 zeroext %83, i32 %81) #4
  br label %169

87:                                               ; preds = %4
  %88 = ptrtoint i8* %1 to i64
  %89 = shl i64 %88, 1
  %90 = inttoptr i64 %89 to i16*
  %91 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %92 = load i8, i8* %91, align 4
  %93 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %94 = load i32, i32* %93, align 4
  tail call void @av1_inv_txfm2d_add_32x64_c(i32* %0, i16* %90, i32 %2, i8 zeroext %92, i32 %94) #4
  br label %169

95:                                               ; preds = %4
  %96 = ptrtoint i8* %1 to i64
  %97 = shl i64 %96, 1
  %98 = inttoptr i64 %97 to i16*
  %99 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %100 = load i8, i8* %99, align 4
  %101 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %102 = load i32, i32* %101, align 4
  tail call void @av1_inv_txfm2d_add_64x32_c(i32* %0, i16* %98, i32 %2, i8 zeroext %100, i32 %102) #4
  br label %169

103:                                              ; preds = %4
  %104 = ptrtoint i8* %1 to i64
  %105 = shl i64 %104, 1
  %106 = inttoptr i64 %105 to i16*
  %107 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %108 = load i8, i8* %107, align 4
  %109 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %110 = load i32, i32* %109, align 4
  tail call void @av1_inv_txfm2d_add_16x64_c(i32* %0, i16* %106, i32 %2, i8 zeroext %108, i32 %110) #4
  br label %169

111:                                              ; preds = %4
  %112 = ptrtoint i8* %1 to i64
  %113 = shl i64 %112, 1
  %114 = inttoptr i64 %113 to i16*
  %115 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %116 = load i8, i8* %115, align 4
  %117 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %118 = load i32, i32* %117, align 4
  tail call void @av1_inv_txfm2d_add_64x16_c(i32* %0, i16* %114, i32 %2, i8 zeroext %116, i32 %118) #4
  br label %169

119:                                              ; preds = %4
  %120 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %131, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 6
  %127 = load i32, i32* %126, align 4
  %128 = icmp sgt i32 %127, 1
  br i1 %128, label %129, label %130

129:                                              ; preds = %125
  tail call void @av1_highbd_iwht4x4_16_add_c(i32* %0, i8* %1, i32 %2, i32 %121) #4
  br label %169

130:                                              ; preds = %125
  tail call void @av1_highbd_iwht4x4_1_add_c(i32* %0, i8* %1, i32 %2, i32 %121) #4
  br label %169

131:                                              ; preds = %119
  %132 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %133 = load i8, i8* %132, align 4
  %134 = ptrtoint i8* %1 to i64
  %135 = shl i64 %134, 1
  %136 = inttoptr i64 %135 to i16*
  tail call void @av1_inv_txfm2d_add_4x4_c(i32* %0, i16* %136, i32 %2, i8 zeroext %133, i32 %121) #4
  br label %169

137:                                              ; preds = %4
  %138 = ptrtoint i8* %1 to i64
  %139 = shl i64 %138, 1
  %140 = inttoptr i64 %139 to i16*
  %141 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %142 = load i8, i8* %141, align 4
  %143 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %144 = load i32, i32* %143, align 4
  tail call void @av1_inv_txfm2d_add_16x4_c(i32* %0, i16* %140, i32 %2, i8 zeroext %142, i32 %144) #4
  br label %169

145:                                              ; preds = %4
  %146 = ptrtoint i8* %1 to i64
  %147 = shl i64 %146, 1
  %148 = inttoptr i64 %147 to i16*
  %149 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %150 = load i8, i8* %149, align 4
  %151 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %152 = load i32, i32* %151, align 4
  tail call void @av1_inv_txfm2d_add_4x16_c(i32* %0, i16* %148, i32 %2, i8 zeroext %150, i32 %152) #4
  br label %169

153:                                              ; preds = %4
  %154 = ptrtoint i8* %1 to i64
  %155 = shl i64 %154, 1
  %156 = inttoptr i64 %155 to i16*
  %157 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %158 = load i8, i8* %157, align 4
  %159 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %160 = load i32, i32* %159, align 4
  tail call void @av1_inv_txfm2d_add_8x32_c(i32* %0, i16* %156, i32 %2, i8 zeroext %158, i32 %160) #4
  br label %169

161:                                              ; preds = %4
  %162 = ptrtoint i8* %1 to i64
  %163 = shl i64 %162, 1
  %164 = inttoptr i64 %163 to i16*
  %165 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 0
  %166 = load i8, i8* %165, align 4
  %167 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 3
  %168 = load i32, i32* %167, align 4
  tail call void @av1_inv_txfm2d_add_32x8_c(i32* %0, i16* %164, i32 %2, i8 zeroext %166, i32 %168) #4
  br label %169

169:                                              ; preds = %131, %130, %129, %4, %161, %153, %145, %137, %111, %103, %95, %87, %79, %71, %63, %55, %47, %39, %31, %23, %15, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_inv_txfm_add_c(i32*, i8* nocapture, i32, %struct.txfm_param*) local_unnamed_addr #2 {
  %5 = alloca [4096 x i16], align 32
  %6 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %3, i64 0, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = bitcast [4096 x i16]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 32 %8, i8 -86, i64 8192, i1 false)
  %9 = zext i8 %7 to i64
  %10 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high, i64 0, i64 %9
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %11 to i64
  %15 = sext i32 %2 to i64
  %16 = sext i32 %13 to i64
  %17 = icmp sgt i64 %14, 1
  %18 = select i1 %17, i64 %14, i64 1
  %19 = and i64 %18, 9223372036854775792
  %20 = add nsw i64 %19, -16
  %21 = lshr exact i64 %20, 4
  %22 = add nuw nsw i64 %21, 1
  %23 = icmp ult i64 %18, 16
  %24 = and i64 %18, 9223372036854775792
  %25 = and i64 %22, 1
  %26 = icmp eq i64 %20, 0
  %27 = sub nuw nsw i64 %22, %25
  %28 = icmp eq i64 %25, 0
  %29 = icmp eq i64 %18, %24
  br label %30

30:                                               ; preds = %117, %4
  %31 = phi i64 [ 0, %4 ], [ %118, %117 ]
  %32 = mul nsw i64 %31, %15
  %33 = shl i64 %31, 6
  %34 = and i64 %33, 4294967232
  br i1 %23, label %35, label %37

35:                                               ; preds = %90, %30
  %36 = phi i64 [ 0, %30 ], [ %24, %90 ]
  br label %120

37:                                               ; preds = %30
  br i1 %26, label %73, label %38

38:                                               ; preds = %37, %38
  %39 = phi i64 [ %70, %38 ], [ 0, %37 ]
  %40 = phi i64 [ %71, %38 ], [ %27, %37 ]
  %41 = add nsw i64 %39, %32
  %42 = getelementptr inbounds i8, i8* %1, i64 %41
  %43 = bitcast i8* %42 to <8 x i8>*
  %44 = load <8 x i8>, <8 x i8>* %43, align 1
  %45 = getelementptr inbounds i8, i8* %42, i64 8
  %46 = bitcast i8* %45 to <8 x i8>*
  %47 = load <8 x i8>, <8 x i8>* %46, align 1
  %48 = zext <8 x i8> %44 to <8 x i16>
  %49 = zext <8 x i8> %47 to <8 x i16>
  %50 = add nuw nsw i64 %39, %34
  %51 = getelementptr inbounds [4096 x i16], [4096 x i16]* %5, i64 0, i64 %50
  %52 = bitcast i16* %51 to <8 x i16>*
  store <8 x i16> %48, <8 x i16>* %52, align 32
  %53 = getelementptr inbounds i16, i16* %51, i64 8
  %54 = bitcast i16* %53 to <8 x i16>*
  store <8 x i16> %49, <8 x i16>* %54, align 16
  %55 = or i64 %39, 16
  %56 = add nsw i64 %55, %32
  %57 = getelementptr inbounds i8, i8* %1, i64 %56
  %58 = bitcast i8* %57 to <8 x i8>*
  %59 = load <8 x i8>, <8 x i8>* %58, align 1
  %60 = getelementptr inbounds i8, i8* %57, i64 8
  %61 = bitcast i8* %60 to <8 x i8>*
  %62 = load <8 x i8>, <8 x i8>* %61, align 1
  %63 = zext <8 x i8> %59 to <8 x i16>
  %64 = zext <8 x i8> %62 to <8 x i16>
  %65 = add nuw nsw i64 %55, %34
  %66 = getelementptr inbounds [4096 x i16], [4096 x i16]* %5, i64 0, i64 %65
  %67 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %63, <8 x i16>* %67, align 32
  %68 = getelementptr inbounds i16, i16* %66, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %64, <8 x i16>* %69, align 16
  %70 = add i64 %39, 32
  %71 = add i64 %40, -2
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %38, !llvm.loop !2

73:                                               ; preds = %38, %37
  %74 = phi i64 [ 0, %37 ], [ %70, %38 ]
  br i1 %28, label %90, label %75

75:                                               ; preds = %73
  %76 = add nsw i64 %74, %32
  %77 = getelementptr inbounds i8, i8* %1, i64 %76
  %78 = bitcast i8* %77 to <8 x i8>*
  %79 = load <8 x i8>, <8 x i8>* %78, align 1
  %80 = getelementptr inbounds i8, i8* %77, i64 8
  %81 = bitcast i8* %80 to <8 x i8>*
  %82 = load <8 x i8>, <8 x i8>* %81, align 1
  %83 = zext <8 x i8> %79 to <8 x i16>
  %84 = zext <8 x i8> %82 to <8 x i16>
  %85 = add nuw nsw i64 %74, %34
  %86 = getelementptr inbounds [4096 x i16], [4096 x i16]* %5, i64 0, i64 %85
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 32
  %88 = getelementptr inbounds i16, i16* %86, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %89, align 16
  br label %90

90:                                               ; preds = %73, %75
  br i1 %29, label %117, label %35

91:                                               ; preds = %117
  %92 = load void (i32*, i8*, i32, %struct.txfm_param*)*, void (i32*, i8*, i32, %struct.txfm_param*)** @av1_highbd_inv_txfm_add, align 8
  %93 = ptrtoint [4096 x i16]* %5 to i64
  %94 = lshr exact i64 %93, 1
  %95 = inttoptr i64 %94 to i8*
  call void %92(i32* %0, i8* nonnull %95, i32 64, %struct.txfm_param* %3) #4
  %96 = sext i32 %11 to i64
  %97 = sext i32 %2 to i64
  %98 = sext i32 %13 to i64
  %99 = icmp sgt i64 %14, 1
  %100 = select i1 %99, i64 %14, i64 1
  %101 = icmp sgt i64 %14, 1
  %102 = select i1 %101, i64 %14, i64 1
  %103 = add nsw i64 %102, -1
  %104 = and i64 %100, 9223372036854775792
  %105 = add nsw i64 %104, -16
  %106 = lshr exact i64 %105, 4
  %107 = add nuw nsw i64 %106, 1
  %108 = icmp ult i64 %100, 16
  %109 = trunc i64 %103 to i32
  %110 = icmp ugt i64 %103, 4294967295
  %111 = and i64 %100, 9223372036854775792
  %112 = and i64 %107, 1
  %113 = icmp eq i64 %105, 0
  %114 = sub nuw nsw i64 %107, %112
  %115 = icmp eq i64 %112, 0
  %116 = icmp eq i64 %100, %111
  br label %130

117:                                              ; preds = %120, %90
  %118 = add nuw nsw i64 %31, 1
  %119 = icmp slt i64 %118, %16
  br i1 %119, label %30, label %91

120:                                              ; preds = %35, %120
  %121 = phi i64 [ %128, %120 ], [ %36, %35 ]
  %122 = add nsw i64 %121, %32
  %123 = getelementptr inbounds i8, i8* %1, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i16
  %126 = add nuw nsw i64 %121, %34
  %127 = getelementptr inbounds [4096 x i16], [4096 x i16]* %5, i64 0, i64 %126
  store i16 %125, i16* %127, align 2
  %128 = add nuw nsw i64 %121, 1
  %129 = icmp slt i64 %128, %14
  br i1 %129, label %120, label %117, !llvm.loop !4

130:                                              ; preds = %200, %91
  %131 = phi i64 [ 0, %91 ], [ %201, %200 ]
  %132 = shl i64 %131, 6
  %133 = mul nsw i64 %131, %97
  br i1 %108, label %134, label %136

134:                                              ; preds = %198, %136, %130
  %135 = phi i64 [ 0, %136 ], [ 0, %130 ], [ %111, %198 ]
  br label %203

136:                                              ; preds = %130
  %137 = trunc i64 %131 to i32
  %138 = shl i32 %137, 6
  %139 = xor i32 %138, -1
  %140 = icmp ult i32 %139, %109
  %141 = or i1 %140, %110
  br i1 %141, label %134, label %142

142:                                              ; preds = %136
  br i1 %113, label %180, label %143

143:                                              ; preds = %142, %143
  %144 = phi i64 [ %177, %143 ], [ 0, %142 ]
  %145 = phi i64 [ %178, %143 ], [ %114, %142 ]
  %146 = add i64 %132, %144
  %147 = and i64 %146, 4294967264
  %148 = getelementptr inbounds [4096 x i16], [4096 x i16]* %5, i64 0, i64 %147
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 32
  %151 = getelementptr inbounds i16, i16* %148, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 16
  %154 = trunc <8 x i16> %150 to <8 x i8>
  %155 = trunc <8 x i16> %153 to <8 x i8>
  %156 = add nsw i64 %144, %133
  %157 = getelementptr inbounds i8, i8* %1, i64 %156
  %158 = bitcast i8* %157 to <8 x i8>*
  store <8 x i8> %154, <8 x i8>* %158, align 1
  %159 = getelementptr inbounds i8, i8* %157, i64 8
  %160 = bitcast i8* %159 to <8 x i8>*
  store <8 x i8> %155, <8 x i8>* %160, align 1
  %161 = or i64 %144, 16
  %162 = add i64 %132, %161
  %163 = and i64 %162, 4294967280
  %164 = getelementptr inbounds [4096 x i16], [4096 x i16]* %5, i64 0, i64 %163
  %165 = bitcast i16* %164 to <8 x i16>*
  %166 = load <8 x i16>, <8 x i16>* %165, align 32
  %167 = getelementptr inbounds i16, i16* %164, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  %169 = load <8 x i16>, <8 x i16>* %168, align 16
  %170 = trunc <8 x i16> %166 to <8 x i8>
  %171 = trunc <8 x i16> %169 to <8 x i8>
  %172 = add nsw i64 %161, %133
  %173 = getelementptr inbounds i8, i8* %1, i64 %172
  %174 = bitcast i8* %173 to <8 x i8>*
  store <8 x i8> %170, <8 x i8>* %174, align 1
  %175 = getelementptr inbounds i8, i8* %173, i64 8
  %176 = bitcast i8* %175 to <8 x i8>*
  store <8 x i8> %171, <8 x i8>* %176, align 1
  %177 = add i64 %144, 32
  %178 = add i64 %145, -2
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %143, !llvm.loop !6

180:                                              ; preds = %143, %142
  %181 = phi i64 [ 0, %142 ], [ %177, %143 ]
  br i1 %115, label %198, label %182

182:                                              ; preds = %180
  %183 = add i64 %132, %181
  %184 = and i64 %183, 4294967280
  %185 = getelementptr inbounds [4096 x i16], [4096 x i16]* %5, i64 0, i64 %184
  %186 = bitcast i16* %185 to <8 x i16>*
  %187 = load <8 x i16>, <8 x i16>* %186, align 32
  %188 = getelementptr inbounds i16, i16* %185, i64 8
  %189 = bitcast i16* %188 to <8 x i16>*
  %190 = load <8 x i16>, <8 x i16>* %189, align 16
  %191 = trunc <8 x i16> %187 to <8 x i8>
  %192 = trunc <8 x i16> %190 to <8 x i8>
  %193 = add nsw i64 %181, %133
  %194 = getelementptr inbounds i8, i8* %1, i64 %193
  %195 = bitcast i8* %194 to <8 x i8>*
  store <8 x i8> %191, <8 x i8>* %195, align 1
  %196 = getelementptr inbounds i8, i8* %194, i64 8
  %197 = bitcast i8* %196 to <8 x i8>*
  store <8 x i8> %192, <8 x i8>* %197, align 1
  br label %198

198:                                              ; preds = %180, %182
  br i1 %116, label %200, label %134

199:                                              ; preds = %200
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %8) #4
  ret void

200:                                              ; preds = %203, %198
  %201 = add nuw nsw i64 %131, 1
  %202 = icmp slt i64 %201, %98
  br i1 %202, label %130, label %199

203:                                              ; preds = %134, %203
  %204 = phi i64 [ %212, %203 ], [ %135, %134 ]
  %205 = add i64 %132, %204
  %206 = and i64 %205, 4294967295
  %207 = getelementptr inbounds [4096 x i16], [4096 x i16]* %5, i64 0, i64 %206
  %208 = load i16, i16* %207, align 2
  %209 = trunc i16 %208 to i8
  %210 = add nsw i64 %204, %133
  %211 = getelementptr inbounds i8, i8* %1, i64 %210
  store i8 %209, i8* %211, align 1
  %212 = add nuw nsw i64 %204, 1
  %213 = icmp slt i64 %212, %96
  br i1 %213, label %203, label %200, !llvm.loop !7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_inverse_transform_block(%struct.macroblockd* nocapture readonly, i32*, i32, i8 zeroext, i8 zeroext, i8*, i32, i32, i32) local_unnamed_addr #2 {
  %10 = alloca %struct.txfm_param, align 4
  %11 = icmp eq i32 %7, 0
  br i1 %11, label %67, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 20, i1 false)
  store i8 %3, i8* %13, align 4
  %14 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %10, i64 0, i32 1
  store i8 %4, i8* %14, align 1
  %15 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %10, i64 0, i32 6
  store i32 %7, i32* %15, align 4
  %16 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 6
  %17 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %16, align 8
  %18 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %17, align 8
  %19 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 28
  %20 = load i16, i16* %19, align 1
  %21 = and i16 %20, 7
  %22 = zext i16 %21 to i64
  %23 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 42, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %10, i64 0, i32 2
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 40
  %27 = load i32, i32* %26, align 16
  %28 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %10, i64 0, i32 3
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %10, i64 0, i32 4
  store i32 0, i32* %29, align 4
  %30 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %17, align 8
  %31 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %30, i64 0, i32 28
  %32 = load i16, i16* %31, align 1
  %33 = trunc i16 %32 to i8
  %34 = icmp sgt i8 %33, -1
  br i1 %34, label %35, label %40

35:                                               ; preds = %12
  %36 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %30, i64 0, i32 6, i64 0
  %37 = load i8, i8* %36, align 8
  %38 = icmp sgt i8 %37, 0
  %39 = zext i1 %38 to i32
  br label %40

40:                                               ; preds = %35, %12
  %41 = phi i32 [ 1, %12 ], [ %39, %35 ]
  %42 = zext i8 %4 to i64
  %43 = lshr i64 399376, %42
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %63

46:                                               ; preds = %40
  %47 = lshr i64 99848, %42
  %48 = and i64 %47, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = trunc i32 %41 to i8
  br label %63

52:                                               ; preds = %46
  %53 = icmp eq i32 %8, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %52
  %55 = icmp eq i32 %41, 0
  %56 = select i1 %55, i8 2, i8 1
  br label %63

57:                                               ; preds = %52
  %58 = zext i32 %41 to i64
  %59 = lshr i64 394756, %42
  %60 = and i64 %59, 1
  %61 = getelementptr inbounds [2 x [2 x i8]], [2 x [2 x i8]]* @av1_ext_tx_set_lookup, i64 0, i64 %58, i64 %60
  %62 = load i8, i8* %61, align 1
  br label %63

63:                                               ; preds = %40, %50, %54, %57
  %64 = phi i8 [ %51, %50 ], [ %56, %54 ], [ %62, %57 ], [ 0, %40 ]
  %65 = getelementptr inbounds %struct.txfm_param, %struct.txfm_param* %10, i64 0, i32 5
  store i8 %64, i8* %65, align 4
  %66 = load void (i32*, i8*, i32, %struct.txfm_param*)*, void (i32*, i8*, i32, %struct.txfm_param*)** @av1_inv_txfm_add, align 8
  call void %66(i32* %1, i8* %5, i32 %6, %struct.txfm_param* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #4
  br label %67

67:                                               ; preds = %9, %63
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
