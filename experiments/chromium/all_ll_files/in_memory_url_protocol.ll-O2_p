; ModuleID = '../../media/filters/in_memory_url_protocol.cc'
source_filename = "../../media/filters/in_memory_url_protocol.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::InMemoryUrlProtocol" = type <{ %"class.media::FFmpegURLProtocol", i8*, i64, i64, i8, [7 x i8] }>
%"class.media::FFmpegURLProtocol" = type { i32 (...)** }

@_ZTVN5media19InMemoryUrlProtocolE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.media::InMemoryUrlProtocol"*, i32, i8*)* @_ZN5media19InMemoryUrlProtocol4ReadEiPh to i8*), i8* bitcast (i1 (%"class.media::InMemoryUrlProtocol"*, i64*)* @_ZN5media19InMemoryUrlProtocol11GetPositionEPl to i8*), i8* bitcast (i1 (%"class.media::InMemoryUrlProtocol"*, i64)* @_ZN5media19InMemoryUrlProtocol11SetPositionEl to i8*), i8* bitcast (i1 (%"class.media::InMemoryUrlProtocol"*, i64*)* @_ZN5media19InMemoryUrlProtocol7GetSizeEPl to i8*), i8* bitcast (i1 (%"class.media::InMemoryUrlProtocol"*)* @_ZN5media19InMemoryUrlProtocol11IsStreamingEv to i8*), i8* bitcast (void (%"class.media::InMemoryUrlProtocol"*)* @_ZN5media19InMemoryUrlProtocolD2Ev to i8*), i8* bitcast (void (%"class.media::InMemoryUrlProtocol"*)* @_ZN5media19InMemoryUrlProtocolD0Ev to i8*)] }, align 8

@_ZN5media19InMemoryUrlProtocolC1EPKhlb = hidden unnamed_addr alias void (%"class.media::InMemoryUrlProtocol"*, i8*, i64, i1), void (%"class.media::InMemoryUrlProtocol"*, i8*, i64, i1)* @_ZN5media19InMemoryUrlProtocolC2EPKhlb
@_ZN5media19InMemoryUrlProtocolD1Ev = hidden unnamed_addr alias void (%"class.media::InMemoryUrlProtocol"*), void (%"class.media::InMemoryUrlProtocol"*)* @_ZN5media19InMemoryUrlProtocolD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media19InMemoryUrlProtocolC2EPKhlb(%"class.media::InMemoryUrlProtocol"* nocapture, i8*, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.media::InMemoryUrlProtocol", %"class.media::InMemoryUrlProtocol"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5media19InMemoryUrlProtocolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.media::InMemoryUrlProtocol", %"class.media::InMemoryUrlProtocol"* %0, i64 0, i32 1
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %"class.media::InMemoryUrlProtocol", %"class.media::InMemoryUrlProtocol"* %0, i64 0, i32 2
  %9 = icmp sgt i64 %2, 0
  %10 = select i1 %9, i64 %2, i64 0
  store i64 %10, i64* %8, align 8
  %11 = getelementptr inbounds %"class.media::InMemoryUrlProtocol", %"class.media::InMemoryUrlProtocol"* %0, i64 0, i32 3
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.media::InMemoryUrlProtocol", %"class.media::InMemoryUrlProtocol"* %0, i64 0, i32 4
  store i8 %5, i8* %12, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media19InMemoryUrlProtocolD2Ev(%"class.media::InMemoryUrlProtocol"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19InMemoryUrlProtocolD0Ev(%"class.media::InMemoryUrlProtocol"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.media::InMemoryUrlProtocol"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media19InMemoryUrlProtocol4ReadEiPh(%"class.media::InMemoryUrlProtocol"* nocapture, i32, i8* nocapture) unnamed_addr #2 align 2 {
  %4 = icmp slt i32 %1, 0
  br i1 %4, label %27, label %5

5:                                                ; preds = %3
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.media::InMemoryUrlProtocol", %"class.media::InMemoryUrlProtocol"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.media::InMemoryUrlProtocol", %"class.media::InMemoryUrlProtocol"* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub nsw i64 %9, %11
  %13 = icmp slt i64 %12, 1
  br i1 %13, label %27, label %14

14:                                               ; preds = %7
  %15 = sext i32 %1 to i64
  %16 = icmp slt i64 %12, %15
  %17 = trunc i64 %12 to i32
  %18 = select i1 %16, i32 %17, i32 %1
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.media::InMemoryUrlProtocol", %"class.media::InMemoryUrlProtocol"* %0, i64 0, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %11
  %24 = sext i32 %18 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %23, i64 %24, i1 false)
  %25 = load i64, i64* %10, align 8
  %26 = add nsw i64 %25, %24
  store i64 %26, i64* %10, align 8
  br label %27

27:                                               ; preds = %7, %20, %14, %5, %3
  %28 = phi i32 [ -5, %3 ], [ 0, %5 ], [ -541478725, %7 ], [ %18, %20 ], [ %18, %14 ]
  ret i32 %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media19InMemoryUrlProtocol11GetPositionEPl(%"class.media::InMemoryUrlProtocol"* nocapture readonly, i64*) unnamed_addr #5 align 2 {
  %3 = icmp eq i64* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.media::InMemoryUrlProtocol", %"class.media::InMemoryUrlProtocol"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %1, align 8
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i1 [ true, %4 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media19InMemoryUrlProtocol11SetPositionEl(%"class.media::InMemoryUrlProtocol"* nocapture, i64) unnamed_addr #5 align 2 {
  %3 = icmp slt i64 %1, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.media::InMemoryUrlProtocol", %"class.media::InMemoryUrlProtocol"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp slt i64 %6, %1
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.media::InMemoryUrlProtocol", %"class.media::InMemoryUrlProtocol"* %0, i64 0, i32 3
  store i64 %1, i64* %9, align 8
  br label %10

10:                                               ; preds = %2, %4, %8
  %11 = phi i1 [ true, %8 ], [ false, %4 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media19InMemoryUrlProtocol7GetSizeEPl(%"class.media::InMemoryUrlProtocol"* nocapture readonly, i64*) unnamed_addr #5 align 2 {
  %3 = icmp eq i64* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.media::InMemoryUrlProtocol", %"class.media::InMemoryUrlProtocol"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %1, align 8
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i1 [ true, %4 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5media19InMemoryUrlProtocol11IsStreamingEv(%"class.media::InMemoryUrlProtocol"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.media::InMemoryUrlProtocol", %"class.media::InMemoryUrlProtocol"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
