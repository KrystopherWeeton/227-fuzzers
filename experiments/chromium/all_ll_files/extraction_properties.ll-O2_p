; ModuleID = '../../chrome/browser/extensions/api/image_writer_private/extraction_properties.cc'
source_filename = "../../chrome/browser/extensions/api/image_writer_private/extraction_properties.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.extensions::image_writer::ExtractionProperties" = type { %"class.base::FilePath", %"class.base::FilePath", %"class.base::OnceCallback", %"class.base::OnceCallback.2", %"class.base::OnceCallback.3", %"class.base::RepeatingCallback" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback.2" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.3" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }

@_ZN10extensions12image_writer20ExtractionPropertiesC1Ev = hidden unnamed_addr alias void (%"struct.extensions::image_writer::ExtractionProperties"*), void (%"struct.extensions::image_writer::ExtractionProperties"*)* @_ZN10extensions12image_writer20ExtractionPropertiesC2Ev
@_ZN10extensions12image_writer20ExtractionPropertiesC1EOS1_ = hidden unnamed_addr alias void (%"struct.extensions::image_writer::ExtractionProperties"*, %"struct.extensions::image_writer::ExtractionProperties"*), void (%"struct.extensions::image_writer::ExtractionProperties"*, %"struct.extensions::image_writer::ExtractionProperties"*)* @_ZN10extensions12image_writer20ExtractionPropertiesC2EOS1_
@_ZN10extensions12image_writer20ExtractionPropertiesD1Ev = hidden unnamed_addr alias void (%"struct.extensions::image_writer::ExtractionProperties"*), void (%"struct.extensions::image_writer::ExtractionProperties"*)* @_ZN10extensions12image_writer20ExtractionPropertiesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12image_writer20ExtractionPropertiesC2Ev(%"struct.extensions::image_writer::ExtractionProperties"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 0
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %2) #4
  %3 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 1
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %3) #4
  %4 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = bitcast %"class.base::internal::BindStateBase"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false)
  ret void
}

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12image_writer20ExtractionPropertiesC2EOS1_(%"struct.extensions::image_writer::ExtractionProperties"*, %"struct.extensions::image_writer::ExtractionProperties"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %1, i64 0, i32 0
  tail call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %3, %"class.base::FilePath"* dereferenceable(24) %4) #4
  %5 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %1, i64 0, i32 1
  tail call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %5, %"class.base::FilePath"* dereferenceable(24) %6) #4
  %7 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %1, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %1, i64 0, i32 3
  %15 = getelementptr inbounds %"class.base::OnceCallback.2", %"class.base::OnceCallback.2"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback.2"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback.2"* %13 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 4
  %20 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %1, i64 0, i32 4
  %21 = getelementptr inbounds %"class.base::OnceCallback.3", %"class.base::OnceCallback.3"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::OnceCallback.3"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::OnceCallback.3"* %19 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %25 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 5
  %26 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %1, i64 0, i32 5
  %27 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::RepeatingCallback"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::RepeatingCallback"* %25 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12image_writer20ExtractionPropertiesD2Ev(%"struct.extensions::image_writer::ExtractionProperties"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #4
  %3 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #4
  %4 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #4
  %5 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #4
  %6 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 1
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %6) #4
  %7 = getelementptr inbounds %"struct.extensions::image_writer::ExtractionProperties", %"struct.extensions::image_writer::ExtractionProperties"* %0, i64 0, i32 0
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %7) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
