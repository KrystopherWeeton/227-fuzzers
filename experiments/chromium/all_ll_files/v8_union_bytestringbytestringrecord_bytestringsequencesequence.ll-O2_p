; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_union_bytestringbytestringrecord_bytestringsequencesequence.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_union_bytestringbytestringrecord_bytestringsequencesequence.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.192", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.199", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.137", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i64 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::Worklist.96"* }
%"class.blink::Worklist.96" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::Worklist.103"* }
%"class.blink::Worklist.103" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.117", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.131", [4 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119", %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { i64 }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { float }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.140", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.149" }
%"class.WTF::Vector.149" = type { %"class.WTF::VectorBuffer.150" }
%"class.WTF::VectorBuffer.150" = type { %"class.WTF::VectorBufferBase.151" }
%"class.WTF::VectorBufferBase.151" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.165" }
%"class.WTF::VectorBuffer.165" = type { %"class.WTF::VectorBufferBase.166" }
%"class.WTF::VectorBufferBase.166" = type { %"struct.std::__1::pair.167"*, i32, i32 }
%"struct.std::__1::pair.167" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.180" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.82"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.89"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.96"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.206" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.198 }
%class.scoped_refptr.198 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.199" = type { %"struct.std::__1::__atomic_base.200" }
%"struct.std::__1::__atomic_base.200" = type { %"struct.std::__1::__cxx_atomic_impl.201" }
%"struct.std::__1::__cxx_atomic_impl.201" = type { %"struct.std::__1::__cxx_atomic_base_impl.202" }
%"struct.std::__1::__cxx_atomic_base_impl.202" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence" = type { %"class.blink::bindings::UnionBase", i32, %"class.WTF::Vector", %"class.WTF::Vector.1" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3" }
%"class.WTF::VectorBufferBase.3" = type { %"class.WTF::Vector.4"*, i32, i32 }
%"class.WTF::Vector.4" = type { %"class.WTF::VectorBuffer.5" }
%"class.WTF::VectorBuffer.5" = type { %"class.WTF::VectorBufferBase.6" }
%"class.WTF::VectorBufferBase.6" = type { %"class.WTF::String"*, i32, i32 }
%"class.v8::Value" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.11", %"class.v8::Local", %"class.v8::Local.12", %"class.v8::Local.12", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.11" = type { %"class.v8::Object"* }
%"class.v8::Object" = type { i8 }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.v8::Local.12" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.WTF::ConditionalDestructor" = type { i8 }
%"class.v8::Array" = type { i8 }
%"class.WTF::ConditionalDestructor.9" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.blink::ExecutionContext" = type opaque
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.WTF::HashMap.253" = type { %"class.WTF::HashTable.254" }
%"class.WTF::HashTable.254" = type <{ %"struct.WTF::KeyValuePair.257"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.257" = type <{ %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.12", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.222" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { i8* }
%"class.v8::Name" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.15, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.15 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.23" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.23" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.23" = type { %"class.v8::TracedReference.24" }
%"class.v8::TracedReference.24" = type { %"class.v8::BasicTracedReference.25" }
%"class.v8::BasicTracedReference.25" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.204" }
%"class.blink::Persistent.204" = type { %"class.blink::PersistentBase.205" }
%"class.blink::PersistentBase.205" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::Int32" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.289", %"class.WTF::HashMap.289", %"class.WTF::HashMap.294", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.346", %"class.blink::Persistent.204", i8, i8, i8, %"class.WTF::Vector.352", %"class.std::__1::unique_ptr.357", %"class.blink::Persistent.363", %"class.blink::Persistent.367", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.271", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.283", i32, i32 }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.289" = type { %"class.WTF::HashTable.290" }
%"class.WTF::HashTable.290" = type <{ %"struct.WTF::KeyValuePair.293"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.293" = type opaque
%"class.WTF::HashMap.294" = type { %"class.WTF::HashTable.295" }
%"class.WTF::HashTable.295" = type <{ %"struct.WTF::KeyValuePair.298"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.298" = type opaque
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.307", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.302", i8* }
%"class.WTF::HashMap.302" = type { %"class.WTF::HashTable.303" }
%"class.WTF::HashTable.303" = type <{ %"struct.WTF::KeyValuePair.306"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.306" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.307" = type { %"class.v8::PersistentValueMapBase.308" }
%"class.v8::PersistentValueMapBase.308" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.309", i8* }
%"class.WTF::HashMap.309" = type { %"class.WTF::HashTable.310" }
%"class.WTF::HashTable.310" = type <{ %"struct.WTF::KeyValuePair.313"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.313" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.314", %"class.WTF::String", %"class.std::__1::unique_ptr.316" }
%"class.WTF::RefCounted.314" = type { %"class.base::RefCounted.315" }
%"class.base::RefCounted.315" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.330", %"class.WTF::Vector.336", i8, i32 }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.WTF::Vector.322"* }
%"class.WTF::Vector.322" = type { %"class.WTF::VectorBuffer.323" }
%"class.WTF::VectorBuffer.323" = type { %"class.WTF::VectorBufferBase.324" }
%"class.WTF::VectorBufferBase.324" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.336" = type { %"class.WTF::VectorBuffer.337" }
%"class.WTF::VectorBuffer.337" = type { %"class.WTF::VectorBufferBase.324", [32 x i8] }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.WTF::Vector.352" = type { %"class.WTF::VectorBuffer.353" }
%"class.WTF::VectorBuffer.353" = type { %"class.WTF::VectorBufferBase.354" }
%"class.WTF::VectorBufferBase.354" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.363" = type { %"class.blink::PersistentBase.364" }
%"class.blink::PersistentBase.364" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.367" = type { %"class.blink::PersistentBase.368" }
%"class.blink::PersistentBase.368" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.373" }
%"class.WTF::Vector.373" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.375" }
%"class.WTF::VectorBufferBase.375" = type { %"struct.std::__1::pair.376"*, i32, i32 }
%"struct.std::__1::pair.376" = type { %"class.blink::UntracedMember", %"class.blink::Member.378" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS1_INS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEEEEEvE11NativeValueEPN2v87IsolateENS9_5LocalINS9_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN3WTF21ConditionalDestructorINS_6VectorINS1_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES3_EELb0EED2Ev = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11IDLSequenceINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_9IDLRecordINS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEES5_EEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEC2ERKS6_ = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEaSERKS6_ = comdat any

$_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_EaSERKS4_ = comdat any

$_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceD2Ev = comdat any

$_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceD0Ev = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_11IDLSequenceINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENSC_5LocalINSC_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIN5blink8bindings30NativeValueTraitsStringAdapterEEEvOT_ = comdat any

$_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E16ReallocateBufferEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RKjEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZNSt3__14pairIN3WTF6StringES2_EaSERKS3_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN5blink8bindings16ToV8HelperRecordINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEN3WTF6VectorINSt3__14pairINS5_6StringES9_EELj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINSD_5ValueEEEPNS_11ScriptStateERKT0_ = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink8bindings18ToV8HelperSequenceINS_11IDLSequenceINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEN3WTF6VectorINS8_INS7_6StringELj0ENS7_18PartitionAllocatorEEELj0ESA_EEEEN2v810MaybeLocalINSD_5ValueEEEPNS_11ScriptStateERKT0_ = comdat any

$_ZN5blink8bindings18ToV8HelperSequenceINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINSA_5ValueEEEPNS_11ScriptStateERKT0_ = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*)* @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceD2Ev to i8*), i8* bitcast (void (%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*)* @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceD0Ev to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*, %"class.blink::ScriptState"*)* @_ZNK5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequence9ToV8ValueEPNS_11ScriptStateE to i8*), i8* bitcast (void (%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*, %"class.blink::Visitor"*)* @_ZNK5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequence5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str = private unnamed_addr constant [67 x i8] c"(record<ByteString, ByteString> or sequence<sequence<ByteString>>)\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.2 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [100 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<WTF::String, 0, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.6 = private unnamed_addr constant [43 x i8] c"String contains non ISO-8859-1 code point.\00", align 1
@.str.7 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.12 = private unnamed_addr constant [51 x i8] c"Only objects can be converted to record<K,V> types\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"enumerable\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::String, WTF::String>]\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEjEEEEPKcv = private unnamed_addr constant [92 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, unsigned int>]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8

@_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceC1ERKN3WTF6VectorINSt3__14pairINS1_6StringES5_EELj0ENS1_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*, %"class.WTF::Vector"*), void (%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*, %"class.WTF::Vector"*)* @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceC2ERKN3WTF6VectorINSt3__14pairINS1_6StringES5_EELj0ENS1_18PartitionAllocatorEEE
@_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceC1EON3WTF6VectorINSt3__14pairINS1_6StringES5_EELj0ENS1_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*, %"class.WTF::Vector"*), void (%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*, %"class.WTF::Vector"*)* @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceC2EON3WTF6VectorINSt3__14pairINS1_6StringES5_EELj0ENS1_18PartitionAllocatorEEE
@_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceC1ERKN3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EE = hidden unnamed_addr alias void (%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*, %"class.WTF::Vector.1"*), void (%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*, %"class.WTF::Vector.1"*)* @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceC2ERKN3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EE
@_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceC1EON3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EE = hidden unnamed_addr alias void (%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*, %"class.WTF::Vector.1"*), void (%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*, %"class.WTF::Vector.1"*)* @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceC2EON3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequence6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.1", align 8
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = alloca %"class.WTF::Vector.1", align 8
  %7 = alloca %"class.WTF::Vector", align 8
  %8 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %1) #9
  br i1 %8, label %9, label %98

9:                                                ; preds = %3
  %10 = bitcast %"class.WTF::Vector.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS1_INS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEEEEEvE11NativeValueEPN2v87IsolateENS9_5LocalINS9_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1"* nonnull sret %4, %"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %37

14:                                               ; preds = %9
  %15 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 48) #9
  %16 = bitcast i8* %15 to %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*
  %17 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 1, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %15, i64 16
  %21 = getelementptr inbounds i8, i8* %15, i64 32
  %22 = getelementptr inbounds i8, i8* %15, i64 40
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds i8, i8* %15, i64 44
  %25 = bitcast i8* %24 to i32*
  %26 = bitcast %"class.WTF::Vector.1"* %4 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #9
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %21 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %4, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %23, align 4
  store i32 0, i32* %29, align 8
  %31 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %4, i64 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %25, align 4
  store i32 0, i32* %31, align 4
  %33 = getelementptr inbounds i8, i8* %15, i64 -4
  %34 = bitcast i8* %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = or i16 %35, 1
  store atomic i16 %36, i16* %34 release, align 2
  br label %37

37:                                               ; preds = %9, %14
  %38 = phi %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* [ %16, %14 ], [ null, %9 ]
  %39 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %4, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %39, align 8
  %41 = icmp eq %"class.WTF::Vector.4"* %40, null
  br i1 %41, label %97, label %42, !prof !2

42:                                               ; preds = %37
  %43 = bitcast %"class.WTF::Vector.4"* %40 to i8*
  %44 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %4, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %95, label %47, !prof !3

47:                                               ; preds = %42
  %48 = zext i32 %45 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %40, i64 %48
  br label %50

50:                                               ; preds = %89, %47
  %51 = phi %"class.WTF::Vector.4"* [ %90, %89 ], [ %40, %47 ]
  %52 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::String"*, %"class.WTF::String"** %52, align 8
  %54 = icmp eq %"class.WTF::String"* %53, null
  br i1 %54, label %89, label %55, !prof !2

55:                                               ; preds = %50
  %56 = bitcast %"class.WTF::String"* %53 to i8*
  %57 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %51, i64 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %87, label %60, !prof !3

60:                                               ; preds = %55
  %61 = zext i32 %58 to i64
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 %61
  br label %63

63:                                               ; preds = %81, %60
  %64 = phi %"class.WTF::String"* [ %82, %81 ], [ %53, %60 ]
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #9
  br label %81

81:                                               ; preds = %80, %77, %63
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 1
  %83 = icmp eq %"class.WTF::String"* %82, %62
  br i1 %83, label %84, label %63

84:                                               ; preds = %81
  store i32 0, i32* %57, align 4
  %85 = bitcast %"class.WTF::Vector.4"* %51 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %84, %55
  %88 = phi i8* [ %86, %84 ], [ %56, %55 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %88) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %52, align 8
  br label %89

89:                                               ; preds = %87, %50
  %90 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %51, i64 1
  %91 = icmp eq %"class.WTF::Vector.4"* %90, %49
  br i1 %91, label %92, label %50

92:                                               ; preds = %89
  store i32 0, i32* %44, align 4
  %93 = bitcast %"class.WTF::Vector.1"* %4 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %92, %42
  %96 = phi i8* [ %94, %92 ], [ %43, %42 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %96) #9
  store %"class.WTF::Vector.4"* null, %"class.WTF::Vector.4"** %39, align 8
  br label %97

97:                                               ; preds = %37, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  br label %236

98:                                               ; preds = %3
  %99 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #9
  br i1 %99, label %100, label %201

100:                                              ; preds = %98
  %101 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %101) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 56, i1 false)
  %102 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %0, %"class.v8::Object"* %102, %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  %103 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %198

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %108 = load %"class.v8::Object"*, %"class.v8::Object"** %107, align 8
  %109 = icmp eq %"class.v8::Object"* %108, null
  br i1 %109, label %200, label %110

110:                                              ; preds = %106
  %111 = bitcast %"class.WTF::Vector.1"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #9
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11IDLSequenceINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.1"* nonnull sret %6, %"class.v8::Isolate"* %0, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %112 = load i32, i32* %103, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %137

114:                                              ; preds = %110
  %115 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 48) #9
  %116 = bitcast i8* %115 to %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*
  %117 = bitcast i8* %115 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %118 = getelementptr inbounds i8, i8* %115, i64 8
  %119 = bitcast i8* %118 to i32*
  store i32 1, i32* %119, align 8
  %120 = getelementptr inbounds i8, i8* %115, i64 16
  %121 = getelementptr inbounds i8, i8* %115, i64 32
  %122 = getelementptr inbounds i8, i8* %115, i64 40
  %123 = bitcast i8* %122 to i32*
  %124 = getelementptr inbounds i8, i8* %115, i64 44
  %125 = bitcast i8* %124 to i32*
  %126 = bitcast %"class.WTF::Vector.1"* %6 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #9
  %127 = load i64, i64* %126, align 8
  %128 = bitcast i8* %121 to i64*
  store atomic i64 0, i64* %126 monotonic, align 8
  store atomic i64 %127, i64* %128 monotonic, align 8
  %129 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %6, i64 0, i32 0, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  store i32 %130, i32* %123, align 4
  store i32 0, i32* %129, align 8
  %131 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %6, i64 0, i32 0, i32 0, i32 2
  %132 = load i32, i32* %131, align 4
  store i32 %132, i32* %125, align 4
  store i32 0, i32* %131, align 4
  %133 = getelementptr inbounds i8, i8* %115, i64 -4
  %134 = bitcast i8* %133 to i16*
  %135 = load atomic i16, i16* %134 monotonic, align 2
  %136 = or i16 %135, 1
  store atomic i16 %136, i16* %134 release, align 2
  br label %137

137:                                              ; preds = %110, %114
  %138 = phi %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* [ %116, %114 ], [ null, %110 ]
  %139 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %6, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %139, align 8
  %141 = icmp eq %"class.WTF::Vector.4"* %140, null
  br i1 %141, label %197, label %142, !prof !2

142:                                              ; preds = %137
  %143 = bitcast %"class.WTF::Vector.4"* %140 to i8*
  %144 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %6, i64 0, i32 0, i32 0, i32 2
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %195, label %147, !prof !3

147:                                              ; preds = %142
  %148 = zext i32 %145 to i64
  %149 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %140, i64 %148
  br label %150

150:                                              ; preds = %189, %147
  %151 = phi %"class.WTF::Vector.4"* [ %190, %189 ], [ %140, %147 ]
  %152 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %151, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.WTF::String"*, %"class.WTF::String"** %152, align 8
  %154 = icmp eq %"class.WTF::String"* %153, null
  br i1 %154, label %189, label %155, !prof !2

155:                                              ; preds = %150
  %156 = bitcast %"class.WTF::String"* %153 to i8*
  %157 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %151, i64 0, i32 0, i32 0, i32 2
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %187, label %160, !prof !3

160:                                              ; preds = %155
  %161 = zext i32 %158 to i64
  %162 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %153, i64 %161
  br label %163

163:                                              ; preds = %181, %160
  %164 = phi %"class.WTF::String"* [ %182, %181 ], [ %153, %160 ]
  %165 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %164, i64 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %166) #9
  br label %181

181:                                              ; preds = %180, %177, %163
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %164, i64 1
  %183 = icmp eq %"class.WTF::String"* %182, %162
  br i1 %183, label %184, label %163

184:                                              ; preds = %181
  store i32 0, i32* %157, align 4
  %185 = bitcast %"class.WTF::Vector.4"* %151 to i8**
  %186 = load i8*, i8** %185, align 8
  br label %187

187:                                              ; preds = %184, %155
  %188 = phi i8* [ %186, %184 ], [ %156, %155 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %188) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %152, align 8
  br label %189

189:                                              ; preds = %187, %150
  %190 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %151, i64 1
  %191 = icmp eq %"class.WTF::Vector.4"* %190, %149
  br i1 %191, label %192, label %150

192:                                              ; preds = %189
  store i32 0, i32* %144, align 4
  %193 = bitcast %"class.WTF::Vector.1"* %6 to i8**
  %194 = load i8*, i8** %193, align 8
  br label %195

195:                                              ; preds = %192, %142
  %196 = phi i8* [ %194, %192 ], [ %143, %142 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %196) #9
  store %"class.WTF::Vector.4"* null, %"class.WTF::Vector.4"** %139, align 8
  br label %197

197:                                              ; preds = %137, %195
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #9
  br label %198

198:                                              ; preds = %100, %197
  %199 = phi %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* [ null, %100 ], [ %138, %197 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %101) #9
  br label %236

200:                                              ; preds = %106
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %101) #9
  br label %201

201:                                              ; preds = %200, %98
  %202 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #9
  br i1 %202, label %203, label %235

203:                                              ; preds = %201
  %204 = bitcast %"class.WTF::Vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %204) #9
  call void @_ZN5blink17NativeValueTraitsINS_9IDLRecordINS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEES5_EEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector"* nonnull sret %7, %"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %205 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %206 = load i32, i32* %205, align 8
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %232

208:                                              ; preds = %203
  %209 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 48) #9
  %210 = bitcast i8* %209 to %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*
  %211 = bitcast i8* %209 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %211, align 8
  %212 = getelementptr inbounds i8, i8* %209, i64 8
  %213 = bitcast i8* %212 to i32*
  store i32 0, i32* %213, align 8
  %214 = getelementptr inbounds i8, i8* %209, i64 16
  %215 = getelementptr inbounds i8, i8* %209, i64 24
  %216 = bitcast i8* %215 to i32*
  %217 = getelementptr inbounds i8, i8* %209, i64 28
  %218 = bitcast i8* %217 to i32*
  %219 = bitcast %"class.WTF::Vector"* %7 to i64*
  %220 = bitcast i8* %214 to i64*
  store i64 0, i64* %220, align 8
  %221 = load i64, i64* %219, align 8
  %222 = bitcast i8* %214 to i64*
  store atomic i64 0, i64* %219 monotonic, align 8
  store atomic i64 %221, i64* %222 monotonic, align 8
  %223 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 1
  %224 = load i32, i32* %223, align 8
  store i32 %224, i32* %216, align 4
  store i32 0, i32* %223, align 8
  %225 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %226 = load i32, i32* %225, align 4
  store i32 %226, i32* %218, align 4
  store i32 0, i32* %225, align 4
  %227 = getelementptr inbounds i8, i8* %209, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %227, i8 0, i64 16, i1 false) #9
  %228 = getelementptr inbounds i8, i8* %209, i64 -4
  %229 = bitcast i8* %228 to i16*
  %230 = load atomic i16, i16* %229 monotonic, align 2
  %231 = or i16 %230, 1
  store atomic i16 %231, i16* %229 release, align 2
  br label %232

232:                                              ; preds = %203, %208
  %233 = phi %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* [ %210, %208 ], [ null, %203 ]
  %234 = bitcast %"class.WTF::Vector"* %7 to %"class.WTF::ConditionalDestructor"*
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor"* nonnull %234) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %204) #9
  br label %236

235:                                              ; preds = %201
  call void @_ZN5blink8bindings9UnionBase23ThrowTypeErrorNotOfTypeERNS_14ExceptionStateEPKc(%"class.blink::ExceptionState"* dereferenceable(72) %2, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0)) #9
  br label %236

236:                                              ; preds = %198, %235, %232, %97
  %237 = phi %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* [ %38, %97 ], [ %233, %232 ], [ null, %235 ], [ %199, %198 ]
  ret %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %237
}

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS1_INS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEEEEEvE11NativeValueEPN2v87IsolateENS9_5LocalINS9_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.1"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #9
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_11IDLSequenceINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENSC_5LocalINSC_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.1"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #9
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0)) #9
  %12 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0)) #9
  %26 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11IDLSequenceINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.1"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #9
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_6VectorINS1_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES3_EELb0EED2Ev(%"class.WTF::ConditionalDestructor.9"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.9"* %0 to %"class.WTF::Vector.4"**
  %3 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %2, align 8
  %4 = icmp eq %"class.WTF::Vector.4"* %3, null
  br i1 %4, label %61, label %5, !prof !2

5:                                                ; preds = %1
  %6 = bitcast %"class.WTF::Vector.4"* %3 to i8*
  %7 = getelementptr inbounds %"class.WTF::ConditionalDestructor.9", %"class.WTF::ConditionalDestructor.9"* %0, i64 12
  %8 = bitcast %"class.WTF::ConditionalDestructor.9"* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %59, label %11, !prof !3

11:                                               ; preds = %5
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %3, i64 %12
  br label %14

14:                                               ; preds = %11, %53
  %15 = phi %"class.WTF::Vector.4"* [ %54, %53 ], [ %3, %11 ]
  %16 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %18 = icmp eq %"class.WTF::String"* %17, null
  br i1 %18, label %53, label %19, !prof !2

19:                                               ; preds = %14
  %20 = bitcast %"class.WTF::String"* %17 to i8*
  %21 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %15, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %51, label %24, !prof !3

24:                                               ; preds = %19
  %25 = zext i32 %22 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 %25
  br label %27

27:                                               ; preds = %45, %24
  %28 = phi %"class.WTF::String"* [ %46, %45 ], [ %17, %24 ]
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #9
  br label %45

45:                                               ; preds = %44, %41, %27
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 1
  %47 = icmp eq %"class.WTF::String"* %46, %26
  br i1 %47, label %48, label %27

48:                                               ; preds = %45
  store i32 0, i32* %21, align 4
  %49 = bitcast %"class.WTF::Vector.4"* %15 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %19
  %52 = phi i8* [ %50, %48 ], [ %20, %19 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %16, align 8
  br label %53

53:                                               ; preds = %51, %14
  %54 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %15, i64 1
  %55 = icmp eq %"class.WTF::Vector.4"* %54, %13
  br i1 %55, label %56, label %14

56:                                               ; preds = %53
  store i32 0, i32* %8, align 4
  %57 = bitcast %"class.WTF::ConditionalDestructor.9"* %0 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %5
  %60 = phi i8* [ %58, %56 ], [ %6, %5 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #9
  store %"class.WTF::Vector.4"* null, %"class.WTF::Vector.4"** %2, align 8
  br label %61

61:                                               ; preds = %1, %59
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11IDLSequenceINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.1"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.1", align 8
  %6 = alloca %"class.WTF::Vector.4", align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = bitcast %"class.WTF::Vector.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #9
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %13, label %14, label %124

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.WTF::Vector.4"* %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %18 = bitcast %"class.WTF::Vector.4"* %6 to i64*
  %19 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %6, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %6, i64 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %6, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.WTF::Vector.4"* %6 to i8**
  br label %23

23:                                               ; preds = %14, %122
  %24 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %25 = icmp eq %"class.v8::Value"* %24, null
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %23
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %27

27:                                               ; preds = %23, %26
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #9
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.4"* nonnull sret %6, %"class.v8::Isolate"* %1, %"class.v8::Value"* %24, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %28 = load i32, i32* %17, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %67, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #9
  %32 = load %"class.WTF::String"*, %"class.WTF::String"** %21, align 8
  %33 = icmp eq %"class.WTF::String"* %32, null
  br i1 %33, label %66, label %34, !prof !2

34:                                               ; preds = %30
  %35 = bitcast %"class.WTF::String"* %32 to i8*
  %36 = load i32, i32* %20, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %64, label %38, !prof !3

38:                                               ; preds = %34
  %39 = zext i32 %36 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 %39
  br label %41

41:                                               ; preds = %59, %38
  %42 = phi %"class.WTF::String"* [ %60, %59 ], [ %32, %38 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #9
  br label %59

59:                                               ; preds = %58, %55, %41
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %42, i64 1
  %61 = icmp eq %"class.WTF::String"* %60, %40
  br i1 %61, label %62, label %41

62:                                               ; preds = %59
  store i32 0, i32* %20, align 4
  %63 = load i8*, i8** %22, align 8
  br label %64

64:                                               ; preds = %62, %34
  %65 = phi i8* [ %63, %62 ], [ %35, %34 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %65) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %21, align 8
  br label %66

66:                                               ; preds = %30, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  br label %139

67:                                               ; preds = %27
  %68 = load i32, i32* %12, align 4
  %69 = load i32, i32* %11, align 8
  %70 = icmp eq i32 %68, %69
  br i1 %70, label %86, label %71, !prof !3

71:                                               ; preds = %67
  %72 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %10, align 8
  %73 = zext i32 %68 to i64
  %74 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %72, i64 %73
  %75 = bitcast %"class.WTF::Vector.4"* %74 to i8*
  %76 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %72, i64 %73, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %72, i64 %73, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #9
  %78 = load i64, i64* %18, align 8
  %79 = bitcast %"class.WTF::Vector.4"* %74 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  store atomic i64 %78, i64* %79 monotonic, align 8
  %80 = load i32, i32* %76, align 4
  %81 = load i32, i32* %19, align 8
  store i32 %81, i32* %76, align 4
  store i32 %80, i32* %19, align 8
  %82 = load i32, i32* %77, align 4
  %83 = load i32, i32* %20, align 4
  store i32 %83, i32* %77, align 4
  store i32 %82, i32* %20, align 4
  %84 = load i32, i32* %12, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %87

86:                                               ; preds = %67
  call void @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1"* nonnull %5, %"class.WTF::Vector.4"* nonnull dereferenceable(16) %6) #9
  br label %87

87:                                               ; preds = %71, %86
  %88 = load %"class.WTF::String"*, %"class.WTF::String"** %21, align 8
  %89 = icmp eq %"class.WTF::String"* %88, null
  br i1 %89, label %122, label %90, !prof !2

90:                                               ; preds = %87
  %91 = bitcast %"class.WTF::String"* %88 to i8*
  %92 = load i32, i32* %20, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %120, label %94, !prof !3

94:                                               ; preds = %90
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::String"* [ %116, %115 ], [ %88, %94 ]
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #9
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 1
  %117 = icmp eq %"class.WTF::String"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %20, align 4
  %119 = load i8*, i8** %22, align 8
  br label %120

120:                                              ; preds = %118, %90
  %121 = phi i8* [ %119, %118 ], [ %91, %90 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %121) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %21, align 8
  br label %122

122:                                              ; preds = %87, %120
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #9
  %123 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %123, label %23, label %124

124:                                              ; preds = %122, %4
  %125 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %124
  %129 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 16, i1 false) #9
  br label %139

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %132 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %133 = bitcast %"class.WTF::Vector.1"* %5 to i64*
  %134 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store i64 0, i64* %134, align 8
  %135 = load i64, i64* %133, align 8
  %136 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 0, i64* %133 monotonic, align 8
  store atomic i64 %135, i64* %136 monotonic, align 8
  %137 = load i32, i32* %11, align 8
  store i32 %137, i32* %131, align 8
  store i32 0, i32* %11, align 8
  %138 = load i32, i32* %12, align 4
  store i32 %138, i32* %132, align 4
  store i32 0, i32* %12, align 4
  br label %139

139:                                              ; preds = %66, %130, %128
  %140 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %10, align 8
  %141 = icmp eq %"class.WTF::Vector.4"* %140, null
  br i1 %141, label %196, label %142, !prof !2

142:                                              ; preds = %139
  %143 = bitcast %"class.WTF::Vector.4"* %140 to i8*
  %144 = load i32, i32* %12, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %194, label %146, !prof !3

146:                                              ; preds = %142
  %147 = zext i32 %144 to i64
  %148 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %140, i64 %147
  br label %149

149:                                              ; preds = %188, %146
  %150 = phi %"class.WTF::Vector.4"* [ %189, %188 ], [ %140, %146 ]
  %151 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %150, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.WTF::String"*, %"class.WTF::String"** %151, align 8
  %153 = icmp eq %"class.WTF::String"* %152, null
  br i1 %153, label %188, label %154, !prof !2

154:                                              ; preds = %149
  %155 = bitcast %"class.WTF::String"* %152 to i8*
  %156 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %150, i64 0, i32 0, i32 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %186, label %159, !prof !3

159:                                              ; preds = %154
  %160 = zext i32 %157 to i64
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %152, i64 %160
  br label %162

162:                                              ; preds = %180, %159
  %163 = phi %"class.WTF::String"* [ %181, %180 ], [ %152, %159 ]
  %164 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %163, i64 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #9
  br label %180

180:                                              ; preds = %179, %176, %162
  %181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %163, i64 1
  %182 = icmp eq %"class.WTF::String"* %181, %161
  br i1 %182, label %183, label %162

183:                                              ; preds = %180
  store i32 0, i32* %156, align 4
  %184 = bitcast %"class.WTF::Vector.4"* %150 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %186

186:                                              ; preds = %183, %154
  %187 = phi i8* [ %185, %183 ], [ %155, %154 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %187) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %151, align 8
  br label %188

188:                                              ; preds = %186, %149
  %189 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %150, i64 1
  %190 = icmp eq %"class.WTF::Vector.4"* %189, %148
  br i1 %190, label %191, label %149

191:                                              ; preds = %188
  store i32 0, i32* %12, align 4
  %192 = bitcast %"class.WTF::Vector.1"* %5 to i8**
  %193 = load i8*, i8** %192, align 8
  br label %194

194:                                              ; preds = %191, %142
  %195 = phi i8* [ %193, %191 ], [ %143, %142 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %195) #9
  store %"class.WTF::Vector.4"* null, %"class.WTF::Vector.4"** %10, align 8
  br label %196

196:                                              ; preds = %139, %194
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_9IDLRecordINS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEES5_EEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = alloca %"class.WTF::HashMap.253", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %10 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %11 = alloca i32, align 4
  %12 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %13 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #9
  br i1 %13, label %16, label %14

14:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.12, i64 0, i64 0)) #9
  %15 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #9
  br label %480

16:                                               ; preds = %4
  %17 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %18 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #9
  %19 = call %"class.v8::Array"* @_ZN2v86Object19GetOwnPropertyNamesENS_5LocalINS_7ContextEEENS_14PropertyFilterENS_17KeyConversionModeE(%"class.v8::Object"* %17, %"class.v8::Context"* %12, i32 0, i32 0) #9
  %20 = icmp eq %"class.v8::Array"* %19, null
  br i1 %20, label %21, label %28

21:                                               ; preds = %16
  %22 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %23 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %24 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %24, i64 5
  %26 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %25, align 8
  call void %26(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %22) #9
  %27 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #9
  br label %479

28:                                               ; preds = %16
  %29 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %19) #9
  %30 = icmp ugt i32 %29, 134086656
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #9
  %32 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #9
  br label %479

33:                                               ; preds = %28
  %34 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 16, i1 false) #9
  %38 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %19) #9
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %33
  %41 = zext i32 %38 to i64
  %42 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %41) #9
  %43 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %42, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #9
  %44 = ptrtoint i8* %43 to i64
  %45 = bitcast %"class.WTF::Vector"* %6 to i64*
  store atomic i64 %44, i64* %45 monotonic, align 8
  %46 = lshr i64 %42, 4
  %47 = trunc i64 %46 to i32
  store i32 %47, i32* %36, align 8
  br label %48

48:                                               ; preds = %33, %40
  %49 = bitcast %"class.WTF::HashMap.253"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #9
  %50 = getelementptr inbounds %"class.WTF::HashMap.253", %"class.WTF::HashMap.253"* %7, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.WTF::HashMap.253", %"class.WTF::HashMap.253"* %7, i64 0, i32 0, i32 1
  %52 = bitcast %"class.WTF::HashMap.253"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 20, i1 false) #9
  %53 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %19) #9
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %48
  %56 = bitcast %"class.WTF::Vector"* %0 to i8*
  br label %434

57:                                               ; preds = %48
  %58 = bitcast %"class.v8::Array"* %19 to %"class.v8::Object"*
  %59 = bitcast %"class.WTF::String"* %8 to i8*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %9 to i8*
  %62 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %9, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %9, i64 0, i32 1, i32 0, i32 0
  %64 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %9, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %66 = bitcast %"class.WTF::Vector"* %0 to i8*
  %67 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %10 to i8*
  %68 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %10, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %10, i64 0, i32 1, i32 0, i32 0
  %70 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %10, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.WTF::HashMap.253", %"class.WTF::HashMap.253"* %7, i64 0, i32 0
  %72 = bitcast i32* %11 to i8*
  %73 = bitcast %"class.WTF::String"* %8 to i64*
  %74 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  br label %75

75:                                               ; preds = %57, %430
  %76 = phi i32 [ 0, %57 ], [ %431, %430 ]
  %77 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* nonnull %58, %"class.v8::Context"* %12, i32 %76) #9
  %78 = icmp eq %"class.v8::Value"* %77, null
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  %80 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %81 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %74, align 8
  %82 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %81, i64 5
  %83 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %82, align 8
  call void %83(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %80) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #9
  br label %443

84:                                               ; preds = %75
  %85 = bitcast %"class.v8::Value"* %77 to %"class.v8::Name"*
  %86 = call %"class.v8::Value"* @_ZN2v86Object24GetOwnPropertyDescriptorENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"* %17, %"class.v8::Context"* %12, %"class.v8::Name"* nonnull %85) #9
  %87 = icmp eq %"class.v8::Value"* %86, null
  br i1 %87, label %88, label %93

88:                                               ; preds = %84
  %89 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %90 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %74, align 8
  %91 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %90, i64 5
  %92 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %91, align 8
  call void %92(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %89) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #9
  br label %443

93:                                               ; preds = %84
  %94 = bitcast %"class.v8::Value"* %86 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 3
  %97 = icmp eq i64 %96, 1
  br i1 %97, label %98, label %115

98:                                               ; preds = %93
  %99 = add i64 %95, -1
  %100 = inttoptr i64 %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = and i64 %95, -4294967296
  %103 = zext i32 %101 to i64
  %104 = or i64 %102, %103
  %105 = add i64 %104, 7
  %106 = inttoptr i64 %105 to i16*
  %107 = load i16, i16* %106, align 2
  %108 = icmp eq i16 %107, 67
  br i1 %108, label %109, label %115

109:                                              ; preds = %98
  %110 = add i64 %95, 23
  %111 = inttoptr i64 %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = and i32 %112, -2
  %114 = icmp eq i32 %113, 10
  br i1 %114, label %430, label %115

115:                                              ; preds = %98, %93, %109
  %116 = bitcast %"class.v8::Value"* %86 to %"class.v8::Object"*
  %117 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %1, i8* nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i32 1, i32 10) #9
  %118 = icmp eq %"class.v8::String"* %117, null
  br i1 %118, label %119, label %120, !prof !3

119:                                              ; preds = %115
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %120

120:                                              ; preds = %115, %119
  %121 = bitcast %"class.v8::String"* %117 to %"class.v8::Value"*
  %122 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %116, %"class.v8::Context"* %12, %"class.v8::Value"* %121) #9
  %123 = icmp eq %"class.v8::Value"* %122, null
  br i1 %123, label %124, label %125, !prof !3

124:                                              ; preds = %120
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %125

125:                                              ; preds = %120, %124
  %126 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %122, %"class.v8::Isolate"* %1) #9
  br i1 %126, label %127, label %430

127:                                              ; preds = %125
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %60, align 8
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %61) #9
  call void @_ZN5blink17NativeValueTraitsINS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %9, %"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %77, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %128 = load %"class.v8::String"*, %"class.v8::String"** %62, align 8
  %129 = icmp eq %"class.v8::String"* %128, null
  br i1 %129, label %132, label %130, !prof !3

130:                                              ; preds = %127
  %131 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %128, i32 0) #9
  br label %152

132:                                              ; preds = %127
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %152, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i33
  %144 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %143, i33 1) #9
  %145 = extractvalue { i33, i1 } %144, 1
  %146 = extractvalue { i33, i1 } %144, 0
  %147 = icmp slt i33 %146, 0
  %148 = or i1 %145, %147
  br i1 %148, label %149, label %150, !prof !3

149:                                              ; preds = %140
  call void @llvm.trap() #9
  unreachable

150:                                              ; preds = %140
  %151 = trunc i33 %146 to i32
  store i32 %151, i32* %141, align 4
  br label %152

152:                                              ; preds = %130, %132, %135, %150
  %153 = phi %"class.WTF::StringImpl"* [ %131, %130 ], [ null, %132 ], [ %133, %135 ], [ %133, %150 ]
  store %"class.WTF::StringImpl"* %153, %"class.WTF::StringImpl"** %60, align 8
  %154 = load i8*, i8** %64, align 8
  store i8* null, i8** %64, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %157, label %156

156:                                              ; preds = %152
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %154) #9
  br label %157

157:                                              ; preds = %156, %152
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #9
  br label %173

173:                                              ; preds = %157, %169, %172
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %61) #9
  %174 = load i32, i32* %65, align 8
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %177, label %176

176:                                              ; preds = %173
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #9
  br label %411

177:                                              ; preds = %173
  %178 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %17, %"class.v8::Context"* %12, %"class.v8::Value"* nonnull %77) #9
  %179 = icmp eq %"class.v8::Value"* %178, null
  br i1 %179, label %180, label %185

180:                                              ; preds = %177
  %181 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %182 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %74, align 8
  %183 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %182, i64 5
  %184 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %183, align 8
  call void %184(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %181) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #9
  br label %411

185:                                              ; preds = %177
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %67) #9
  call void @_ZN5blink17NativeValueTraitsINS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %10, %"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %178, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %186 = load %"class.v8::String"*, %"class.v8::String"** %68, align 8
  %187 = icmp eq %"class.v8::String"* %186, null
  br i1 %187, label %190, label %188, !prof !3

188:                                              ; preds = %185
  %189 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %186, i32 0) #9
  br label %210

190:                                              ; preds = %185
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %210, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = zext i32 %200 to i33
  %202 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %201, i33 1) #9
  %203 = extractvalue { i33, i1 } %202, 1
  %204 = extractvalue { i33, i1 } %202, 0
  %205 = icmp slt i33 %204, 0
  %206 = or i1 %203, %205
  br i1 %206, label %207, label %208, !prof !3

207:                                              ; preds = %198
  call void @llvm.trap() #9
  unreachable

208:                                              ; preds = %198
  %209 = trunc i33 %204 to i32
  store i32 %209, i32* %199, align 4
  br label %210

210:                                              ; preds = %188, %190, %193, %208
  %211 = phi %"class.WTF::StringImpl"* [ %189, %188 ], [ null, %190 ], [ %191, %193 ], [ %191, %208 ]
  %212 = ptrtoint %"class.WTF::StringImpl"* %211 to i64
  %213 = load i8*, i8** %70, align 8
  store i8* null, i8** %70, align 8
  %214 = icmp eq i8* %213, null
  br i1 %214, label %216, label %215

215:                                              ; preds = %210
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %213) #9
  br label %216

216:                                              ; preds = %215, %210
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #9
  br label %232

232:                                              ; preds = %216, %228, %231
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %67) #9
  %233 = load i32, i32* %65, align 8
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %396

235:                                              ; preds = %232
  %236 = load %"struct.WTF::KeyValuePair.257"*, %"struct.WTF::KeyValuePair.257"** %50, align 8
  %237 = icmp eq %"struct.WTF::KeyValuePair.257"* %236, null
  br i1 %237, label %375, label %238

238:                                              ; preds = %235
  %239 = load i32, i32* %51, align 8
  %240 = add i32 %239, -1
  %241 = zext i32 %240 to i64
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = lshr i32 %244, 8
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %249

247:                                              ; preds = %238
  %248 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %242) #9
  br label %249

249:                                              ; preds = %247, %238
  %250 = phi i32 [ %248, %247 ], [ %245, %238 ]
  %251 = and i32 %250, %240
  %252 = zext i32 %251 to i64
  %253 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %236, i64 %252
  %254 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %253, i64 0, i32 0, i32 0, i32 0
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %375, label %257

257:                                              ; preds = %249
  %258 = xor i32 %250, -1
  %259 = lshr i32 %250, 23
  %260 = add i32 %259, %258
  %261 = shl i32 %260, 12
  %262 = xor i32 %261, %260
  %263 = lshr i32 %262, 7
  %264 = xor i32 %263, %262
  %265 = shl i32 %264, 2
  %266 = xor i32 %265, %264
  %267 = lshr i32 %266, 20
  %268 = xor i32 %267, %266
  %269 = or i32 %268, 1
  %270 = zext i32 %269 to i64
  br label %271

271:                                              ; preds = %282, %257
  %272 = phi %"struct.WTF::KeyValuePair.257"* [ %253, %257 ], [ %287, %282 ]
  %273 = phi i64 [ %252, %257 ], [ %286, %282 ]
  %274 = phi i64 [ 0, %257 ], [ %284, %282 ]
  %275 = bitcast %"struct.WTF::KeyValuePair.257"* %272 to i8**
  %276 = load i8*, i8** %275, align 8
  %277 = icmp eq i8* %276, inttoptr (i64 -1 to i8*)
  br i1 %277, label %282, label %278

278:                                              ; preds = %271
  %279 = bitcast i8* %276 to %"class.WTF::StringImpl"*
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %281 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %279, %"class.WTF::StringImpl"* %280) #9
  br i1 %281, label %291, label %282

282:                                              ; preds = %278, %271
  %283 = icmp eq i64 %274, 0
  %284 = select i1 %283, i64 %270, i64 %274
  %285 = add i64 %284, %273
  %286 = and i64 %285, %241
  %287 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %236, i64 %286
  %288 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %287, i64 0, i32 0, i32 0, i32 0
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %288, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %375, label %271

291:                                              ; preds = %278
  %292 = icmp eq %"struct.WTF::KeyValuePair.257"* %272, null
  br i1 %292, label %375, label %293

293:                                              ; preds = %291
  %294 = load %"struct.WTF::KeyValuePair.257"*, %"struct.WTF::KeyValuePair.257"** %50, align 8
  %295 = icmp eq %"struct.WTF::KeyValuePair.257"* %294, null
  br i1 %295, label %354, label %296

296:                                              ; preds = %293
  %297 = load i32, i32* %51, align 8
  %298 = add i32 %297, -1
  %299 = zext i32 %298 to i64
  %300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %300, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load atomic i32, i32* %301 monotonic, align 4
  %303 = lshr i32 %302, 8
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %307

305:                                              ; preds = %296
  %306 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %300) #9
  br label %307

307:                                              ; preds = %305, %296
  %308 = phi i32 [ %306, %305 ], [ %303, %296 ]
  %309 = and i32 %308, %298
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %294, i64 %310
  %312 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %311, i64 0, i32 0, i32 0, i32 0
  %313 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %312, align 8
  %314 = icmp eq %"class.WTF::StringImpl"* %313, null
  br i1 %314, label %354, label %315

315:                                              ; preds = %307
  %316 = xor i32 %308, -1
  %317 = lshr i32 %308, 23
  %318 = add i32 %317, %316
  %319 = shl i32 %318, 12
  %320 = xor i32 %319, %318
  %321 = lshr i32 %320, 7
  %322 = xor i32 %321, %320
  %323 = shl i32 %322, 2
  %324 = xor i32 %323, %322
  %325 = lshr i32 %324, 20
  %326 = xor i32 %325, %324
  %327 = or i32 %326, 1
  %328 = zext i32 %327 to i64
  br label %329

329:                                              ; preds = %340, %315
  %330 = phi %"struct.WTF::KeyValuePair.257"* [ %311, %315 ], [ %345, %340 ]
  %331 = phi i64 [ %310, %315 ], [ %344, %340 ]
  %332 = phi i64 [ 0, %315 ], [ %342, %340 ]
  %333 = bitcast %"struct.WTF::KeyValuePair.257"* %330 to i8**
  %334 = load i8*, i8** %333, align 8
  %335 = icmp eq i8* %334, inttoptr (i64 -1 to i8*)
  br i1 %335, label %340, label %336

336:                                              ; preds = %329
  %337 = bitcast i8* %334 to %"class.WTF::StringImpl"*
  %338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %339 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %337, %"class.WTF::StringImpl"* %338) #9
  br i1 %339, label %349, label %340

340:                                              ; preds = %336, %329
  %341 = icmp eq i64 %332, 0
  %342 = select i1 %341, i64 %328, i64 %332
  %343 = add i64 %342, %331
  %344 = and i64 %343, %299
  %345 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %294, i64 %344
  %346 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %345, i64 0, i32 0, i32 0, i32 0
  %347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %346, align 8
  %348 = icmp eq %"class.WTF::StringImpl"* %347, null
  br i1 %348, label %354, label %329

349:                                              ; preds = %336
  %350 = icmp eq %"struct.WTF::KeyValuePair.257"* %330, null
  br i1 %350, label %354, label %351

351:                                              ; preds = %349
  %352 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %330, i64 0, i32 1
  %353 = load i32, i32* %352, align 4
  br label %354

354:                                              ; preds = %340, %307, %293, %349, %351
  %355 = phi i32 [ %353, %351 ], [ 0, %349 ], [ 0, %293 ], [ 0, %307 ], [ 0, %340 ]
  %356 = call dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %6, i32 %355) #9
  %357 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %356, i64 0, i32 1
  %358 = bitcast %"class.WTF::String"* %357 to i64*
  %359 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %357, i64 0, i32 0, i32 0
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  store i64 %212, i64* %358, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %361, label %411, label %362

362:                                              ; preds = %354
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = and i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %368 = load i32, i32* %367, align 4
  br i1 %366, label %369, label %371

369:                                              ; preds = %362
  %370 = add i32 %368, -1
  store i32 %370, i32* %367, align 4
  br label %371

371:                                              ; preds = %369, %362
  %372 = phi i32 [ %370, %369 ], [ %368, %362 ]
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %411

374:                                              ; preds = %371
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #9
  br label %411

375:                                              ; preds = %282, %291, %249, %235
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #9
  %376 = load i32, i32* %37, align 4
  store i32 %376, i32* %11, align 4
  %377 = call { %"struct.WTF::KeyValuePair.257"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RKjEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.254"* nonnull %71, %"class.WTF::String"* nonnull dereferenceable(8) %8, i32* nonnull dereferenceable(4) %11) #9
  %378 = extractvalue { %"struct.WTF::KeyValuePair.257"*, i8 } %377, 1
  %379 = and i8 %378, 1
  %380 = icmp eq i8 %379, 0
  br i1 %380, label %381, label %385

381:                                              ; preds = %375
  %382 = extractvalue { %"struct.WTF::KeyValuePair.257"*, i8 } %377, 0
  %383 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %382, i64 0, i32 1
  %384 = load i32, i32* %11, align 4
  store i32 %384, i32* %383, align 4
  br label %385

385:                                              ; preds = %375, %381
  %386 = load i64, i64* %73, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %60, align 8
  %387 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %35, align 8
  %388 = load i32, i32* %37, align 4
  %389 = zext i32 %388 to i64
  %390 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %387, i64 %389
  %391 = bitcast %"struct.std::__1::pair"* %390 to i64*
  store i64 %386, i64* %391, align 8
  %392 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %387, i64 %389, i32 1
  %393 = bitcast %"class.WTF::String"* %392 to i64*
  store i64 %212, i64* %393, align 8
  %394 = load i32, i32* %37, align 4
  %395 = add i32 %394, 1
  store i32 %395, i32* %37, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #9
  br label %411

396:                                              ; preds = %232
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #9
  %397 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %397, label %411, label %398

398:                                              ; preds = %396
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = load atomic i32, i32* %399 monotonic, align 4
  %401 = and i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %404 = load i32, i32* %403, align 4
  br i1 %402, label %405, label %407

405:                                              ; preds = %398
  %406 = add i32 %404, -1
  store i32 %406, i32* %403, align 4
  br label %407

407:                                              ; preds = %405, %398
  %408 = phi i32 [ %406, %405 ], [ %404, %398 ]
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %411

410:                                              ; preds = %407
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #9
  br label %411

411:                                              ; preds = %374, %371, %354, %385, %180, %396, %407, %410, %176
  %412 = phi i32 [ 1, %176 ], [ 1, %180 ], [ 1, %396 ], [ 1, %407 ], [ 1, %410 ], [ 0, %385 ], [ 0, %354 ], [ 0, %371 ], [ 0, %374 ]
  %413 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %414 = icmp eq %"class.WTF::StringImpl"* %413, null
  br i1 %414, label %428, label %415

415:                                              ; preds = %411
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %417 = load atomic i32, i32* %416 monotonic, align 4
  %418 = and i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 0
  %421 = load i32, i32* %420, align 4
  br i1 %419, label %422, label %424

422:                                              ; preds = %415
  %423 = add i32 %421, -1
  store i32 %423, i32* %420, align 4
  br label %424

424:                                              ; preds = %422, %415
  %425 = phi i32 [ %423, %422 ], [ %421, %415 ]
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %428

427:                                              ; preds = %424
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %413) #9
  br label %428

428:                                              ; preds = %427, %424, %411
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  %429 = icmp eq i32 %412, 0
  br i1 %429, label %430, label %443

430:                                              ; preds = %428, %125, %109
  %431 = add nuw i32 %76, 1
  %432 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* nonnull %19) #9
  %433 = icmp ult i32 %431, %432
  br i1 %433, label %75, label %434

434:                                              ; preds = %430, %55
  %435 = phi i8* [ %56, %55 ], [ %66, %430 ]
  %436 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %437 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %438 = bitcast %"class.WTF::Vector"* %6 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %435, i8 0, i64 16, i1 false) #9
  %439 = load i64, i64* %438, align 8
  %440 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %438 monotonic, align 8
  store atomic i64 %439, i64* %440 monotonic, align 8
  %441 = load i32, i32* %36, align 8
  store i32 %441, i32* %436, align 8
  store i32 0, i32* %36, align 8
  %442 = load i32, i32* %37, align 4
  store i32 %442, i32* %437, align 4
  store i32 0, i32* %37, align 4
  br label %443

443:                                              ; preds = %428, %88, %79, %434
  %444 = load %"struct.WTF::KeyValuePair.257"*, %"struct.WTF::KeyValuePair.257"** %50, align 8
  %445 = icmp eq %"struct.WTF::KeyValuePair.257"* %444, null
  br i1 %445, label %477, label %446, !prof !2

446:                                              ; preds = %443
  %447 = load i32, i32* %51, align 8
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %475, label %449

449:                                              ; preds = %446
  %450 = zext i32 %447 to i64
  br label %451

451:                                              ; preds = %472, %449
  %452 = phi i64 [ 0, %449 ], [ %473, %472 ]
  %453 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %444, i64 %452
  %454 = bitcast %"struct.WTF::KeyValuePair.257"* %453 to i8**
  %455 = load i8*, i8** %454, align 8
  %456 = bitcast i8* %455 to %"class.WTF::StringImpl"*
  %457 = ptrtoint i8* %455 to i64
  switch i64 %457, label %458 [
    i64 -1, label %472
    i64 0, label %472
  ]

458:                                              ; preds = %451
  %459 = getelementptr inbounds i8, i8* %455, i64 8
  %460 = bitcast i8* %459 to i32*
  %461 = load atomic i32, i32* %460 monotonic, align 4
  %462 = and i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = bitcast i8* %455 to i32*
  %465 = load i32, i32* %464, align 4
  br i1 %463, label %466, label %468

466:                                              ; preds = %458
  %467 = add i32 %465, -1
  store i32 %467, i32* %464, align 4
  br label %468

468:                                              ; preds = %466, %458
  %469 = phi i32 [ %467, %466 ], [ %465, %458 ]
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %471, label %472

471:                                              ; preds = %468
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %456) #9
  br label %472

472:                                              ; preds = %471, %468, %451, %451
  %473 = add nuw nsw i64 %452, 1
  %474 = icmp eq i64 %473, %450
  br i1 %474, label %475, label %451

475:                                              ; preds = %472, %446
  %476 = bitcast %"struct.WTF::KeyValuePair.257"* %444 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %476) #9
  store %"struct.WTF::KeyValuePair.257"* null, %"struct.WTF::KeyValuePair.257"** %50, align 8
  br label %477

477:                                              ; preds = %443, %475
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #9
  %478 = bitcast %"class.WTF::Vector"* %6 to %"class.WTF::ConditionalDestructor"*
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor"* nonnull %478) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #9
  br label %479

479:                                              ; preds = %477, %31, %21
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #9
  br label %480

480:                                              ; preds = %479, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor"* %0 to %"struct.std::__1::pair"**
  %3 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair"* %3, null
  br i1 %4, label %57, label %5, !prof !2

5:                                                ; preds = %1
  %6 = bitcast %"struct.std::__1::pair"* %3 to i8*
  %7 = getelementptr inbounds %"class.WTF::ConditionalDestructor", %"class.WTF::ConditionalDestructor"* %0, i64 12
  %8 = bitcast %"class.WTF::ConditionalDestructor"* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %55, label %11, !prof !3

11:                                               ; preds = %5
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 %12
  br label %14

14:                                               ; preds = %11, %49
  %15 = phi %"struct.std::__1::pair"* [ %50, %49 ], [ %3, %11 ]
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #9
  br label %49

49:                                               ; preds = %48, %45, %32
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 1
  %51 = icmp eq %"struct.std::__1::pair"* %50, %13
  br i1 %51, label %52, label %14

52:                                               ; preds = %49
  store i32 0, i32* %8, align 4
  %53 = bitcast %"class.WTF::ConditionalDestructor"* %0 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %5
  %56 = phi i8* [ %54, %52 ], [ %6, %5 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #9
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %2, align 8
  br label %57

57:                                               ; preds = %1, %55
  ret void
}

declare void @_ZN5blink8bindings9UnionBase23ThrowTypeErrorNotOfTypeERNS_14ExceptionStateEPKc(%"class.blink::ExceptionState"* dereferenceable(72), i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceC2ERKN3WTF6VectorINSt3__14pairINS1_6StringES5_EELj0ENS1_18PartitionAllocatorEEE(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*, %"class.WTF::Vector"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2
  tail call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEC2ERKS6_(%"class.WTF::Vector"* %5, %"class.WTF::Vector"* dereferenceable(16) %1)
  %6 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3
  %7 = bitcast %"class.WTF::Vector.1"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEC2ERKS6_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %9) #9
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #9
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = lshr i64 %10, 4
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = bitcast i8* %11 to %"struct.std::__1::pair"*
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi %"struct.std::__1::pair"* [ null, %2 ], [ %16, %8 ]
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %22, align 8
  %24 = load i32, i32* %19, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %78, label %28

28:                                               ; preds = %17, %74
  %29 = phi %"struct.std::__1::pair"* [ %75, %74 ], [ %18, %17 ]
  %30 = phi %"struct.std::__1::pair"* [ %76, %74 ], [ %23, %17 ]
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #9
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  tail call void @llvm.trap() #9
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %28
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #9
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !3

71:                                               ; preds = %62
  tail call void @llvm.trap() #9
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %72, %57, %52
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 1
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 1
  %77 = icmp eq %"struct.std::__1::pair"* %76, %26
  br i1 %77, label %78, label %28

78:                                               ; preds = %74, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceC2EON3WTF6VectorINSt3__14pairINS1_6StringES5_EELj0ENS1_18PartitionAllocatorEEE(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* nocapture, %"class.WTF::Vector"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = bitcast %"class.WTF::Vector"* %1 to i64*
  %9 = bitcast %"class.WTF::Vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #9
  %10 = load i64, i64* %8, align 8
  %11 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 0, i64* %8 monotonic, align 8
  store atomic i64 %10, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %6, align 4
  %14 = load i32, i32* %12, align 4
  store i32 %14, i32* %6, align 4
  store i32 %13, i32* %12, align 4
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %7, align 4
  %17 = load i32, i32* %15, align 4
  store i32 %17, i32* %7, align 4
  store i32 %16, i32* %15, align 4
  %18 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3
  %19 = bitcast %"class.WTF::Vector.1"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceC2ERKN3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EE(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* nocapture, %"class.WTF::Vector.1"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 1
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2
  %6 = bitcast %"class.WTF::Vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #9
  %7 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::Vector.4"* null, %"class.WTF::Vector.4"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %2
  %14 = zext i32 %9 to i64
  %15 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm(i64 %14) #9
  %16 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %15, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #9
  %17 = ptrtoint i8* %16 to i64
  %18 = bitcast %"class.WTF::Vector.1"* %7 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = lshr i64 %15, 4
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %11, align 8
  %21 = bitcast i8* %16 to %"class.WTF::Vector.4"*
  br label %22

22:                                               ; preds = %2, %13
  %23 = phi %"class.WTF::Vector.4"* [ null, %2 ], [ %21, %13 ]
  %24 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %1, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %1, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %27, align 8
  %29 = load i32, i32* %24, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %28, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %93, label %33

33:                                               ; preds = %22, %89
  %34 = phi %"class.WTF::Vector.4"* [ %90, %89 ], [ %23, %22 ]
  %35 = phi %"class.WTF::Vector.4"* [ %91, %89 ], [ %28, %22 ]
  %36 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %35, i64 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %34, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %34, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %39, align 8
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %33
  %42 = zext i32 %37 to i64
  %43 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %42) #9
  %44 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.4"* %34 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = lshr i64 %43, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %39, align 8
  %49 = bitcast i8* %44 to %"class.WTF::String"*
  br label %50

50:                                               ; preds = %41, %33
  %51 = phi %"class.WTF::String"* [ null, %33 ], [ %49, %41 ]
  %52 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %35, i64 0, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %34, i64 0, i32 0, i32 0, i32 2
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %35, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::String"*, %"class.WTF::String"** %55, align 8
  %57 = load i32, i32* %52, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 %58
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %89, label %61

61:                                               ; preds = %50, %85
  %62 = phi %"class.WTF::String"* [ %86, %85 ], [ %51, %50 ]
  %63 = phi %"class.WTF::String"* [ %87, %85 ], [ %56, %50 ]
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %66, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i33
  %77 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #9
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %73
  tail call void @llvm.trap() #9
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4
  br label %85

85:                                               ; preds = %83, %68, %61
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 1
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 1
  %88 = icmp eq %"class.WTF::String"* %87, %59
  br i1 %88, label %89, label %61

89:                                               ; preds = %85, %50
  %90 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %34, i64 1
  %91 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %35, i64 1
  %92 = icmp eq %"class.WTF::Vector.4"* %91, %31
  br i1 %92, label %93, label %33

93:                                               ; preds = %89, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceC2EON3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EE(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* nocapture, %"class.WTF::Vector.1"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 1
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %9 = bitcast %"class.WTF::Vector.1"* %1 to i64*
  %10 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false)
  %11 = load i64, i64* %9, align 8
  %12 = bitcast %"class.WTF::Vector.1"* %6 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %1, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %7, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %7, align 4
  store i32 %14, i32* %13, align 4
  %16 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %8, align 4
  %18 = load i32, i32* %16, align 4
  store i32 %18, i32* %8, align 4
  store i32 %17, i32* %16, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequence3SetERKN3WTF6VectorINSt3__14pairINS1_6StringES5_EELj0ENS1_18PartitionAllocatorEEE(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequence5ClearEv(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0)
  %3 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2
  %4 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEaSERKS6_(%"class.WTF::Vector"* %3, %"class.WTF::Vector"* dereferenceable(16) %1)
  %5 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequence5ClearEv(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %58, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = zext i32 %8 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %13
  br label %15

15:                                               ; preds = %50, %10
  %16 = phi %"struct.std::__1::pair"* [ %51, %50 ], [ %12, %10 ]
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #9
  br label %33

33:                                               ; preds = %32, %29, %15
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #9
  br label %50

50:                                               ; preds = %49, %46, %33
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %52 = icmp eq %"struct.std::__1::pair"* %51, %14
  br i1 %52, label %53, label %15

53:                                               ; preds = %50
  store i32 0, i32* %7, align 4
  br label %54

54:                                               ; preds = %53, %6
  %55 = bitcast %"class.WTF::Vector"* %2 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = bitcast %"class.WTF::Vector"* %2 to i64*
  store atomic i64 0, i64* %57 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #9
  br label %58

58:                                               ; preds = %1, %54
  %59 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3
  %60 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %119, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %115, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %59, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %68, align 8
  %70 = zext i32 %65 to i64
  %71 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %69, i64 %70
  br label %72

72:                                               ; preds = %111, %67
  %73 = phi %"class.WTF::Vector.4"* [ %112, %111 ], [ %69, %67 ]
  %74 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::String"*, %"class.WTF::String"** %74, align 8
  %76 = icmp eq %"class.WTF::String"* %75, null
  br i1 %76, label %111, label %77, !prof !2

77:                                               ; preds = %72
  %78 = bitcast %"class.WTF::String"* %75 to i8*
  %79 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %73, i64 0, i32 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %109, label %82, !prof !3

82:                                               ; preds = %77
  %83 = zext i32 %80 to i64
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 %83
  br label %85

85:                                               ; preds = %103, %82
  %86 = phi %"class.WTF::String"* [ %104, %103 ], [ %75, %82 ]
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #9
  br label %103

103:                                              ; preds = %102, %99, %85
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 1
  %105 = icmp eq %"class.WTF::String"* %104, %84
  br i1 %105, label %106, label %85

106:                                              ; preds = %103
  store i32 0, i32* %79, align 4
  %107 = bitcast %"class.WTF::Vector.4"* %73 to i8**
  %108 = load i8*, i8** %107, align 8
  br label %109

109:                                              ; preds = %106, %77
  %110 = phi i8* [ %108, %106 ], [ %78, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %110) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %74, align 8
  br label %111

111:                                              ; preds = %109, %72
  %112 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %73, i64 1
  %113 = icmp eq %"class.WTF::Vector.4"* %112, %71
  br i1 %113, label %114, label %72

114:                                              ; preds = %111
  store i32 0, i32* %64, align 4
  br label %115

115:                                              ; preds = %114, %63
  %116 = bitcast %"class.WTF::Vector.1"* %59 to i8**
  %117 = load i8*, i8** %116, align 8
  %118 = bitcast %"class.WTF::Vector.1"* %59 to i64*
  store atomic i64 0, i64* %118 monotonic, align 8
  store i32 0, i32* %60, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %117) #9
  br label %119

119:                                              ; preds = %58, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEEaSERKS6_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %236, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %56

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %15
  br label %17

17:                                               ; preds = %52, %10
  %18 = phi %"struct.std::__1::pair"* [ %53, %52 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #9
  br label %52

52:                                               ; preds = %51, %48, %35
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 1
  %54 = icmp eq %"struct.std::__1::pair"* %53, %14
  br i1 %54, label %55, label %17

55:                                               ; preds = %52
  store i32 %8, i32* %5, align 4
  br label %150

56:                                               ; preds = %4
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = icmp ugt i32 %8, %58
  br i1 %59, label %60, label %148

60:                                               ; preds = %56
  %61 = icmp eq i32 %58, 0
  br i1 %61, label %114, label %62

62:                                               ; preds = %60
  %63 = icmp eq i32 %6, 0
  br i1 %63, label %108, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %66 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %65, align 8
  %67 = zext i32 %6 to i64
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 %67
  br label %69

69:                                               ; preds = %104, %64
  %70 = phi %"struct.std::__1::pair"* [ %105, %104 ], [ %66, %64 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 1, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #9
  br label %87

87:                                               ; preds = %86, %83, %69
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #9
  br label %104

104:                                              ; preds = %103, %100, %87
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 1
  %106 = icmp eq %"struct.std::__1::pair"* %105, %68
  br i1 %106, label %107, label %69

107:                                              ; preds = %104
  store i32 0, i32* %5, align 4
  br label %108

108:                                              ; preds = %107, %62
  %109 = bitcast %"class.WTF::Vector"* %0 to i8**
  %110 = load i8*, i8** %109, align 8
  %111 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %111 monotonic, align 8
  store i32 0, i32* %57, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %110) #9
  %112 = load i32, i32* %7, align 4
  %113 = load i32, i32* %57, align 8
  br label %114

114:                                              ; preds = %60, %108
  %115 = phi i32 [ 0, %60 ], [ %113, %108 ]
  %116 = phi i32 [ %8, %60 ], [ %112, %108 ]
  %117 = icmp ult i32 %115, %116
  br i1 %117, label %118, label %148, !prof !2

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %120 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %119, align 8
  %121 = icmp eq %"struct.std::__1::pair"* %120, null
  %122 = zext i32 %116 to i64
  %123 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %122) #9
  %124 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %123, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #9
  br i1 %121, label %125, label %130

125:                                              ; preds = %118
  %126 = ptrtoint i8* %124 to i64
  %127 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %126, i64* %127 monotonic, align 8
  %128 = lshr i64 %123, 4
  %129 = trunc i64 %128 to i32
  store i32 %129, i32* %57, align 8
  br label %148

130:                                              ; preds = %118
  %131 = lshr i64 %123, 4
  %132 = ptrtoint i8* %124 to i64
  %133 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %119, align 8
  %134 = icmp ne i8* %124, null
  %135 = icmp ne %"struct.std::__1::pair"* %133, null
  %136 = and i1 %134, %135
  %137 = bitcast %"struct.std::__1::pair"* %133 to i8*
  br i1 %136, label %138, label %144, !prof !2

138:                                              ; preds = %130
  %139 = load i32, i32* %5, align 4
  %140 = zext i32 %139 to i64
  %141 = shl nuw nsw i64 %140, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %124, i8* nonnull align 8 %137, i64 %141, i1 false) #9
  %142 = bitcast %"class.WTF::Vector"* %0 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %138, %130
  %145 = phi i8* [ %143, %138 ], [ %137, %130 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %145) #9
  %146 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %132, i64* %146 monotonic, align 8
  %147 = trunc i64 %131 to i32
  store i32 %147, i32* %57, align 8
  br label %148

148:                                              ; preds = %56, %114, %125, %144
  %149 = load i32, i32* %5, align 4
  br label %150

150:                                              ; preds = %148, %55
  %151 = phi i32 [ %149, %148 ], [ %8, %55 ]
  %152 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %153 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %152, align 8
  %154 = zext i32 %151 to i64
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 %154
  %156 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %157 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %156, align 8
  %158 = icmp eq i32 %151, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %150, %159
  %160 = phi %"struct.std::__1::pair"* [ %164, %159 ], [ %157, %150 ]
  %161 = phi %"struct.std::__1::pair"* [ %163, %159 ], [ %153, %150 ]
  %162 = tail call dereferenceable(16) %"struct.std::__1::pair"* @_ZNSt3__14pairIN3WTF6StringES2_EaSERKS3_(%"struct.std::__1::pair"* %160, %"struct.std::__1::pair"* dereferenceable(16) %161) #9
  %163 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %161, i64 1
  %164 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %160, i64 1
  %165 = icmp eq %"struct.std::__1::pair"* %163, %155
  br i1 %165, label %166, label %159

166:                                              ; preds = %159
  %167 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %152, align 8
  %168 = load i32, i32* %5, align 4
  %169 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %156, align 8
  br label %170

170:                                              ; preds = %166, %150
  %171 = phi %"struct.std::__1::pair"* [ %169, %166 ], [ %157, %150 ]
  %172 = phi i32 [ %168, %166 ], [ 0, %150 ]
  %173 = phi %"struct.std::__1::pair"* [ %167, %166 ], [ %153, %150 ]
  %174 = zext i32 %172 to i64
  %175 = load i32, i32* %7, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %173, i64 %176
  %178 = icmp eq i32 %172, %175
  br i1 %178, label %234, label %179

179:                                              ; preds = %170
  %180 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %171, i64 %174
  %181 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %173, i64 %174
  br label %182

182:                                              ; preds = %179, %228
  %183 = phi %"struct.std::__1::pair"* [ %229, %228 ], [ %180, %179 ]
  %184 = phi %"struct.std::__1::pair"* [ %230, %228 ], [ %181, %179 ]
  %185 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %184, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %183, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %187, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %188, label %206, label %189

189:                                              ; preds = %182
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %206

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = zext i32 %196 to i33
  %198 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %197, i33 1) #9
  %199 = extractvalue { i33, i1 } %198, 1
  %200 = extractvalue { i33, i1 } %198, 0
  %201 = icmp slt i33 %200, 0
  %202 = or i1 %199, %201
  br i1 %202, label %203, label %204, !prof !3

203:                                              ; preds = %194
  tail call void @llvm.trap() #9
  unreachable

204:                                              ; preds = %194
  %205 = trunc i33 %200 to i32
  store i32 %205, i32* %195, align 4
  br label %206

206:                                              ; preds = %204, %189, %182
  %207 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %184, i64 0, i32 1, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %183, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %209, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %210, label %228, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %228

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  %219 = zext i32 %218 to i33
  %220 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %219, i33 1) #9
  %221 = extractvalue { i33, i1 } %220, 1
  %222 = extractvalue { i33, i1 } %220, 0
  %223 = icmp slt i33 %222, 0
  %224 = or i1 %221, %223
  br i1 %224, label %225, label %226, !prof !3

225:                                              ; preds = %216
  tail call void @llvm.trap() #9
  unreachable

226:                                              ; preds = %216
  %227 = trunc i33 %222 to i32
  store i32 %227, i32* %217, align 4
  br label %228

228:                                              ; preds = %226, %211, %206
  %229 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %183, i64 1
  %230 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %184, i64 1
  %231 = icmp eq %"struct.std::__1::pair"* %230, %177
  br i1 %231, label %232, label %182

232:                                              ; preds = %228
  %233 = load i32, i32* %7, align 4
  br label %234

234:                                              ; preds = %232, %170
  %235 = phi i32 [ %233, %232 ], [ %172, %170 ]
  store i32 %235, i32* %5, align 4
  br label %236

236:                                              ; preds = %2, %234
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequence3SetEON3WTF6VectorINSt3__14pairINS1_6StringES5_EELj0ENS1_18PartitionAllocatorEEE(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* nocapture, %"class.WTF::Vector"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequence5ClearEv(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0)
  %3 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2
  %4 = bitcast %"class.WTF::Vector"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::Vector"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  store atomic i64 %7, i64* %4 monotonic, align 8
  store atomic i64 %5, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %8, align 4
  %11 = load i32, i32* %9, align 4
  store i32 %11, i32* %8, align 4
  store i32 %10, i32* %9, align 4
  %12 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %12, align 4
  store i32 %14, i32* %13, align 4
  %16 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 1
  store i32 0, i32* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequence3SetERKN3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EE(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*, %"class.WTF::Vector.1"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequence5ClearEv(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0)
  %3 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3
  %4 = tail call dereferenceable(16) %"class.WTF::Vector.1"* @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_EaSERKS4_(%"class.WTF::Vector.1"* %3, %"class.WTF::Vector.1"* dereferenceable(16) %1)
  %5 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 1
  store i32 1, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.1"* @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_EaSERKS4_(%"class.WTF::Vector.1"*, %"class.WTF::Vector.1"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.1"* %1, %0
  br i1 %3, label %237, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %60

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %12, i64 %15
  br label %17

17:                                               ; preds = %56, %10
  %18 = phi %"class.WTF::Vector.4"* [ %57, %56 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::String"*, %"class.WTF::String"** %19, align 8
  %21 = icmp eq %"class.WTF::String"* %20, null
  br i1 %21, label %56, label %22, !prof !2

22:                                               ; preds = %17
  %23 = bitcast %"class.WTF::String"* %20 to i8*
  %24 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %18, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %54, label %27, !prof !3

27:                                               ; preds = %22
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 %28
  br label %30

30:                                               ; preds = %48, %27
  %31 = phi %"class.WTF::String"* [ %49, %48 ], [ %20, %27 ]
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #9
  br label %48

48:                                               ; preds = %47, %44, %30
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 1
  %50 = icmp eq %"class.WTF::String"* %49, %29
  br i1 %50, label %51, label %30

51:                                               ; preds = %48
  store i32 0, i32* %24, align 4
  %52 = bitcast %"class.WTF::Vector.4"* %18 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %22
  %55 = phi i8* [ %53, %51 ], [ %23, %22 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %19, align 8
  br label %56

56:                                               ; preds = %54, %17
  %57 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %18, i64 1
  %58 = icmp eq %"class.WTF::Vector.4"* %57, %14
  br i1 %58, label %59, label %17

59:                                               ; preds = %56
  store i32 %8, i32* %5, align 4
  br label %141

60:                                               ; preds = %4
  %61 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp ugt i32 %8, %62
  br i1 %63, label %64, label %139

64:                                               ; preds = %60
  %65 = icmp eq i32 %62, 0
  br i1 %65, label %122, label %66

66:                                               ; preds = %64
  %67 = icmp eq i32 %6, 0
  br i1 %67, label %116, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %69, align 8
  %71 = zext i32 %6 to i64
  %72 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %70, i64 %71
  br label %73

73:                                               ; preds = %112, %68
  %74 = phi %"class.WTF::Vector.4"* [ %113, %112 ], [ %70, %68 ]
  %75 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::String"*, %"class.WTF::String"** %75, align 8
  %77 = icmp eq %"class.WTF::String"* %76, null
  br i1 %77, label %112, label %78, !prof !2

78:                                               ; preds = %73
  %79 = bitcast %"class.WTF::String"* %76 to i8*
  %80 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %74, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %110, label %83, !prof !3

83:                                               ; preds = %78
  %84 = zext i32 %81 to i64
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %76, i64 %84
  br label %86

86:                                               ; preds = %104, %83
  %87 = phi %"class.WTF::String"* [ %105, %104 ], [ %76, %83 ]
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #9
  br label %104

104:                                              ; preds = %103, %100, %86
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 1
  %106 = icmp eq %"class.WTF::String"* %105, %85
  br i1 %106, label %107, label %86

107:                                              ; preds = %104
  store i32 0, i32* %80, align 4
  %108 = bitcast %"class.WTF::Vector.4"* %74 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %107, %78
  %111 = phi i8* [ %109, %107 ], [ %79, %78 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %75, align 8
  br label %112

112:                                              ; preds = %110, %73
  %113 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %74, i64 1
  %114 = icmp eq %"class.WTF::Vector.4"* %113, %72
  br i1 %114, label %115, label %73

115:                                              ; preds = %112
  store i32 0, i32* %5, align 4
  br label %116

116:                                              ; preds = %115, %66
  %117 = bitcast %"class.WTF::Vector.1"* %0 to i8**
  %118 = load i8*, i8** %117, align 8
  %119 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 0, i64* %119 monotonic, align 8
  store i32 0, i32* %61, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %118) #9
  %120 = load i32, i32* %7, align 4
  %121 = load i32, i32* %61, align 8
  br label %122

122:                                              ; preds = %64, %116
  %123 = phi i32 [ 0, %64 ], [ %121, %116 ]
  %124 = phi i32 [ %8, %64 ], [ %120, %116 ]
  %125 = icmp ult i32 %123, %124
  br i1 %125, label %126, label %139, !prof !2

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %127, align 8
  %129 = icmp eq %"class.WTF::Vector.4"* %128, null
  br i1 %129, label %130, label %138

130:                                              ; preds = %126
  %131 = zext i32 %124 to i64
  %132 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm(i64 %131) #9
  %133 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %132, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #9
  %134 = ptrtoint i8* %133 to i64
  %135 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %134, i64* %135 monotonic, align 8
  %136 = lshr i64 %132, 4
  %137 = trunc i64 %136 to i32
  store i32 %137, i32* %61, align 8
  br label %139

138:                                              ; preds = %126
  tail call void @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E16ReallocateBufferEj(%"class.WTF::Vector.1"* %0, i32 %124) #9
  br label %139

139:                                              ; preds = %60, %122, %130, %138
  %140 = load i32, i32* %5, align 4
  br label %141

141:                                              ; preds = %139, %59
  %142 = phi i32 [ %140, %139 ], [ %8, %59 ]
  %143 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %1, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %143, align 8
  %145 = zext i32 %142 to i64
  %146 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %144, i64 %145
  %147 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %148 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %147, align 8
  %149 = icmp eq i32 %142, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %141, %150
  %151 = phi %"class.WTF::Vector.4"* [ %155, %150 ], [ %148, %141 ]
  %152 = phi %"class.WTF::Vector.4"* [ %154, %150 ], [ %144, %141 ]
  %153 = tail call dereferenceable(16) %"class.WTF::Vector.4"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.4"* %151, %"class.WTF::Vector.4"* dereferenceable(16) %152) #9
  %154 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %152, i64 1
  %155 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %151, i64 1
  %156 = icmp eq %"class.WTF::Vector.4"* %154, %146
  br i1 %156, label %157, label %150

157:                                              ; preds = %150
  %158 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %143, align 8
  %159 = load i32, i32* %5, align 4
  %160 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %147, align 8
  br label %161

161:                                              ; preds = %157, %141
  %162 = phi %"class.WTF::Vector.4"* [ %160, %157 ], [ %148, %141 ]
  %163 = phi i32 [ %159, %157 ], [ 0, %141 ]
  %164 = phi %"class.WTF::Vector.4"* [ %158, %157 ], [ %144, %141 ]
  %165 = zext i32 %163 to i64
  %166 = load i32, i32* %7, align 4
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %164, i64 %167
  %169 = icmp eq i32 %163, %166
  br i1 %169, label %235, label %170

170:                                              ; preds = %161
  %171 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %162, i64 %165
  %172 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %164, i64 %165
  br label %173

173:                                              ; preds = %170, %229
  %174 = phi %"class.WTF::Vector.4"* [ %230, %229 ], [ %171, %170 ]
  %175 = phi %"class.WTF::Vector.4"* [ %231, %229 ], [ %172, %170 ]
  %176 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %175, i64 0, i32 0, i32 0, i32 1
  %177 = load i32, i32* %176, align 8
  %178 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %174, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %178, align 8
  %179 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %174, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %179, align 8
  %180 = icmp eq i32 %177, 0
  br i1 %180, label %190, label %181

181:                                              ; preds = %173
  %182 = zext i32 %177 to i64
  %183 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %182) #9
  %184 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %183, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %185 = ptrtoint i8* %184 to i64
  %186 = bitcast %"class.WTF::Vector.4"* %174 to i64*
  store atomic i64 %185, i64* %186 monotonic, align 8
  %187 = lshr i64 %183, 3
  %188 = trunc i64 %187 to i32
  store i32 %188, i32* %179, align 8
  %189 = bitcast i8* %184 to %"class.WTF::String"*
  br label %190

190:                                              ; preds = %181, %173
  %191 = phi %"class.WTF::String"* [ null, %173 ], [ %189, %181 ]
  %192 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %175, i64 0, i32 0, i32 0, i32 2
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %174, i64 0, i32 0, i32 0, i32 2
  store i32 %193, i32* %194, align 4
  %195 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %175, i64 0, i32 0, i32 0, i32 0
  %196 = load %"class.WTF::String"*, %"class.WTF::String"** %195, align 8
  %197 = load i32, i32* %192, align 4
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %196, i64 %198
  %200 = icmp eq i32 %197, 0
  br i1 %200, label %229, label %201

201:                                              ; preds = %190, %225
  %202 = phi %"class.WTF::String"* [ %226, %225 ], [ %191, %190 ]
  %203 = phi %"class.WTF::String"* [ %227, %225 ], [ %196, %190 ]
  %204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %203, i64 0, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %206 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %202, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %205, %"class.WTF::StringImpl"** %206, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %207, label %225, label %208

208:                                              ; preds = %201
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i32 %210, 2
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %225

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i33
  %217 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %216, i33 1) #9
  %218 = extractvalue { i33, i1 } %217, 1
  %219 = extractvalue { i33, i1 } %217, 0
  %220 = icmp slt i33 %219, 0
  %221 = or i1 %218, %220
  br i1 %221, label %222, label %223, !prof !3

222:                                              ; preds = %213
  tail call void @llvm.trap() #9
  unreachable

223:                                              ; preds = %213
  %224 = trunc i33 %219 to i32
  store i32 %224, i32* %214, align 4
  br label %225

225:                                              ; preds = %223, %208, %201
  %226 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %202, i64 1
  %227 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %203, i64 1
  %228 = icmp eq %"class.WTF::String"* %227, %199
  br i1 %228, label %229, label %201

229:                                              ; preds = %225, %190
  %230 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %174, i64 1
  %231 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %175, i64 1
  %232 = icmp eq %"class.WTF::Vector.4"* %231, %168
  br i1 %232, label %233, label %173

233:                                              ; preds = %229
  %234 = load i32, i32* %7, align 4
  br label %235

235:                                              ; preds = %233, %161
  %236 = phi i32 [ %234, %233 ], [ %163, %161 ]
  store i32 %236, i32* %5, align 4
  br label %237

237:                                              ; preds = %2, %235
  ret %"class.WTF::Vector.1"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequence3SetEON3WTF6VectorINS2_INS1_6StringELj0ENS1_18PartitionAllocatorEEELj0ES4_EE(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* nocapture, %"class.WTF::Vector.1"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequence5ClearEv(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0)
  %3 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3
  %4 = bitcast %"class.WTF::Vector.1"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::Vector.1"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  store atomic i64 %7, i64* %4 monotonic, align 8
  store atomic i64 %5, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %8, align 4
  %11 = load i32, i32* %9, align 4
  store i32 %11, i32* %8, align 4
  store i32 %10, i32* %9, align 4
  %12 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %12, align 4
  store i32 %14, i32* %13, align 4
  %16 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 1
  store i32 1, i32* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequence9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*, %"class.blink::ScriptState"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %11 [
    i32 0, label %5
    i32 1, label %8
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2
  %7 = tail call %"class.v8::Value"* @_ZN5blink8bindings16ToV8HelperRecordINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEN3WTF6VectorINSt3__14pairINS5_6StringES9_EELj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINSD_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %1, %"class.WTF::Vector"* dereferenceable(16) %6) #9
  br label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3
  %10 = tail call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_11IDLSequenceINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEN3WTF6VectorINS8_INS7_6StringELj0ENS7_18PartitionAllocatorEEELj0ESA_EEEEN2v810MaybeLocalINSD_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %1, %"class.WTF::Vector.1"* dereferenceable(16) %9) #9
  br label %11

11:                                               ; preds = %2, %8, %5
  %12 = phi %"class.v8::Value"* [ %10, %8 ], [ %7, %5 ], [ null, %2 ]
  ret %"class.v8::Value"* %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequence5TraceEPNS_7VisitorE(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* nocapture, %"class.blink::Visitor"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceD2Ev(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3
  %4 = bitcast %"class.WTF::Vector.1"* %3 to %"class.WTF::ConditionalDestructor.9"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorINS1_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES3_EELb0EED2Ev(%"class.WTF::ConditionalDestructor.9"* %4) #9
  %5 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2
  %6 = bitcast %"class.WTF::Vector"* %5 to %"class.WTF::ConditionalDestructor"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor"* %6) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceD0Ev(%"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink61V8UnionByteStringByteStringRecordOrByteStringSequenceSequenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 3
  %4 = bitcast %"class.WTF::Vector.1"* %3 to %"class.WTF::ConditionalDestructor.9"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorINS1_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES3_EELb0EED2Ev(%"class.WTF::ConditionalDestructor.9"* %4) #9
  %5 = getelementptr inbounds %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence", %"class.blink::V8UnionByteStringByteStringRecordOrByteStringSequenceSequence"* %0, i64 0, i32 2
  %6 = bitcast %"class.WTF::Vector"* %5 to %"class.WTF::ConditionalDestructor"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorINSt3__14pairINS_6StringES4_EELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor"* %6) #9
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_11IDLSequenceINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENSC_5LocalINSC_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.1"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.1", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.WTF::Vector.4", align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 134086656
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #9
  %12 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %186

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #9
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm(i64 %9) #9
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #9
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.1"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 4
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %28 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %28) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #9
  %29 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  br label %119

33:                                               ; preds = %26
  %34 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %35 = bitcast %"class.WTF::Vector.4"* %7 to i8*
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %37 = bitcast %"class.WTF::Vector.1"* %0 to i8*
  %38 = bitcast %"class.WTF::Vector.4"* %7 to i64*
  %39 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %7, i64 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %7, i64 0, i32 0, i32 0, i32 2
  %41 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %7, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.WTF::Vector.4"* %7 to i8**
  br label %46

43:                                               ; preds = %116
  %44 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %45 = icmp ult i32 %118, %44
  br i1 %45, label %46, label %119

46:                                               ; preds = %33, %43
  %47 = phi i32 [ 0, %33 ], [ %118, %43 ]
  %48 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %34, %"class.v8::Context"* %27, i32 %47) #9
  %49 = icmp eq %"class.v8::Value"* %48, null
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #9
  %52 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %53 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %53, i64 5
  %55 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %54, align 8
  call void %55(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %51) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #9
  br label %128

56:                                               ; preds = %46
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #9
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.4"* nonnull sret %7, %"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %48, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %57 = load i32, i32* %36, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #9
  br label %80

60:                                               ; preds = %56
  %61 = load i32, i32* %17, align 4
  %62 = load i32, i32* %16, align 8
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %79, label %64, !prof !3

64:                                               ; preds = %60
  %65 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %15, align 8
  %66 = zext i32 %61 to i64
  %67 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %65, i64 %66
  %68 = bitcast %"class.WTF::Vector.4"* %67 to i8*
  %69 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %65, i64 %66, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %65, i64 %66, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #9
  %71 = load i64, i64* %38, align 8
  %72 = bitcast %"class.WTF::Vector.4"* %67 to i64*
  store atomic i64 0, i64* %38 monotonic, align 8
  store atomic i64 %71, i64* %72 monotonic, align 8
  %73 = load i32, i32* %69, align 4
  %74 = load i32, i32* %39, align 8
  store i32 %74, i32* %69, align 4
  store i32 %73, i32* %39, align 8
  %75 = load i32, i32* %70, align 4
  %76 = load i32, i32* %40, align 4
  store i32 %76, i32* %70, align 4
  store i32 %75, i32* %40, align 4
  %77 = load i32, i32* %17, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %17, align 4
  br label %80

79:                                               ; preds = %60
  call void @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1"* nonnull %5, %"class.WTF::Vector.4"* nonnull dereferenceable(16) %7) #9
  br label %80

80:                                               ; preds = %79, %64, %59
  %81 = phi i32 [ 1, %59 ], [ 0, %64 ], [ 0, %79 ]
  %82 = load %"class.WTF::String"*, %"class.WTF::String"** %41, align 8
  %83 = icmp eq %"class.WTF::String"* %82, null
  br i1 %83, label %116, label %84, !prof !2

84:                                               ; preds = %80
  %85 = bitcast %"class.WTF::String"* %82 to i8*
  %86 = load i32, i32* %40, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %114, label %88, !prof !3

88:                                               ; preds = %84
  %89 = zext i32 %86 to i64
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 %89
  br label %91

91:                                               ; preds = %109, %88
  %92 = phi %"class.WTF::String"* [ %110, %109 ], [ %82, %88 ]
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #9
  br label %109

109:                                              ; preds = %108, %105, %91
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 1
  %111 = icmp eq %"class.WTF::String"* %110, %90
  br i1 %111, label %112, label %91

112:                                              ; preds = %109
  store i32 0, i32* %40, align 4
  %113 = load i8*, i8** %42, align 8
  br label %114

114:                                              ; preds = %112, %84
  %115 = phi i8* [ %113, %112 ], [ %85, %84 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %115) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %41, align 8
  br label %116

116:                                              ; preds = %114, %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #9
  %117 = icmp eq i32 %81, 0
  %118 = add nuw i32 %47, 1
  br i1 %117, label %43, label %128

119:                                              ; preds = %43, %31
  %120 = phi i8* [ %32, %31 ], [ %37, %43 ]
  %121 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %122 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %123 = bitcast %"class.WTF::Vector.1"* %5 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 16, i1 false) #9
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 0, i64* %123 monotonic, align 8
  store atomic i64 %124, i64* %125 monotonic, align 8
  %126 = load i32, i32* %16, align 8
  store i32 %126, i32* %121, align 8
  store i32 0, i32* %16, align 8
  %127 = load i32, i32* %17, align 4
  store i32 %127, i32* %122, align 4
  store i32 0, i32* %17, align 4
  br label %128

128:                                              ; preds = %116, %50, %119
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %28) #9
  %129 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %15, align 8
  %130 = icmp eq %"class.WTF::Vector.4"* %129, null
  br i1 %130, label %185, label %131, !prof !2

131:                                              ; preds = %128
  %132 = bitcast %"class.WTF::Vector.4"* %129 to i8*
  %133 = load i32, i32* %17, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %183, label %135, !prof !3

135:                                              ; preds = %131
  %136 = zext i32 %133 to i64
  %137 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %129, i64 %136
  br label %138

138:                                              ; preds = %177, %135
  %139 = phi %"class.WTF::Vector.4"* [ %178, %177 ], [ %129, %135 ]
  %140 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %139, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::String"*, %"class.WTF::String"** %140, align 8
  %142 = icmp eq %"class.WTF::String"* %141, null
  br i1 %142, label %177, label %143, !prof !2

143:                                              ; preds = %138
  %144 = bitcast %"class.WTF::String"* %141 to i8*
  %145 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %139, i64 0, i32 0, i32 0, i32 2
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %175, label %148, !prof !3

148:                                              ; preds = %143
  %149 = zext i32 %146 to i64
  %150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %141, i64 %149
  br label %151

151:                                              ; preds = %169, %148
  %152 = phi %"class.WTF::String"* [ %170, %169 ], [ %141, %148 ]
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %152, i64 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #9
  br label %169

169:                                              ; preds = %168, %165, %151
  %170 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %152, i64 1
  %171 = icmp eq %"class.WTF::String"* %170, %150
  br i1 %171, label %172, label %151

172:                                              ; preds = %169
  store i32 0, i32* %145, align 4
  %173 = bitcast %"class.WTF::Vector.4"* %139 to i8**
  %174 = load i8*, i8** %173, align 8
  br label %175

175:                                              ; preds = %172, %143
  %176 = phi i8* [ %174, %172 ], [ %144, %143 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %176) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %140, align 8
  br label %177

177:                                              ; preds = %175, %138
  %178 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %139, i64 1
  %179 = icmp eq %"class.WTF::Vector.4"* %178, %137
  br i1 %179, label %180, label %138

180:                                              ; preds = %177
  store i32 0, i32* %17, align 4
  %181 = bitcast %"class.WTF::Vector.1"* %5 to i8**
  %182 = load i8*, i8** %181, align 8
  br label %183

183:                                              ; preds = %180, %131
  %184 = phi i8* [ %182, %180 ], [ %132, %131 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %184) #9
  store %"class.WTF::Vector.4"* null, %"class.WTF::Vector.4"** %15, align 8
  br label %185

185:                                              ; preds = %128, %183
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br label %186

186:                                              ; preds = %185, %11
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.4"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #9
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.4"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #9
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0)) #9
  %12 = bitcast %"class.WTF::Vector.4"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.4"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0)) #9
  %26 = bitcast %"class.WTF::Vector.4"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.4"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #9
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.4"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.4", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 268173312
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #9
  %12 = bitcast %"class.WTF::Vector.4"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %165

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.4"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #9
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %9) #9
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.4"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %28 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %28) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #9
  %29 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = bitcast %"class.WTF::Vector.4"* %0 to i8*
  br label %119

33:                                               ; preds = %26
  %34 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %35 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7 to i8*
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %37 = bitcast %"class.WTF::Vector.4"* %0 to i8*
  %38 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 1, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  br label %44

41:                                               ; preds = %116
  %42 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %43 = icmp ult i32 %118, %42
  br i1 %43, label %44, label %119

44:                                               ; preds = %33, %41
  %45 = phi i32 [ 0, %33 ], [ %118, %41 ]
  %46 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %34, %"class.v8::Context"* %27, i32 %45) #9
  %47 = icmp eq %"class.v8::Value"* %46, null
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #9
  %50 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %51 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %51, i64 5
  %53 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %52, align 8
  call void %53(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %49) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #9
  br label %128

54:                                               ; preds = %44
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %35) #9
  call void @_ZN5blink17NativeValueTraitsINS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %7, %"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %46, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %55 = load i32, i32* %36, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %54
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #9
  br label %95

58:                                               ; preds = %54
  %59 = load i32, i32* %17, align 4
  %60 = load i32, i32* %16, align 8
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %94, label %62, !prof !3

62:                                               ; preds = %58
  %63 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %64 = zext i32 %59 to i64
  %65 = load %"class.v8::String"*, %"class.v8::String"** %38, align 8
  %66 = icmp eq %"class.v8::String"* %65, null
  br i1 %66, label %69, label %67, !prof !3

67:                                               ; preds = %62
  %68 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %65, i32 0) #9
  br label %89

69:                                               ; preds = %62
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %89, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %89

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i33
  %81 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #9
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !3

86:                                               ; preds = %77
  call void @llvm.trap() #9
  unreachable

87:                                               ; preds = %77
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %78, align 4
  br label %89

89:                                               ; preds = %87, %72, %69, %67
  %90 = phi %"class.WTF::StringImpl"* [ %68, %67 ], [ null, %69 ], [ %70, %72 ], [ %70, %87 ]
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 %64, i32 0, i32 0
  store %"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"** %91, align 8
  %92 = load i32, i32* %17, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %17, align 4
  br label %95

94:                                               ; preds = %58
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIN5blink8bindings30NativeValueTraitsStringAdapterEEEvOT_(%"class.WTF::Vector.4"* nonnull %5, %"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull dereferenceable(152) %7) #9
  br label %95

95:                                               ; preds = %94, %89, %57
  %96 = phi i32 [ 1, %57 ], [ 0, %89 ], [ 0, %94 ]
  %97 = load i8*, i8** %40, align 8
  store i8* null, i8** %40, align 8
  %98 = icmp eq i8* %97, null
  br i1 %98, label %100, label %99

99:                                               ; preds = %95
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %97) #9
  br label %100

100:                                              ; preds = %99, %95
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #9
  br label %116

116:                                              ; preds = %115, %112, %100
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %35) #9
  %117 = icmp eq i32 %96, 0
  %118 = add nuw i32 %45, 1
  br i1 %117, label %41, label %128

119:                                              ; preds = %41, %31
  %120 = phi i8* [ %32, %31 ], [ %37, %41 ]
  %121 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  %122 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %123 = bitcast %"class.WTF::Vector.4"* %5 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 16, i1 false) #9
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 0, i64* %123 monotonic, align 8
  store atomic i64 %124, i64* %125 monotonic, align 8
  %126 = load i32, i32* %16, align 8
  store i32 %126, i32* %121, align 8
  store i32 0, i32* %16, align 8
  %127 = load i32, i32* %17, align 4
  store i32 %127, i32* %122, align 4
  store i32 0, i32* %17, align 4
  br label %128

128:                                              ; preds = %116, %48, %119
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %28) #9
  %129 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %130 = icmp eq %"class.WTF::String"* %129, null
  br i1 %130, label %164, label %131, !prof !2

131:                                              ; preds = %128
  %132 = bitcast %"class.WTF::String"* %129 to i8*
  %133 = load i32, i32* %17, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %162, label %135, !prof !3

135:                                              ; preds = %131
  %136 = zext i32 %133 to i64
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %129, i64 %136
  br label %138

138:                                              ; preds = %156, %135
  %139 = phi %"class.WTF::String"* [ %157, %156 ], [ %129, %135 ]
  %140 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %139, i64 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #9
  br label %156

156:                                              ; preds = %155, %152, %138
  %157 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %139, i64 1
  %158 = icmp eq %"class.WTF::String"* %157, %137
  br i1 %158, label %159, label %138

159:                                              ; preds = %156
  store i32 0, i32* %17, align 4
  %160 = bitcast %"class.WTF::Vector.4"* %5 to i8**
  %161 = load i8*, i8** %160, align 8
  br label %162

162:                                              ; preds = %159, %131
  %163 = phi i8* [ %161, %159 ], [ %132, %131 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %163) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %164

164:                                              ; preds = %128, %162
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br label %165

165:                                              ; preds = %164, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.4"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.4", align 8
  %6 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = bitcast %"class.WTF::Vector.4"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #9
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %13, label %14, label %109

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6, i64 0, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %6, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  br label %21

21:                                               ; preds = %14, %107
  %22 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %23 = icmp eq %"class.v8::Value"* %22, null
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %21
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %25

25:                                               ; preds = %21, %24
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %16) #9
  call void @_ZN5blink17NativeValueTraitsINS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %6, %"class.v8::Isolate"* %1, %"class.v8::Value"* %22, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %26 = load i32, i32* %17, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %50, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.WTF::Vector.4"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #9
  %30 = load i8*, i8** %20, align 8
  store i8* null, i8** %20, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %28
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %30) #9
  br label %33

33:                                               ; preds = %32, %28
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #9
  br label %49

49:                                               ; preds = %33, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %16) #9
  br label %124

50:                                               ; preds = %25
  %51 = load i32, i32* %12, align 4
  %52 = load i32, i32* %11, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %50
  %55 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %56 = zext i32 %51 to i64
  %57 = load %"class.v8::String"*, %"class.v8::String"** %18, align 8
  %58 = icmp eq %"class.v8::String"* %57, null
  br i1 %58, label %61, label %59, !prof !3

59:                                               ; preds = %54
  %60 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %57, i32 0) #9
  br label %81

61:                                               ; preds = %54
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #9
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !3

78:                                               ; preds = %69
  call void @llvm.trap() #9
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %79, %64, %61, %59
  %82 = phi %"class.WTF::StringImpl"* [ %60, %59 ], [ null, %61 ], [ %62, %64 ], [ %62, %79 ]
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 %56, i32 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %83, align 8
  %84 = load i32, i32* %12, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %87

86:                                               ; preds = %50
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIN5blink8bindings30NativeValueTraitsStringAdapterEEEvOT_(%"class.WTF::Vector.4"* nonnull %5, %"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull dereferenceable(152) %6) #9
  br label %87

87:                                               ; preds = %81, %86
  %88 = load i8*, i8** %20, align 8
  store i8* null, i8** %20, align 8
  %89 = icmp eq i8* %88, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %87
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %88) #9
  br label %91

91:                                               ; preds = %90, %87
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #9
  br label %107

107:                                              ; preds = %91, %103, %106
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %16) #9
  %108 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %108, label %21, label %109

109:                                              ; preds = %107, %4
  %110 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %109
  %114 = bitcast %"class.WTF::Vector.4"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 16, i1 false) #9
  br label %124

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  %117 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %118 = bitcast %"class.WTF::Vector.4"* %5 to i64*
  %119 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store i64 0, i64* %119, align 8
  %120 = load i64, i64* %118, align 8
  %121 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 0, i64* %118 monotonic, align 8
  store atomic i64 %120, i64* %121 monotonic, align 8
  %122 = load i32, i32* %11, align 8
  store i32 %122, i32* %116, align 8
  store i32 0, i32* %11, align 8
  %123 = load i32, i32* %12, align 4
  store i32 %123, i32* %117, align 4
  store i32 0, i32* %12, align 4
  br label %124

124:                                              ; preds = %49, %115, %113
  %125 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %126 = icmp eq %"class.WTF::String"* %125, null
  br i1 %126, label %160, label %127, !prof !2

127:                                              ; preds = %124
  %128 = bitcast %"class.WTF::String"* %125 to i8*
  %129 = load i32, i32* %12, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %158, label %131, !prof !3

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %125, i64 %132
  br label %134

134:                                              ; preds = %152, %131
  %135 = phi %"class.WTF::String"* [ %153, %152 ], [ %125, %131 ]
  %136 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %135, i64 0, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #9
  br label %152

152:                                              ; preds = %151, %148, %134
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %135, i64 1
  %154 = icmp eq %"class.WTF::String"* %153, %133
  br i1 %154, label %155, label %134

155:                                              ; preds = %152
  store i32 0, i32* %12, align 4
  %156 = bitcast %"class.WTF::Vector.4"* %5 to i8**
  %157 = load i8*, i8** %156, align 8
  br label %158

158:                                              ; preds = %155, %127
  %159 = phi i8* [ %157, %155 ], [ %128, %127 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %159) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %10, align 8
  br label %160

160:                                              ; preds = %124, %158
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_19IDLByteStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %29

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %29

21:                                               ; preds = %10
  %22 = bitcast %"class.v8::Value"* %2 to %"class.v8::String"*
  %23 = tail call zeroext i1 @_ZNK2v86String19ContainsOnlyOneByteEv(%"class.v8::String"* %22) #9
  br i1 %23, label %24, label %29

24:                                               ; preds = %21
  %25 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %25, align 8
  %26 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %28 = bitcast %"class.std::__1::unique_ptr.222"* %27 to i64*
  store i64 0, i64* %28, align 8
  br label %61

29:                                               ; preds = %4, %10, %21
  %30 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #9
  br i1 %30, label %31, label %39

31:                                               ; preds = %29
  %32 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %33 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %32) #9
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %34, align 8
  %35 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %33) #9
  %36 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %38 = bitcast %"class.std::__1::unique_ptr.222"* %37 to i64*
  store i64 0, i64* %38, align 8
  br label %61

39:                                               ; preds = %29
  %40 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %40) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #9
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %42 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %41) #9
  %43 = icmp eq %"class.v8::String"* %42, null
  br i1 %43, label %44, label %51

44:                                               ; preds = %39
  %45 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #9
  %46 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %47 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %47, i64 5
  %49 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %48, align 8
  call void %49(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %45) #9
  %50 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 152, i1 false)
  br label %60

51:                                               ; preds = %39
  %52 = call zeroext i1 @_ZNK2v86String19ContainsOnlyOneByteEv(%"class.v8::String"* nonnull %42) #9
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i64 0, i64 0)) #9
  %54 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 152, i1 false)
  br label %60

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %42, %"class.v8::String"** %56, align 8
  %57 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %57, align 8
  %58 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %59 = bitcast %"class.std::__1::unique_ptr.222"* %58 to i64*
  store i64 0, i64* %59, align 8
  br label %60

60:                                               ; preds = %55, %53, %44
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %40) #9
  br label %61

61:                                               ; preds = %60, %31, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare zeroext i1 @_ZNK2v86String19ContainsOnlyOneByteEv(%"class.v8::String"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIN5blink8bindings30NativeValueTraitsStringAdapterEEEvOT_(%"class.WTF::Vector.4"*, %"class.blink::bindings::NativeValueTraitsStringAdapter"* dereferenceable(152)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  br i1 %15, label %18, label %45, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq %"class.WTF::String"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %20) #9
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.WTF::String"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.WTF::String"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !2

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #9
  %36 = bitcast %"class.WTF::Vector.4"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  %40 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.WTF::String"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.WTF::String"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %1, i64 0, i32 0, i32 0
  %50 = load %"class.v8::String"*, %"class.v8::String"** %49, align 8
  %51 = icmp eq %"class.v8::String"* %50, null
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %45
  %53 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %50, i32 0) #9
  br label %75

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %1, i64 0, i32 1, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #9
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !3

72:                                               ; preds = %63
  tail call void @llvm.trap() #9
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %52, %54, %58, %73
  %76 = phi %"class.WTF::StringImpl"* [ %53, %52 ], [ null, %54 ], [ %56, %58 ], [ %56, %73 ]
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 %48, i32 0, i32 0
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %77, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1"*, %"class.WTF::Vector.4"* dereferenceable(16)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %6, align 8
  %8 = icmp ugt %"class.WTF::Vector.4"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::Vector.4"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::Vector.4"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm(i64 %27) #9
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #9
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.WTF::Vector.4"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E16ReallocateBufferEj(%"class.WTF::Vector.1"* %0, i32 %22) #9
  %36 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.WTF::Vector.4"* %1 to i64
  %39 = ptrtoint %"class.WTF::Vector.4"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 4
  %42 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"class.WTF::Vector.4"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm(i64 %55) #9
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #9
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 4
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.WTF::Vector.4"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E16ReallocateBufferEj(%"class.WTF::Vector.1"* %0, i32 %50) #9
  %64 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.WTF::Vector.4"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.WTF::Vector.4"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.WTF::Vector.4"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %69, i64 %72
  %74 = bitcast %"class.WTF::Vector.4"* %73 to i8*
  %75 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %69, i64 %72, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %69, i64 %72, i32 0, i32 0, i32 2
  %77 = bitcast %"class.WTF::Vector.4"* %70 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 16, i1 false) #9
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.WTF::Vector.4"* %73 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store atomic i64 %78, i64* %79 monotonic, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %70, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %75, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %75, align 4
  store i32 %81, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %70, i64 0, i32 0, i32 0, i32 2
  %84 = load i32, i32* %76, align 4
  %85 = load i32, i32* %83, align 4
  store i32 %85, i32* %76, align 4
  store i32 %84, i32* %83, align 4
  %86 = load i32, i32* %3, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_INS_6StringELj0ENS_18PartitionAllocatorEEELj0ES2_E16ReallocateBufferEj(%"class.WTF::Vector.1"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %70

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %68, label %14

14:                                               ; preds = %4, %64
  %15 = phi %"class.WTF::Vector.4"* [ %66, %64 ], [ %6, %4 ]
  %16 = phi %"class.WTF::Vector.4"* [ %65, %64 ], [ null, %4 ]
  %17 = bitcast %"class.WTF::Vector.4"* %16 to i8*
  %18 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %16, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast %"class.WTF::Vector.4"* %15 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #9
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.WTF::Vector.4"* %16 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %15, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %18, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %18, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %15, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %19, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %19, align 4
  store i32 %27, i32* %26, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %15, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::String"*, %"class.WTF::String"** %29, align 8
  %31 = icmp eq %"class.WTF::String"* %30, null
  br i1 %31, label %64, label %32, !prof !2

32:                                               ; preds = %14
  %33 = bitcast %"class.WTF::String"* %30 to i8*
  %34 = icmp eq i32 %27, 0
  br i1 %34, label %62, label %35, !prof !3

35:                                               ; preds = %32
  %36 = zext i32 %27 to i64
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 %36
  br label %38

38:                                               ; preds = %56, %35
  %39 = phi %"class.WTF::String"* [ %57, %56 ], [ %30, %35 ]
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #9
  br label %56

56:                                               ; preds = %55, %52, %38
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 1
  %58 = icmp eq %"class.WTF::String"* %57, %37
  br i1 %58, label %59, label %38

59:                                               ; preds = %56
  store i32 0, i32* %26, align 4
  %60 = bitcast %"class.WTF::Vector.4"* %15 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %32
  %63 = phi i8* [ %61, %59 ], [ %33, %32 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %63) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %29, align 8
  br label %64

64:                                               ; preds = %62, %14
  %65 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %16, i64 1
  %66 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %15, i64 1
  %67 = icmp eq %"class.WTF::Vector.4"* %66, %10
  br i1 %67, label %68, label %14

68:                                               ; preds = %64, %4
  %69 = bitcast %"class.WTF::Vector.4"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %69) #9
  br label %149

70:                                               ; preds = %2
  %71 = zext i32 %1 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorINS_6StringELj0ES0_EEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #9
  %74 = lshr i64 %72, 4
  %75 = ptrtoint i8* %73 to i64
  %76 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %76, align 8
  %78 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %77, i64 %80
  %82 = icmp eq i32 %79, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %70
  %84 = bitcast %"class.WTF::Vector.4"* %77 to i8*
  br label %144

85:                                               ; preds = %70
  %86 = bitcast i8* %73 to %"class.WTF::Vector.4"*
  br label %87

87:                                               ; preds = %85, %137
  %88 = phi %"class.WTF::Vector.4"* [ %139, %137 ], [ %77, %85 ]
  %89 = phi %"class.WTF::Vector.4"* [ %138, %137 ], [ %86, %85 ]
  %90 = bitcast %"class.WTF::Vector.4"* %89 to i8*
  %91 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %89, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %89, i64 0, i32 0, i32 0, i32 2
  %93 = bitcast %"class.WTF::Vector.4"* %88 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #9
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.WTF::Vector.4"* %89 to i64*
  store atomic i64 0, i64* %93 monotonic, align 8
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %88, i64 0, i32 0, i32 0, i32 1
  %97 = load i32, i32* %91, align 4
  %98 = load i32, i32* %96, align 4
  store i32 %98, i32* %91, align 4
  store i32 %97, i32* %96, align 4
  %99 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %88, i64 0, i32 0, i32 0, i32 2
  %100 = load i32, i32* %92, align 4
  %101 = load i32, i32* %99, align 4
  store i32 %101, i32* %92, align 4
  store i32 %100, i32* %99, align 4
  %102 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %88, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::String"*, %"class.WTF::String"** %102, align 8
  %104 = icmp eq %"class.WTF::String"* %103, null
  br i1 %104, label %137, label %105, !prof !2

105:                                              ; preds = %87
  %106 = bitcast %"class.WTF::String"* %103 to i8*
  %107 = icmp eq i32 %100, 0
  br i1 %107, label %135, label %108, !prof !3

108:                                              ; preds = %105
  %109 = zext i32 %100 to i64
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %103, i64 %109
  br label %111

111:                                              ; preds = %129, %108
  %112 = phi %"class.WTF::String"* [ %130, %129 ], [ %103, %108 ]
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #9
  br label %129

129:                                              ; preds = %128, %125, %111
  %130 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 1
  %131 = icmp eq %"class.WTF::String"* %130, %110
  br i1 %131, label %132, label %111

132:                                              ; preds = %129
  store i32 0, i32* %99, align 4
  %133 = bitcast %"class.WTF::Vector.4"* %88 to i8**
  %134 = load i8*, i8** %133, align 8
  br label %135

135:                                              ; preds = %132, %105
  %136 = phi i8* [ %134, %132 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %136) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %102, align 8
  br label %137

137:                                              ; preds = %135, %87
  %138 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %89, i64 1
  %139 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %88, i64 1
  %140 = icmp eq %"class.WTF::Vector.4"* %139, %81
  br i1 %140, label %141, label %87

141:                                              ; preds = %137
  %142 = bitcast %"class.WTF::Vector.1"* %0 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %83, %141
  %145 = phi i8* [ %143, %141 ], [ %84, %83 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %145) #9
  %146 = bitcast %"class.WTF::Vector.1"* %0 to i64*
  store atomic i64 %75, i64* %146 monotonic, align 8
  %147 = trunc i64 %74 to i32
  %148 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %147, i32* %148, align 8
  br label %149

149:                                              ; preds = %144, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #9
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %40, i8* %41) #9
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #9
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #9
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::bindings::UnionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::bindings::UnionBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::bindings::UnionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::bindings::UnionBase"*)***
  %4 = load void (%"class.blink::bindings::UnionBase"*)**, void (%"class.blink::bindings::UnionBase"*)*** %3, align 8
  %5 = load void (%"class.blink::bindings::UnionBase"*)*, void (%"class.blink::bindings::UnionBase"*)** %4, align 8
  tail call void %5(%"class.blink::bindings::UnionBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare %"class.v8::Array"* @_ZN2v86Object19GetOwnPropertyNamesENS_5LocalINS_7ContextEEENS_14PropertyFilterENS_17KeyConversionModeE(%"class.v8::Object"*, %"class.v8::Context"*, i32, i32) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object24GetOwnPropertyDescriptorENS_5LocalINS_7ContextEEENS1_INS_4NameEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair"* @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %25
  ret %"struct.std::__1::pair"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.257"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RKjEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.254"*, %"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.257"*, %"struct.WTF::KeyValuePair.257"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.257"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.257"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.254"* %0, %"struct.WTF::KeyValuePair.257"* null)
  %9 = load %"struct.WTF::KeyValuePair.257"*, %"struct.WTF::KeyValuePair.257"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.257"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #9
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.257"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.257"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.257"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #9
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.257"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.257"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.257"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #9
  %72 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.257"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #9
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #9
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.257"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #9
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %79, i64 0, i32 1
  %120 = load i32, i32* %2, align 4
  store i32 %120, i32* %119, align 4
  %121 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair.257"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.254"* %0, %"struct.WTF::KeyValuePair.257"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair.257"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair.257"*, i8 } undef, %"struct.WTF::KeyValuePair.257"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair.257"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair.257"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.257"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.254"*, %"struct.WTF::KeyValuePair.257"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEjEEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.257"*
  %37 = call %"struct.WTF::KeyValuePair.257"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.254"* %0, %"struct.WTF::KeyValuePair.257"* %36, i32 %32, %"struct.WTF::KeyValuePair.257"* %1) #9
  ret %"struct.WTF::KeyValuePair.257"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.257"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.254"*, %"struct.WTF::KeyValuePair.257"*, i32, %"struct.WTF::KeyValuePair.257"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.254", align 8
  %6 = bitcast %"class.WTF::HashTable.254"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.254"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.257"* %1, %"struct.WTF::KeyValuePair.257"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.257"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.254"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.254"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.257"*, %"struct.WTF::KeyValuePair.257"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.257"* %22 to i64
  br label %71

24:                                               ; preds = %114
  %25 = bitcast %"class.WTF::HashTable.254"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.254"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %115, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.257"* [ null, %16 ], [ %118, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %116, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.257"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.257"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #9
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #9
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair.257"* %33

71:                                               ; preds = %21, %114
  %72 = phi i64 [ %115, %114 ], [ %23, %21 ]
  %73 = phi i32 [ %116, %114 ], [ %13, %21 ]
  %74 = phi %"struct.WTF::KeyValuePair.257"* [ %117, %114 ], [ %22, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair.257"* [ %118, %114 ], [ null, %21 ]
  %76 = phi i32 [ %119, %114 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"struct.WTF::KeyValuePair.257"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %114
    i64 0, label %114
  ]

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %78, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair.257"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.254"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %83) #9
  %85 = extractvalue { %"struct.WTF::KeyValuePair.257"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #9
  br label %102

102:                                              ; preds = %82, %98, %101
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair.257"* %85 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %74, i64 %77, i32 1
  %107 = load i32, i32* %106, align 8
  store i32 %107, i32* %105, align 8
  %108 = load %"struct.WTF::KeyValuePair.257"*, %"struct.WTF::KeyValuePair.257"** %15, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %108, i64 %77
  %110 = icmp eq %"struct.WTF::KeyValuePair.257"* %109, %3
  %111 = select i1 %110, %"struct.WTF::KeyValuePair.257"* %85, %"struct.WTF::KeyValuePair.257"* %75
  %112 = load i32, i32* %12, align 8
  %113 = ptrtoint %"struct.WTF::KeyValuePair.257"* %108 to i64
  br label %114

114:                                              ; preds = %71, %71, %102
  %115 = phi i64 [ %72, %71 ], [ %113, %102 ], [ %72, %71 ]
  %116 = phi i32 [ %73, %71 ], [ %112, %102 ], [ %73, %71 ]
  %117 = phi %"struct.WTF::KeyValuePair.257"* [ %74, %71 ], [ %108, %102 ], [ %74, %71 ]
  %118 = phi %"struct.WTF::KeyValuePair.257"* [ %75, %71 ], [ %111, %102 ], [ %75, %71 ]
  %119 = add i32 %76, 1
  %120 = icmp eq i32 %119, %116
  br i1 %120, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.257"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.254"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.257"*, %"struct.WTF::KeyValuePair.257"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.254", %"class.WTF::HashTable.254"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #9
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.257"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.257"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.257"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.257"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.257"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.257"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.257"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.257"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #9
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.257"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.257"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.257", %"struct.WTF::KeyValuePair.257"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.257"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.257"*, i8 } undef, %"struct.WTF::KeyValuePair.257"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.257"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.257"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair"* @_ZNSt3__14pairIN3WTF6StringES2_EaSERKS3_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #9
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #9
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"struct.std::__1::pair"* %0 to i64*
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #9
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %52
  tail call void @llvm.trap() #9
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::String"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #9
  br label %83

83:                                               ; preds = %64, %79, %82
  ret %"struct.std::__1::pair"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.4"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.4"*, %"class.WTF::Vector.4"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.4"* %1, %0
  br i1 %3, label %219, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #9
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector.4"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #9
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !2

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %88) #9
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %"class.WTF::String"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.WTF::String"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !2

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #9
  %108 = bitcast %"class.WTF::Vector.4"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #9
  %112 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %116, %167
  %126 = phi %"class.WTF::String"* [ %169, %167 ], [ %123, %116 ]
  %127 = phi %"class.WTF::String"* [ %168, %167 ], [ %119, %116 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #9
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !3

145:                                              ; preds = %136
  tail call void @llvm.trap() #9
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %125
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::String"* %126 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #9
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %170 = icmp eq %"class.WTF::String"* %168, %121
  br i1 %170, label %171, label %125

171:                                              ; preds = %167
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  br label %175

175:                                              ; preds = %171, %116
  %176 = phi %"class.WTF::String"* [ %174, %171 ], [ %123, %116 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %116 ]
  %178 = phi %"class.WTF::String"* [ %172, %171 ], [ %119, %116 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %217, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %179
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %211
  %188 = phi %"class.WTF::String"* [ %212, %211 ], [ %185, %184 ]
  %189 = phi %"class.WTF::String"* [ %213, %211 ], [ %186, %184 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #9
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !3

208:                                              ; preds = %199
  tail call void @llvm.trap() #9
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %187
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %214 = icmp eq %"class.WTF::String"* %213, %182
  br i1 %214, label %215, label %187

215:                                              ; preds = %211
  %216 = load i32, i32* %7, align 4
  br label %217

217:                                              ; preds = %215, %175
  %218 = phi i32 [ %216, %215 ], [ %177, %175 ]
  store i32 %218, i32* %5, align 4
  br label %219

219:                                              ; preds = %2, %217
  ret %"class.WTF::Vector.4"* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink8bindings16ToV8HelperRecordINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEN3WTF6VectorINSt3__14pairINS5_6StringES9_EELj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINSD_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Isolate"*
  %11 = bitcast %"class.v8::Context"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #9
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi %"class.v8::Context"* [ %14, %9 ], [ null, %2 ]
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %16) #9
  %17 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %5) #9
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %16) #9
  %18 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %19 = icmp eq %"class.v8::Context"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %21, align 8
  %23 = bitcast %"class.v8::Context"* %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %22, i64 %24) #9
  %26 = bitcast i64* %25 to %"class.v8::Context"*
  br label %27

27:                                               ; preds = %15, %20
  %28 = phi %"class.v8::Context"* [ %26, %20 ], [ null, %15 ]
  %29 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %29, align 8
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %99, label %36

36:                                               ; preds = %27
  %37 = bitcast %"class.WTF::StringView"* %3 to i8*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %40 = bitcast i8** %39 to %"class.WTF::StringImpl"**
  %41 = bitcast %"class.WTF::StringView"* %3 to i64*
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %45

43:                                               ; preds = %90
  %44 = icmp eq %"struct.std::__1::pair"* %98, %34
  br i1 %44, label %99, label %45

45:                                               ; preds = %36, %43
  %46 = phi %"struct.std::__1::pair"* [ %30, %36 ], [ %98, %43 ]
  %47 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #9
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 0, i32 1, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %45
  store i8* null, i8** %39, align 8
  %52 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %52, i64* %41, align 8
  br label %57

53:                                               ; preds = %45
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %38, align 8
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 1
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %40, align 8
  br label %57

57:                                               ; preds = %51, %53
  %58 = phi i32 [ %55, %53 ], [ 0, %51 ]
  store i32 %58, i32* %42, align 8
  %59 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %47, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #9
  %60 = bitcast %"class.v8::String"* %59 to %"class.v8::Value"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #9
  %61 = icmp eq %"class.v8::String"* %59, null
  br i1 %61, label %101, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %73

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  %72 = bitcast %"class.WTF::StringImpl"* %71 to i8*
  br label %73

73:                                               ; preds = %66, %68
  %74 = phi i8* [ null, %66 ], [ %72, %68 ]
  %75 = phi %"class.WTF::StringImpl"* [ %67, %66 ], [ %64, %68 ]
  %76 = phi i32 [ 0, %66 ], [ %70, %68 ]
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %73
  %82 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %5, i8* %74, i32 1, i32 %76) #9
  %83 = icmp eq %"class.v8::String"* %82, null
  br i1 %83, label %84, label %90, !prof !3

84:                                               ; preds = %81
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %90

85:                                               ; preds = %73
  %86 = bitcast i8* %74 to i16*
  %87 = call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %5, i16* %86, i32 1, i32 %76) #9
  %88 = icmp eq %"class.v8::String"* %87, null
  br i1 %88, label %89, label %90, !prof !3

89:                                               ; preds = %85
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %90

90:                                               ; preds = %81, %84, %85, %89
  %91 = phi %"class.v8::String"* [ %82, %81 ], [ null, %84 ], [ %87, %85 ], [ null, %89 ]
  %92 = bitcast %"class.v8::String"* %91 to %"class.v8::Name"*
  %93 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %17, %"class.v8::Context"* %28, %"class.v8::Name"* %92, %"class.v8::Value"* nonnull %60) #9
  %94 = trunc i16 %93 to i8
  %95 = icmp eq i8 %94, 0
  %96 = icmp ult i16 %93, 256
  %97 = or i1 %96, %95
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 1
  br i1 %97, label %101, label %43, !prof !4

99:                                               ; preds = %43, %27
  %100 = bitcast %"class.v8::Object"* %17 to %"class.v8::Value"*
  br label %101

101:                                              ; preds = %57, %90, %99
  %102 = phi %"class.v8::Value"* [ %100, %99 ], [ null, %90 ], [ null, %57 ]
  ret %"class.v8::Value"* %102
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #9
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #9
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #9
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !3

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #9
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_11IDLSequenceINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEEEN3WTF6VectorINS8_INS7_6StringELj0ENS7_18PartitionAllocatorEEELj0ESA_EEEEN2v810MaybeLocalINSD_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"*, %"class.WTF::Vector.1"* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.v8::Context"*, %"class.v8::Context"** %5, align 8
  %7 = icmp eq %"class.v8::Context"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::Isolate"* %4 to %"class.v8::internal::Isolate"*
  %10 = bitcast %"class.v8::Context"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %9, i64 %11) #9
  %13 = bitcast i64* %12 to %"class.v8::Context"*
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi %"class.v8::Context"* [ %13, %8 ], [ null, %2 ]
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %15) #9
  %16 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, -1
  br i1 %18, label %20, label %19, !prof !2

19:                                               ; preds = %14
  tail call void @llvm.trap() #9
  unreachable

20:                                               ; preds = %14
  %21 = tail call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %4, i32 %17) #9
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %15) #9
  %22 = load %"class.v8::Context"*, %"class.v8::Context"** %5, align 8
  %23 = icmp eq %"class.v8::Context"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %27 = bitcast %"class.v8::Context"* %22 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %26, i64 %28) #9
  %30 = bitcast i64* %29 to %"class.v8::Context"*
  br label %31

31:                                               ; preds = %20, %24
  %32 = phi %"class.v8::Context"* [ %30, %24 ], [ null, %20 ]
  %33 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %1, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::Vector.4"*, %"class.WTF::Vector.4"** %33, align 8
  %35 = load i32, i32* %16, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %34, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %56, label %39

39:                                               ; preds = %31
  %40 = bitcast %"class.v8::Array"* %21 to %"class.v8::Object"*
  br label %41

41:                                               ; preds = %39, %52
  %42 = phi i32 [ 0, %39 ], [ %53, %52 ]
  %43 = phi %"class.WTF::Vector.4"* [ %34, %39 ], [ %54, %52 ]
  %44 = tail call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINSA_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %0, %"class.WTF::Vector.4"* dereferenceable(16) %43) #9
  %45 = icmp eq %"class.v8::Value"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %41
  %47 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %40, %"class.v8::Context"* %32, i32 %42, %"class.v8::Value"* nonnull %44) #9
  %48 = trunc i16 %47 to i8
  %49 = icmp eq i8 %48, 0
  %50 = icmp ult i16 %47, 256
  %51 = or i1 %50, %49
  br i1 %51, label %58, label %52, !prof !4

52:                                               ; preds = %46
  %53 = add i32 %42, 1
  %54 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %43, i64 1
  %55 = icmp eq %"class.WTF::Vector.4"* %54, %37
  br i1 %55, label %56, label %41

56:                                               ; preds = %52, %31
  %57 = bitcast %"class.v8::Array"* %21 to %"class.v8::Value"*
  br label %58

58:                                               ; preds = %41, %46, %56
  %59 = phi %"class.v8::Value"* [ %57, %56 ], [ null, %46 ], [ null, %41 ]
  ret %"class.v8::Value"* %59
}

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_19IDLByteStringBaseV2ILNS0_17IDLStringConvModeE0EEEN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINSA_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"*, %"class.WTF::Vector.4"* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::Isolate"* %5 to %"class.v8::internal::Isolate"*
  %11 = bitcast %"class.v8::Context"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %10, i64 %12) #9
  %14 = bitcast i64* %13 to %"class.v8::Context"*
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi %"class.v8::Context"* [ %14, %9 ], [ null, %2 ]
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %16) #9
  %17 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %1, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %15
  tail call void @llvm.trap() #9
  unreachable

21:                                               ; preds = %15
  %22 = tail call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %5, i32 %18) #9
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %16) #9
  %23 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %24 = icmp eq %"class.v8::Context"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %26, align 8
  %28 = bitcast %"class.v8::Context"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %27, i64 %29) #9
  %31 = bitcast i64* %30 to %"class.v8::Context"*
  br label %32

32:                                               ; preds = %21, %25
  %33 = phi %"class.v8::Context"* [ %31, %25 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** %34, align 8
  %36 = load i32, i32* %17, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %76, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.WTF::StringView"* %3 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %44 = bitcast i8** %43 to %"class.WTF::StringImpl"**
  %45 = bitcast %"class.WTF::StringView"* %3 to i64*
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %47 = bitcast %"class.v8::Array"* %22 to %"class.v8::Object"*
  br label %48

48:                                               ; preds = %40, %72
  %49 = phi i32 [ 0, %40 ], [ %73, %72 ]
  %50 = phi %"class.WTF::String"* [ %35, %40 ], [ %74, %72 ]
  %51 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #9
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %48
  store i8* null, i8** %43, align 8
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %56, i64* %45, align 8
  br label %61

57:                                               ; preds = %48
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %42, align 8
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %44, align 8
  br label %61

61:                                               ; preds = %55, %57
  %62 = phi i32 [ %59, %57 ], [ 0, %55 ]
  store i32 %62, i32* %46, align 8
  %63 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %51, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  %64 = icmp eq %"class.v8::String"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = bitcast %"class.v8::String"* %63 to %"class.v8::Value"*
  %67 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %47, %"class.v8::Context"* %33, i32 %49, %"class.v8::Value"* nonnull %66) #9
  %68 = trunc i16 %67 to i8
  %69 = icmp eq i8 %68, 0
  %70 = icmp ult i16 %67, 256
  %71 = or i1 %70, %69
  br i1 %71, label %78, label %72, !prof !4

72:                                               ; preds = %65
  %73 = add i32 %49, 1
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 1
  %75 = icmp eq %"class.WTF::String"* %74, %38
  br i1 %75, label %76, label %48

76:                                               ; preds = %72, %32
  %77 = bitcast %"class.v8::Array"* %22 to %"class.v8::Value"*
  br label %78

78:                                               ; preds = %61, %65, %76
  %79 = phi %"class.v8::Value"* [ %77, %76 ], [ null, %65 ], [ null, %61 ]
  ret %"class.v8::Value"* %79
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2002, i32 2000}
