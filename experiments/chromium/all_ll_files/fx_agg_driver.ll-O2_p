; ModuleID = '../../third_party/pdfium/core/fxge/agg/fx_agg_driver.cpp'
source_filename = "../../third_party/pdfium/core/fxge/agg/fx_agg_driver.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon = type { %class.CFX_FloatRect }
%class.CFX_FloatRect = type { float, float, float, float }
%"struct.pdfium::agg::conv_dash" = type { %"class.pdfium::agg::conv_adaptor_vcgen.base", [4 x i8] }
%"class.pdfium::agg::conv_adaptor_vcgen.base" = type <{ %"class.pdfium::agg::path_storage"*, %"class.pdfium::agg::vcgen_dash", %"struct.pdfium::agg::null_markers", [3 x i8], i32, i32, float, float }>
%"class.pdfium::agg::path_storage" = type <{ i32, i32, i32, [4 x i8], float**, i8**, i32, [4 x i8] }>
%"class.pdfium::agg::vcgen_dash" = type <{ [32 x float], float, i32, float, float, float, i32, float, [4 x i8], %"struct.pdfium::agg::vertex_dist"*, %"struct.pdfium::agg::vertex_dist"*, %"class.pdfium::agg::vertex_sequence", i32, i32, i32, [4 x i8] }>
%"struct.pdfium::agg::vertex_dist" = type { float, float, float }
%"class.pdfium::agg::vertex_sequence" = type { %"class.pdfium::agg::pod_deque.base.88", [4 x i8] }
%"class.pdfium::agg::pod_deque.base.88" = type <{ i32, i32, i32, [4 x i8], %"struct.pdfium::agg::vertex_dist"**, i32 }>
%"struct.pdfium::agg::null_markers" = type { i8 }
%"struct.pdfium::agg::conv_stroke" = type { %"class.pdfium::agg::conv_adaptor_vcgen.base.94", [4 x i8] }
%"class.pdfium::agg::conv_adaptor_vcgen.base.94" = type <{ %"struct.pdfium::agg::conv_dash"*, %"class.pdfium::agg::vcgen_stroke", %"struct.pdfium::agg::null_markers", [3 x i8], i32, i32, float, float }>
%"class.pdfium::agg::vcgen_stroke" = type { %"class.pdfium::agg::vertex_sequence.90", %"class.pdfium::agg::pod_deque", float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.pdfium::agg::vertex_sequence.90" = type { %"class.pdfium::agg::pod_deque.base.92", [4 x i8] }
%"class.pdfium::agg::pod_deque.base.92" = type <{ i32, i32, i32, [4 x i8], %"struct.pdfium::agg::vertex_dist_cmd"**, i32 }>
%"struct.pdfium::agg::vertex_dist_cmd" = type { %"struct.pdfium::agg::vertex_dist", i32 }
%"class.pdfium::agg::pod_deque" = type <{ i32, i32, i32, [4 x i8], %"struct.pdfium::agg::point_type"**, i32, [4 x i8] }>
%"struct.pdfium::agg::point_type" = type { float, float, i32 }
%"struct.pdfium::agg::conv_stroke.95" = type { %"class.pdfium::agg::conv_adaptor_vcgen.base.97", [4 x i8] }
%"class.pdfium::agg::conv_adaptor_vcgen.base.97" = type <{ %"class.pdfium::agg::path_storage"*, %"class.pdfium::agg::vcgen_stroke", %"struct.pdfium::agg::null_markers", [3 x i8], i32, i32, float, float }>
%"class.pdfium::CFX_AggDeviceDriver" = type { %class.RenderDeviceDriverIface, %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.1", %"class.std::__1::vector", %struct.CFX_FillRenderOptions, i8, i8, %"class.fxcrt::RetainPtr" }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.CFX_ClipRgn* }
%class.CFX_ClipRgn = type { i8, %struct.FX_RECT, %"class.fxcrt::RetainPtr" }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::unique_ptr.1"* }
%struct.CFX_FillRenderOptions = type { i8, i8 }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr", %"class.std::__1::vector.8" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { i32*, i32*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i32* }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.13", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { i8* }
%class.CFX_DefaultRenderDevice = type { %class.CFX_RenderDevice }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.72" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.RenderDeviceDriverIface* }
%class.TextCharPos = type opaque
%class.CFX_Font = type opaque
%class.CFX_Matrix = type { float, float, float, float, float, float }
%struct.CFX_TextRenderOptions = type opaque
%"class.pdfium::agg::rasterizer_scanline_aa" = type { %"class.pdfium::agg::outline_aa", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.pdfium::agg::rect_base", i8, i32, [4 x i8] }
%"class.pdfium::agg::outline_aa" = type <{ i32, i32, i32, i32, %"struct.pdfium::agg::cell_aa"**, %"struct.pdfium::agg::cell_aa"*, %"class.pdfium::agg::pod_array", %"class.pdfium::agg::pod_array.17", %"struct.pdfium::agg::cell_aa", i32, i32, i32, i32, i32, i32, i8, [7 x i8] }>
%"class.pdfium::agg::pod_array" = type { i32, i32, %"struct.pdfium::agg::cell_aa"** }
%"class.pdfium::agg::pod_array.17" = type { i32, i32, %"struct.pdfium::agg::outline_aa::sorted_y"* }
%"struct.pdfium::agg::outline_aa::sorted_y" = type { i32, i32 }
%"struct.pdfium::agg::cell_aa" = type { i32, i32, i32, i32 }
%"struct.pdfium::agg::rect_base" = type { i32, i32, i32, i32 }
%"class.pdfium::agg::scanline_u" = type { i32, i32, i32, i32, i8*, %"struct.pdfium::agg::scanline_u<unsigned char>::span"*, %"struct.pdfium::agg::scanline_u<unsigned char>::span"* }
%"struct.pdfium::agg::scanline_u<unsigned char>::span" = type { i16, i16, i8* }
%class.CFX_PathData = type { %"class.std::__1::vector.18" }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.20" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.FX_PATHPOINT* }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%"class.pdfium::agg::curve4" = type { %"class.pdfium::agg::curve4_div" }
%"class.pdfium::agg::curve4_div" = type { float, float, i32, [4 x i8], %"class.pdfium::agg::pod_deque" }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { float*, float*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { float* }
%"class.pdfium::(anonymous namespace)::CFX_Renderer" = type { i32, i32, i32, i32, i32, i32, i8, i8, %struct.FX_RECT, %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.32", { i64, i64 } }
%"class.fxcrt::UnownedPtr.32" = type { %class.CFX_ClipRgn* }
%"class.fxcrt::RetainPtr.33" = type { %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.CFX_DIBBase* }
%struct.FXDIB_ResampleOptions = type { i8, i8, i8, i8 }
%class.CFX_BitmapComposer = type { %class.ScanlineComposerIface, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.32", i16, i32, i32, i32, i32, i32, i32, %"class.fxcrt::RetainPtr", %class.CFX_ScanlineCompositor, i8, i8, i8, i8, i32, %"class.std::__1::vector.41", %"class.std::__1::vector.41", %"class.std::__1::vector.41", %"class.std::__1::vector.41" }
%class.ScanlineComposerIface = type { i32 (...)** }
%class.CFX_ScanlineCompositor = type <{ i32, i16, i16, %"class.CFX_ScanlineCompositor::Palette", i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"class.CFX_ScanlineCompositor::Palette" = type { i64, i64, %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { i8*, i8*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%class.CFX_ImageStretcher = type <{ %"class.fxcrt::UnownedPtr.47", %"class.fxcrt::RetainPtr.33", %"class.std::__1::unique_ptr.48", %struct.FXDIB_ResampleOptions, i32, i32, %struct.FX_RECT, i16, [2 x i8] }>
%"class.fxcrt::UnownedPtr.47" = type { %class.ScanlineComposerIface* }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.CStretchEngine* }
%class.CStretchEngine = type opaque
%class.PauseIndicatorIface = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %class.CFX_ImageRenderer* }
%class.CFX_ImageRenderer = type <{ %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.32", %class.CFX_Matrix, %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63", %class.CFX_BitmapComposer, %struct.FX_RECT, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %class.CFX_ImageTransformer* }
%class.CFX_ImageTransformer = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.CFX_ImageStretcher* }
%class.CPDF_ShadingPattern = type opaque
%"class.pdfium::agg::conv_adaptor_vcgen.89" = type <{ %"struct.pdfium::agg::conv_dash"*, %"class.pdfium::agg::vcgen_stroke", %"struct.pdfium::agg::null_markers", [3 x i8], i32, i32, float, float, [4 x i8] }>
%"class.pdfium::agg::conv_adaptor_vcgen" = type <{ %"class.pdfium::agg::path_storage"*, %"class.pdfium::agg::vcgen_dash", %"struct.pdfium::agg::null_markers", [3 x i8], i32, i32, float, float, [4 x i8] }>
%"class.pdfium::agg::conv_adaptor_vcgen.96" = type <{ %"class.pdfium::agg::path_storage"*, %"class.pdfium::agg::vcgen_stroke", %"struct.pdfium::agg::null_markers", [3 x i8], i32, i32, float, float, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6pdfium3agg22rasterizer_scanline_aa20add_path_transformedINS0_11conv_strokeINS0_9conv_dashINS0_12path_storageENS0_12null_markersEEES6_EEEEvRT_PK10CFX_Matrixj = comdat any

$_ZN6pdfium3agg22rasterizer_scanline_aa20add_path_transformedINS0_11conv_strokeINS0_12path_storageENS0_12null_markersEEEEEvRT_PK10CFX_Matrixj = comdat any

$_ZN6pdfium3agg18conv_adaptor_vcgenINS0_9conv_dashINS0_12path_storageENS0_12null_markersEEENS0_12vcgen_strokeES4_E6vertexEPfS8_ = comdat any

$_ZN6pdfium3agg22rasterizer_scanline_aa10add_vertexEffj = comdat any

$_ZN6pdfium3agg18conv_adaptor_vcgenINS0_12path_storageENS0_10vcgen_dashENS0_12null_markersEE6vertexEPfS6_ = comdat any

$_ZN6pdfium3agg22rasterizer_scanline_aa7move_toEii = comdat any

$_ZN6pdfium3agg22rasterizer_scanline_aa12clip_segmentEii = comdat any

$_ZN6pdfium3agg17clip_liang_barskyIiEEjT_S2_S2_S2_RKNS0_9rect_baseIS2_EEPS2_S7_ = comdat any

$_ZN6pdfium3agg18conv_adaptor_vcgenINS0_12path_storageENS0_12vcgen_strokeENS0_12null_markersEE6vertexEPfS6_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI11CFX_ClipRgnNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZN6pdfium3agg22rasterizer_scanline_aa14sweep_scanlineINS0_10scanline_uIhEEEEbRT_b = comdat any

@_ZTVN6pdfium19CFX_AggDeviceDriverE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.pdfium::CFX_AggDeviceDriver"*)* @_ZN6pdfium19CFX_AggDeviceDriverD2Ev to i8*), i8* bitcast (void (%"class.pdfium::CFX_AggDeviceDriver"*)* @_ZN6pdfium19CFX_AggDeviceDriverD0Ev to i8*), i8* bitcast (i1 (%"class.pdfium::CFX_AggDeviceDriver"*)* @_ZNK6pdfium19CFX_AggDeviceDriver13GetDeviceTypeEv to i8*), i8* bitcast (i32 (%"class.pdfium::CFX_AggDeviceDriver"*, i32)* @_ZNK6pdfium19CFX_AggDeviceDriver13GetDeviceCapsEi to i8*), i8* bitcast (void (%"class.pdfium::CFX_AggDeviceDriver"*)* @_ZN6pdfium19CFX_AggDeviceDriver9SaveStateEv to i8*), i8* bitcast (void (%"class.pdfium::CFX_AggDeviceDriver"*, i1)* @_ZN6pdfium19CFX_AggDeviceDriver12RestoreStateEb to i8*), i8* bitcast (void (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)* @_ZN23RenderDeviceDriverIface11SetBaseClipERK7FX_RECT to i8*), i8* bitcast (i1 (%"class.pdfium::CFX_AggDeviceDriver"*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)* @_ZN6pdfium19CFX_AggDeviceDriver16SetClip_PathFillEPK12CFX_PathDataPK10CFX_MatrixRK21CFX_FillRenderOptions to i8*), i8* bitcast (i1 (%"class.pdfium::CFX_AggDeviceDriver"*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*)* @_ZN6pdfium19CFX_AggDeviceDriver18SetClip_PathStrokeEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateData to i8*), i8* bitcast (i1 (%"class.pdfium::CFX_AggDeviceDriver"*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)* @_ZN6pdfium19CFX_AggDeviceDriver8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode to i8*), i8* bitcast (i1 (%"class.pdfium::CFX_AggDeviceDriver"*, %struct.FX_RECT*, i32, i32)* @_ZN6pdfium19CFX_AggDeviceDriver17FillRectWithBlendERK7FX_RECTj9BlendMode to i8*), i8* bitcast (i1 (%class.RenderDeviceDriverIface*, %class.CFX_PTemplate*, %class.CFX_PTemplate*, i32, i32)* @_ZN23RenderDeviceDriverIface16DrawCosmeticLineERK13CFX_PTemplateIfES3_j9BlendMode to i8*), i8* bitcast (i1 (%"class.pdfium::CFX_AggDeviceDriver"*, %struct.FX_RECT*)* @_ZN6pdfium19CFX_AggDeviceDriver10GetClipBoxEP7FX_RECT to i8*), i8* bitcast (i1 (%"class.pdfium::CFX_AggDeviceDriver"*, %"class.fxcrt::RetainPtr"*, i32, i32)* @_ZN6pdfium19CFX_AggDeviceDriver9GetDIBitsERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEii to i8*), i8* bitcast (void (%"class.fxcrt::RetainPtr"*, %"class.pdfium::CFX_AggDeviceDriver"*)* @_ZN6pdfium19CFX_AggDeviceDriver11GetBackDropEv to i8*), i8* bitcast (i1 (%"class.pdfium::CFX_AggDeviceDriver"*, %"class.fxcrt::RetainPtr.33"*, i32, %struct.FX_RECT*, i32, i32, i32)* @_ZN6pdfium19CFX_AggDeviceDriver9SetDIBitsERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEjRK7FX_RECTii9BlendMode to i8*), i8* bitcast (i1 (%"class.pdfium::CFX_AggDeviceDriver"*, %"class.fxcrt::RetainPtr.33"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)* @_ZN6pdfium19CFX_AggDeviceDriver13StretchDIBitsERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEjiiiiPK7FX_RECTRK21FXDIB_ResampleOptions9BlendMode to i8*), i8* bitcast (i1 (%"class.pdfium::CFX_AggDeviceDriver"*, %"class.fxcrt::RetainPtr.33"*, i32, i32, %class.CFX_Matrix*, %struct.FXDIB_ResampleOptions*, %"class.std::__1::unique_ptr.54"*, i32)* @_ZN6pdfium19CFX_AggDeviceDriver11StartDIBitsERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEijRK10CFX_MatrixRK21FXDIB_ResampleOptionsPNSt3__110unique_ptrI17CFX_ImageRendererNSD_14default_deleteISF_EEEE9BlendMode to i8*), i8* bitcast (i1 (%"class.pdfium::CFX_AggDeviceDriver"*, %class.CFX_ImageRenderer*, %class.PauseIndicatorIface*)* @_ZN6pdfium19CFX_AggDeviceDriver14ContinueDIBitsEP17CFX_ImageRendererP19PauseIndicatorIface to i8*), i8* bitcast (i1 (%"class.pdfium::CFX_AggDeviceDriver"*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)* @_ZN6pdfium19CFX_AggDeviceDriver14DrawDeviceTextEiPK11TextCharPosP8CFX_FontRK10CFX_MatrixfjRK21CFX_TextRenderOptions to i8*), i8* bitcast (i32 (%"class.pdfium::CFX_AggDeviceDriver"*)* @_ZNK6pdfium19CFX_AggDeviceDriver13GetDriverTypeEv to i8*), i8* bitcast (i1 (%class.RenderDeviceDriverIface*, %class.CPDF_ShadingPattern*, %class.CFX_Matrix*, %struct.FX_RECT*, i32, i1)* @_ZN23RenderDeviceDriverIface11DrawShadingEPK19CPDF_ShadingPatternPK10CFX_MatrixRK7FX_RECTib to i8*)] }, align 8
@__const._ZN6pdfium19CFX_AggDeviceDriver16SetClip_PathFillEPK12CFX_PathDataPK10CFX_MatrixRK21CFX_FillRenderOptions.maybe_rectf = private unnamed_addr constant { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { %class.CFX_FloatRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } } } } } }, align 4
@_ZTV23CFX_DefaultRenderDevice = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFX_DefaultRenderDevice*)* @_ZN23CFX_DefaultRenderDeviceD2Ev to i8*), i8* bitcast (void (%class.CFX_DefaultRenderDevice*)* @_ZN23CFX_DefaultRenderDeviceD0Ev to i8*)] }, align 8
@__const._ZN6pdfium12_GLOBAL__N_115RasterizeStrokeEPNS_3agg22rasterizer_scanline_aaEPNS1_12path_storageEPK10CFX_MatrixPK18CFX_GraphStateDatafb.dash = private unnamed_addr constant %"struct.pdfium::agg::conv_dash" { %"class.pdfium::agg::conv_adaptor_vcgen.base" <{ %"class.pdfium::agg::path_storage"* inttoptr (i64 -6148914691236517206 to %"class.pdfium::agg::path_storage"*), %"class.pdfium::agg::vcgen_dash" <{ [32 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], float 0xFFFFFFFFE0000000, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %"struct.pdfium::agg::vertex_dist"* inttoptr (i64 -6148914691236517206 to %"struct.pdfium::agg::vertex_dist"*), %"struct.pdfium::agg::vertex_dist"* inttoptr (i64 -6148914691236517206 to %"struct.pdfium::agg::vertex_dist"*), %"class.pdfium::agg::vertex_sequence" { %"class.pdfium::agg::pod_deque.base.88" <{ i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.pdfium::agg::vertex_dist"** inttoptr (i64 -6148914691236517206 to %"struct.pdfium::agg::vertex_dist"**), i32 -1431655766 }>, [4 x i8] c"\AA\AA\AA\AA" }, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, %"struct.pdfium::agg::null_markers" { i8 -86 }, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }>, [4 x i8] c"\AA\AA\AA\AA" }, align 8
@__const._ZN6pdfium12_GLOBAL__N_115RasterizeStrokeEPNS_3agg22rasterizer_scanline_aaEPNS1_12path_storageEPK10CFX_MatrixPK18CFX_GraphStateDatafb.stroke = private unnamed_addr constant %"struct.pdfium::agg::conv_stroke" { %"class.pdfium::agg::conv_adaptor_vcgen.base.94" <{ %"struct.pdfium::agg::conv_dash"* inttoptr (i64 -6148914691236517206 to %"struct.pdfium::agg::conv_dash"*), %"class.pdfium::agg::vcgen_stroke" { %"class.pdfium::agg::vertex_sequence.90" { %"class.pdfium::agg::pod_deque.base.92" <{ i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.pdfium::agg::vertex_dist_cmd"** inttoptr (i64 -6148914691236517206 to %"struct.pdfium::agg::vertex_dist_cmd"**), i32 -1431655766 }>, [4 x i8] c"\AA\AA\AA\AA" }, %"class.pdfium::agg::pod_deque" <{ i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.pdfium::agg::point_type"** inttoptr (i64 -6148914691236517206 to %"struct.pdfium::agg::point_type"**), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %"struct.pdfium::agg::null_markers" { i8 -86 }, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }>, [4 x i8] c"\AA\AA\AA\AA" }, align 8
@__const._ZN6pdfium12_GLOBAL__N_115RasterizeStrokeEPNS_3agg22rasterizer_scanline_aaEPNS1_12path_storageEPK10CFX_MatrixPK18CFX_GraphStateDatafb.stroke.1 = private unnamed_addr constant %"struct.pdfium::agg::conv_stroke.95" { %"class.pdfium::agg::conv_adaptor_vcgen.base.97" <{ %"class.pdfium::agg::path_storage"* inttoptr (i64 -6148914691236517206 to %"class.pdfium::agg::path_storage"*), %"class.pdfium::agg::vcgen_stroke" { %"class.pdfium::agg::vertex_sequence.90" { %"class.pdfium::agg::pod_deque.base.92" <{ i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.pdfium::agg::vertex_dist_cmd"** inttoptr (i64 -6148914691236517206 to %"struct.pdfium::agg::vertex_dist_cmd"**), i32 -1431655766 }>, [4 x i8] c"\AA\AA\AA\AA" }, %"class.pdfium::agg::pod_deque" <{ i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"struct.pdfium::agg::point_type"** inttoptr (i64 -6148914691236517206 to %"struct.pdfium::agg::point_type"**), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %"struct.pdfium::agg::null_markers" { i8 -86 }, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }>, [4 x i8] c"\AA\AA\AA\AA" }, align 8

@_ZN6pdfium19CFX_AggDeviceDriverC1ERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS6_b = hidden unnamed_addr alias void (%"class.pdfium::CFX_AggDeviceDriver"*, %"class.fxcrt::RetainPtr"*, i1, %"class.fxcrt::RetainPtr"*, i1), void (%"class.pdfium::CFX_AggDeviceDriver"*, %"class.fxcrt::RetainPtr"*, i1, %"class.fxcrt::RetainPtr"*, i1)* @_ZN6pdfium19CFX_AggDeviceDriverC2ERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS6_b
@_ZN6pdfium19CFX_AggDeviceDriverD1Ev = hidden unnamed_addr alias void (%"class.pdfium::CFX_AggDeviceDriver"*), void (%"class.pdfium::CFX_AggDeviceDriver"*)* @_ZN6pdfium19CFX_AggDeviceDriverD2Ev
@_ZN23CFX_DefaultRenderDeviceC1Ev = hidden unnamed_addr alias void (%class.CFX_DefaultRenderDevice*), void (%class.CFX_DefaultRenderDevice*)* @_ZN23CFX_DefaultRenderDeviceC2Ev
@_ZN23CFX_DefaultRenderDeviceD1Ev = hidden unnamed_addr alias void (%class.CFX_DefaultRenderDevice*), void (%class.CFX_DefaultRenderDevice*)* @_ZN23CFX_DefaultRenderDeviceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium19CFX_AggDeviceDriverC2ERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS6_b(%"class.pdfium::CFX_AggDeviceDriver"* nocapture, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8), i1 zeroext, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %6 = zext i1 %2 to i8
  %7 = zext i1 %4 to i8
  %8 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6pdfium19CFX_AggDeviceDriverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %10, align 8
  %12 = ptrtoint %class.CFX_DIBitmap* %11 to i64
  %13 = bitcast %"class.fxcrt::RetainPtr"* %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %class.CFX_DIBitmap* %11, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %11, i64 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add nsw i64 %17, 1
  store i64 %18, i64* %16, align 8
  br label %19

19:                                               ; preds = %5, %15
  %20 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 5
  %22 = bitcast %"class.std::__1::unique_ptr.1"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 34, i1 false)
  store i8 %6, i8* %21, align 2
  %23 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 6
  store i8 %7, i8* %23, align 1
  %24 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 7
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %25, align 8
  %27 = ptrtoint %class.CFX_DIBitmap* %26 to i64
  %28 = bitcast %"class.fxcrt::RetainPtr"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = icmp eq %class.CFX_DIBitmap* %26, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %26, i64 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, 1
  store i64 %33, i64* %31, align 8
  br label %34

34:                                               ; preds = %19, %30
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6pdfium19CFX_AggDeviceDriver12InitPlatformEv(%"class.pdfium::CFX_AggDeviceDriver"* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium19CFX_AggDeviceDriverD2Ev(%"class.pdfium::CFX_AggDeviceDriver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6pdfium19CFX_AggDeviceDriverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %3, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %3, align 8
  %5 = icmp eq %class.CFX_DIBitmap* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %4, i64 0, i32 0, i32 0
  %13 = bitcast %class.CFX_DIBitmap* %4 to void (%"class.fxcrt::Retainable"*)***
  %14 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, i64 1
  %16 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %15, align 8
  tail call void %16(%"class.fxcrt::Retainable"* nonnull %12) #14
  br label %17

17:                                               ; preds = %1, %6, %11
  %18 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 3
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %19, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.1"* %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.std::__1::unique_ptr.1"* %20 to i8*
  %24 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 3, i32 0, i32 1
  %25 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %24, align 8
  %26 = icmp eq %"class.std::__1::unique_ptr.1"* %25, %20
  br i1 %26, label %40, label %27

27:                                               ; preds = %22, %35
  %28 = phi %"class.std::__1::unique_ptr.1"* [ %29, %35 ], [ %25, %22 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %28, i64 -1
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %30, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %30, align 8
  %32 = icmp eq %class.CFX_ClipRgn* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  tail call void @_ZN11CFX_ClipRgnD1Ev(%class.CFX_ClipRgn* nonnull %31) #14
  %34 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %31, i64 0, i32 0
  tail call void @_ZdlPv(i8* %34) #15
  br label %35

35:                                               ; preds = %33, %27
  %36 = icmp eq %"class.std::__1::unique_ptr.1"* %29, %20
  br i1 %36, label %37, label %27

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::vector"* %18 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %22
  %41 = phi i8* [ %39, %37 ], [ %23, %22 ]
  store %"class.std::__1::unique_ptr.1"* %20, %"class.std::__1::unique_ptr.1"** %24, align 8
  tail call void @_ZdlPv(i8* %41) #15
  br label %42

42:                                               ; preds = %17, %40
  %43 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %44 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %43, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %43, align 8
  %45 = icmp eq %class.CFX_ClipRgn* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  tail call void @_ZN11CFX_ClipRgnD1Ev(%class.CFX_ClipRgn* nonnull %44) #14
  %47 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %44, i64 0, i32 0
  tail call void @_ZdlPv(i8* %47) #15
  br label %48

48:                                               ; preds = %42, %46
  %49 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %50 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %49, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %49, align 8
  %51 = icmp eq %class.CFX_DIBitmap* %50, null
  br i1 %51, label %63, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %50, i64 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = add nsw i64 %54, -1
  store i64 %55, i64* %53, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %52
  %58 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %50, i64 0, i32 0, i32 0
  %59 = bitcast %class.CFX_DIBitmap* %50 to void (%"class.fxcrt::Retainable"*)***
  %60 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %60, i64 1
  %62 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %61, align 8
  tail call void %62(%"class.fxcrt::Retainable"* nonnull %58) #14
  br label %63

63:                                               ; preds = %48, %52, %57
  %64 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 0
  tail call void @_ZN23RenderDeviceDriverIfaceD2Ev(%class.RenderDeviceDriverIface* %64) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6pdfium19CFX_AggDeviceDriver15DestroyPlatformEv(%"class.pdfium::CFX_AggDeviceDriver"* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN23RenderDeviceDriverIfaceD2Ev(%class.RenderDeviceDriverIface*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium19CFX_AggDeviceDriverD0Ev(%"class.pdfium::CFX_AggDeviceDriver"*) unnamed_addr #0 align 2 {
  tail call void @_ZN6pdfium19CFX_AggDeviceDriverD2Ev(%"class.pdfium::CFX_AggDeviceDriver"* %0) #14
  %2 = bitcast %"class.pdfium::CFX_AggDeviceDriver"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN6pdfium19CFX_AggDeviceDriver14DrawDeviceTextEiPK11TextCharPosP8CFX_FontRK10CFX_MatrixfjRK21CFX_TextRenderOptions(%"class.pdfium::CFX_AggDeviceDriver"* nocapture readnone, i32, %class.TextCharPos* nocapture readnone, %class.CFX_Font* nocapture readnone, %class.CFX_Matrix* nocapture readnone dereferenceable(24), float, i32, %struct.CFX_TextRenderOptions* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK6pdfium19CFX_AggDeviceDriver13GetDeviceTypeEv(%"class.pdfium::CFX_AggDeviceDriver"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6pdfium19CFX_AggDeviceDriver13GetDeviceCapsEi(%"class.pdfium::CFX_AggDeviceDriver"* nocapture readonly, i32) unnamed_addr #4 align 2 {
  switch i32 %1, label %34 [
    i32 2, label %3
    i32 3, label %8
    i32 4, label %13
    i32 7, label %20
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %4, align 8
  %6 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %5, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  br label %34

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  %11 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %10, i64 0, i32 0, i32 3
  %12 = load i32, i32* %11, align 8
  br label %34

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %14, align 8
  %16 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %15, i64 0, i32 0, i32 1
  %17 = load i16, i16* %16, align 8
  %18 = and i16 %17, 255
  %19 = zext i16 %18 to i32
  br label %34

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %21, align 8
  %23 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %22, i64 0, i32 0, i32 1
  %24 = load i16, i16* %23, align 8
  %25 = and i16 %24, 512
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %27, label %34

27:                                               ; preds = %20
  %28 = and i16 %24, 256
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %27
  %31 = and i16 %24, 255
  %32 = icmp eq i16 %31, 1
  %33 = select i1 %32, i32 1457, i32 2481
  br label %34

34:                                               ; preds = %27, %20, %2, %30, %13, %8, %3
  %35 = phi i32 [ %19, %13 ], [ %12, %8 ], [ %7, %3 ], [ 433, %27 ], [ 497, %20 ], [ %33, %30 ], [ 0, %2 ]
  ret i32 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium19CFX_AggDeviceDriver9SaveStateEv(%"class.pdfium::CFX_AggDeviceDriver"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.1", align 8
  %3 = bitcast %"class.std::__1::unique_ptr.1"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #14
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.std::__1::unique_ptr.1"* %2 to i64*
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %6, align 8
  %8 = icmp eq %class.CFX_ClipRgn* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = tail call i8* @_Znwm(i64 32) #15
  %11 = bitcast i8* %10 to %class.CFX_ClipRgn*
  tail call void @_ZN11CFX_ClipRgnC1ERKS_(%class.CFX_ClipRgn* nonnull %11, %class.CFX_ClipRgn* nonnull dereferenceable(32) %7) #14
  %12 = ptrtoint i8* %10 to i64
  store i64 %12, i64* %5, align 8
  br label %13

13:                                               ; preds = %9, %1
  %14 = phi i64 [ 0, %1 ], [ %12, %9 ]
  %15 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 3, i32 0, i32 1
  %16 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %15, align 8
  %17 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %17, align 8
  %19 = icmp ult %"class.std::__1::unique_ptr.1"* %16, %18
  br i1 %19, label %20, label %25

20:                                               ; preds = %13
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %4, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.1"* %16 to i64*
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %16, i64 1
  %23 = ptrtoint %"class.std::__1::unique_ptr.1"* %22 to i64
  %24 = bitcast %"class.std::__1::unique_ptr.1"** %15 to i64*
  store i64 %23, i64* %24, align 8
  br label %27

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrI11CFX_ClipRgnNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %26, %"class.std::__1::unique_ptr.1"* nonnull dereferenceable(8) %2) #14
  br label %27

27:                                               ; preds = %20, %25
  %28 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %4, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %4, align 8
  %29 = icmp eq %class.CFX_ClipRgn* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %27
  call void @_ZN11CFX_ClipRgnD1Ev(%class.CFX_ClipRgn* nonnull %28) #14
  %31 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %28, i64 0, i32 0
  call void @_ZdlPv(i8* %31) #15
  br label %32

32:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium19CFX_AggDeviceDriver12RestoreStateEb(%"class.pdfium::CFX_AggDeviceDriver"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %4, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %4, align 8
  %6 = icmp eq %class.CFX_ClipRgn* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  tail call void @_ZN11CFX_ClipRgnD1Ev(%class.CFX_ClipRgn* nonnull %5) #14
  %8 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %5, i64 0, i32 0
  tail call void @_ZdlPv(i8* %8) #15
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %10, align 8
  %12 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 3, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.1"* %11, %13
  br i1 %14, label %47, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %13, i64 -1
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %16, i64 0, i32 0, i32 0, i32 0
  br i1 %1, label %18, label %30

18:                                               ; preds = %15
  %19 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %17, align 8
  %20 = icmp eq %class.CFX_ClipRgn* %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = tail call i8* @_Znwm(i64 32) #15
  %23 = bitcast i8* %22 to %class.CFX_ClipRgn*
  tail call void @_ZN11CFX_ClipRgnC1ERKS_(%class.CFX_ClipRgn* nonnull %23, %class.CFX_ClipRgn* nonnull dereferenceable(32) %19) #14
  %24 = ptrtoint i8* %22 to i64
  %25 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %4, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.1"* %3 to i64*
  store i64 %24, i64* %26, align 8
  %27 = icmp eq %class.CFX_ClipRgn* %25, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %21
  tail call void @_ZN11CFX_ClipRgnD1Ev(%class.CFX_ClipRgn* nonnull %25) #14
  %29 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %25, i64 0, i32 0
  tail call void @_ZdlPv(i8* %29) #15
  br label %47

30:                                               ; preds = %15
  %31 = bitcast %"class.std::__1::unique_ptr.1"* %16 to i64*
  %32 = load i64, i64* %31, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %17, align 8
  %33 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %4, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.1"* %3 to i64*
  store i64 %32, i64* %34, align 8
  %35 = icmp eq %class.CFX_ClipRgn* %33, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  tail call void @_ZN11CFX_ClipRgnD1Ev(%class.CFX_ClipRgn* nonnull %33) #14
  %37 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %33, i64 0, i32 0
  tail call void @_ZdlPv(i8* %37) #15
  br label %38

38:                                               ; preds = %30, %36
  %39 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %12, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %39, i64 -1
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %41, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %41, align 8
  %43 = icmp eq %class.CFX_ClipRgn* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %38
  tail call void @_ZN11CFX_ClipRgnD1Ev(%class.CFX_ClipRgn* nonnull %42) #14
  %45 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %42, i64 0, i32 0
  tail call void @_ZdlPv(i8* %45) #15
  br label %46

46:                                               ; preds = %38, %44
  store %"class.std::__1::unique_ptr.1"* %40, %"class.std::__1::unique_ptr.1"** %12, align 8
  br label %47

47:                                               ; preds = %18, %21, %28, %9, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium19CFX_AggDeviceDriver11SetClipMaskERNS_3agg22rasterizer_scanline_aaE(%"class.pdfium::CFX_AggDeviceDriver"* nocapture readonly, %"class.pdfium::agg::rasterizer_scanline_aa"* dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.FX_RECT, align 4
  %4 = alloca %"class.fxcrt::RetainPtr", align 8
  %5 = alloca %"class.pdfium::agg::scanline_u", align 8
  %6 = bitcast %struct.FX_RECT* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 0
  %8 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 1
  %9 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 2
  %10 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 3
  %11 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 0, i32 12
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 0, i32 13
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  %18 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 0, i32 14
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, 1
  store i32 %12, i32* %7, align 4
  store i32 %14, i32* %8, align 4
  store i32 %17, i32* %9, align 4
  store i32 %20, i32* %10, align 4
  %21 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %21, align 8
  %23 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %22, i64 0, i32 1
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %3, %struct.FX_RECT* dereferenceable(16) %23) #14
  %24 = bitcast %"class.fxcrt::RetainPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = call i8* @_Znwm(i64 80) #15, !noalias !2
  %27 = bitcast i8* %26 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %27) #14, !noalias !2
  %28 = ptrtoint i8* %26 to i64
  %29 = bitcast %"class.fxcrt::RetainPtr"* %4 to i64*
  store i64 %28, i64* %29, align 8, !alias.scope !2
  %30 = getelementptr inbounds i8, i8* %26, i64 8
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !2
  %33 = add nsw i64 %32, 1
  store i64 %33, i64* %31, align 8, !noalias !2
  %34 = load i32, i32* %9, align 4
  %35 = load i32, i32* %7, align 4
  %36 = sub nsw i32 %34, %35
  %37 = load i32, i32* %10, align 4
  %38 = load i32, i32* %8, align 4
  %39 = sub nsw i32 %37, %38
  %40 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %27, i32 %36, i32 %39, i16 zeroext 264) #14
  %41 = bitcast i8* %26 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap* nonnull %41, i32 0) #14
  %42 = bitcast i8* %26 to i8* (%class.CFX_DIBitmap*)***
  %43 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %42, align 8
  %44 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %43, i64 2
  %45 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %44, align 8
  %46 = call i8* %45(%class.CFX_DIBitmap* nonnull %41) #14
  %47 = getelementptr inbounds i8, i8* %26, i64 20
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds i8, i8* %26, i64 24
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds i8, i8* %26, i64 28
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %52, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %2
  call void @_Z7FX_FreePv(i8* null) #14
  %58 = zext i32 %52 to i64
  %59 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %58, i64 8) #14
  %60 = bitcast i8* %59 to i8**
  br label %61

61:                                               ; preds = %57, %2
  %62 = phi i8* [ null, %2 ], [ %59, %57 ]
  %63 = phi i8** [ null, %2 ], [ %60, %57 ]
  %64 = icmp slt i32 %55, 0
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = add i32 %52, -1
  %67 = mul nsw i32 %66, %55
  %68 = sext i32 %67 to i64
  %69 = sub nsw i64 0, %68
  %70 = getelementptr inbounds i8, i8* %46, i64 %69
  br label %71

71:                                               ; preds = %65, %61
  %72 = phi i8* [ %70, %65 ], [ %46, %61 ]
  br i1 %56, label %115, label %73

73:                                               ; preds = %71
  %74 = sext i32 %55 to i64
  %75 = add i32 %52, -1
  %76 = and i32 %52, 7
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %73, %78
  %79 = phi i8** [ %84, %78 ], [ %63, %73 ]
  %80 = phi i8* [ %85, %78 ], [ %72, %73 ]
  %81 = phi i32 [ %83, %78 ], [ %52, %73 ]
  %82 = phi i32 [ %86, %78 ], [ %76, %73 ]
  %83 = add i32 %81, -1
  %84 = getelementptr inbounds i8*, i8** %79, i64 1
  store i8* %80, i8** %79, align 8
  %85 = getelementptr inbounds i8, i8* %80, i64 %74
  %86 = add i32 %82, -1
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !5

88:                                               ; preds = %78, %73
  %89 = phi i8** [ %63, %73 ], [ %84, %78 ]
  %90 = phi i8* [ %72, %73 ], [ %85, %78 ]
  %91 = phi i32 [ %52, %73 ], [ %83, %78 ]
  %92 = icmp ult i32 %75, 7
  br i1 %92, label %115, label %93

93:                                               ; preds = %88, %93
  %94 = phi i8** [ %112, %93 ], [ %89, %88 ]
  %95 = phi i8* [ %113, %93 ], [ %90, %88 ]
  %96 = phi i32 [ %111, %93 ], [ %91, %88 ]
  %97 = getelementptr inbounds i8*, i8** %94, i64 1
  store i8* %95, i8** %94, align 8
  %98 = getelementptr inbounds i8, i8* %95, i64 %74
  %99 = getelementptr inbounds i8*, i8** %94, i64 2
  store i8* %98, i8** %97, align 8
  %100 = getelementptr inbounds i8, i8* %98, i64 %74
  %101 = getelementptr inbounds i8*, i8** %94, i64 3
  store i8* %100, i8** %99, align 8
  %102 = getelementptr inbounds i8, i8* %100, i64 %74
  %103 = getelementptr inbounds i8*, i8** %94, i64 4
  store i8* %102, i8** %101, align 8
  %104 = getelementptr inbounds i8, i8* %102, i64 %74
  %105 = getelementptr inbounds i8*, i8** %94, i64 5
  store i8* %104, i8** %103, align 8
  %106 = getelementptr inbounds i8, i8* %104, i64 %74
  %107 = getelementptr inbounds i8*, i8** %94, i64 6
  store i8* %106, i8** %105, align 8
  %108 = getelementptr inbounds i8, i8* %106, i64 %74
  %109 = getelementptr inbounds i8*, i8** %94, i64 7
  store i8* %108, i8** %107, align 8
  %110 = getelementptr inbounds i8, i8* %108, i64 %74
  %111 = add i32 %96, -8
  %112 = getelementptr inbounds i8*, i8** %94, i64 8
  store i8* %110, i8** %109, align 8
  %113 = getelementptr inbounds i8, i8* %110, i64 %74
  %114 = icmp eq i32 %111, 0
  br i1 %114, label %115, label %93

115:                                              ; preds = %88, %93, %71
  %116 = add i32 %49, -1
  %117 = add i32 %52, -1
  %118 = load i32, i32* %7, align 4
  %119 = load i32, i32* %8, align 4
  %120 = bitcast %"class.pdfium::agg::scanline_u"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %120) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 16, i1 false)
  %121 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %5, i64 0, i32 0
  store i32 0, i32* %121, align 8
  %122 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %5, i64 0, i32 1
  store i32 0, i32* %122, align 4
  %123 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %5, i64 0, i32 2
  store i32 2147483632, i32* %123, align 8
  %124 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %5, i64 0, i32 4
  %125 = bitcast i8** %124 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 24, i1 false) #14
  %126 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 4, i32 1
  %127 = load i8, i8* %126, align 1
  %128 = and i8 %127, 2
  %129 = icmp ne i8 %128, 0
  %130 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 9
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %150

133:                                              ; preds = %115
  %134 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 11
  %135 = load i8, i8* %134, align 4, !range !7
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %144, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 4
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 5
  %141 = load i32, i32* %140, align 8
  call void @_ZN6pdfium3agg22rasterizer_scanline_aa12clip_segmentEii(%"class.pdfium::agg::rasterizer_scanline_aa"* %1, i32 %139, i32 %141) #14
  %142 = load i32, i32* %130, align 8
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %144, label %150

144:                                              ; preds = %137, %133
  %145 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 0
  %146 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 3
  %149 = load i32, i32* %148, align 8
  call void @_ZN6pdfium3agg10outline_aa7line_toEii(%"class.pdfium::agg::outline_aa"* %145, i32 %147, i32 %149) #14
  store i32 2, i32* %130, align 8
  br label %150

150:                                              ; preds = %144, %137, %115
  %151 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 0
  call void @_ZN6pdfium3agg10outline_aa10sort_cellsEv(%"class.pdfium::agg::outline_aa"* %151) #14
  %152 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 0, i32 3
  %153 = load i32, i32* %152, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %383, label %155

155:                                              ; preds = %150
  %156 = load i32, i32* %13, align 4
  %157 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 12
  store i32 %156, i32* %157, align 8
  %158 = load i32, i32* %11, align 8
  %159 = load i32, i32* %15, align 8
  %160 = sub nsw i32 %159, %158
  %161 = add nsw i32 %160, 2
  %162 = load i32, i32* %122, align 4
  %163 = icmp ugt i32 %161, %162
  %164 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %5, i64 0, i32 5
  br i1 %163, label %168, label %165

165:                                              ; preds = %155
  %166 = bitcast %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %164 to i64*
  %167 = load i64, i64* %166, align 8
  br label %176

168:                                              ; preds = %155
  %169 = bitcast %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %164 to i8**
  %170 = load i8*, i8** %169, align 8
  call void @_Z7FX_FreePv(i8* %170) #14
  %171 = load i8*, i8** %124, align 8
  call void @_Z7FX_FreePv(i8* %171) #14
  %172 = zext i32 %161 to i64
  %173 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %172, i64 1) #14
  store i8* %173, i8** %124, align 8
  %174 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %172, i64 16) #14
  store i8* %174, i8** %169, align 8
  store i32 %161, i32* %122, align 4
  %175 = ptrtoint i8* %174 to i64
  br label %176

176:                                              ; preds = %168, %165
  %177 = phi i64 [ %167, %165 ], [ %175, %168 ]
  store i32 2147483632, i32* %123, align 8
  store i32 %158, i32* %121, align 8
  %178 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %5, i64 0, i32 6
  %179 = bitcast %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %178 to i64*
  store i64 %177, i64* %179, align 8
  %180 = call zeroext i1 @_ZN6pdfium3agg22rasterizer_scanline_aa14sweep_scanlineINS0_10scanline_uIhEEEEbRT_b(%"class.pdfium::agg::rasterizer_scanline_aa"* %1, %"class.pdfium::agg::scanline_u"* nonnull dereferenceable(40) %5, i1 zeroext %129) #14
  br i1 %180, label %181, label %383

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %5, i64 0, i32 3
  %183 = bitcast %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %164 to i64*
  br label %186

184:                                              ; preds = %380
  %185 = call zeroext i1 @_ZN6pdfium3agg22rasterizer_scanline_aa14sweep_scanlineINS0_10scanline_uIhEEEEbRT_b(%"class.pdfium::agg::rasterizer_scanline_aa"* %1, %"class.pdfium::agg::scanline_u"* nonnull dereferenceable(40) %5, i1 zeroext %129) #14
  br i1 %185, label %186, label %383

186:                                              ; preds = %184, %181
  %187 = load i32, i32* %182, align 4
  %188 = load i64, i64* %179, align 8
  %189 = load i64, i64* %183, align 8
  %190 = sub i64 %188, %189
  %191 = lshr exact i64 %190, 4
  %192 = trunc i64 %191 to i32
  %193 = inttoptr i64 %189 to %"struct.pdfium::agg::scanline_u<unsigned char>::span"*
  %194 = sub i32 %187, %119
  %195 = icmp slt i32 %117, %194
  %196 = icmp slt i32 %194, 0
  %197 = or i1 %195, %196
  %198 = zext i32 %194 to i64
  %199 = getelementptr inbounds i8*, i8** %63, i64 %198
  br label %200

200:                                              ; preds = %380, %186
  %201 = phi i32 [ %192, %186 ], [ %381, %380 ]
  %202 = phi %"struct.pdfium::agg::scanline_u<unsigned char>::span"* [ %193, %186 ], [ %203, %380 ]
  %203 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %202, i64 1
  %204 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %203, i64 0, i32 0
  %205 = load i16, i16* %204, align 8
  %206 = sext i16 %205 to i32
  %207 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %202, i64 1, i32 1
  %208 = load i16, i16* %207, align 2
  %209 = sext i16 %208 to i32
  %210 = icmp sgt i16 %208, 0
  %211 = sub i32 %206, %118
  br i1 %210, label %212, label %265

212:                                              ; preds = %200
  %213 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %202, i64 1, i32 2
  %214 = load i8*, i8** %213, align 8
  br i1 %197, label %380, label %215

215:                                              ; preds = %212
  %216 = icmp slt i32 %211, 0
  br i1 %216, label %217, label %224

217:                                              ; preds = %215
  %218 = add i32 %211, %209
  %219 = icmp slt i32 %218, 1
  br i1 %219, label %380, label %220

220:                                              ; preds = %217
  %221 = sub nsw i32 0, %211
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i8, i8* %214, i64 %222
  br label %224

224:                                              ; preds = %220, %215
  %225 = phi i32 [ %218, %220 ], [ %209, %215 ]
  %226 = phi i32 [ 0, %220 ], [ %211, %215 ]
  %227 = phi i8* [ %223, %220 ], [ %214, %215 ]
  %228 = add nsw i32 %226, %225
  %229 = icmp sgt i32 %228, %116
  br i1 %229, label %230, label %234

230:                                              ; preds = %224
  %231 = sub nsw i32 %116, %226
  %232 = add nsw i32 %231, 1
  %233 = icmp slt i32 %231, 0
  br i1 %233, label %380, label %234

234:                                              ; preds = %224, %230
  %235 = phi i32 [ %232, %230 ], [ %225, %224 ]
  %236 = load i8*, i8** %199, align 8
  %237 = zext i32 %226 to i64
  %238 = getelementptr inbounds i8, i8* %236, i64 %237
  br label %239

239:                                              ; preds = %262, %234
  %240 = phi i32 [ %235, %234 ], [ %260, %262 ]
  %241 = phi i8* [ %227, %234 ], [ %263, %262 ]
  %242 = phi i8* [ %238, %234 ], [ %264, %262 ]
  %243 = load i8, i8* %241, align 1
  %244 = zext i8 %243 to i32
  %245 = mul nuw nsw i32 %244, 255
  %246 = add nuw nsw i32 %245, 255
  %247 = lshr i32 %246, 8
  %248 = icmp eq i32 %247, 255
  br i1 %248, label %258, label %249

249:                                              ; preds = %239
  %250 = load i8, i8* %242, align 1
  %251 = zext i8 %250 to i32
  %252 = xor i32 %251, 255
  %253 = mul nuw nsw i32 %252, %247
  %254 = shl nuw nsw i32 %251, 8
  %255 = add nuw nsw i32 %253, %254
  %256 = lshr i32 %255, 8
  %257 = trunc i32 %256 to i8
  br label %258

258:                                              ; preds = %249, %239
  %259 = phi i8 [ %257, %249 ], [ -1, %239 ]
  store i8 %259, i8* %242, align 1
  %260 = add i32 %240, -1
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %380, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds i8, i8* %241, i64 1
  %264 = getelementptr inbounds i8, i8* %242, i64 1
  br label %239

265:                                              ; preds = %200
  %266 = xor i32 %209, -1
  %267 = add nsw i32 %266, %206
  %268 = icmp sgt i32 %211, %267
  %269 = select i1 %268, i32 %211, i32 %267
  %270 = select i1 %268, i32 %267, i32 %211
  %271 = icmp sgt i32 %270, %116
  %272 = or i1 %197, %271
  %273 = icmp slt i32 %269, 0
  %274 = or i1 %273, %272
  br i1 %274, label %380, label %275

275:                                              ; preds = %265
  %276 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %202, i64 1, i32 2
  %277 = load i8*, i8** %276, align 8
  %278 = load i8, i8* %277, align 1
  %279 = icmp sgt i32 %270, 0
  %280 = select i1 %279, i32 %270, i32 0
  %281 = icmp sgt i32 %269, %116
  %282 = select i1 %281, i32 %116, i32 %269
  %283 = sub i32 %282, %280
  %284 = load i8*, i8** %199, align 8
  %285 = zext i32 %280 to i64
  %286 = getelementptr inbounds i8, i8* %284, i64 %285
  %287 = zext i8 %278 to i32
  %288 = mul nuw nsw i32 %287, 255
  %289 = add nuw nsw i32 %288, 255
  %290 = lshr i32 %289, 8
  %291 = icmp eq i32 %290, 255
  br i1 %291, label %363, label %292

292:                                              ; preds = %275
  %293 = add nsw i32 %283, 1
  %294 = icmp slt i32 %269, %116
  %295 = select i1 %294, i32 %269, i32 %116
  %296 = sub i32 %295, %280
  %297 = zext i32 %296 to i64
  %298 = add nuw nsw i64 %297, 1
  %299 = icmp ult i64 %298, 16
  br i1 %299, label %300, label %303

300:                                              ; preds = %361, %292
  %301 = phi i32 [ %293, %292 ], [ %306, %361 ]
  %302 = phi i8* [ %286, %292 ], [ %307, %361 ]
  br label %366

303:                                              ; preds = %292
  %304 = and i64 %298, 8589934576
  %305 = trunc i64 %304 to i32
  %306 = sub i32 %293, %305
  %307 = getelementptr i8, i8* %286, i64 %304
  %308 = insertelement <16 x i32> undef, i32 %290, i32 0
  %309 = shufflevector <16 x i32> %308, <16 x i32> undef, <16 x i32> zeroinitializer
  %310 = add nsw i64 %304, -16
  %311 = lshr exact i64 %310, 4
  %312 = add nuw nsw i64 %311, 1
  %313 = and i64 %312, 1
  %314 = icmp eq i64 %310, 0
  br i1 %314, label %346, label %315

315:                                              ; preds = %303
  %316 = sub nuw nsw i64 %312, %313
  br label %317

317:                                              ; preds = %317, %315
  %318 = phi i64 [ 0, %315 ], [ %343, %317 ]
  %319 = phi i64 [ %316, %315 ], [ %344, %317 ]
  %320 = getelementptr i8, i8* %286, i64 %318
  %321 = bitcast i8* %320 to <16 x i8>*
  %322 = load <16 x i8>, <16 x i8>* %321, align 1
  %323 = zext <16 x i8> %322 to <16 x i32>
  %324 = xor <16 x i32> %323, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %325 = mul nuw nsw <16 x i32> %324, %309
  %326 = shl nuw nsw <16 x i32> %323, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %327 = add nuw nsw <16 x i32> %325, %326
  %328 = lshr <16 x i32> %327, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %329 = trunc <16 x i32> %328 to <16 x i8>
  %330 = bitcast i8* %320 to <16 x i8>*
  store <16 x i8> %329, <16 x i8>* %330, align 1
  %331 = or i64 %318, 16
  %332 = getelementptr i8, i8* %286, i64 %331
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1
  %335 = zext <16 x i8> %334 to <16 x i32>
  %336 = xor <16 x i32> %335, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %337 = mul nuw nsw <16 x i32> %336, %309
  %338 = shl nuw nsw <16 x i32> %335, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %339 = add nuw nsw <16 x i32> %337, %338
  %340 = lshr <16 x i32> %339, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %341 = trunc <16 x i32> %340 to <16 x i8>
  %342 = bitcast i8* %332 to <16 x i8>*
  store <16 x i8> %341, <16 x i8>* %342, align 1
  %343 = add i64 %318, 32
  %344 = add i64 %319, -2
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %346, label %317, !llvm.loop !8

346:                                              ; preds = %317, %303
  %347 = phi i64 [ 0, %303 ], [ %343, %317 ]
  %348 = icmp eq i64 %313, 0
  br i1 %348, label %361, label %349

349:                                              ; preds = %346
  %350 = getelementptr i8, i8* %286, i64 %347
  %351 = bitcast i8* %350 to <16 x i8>*
  %352 = load <16 x i8>, <16 x i8>* %351, align 1
  %353 = zext <16 x i8> %352 to <16 x i32>
  %354 = xor <16 x i32> %353, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %355 = mul nuw nsw <16 x i32> %354, %309
  %356 = shl nuw nsw <16 x i32> %353, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %357 = add nuw nsw <16 x i32> %355, %356
  %358 = lshr <16 x i32> %357, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %359 = trunc <16 x i32> %358 to <16 x i8>
  %360 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %359, <16 x i8>* %360, align 1
  br label %361

361:                                              ; preds = %346, %349
  %362 = icmp eq i64 %298, %304
  br i1 %362, label %380, label %300

363:                                              ; preds = %275
  %364 = zext i32 %283 to i64
  %365 = add nuw nsw i64 %364, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %286, i8 -1, i64 %365, i1 false)
  br label %380

366:                                              ; preds = %300, %366
  %367 = phi i32 [ %378, %366 ], [ %301, %300 ]
  %368 = phi i8* [ %377, %366 ], [ %302, %300 ]
  %369 = load i8, i8* %368, align 1
  %370 = zext i8 %369 to i32
  %371 = xor i32 %370, 255
  %372 = mul nuw nsw i32 %371, %290
  %373 = shl nuw nsw i32 %370, 8
  %374 = add nuw nsw i32 %372, %373
  %375 = lshr i32 %374, 8
  %376 = trunc i32 %375 to i8
  store i8 %376, i8* %368, align 1
  %377 = getelementptr inbounds i8, i8* %368, i64 1
  %378 = add i32 %367, -1
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %366, !llvm.loop !10

380:                                              ; preds = %366, %258, %361, %363, %265, %230, %217, %212
  %381 = add i32 %201, -1
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %184, label %200

383:                                              ; preds = %184, %150, %176
  %384 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %21, align 8
  %385 = load i32, i32* %7, align 4
  %386 = load i32, i32* %8, align 4
  call void @_ZN11CFX_ClipRgn14IntersectMaskFEiiRKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_ClipRgn* %384, i32 %385, i32 %386, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %4) #14
  %387 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %5, i64 0, i32 5
  %388 = bitcast %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %387 to i8**
  %389 = load i8*, i8** %388, align 8
  call void @_Z7FX_FreePv(i8* %389) #14
  %390 = load i8*, i8** %124, align 8
  call void @_Z7FX_FreePv(i8* %390) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %120) #14
  call void @_Z7FX_FreePv(i8* %62) #14
  %391 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %25, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %25, align 8
  %392 = icmp eq %class.CFX_DIBitmap* %391, null
  br i1 %392, label %404, label %393

393:                                              ; preds = %383
  %394 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %391, i64 0, i32 0, i32 0, i32 1
  %395 = load i64, i64* %394, align 8
  %396 = add nsw i64 %395, -1
  store i64 %396, i64* %394, align 8
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %398, label %404

398:                                              ; preds = %393
  %399 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %391, i64 0, i32 0, i32 0
  %400 = bitcast %class.CFX_DIBitmap* %391 to void (%"class.fxcrt::Retainable"*)***
  %401 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %400, align 8
  %402 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %401, i64 1
  %403 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %402, align 8
  call void %403(%"class.fxcrt::Retainable"* nonnull %399) #14
  br label %404

404:                                              ; preds = %383, %393, %398
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret void
}

declare void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT*, %struct.FX_RECT* dereferenceable(16)) local_unnamed_addr #6

declare zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap*, i32, i32, i16 zeroext) local_unnamed_addr #6

declare void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap*, i32) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN11CFX_ClipRgn14IntersectMaskFEiiRKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_ClipRgn*, i32, i32, %"class.fxcrt::RetainPtr"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6pdfium19CFX_AggDeviceDriver16SetClip_PathFillEPK12CFX_PathDataPK10CFX_MatrixRK21CFX_FillRenderOptions(%"class.pdfium::CFX_AggDeviceDriver"* nocapture, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions* nocapture readonly dereferenceable(2)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.pdfium::Optional", align 4
  %6 = alloca %class.CFX_FloatRect, align 4
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %struct.FX_RECT*
  %9 = alloca %"class.pdfium::agg::path_storage", align 8
  %10 = alloca %"class.pdfium::agg::rasterizer_scanline_aa", align 8
  %11 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 4, i32 0
  %12 = bitcast %struct.CFX_FillRenderOptions* %3 to i16*
  %13 = bitcast i8* %11 to i16*
  %14 = load i16, i16* %12, align 1
  store i16 %14, i16* %13, align 8
  %15 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %16, align 8
  %18 = icmp eq %class.CFX_ClipRgn* %17, null
  br i1 %18, label %19, label %34

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %20, align 8
  %22 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %21, i64 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %21, i64 0, i32 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = tail call i8* @_Znwm(i64 32) #15
  %27 = bitcast i8* %26 to %class.CFX_ClipRgn*
  tail call void @_ZN11CFX_ClipRgnC1Eii(%class.CFX_ClipRgn* nonnull %27, i32 %23, i32 %25) #14
  %28 = ptrtoint i8* %26 to i64
  %29 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %16, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.1"* %15 to i64*
  store i64 %28, i64* %30, align 8
  %31 = icmp eq %class.CFX_ClipRgn* %29, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %19
  tail call void @_ZN11CFX_ClipRgnD1Ev(%class.CFX_ClipRgn* nonnull %29) #14
  %33 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %29, i64 0, i32 0
  tail call void @_ZdlPv(i8* %33) #15
  br label %34

34:                                               ; preds = %4, %19, %32
  %35 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %35) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* align 4 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon } } } }* @__const._ZN6pdfium19CFX_AggDeviceDriver16SetClip_PathFillEPK12CFX_PathDataPK10CFX_MatrixRK21CFX_FillRenderOptions.maybe_rectf, i64 0, i32 0, i32 0, i32 0, i32 0), i64 20, i1 false)
  call void @_ZNK12CFX_PathData7GetRectEPK10CFX_Matrix(%"class.pdfium::Optional"* nonnull sret %5, %class.CFX_PathData* %1, %class.CFX_Matrix* %2) #14
  %36 = load i8, i8* %35, align 4, !range !7
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = bitcast %class.CFX_FloatRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #14
  %41 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %42 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %41, align 8
  %43 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %42, i64 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = sitofp i32 %44 to float
  %46 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %42, i64 0, i32 0, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = sitofp i32 %47 to float
  %49 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 0
  store float 0.000000e+00, float* %49, align 4
  %50 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 1
  store float 0.000000e+00, float* %50, align 4
  %51 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 2
  store float %45, float* %51, align 4
  %52 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 3
  store float %48, float* %52, align 4
  call void @_ZN13CFX_FloatRect9IntersectERKS_(%class.CFX_FloatRect* %39, %class.CFX_FloatRect* nonnull dereferenceable(16) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #14
  %53 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #14
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %55 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* %39) #14
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %57 = extractvalue { i64, i64 } %55, 0
  store i64 %57, i64* %56, align 8
  %58 = extractvalue { i64, i64 } %55, 1
  store i64 %58, i64* %54, align 8
  %59 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %16, align 8
  call void @_ZN11CFX_ClipRgn13IntersectRectERK7FX_RECT(%class.CFX_ClipRgn* %59, %struct.FX_RECT* nonnull dereferenceable(16) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #14
  br label %132

60:                                               ; preds = %34
  %61 = bitcast %"class.pdfium::agg::path_storage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %61) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 40, i1 false)
  call void @_ZN6pdfium3agg12path_storageC1Ev(%"class.pdfium::agg::path_storage"* nonnull %9) #14
  call fastcc void @_ZN6pdfium12_GLOBAL__N_112BuildAggPathEPK12CFX_PathDataPK10CFX_MatrixRNS_3agg12path_storageE(%class.CFX_PathData* %1, %class.CFX_Matrix* %2, %"class.pdfium::agg::path_storage"* nonnull dereferenceable(40) %9)
  call void @_ZN6pdfium3agg12path_storage8end_polyEv(%"class.pdfium::agg::path_storage"* nonnull %9) #14
  %62 = bitcast %"class.pdfium::agg::rasterizer_scanline_aa"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %62) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 176, i1 false)
  %63 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 0
  call void @_ZN6pdfium3agg10outline_aaC1Ev(%"class.pdfium::agg::outline_aa"* nonnull %63) #14
  %64 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 1
  store i32 0, i32* %64, align 8
  %65 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 2
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 3
  store i32 0, i32* %66, align 8
  %67 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 9
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 11
  store i8 0, i8* %68, align 4
  %69 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %70 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %69, align 8
  %71 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %70, i64 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = sitofp i32 %72 to float
  %74 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %70, i64 0, i32 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = sitofp i32 %75 to float
  %77 = fmul float %73, 2.560000e+02
  %78 = fptosi float %77 to i32
  %79 = fmul float %76, 2.560000e+02
  %80 = fptosi float %79 to i32
  %81 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 10, i32 0
  store i32 0, i32* %81, align 4
  %82 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 10, i32 1
  store i32 0, i32* %82, align 4
  %83 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 10, i32 2
  store i32 %78, i32* %83, align 4
  %84 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 10, i32 3
  store i32 %80, i32* %84, align 4
  %85 = icmp slt i32 %78, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %60
  store i32 %78, i32* %81, align 4
  store i32 0, i32* %83, align 4
  br label %87

87:                                               ; preds = %86, %60
  %88 = icmp slt i32 %80, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %87
  store i32 %80, i32* %82, align 4
  store i32 0, i32* %84, align 4
  br label %90

90:                                               ; preds = %87, %89
  store i8 1, i8* %68, align 4
  call void @_ZN6pdfium3agg12path_storage6rewindEj(%"class.pdfium::agg::path_storage"* nonnull %9, i32 0) #14
  %91 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %9, i64 0, i32 6
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %9, i64 0, i32 0
  %94 = load i32, i32* %93, align 8
  %95 = icmp ult i32 %92, %94
  br i1 %95, label %96, label %127

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %9, i64 0, i32 4
  %98 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %9, i64 0, i32 5
  br label %99

99:                                               ; preds = %120, %96
  %100 = phi i32 [ %92, %96 ], [ %124, %120 ]
  %101 = add nuw i32 %100, 1
  store i32 %101, i32* %91, align 8
  %102 = lshr i32 %100, 8
  %103 = load float**, float*** %97, align 8
  %104 = zext i32 %102 to i64
  %105 = getelementptr inbounds float*, float** %103, i64 %104
  %106 = load float*, float** %105, align 8
  %107 = and i32 %100, 255
  %108 = shl nuw nsw i32 %107, 1
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds float, float* %106, i64 %109
  %111 = load i8**, i8*** %98, align 8
  %112 = getelementptr inbounds i8*, i8** %111, i64 %104
  %113 = load i8*, i8** %112, align 8
  %114 = zext i32 %107 to i64
  %115 = getelementptr inbounds i8, i8* %113, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = and i32 %117, 127
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %127, label %120

120:                                              ; preds = %99
  %121 = getelementptr inbounds float, float* %110, i64 1
  %122 = load float, float* %121, align 4
  %123 = load float, float* %110, align 4
  call void @_ZN6pdfium3agg22rasterizer_scanline_aa10add_vertexEffj(%"class.pdfium::agg::rasterizer_scanline_aa"* nonnull %10, float %123, float %122, i32 %117) #14
  %124 = load i32, i32* %91, align 8
  %125 = load i32, i32* %93, align 8
  %126 = icmp ult i32 %124, %125
  br i1 %126, label %99, label %127

127:                                              ; preds = %99, %120, %90
  %128 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %3, i64 0, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp ne i8 %129, 2
  %131 = zext i1 %130 to i32
  store i32 %131, i32* %64, align 8
  call void @_ZN6pdfium19CFX_AggDeviceDriver11SetClipMaskERNS_3agg22rasterizer_scanline_aaE(%"class.pdfium::CFX_AggDeviceDriver"* %0, %"class.pdfium::agg::rasterizer_scanline_aa"* nonnull dereferenceable(176) %10)
  call void @_ZN6pdfium3agg10outline_aaD1Ev(%"class.pdfium::agg::outline_aa"* nonnull %63) #14
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %62) #14
  call void @_ZN6pdfium3agg12path_storageD1Ev(%"class.pdfium::agg::path_storage"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %61) #14
  br label %132

132:                                              ; preds = %127, %38
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %35) #14
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @_ZNK12CFX_PathData7GetRectEPK10CFX_Matrix(%"class.pdfium::Optional"* sret, %class.CFX_PathData*, %class.CFX_Matrix*) local_unnamed_addr #6

declare void @_ZN13CFX_FloatRect9IntersectERKS_(%class.CFX_FloatRect*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #6

declare { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect*) local_unnamed_addr #6

declare void @_ZN11CFX_ClipRgn13IntersectRectERK7FX_RECT(%class.CFX_ClipRgn*, %struct.FX_RECT* dereferenceable(16)) local_unnamed_addr #6

declare void @_ZN6pdfium3agg12path_storageC1Ev(%"class.pdfium::agg::path_storage"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6pdfium12_GLOBAL__N_112BuildAggPathEPK12CFX_PathDataPK10CFX_MatrixRNS_3agg12path_storageE(%class.CFX_PathData* nocapture readonly, %class.CFX_Matrix*, %"class.pdfium::agg::path_storage"* dereferenceable(40)) unnamed_addr #0 {
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = alloca %class.CFX_PTemplate, align 4
  %7 = alloca %class.CFX_PTemplate, align 4
  %8 = alloca %class.CFX_PTemplate, align 4
  %9 = alloca %class.CFX_PTemplate, align 4
  %10 = alloca %class.CFX_PTemplate, align 4
  %11 = alloca %class.CFX_PTemplate, align 4
  %12 = alloca %"class.pdfium::agg::curve4", align 8
  %13 = bitcast %class.CFX_PathData* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %0, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %class.FX_PATHPOINT** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %14
  %19 = sdiv exact i64 %18, 12
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %77, label %21

21:                                               ; preds = %3
  %22 = bitcast %class.CFX_PTemplate* %4 to i8*
  %23 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  %24 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  %25 = inttoptr i64 %14 to %class.FX_PATHPOINT*
  %26 = bitcast %class.CFX_PTemplate* %4 to i32*
  %27 = bitcast float* %24 to i32*
  %28 = icmp ne %class.CFX_Matrix* %1, null
  %29 = bitcast %class.CFX_PTemplate* %5 to i8*
  %30 = bitcast %class.CFX_PTemplate* %5 to i32*
  %31 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  %32 = bitcast float* %31 to i32*
  %33 = add nsw i64 %19, -1
  %34 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %2, i64 0, i32 0
  %35 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %2, i64 0, i32 1
  %36 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %2, i64 0, i32 4
  %37 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %2, i64 0, i32 5
  %38 = bitcast %class.CFX_PTemplate* %6 to i8*
  %39 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 0
  %40 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 1
  %41 = bitcast %class.CFX_PTemplate* %6 to i32*
  %42 = bitcast float* %40 to i32*
  %43 = bitcast %class.CFX_PTemplate* %7 to i8*
  %44 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 0
  %45 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 1
  %46 = bitcast %class.CFX_PTemplate* %7 to i32*
  %47 = bitcast float* %45 to i32*
  %48 = bitcast %class.CFX_PTemplate* %8 to i8*
  %49 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 0
  %50 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 1
  %51 = bitcast %class.CFX_PTemplate* %8 to i32*
  %52 = bitcast float* %50 to i32*
  %53 = bitcast %class.CFX_PTemplate* %9 to i8*
  %54 = bitcast %class.CFX_PTemplate* %9 to i32*
  %55 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 1
  %56 = bitcast float* %55 to i32*
  %57 = bitcast %class.CFX_PTemplate* %10 to i8*
  %58 = bitcast %class.CFX_PTemplate* %10 to i32*
  %59 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 1
  %60 = bitcast float* %59 to i32*
  %61 = bitcast %class.CFX_PTemplate* %11 to i8*
  %62 = bitcast %class.CFX_PTemplate* %11 to i32*
  %63 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 1
  %64 = bitcast float* %63 to i32*
  %65 = bitcast %"class.pdfium::agg::curve4"* %12 to i8*
  %66 = getelementptr inbounds %"class.pdfium::agg::curve4", %"class.pdfium::agg::curve4"* %12, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.pdfium::agg::curve4", %"class.pdfium::agg::curve4"* %12, i64 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.pdfium::agg::curve4", %"class.pdfium::agg::curve4"* %12, i64 0, i32 0, i32 2
  %69 = getelementptr inbounds %"class.pdfium::agg::curve4", %"class.pdfium::agg::curve4"* %12, i64 0, i32 0, i32 4, i32 0
  %70 = getelementptr inbounds %"class.pdfium::agg::curve4", %"class.pdfium::agg::curve4"* %12, i64 0, i32 0, i32 4, i32 1
  %71 = getelementptr inbounds %"class.pdfium::agg::curve4", %"class.pdfium::agg::curve4"* %12, i64 0, i32 0, i32 4, i32 2
  %72 = getelementptr inbounds %"class.pdfium::agg::curve4", %"class.pdfium::agg::curve4"* %12, i64 0, i32 0, i32 4, i32 4
  %73 = getelementptr inbounds %"class.pdfium::agg::curve4", %"class.pdfium::agg::curve4"* %12, i64 0, i32 0, i32 4, i32 5
  %74 = getelementptr inbounds %"class.pdfium::agg::curve4", %"class.pdfium::agg::curve4"* %12, i64 0, i32 0
  %75 = bitcast %"struct.pdfium::agg::point_type"*** %72 to i8**
  %76 = bitcast i32* %68 to i8*
  br label %78

77:                                               ; preds = %394, %3
  ret void

78:                                               ; preds = %21, %394
  %79 = phi i64 [ 0, %21 ], [ %395, %394 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #14
  store float 0xFFFFFFFFE0000000, float* %23, align 4
  store float 0xFFFFFFFFE0000000, float* %24, align 4
  %80 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %79
  %81 = bitcast %class.FX_PATHPOINT* %80 to i32*
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %26, align 4
  %83 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %79, i32 0, i32 1
  %84 = bitcast float* %83 to i32*
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %27, align 4
  br i1 %28, label %86, label %89

86:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %5, %class.CFX_Matrix* nonnull %1, %class.CFX_PTemplate* nonnull dereferenceable(8) %4) #14
  %87 = load i32, i32* %30, align 4
  store i32 %87, i32* %26, align 4
  %88 = load i32, i32* %32, align 4
  store i32 %88, i32* %27, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  br label %89

89:                                               ; preds = %78, %86
  %90 = phi i32 [ %85, %78 ], [ %88, %86 ]
  %91 = phi i32 [ %82, %78 ], [ %87, %86 ]
  %92 = bitcast i32 %91 to float
  %93 = bitcast i32 %90 to float
  %94 = fcmp olt float %92, -3.200000e+04
  %95 = select i1 %94, float -3.200000e+04, float %92
  %96 = fcmp ogt float %95, 3.200000e+04
  %97 = bitcast float %95 to i32
  %98 = select i1 %96, i32 1190789120, i32 %97
  %99 = fcmp olt float %93, -3.200000e+04
  %100 = select i1 %99, float -3.200000e+04, float %93
  %101 = fcmp ogt float %100, 3.200000e+04
  %102 = bitcast float %100 to i32
  %103 = select i1 %101, i32 1190789120, i32 %102
  store i32 %98, i32* %26, align 4
  store i32 %103, i32* %27, align 4
  %104 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %79, i32 1
  %105 = load i8, i8* %104, align 4
  %106 = bitcast i32 %98 to float
  %107 = bitcast i32 %103 to float
  switch i8 %105, label %207 [
    i8 2, label %108
    i8 0, label %136
  ]

108:                                              ; preds = %89
  %109 = load i32, i32* %34, align 8
  %110 = lshr i32 %109, 8
  %111 = load i32, i32* %35, align 4
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %108
  call void @_ZN6pdfium3agg12path_storage14allocate_blockEj(%"class.pdfium::agg::path_storage"* %2, i32 %110) #14
  %114 = load i32, i32* %34, align 8
  br label %115

115:                                              ; preds = %108, %113
  %116 = phi i32 [ %109, %108 ], [ %114, %113 ]
  %117 = load float**, float*** %36, align 8
  %118 = zext i32 %110 to i64
  %119 = getelementptr inbounds float*, float** %117, i64 %118
  %120 = load float*, float** %119, align 8
  %121 = shl i32 %116, 1
  %122 = and i32 %121, 510
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds float, float* %120, i64 %123
  %125 = load i8**, i8*** %37, align 8
  %126 = getelementptr inbounds i8*, i8** %125, i64 %118
  %127 = load i8*, i8** %126, align 8
  %128 = and i32 %116, 255
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %127, i64 %129
  store i8 1, i8* %130, align 1
  %131 = getelementptr inbounds float, float* %124, i64 1
  %132 = bitcast float* %124 to i32*
  store i32 %98, i32* %132, align 4
  %133 = bitcast float* %131 to i32*
  store i32 %103, i32* %133, align 4
  %134 = load i32, i32* %34, align 8
  %135 = add i32 %134, 1
  store i32 %135, i32* %34, align 8
  br label %385

136:                                              ; preds = %89
  %137 = icmp eq i64 %79, 0
  br i1 %137, label %178, label %138

138:                                              ; preds = %136
  %139 = add i64 %79, -1
  %140 = icmp ugt i64 %19, %139
  br i1 %140, label %142, label %141, !prof !12

141:                                              ; preds = %138
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !13
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !14
  unreachable

142:                                              ; preds = %138
  %143 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %139, i32 1
  %144 = load i8, i8* %143, align 4
  %145 = icmp eq i8 %144, 2
  br i1 %145, label %146, label %178

146:                                              ; preds = %142
  %147 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %139, i32 2
  %148 = load i8, i8* %147, align 1, !range !7
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %150, label %178

150:                                              ; preds = %146
  %151 = icmp eq i64 %79, %33
  br i1 %151, label %164, label %152

152:                                              ; preds = %150
  %153 = add nuw i64 %79, 1
  %154 = icmp ugt i64 %19, %153
  br i1 %154, label %156, label %155, !prof !12

155:                                              ; preds = %152
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !13
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !14
  unreachable

156:                                              ; preds = %152
  %157 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %153, i32 1
  %158 = load i8, i8* %157, align 4
  %159 = icmp eq i8 %158, 2
  br i1 %159, label %160, label %178

160:                                              ; preds = %156
  %161 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %153, i32 2
  %162 = load i8, i8* %161, align 1, !range !7
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %164, label %178

164:                                              ; preds = %160, %150
  %165 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %80, i64 0, i32 0, i32 0
  %166 = load float, float* %165, align 4
  %167 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %139, i32 0, i32 0
  %168 = load float, float* %167, align 4
  %169 = fcmp oeq float %166, %168
  br i1 %169, label %170, label %178

170:                                              ; preds = %164
  %171 = load float, float* %83, align 4
  %172 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %139, i32 0, i32 1
  %173 = load float, float* %172, align 4
  %174 = fcmp oeq float %171, %173
  br i1 %174, label %175, label %178

175:                                              ; preds = %170
  %176 = fadd float %106, 1.000000e+00
  store float %176, float* %23, align 4
  %177 = bitcast float %176 to i32
  br label %178

178:                                              ; preds = %164, %156, %142, %136, %175, %170, %160, %146
  %179 = phi i32 [ %98, %164 ], [ %98, %156 ], [ %98, %142 ], [ %98, %136 ], [ %177, %175 ], [ %98, %170 ], [ %98, %160 ], [ %98, %146 ]
  %180 = load i32, i32* %34, align 8
  %181 = lshr i32 %180, 8
  %182 = load i32, i32* %35, align 4
  %183 = icmp ult i32 %181, %182
  br i1 %183, label %186, label %184

184:                                              ; preds = %178
  call void @_ZN6pdfium3agg12path_storage14allocate_blockEj(%"class.pdfium::agg::path_storage"* %2, i32 %181) #14
  %185 = load i32, i32* %34, align 8
  br label %186

186:                                              ; preds = %178, %184
  %187 = phi i32 [ %180, %178 ], [ %185, %184 ]
  %188 = load float**, float*** %36, align 8
  %189 = zext i32 %181 to i64
  %190 = getelementptr inbounds float*, float** %188, i64 %189
  %191 = load float*, float** %190, align 8
  %192 = shl i32 %187, 1
  %193 = and i32 %192, 510
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds float, float* %191, i64 %194
  %196 = load i8**, i8*** %37, align 8
  %197 = getelementptr inbounds i8*, i8** %196, i64 %189
  %198 = load i8*, i8** %197, align 8
  %199 = and i32 %187, 255
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds i8, i8* %198, i64 %200
  store i8 2, i8* %201, align 1
  %202 = getelementptr inbounds float, float* %195, i64 1
  %203 = bitcast float* %195 to i32*
  store i32 %179, i32* %203, align 4
  %204 = bitcast float* %202 to i32*
  store i32 %103, i32* %204, align 4
  %205 = load i32, i32* %34, align 8
  %206 = add i32 %205, 1
  store i32 %206, i32* %34, align 8
  br label %385

207:                                              ; preds = %89
  %208 = icmp eq i8 %105, 1
  %209 = icmp ne i64 %79, 0
  %210 = and i1 %209, %208
  br i1 %210, label %211, label %385

211:                                              ; preds = %207
  %212 = add i64 %79, 2
  %213 = icmp ult i64 %212, %19
  br i1 %213, label %214, label %385

214:                                              ; preds = %211
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #14
  store float 0xFFFFFFFFE0000000, float* %39, align 4
  store float 0xFFFFFFFFE0000000, float* %40, align 4
  %215 = add i64 %79, -1
  %216 = icmp ugt i64 %19, %215
  br i1 %216, label %218, label %217, !prof !12

217:                                              ; preds = %214
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !13
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !14
  unreachable

218:                                              ; preds = %214
  %219 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %215, i32 0
  %220 = bitcast %class.CFX_PTemplate* %219 to i32*
  %221 = load i32, i32* %220, align 4
  store i32 %221, i32* %41, align 4
  %222 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %215, i32 0, i32 1
  %223 = bitcast float* %222 to i32*
  %224 = load i32, i32* %223, align 4
  store i32 %224, i32* %42, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  store float 0xFFFFFFFFE0000000, float* %44, align 4
  store float 0xFFFFFFFFE0000000, float* %45, align 4
  %225 = add nuw i64 %79, 1
  %226 = icmp ugt i64 %19, %225
  br i1 %226, label %228, label %227, !prof !12

227:                                              ; preds = %218
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !13
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !14
  unreachable

228:                                              ; preds = %218
  %229 = bitcast i32 %224 to float
  %230 = bitcast i32 %221 to float
  %231 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %225, i32 0
  %232 = bitcast %class.CFX_PTemplate* %231 to i32*
  %233 = load i32, i32* %232, align 4
  store i32 %233, i32* %46, align 4
  %234 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %225, i32 0, i32 1
  %235 = bitcast float* %234 to i32*
  %236 = load i32, i32* %235, align 4
  store i32 %236, i32* %47, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #14
  store float 0xFFFFFFFFE0000000, float* %49, align 4
  store float 0xFFFFFFFFE0000000, float* %50, align 4
  %237 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %212, i32 0
  %238 = bitcast %class.CFX_PTemplate* %237 to i32*
  %239 = load i32, i32* %238, align 4
  store i32 %239, i32* %51, align 4
  %240 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %212, i32 0, i32 1
  %241 = bitcast float* %240 to i32*
  %242 = load i32, i32* %241, align 4
  store i32 %242, i32* %52, align 4
  %243 = bitcast i32 %233 to float
  %244 = bitcast i32 %236 to float
  br i1 %28, label %245, label %258

245:                                              ; preds = %228
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #14
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %9, %class.CFX_Matrix* nonnull %1, %class.CFX_PTemplate* nonnull dereferenceable(8) %6) #14
  %246 = load i32, i32* %54, align 4
  store i32 %246, i32* %41, align 4
  %247 = load i32, i32* %56, align 4
  store i32 %247, i32* %42, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #14
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %10, %class.CFX_Matrix* nonnull %1, %class.CFX_PTemplate* nonnull dereferenceable(8) %7) #14
  %248 = load i32, i32* %58, align 4
  store i32 %248, i32* %46, align 4
  %249 = load i32, i32* %60, align 4
  store i32 %249, i32* %47, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #14
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %11, %class.CFX_Matrix* nonnull %1, %class.CFX_PTemplate* nonnull dereferenceable(8) %8) #14
  %250 = load i32, i32* %62, align 4
  store i32 %250, i32* %51, align 4
  %251 = load i32, i32* %64, align 4
  store i32 %251, i32* %52, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #14
  %252 = load float, float* %39, align 4, !noalias !15
  %253 = load float, float* %40, align 4, !noalias !15
  %254 = load float, float* %44, align 4, !noalias !18
  %255 = load float, float* %45, align 4, !noalias !18
  %256 = load float, float* %23, align 4
  %257 = load float, float* %24, align 4
  br label %258

258:                                              ; preds = %245, %228
  %259 = phi float [ %257, %245 ], [ %107, %228 ]
  %260 = phi float [ %256, %245 ], [ %106, %228 ]
  %261 = phi i32 [ %251, %245 ], [ %242, %228 ]
  %262 = phi i32 [ %250, %245 ], [ %239, %228 ]
  %263 = phi float [ %255, %245 ], [ %244, %228 ]
  %264 = phi float [ %254, %245 ], [ %243, %228 ]
  %265 = phi float [ %253, %245 ], [ %229, %228 ]
  %266 = phi float [ %252, %245 ], [ %230, %228 ]
  %267 = bitcast i32 %262 to float
  %268 = bitcast i32 %261 to float
  %269 = fcmp olt float %266, -3.200000e+04
  %270 = select i1 %269, float -3.200000e+04, float %266
  %271 = fcmp ogt float %270, 3.200000e+04
  %272 = bitcast float %270 to i32
  %273 = select i1 %271, i32 1190789120, i32 %272
  %274 = fcmp olt float %265, -3.200000e+04
  %275 = select i1 %274, float -3.200000e+04, float %265
  %276 = fcmp ogt float %275, 3.200000e+04
  %277 = bitcast float %275 to i32
  %278 = select i1 %276, i32 1190789120, i32 %277
  store i32 %273, i32* %41, align 4
  store i32 %278, i32* %42, align 4
  %279 = fcmp olt float %264, -3.200000e+04
  %280 = select i1 %279, float -3.200000e+04, float %264
  %281 = fcmp ogt float %280, 3.200000e+04
  %282 = bitcast float %280 to i32
  %283 = select i1 %281, i32 1190789120, i32 %282
  %284 = fcmp olt float %263, -3.200000e+04
  %285 = select i1 %284, float -3.200000e+04, float %263
  %286 = fcmp ogt float %285, 3.200000e+04
  %287 = bitcast float %285 to i32
  %288 = select i1 %286, i32 1190789120, i32 %287
  store i32 %283, i32* %46, align 4
  store i32 %288, i32* %47, align 4
  %289 = fcmp olt float %267, -3.200000e+04
  %290 = select i1 %289, float -3.200000e+04, float %267
  %291 = fcmp ogt float %290, 3.200000e+04
  %292 = bitcast float %290 to i32
  %293 = select i1 %291, i32 1190789120, i32 %292
  %294 = fcmp olt float %268, -3.200000e+04
  %295 = select i1 %294, float -3.200000e+04, float %268
  %296 = fcmp ogt float %295, 3.200000e+04
  %297 = bitcast float %295 to i32
  %298 = select i1 %296, i32 1190789120, i32 %297
  store i32 %293, i32* %51, align 4
  store i32 %298, i32* %52, align 4
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %65) #14
  store float 0xFFFFFFFFE0000000, float* %66, align 8
  store float 0xFFFFFFFFE0000000, float* %67, align 4
  %299 = bitcast i32 %273 to float
  %300 = bitcast i32 %278 to float
  %301 = bitcast i32 %283 to float
  %302 = bitcast i32 %288 to float
  %303 = bitcast i32 %293 to float
  %304 = bitcast i32 %298 to float
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 -86, i64 40, i1 false)
  store i32 0, i32* %68, align 8
  store i32 0, i32* %69, align 8
  store i32 0, i32* %70, align 4
  store i32 0, i32* %71, align 8
  store %"struct.pdfium::agg::point_type"** null, %"struct.pdfium::agg::point_type"*** %72, align 8
  store i32 64, i32* %73, align 8
  call void @_ZN6pdfium3agg10curve4_div4initEffffffff(%"class.pdfium::agg::curve4_div"* nonnull %74, float %299, float %300, float %260, float %259, float %301, float %302, float %303, float %304) #14
  store i32 0, i32* %68, align 8
  %305 = load i32, i32* %69, align 8
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %366, label %307

307:                                              ; preds = %258
  %308 = load i32, i32* %34, align 8
  br label %309

309:                                              ; preds = %307, %341
  %310 = phi i32 [ %362, %341 ], [ %308, %307 ]
  %311 = phi i32 [ %363, %341 ], [ 0, %307 ]
  %312 = add nuw i32 %311, 1
  store i32 %312, i32* %68, align 8
  %313 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %72, align 8
  %314 = lshr i32 %311, 6
  %315 = zext i32 %314 to i64
  %316 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %313, i64 %315
  %317 = load %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %316, align 8
  %318 = and i32 %311, 63
  %319 = zext i32 %318 to i64
  %320 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %317, i64 %319
  %321 = bitcast %"struct.pdfium::agg::point_type"* %320 to i32*
  %322 = load i32, i32* %321, align 4
  %323 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %317, i64 %319, i32 1
  %324 = bitcast float* %323 to i32*
  %325 = load i32, i32* %324, align 4
  %326 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %317, i64 %319, i32 2
  %327 = load i32, i32* %326, align 4
  %328 = icmp eq i32 %311, 0
  br i1 %328, label %329, label %333

329:                                              ; preds = %309
  %330 = icmp eq i32 %310, 0
  %331 = or i32 %327, 2
  %332 = select i1 %330, i32 1, i32 %331
  br label %333

333:                                              ; preds = %329, %309
  %334 = phi i32 [ %332, %329 ], [ 2, %309 ]
  %335 = or i32 %334, %327
  %336 = lshr i32 %310, 8
  %337 = load i32, i32* %35, align 4
  %338 = icmp ult i32 %336, %337
  br i1 %338, label %341, label %339

339:                                              ; preds = %333
  call void @_ZN6pdfium3agg12path_storage14allocate_blockEj(%"class.pdfium::agg::path_storage"* %2, i32 %336) #14
  %340 = load i32, i32* %34, align 8
  br label %341

341:                                              ; preds = %339, %333
  %342 = phi i32 [ %310, %333 ], [ %340, %339 ]
  %343 = load float**, float*** %36, align 8
  %344 = zext i32 %336 to i64
  %345 = getelementptr inbounds float*, float** %343, i64 %344
  %346 = load float*, float** %345, align 8
  %347 = shl i32 %342, 1
  %348 = and i32 %347, 510
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds float, float* %346, i64 %349
  %351 = load i8**, i8*** %37, align 8
  %352 = getelementptr inbounds i8*, i8** %351, i64 %344
  %353 = load i8*, i8** %352, align 8
  %354 = and i32 %342, 255
  %355 = zext i32 %354 to i64
  %356 = getelementptr inbounds i8, i8* %353, i64 %355
  %357 = trunc i32 %335 to i8
  store i8 %357, i8* %356, align 1
  %358 = getelementptr inbounds float, float* %350, i64 1
  %359 = bitcast float* %350 to i32*
  store i32 %322, i32* %359, align 4
  %360 = bitcast float* %358 to i32*
  store i32 %325, i32* %360, align 4
  %361 = load i32, i32* %34, align 8
  %362 = add i32 %361, 1
  store i32 %362, i32* %34, align 8
  %363 = load i32, i32* %68, align 8
  %364 = load i32, i32* %69, align 8
  %365 = icmp ult i32 %363, %364
  br i1 %365, label %309, label %366

366:                                              ; preds = %341, %258
  %367 = load i32, i32* %70, align 4
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %384, label %369

369:                                              ; preds = %366
  %370 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %72, align 8
  %371 = add i32 %367, -1
  store i32 %371, i32* %70, align 4
  %372 = zext i32 %367 to i64
  %373 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %370, i64 %372
  br label %374

374:                                              ; preds = %374, %369
  %375 = phi %"struct.pdfium::agg::point_type"** [ %376, %374 ], [ %373, %369 ]
  %376 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %375, i64 -1
  %377 = bitcast %"struct.pdfium::agg::point_type"** %376 to i8**
  %378 = load i8*, i8** %377, align 8
  call void @_Z7FX_FreePv(i8* %378) #14
  %379 = load i32, i32* %70, align 4
  %380 = add i32 %379, -1
  store i32 %380, i32* %70, align 4
  %381 = icmp eq i32 %379, 0
  br i1 %381, label %382, label %374

382:                                              ; preds = %374
  %383 = load i8*, i8** %75, align 8
  call void @_Z7FX_FreePv(i8* %383) #14
  br label %384

384:                                              ; preds = %366, %382
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %65) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #14
  br label %385

385:                                              ; preds = %186, %211, %384, %207, %115
  %386 = phi i64 [ %79, %115 ], [ %79, %186 ], [ %212, %384 ], [ %79, %211 ], [ %79, %207 ]
  %387 = icmp ugt i64 %19, %386
  br i1 %387, label %389, label %388, !prof !12

388:                                              ; preds = %385
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !13
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !14
  unreachable

389:                                              ; preds = %385
  %390 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %25, i64 %386, i32 2
  %391 = load i8, i8* %390, align 1, !range !7
  %392 = icmp eq i8 %391, 0
  br i1 %392, label %394, label %393

393:                                              ; preds = %389
  call void @_ZN6pdfium3agg12path_storage8end_polyEv(%"class.pdfium::agg::path_storage"* %2) #14
  br label %394

394:                                              ; preds = %389, %393
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #14
  %395 = add nuw i64 %386, 1
  %396 = icmp ult i64 %395, %19
  br i1 %396, label %78, label %77
}

declare void @_ZN6pdfium3agg12path_storage8end_polyEv(%"class.pdfium::agg::path_storage"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6pdfium3agg12path_storageD1Ev(%"class.pdfium::agg::path_storage"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6pdfium19CFX_AggDeviceDriver18SetClip_PathStrokeEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateData(%"class.pdfium::CFX_AggDeviceDriver"* nocapture, %class.CFX_PathData* nocapture readonly, %class.CFX_Matrix*, %class.CFX_GraphStateData* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = alloca %"class.pdfium::agg::path_storage", align 8
  %6 = alloca %"class.pdfium::agg::rasterizer_scanline_aa", align 8
  %7 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %8, align 8
  %10 = icmp eq %class.CFX_ClipRgn* %9, null
  br i1 %10, label %11, label %26

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %12, align 8
  %14 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %13, i64 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %13, i64 0, i32 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = tail call i8* @_Znwm(i64 32) #15
  %19 = bitcast i8* %18 to %class.CFX_ClipRgn*
  tail call void @_ZN11CFX_ClipRgnC1Eii(%class.CFX_ClipRgn* nonnull %19, i32 %15, i32 %17) #14
  %20 = ptrtoint i8* %18 to i64
  %21 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %8, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.1"* %7 to i64*
  store i64 %20, i64* %22, align 8
  %23 = icmp eq %class.CFX_ClipRgn* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %11
  tail call void @_ZN11CFX_ClipRgnD1Ev(%class.CFX_ClipRgn* nonnull %21) #14
  %25 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %21, i64 0, i32 0
  tail call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %4, %11, %24
  %27 = bitcast %"class.pdfium::agg::path_storage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 40, i1 false)
  call void @_ZN6pdfium3agg12path_storageC1Ev(%"class.pdfium::agg::path_storage"* nonnull %5) #14
  call fastcc void @_ZN6pdfium12_GLOBAL__N_112BuildAggPathEPK12CFX_PathDataPK10CFX_MatrixRNS_3agg12path_storageE(%class.CFX_PathData* %1, %class.CFX_Matrix* null, %"class.pdfium::agg::path_storage"* nonnull dereferenceable(40) %5)
  %28 = bitcast %"class.pdfium::agg::rasterizer_scanline_aa"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %28) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 176, i1 false)
  %29 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %6, i64 0, i32 0
  call void @_ZN6pdfium3agg10outline_aaC1Ev(%"class.pdfium::agg::outline_aa"* nonnull %29) #14
  %30 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %6, i64 0, i32 1
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %6, i64 0, i32 2
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %6, i64 0, i32 3
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %6, i64 0, i32 9
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %6, i64 0, i32 11
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %35, align 8
  %37 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %36, i64 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = sitofp i32 %38 to float
  %40 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %36, i64 0, i32 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = sitofp i32 %41 to float
  %43 = fmul float %39, 2.560000e+02
  %44 = fptosi float %43 to i32
  %45 = fmul float %42, 2.560000e+02
  %46 = fptosi float %45 to i32
  %47 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %6, i64 0, i32 10, i32 0
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %6, i64 0, i32 10, i32 1
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %6, i64 0, i32 10, i32 2
  store i32 %44, i32* %49, align 4
  %50 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %6, i64 0, i32 10, i32 3
  store i32 %46, i32* %50, align 4
  %51 = icmp slt i32 %44, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %26
  store i32 %44, i32* %47, align 4
  store i32 0, i32* %49, align 4
  br label %53

53:                                               ; preds = %52, %26
  %54 = icmp slt i32 %46, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  store i32 %46, i32* %48, align 4
  store i32 0, i32* %50, align 4
  br label %56

56:                                               ; preds = %53, %55
  store i8 1, i8* %34, align 4
  call fastcc void @_ZN6pdfium12_GLOBAL__N_115RasterizeStrokeEPNS_3agg22rasterizer_scanline_aaEPNS1_12path_storageEPK10CFX_MatrixPK18CFX_GraphStateDatafb(%"class.pdfium::agg::rasterizer_scanline_aa"* nonnull %6, %"class.pdfium::agg::path_storage"* nonnull %5, %class.CFX_Matrix* %2, %class.CFX_GraphStateData* %3, float 1.000000e+00)
  store i32 0, i32* %30, align 8
  call void @_ZN6pdfium19CFX_AggDeviceDriver11SetClipMaskERNS_3agg22rasterizer_scanline_aaE(%"class.pdfium::CFX_AggDeviceDriver"* %0, %"class.pdfium::agg::rasterizer_scanline_aa"* nonnull dereferenceable(176) %6)
  call void @_ZN6pdfium3agg10outline_aaD1Ev(%"class.pdfium::agg::outline_aa"* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %28) #14
  call void @_ZN6pdfium3agg12path_storageD1Ev(%"class.pdfium::agg::path_storage"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #14
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6pdfium12_GLOBAL__N_115RasterizeStrokeEPNS_3agg22rasterizer_scanline_aaEPNS1_12path_storageEPK10CFX_MatrixPK18CFX_GraphStateDatafb(%"class.pdfium::agg::rasterizer_scanline_aa"*, %"class.pdfium::agg::path_storage"*, %class.CFX_Matrix*, %class.CFX_GraphStateData* nocapture readonly, float) unnamed_addr #0 {
  %6 = alloca %"struct.pdfium::agg::conv_dash", align 8
  %7 = alloca %"struct.pdfium::agg::conv_stroke", align 8
  %8 = alloca %"struct.pdfium::agg::conv_stroke.95", align 8
  %9 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %3, i64 0, i32 0
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 2
  %12 = zext i1 %11 to i32
  %13 = icmp eq i8 %10, 1
  %14 = select i1 %13, i32 2, i32 %12
  %15 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %3, i64 0, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 2
  %18 = select i1 %17, i32 3, i32 1
  %19 = icmp eq i8 %16, 1
  %20 = select i1 %19, i32 2, i32 %18
  %21 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %3, i64 0, i32 4
  %22 = load float, float* %21, align 4
  %23 = fmul float %22, %4
  %24 = icmp eq %class.CFX_Matrix* %2, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %5
  %26 = tail call float @_ZNK10CFX_Matrix8GetXUnitEv(%class.CFX_Matrix* nonnull %2) #14
  %27 = tail call float @_ZNK10CFX_Matrix8GetYUnitEv(%class.CFX_Matrix* nonnull %2) #14
  %28 = fadd float %26, %27
  %29 = fmul float %28, 5.000000e-01
  %30 = fdiv float 1.000000e+00, %29
  br label %31

31:                                               ; preds = %5, %25
  %32 = phi float [ 1.000000e+00, %5 ], [ %30, %25 ]
  %33 = fcmp olt float %23, %32
  %34 = select i1 %33, float %32, float %23
  %35 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %3, i64 0, i32 5
  %36 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %35, i64 0, i32 0, i32 0
  %37 = load float*, float** %36, align 8
  %38 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %3, i64 0, i32 5, i32 0, i32 1
  %39 = load float*, float** %38, align 8
  %40 = icmp eq float* %37, %39
  br i1 %40, label %163, label %41

41:                                               ; preds = %31
  %42 = bitcast %"struct.pdfium::agg::conv_dash"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %42) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 8 bitcast (%"struct.pdfium::agg::conv_dash"* @__const._ZN6pdfium12_GLOBAL__N_115RasterizeStrokeEPNS_3agg22rasterizer_scanline_aaEPNS1_12path_storageEPK10CFX_MatrixPK18CFX_GraphStateDatafb.dash to i8*), i64 256, i1 false)
  %43 = getelementptr inbounds %"struct.pdfium::agg::conv_dash", %"struct.pdfium::agg::conv_dash"* %6, i64 0, i32 0, i32 0
  store %"class.pdfium::agg::path_storage"* %1, %"class.pdfium::agg::path_storage"** %43, align 8
  %44 = getelementptr inbounds %"struct.pdfium::agg::conv_dash", %"struct.pdfium::agg::conv_dash"* %6, i64 0, i32 0, i32 1
  call void @_ZN6pdfium3agg10vcgen_dashC1Ev(%"class.pdfium::agg::vcgen_dash"* %44) #14
  %45 = getelementptr inbounds %"struct.pdfium::agg::conv_dash", %"struct.pdfium::agg::conv_dash"* %6, i64 0, i32 0, i32 4
  store i32 0, i32* %45, align 4
  %46 = bitcast float** %38 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector.25"* %35 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = ashr exact i64 %50, 2
  %52 = add nsw i64 %51, 1
  %53 = icmp ugt i64 %52, 1
  br i1 %53, label %134, label %54

54:                                               ; preds = %149, %41
  %55 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %3, i64 0, i32 2
  %56 = load float, float* %55, align 4
  %57 = fmul float %56, %4
  call void @_ZN6pdfium3agg10vcgen_dash10dash_startEf(%"class.pdfium::agg::vcgen_dash"* %44, float %57) #14
  %58 = bitcast %"struct.pdfium::agg::conv_stroke"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %58) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* align 8 bitcast (%"struct.pdfium::agg::conv_stroke"* @__const._ZN6pdfium12_GLOBAL__N_115RasterizeStrokeEPNS_3agg22rasterizer_scanline_aaEPNS1_12path_storageEPK10CFX_MatrixPK18CFX_GraphStateDatafb.stroke to i8*), i64 144, i1 false)
  %59 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke", %"struct.pdfium::agg::conv_stroke"* %7, i64 0, i32 0, i32 0
  store %"struct.pdfium::agg::conv_dash"* %6, %"struct.pdfium::agg::conv_dash"** %59, align 8
  %60 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke", %"struct.pdfium::agg::conv_stroke"* %7, i64 0, i32 0, i32 1
  call void @_ZN6pdfium3agg12vcgen_strokeC1Ev(%"class.pdfium::agg::vcgen_stroke"* %60) #14
  %61 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke", %"struct.pdfium::agg::conv_stroke"* %7, i64 0, i32 0, i32 4
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke", %"struct.pdfium::agg::conv_stroke"* %7, i64 0, i32 0, i32 1, i32 7
  store i32 %20, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke", %"struct.pdfium::agg::conv_stroke"* %7, i64 0, i32 0, i32 1, i32 6
  store i32 %14, i32* %63, align 8
  %64 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %3, i64 0, i32 3
  %65 = bitcast float* %64 to i32*
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke", %"struct.pdfium::agg::conv_stroke"* %7, i64 0, i32 0, i32 1, i32 3
  %68 = bitcast float* %67 to i32*
  store i32 %66, i32* %68, align 4
  %69 = fmul float %34, 5.000000e-01
  %70 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke", %"struct.pdfium::agg::conv_stroke"* %7, i64 0, i32 0, i32 1, i32 2
  store float %69, float* %70, align 8
  call void @_ZN6pdfium3agg22rasterizer_scanline_aa20add_path_transformedINS0_11conv_strokeINS0_9conv_dashINS0_12path_storageENS0_12null_markersEEES6_EEEEvRT_PK10CFX_Matrixj(%"class.pdfium::agg::rasterizer_scanline_aa"* %0, %"struct.pdfium::agg::conv_stroke"* nonnull dereferenceable(144) %7, %class.CFX_Matrix* %2, i32 0)
  %71 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke", %"struct.pdfium::agg::conv_stroke"* %7, i64 0, i32 0, i32 1, i32 1, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %91, label %74

74:                                               ; preds = %54
  %75 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke", %"struct.pdfium::agg::conv_stroke"* %7, i64 0, i32 0, i32 1, i32 1, i32 4
  %76 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %75, align 8
  %77 = add i32 %72, -1
  store i32 %77, i32* %71, align 4
  %78 = zext i32 %72 to i64
  %79 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %76, i64 %78
  br label %80

80:                                               ; preds = %80, %74
  %81 = phi %"struct.pdfium::agg::point_type"** [ %82, %80 ], [ %79, %74 ]
  %82 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %81, i64 -1
  %83 = bitcast %"struct.pdfium::agg::point_type"** %82 to i8**
  %84 = load i8*, i8** %83, align 8
  call void @_Z7FX_FreePv(i8* %84) #14
  %85 = load i32, i32* %71, align 4
  %86 = add i32 %85, -1
  store i32 %86, i32* %71, align 4
  %87 = icmp eq i32 %85, 0
  br i1 %87, label %88, label %80

88:                                               ; preds = %80
  %89 = bitcast %"struct.pdfium::agg::point_type"*** %75 to i8**
  %90 = load i8*, i8** %89, align 8
  call void @_Z7FX_FreePv(i8* %90) #14
  br label %91

91:                                               ; preds = %88, %54
  %92 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke", %"struct.pdfium::agg::conv_stroke"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %112, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke", %"struct.pdfium::agg::conv_stroke"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 4
  %97 = load %"struct.pdfium::agg::vertex_dist_cmd"**, %"struct.pdfium::agg::vertex_dist_cmd"*** %96, align 8
  %98 = add i32 %93, -1
  store i32 %98, i32* %92, align 4
  %99 = zext i32 %93 to i64
  %100 = getelementptr inbounds %"struct.pdfium::agg::vertex_dist_cmd"*, %"struct.pdfium::agg::vertex_dist_cmd"** %97, i64 %99
  br label %101

101:                                              ; preds = %101, %95
  %102 = phi %"struct.pdfium::agg::vertex_dist_cmd"** [ %103, %101 ], [ %100, %95 ]
  %103 = getelementptr inbounds %"struct.pdfium::agg::vertex_dist_cmd"*, %"struct.pdfium::agg::vertex_dist_cmd"** %102, i64 -1
  %104 = bitcast %"struct.pdfium::agg::vertex_dist_cmd"** %103 to i8**
  %105 = load i8*, i8** %104, align 8
  call void @_Z7FX_FreePv(i8* %105) #14
  %106 = load i32, i32* %92, align 4
  %107 = add i32 %106, -1
  store i32 %107, i32* %92, align 4
  %108 = icmp eq i32 %106, 0
  br i1 %108, label %109, label %101

109:                                              ; preds = %101
  %110 = bitcast %"struct.pdfium::agg::vertex_dist_cmd"*** %96 to i8**
  %111 = load i8*, i8** %110, align 8
  call void @_Z7FX_FreePv(i8* %111) #14
  br label %112

112:                                              ; preds = %91, %109
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %58) #14
  %113 = getelementptr inbounds %"struct.pdfium::agg::conv_dash", %"struct.pdfium::agg::conv_dash"* %6, i64 0, i32 0, i32 1, i32 11, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %133, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"struct.pdfium::agg::conv_dash", %"struct.pdfium::agg::conv_dash"* %6, i64 0, i32 0, i32 1, i32 11, i32 0, i32 4
  %118 = load %"struct.pdfium::agg::vertex_dist"**, %"struct.pdfium::agg::vertex_dist"*** %117, align 8
  %119 = add i32 %114, -1
  store i32 %119, i32* %113, align 4
  %120 = zext i32 %114 to i64
  %121 = getelementptr inbounds %"struct.pdfium::agg::vertex_dist"*, %"struct.pdfium::agg::vertex_dist"** %118, i64 %120
  br label %122

122:                                              ; preds = %122, %116
  %123 = phi %"struct.pdfium::agg::vertex_dist"** [ %124, %122 ], [ %121, %116 ]
  %124 = getelementptr inbounds %"struct.pdfium::agg::vertex_dist"*, %"struct.pdfium::agg::vertex_dist"** %123, i64 -1
  %125 = bitcast %"struct.pdfium::agg::vertex_dist"** %124 to i8**
  %126 = load i8*, i8** %125, align 8
  call void @_Z7FX_FreePv(i8* %126) #14
  %127 = load i32, i32* %113, align 4
  %128 = add i32 %127, -1
  store i32 %128, i32* %113, align 4
  %129 = icmp eq i32 %127, 0
  br i1 %129, label %130, label %122

130:                                              ; preds = %122
  %131 = bitcast %"struct.pdfium::agg::vertex_dist"*** %117 to i8**
  %132 = load i8*, i8** %131, align 8
  call void @_Z7FX_FreePv(i8* %132) #14
  br label %133

133:                                              ; preds = %112, %130
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %42) #14
  br label %219

134:                                              ; preds = %41, %149
  %135 = phi i64 [ %157, %149 ], [ %49, %41 ]
  %136 = phi i64 [ %159, %149 ], [ %51, %41 ]
  %137 = phi i64 [ %155, %149 ], [ 0, %41 ]
  %138 = inttoptr i64 %135 to float*
  %139 = shl nuw i64 %137, 1
  %140 = getelementptr inbounds float, float* %138, i64 %139
  %141 = load float, float* %140, align 4
  %142 = fcmp ugt float %141, 0x3EB0C6F7A0000000
  %143 = select i1 %142, float %141, float 0x3FB99999A0000000
  %144 = or i64 %139, 1
  %145 = icmp eq i64 %144, %136
  br i1 %145, label %149, label %146

146:                                              ; preds = %134
  %147 = getelementptr inbounds float, float* %138, i64 %144
  %148 = load float, float* %147, align 4
  br label %149

149:                                              ; preds = %134, %146
  %150 = phi float [ %148, %146 ], [ %143, %134 ]
  %151 = fcmp olt float %150, 0.000000e+00
  %152 = fmul float %143, %4
  %153 = select i1 %151, float 0.000000e+00, float %150
  %154 = fmul float %153, %4
  call void @_ZN6pdfium3agg10vcgen_dash8add_dashEff(%"class.pdfium::agg::vcgen_dash"* %44, float %152, float %154) #14
  %155 = add nuw nsw i64 %137, 1
  %156 = load i64, i64* %46, align 8
  %157 = load i64, i64* %48, align 8
  %158 = sub i64 %156, %157
  %159 = ashr exact i64 %158, 2
  %160 = add nsw i64 %159, 1
  %161 = lshr i64 %160, 1
  %162 = icmp ult i64 %155, %161
  br i1 %162, label %134, label %54

163:                                              ; preds = %31
  %164 = bitcast %"struct.pdfium::agg::conv_stroke.95"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %164) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %164, i8* align 8 bitcast (%"struct.pdfium::agg::conv_stroke.95"* @__const._ZN6pdfium12_GLOBAL__N_115RasterizeStrokeEPNS_3agg22rasterizer_scanline_aaEPNS1_12path_storageEPK10CFX_MatrixPK18CFX_GraphStateDatafb.stroke.1 to i8*), i64 144, i1 false)
  %165 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke.95", %"struct.pdfium::agg::conv_stroke.95"* %8, i64 0, i32 0, i32 0
  store %"class.pdfium::agg::path_storage"* %1, %"class.pdfium::agg::path_storage"** %165, align 8
  %166 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke.95", %"struct.pdfium::agg::conv_stroke.95"* %8, i64 0, i32 0, i32 1
  call void @_ZN6pdfium3agg12vcgen_strokeC1Ev(%"class.pdfium::agg::vcgen_stroke"* %166) #14
  %167 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke.95", %"struct.pdfium::agg::conv_stroke.95"* %8, i64 0, i32 0, i32 4
  store i32 0, i32* %167, align 4
  %168 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke.95", %"struct.pdfium::agg::conv_stroke.95"* %8, i64 0, i32 0, i32 1, i32 7
  store i32 %20, i32* %168, align 4
  %169 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke.95", %"struct.pdfium::agg::conv_stroke.95"* %8, i64 0, i32 0, i32 1, i32 6
  store i32 %14, i32* %169, align 8
  %170 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %3, i64 0, i32 3
  %171 = bitcast float* %170 to i32*
  %172 = load i32, i32* %171, align 8
  %173 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke.95", %"struct.pdfium::agg::conv_stroke.95"* %8, i64 0, i32 0, i32 1, i32 3
  %174 = bitcast float* %173 to i32*
  store i32 %172, i32* %174, align 4
  %175 = fmul float %34, 5.000000e-01
  %176 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke.95", %"struct.pdfium::agg::conv_stroke.95"* %8, i64 0, i32 0, i32 1, i32 2
  store float %175, float* %176, align 8
  call void @_ZN6pdfium3agg22rasterizer_scanline_aa20add_path_transformedINS0_11conv_strokeINS0_12path_storageENS0_12null_markersEEEEEvRT_PK10CFX_Matrixj(%"class.pdfium::agg::rasterizer_scanline_aa"* %0, %"struct.pdfium::agg::conv_stroke.95"* nonnull dereferenceable(144) %8, %class.CFX_Matrix* %2, i32 0)
  %177 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke.95", %"struct.pdfium::agg::conv_stroke.95"* %8, i64 0, i32 0, i32 1, i32 1, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %197, label %180

180:                                              ; preds = %163
  %181 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke.95", %"struct.pdfium::agg::conv_stroke.95"* %8, i64 0, i32 0, i32 1, i32 1, i32 4
  %182 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %181, align 8
  %183 = add i32 %178, -1
  store i32 %183, i32* %177, align 4
  %184 = zext i32 %178 to i64
  %185 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %182, i64 %184
  br label %186

186:                                              ; preds = %186, %180
  %187 = phi %"struct.pdfium::agg::point_type"** [ %188, %186 ], [ %185, %180 ]
  %188 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %187, i64 -1
  %189 = bitcast %"struct.pdfium::agg::point_type"** %188 to i8**
  %190 = load i8*, i8** %189, align 8
  call void @_Z7FX_FreePv(i8* %190) #14
  %191 = load i32, i32* %177, align 4
  %192 = add i32 %191, -1
  store i32 %192, i32* %177, align 4
  %193 = icmp eq i32 %191, 0
  br i1 %193, label %194, label %186

194:                                              ; preds = %186
  %195 = bitcast %"struct.pdfium::agg::point_type"*** %181 to i8**
  %196 = load i8*, i8** %195, align 8
  call void @_Z7FX_FreePv(i8* %196) #14
  br label %197

197:                                              ; preds = %194, %163
  %198 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke.95", %"struct.pdfium::agg::conv_stroke.95"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %218, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke.95", %"struct.pdfium::agg::conv_stroke.95"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 4
  %203 = load %"struct.pdfium::agg::vertex_dist_cmd"**, %"struct.pdfium::agg::vertex_dist_cmd"*** %202, align 8
  %204 = add i32 %199, -1
  store i32 %204, i32* %198, align 4
  %205 = zext i32 %199 to i64
  %206 = getelementptr inbounds %"struct.pdfium::agg::vertex_dist_cmd"*, %"struct.pdfium::agg::vertex_dist_cmd"** %203, i64 %205
  br label %207

207:                                              ; preds = %207, %201
  %208 = phi %"struct.pdfium::agg::vertex_dist_cmd"** [ %209, %207 ], [ %206, %201 ]
  %209 = getelementptr inbounds %"struct.pdfium::agg::vertex_dist_cmd"*, %"struct.pdfium::agg::vertex_dist_cmd"** %208, i64 -1
  %210 = bitcast %"struct.pdfium::agg::vertex_dist_cmd"** %209 to i8**
  %211 = load i8*, i8** %210, align 8
  call void @_Z7FX_FreePv(i8* %211) #14
  %212 = load i32, i32* %198, align 4
  %213 = add i32 %212, -1
  store i32 %213, i32* %198, align 4
  %214 = icmp eq i32 %212, 0
  br i1 %214, label %215, label %207

215:                                              ; preds = %207
  %216 = bitcast %"struct.pdfium::agg::vertex_dist_cmd"*** %202 to i8**
  %217 = load i8*, i8** %216, align 8
  call void @_Z7FX_FreePv(i8* %217) #14
  br label %218

218:                                              ; preds = %197, %215
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %164) #14
  br label %219

219:                                              ; preds = %218, %133
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK6pdfium19CFX_AggDeviceDriver13GetDriverTypeEv(%"class.pdfium::CFX_AggDeviceDriver"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium19CFX_AggDeviceDriver16RenderRasterizerERNS_3agg22rasterizer_scanline_aaEjbb(%"class.pdfium::CFX_AggDeviceDriver"* nocapture readonly, %"class.pdfium::agg::rasterizer_scanline_aa"* dereferenceable(176), i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.fxcrt::RetainPtr", align 8
  %7 = alloca %"class.pdfium::(anonymous namespace)::CFX_Renderer", align 8
  %8 = alloca %"class.pdfium::agg::scanline_u", align 8
  br i1 %4, label %9, label %18

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %10, align 8
  %12 = ptrtoint %class.CFX_DIBitmap* %11 to i64
  %13 = icmp eq %class.CFX_DIBitmap* %11, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %11, i64 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add nsw i64 %16, 1
  store i64 %17, i64* %15, align 8
  br label %18

18:                                               ; preds = %5, %14, %9
  %19 = phi i64 [ %12, %9 ], [ %12, %14 ], [ 0, %5 ]
  %20 = bitcast %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %20) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 96, i1 false)
  %21 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %22, align 8
  %24 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 5
  %25 = load i8, i8* %24, align 2, !range !7
  %26 = icmp eq i8 %25, 0
  %27 = zext i1 %3 to i8
  %28 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 0
  %29 = lshr i32 %2, 24
  store i32 %29, i32* %28, align 8
  %30 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 5
  br i1 %26, label %39, label %31

31:                                               ; preds = %18
  %32 = lshr i32 %2, 16
  %33 = and i32 %32, 255
  %34 = shl i32 %2, 16
  %35 = and i32 %34, 16711680
  %36 = and i32 %2, -16711936
  %37 = or i32 %33, %36
  %38 = or i32 %37, %35
  br label %39

39:                                               ; preds = %18, %31
  %40 = phi i32 [ %38, %31 ], [ %2, %18 ]
  store i32 %40, i32* %30, align 4
  %41 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 6
  store i8 %27, i8* %41, align 8
  %42 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 7
  store i8 %25, i8* %42, align 1
  %43 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 8
  %44 = icmp eq %class.CFX_ClipRgn* %23, null
  br i1 %44, label %54, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %23, i64 0, i32 1
  %47 = bitcast %struct.FX_RECT* %46 to i64*
  %48 = load i64, i64* %47, align 4
  %49 = and i64 %48, -4294967296
  %50 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %23, i64 0, i32 1, i32 2
  %51 = bitcast i32* %50 to i64*
  %52 = load i64, i64* %51, align 4
  %53 = and i64 %48, 4294967295
  br label %65

54:                                               ; preds = %39
  %55 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %55, align 8
  %57 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %56, i64 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %56, i64 0, i32 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = zext i32 %58 to i64
  %62 = zext i32 %60 to i64
  %63 = shl nuw i64 %62, 32
  %64 = or i64 %63, %61
  br label %65

65:                                               ; preds = %54, %45
  %66 = phi i64 [ 0, %54 ], [ %49, %45 ]
  %67 = phi i64 [ 0, %54 ], [ %53, %45 ]
  %68 = phi i64 [ %64, %54 ], [ %52, %45 ]
  %69 = or i64 %67, %66
  %70 = bitcast %struct.FX_RECT* %43 to i64*
  store i64 %69, i64* %70, align 4
  %71 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 8, i32 2
  %72 = bitcast i32* %71 to i64*
  store i64 %68, i64* %72, align 4
  %73 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 9
  %74 = inttoptr i64 %19 to %class.CFX_DIBitmap*
  %75 = bitcast %"class.fxcrt::RetainPtr"* %73 to i64*
  store i64 %19, i64* %75, align 8
  %76 = icmp eq i64 %19, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %65
  %78 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %74, i64 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = add nsw i64 %79, 1
  store i64 %80, i64* %78, align 8
  br label %81

81:                                               ; preds = %77, %65
  %82 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 10
  br i1 %44, label %97, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %23, i64 0, i32 0
  %85 = load i8, i8* %84, align 8, !range !7, !noalias !21
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %97, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %89 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %88, align 8, !noalias !24
  %90 = ptrtoint %class.CFX_DIBitmap* %89 to i64
  %91 = bitcast %"class.fxcrt::RetainPtr"* %82 to i64*
  store i64 %90, i64* %91, align 8, !alias.scope !24
  %92 = icmp eq %class.CFX_DIBitmap* %89, null
  br i1 %92, label %99, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %89, i64 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8, !noalias !24
  %96 = add nsw i64 %95, 1
  store i64 %96, i64* %94, align 8, !noalias !24
  br label %99

97:                                               ; preds = %83, %81
  %98 = bitcast %"class.fxcrt::RetainPtr"* %82 to i64*
  store i64 0, i64* %98, align 8, !alias.scope !21
  br label %99

99:                                               ; preds = %97, %93, %87
  %100 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 11
  %101 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %101, align 8
  %103 = ptrtoint %class.CFX_DIBitmap* %102 to i64
  %104 = bitcast %"class.fxcrt::RetainPtr"* %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = icmp eq %class.CFX_DIBitmap* %102, null
  br i1 %105, label %112, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %102, i64 0, i32 0, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = add nsw i64 %108, 1
  store i64 %109, i64* %107, align 8
  %110 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %110, align 8
  br label %112

112:                                              ; preds = %106, %99
  %113 = phi %class.CFX_DIBitmap* [ null, %99 ], [ %111, %106 ]
  %114 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 12, i32 0
  store %class.CFX_ClipRgn* %23, %class.CFX_ClipRgn** %114, align 8
  %115 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %113, i64 0, i32 0, i32 1
  %116 = load i16, i16* %115, align 8
  %117 = trunc i16 %116 to i8
  switch i8 %117, label %118 [
    i8 1, label %122
    i8 8, label %121
  ]

118:                                              ; preds = %112
  %119 = icmp eq i16 %116, 544
  %120 = select i1 %119, i64 ptrtoint (void (%"class.pdfium::(anonymous namespace)::CFX_Renderer"*, i8*, i32, i32, i32, i8*, i32, i32, i8*, i8*)* @_ZN6pdfium12_GLOBAL__N_112CFX_Renderer17CompositeSpanARGBEPhiiiS2_iiS2_S2_ to i64), i64 ptrtoint (void (%"class.pdfium::(anonymous namespace)::CFX_Renderer"*, i8*, i32, i32, i32, i8*, i32, i32, i8*, i8*)* @_ZN6pdfium12_GLOBAL__N_112CFX_Renderer16CompositeSpanRGBEPhiiiS2_iiS2_S2_ to i64)
  br label %122

121:                                              ; preds = %112
  br label %122

122:                                              ; preds = %121, %118, %112
  %123 = phi i64 [ ptrtoint (void (%"class.pdfium::(anonymous namespace)::CFX_Renderer"*, i8*, i32, i32, i32, i8*, i32, i32, i8*, i8*)* @_ZN6pdfium12_GLOBAL__N_112CFX_Renderer17CompositeSpan1bppEPhiiiS2_iiS2_S2_ to i64), %112 ], [ %120, %118 ], [ ptrtoint (void (%"class.pdfium::(anonymous namespace)::CFX_Renderer"*, i8*, i32, i32, i32, i8*, i32, i32, i8*, i8*)* @_ZN6pdfium12_GLOBAL__N_112CFX_Renderer17CompositeSpanGrayEPhiiiS2_iiS2_S2_ to i64), %121 ]
  %124 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 13, i32 0
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 13, i32 1
  store i64 0, i64* %125, align 8
  %126 = load i16, i16* %115, align 8
  %127 = and i16 %126, 255
  %128 = icmp eq i16 %127, 8
  br i1 %128, label %129, label %149

129:                                              ; preds = %122
  %130 = and i16 %126, 256
  %131 = icmp eq i16 %130, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 4
  store i32 255, i32* %133, align 8
  br label %162

134:                                              ; preds = %129
  %135 = and i32 %2, 255
  %136 = mul nuw nsw i32 %135, 11
  %137 = lshr i32 %2, 8
  %138 = and i32 %137, 255
  %139 = mul nuw nsw i32 %138, 59
  %140 = add nuw nsw i32 %139, %136
  %141 = lshr i32 %2, 16
  %142 = and i32 %141, 255
  %143 = mul nuw nsw i32 %142, 30
  %144 = add nuw nsw i32 %140, %143
  %145 = trunc i32 %144 to i16
  %146 = udiv i16 %145, 100
  %147 = zext i16 %146 to i32
  %148 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 4
  store i32 %147, i32* %148, align 8
  br label %162

149:                                              ; preds = %122
  %150 = tail call { i64, i64 } @_Z10ArgbDecodej(i32 %2) #14
  %151 = extractvalue { i64, i64 } %150, 0
  %152 = trunc i64 %151 to i32
  %153 = lshr i64 %151, 32
  %154 = trunc i64 %153 to i32
  %155 = extractvalue { i64, i64 } %150, 1
  %156 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 1
  %157 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 2
  %158 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 3
  store i32 %152, i32* %28, align 8
  store i32 %154, i32* %156, align 4
  %159 = trunc i64 %155 to i32
  store i32 %159, i32* %157, align 8
  %160 = lshr i64 %155, 32
  %161 = trunc i64 %160 to i32
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %132, %134, %149
  %163 = bitcast %"class.pdfium::agg::scanline_u"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %163) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -86, i64 16, i1 false)
  %164 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %8, i64 0, i32 0
  store i32 0, i32* %164, align 8
  %165 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %8, i64 0, i32 1
  store i32 0, i32* %165, align 4
  %166 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %8, i64 0, i32 2
  store i32 2147483632, i32* %166, align 8
  %167 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %8, i64 0, i32 4
  %168 = bitcast i8** %167 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 24, i1 false) #14
  %169 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 4, i32 1
  %170 = load i8, i8* %169, align 1
  %171 = and i8 %170, 2
  %172 = icmp ne i8 %171, 0
  %173 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 9
  %174 = load i32, i32* %173, align 8
  %175 = icmp eq i32 %174, 1
  br i1 %175, label %176, label %193

176:                                              ; preds = %162
  %177 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 11
  %178 = load i8, i8* %177, align 4, !range !7
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %187, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 4
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 5
  %184 = load i32, i32* %183, align 8
  tail call void @_ZN6pdfium3agg22rasterizer_scanline_aa12clip_segmentEii(%"class.pdfium::agg::rasterizer_scanline_aa"* %1, i32 %182, i32 %184) #14
  %185 = load i32, i32* %173, align 8
  %186 = icmp eq i32 %185, 1
  br i1 %186, label %187, label %193

187:                                              ; preds = %180, %176
  %188 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 0
  %189 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 2
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 3
  %192 = load i32, i32* %191, align 8
  tail call void @_ZN6pdfium3agg10outline_aa7line_toEii(%"class.pdfium::agg::outline_aa"* %188, i32 %190, i32 %192) #14
  store i32 2, i32* %173, align 8
  br label %193

193:                                              ; preds = %187, %180, %162
  %194 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 0
  tail call void @_ZN6pdfium3agg10outline_aa10sort_cellsEv(%"class.pdfium::agg::outline_aa"* %194) #14
  %195 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 0, i32 3
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %949, label %198

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 0, i32 12
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 12
  store i32 %200, i32* %201, align 8
  %202 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 0, i32 11
  %203 = load i32, i32* %202, align 8
  %204 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %1, i64 0, i32 0, i32 13
  %205 = load i32, i32* %204, align 8
  %206 = sub nsw i32 %205, %203
  %207 = add nsw i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %8, i64 0, i32 5
  br i1 %208, label %216, label %210

210:                                              ; preds = %198
  %211 = bitcast %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %209 to i8**
  tail call void @_Z7FX_FreePv(i8* null) #14
  tail call void @_Z7FX_FreePv(i8* null) #14
  %212 = zext i32 %207 to i64
  %213 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %212, i64 1) #14
  store i8* %213, i8** %167, align 8
  %214 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %212, i64 16) #14
  store i8* %214, i8** %211, align 8
  store i32 %207, i32* %165, align 4
  %215 = ptrtoint i8* %214 to i64
  br label %216

216:                                              ; preds = %198, %210
  %217 = phi i64 [ %215, %210 ], [ 0, %198 ]
  store i32 2147483632, i32* %166, align 8
  store i32 %203, i32* %164, align 8
  %218 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %8, i64 0, i32 6
  %219 = bitcast %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %218 to i64*
  store i64 %217, i64* %219, align 8
  %220 = call zeroext i1 @_ZN6pdfium3agg22rasterizer_scanline_aa14sweep_scanlineINS0_10scanline_uIhEEEEbRT_b(%"class.pdfium::agg::rasterizer_scanline_aa"* %1, %"class.pdfium::agg::scanline_u"* nonnull dereferenceable(40) %8, i1 zeroext %172) #14
  br i1 %220, label %221, label %949

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %8, i64 0, i32 3
  %223 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 8, i32 1
  %224 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 8, i32 3
  %225 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %226 = bitcast %"class.fxcrt::RetainPtr"* %6 to i8*
  %227 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %228 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %229 = bitcast %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %209 to i64*
  %230 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %231 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 8, i32 0
  %232 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 1
  %233 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 2
  %234 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 3
  %235 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 4
  br label %236

236:                                              ; preds = %947, %221
  %237 = load i32, i32* %222, align 4
  %238 = load i32, i32* %223, align 4
  %239 = icmp sge i32 %237, %238
  %240 = load i32, i32* %224, align 4
  %241 = icmp slt i32 %237, %240
  %242 = and i1 %239, %241
  br i1 %242, label %243, label %947

243:                                              ; preds = %236
  %244 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %225, align 8
  %245 = bitcast %class.CFX_DIBitmap* %244 to i8* (%class.CFX_DIBitmap*)***
  %246 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %245, align 8
  %247 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %246, i64 2
  %248 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %247, align 8
  %249 = call i8* %248(%class.CFX_DIBitmap* %244) #14
  %250 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %225, align 8
  %251 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %250, i64 0, i32 0
  %252 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %250, i64 0, i32 0, i32 4
  %253 = load i32, i32* %252, align 4
  %254 = mul i32 %253, %237
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds i8, i8* %249, i64 %255
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226) #14
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %227, align 8
  call void @_ZN11CFX_DIBBase12GetAlphaMaskEv(%"class.fxcrt::RetainPtr"* nonnull sret %6, %class.CFX_DIBBase* %251) #14
  %257 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %227, align 8
  %258 = icmp eq %class.CFX_DIBitmap* %257, null
  br i1 %258, label %271, label %259

259:                                              ; preds = %243
  %260 = bitcast %class.CFX_DIBitmap* %257 to i8* (%class.CFX_DIBitmap*)***
  %261 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %260, align 8
  %262 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %261, i64 2
  %263 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %262, align 8
  %264 = call i8* %263(%class.CFX_DIBitmap* nonnull %257) #14
  %265 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %227, align 8
  %266 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %265, i64 0, i32 0, i32 4
  %267 = load i32, i32* %266, align 4
  %268 = mul i32 %267, %237
  %269 = zext i32 %268 to i64
  %270 = getelementptr inbounds i8, i8* %264, i64 %269
  br label %271

271:                                              ; preds = %259, %243
  %272 = phi i8* [ %270, %259 ], [ null, %243 ]
  %273 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %228, align 8
  %274 = icmp eq %class.CFX_DIBitmap* %273, null
  br i1 %274, label %287, label %275

275:                                              ; preds = %271
  %276 = bitcast %class.CFX_DIBitmap* %273 to i8* (%class.CFX_DIBitmap*)***
  %277 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %276, align 8
  %278 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %277, i64 2
  %279 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %278, align 8
  %280 = call i8* %279(%class.CFX_DIBitmap* nonnull %273) #14
  %281 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %228, align 8
  %282 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %281, i64 0, i32 0, i32 4
  %283 = load i32, i32* %282, align 4
  %284 = mul i32 %283, %237
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds i8, i8* %280, i64 %285
  br label %287

287:                                              ; preds = %275, %271
  %288 = phi i8* [ %286, %275 ], [ null, %271 ]
  %289 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %225, align 8
  %290 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %289, i64 0, i32 0, i32 1
  %291 = load i16, i16* %290, align 8
  %292 = and i16 %291, 255
  %293 = lshr i16 %292, 3
  %294 = zext i16 %293 to i32
  %295 = and i16 %291, 768
  %296 = icmp eq i16 %295, 0
  %297 = load i64, i64* %219, align 8
  %298 = load i64, i64* %229, align 8
  %299 = sub i64 %297, %298
  %300 = lshr exact i64 %299, 4
  %301 = trunc i64 %300 to i32
  %302 = inttoptr i64 %298 to %"struct.pdfium::agg::scanline_u<unsigned char>::span"*
  %303 = icmp ugt i16 %292, 7
  %304 = icmp eq i8* %288, null
  %305 = icmp eq i8* %272, null
  %306 = icmp eq i16 %293, 0
  %307 = icmp ne i16 %293, 4
  %308 = or i1 %296, %307
  %309 = add nsw i32 %294, -3
  %310 = icmp ult i32 %309, 2
  %311 = add nsw i32 %294, -2
  %312 = sext i32 %311 to i64
  %313 = icmp eq i16 %293, 1
  br label %314

314:                                              ; preds = %929, %287
  %315 = phi i32 [ %301, %287 ], [ %930, %929 ]
  %316 = phi %"struct.pdfium::agg::scanline_u<unsigned char>::span"* [ %302, %287 ], [ %317, %929 ]
  %317 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %316, i64 1
  %318 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %316, i64 1, i32 1
  %319 = load i16, i16* %318, align 2
  %320 = icmp slt i16 %319, 1
  br i1 %320, label %932, label %321

321:                                              ; preds = %314
  %322 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %317, i64 0, i32 0
  %323 = load i16, i16* %322, align 8
  %324 = sext i16 %323 to i32
  br i1 %303, label %325, label %333

325:                                              ; preds = %321
  %326 = mul nsw i32 %324, %294
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds i8, i8* %288, i64 %327
  %329 = select i1 %304, i8* null, i8* %328
  %330 = sext i16 %323 to i64
  %331 = getelementptr inbounds i8, i8* %272, i64 %330
  %332 = select i1 %305, i8* null, i8* %331
  br label %338

333:                                              ; preds = %321
  %334 = sdiv i32 %324, 8
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds i8, i8* %288, i64 %335
  %337 = select i1 %304, i8* null, i8* %336
  br label %338

338:                                              ; preds = %333, %325
  %339 = phi i64 [ %327, %325 ], [ %335, %333 ]
  %340 = phi i8* [ %332, %325 ], [ null, %333 ]
  %341 = phi i8* [ %329, %325 ], [ %337, %333 ]
  %342 = getelementptr inbounds i8, i8* %256, i64 %339
  %343 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %230, align 8
  %344 = icmp eq %class.CFX_DIBitmap* %343, null
  br i1 %344, label %365, label %345

345:                                              ; preds = %338
  %346 = bitcast %class.CFX_DIBitmap* %343 to i8* (%class.CFX_DIBitmap*)***
  %347 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %346, align 8
  %348 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %347, i64 2
  %349 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %348, align 8
  %350 = call i8* %349(%class.CFX_DIBitmap* nonnull %343) #14
  %351 = load i32, i32* %223, align 4
  %352 = sub nsw i32 %237, %351
  %353 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %230, align 8
  %354 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %353, i64 0, i32 0, i32 4
  %355 = load i32, i32* %354, align 4
  %356 = mul i32 %355, %352
  %357 = zext i32 %356 to i64
  %358 = getelementptr inbounds i8, i8* %350, i64 %357
  %359 = sext i16 %323 to i64
  %360 = getelementptr inbounds i8, i8* %358, i64 %359
  %361 = load i32, i32* %231, align 4
  %362 = sext i32 %361 to i64
  %363 = sub nsw i64 0, %362
  %364 = getelementptr inbounds i8, i8* %360, i64 %363
  br label %365

365:                                              ; preds = %345, %338
  %366 = phi i8* [ %364, %345 ], [ null, %338 ]
  %367 = icmp eq i8* %341, null
  br i1 %367, label %905, label %368

368:                                              ; preds = %365
  %369 = load i16, i16* %318, align 2
  %370 = sext i16 %369 to i32
  %371 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %316, i64 1, i32 2
  %372 = load i8*, i8** %371, align 8
  %373 = load i32, i32* %231, align 4
  %374 = load i32, i32* %71, align 4
  %375 = icmp sgt i32 %373, %324
  %376 = sub nsw i32 %373, %324
  %377 = select i1 %375, i32 %376, i32 0
  %378 = add nsw i32 %370, %324
  %379 = icmp slt i32 %378, %374
  %380 = sub nsw i32 %374, %324
  %381 = select i1 %379, i32 %370, i32 %380
  %382 = mul nsw i32 %377, %294
  %383 = lshr i32 %377, 3
  %384 = select i1 %306, i32 %383, i32 %382
  %385 = zext i32 %384 to i64
  %386 = getelementptr inbounds i8, i8* %342, i64 %385
  %387 = getelementptr inbounds i8, i8* %341, i64 %385
  %388 = load i8, i8* %42, align 1, !range !7
  %389 = icmp eq i8 %388, 0
  br i1 %389, label %588, label %390

390:                                              ; preds = %368
  %391 = icmp slt i32 %377, %381
  br i1 %308, label %508, label %392

392:                                              ; preds = %390
  br i1 %391, label %393, label %929

393:                                              ; preds = %392
  %394 = icmp eq i8* %366, null
  %395 = zext i32 %377 to i64
  br label %396

396:                                              ; preds = %496, %393
  %397 = phi i64 [ %395, %393 ], [ %505, %496 ]
  %398 = phi i8* [ %386, %393 ], [ %504, %496 ]
  %399 = phi i8* [ %387, %393 ], [ %503, %496 ]
  %400 = load i32, i32* %28, align 8
  br i1 %394, label %407, label %401

401:                                              ; preds = %396
  %402 = getelementptr inbounds i8, i8* %366, i64 %397
  %403 = load i8, i8* %402, align 1
  %404 = zext i8 %403 to i32
  %405 = mul nsw i32 %400, %404
  %406 = sdiv i32 %405, 255
  br label %407

407:                                              ; preds = %401, %396
  %408 = phi i32 [ %406, %401 ], [ %400, %396 ]
  %409 = getelementptr inbounds i8, i8* %399, i64 3
  %410 = load i8, i8* %409, align 1
  %411 = zext i8 %410 to i32
  %412 = add nsw i32 %408, %411
  %413 = mul nsw i32 %408, %411
  %414 = sdiv i32 %413, -255
  %415 = add i32 %412, %414
  %416 = trunc i32 %415 to i8
  %417 = getelementptr inbounds i8, i8* %398, i64 3
  store i8 %416, i8* %417, align 1
  %418 = mul nsw i32 %408, 255
  %419 = and i32 %415, 255
  %420 = sdiv i32 %418, %419
  %421 = load i8, i8* %41, align 8, !range !7
  %422 = icmp eq i8 %421, 0
  %423 = getelementptr inbounds i8, i8* %399, i64 1
  %424 = load i8, i8* %399, align 1
  %425 = zext i8 %424 to i32
  %426 = sub nsw i32 255, %420
  %427 = mul nsw i32 %426, %425
  %428 = load i32, i32* %232, align 4
  %429 = mul nsw i32 %428, %420
  %430 = add nsw i32 %427, %429
  %431 = sdiv i32 %430, 255
  br i1 %422, label %450, label %432

432:                                              ; preds = %407
  %433 = trunc i32 %431 to i8
  %434 = getelementptr inbounds i8, i8* %398, i64 1
  store i8 %433, i8* %398, align 1
  %435 = getelementptr inbounds i8, i8* %399, i64 2
  %436 = load i8, i8* %423, align 1
  %437 = zext i8 %436 to i32
  %438 = mul nsw i32 %426, %437
  %439 = load i32, i32* %233, align 8
  %440 = mul nsw i32 %439, %420
  %441 = add nsw i32 %438, %440
  %442 = sdiv i32 %441, 255
  %443 = trunc i32 %442 to i8
  %444 = getelementptr inbounds i8, i8* %398, i64 2
  store i8 %443, i8* %434, align 1
  %445 = load i8, i8* %435, align 1
  %446 = zext i8 %445 to i32
  %447 = mul nsw i32 %426, %446
  %448 = load i32, i32* %234, align 4
  %449 = mul nsw i32 %448, %420
  br label %496

450:                                              ; preds = %407
  %451 = getelementptr inbounds i8, i8* %399, i64 2
  %452 = load i8, i8* %423, align 1
  %453 = zext i8 %452 to i32
  %454 = mul nsw i32 %426, %453
  %455 = load i32, i32* %233, align 8
  %456 = mul nsw i32 %455, %420
  %457 = add nsw i32 %454, %456
  %458 = sdiv i32 %457, 255
  %459 = load i8, i8* %451, align 1
  %460 = zext i8 %459 to i32
  %461 = mul nsw i32 %426, %460
  %462 = load i32, i32* %234, align 4
  %463 = mul nsw i32 %462, %420
  %464 = add nsw i32 %461, %463
  %465 = sdiv i32 %464, 255
  %466 = load i8, i8* %398, align 1
  %467 = zext i8 %466 to i32
  %468 = getelementptr inbounds i8, i8* %372, i64 %397
  %469 = load i8, i8* %468, align 1
  %470 = zext i8 %469 to i32
  %471 = xor i32 %470, 255
  %472 = mul nuw nsw i32 %471, %467
  %473 = mul nsw i32 %431, %470
  %474 = add nsw i32 %472, %473
  %475 = sdiv i32 %474, 255
  %476 = trunc i32 %475 to i8
  store i8 %476, i8* %398, align 1
  %477 = getelementptr inbounds i8, i8* %398, i64 1
  %478 = load i8, i8* %477, align 1
  %479 = zext i8 %478 to i32
  %480 = load i8, i8* %468, align 1
  %481 = zext i8 %480 to i32
  %482 = xor i32 %481, 255
  %483 = mul nuw nsw i32 %482, %479
  %484 = mul nsw i32 %458, %481
  %485 = add nsw i32 %483, %484
  %486 = sdiv i32 %485, 255
  %487 = trunc i32 %486 to i8
  store i8 %487, i8* %477, align 1
  %488 = getelementptr inbounds i8, i8* %398, i64 2
  %489 = load i8, i8* %488, align 1
  %490 = zext i8 %489 to i32
  %491 = load i8, i8* %468, align 1
  %492 = zext i8 %491 to i32
  %493 = xor i32 %492, 255
  %494 = mul nuw nsw i32 %493, %490
  %495 = mul nsw i32 %465, %492
  br label %496

496:                                              ; preds = %450, %432
  %497 = phi i32 [ %495, %450 ], [ %449, %432 ]
  %498 = phi i32 [ %494, %450 ], [ %447, %432 ]
  %499 = phi i8* [ %488, %450 ], [ %444, %432 ]
  %500 = add nsw i32 %498, %497
  %501 = sdiv i32 %500, 255
  %502 = trunc i32 %501 to i8
  store i8 %502, i8* %499, align 1
  %503 = getelementptr inbounds i8, i8* %399, i64 4
  %504 = getelementptr inbounds i8, i8* %398, i64 4
  %505 = add nuw nsw i64 %397, 1
  %506 = trunc i64 %505 to i32
  %507 = icmp sgt i32 %381, %506
  br i1 %507, label %396, label %929

508:                                              ; preds = %390
  %509 = and i1 %310, %391
  br i1 %509, label %510, label %929

510:                                              ; preds = %508
  %511 = icmp eq i8* %366, null
  %512 = zext i32 %377 to i64
  br label %513

513:                                              ; preds = %524, %510
  %514 = phi i64 [ %512, %510 ], [ %585, %524 ]
  %515 = phi i8* [ %386, %510 ], [ %584, %524 ]
  %516 = phi i8* [ %387, %510 ], [ %550, %524 ]
  %517 = load i32, i32* %28, align 8
  br i1 %511, label %524, label %518

518:                                              ; preds = %513
  %519 = getelementptr inbounds i8, i8* %366, i64 %514
  %520 = load i8, i8* %519, align 1
  %521 = zext i8 %520 to i32
  %522 = mul nsw i32 %517, %521
  %523 = sdiv i32 %522, 255
  br label %524

524:                                              ; preds = %518, %513
  %525 = phi i32 [ %523, %518 ], [ %517, %513 ]
  %526 = getelementptr inbounds i8, i8* %516, i64 1
  %527 = load i8, i8* %516, align 1
  %528 = zext i8 %527 to i32
  %529 = sub nsw i32 255, %525
  %530 = mul nsw i32 %529, %528
  %531 = load i32, i32* %232, align 4
  %532 = mul nsw i32 %531, %525
  %533 = add nsw i32 %530, %532
  %534 = sdiv i32 %533, 255
  %535 = getelementptr inbounds i8, i8* %516, i64 2
  %536 = load i8, i8* %526, align 1
  %537 = zext i8 %536 to i32
  %538 = mul nsw i32 %529, %537
  %539 = load i32, i32* %233, align 8
  %540 = mul nsw i32 %539, %525
  %541 = add nsw i32 %538, %540
  %542 = sdiv i32 %541, 255
  %543 = load i8, i8* %535, align 1
  %544 = zext i8 %543 to i32
  %545 = mul nsw i32 %529, %544
  %546 = load i32, i32* %234, align 4
  %547 = mul nsw i32 %546, %525
  %548 = add nsw i32 %545, %547
  %549 = sdiv i32 %548, 255
  %550 = getelementptr inbounds i8, i8* %535, i64 %312
  %551 = load i8, i8* %515, align 1
  %552 = zext i8 %551 to i32
  %553 = getelementptr inbounds i8, i8* %372, i64 %514
  %554 = load i8, i8* %553, align 1
  %555 = zext i8 %554 to i32
  %556 = xor i32 %555, 255
  %557 = mul nuw nsw i32 %556, %552
  %558 = mul nsw i32 %534, %555
  %559 = add nsw i32 %557, %558
  %560 = sdiv i32 %559, 255
  %561 = trunc i32 %560 to i8
  store i8 %561, i8* %515, align 1
  %562 = getelementptr inbounds i8, i8* %515, i64 1
  %563 = load i8, i8* %562, align 1
  %564 = zext i8 %563 to i32
  %565 = load i8, i8* %553, align 1
  %566 = zext i8 %565 to i32
  %567 = xor i32 %566, 255
  %568 = mul nuw nsw i32 %567, %564
  %569 = mul nsw i32 %542, %566
  %570 = add nsw i32 %568, %569
  %571 = sdiv i32 %570, 255
  %572 = trunc i32 %571 to i8
  store i8 %572, i8* %562, align 1
  %573 = getelementptr inbounds i8, i8* %515, i64 2
  %574 = load i8, i8* %573, align 1
  %575 = zext i8 %574 to i32
  %576 = load i8, i8* %553, align 1
  %577 = zext i8 %576 to i32
  %578 = xor i32 %577, 255
  %579 = mul nuw nsw i32 %578, %575
  %580 = mul nsw i32 %549, %577
  %581 = add nsw i32 %579, %580
  %582 = sdiv i32 %581, 255
  %583 = trunc i32 %582 to i8
  store i8 %583, i8* %573, align 1
  %584 = getelementptr inbounds i8, i8* %573, i64 %312
  %585 = add nuw nsw i64 %514, 1
  %586 = trunc i64 %585 to i32
  %587 = icmp sgt i32 %381, %586
  br i1 %587, label %513, label %929

588:                                              ; preds = %368
  br i1 %308, label %679, label %589

589:                                              ; preds = %588
  %590 = icmp slt i32 %377, %381
  br i1 %590, label %591, label %929

591:                                              ; preds = %589
  %592 = icmp eq i8* %366, null
  %593 = zext i32 %377 to i64
  br label %594

594:                                              ; preds = %674, %591
  %595 = phi i64 [ %593, %591 ], [ %676, %674 ]
  %596 = phi i8* [ %386, %591 ], [ %675, %674 ]
  %597 = load i32, i32* %28, align 8
  br i1 %592, label %604, label %598

598:                                              ; preds = %594
  %599 = getelementptr inbounds i8, i8* %366, i64 %595
  %600 = load i8, i8* %599, align 1
  %601 = zext i8 %600 to i32
  %602 = mul nsw i32 %597, %601
  %603 = sdiv i32 %602, 255
  br label %604

604:                                              ; preds = %598, %594
  %605 = phi i32 [ %603, %598 ], [ %597, %594 ]
  %606 = getelementptr inbounds i8, i8* %372, i64 %595
  %607 = load i8, i8* %606, align 1
  %608 = zext i8 %607 to i32
  %609 = mul nsw i32 %605, %608
  %610 = sdiv i32 %609, 255
  %611 = add i32 %609, 254
  %612 = icmp ult i32 %611, 509
  br i1 %612, label %674, label %613

613:                                              ; preds = %604
  %614 = icmp eq i8 %607, -1
  br i1 %614, label %615, label %625

615:                                              ; preds = %613
  %616 = trunc i32 %610 to i8
  %617 = getelementptr inbounds i8, i8* %596, i64 3
  store i8 %616, i8* %617, align 1
  %618 = load i32, i32* %234, align 4
  %619 = trunc i32 %618 to i8
  %620 = getelementptr inbounds i8, i8* %596, i64 1
  store i8 %619, i8* %596, align 1
  %621 = load i32, i32* %233, align 8
  %622 = trunc i32 %621 to i8
  %623 = getelementptr inbounds i8, i8* %596, i64 2
  store i8 %622, i8* %620, align 1
  %624 = load i32, i32* %232, align 4
  br label %670

625:                                              ; preds = %613
  %626 = getelementptr inbounds i8, i8* %596, i64 3
  %627 = load i8, i8* %626, align 1
  %628 = icmp eq i8 %627, 0
  br i1 %628, label %629, label %638

629:                                              ; preds = %625
  %630 = trunc i32 %610 to i8
  store i8 %630, i8* %626, align 1
  %631 = load i32, i32* %234, align 4
  %632 = trunc i32 %631 to i8
  %633 = getelementptr inbounds i8, i8* %596, i64 1
  store i8 %632, i8* %596, align 1
  %634 = load i32, i32* %233, align 8
  %635 = trunc i32 %634 to i8
  %636 = getelementptr inbounds i8, i8* %596, i64 2
  store i8 %635, i8* %633, align 1
  %637 = load i32, i32* %232, align 4
  br label %670

638:                                              ; preds = %625
  %639 = zext i8 %627 to i32
  %640 = xor i32 %608, 255
  %641 = mul nuw nsw i32 %640, %639
  %642 = add nsw i32 %641, %609
  %643 = sdiv i32 %642, 255
  %644 = trunc i32 %643 to i8
  store i8 %644, i8* %626, align 1
  %645 = load i8, i8* %596, align 1
  %646 = zext i8 %645 to i32
  %647 = mul nuw nsw i32 %640, %646
  %648 = load i32, i32* %234, align 4
  %649 = mul nsw i32 %648, %608
  %650 = add nsw i32 %647, %649
  %651 = sdiv i32 %650, 255
  %652 = trunc i32 %651 to i8
  store i8 %652, i8* %596, align 1
  %653 = getelementptr inbounds i8, i8* %596, i64 1
  %654 = load i8, i8* %653, align 1
  %655 = zext i8 %654 to i32
  %656 = mul nuw nsw i32 %640, %655
  %657 = load i32, i32* %233, align 8
  %658 = mul nsw i32 %657, %608
  %659 = add nsw i32 %656, %658
  %660 = sdiv i32 %659, 255
  %661 = trunc i32 %660 to i8
  store i8 %661, i8* %653, align 1
  %662 = getelementptr inbounds i8, i8* %596, i64 2
  %663 = load i8, i8* %662, align 1
  %664 = zext i8 %663 to i32
  %665 = mul nuw nsw i32 %640, %664
  %666 = load i32, i32* %232, align 4
  %667 = mul nsw i32 %666, %608
  %668 = add nsw i32 %665, %667
  %669 = sdiv i32 %668, 255
  br label %670

670:                                              ; preds = %615, %629, %638
  %671 = phi i32 [ %669, %638 ], [ %637, %629 ], [ %624, %615 ]
  %672 = phi i8* [ %662, %638 ], [ %636, %629 ], [ %623, %615 ]
  %673 = trunc i32 %671 to i8
  store i8 %673, i8* %672, align 1
  br label %674

674:                                              ; preds = %670, %604
  %675 = getelementptr inbounds i8, i8* %596, i64 4
  %676 = add nuw nsw i64 %595, 1
  %677 = trunc i64 %676 to i32
  %678 = icmp sgt i32 %381, %677
  br i1 %678, label %594, label %929

679:                                              ; preds = %588
  br i1 %310, label %680, label %787

680:                                              ; preds = %679
  %681 = icmp slt i32 %377, %381
  br i1 %681, label %682, label %929

682:                                              ; preds = %680
  %683 = icmp eq i8* %366, null
  %684 = zext i32 %377 to i64
  br label %685

685:                                              ; preds = %773, %682
  %686 = phi i64 [ %684, %682 ], [ %784, %773 ]
  %687 = phi i8* [ %386, %682 ], [ %781, %773 ]
  %688 = phi i8* [ %387, %682 ], [ %783, %773 ]
  %689 = load i32, i32* %28, align 8
  br i1 %683, label %696, label %690

690:                                              ; preds = %685
  %691 = getelementptr inbounds i8, i8* %366, i64 %686
  %692 = load i8, i8* %691, align 1
  %693 = zext i8 %692 to i32
  %694 = mul nsw i32 %689, %693
  %695 = sdiv i32 %694, 255
  br label %696

696:                                              ; preds = %690, %685
  %697 = phi i32 [ %695, %690 ], [ %689, %685 ]
  %698 = load i8, i8* %41, align 8, !range !7
  %699 = icmp eq i8 %698, 0
  %700 = getelementptr inbounds i8, i8* %688, i64 1
  %701 = load i8, i8* %688, align 1
  %702 = zext i8 %701 to i32
  %703 = sub nsw i32 255, %697
  %704 = mul nsw i32 %703, %702
  %705 = load i32, i32* %234, align 4
  %706 = mul nsw i32 %705, %697
  %707 = add nsw i32 %704, %706
  %708 = sdiv i32 %707, 255
  br i1 %699, label %727, label %709

709:                                              ; preds = %696
  %710 = trunc i32 %708 to i8
  %711 = getelementptr inbounds i8, i8* %687, i64 1
  store i8 %710, i8* %687, align 1
  %712 = getelementptr inbounds i8, i8* %688, i64 2
  %713 = load i8, i8* %700, align 1
  %714 = zext i8 %713 to i32
  %715 = mul nsw i32 %703, %714
  %716 = load i32, i32* %233, align 8
  %717 = mul nsw i32 %716, %697
  %718 = add nsw i32 %715, %717
  %719 = sdiv i32 %718, 255
  %720 = trunc i32 %719 to i8
  %721 = getelementptr inbounds i8, i8* %687, i64 2
  store i8 %720, i8* %711, align 1
  %722 = load i8, i8* %712, align 1
  %723 = zext i8 %722 to i32
  %724 = mul nsw i32 %703, %723
  %725 = load i32, i32* %232, align 4
  %726 = mul nsw i32 %725, %697
  br label %773

727:                                              ; preds = %696
  %728 = getelementptr inbounds i8, i8* %688, i64 2
  %729 = load i8, i8* %700, align 1
  %730 = zext i8 %729 to i32
  %731 = mul nsw i32 %703, %730
  %732 = load i32, i32* %233, align 8
  %733 = mul nsw i32 %732, %697
  %734 = add nsw i32 %731, %733
  %735 = sdiv i32 %734, 255
  %736 = load i8, i8* %728, align 1
  %737 = zext i8 %736 to i32
  %738 = mul nsw i32 %703, %737
  %739 = load i32, i32* %232, align 4
  %740 = mul nsw i32 %739, %697
  %741 = add nsw i32 %738, %740
  %742 = sdiv i32 %741, 255
  %743 = load i8, i8* %687, align 1
  %744 = zext i8 %743 to i32
  %745 = getelementptr inbounds i8, i8* %372, i64 %686
  %746 = load i8, i8* %745, align 1
  %747 = zext i8 %746 to i32
  %748 = xor i32 %747, 255
  %749 = mul nuw nsw i32 %748, %744
  %750 = mul nsw i32 %708, %747
  %751 = add nsw i32 %749, %750
  %752 = sdiv i32 %751, 255
  %753 = trunc i32 %752 to i8
  store i8 %753, i8* %687, align 1
  %754 = getelementptr inbounds i8, i8* %687, i64 1
  %755 = load i8, i8* %754, align 1
  %756 = zext i8 %755 to i32
  %757 = load i8, i8* %745, align 1
  %758 = zext i8 %757 to i32
  %759 = xor i32 %758, 255
  %760 = mul nuw nsw i32 %759, %756
  %761 = mul nsw i32 %735, %758
  %762 = add nsw i32 %760, %761
  %763 = sdiv i32 %762, 255
  %764 = trunc i32 %763 to i8
  store i8 %764, i8* %754, align 1
  %765 = getelementptr inbounds i8, i8* %687, i64 2
  %766 = load i8, i8* %765, align 1
  %767 = zext i8 %766 to i32
  %768 = load i8, i8* %745, align 1
  %769 = zext i8 %768 to i32
  %770 = xor i32 %769, 255
  %771 = mul nuw nsw i32 %770, %767
  %772 = mul nsw i32 %742, %769
  br label %773

773:                                              ; preds = %727, %709
  %774 = phi i32 [ %772, %727 ], [ %726, %709 ]
  %775 = phi i32 [ %771, %727 ], [ %724, %709 ]
  %776 = phi i8* [ %765, %727 ], [ %721, %709 ]
  %777 = add nsw i32 %775, %774
  %778 = sdiv i32 %777, 255
  %779 = trunc i32 %778 to i8
  store i8 %779, i8* %776, align 1
  %780 = getelementptr inbounds i8, i8* %687, i64 2
  %781 = getelementptr inbounds i8, i8* %780, i64 %312
  %782 = getelementptr inbounds i8, i8* %688, i64 2
  %783 = getelementptr inbounds i8, i8* %782, i64 %312
  %784 = add nuw nsw i64 %686, 1
  %785 = trunc i64 %784 to i32
  %786 = icmp sgt i32 %381, %785
  br i1 %786, label %685, label %929

787:                                              ; preds = %679
  br i1 %313, label %788, label %837

788:                                              ; preds = %787
  %789 = icmp slt i32 %377, %381
  br i1 %789, label %790, label %929

790:                                              ; preds = %788
  %791 = icmp eq i8* %366, null
  %792 = zext i32 %377 to i64
  br label %793

793:                                              ; preds = %831, %790
  %794 = phi i64 [ %792, %790 ], [ %834, %831 ]
  %795 = phi i8* [ %386, %790 ], [ %832, %831 ]
  %796 = phi i8* [ %387, %790 ], [ %833, %831 ]
  %797 = load i32, i32* %28, align 8
  br i1 %791, label %804, label %798

798:                                              ; preds = %793
  %799 = getelementptr inbounds i8, i8* %366, i64 %794
  %800 = load i8, i8* %799, align 1
  %801 = zext i8 %800 to i32
  %802 = mul nsw i32 %797, %801
  %803 = sdiv i32 %802, 255
  br label %804

804:                                              ; preds = %798, %793
  %805 = phi i32 [ %803, %798 ], [ %797, %793 ]
  %806 = load i8, i8* %41, align 8, !range !7
  %807 = icmp eq i8 %806, 0
  %808 = load i8, i8* %796, align 1
  %809 = zext i8 %808 to i32
  %810 = sub nsw i32 255, %805
  %811 = mul nsw i32 %810, %809
  %812 = load i32, i32* %235, align 8
  %813 = mul nsw i32 %812, %805
  %814 = add nsw i32 %811, %813
  %815 = sdiv i32 %814, 255
  br i1 %807, label %818, label %816

816:                                              ; preds = %804
  %817 = trunc i32 %815 to i8
  store i8 %817, i8* %795, align 1
  br label %831

818:                                              ; preds = %804
  %819 = load i8, i8* %795, align 1
  %820 = zext i8 %819 to i32
  %821 = getelementptr inbounds i8, i8* %372, i64 %794
  %822 = load i8, i8* %821, align 1
  %823 = zext i8 %822 to i32
  %824 = xor i32 %823, 255
  %825 = mul nuw nsw i32 %824, %820
  %826 = mul nsw i32 %815, %823
  %827 = add nsw i32 %825, %826
  %828 = sdiv i32 %827, 255
  %829 = trunc i32 %828 to i8
  store i8 %829, i8* %795, align 1
  %830 = getelementptr inbounds i8, i8* %795, i64 1
  br label %831

831:                                              ; preds = %818, %816
  %832 = phi i8* [ %795, %816 ], [ %830, %818 ]
  %833 = getelementptr inbounds i8, i8* %796, i64 1
  %834 = add nuw nsw i64 %794, 1
  %835 = trunc i64 %834 to i32
  %836 = icmp sgt i32 %381, %835
  br i1 %836, label %793, label %929

837:                                              ; preds = %787
  %838 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %225, align 8
  %839 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %838, i64 0, i32 0, i32 6, i32 0, i32 0
  %840 = load i32*, i32** %839, align 8
  %841 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %838, i64 0, i32 0, i32 6, i32 0, i32 1
  %842 = load i32*, i32** %841, align 8
  %843 = icmp eq i32* %840, %842
  br i1 %843, label %849, label %844

844:                                              ; preds = %837
  %845 = ptrtoint i32* %842 to i64
  %846 = ptrtoint i32* %840 to i64
  %847 = sub i64 %845, %846
  switch i64 %847, label %900 [
    i64 0, label %848
    i64 4, label %848
  ], !prof !27

848:                                              ; preds = %844, %844
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !13
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !14
  unreachable

849:                                              ; preds = %837
  %850 = load i32, i32* %30, align 4
  %851 = and i32 %850, 255
  %852 = icmp eq i32 %851, 255
  br label %853

853:                                              ; preds = %900, %849
  %854 = phi i1 [ %852, %849 ], [ %904, %900 ]
  %855 = icmp slt i32 %377, %381
  br i1 %855, label %856, label %929

856:                                              ; preds = %853
  %857 = icmp eq i8* %366, null
  %858 = srem i32 %324, 8
  %859 = zext i32 %377 to i64
  %860 = sext i32 %381 to i64
  %861 = add nsw i32 %858, 1
  %862 = sub i32 %861, %377
  br label %863

863:                                              ; preds = %893, %856
  %864 = phi i64 [ %859, %856 ], [ %898, %893 ]
  %865 = phi i8* [ %386, %856 ], [ %897, %893 ]
  %866 = load i32, i32* %28, align 8
  %867 = getelementptr inbounds i8, i8* %372, i64 %864
  %868 = load i8, i8* %867, align 1
  %869 = zext i8 %868 to i32
  %870 = mul nsw i32 %866, %869
  br i1 %857, label %877, label %871

871:                                              ; preds = %863
  %872 = getelementptr inbounds i8, i8* %366, i64 %864
  %873 = load i8, i8* %872, align 1
  %874 = zext i8 %873 to i32
  %875 = mul nsw i32 %870, %874
  %876 = sdiv i32 %875, 255
  br label %877

877:                                              ; preds = %871, %863
  %878 = phi i32 [ %876, %871 ], [ %870, %863 ]
  %879 = add i32 %878, 254
  %880 = icmp ult i32 %879, 509
  %881 = trunc i64 %864 to i32
  br i1 %880, label %893, label %882

882:                                              ; preds = %877
  %883 = add i32 %881, %324
  %884 = srem i32 %883, 8
  %885 = sub nsw i32 7, %884
  %886 = shl i32 1, %885
  %887 = load i8, i8* %865, align 1
  %888 = trunc i32 %886 to i8
  %889 = or i8 %887, %888
  %890 = xor i8 %888, -1
  %891 = and i8 %887, %890
  %892 = select i1 %854, i8 %889, i8 %891
  store i8 %892, i8* %865, align 1
  br label %893

893:                                              ; preds = %882, %877
  %894 = add i32 %862, %881
  %895 = sdiv i32 %894, 8
  %896 = sext i32 %895 to i64
  %897 = getelementptr inbounds i8, i8* %386, i64 %896
  %898 = add nuw nsw i64 %864, 1
  %899 = icmp eq i64 %898, %860
  br i1 %899, label %929, label %863

900:                                              ; preds = %844
  %901 = load i32, i32* %30, align 4
  %902 = getelementptr inbounds i32, i32* %840, i64 1
  %903 = load i32, i32* %902, align 4
  %904 = icmp eq i32 %903, %901
  br label %853

905:                                              ; preds = %365
  %906 = load i64, i64* %124, align 8
  %907 = load i64, i64* %125, align 8
  %908 = getelementptr inbounds i8, i8* %20, i64 %907
  %909 = bitcast i8* %908 to %"class.pdfium::(anonymous namespace)::CFX_Renderer"*
  %910 = and i64 %906, 1
  %911 = icmp eq i64 %910, 0
  br i1 %911, label %919, label %912

912:                                              ; preds = %905
  %913 = bitcast i8* %908 to i8**
  %914 = load i8*, i8** %913, align 8
  %915 = add i64 %906, -1
  %916 = getelementptr i8, i8* %914, i64 %915
  %917 = bitcast i8* %916 to void (%"class.pdfium::(anonymous namespace)::CFX_Renderer"*, i8*, i32, i32, i32, i8*, i32, i32, i8*, i8*)**
  %918 = load void (%"class.pdfium::(anonymous namespace)::CFX_Renderer"*, i8*, i32, i32, i32, i8*, i32, i32, i8*, i8*)*, void (%"class.pdfium::(anonymous namespace)::CFX_Renderer"*, i8*, i32, i32, i32, i8*, i32, i32, i8*, i8*)** %917, align 8
  br label %921

919:                                              ; preds = %905
  %920 = inttoptr i64 %906 to void (%"class.pdfium::(anonymous namespace)::CFX_Renderer"*, i8*, i32, i32, i32, i8*, i32, i32, i8*, i8*)*
  br label %921

921:                                              ; preds = %919, %912
  %922 = phi void (%"class.pdfium::(anonymous namespace)::CFX_Renderer"*, i8*, i32, i32, i32, i8*, i32, i32, i8*, i8*)* [ %918, %912 ], [ %920, %919 ]
  %923 = load i16, i16* %318, align 2
  %924 = sext i16 %923 to i32
  %925 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %316, i64 1, i32 2
  %926 = load i8*, i8** %925, align 8
  %927 = load i32, i32* %231, align 4
  %928 = load i32, i32* %71, align 4
  call void %922(%"class.pdfium::(anonymous namespace)::CFX_Renderer"* %909, i8* %342, i32 %294, i32 %324, i32 %924, i8* %926, i32 %927, i32 %928, i8* %366, i8* %340) #14
  br label %929

929:                                              ; preds = %496, %524, %674, %893, %831, %773, %921, %853, %788, %680, %589, %508, %392
  %930 = add i32 %315, -1
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %932, label %314

932:                                              ; preds = %929, %314
  %933 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %227, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %227, align 8
  %934 = icmp eq %class.CFX_DIBitmap* %933, null
  br i1 %934, label %946, label %935

935:                                              ; preds = %932
  %936 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %933, i64 0, i32 0, i32 0, i32 1
  %937 = load i64, i64* %936, align 8
  %938 = add nsw i64 %937, -1
  store i64 %938, i64* %936, align 8
  %939 = icmp eq i64 %938, 0
  br i1 %939, label %940, label %946

940:                                              ; preds = %935
  %941 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %933, i64 0, i32 0, i32 0
  %942 = bitcast %class.CFX_DIBitmap* %933 to void (%"class.fxcrt::Retainable"*)***
  %943 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %942, align 8
  %944 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %943, i64 1
  %945 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %944, align 8
  call void %945(%"class.fxcrt::Retainable"* nonnull %941) #14
  br label %946

946:                                              ; preds = %940, %935, %932
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #14
  br label %947

947:                                              ; preds = %946, %236
  %948 = call zeroext i1 @_ZN6pdfium3agg22rasterizer_scanline_aa14sweep_scanlineINS0_10scanline_uIhEEEEbRT_b(%"class.pdfium::agg::rasterizer_scanline_aa"* %1, %"class.pdfium::agg::scanline_u"* nonnull dereferenceable(40) %8, i1 zeroext %172) #14
  br i1 %948, label %236, label %949

949:                                              ; preds = %947, %193, %216
  %950 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %8, i64 0, i32 5
  %951 = bitcast %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %950 to i8**
  %952 = load i8*, i8** %951, align 8
  call void @_Z7FX_FreePv(i8* %952) #14
  %953 = load i8*, i8** %167, align 8
  call void @_Z7FX_FreePv(i8* %953) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %163) #14
  %954 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %955 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %954, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %954, align 8
  %956 = icmp eq %class.CFX_DIBitmap* %955, null
  br i1 %956, label %968, label %957

957:                                              ; preds = %949
  %958 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %955, i64 0, i32 0, i32 0, i32 1
  %959 = load i64, i64* %958, align 8
  %960 = add nsw i64 %959, -1
  store i64 %960, i64* %958, align 8
  %961 = icmp eq i64 %960, 0
  br i1 %961, label %962, label %968

962:                                              ; preds = %957
  %963 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %955, i64 0, i32 0, i32 0
  %964 = bitcast %class.CFX_DIBitmap* %955 to void (%"class.fxcrt::Retainable"*)***
  %965 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %964, align 8
  %966 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %965, i64 1
  %967 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %966, align 8
  call void %967(%"class.fxcrt::Retainable"* nonnull %963) #14
  br label %968

968:                                              ; preds = %962, %957, %949
  %969 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %970 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %969, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %969, align 8
  %971 = icmp eq %class.CFX_DIBitmap* %970, null
  br i1 %971, label %983, label %972

972:                                              ; preds = %968
  %973 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %970, i64 0, i32 0, i32 0, i32 1
  %974 = load i64, i64* %973, align 8
  %975 = add nsw i64 %974, -1
  store i64 %975, i64* %973, align 8
  %976 = icmp eq i64 %975, 0
  br i1 %976, label %977, label %983

977:                                              ; preds = %972
  %978 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %970, i64 0, i32 0, i32 0
  %979 = bitcast %class.CFX_DIBitmap* %970 to void (%"class.fxcrt::Retainable"*)***
  %980 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %979, align 8
  %981 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %980, i64 1
  %982 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %981, align 8
  call void %982(%"class.fxcrt::Retainable"* nonnull %978) #14
  br label %983

983:                                              ; preds = %977, %972, %968
  %984 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %7, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %985 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %984, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %984, align 8
  %986 = icmp eq %class.CFX_DIBitmap* %985, null
  br i1 %986, label %998, label %987

987:                                              ; preds = %983
  %988 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %985, i64 0, i32 0, i32 0, i32 1
  %989 = load i64, i64* %988, align 8
  %990 = add nsw i64 %989, -1
  store i64 %990, i64* %988, align 8
  %991 = icmp eq i64 %990, 0
  br i1 %991, label %992, label %998

992:                                              ; preds = %987
  %993 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %985, i64 0, i32 0, i32 0
  %994 = bitcast %class.CFX_DIBitmap* %985 to void (%"class.fxcrt::Retainable"*)***
  %995 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %994, align 8
  %996 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %995, i64 1
  %997 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %996, align 8
  call void %997(%"class.fxcrt::Retainable"* nonnull %993) #14
  br label %998

998:                                              ; preds = %983, %987, %992
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %20) #14
  br i1 %76, label %1010, label %999

999:                                              ; preds = %998
  %1000 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %74, i64 0, i32 0, i32 0, i32 1
  %1001 = load i64, i64* %1000, align 8
  %1002 = add nsw i64 %1001, -1
  store i64 %1002, i64* %1000, align 8
  %1003 = icmp eq i64 %1002, 0
  br i1 %1003, label %1004, label %1010

1004:                                             ; preds = %999
  %1005 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %74, i64 0, i32 0, i32 0
  %1006 = inttoptr i64 %19 to void (%"class.fxcrt::Retainable"*)***
  %1007 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %1006, align 8
  %1008 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %1007, i64 1
  %1009 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %1008, align 8
  call void %1009(%"class.fxcrt::Retainable"* nonnull %1005) #14
  br label %1010

1010:                                             ; preds = %998, %999, %1004
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6pdfium19CFX_AggDeviceDriver8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%"class.pdfium::CFX_AggDeviceDriver"* nocapture, %class.CFX_PathData* nocapture readonly, %class.CFX_Matrix*, %class.CFX_GraphStateData* readonly, i32, i32, %struct.CFX_FillRenderOptions* nocapture readonly dereferenceable(2), i32) unnamed_addr #0 align 2 {
  %9 = alloca %"class.pdfium::agg::path_storage", align 8
  %10 = alloca %"class.pdfium::agg::rasterizer_scanline_aa", align 8
  %11 = alloca %"class.pdfium::agg::path_storage", align 8
  %12 = alloca %"class.pdfium::agg::rasterizer_scanline_aa", align 8
  %13 = alloca %class.CFX_Matrix, align 16
  %14 = alloca %class.CFX_Matrix, align 16
  %15 = alloca float, align 4
  %16 = alloca float, align 4
  %17 = alloca %class.CFX_Matrix, align 8
  %18 = alloca %"class.pdfium::agg::path_storage", align 8
  %19 = alloca %"class.pdfium::agg::rasterizer_scanline_aa", align 8
  %20 = icmp eq i32 %7, 0
  br i1 %20, label %21, label %285

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %22, align 8
  %24 = bitcast %class.CFX_DIBitmap* %23 to i8* (%class.CFX_DIBitmap*)***
  %25 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %24, align 8
  %26 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %25, i64 2
  %27 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %26, align 8
  %28 = tail call i8* %27(%class.CFX_DIBitmap* %23) #14
  %29 = icmp eq i8* %28, null
  br i1 %29, label %285, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 4, i32 0
  %32 = bitcast %struct.CFX_FillRenderOptions* %6 to i16*
  %33 = bitcast i8* %31 to i16*
  %34 = load i16, i16* %32, align 1
  store i16 %34, i16* %33, align 8
  %35 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %6, i64 0, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp ne i8 %36, 0
  %38 = icmp ne i32 %4, 0
  %39 = and i1 %38, %37
  br i1 %39, label %40, label %114

40:                                               ; preds = %30
  %41 = bitcast %"class.pdfium::agg::path_storage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %41) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 40, i1 false)
  call void @_ZN6pdfium3agg12path_storageC1Ev(%"class.pdfium::agg::path_storage"* nonnull %9) #14
  call fastcc void @_ZN6pdfium12_GLOBAL__N_112BuildAggPathEPK12CFX_PathDataPK10CFX_MatrixRNS_3agg12path_storageE(%class.CFX_PathData* %1, %class.CFX_Matrix* %2, %"class.pdfium::agg::path_storage"* nonnull dereferenceable(40) %9)
  %42 = bitcast %"class.pdfium::agg::rasterizer_scanline_aa"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %42) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 176, i1 false)
  %43 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 0
  call void @_ZN6pdfium3agg10outline_aaC1Ev(%"class.pdfium::agg::outline_aa"* nonnull %43) #14
  %44 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 1
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 2
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 3
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 9
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 11
  store i8 0, i8* %48, align 4
  %49 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %22, align 8
  %50 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %49, i64 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = sitofp i32 %51 to float
  %53 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %49, i64 0, i32 0, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = sitofp i32 %54 to float
  %56 = fmul float %52, 2.560000e+02
  %57 = fptosi float %56 to i32
  %58 = fmul float %55, 2.560000e+02
  %59 = fptosi float %58 to i32
  %60 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 10, i32 0
  store i32 0, i32* %60, align 4
  %61 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 10, i32 1
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 10, i32 2
  store i32 %57, i32* %62, align 4
  %63 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %10, i64 0, i32 10, i32 3
  store i32 %59, i32* %63, align 4
  %64 = icmp slt i32 %57, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %40
  store i32 %57, i32* %60, align 4
  store i32 0, i32* %62, align 4
  br label %66

66:                                               ; preds = %65, %40
  %67 = icmp slt i32 %59, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %66
  store i32 %59, i32* %61, align 4
  store i32 0, i32* %63, align 4
  br label %69

69:                                               ; preds = %66, %68
  store i8 1, i8* %48, align 4
  call void @_ZN6pdfium3agg12path_storage6rewindEj(%"class.pdfium::agg::path_storage"* nonnull %9, i32 0) #14
  %70 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %9, i64 0, i32 6
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %9, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = icmp ult i32 %71, %73
  br i1 %74, label %75, label %106

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %9, i64 0, i32 4
  %77 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %9, i64 0, i32 5
  br label %78

78:                                               ; preds = %99, %75
  %79 = phi i32 [ %71, %75 ], [ %103, %99 ]
  %80 = add nuw i32 %79, 1
  store i32 %80, i32* %70, align 8
  %81 = lshr i32 %79, 8
  %82 = load float**, float*** %76, align 8
  %83 = zext i32 %81 to i64
  %84 = getelementptr inbounds float*, float** %82, i64 %83
  %85 = load float*, float** %84, align 8
  %86 = and i32 %79, 255
  %87 = shl nuw nsw i32 %86, 1
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds float, float* %85, i64 %88
  %90 = load i8**, i8*** %77, align 8
  %91 = getelementptr inbounds i8*, i8** %90, i64 %83
  %92 = load i8*, i8** %91, align 8
  %93 = zext i32 %86 to i64
  %94 = getelementptr inbounds i8, i8* %92, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = and i32 %96, 127
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %78
  %100 = getelementptr inbounds float, float* %89, i64 1
  %101 = load float, float* %100, align 4
  %102 = load float, float* %89, align 4
  call void @_ZN6pdfium3agg22rasterizer_scanline_aa10add_vertexEffj(%"class.pdfium::agg::rasterizer_scanline_aa"* nonnull %10, float %102, float %101, i32 %96) #14
  %103 = load i32, i32* %70, align 8
  %104 = load i32, i32* %72, align 8
  %105 = icmp ult i32 %103, %104
  br i1 %105, label %78, label %106

106:                                              ; preds = %78, %99, %69
  %107 = load i8, i8* %35, align 1
  %108 = icmp ne i8 %107, 2
  %109 = zext i1 %108 to i32
  store i32 %109, i32* %44, align 8
  %110 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %6, i64 0, i32 1
  %111 = load i8, i8* %110, align 1
  %112 = and i8 %111, 4
  %113 = icmp ne i8 %112, 0
  call void @_ZN6pdfium19CFX_AggDeviceDriver16RenderRasterizerERNS_3agg22rasterizer_scanline_aaEjbb(%"class.pdfium::CFX_AggDeviceDriver"* %0, %"class.pdfium::agg::rasterizer_scanline_aa"* nonnull dereferenceable(176) %10, i32 %4, i1 zeroext %113, i1 zeroext false)
  call void @_ZN6pdfium3agg10outline_aaD1Ev(%"class.pdfium::agg::outline_aa"* nonnull %43) #14
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %42) #14
  call void @_ZN6pdfium3agg12path_storageD1Ev(%"class.pdfium::agg::path_storage"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %41) #14
  br label %114

114:                                              ; preds = %106, %30
  %115 = icmp ne %class.CFX_GraphStateData* %3, null
  %116 = icmp ugt i32 %5, 16777215
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %285

118:                                              ; preds = %114
  %119 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %6, i64 0, i32 1
  %120 = load i8, i8* %119, align 1
  %121 = icmp sgt i8 %120, -1
  br i1 %121, label %158, label %122

122:                                              ; preds = %118
  %123 = bitcast %"class.pdfium::agg::path_storage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %123) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 -86, i64 40, i1 false)
  call void @_ZN6pdfium3agg12path_storageC1Ev(%"class.pdfium::agg::path_storage"* nonnull %11) #14
  call fastcc void @_ZN6pdfium12_GLOBAL__N_112BuildAggPathEPK12CFX_PathDataPK10CFX_MatrixRNS_3agg12path_storageE(%class.CFX_PathData* %1, %class.CFX_Matrix* %2, %"class.pdfium::agg::path_storage"* nonnull dereferenceable(40) %11)
  %124 = bitcast %"class.pdfium::agg::rasterizer_scanline_aa"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %124) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 176, i1 false)
  %125 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %12, i64 0, i32 0
  call void @_ZN6pdfium3agg10outline_aaC1Ev(%"class.pdfium::agg::outline_aa"* nonnull %125) #14
  %126 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %12, i64 0, i32 1
  store i32 0, i32* %126, align 8
  %127 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %12, i64 0, i32 2
  store i32 0, i32* %127, align 4
  %128 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %12, i64 0, i32 3
  store i32 0, i32* %128, align 8
  %129 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %12, i64 0, i32 9
  store i32 0, i32* %129, align 8
  %130 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %12, i64 0, i32 11
  store i8 0, i8* %130, align 4
  %131 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %22, align 8
  %132 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %131, i64 0, i32 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = sitofp i32 %133 to float
  %135 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %131, i64 0, i32 0, i32 3
  %136 = load i32, i32* %135, align 8
  %137 = sitofp i32 %136 to float
  %138 = fmul float %134, 2.560000e+02
  %139 = fptosi float %138 to i32
  %140 = fmul float %137, 2.560000e+02
  %141 = fptosi float %140 to i32
  %142 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %12, i64 0, i32 10, i32 0
  store i32 0, i32* %142, align 4
  %143 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %12, i64 0, i32 10, i32 1
  store i32 0, i32* %143, align 4
  %144 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %12, i64 0, i32 10, i32 2
  store i32 %139, i32* %144, align 4
  %145 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %12, i64 0, i32 10, i32 3
  store i32 %141, i32* %145, align 4
  %146 = icmp slt i32 %139, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %122
  store i32 %139, i32* %142, align 4
  store i32 0, i32* %144, align 4
  br label %148

148:                                              ; preds = %147, %122
  %149 = icmp slt i32 %141, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %148
  store i32 %141, i32* %143, align 4
  store i32 0, i32* %145, align 4
  br label %151

151:                                              ; preds = %148, %150
  store i8 1, i8* %130, align 4
  call fastcc void @_ZN6pdfium12_GLOBAL__N_115RasterizeStrokeEPNS_3agg22rasterizer_scanline_aaEPNS1_12path_storageEPK10CFX_MatrixPK18CFX_GraphStateDatafb(%"class.pdfium::agg::rasterizer_scanline_aa"* nonnull %12, %"class.pdfium::agg::path_storage"* nonnull %11, %class.CFX_Matrix* null, %class.CFX_GraphStateData* nonnull %3, float 1.000000e+00)
  %152 = load i8, i8* %119, align 1
  %153 = and i8 %152, 4
  %154 = icmp ne i8 %153, 0
  %155 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 6
  %156 = load i8, i8* %155, align 1, !range !7
  %157 = icmp ne i8 %156, 0
  call void @_ZN6pdfium19CFX_AggDeviceDriver16RenderRasterizerERNS_3agg22rasterizer_scanline_aaEjbb(%"class.pdfium::CFX_AggDeviceDriver"* %0, %"class.pdfium::agg::rasterizer_scanline_aa"* nonnull dereferenceable(176) %12, i32 %5, i1 zeroext %154, i1 zeroext %157)
  call void @_ZN6pdfium3agg10outline_aaD1Ev(%"class.pdfium::agg::outline_aa"* nonnull %125) #14
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %124) #14
  call void @_ZN6pdfium3agg12path_storageD1Ev(%"class.pdfium::agg::path_storage"* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %123) #14
  br label %285

158:                                              ; preds = %118
  %159 = bitcast %class.CFX_Matrix* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #14
  %160 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 0
  %161 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 4
  %162 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 5
  %163 = bitcast %class.CFX_Matrix* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %163, align 16
  store float 0.000000e+00, float* %161, align 16
  store float 0.000000e+00, float* %162, align 4
  %164 = bitcast %class.CFX_Matrix* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %164) #14
  %165 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %14, i64 0, i32 4
  %166 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %14, i64 0, i32 5
  %167 = bitcast %class.CFX_Matrix* %14 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %167, align 16
  store float 0.000000e+00, float* %165, align 16
  store float 0.000000e+00, float* %166, align 4
  %168 = icmp eq %class.CFX_Matrix* %2, null
  br i1 %168, label %248, label %169

169:                                              ; preds = %158
  %170 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 3
  %171 = bitcast float* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %171)
  %172 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 0
  %173 = load float, float* %172, align 4
  %174 = call float @llvm.fabs.f32(float %173) #14
  store float %174, float* %15, align 4
  %175 = bitcast float* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %175)
  %176 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 1
  %177 = load float, float* %176, align 4
  %178 = call float @llvm.fabs.f32(float %177) #14
  store float %178, float* %16, align 4
  %179 = fcmp olt float %174, %178
  %180 = select i1 %179, float* %16, float* %15
  %181 = bitcast float* %180 to i32*
  %182 = load i32, i32* %181, align 4
  %183 = bitcast %class.CFX_Matrix* %13 to i32*
  store i32 %182, i32* %183, align 16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %175)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %171)
  %184 = bitcast float* %170 to i32*
  store i32 %182, i32* %184, align 4
  %185 = bitcast i32 %182 to float
  %186 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 2
  %187 = load float, float* %186, align 4
  %188 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 3
  %189 = load float, float* %188, align 4
  %190 = insertelement <4 x float> undef, float %173, i32 0
  %191 = insertelement <4 x float> %190, float %177, i32 1
  %192 = insertelement <4 x float> %191, float %187, i32 2
  %193 = insertelement <4 x float> %192, float %189, i32 3
  %194 = insertelement <4 x float> undef, float %185, i32 0
  %195 = shufflevector <4 x float> %194, <4 x float> undef, <4 x i32> zeroinitializer
  %196 = fdiv <4 x float> %193, %195
  %197 = bitcast %class.CFX_Matrix* %14 to <4 x float>*
  store <4 x float> %196, <4 x float>* %197, align 16
  store float 0.000000e+00, float* %165, align 16
  store float 0.000000e+00, float* %166, align 4
  %198 = bitcast %class.CFX_Matrix* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %198) #14
  call void @_ZNK10CFX_Matrix10GetInverseEv(%class.CFX_Matrix* nonnull sret %17, %class.CFX_Matrix* nonnull %14) #14
  %199 = load float, float* %172, align 4, !noalias !28
  %200 = load float, float* %176, align 4, !noalias !28
  %201 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %17, i64 0, i32 2
  %202 = bitcast %class.CFX_Matrix* %17 to <2 x float>*
  %203 = load <2 x float>, <2 x float>* %202, align 8, !noalias !28
  %204 = shufflevector <2 x float> %203, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %205 = bitcast float* %201 to <2 x float>*
  %206 = load <2 x float>, <2 x float>* %205, align 8, !noalias !28
  %207 = shufflevector <2 x float> %206, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %208 = load float, float* %186, align 4, !noalias !28
  %209 = load float, float* %188, align 4, !noalias !28
  %210 = insertelement <4 x float> undef, float %199, i32 0
  %211 = shufflevector <4 x float> %210, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %212 = extractelement <2 x float> %203, i32 0
  %213 = extractelement <2 x float> %203, i32 1
  %214 = shufflevector <4 x float> %211, <4 x float> %204, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %215 = insertelement <4 x float> undef, float %212, i32 0
  %216 = insertelement <4 x float> %215, float %213, i32 1
  %217 = insertelement <4 x float> %216, float %208, i32 2
  %218 = insertelement <4 x float> %217, float %208, i32 3
  %219 = fmul <4 x float> %214, %218
  %220 = insertelement <4 x float> undef, float %200, i32 0
  %221 = shufflevector <4 x float> %220, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %222 = extractelement <2 x float> %206, i32 0
  %223 = extractelement <2 x float> %206, i32 1
  %224 = shufflevector <4 x float> %221, <4 x float> %207, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %225 = insertelement <4 x float> undef, float %222, i32 0
  %226 = insertelement <4 x float> %225, float %223, i32 1
  %227 = insertelement <4 x float> %226, float %209, i32 2
  %228 = insertelement <4 x float> %227, float %209, i32 3
  %229 = fmul <4 x float> %224, %228
  %230 = fadd <4 x float> %219, %229
  %231 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 4
  %232 = load float, float* %231, align 4, !noalias !28
  %233 = fmul float %212, %232
  %234 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 5
  %235 = load float, float* %234, align 4, !noalias !28
  %236 = fmul float %222, %235
  %237 = fadd float %233, %236
  %238 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %17, i64 0, i32 4
  %239 = load float, float* %238, align 8, !noalias !28
  %240 = fadd float %239, %237
  %241 = fmul float %213, %232
  %242 = fmul float %223, %235
  %243 = fadd float %241, %242
  %244 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %17, i64 0, i32 5
  %245 = load float, float* %244, align 4, !noalias !28
  %246 = fadd float %243, %245
  %247 = bitcast %class.CFX_Matrix* %13 to <4 x float>*
  store <4 x float> %230, <4 x float>* %247, align 16
  store float %240, float* %161, align 16
  store float %246, float* %162, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %198) #14
  br label %248

248:                                              ; preds = %158, %169
  %249 = bitcast %"class.pdfium::agg::path_storage"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %249) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %249, i8 -86, i64 40, i1 false)
  call void @_ZN6pdfium3agg12path_storageC1Ev(%"class.pdfium::agg::path_storage"* nonnull %18) #14
  call fastcc void @_ZN6pdfium12_GLOBAL__N_112BuildAggPathEPK12CFX_PathDataPK10CFX_MatrixRNS_3agg12path_storageE(%class.CFX_PathData* %1, %class.CFX_Matrix* nonnull %13, %"class.pdfium::agg::path_storage"* nonnull dereferenceable(40) %18)
  %250 = bitcast %"class.pdfium::agg::rasterizer_scanline_aa"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %250) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %250, i8 -86, i64 176, i1 false)
  %251 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %19, i64 0, i32 0
  call void @_ZN6pdfium3agg10outline_aaC1Ev(%"class.pdfium::agg::outline_aa"* nonnull %251) #14
  %252 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %19, i64 0, i32 1
  store i32 0, i32* %252, align 8
  %253 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %19, i64 0, i32 2
  store i32 0, i32* %253, align 4
  %254 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %19, i64 0, i32 3
  store i32 0, i32* %254, align 8
  %255 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %19, i64 0, i32 9
  store i32 0, i32* %255, align 8
  %256 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %19, i64 0, i32 11
  store i8 0, i8* %256, align 4
  %257 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %22, align 8
  %258 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %257, i64 0, i32 0, i32 2
  %259 = load i32, i32* %258, align 4
  %260 = sitofp i32 %259 to float
  %261 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %257, i64 0, i32 0, i32 3
  %262 = load i32, i32* %261, align 8
  %263 = sitofp i32 %262 to float
  %264 = fmul float %260, 2.560000e+02
  %265 = fptosi float %264 to i32
  %266 = fmul float %263, 2.560000e+02
  %267 = fptosi float %266 to i32
  %268 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %19, i64 0, i32 10, i32 0
  store i32 0, i32* %268, align 4
  %269 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %19, i64 0, i32 10, i32 1
  store i32 0, i32* %269, align 4
  %270 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %19, i64 0, i32 10, i32 2
  store i32 %265, i32* %270, align 4
  %271 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %19, i64 0, i32 10, i32 3
  store i32 %267, i32* %271, align 4
  %272 = icmp slt i32 %265, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %248
  store i32 %265, i32* %268, align 4
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %248
  %275 = icmp slt i32 %267, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %274
  store i32 %267, i32* %269, align 4
  store i32 0, i32* %271, align 4
  br label %277

277:                                              ; preds = %274, %276
  store i8 1, i8* %256, align 4
  %278 = load float, float* %160, align 16
  call fastcc void @_ZN6pdfium12_GLOBAL__N_115RasterizeStrokeEPNS_3agg22rasterizer_scanline_aaEPNS1_12path_storageEPK10CFX_MatrixPK18CFX_GraphStateDatafb(%"class.pdfium::agg::rasterizer_scanline_aa"* nonnull %19, %"class.pdfium::agg::path_storage"* nonnull %18, %class.CFX_Matrix* nonnull %14, %class.CFX_GraphStateData* nonnull %3, float %278)
  %279 = load i8, i8* %119, align 1
  %280 = and i8 %279, 4
  %281 = icmp ne i8 %280, 0
  %282 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 6
  %283 = load i8, i8* %282, align 1, !range !7
  %284 = icmp ne i8 %283, 0
  call void @_ZN6pdfium19CFX_AggDeviceDriver16RenderRasterizerERNS_3agg22rasterizer_scanline_aaEjbb(%"class.pdfium::CFX_AggDeviceDriver"* %0, %"class.pdfium::agg::rasterizer_scanline_aa"* nonnull dereferenceable(176) %19, i32 %5, i1 zeroext %281, i1 zeroext %284)
  call void @_ZN6pdfium3agg10outline_aaD1Ev(%"class.pdfium::agg::outline_aa"* nonnull %251) #14
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %250) #14
  call void @_ZN6pdfium3agg12path_storageD1Ev(%"class.pdfium::agg::path_storage"* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %249) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #14
  br label %285

285:                                              ; preds = %151, %277, %114, %21, %8
  %286 = phi i1 [ false, %8 ], [ true, %21 ], [ true, %114 ], [ true, %277 ], [ true, %151 ]
  ret i1 %286
}

declare void @_ZNK10CFX_Matrix10GetInverseEv(%class.CFX_Matrix* sret, %class.CFX_Matrix*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6pdfium19CFX_AggDeviceDriver17FillRectWithBlendERK7FX_RECTj9BlendMode(%"class.pdfium::CFX_AggDeviceDriver"* nocapture readonly, %struct.FX_RECT* dereferenceable(16), i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca %struct.FX_RECT, align 4
  %6 = alloca %struct.FX_RECT, align 4
  %7 = alloca %struct.FX_RECT, align 4
  %8 = alloca %"class.fxcrt::RetainPtr.33", align 8
  %9 = icmp eq i32 %3, 0
  br i1 %9, label %10, label %433

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %11, align 8
  %13 = bitcast %class.CFX_DIBitmap* %12 to i8* (%class.CFX_DIBitmap*)***
  %14 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %13, align 8
  %15 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %14, i64 2
  %16 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %15, align 8
  %17 = tail call i8* %16(%class.CFX_DIBitmap* %12) #14
  %18 = icmp eq i8* %17, null
  br i1 %18, label %433, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %20, align 8
  %22 = icmp eq %class.CFX_ClipRgn* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %11, align 8
  %25 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %24, i64 0, i32 0, i32 2
  %26 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %24, i64 0, i32 0, i32 3
  br label %34

27:                                               ; preds = %19
  %28 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %21, i64 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %21, i64 0, i32 1, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %21, i64 0, i32 1, i32 2
  %33 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %21, i64 0, i32 1, i32 3
  br label %34

34:                                               ; preds = %23, %27
  %35 = phi i32 [ 0, %23 ], [ %29, %27 ]
  %36 = phi i32 [ 0, %23 ], [ %31, %27 ]
  %37 = phi i32* [ %25, %23 ], [ %32, %27 ]
  %38 = phi i32* [ %26, %23 ], [ %33, %27 ]
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %37, align 4
  %41 = bitcast %struct.FX_RECT* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #14
  %42 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %7, i64 0, i32 0
  %43 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %7, i64 0, i32 1
  %44 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %7, i64 0, i32 2
  %45 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %7, i64 0, i32 3
  store i32 %35, i32* %42, align 4
  store i32 %36, i32* %43, align 4
  store i32 %40, i32* %44, align 4
  store i32 %39, i32* %45, align 4
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %7, %struct.FX_RECT* dereferenceable(16) %1) #14
  %46 = load i32, i32* %44, align 4
  %47 = load i32, i32* %42, align 4
  %48 = icmp sgt i32 %46, %47
  br i1 %48, label %49, label %432

49:                                               ; preds = %34
  %50 = load i32, i32* %45, align 4
  %51 = load i32, i32* %43, align 4
  %52 = icmp sgt i32 %50, %51
  br i1 %52, label %53, label %432

53:                                               ; preds = %49
  %54 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %20, align 8
  %55 = icmp eq %class.CFX_ClipRgn* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %54, i64 0, i32 0
  %58 = load i8, i8* %57, align 8, !range !7
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %382

60:                                               ; preds = %56, %53
  %61 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 5
  %62 = load i8, i8* %61, align 2, !range !7
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %377, label %64

64:                                               ; preds = %60
  %65 = lshr i32 %2, 24
  %66 = trunc i32 %65 to i8
  %67 = icmp eq i32 %65, 0
  br i1 %67, label %432, label %68

68:                                               ; preds = %64
  %69 = bitcast %struct.FX_RECT* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #14
  %70 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 0
  %71 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 1
  %72 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 2
  %73 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 3
  store i32 %47, i32* %70, align 4
  store i32 %51, i32* %71, align 4
  store i32 %46, i32* %72, align 4
  store i32 %50, i32* %73, align 4
  %74 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %11, align 8
  %75 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %74, i64 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %74, i64 0, i32 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = bitcast %struct.FX_RECT* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #14
  %80 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %5, i64 0, i32 0
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %5, i64 0, i32 1
  store i32 0, i32* %81, align 4
  %82 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %5, i64 0, i32 2
  store i32 %76, i32* %82, align 4
  %83 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %5, i64 0, i32 3
  store i32 %78, i32* %83, align 4
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %6, %struct.FX_RECT* nonnull dereferenceable(16) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #14
  %84 = load i32, i32* %72, align 4
  %85 = load i32, i32* %70, align 4
  %86 = sub i32 %84, %85
  %87 = lshr i32 %2, 16
  %88 = trunc i32 %87 to i8
  %89 = and i32 %87, 255
  %90 = lshr i32 %2, 8
  %91 = trunc i32 %90 to i8
  %92 = and i32 %90, 255
  %93 = trunc i32 %2 to i8
  %94 = and i32 %2, 255
  %95 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %11, align 8
  %96 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %95, i64 0, i32 0, i32 1
  %97 = load i16, i16* %96, align 8
  %98 = and i16 %97, 255
  %99 = zext i16 %98 to i32
  %100 = lshr i32 %99, 3
  %101 = shl nuw nsw i32 %92, 8
  %102 = shl nuw nsw i32 %94, 16
  %103 = and i32 %2, -16777216
  %104 = or i32 %89, %103
  %105 = or i32 %104, %102
  %106 = or i32 %105, %101
  %107 = bitcast %class.CFX_DIBitmap* %95 to i8* (%class.CFX_DIBitmap*)***
  %108 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %107, align 8
  %109 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %108, i64 2
  %110 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %109, align 8
  %111 = call i8* %110(%class.CFX_DIBitmap* %95) #14
  %112 = icmp eq i32 %65, 255
  br i1 %112, label %113, label %265

113:                                              ; preds = %68
  %114 = load i32, i32* %71, align 4
  %115 = load i32, i32* %73, align 4
  %116 = icmp slt i32 %114, %115
  br i1 %116, label %117, label %376

117:                                              ; preds = %113
  %118 = and i32 %99, 248
  %119 = icmp eq i32 %118, 32
  %120 = icmp sgt i32 %86, 0
  %121 = xor i32 %85, -1
  %122 = add i32 %84, %121
  %123 = zext i32 %122 to i64
  %124 = add nuw nsw i64 %123, 1
  %125 = xor i32 %85, -1
  %126 = add i32 %84, %125
  %127 = and i64 %124, 8589934584
  %128 = add nsw i64 %127, -8
  %129 = lshr exact i64 %128, 3
  %130 = add nuw nsw i64 %129, 1
  %131 = and i32 %86, 3
  %132 = icmp ult i32 %126, 3
  %133 = sub i32 %86, %131
  %134 = icmp eq i32 %131, 0
  %135 = icmp ult i64 %124, 8
  %136 = and i64 %124, 8589934584
  %137 = trunc i64 %136 to i32
  %138 = sub i32 %86, %137
  %139 = insertelement <4 x i32> undef, i32 %106, i32 0
  %140 = shufflevector <4 x i32> %139, <4 x i32> undef, <4 x i32> zeroinitializer
  %141 = insertelement <4 x i32> undef, i32 %106, i32 0
  %142 = shufflevector <4 x i32> %141, <4 x i32> undef, <4 x i32> zeroinitializer
  %143 = and i64 %130, 7
  %144 = icmp ult i64 %128, 56
  %145 = sub nsw i64 %130, %143
  %146 = icmp eq i64 %143, 0
  %147 = icmp eq i64 %124, %136
  br label %148

148:                                              ; preds = %261, %117
  %149 = phi i32 [ %114, %117 ], [ %262, %261 ]
  %150 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %11, align 8
  %151 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %150, i64 0, i32 0, i32 4
  %152 = load i32, i32* %151, align 4
  %153 = mul i32 %152, %149
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds i8, i8* %111, i64 %154
  %156 = load i32, i32* %70, align 4
  %157 = mul nsw i32 %156, %100
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i8, i8* %155, i64 %158
  br i1 %119, label %162, label %160

160:                                              ; preds = %148
  br i1 %120, label %161, label %261

161:                                              ; preds = %160
  br i1 %132, label %251, label %234

162:                                              ; preds = %148
  br i1 %120, label %163, label %261

163:                                              ; preds = %162
  %164 = bitcast i8* %159 to i32*
  br i1 %135, label %225, label %165

165:                                              ; preds = %163
  %166 = getelementptr i32, i32* %164, i64 %136
  br i1 %144, label %212, label %167

167:                                              ; preds = %165, %167
  %168 = phi i64 [ %209, %167 ], [ 0, %165 ]
  %169 = phi i64 [ %210, %167 ], [ %145, %165 ]
  %170 = getelementptr i32, i32* %164, i64 %168
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> %140, <4 x i32>* %171, align 4
  %172 = getelementptr i32, i32* %170, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %173, align 4
  %174 = or i64 %168, 8
  %175 = getelementptr i32, i32* %164, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> %140, <4 x i32>* %176, align 4
  %177 = getelementptr i32, i32* %175, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %178, align 4
  %179 = or i64 %168, 16
  %180 = getelementptr i32, i32* %164, i64 %179
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> %140, <4 x i32>* %181, align 4
  %182 = getelementptr i32, i32* %180, i64 4
  %183 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %183, align 4
  %184 = or i64 %168, 24
  %185 = getelementptr i32, i32* %164, i64 %184
  %186 = bitcast i32* %185 to <4 x i32>*
  store <4 x i32> %140, <4 x i32>* %186, align 4
  %187 = getelementptr i32, i32* %185, i64 4
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %188, align 4
  %189 = or i64 %168, 32
  %190 = getelementptr i32, i32* %164, i64 %189
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %140, <4 x i32>* %191, align 4
  %192 = getelementptr i32, i32* %190, i64 4
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %193, align 4
  %194 = or i64 %168, 40
  %195 = getelementptr i32, i32* %164, i64 %194
  %196 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> %140, <4 x i32>* %196, align 4
  %197 = getelementptr i32, i32* %195, i64 4
  %198 = bitcast i32* %197 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %198, align 4
  %199 = or i64 %168, 48
  %200 = getelementptr i32, i32* %164, i64 %199
  %201 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> %140, <4 x i32>* %201, align 4
  %202 = getelementptr i32, i32* %200, i64 4
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %203, align 4
  %204 = or i64 %168, 56
  %205 = getelementptr i32, i32* %164, i64 %204
  %206 = bitcast i32* %205 to <4 x i32>*
  store <4 x i32> %140, <4 x i32>* %206, align 4
  %207 = getelementptr i32, i32* %205, i64 4
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %208, align 4
  %209 = add i64 %168, 64
  %210 = add i64 %169, -8
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %167, !llvm.loop !31

212:                                              ; preds = %167, %165
  %213 = phi i64 [ 0, %165 ], [ %209, %167 ]
  br i1 %146, label %224, label %214

214:                                              ; preds = %212, %214
  %215 = phi i64 [ %221, %214 ], [ %213, %212 ]
  %216 = phi i64 [ %222, %214 ], [ %143, %212 ]
  %217 = getelementptr i32, i32* %164, i64 %215
  %218 = bitcast i32* %217 to <4 x i32>*
  store <4 x i32> %140, <4 x i32>* %218, align 4
  %219 = getelementptr i32, i32* %217, i64 4
  %220 = bitcast i32* %219 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %220, align 4
  %221 = add i64 %215, 8
  %222 = add i64 %216, -1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %214, !llvm.loop !32

224:                                              ; preds = %214, %212
  br i1 %147, label %261, label %225

225:                                              ; preds = %224, %163
  %226 = phi i32* [ %164, %163 ], [ %166, %224 ]
  %227 = phi i32 [ %86, %163 ], [ %138, %224 ]
  br label %228

228:                                              ; preds = %225, %228
  %229 = phi i32* [ %231, %228 ], [ %226, %225 ]
  %230 = phi i32 [ %232, %228 ], [ %227, %225 ]
  store i32 %106, i32* %229, align 4
  %231 = getelementptr inbounds i32, i32* %229, i64 1
  %232 = add nsw i32 %230, -1
  %233 = icmp sgt i32 %232, 0
  br i1 %233, label %228, label %261, !llvm.loop !33

234:                                              ; preds = %161, %234
  %235 = phi i8* [ %248, %234 ], [ %159, %161 ]
  %236 = phi i32 [ %249, %234 ], [ %133, %161 ]
  %237 = getelementptr inbounds i8, i8* %235, i64 1
  store i8 %88, i8* %235, align 1
  %238 = getelementptr inbounds i8, i8* %235, i64 2
  store i8 %91, i8* %237, align 1
  %239 = getelementptr inbounds i8, i8* %235, i64 3
  store i8 %93, i8* %238, align 1
  %240 = getelementptr inbounds i8, i8* %235, i64 4
  store i8 %88, i8* %239, align 1
  %241 = getelementptr inbounds i8, i8* %235, i64 5
  store i8 %91, i8* %240, align 1
  %242 = getelementptr inbounds i8, i8* %235, i64 6
  store i8 %93, i8* %241, align 1
  %243 = getelementptr inbounds i8, i8* %235, i64 7
  store i8 %88, i8* %242, align 1
  %244 = getelementptr inbounds i8, i8* %235, i64 8
  store i8 %91, i8* %243, align 1
  %245 = getelementptr inbounds i8, i8* %235, i64 9
  store i8 %93, i8* %244, align 1
  %246 = getelementptr inbounds i8, i8* %235, i64 10
  store i8 %88, i8* %245, align 1
  %247 = getelementptr inbounds i8, i8* %235, i64 11
  store i8 %91, i8* %246, align 1
  %248 = getelementptr inbounds i8, i8* %235, i64 12
  store i8 %93, i8* %247, align 1
  %249 = add i32 %236, -4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %234

251:                                              ; preds = %234, %161
  %252 = phi i8* [ %159, %161 ], [ %248, %234 ]
  br i1 %134, label %261, label %253

253:                                              ; preds = %251, %253
  %254 = phi i8* [ %258, %253 ], [ %252, %251 ]
  %255 = phi i32 [ %259, %253 ], [ %131, %251 ]
  %256 = getelementptr inbounds i8, i8* %254, i64 1
  store i8 %88, i8* %254, align 1
  %257 = getelementptr inbounds i8, i8* %254, i64 2
  store i8 %91, i8* %256, align 1
  %258 = getelementptr inbounds i8, i8* %254, i64 3
  store i8 %93, i8* %257, align 1
  %259 = add i32 %255, -1
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %253, !llvm.loop !34

261:                                              ; preds = %251, %253, %228, %224, %162, %160
  %262 = add nsw i32 %149, 1
  %263 = load i32, i32* %73, align 4
  %264 = icmp slt i32 %262, %263
  br i1 %264, label %148, label %376

265:                                              ; preds = %68
  %266 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %11, align 8
  %267 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %266, i64 0, i32 0, i32 1
  %268 = load i16, i16* %267, align 8
  %269 = and i16 %268, 512
  %270 = icmp eq i16 %269, 0
  %271 = load i32, i32* %71, align 4
  %272 = load i32, i32* %73, align 4
  %273 = icmp slt i32 %271, %272
  br i1 %273, label %274, label %376

274:                                              ; preds = %265
  %275 = icmp sgt i32 %86, 0
  %276 = mul nuw nsw i32 %65, 255
  %277 = xor i32 %65, 255
  %278 = mul nuw nsw i32 %89, %65
  %279 = mul nuw nsw i32 %92, %65
  %280 = mul nuw nsw i32 %94, %65
  %281 = and i32 %99, 248
  %282 = icmp eq i32 %281, 32
  %283 = select i1 %282, i64 4, i64 3
  br label %284

284:                                              ; preds = %374, %274
  %285 = phi %class.CFX_DIBitmap* [ %375, %374 ], [ %266, %274 ]
  %286 = phi i32 [ %371, %374 ], [ %271, %274 ]
  %287 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %285, i64 0, i32 0, i32 4
  %288 = load i32, i32* %287, align 4
  %289 = mul i32 %288, %286
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds i8, i8* %111, i64 %290
  %292 = load i32, i32* %70, align 4
  %293 = mul nsw i32 %292, %100
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds i8, i8* %291, i64 %294
  br i1 %270, label %297, label %296

296:                                              ; preds = %284
  br i1 %275, label %324, label %370

297:                                              ; preds = %284
  br i1 %275, label %298, label %370

298:                                              ; preds = %297, %298
  %299 = phi i32 [ %322, %298 ], [ 0, %297 ]
  %300 = phi i8* [ %321, %298 ], [ %295, %297 ]
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i32
  %303 = mul nuw nsw i32 %277, %302
  %304 = add nuw nsw i32 %303, %278
  %305 = udiv i32 %304, 255
  %306 = trunc i32 %305 to i8
  store i8 %306, i8* %300, align 1
  %307 = getelementptr inbounds i8, i8* %300, i64 1
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i32
  %310 = mul nuw nsw i32 %277, %309
  %311 = add nuw nsw i32 %310, %279
  %312 = udiv i32 %311, 255
  %313 = trunc i32 %312 to i8
  store i8 %313, i8* %307, align 1
  %314 = getelementptr inbounds i8, i8* %300, i64 2
  %315 = load i8, i8* %314, align 1
  %316 = zext i8 %315 to i32
  %317 = mul nuw nsw i32 %277, %316
  %318 = add nuw nsw i32 %317, %280
  %319 = udiv i32 %318, 255
  %320 = trunc i32 %319 to i8
  store i8 %320, i8* %314, align 1
  %321 = getelementptr inbounds i8, i8* %300, i64 %283
  %322 = add nuw nsw i32 %299, 1
  %323 = icmp eq i32 %322, %86
  br i1 %323, label %370, label %298

324:                                              ; preds = %296, %366
  %325 = phi i32 [ %368, %366 ], [ 0, %296 ]
  %326 = phi i8* [ %367, %366 ], [ %295, %296 ]
  %327 = getelementptr inbounds i8, i8* %326, i64 3
  %328 = load i8, i8* %327, align 1
  %329 = zext i8 %328 to i32
  %330 = icmp eq i8 %328, 0
  br i1 %330, label %331, label %334

331:                                              ; preds = %324
  store i8 %66, i8* %327, align 1
  store i8 %88, i8* %326, align 1
  %332 = getelementptr inbounds i8, i8* %326, i64 1
  store i8 %91, i8* %332, align 1
  %333 = getelementptr inbounds i8, i8* %326, i64 2
  store i8 %93, i8* %333, align 1
  br label %366

334:                                              ; preds = %324
  %335 = add nuw nsw i32 %65, %329
  %336 = mul nuw nsw i32 %65, %329
  %337 = udiv i32 %336, 255
  %338 = sub nsw i32 %335, %337
  %339 = trunc i32 %338 to i8
  store i8 %339, i8* %327, align 1
  %340 = and i32 %338, 255
  %341 = udiv i32 %276, %340
  %342 = load i8, i8* %326, align 1
  %343 = zext i8 %342 to i32
  %344 = sub nsw i32 255, %341
  %345 = mul nsw i32 %344, %343
  %346 = mul nuw nsw i32 %341, %89
  %347 = add nsw i32 %345, %346
  %348 = sdiv i32 %347, 255
  %349 = trunc i32 %348 to i8
  store i8 %349, i8* %326, align 1
  %350 = getelementptr inbounds i8, i8* %326, i64 1
  %351 = load i8, i8* %350, align 1
  %352 = zext i8 %351 to i32
  %353 = mul nsw i32 %344, %352
  %354 = mul nuw nsw i32 %341, %92
  %355 = add nsw i32 %353, %354
  %356 = sdiv i32 %355, 255
  %357 = trunc i32 %356 to i8
  store i8 %357, i8* %350, align 1
  %358 = getelementptr inbounds i8, i8* %326, i64 2
  %359 = load i8, i8* %358, align 1
  %360 = zext i8 %359 to i32
  %361 = mul nsw i32 %344, %360
  %362 = mul nuw nsw i32 %341, %94
  %363 = add nsw i32 %361, %362
  %364 = sdiv i32 %363, 255
  %365 = trunc i32 %364 to i8
  store i8 %365, i8* %358, align 1
  br label %366

366:                                              ; preds = %334, %331
  %367 = getelementptr inbounds i8, i8* %326, i64 4
  %368 = add nuw nsw i32 %325, 1
  %369 = icmp eq i32 %368, %86
  br i1 %369, label %370, label %324

370:                                              ; preds = %366, %298, %297, %296
  %371 = add nsw i32 %286, 1
  %372 = load i32, i32* %73, align 4
  %373 = icmp slt i32 %371, %372
  br i1 %373, label %374, label %376

374:                                              ; preds = %370
  %375 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %11, align 8
  br label %284

376:                                              ; preds = %370, %261, %265, %113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #14
  br label %432

377:                                              ; preds = %60
  %378 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %11, align 8
  %379 = sub nsw i32 %46, %47
  %380 = sub nsw i32 %50, %51
  %381 = call zeroext i1 @_ZN12CFX_DIBitmap13CompositeRectEiiiij(%class.CFX_DIBitmap* %378, i32 %47, i32 %51, i32 %379, i32 %380, i32 %2) #14
  br label %432

382:                                              ; preds = %56
  %383 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %11, align 8
  %384 = sub nsw i32 %46, %47
  %385 = sub nsw i32 %50, %51
  %386 = bitcast %"class.fxcrt::RetainPtr.33"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %386) #14
  %387 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %388 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %387, align 8, !noalias !35
  %389 = ptrtoint %class.CFX_DIBitmap* %388 to i64
  %390 = icmp eq %class.CFX_DIBitmap* %388, null
  br i1 %390, label %391, label %393

391:                                              ; preds = %382
  %392 = bitcast %"class.fxcrt::RetainPtr.33"* %8 to i64*
  store i64 %389, i64* %392, align 8
  br label %398

393:                                              ; preds = %382
  %394 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %388, i64 0, i32 0, i32 0, i32 1
  %395 = load i64, i64* %394, align 8, !noalias !35
  %396 = bitcast %"class.fxcrt::RetainPtr.33"* %8 to i64*
  store i64 %389, i64* %396, align 8
  %397 = add nsw i64 %395, 2
  store i64 %397, i64* %394, align 8
  br label %398

398:                                              ; preds = %391, %393
  %399 = sub nsw i32 %47, %35
  %400 = sub nsw i32 %51, %36
  %401 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 5
  %402 = load i8, i8* %401, align 2, !range !7
  %403 = icmp ne i8 %402, 0
  %404 = call zeroext i1 @_ZN12CFX_DIBitmap13CompositeMaskEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEjii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap* %383, i32 %47, i32 %51, i32 %384, i32 %385, %"class.fxcrt::RetainPtr.33"* nonnull dereferenceable(8) %8, i32 %2, i32 %399, i32 %400, i32 0, %class.CFX_ClipRgn* null, i1 zeroext %403) #14
  %405 = getelementptr inbounds %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %406 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %405, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %405, align 8
  %407 = icmp eq %class.CFX_DIBBase* %406, null
  br i1 %407, label %419, label %408

408:                                              ; preds = %398
  %409 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %406, i64 0, i32 0, i32 1
  %410 = load i64, i64* %409, align 8
  %411 = add nsw i64 %410, -1
  store i64 %411, i64* %409, align 8
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %419

413:                                              ; preds = %408
  %414 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %406, i64 0, i32 0
  %415 = bitcast %class.CFX_DIBBase* %406 to void (%"class.fxcrt::Retainable"*)***
  %416 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %415, align 8
  %417 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %416, i64 1
  %418 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %417, align 8
  call void %418(%"class.fxcrt::Retainable"* nonnull %414) #14
  br label %419

419:                                              ; preds = %398, %408, %413
  br i1 %390, label %431, label %420

420:                                              ; preds = %419
  %421 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %388, i64 0, i32 0, i32 0, i32 1
  %422 = load i64, i64* %421, align 8
  %423 = add nsw i64 %422, -1
  store i64 %423, i64* %421, align 8
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %425, label %431

425:                                              ; preds = %420
  %426 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %388, i64 0, i32 0, i32 0
  %427 = bitcast %class.CFX_DIBitmap* %388 to void (%"class.fxcrt::Retainable"*)***
  %428 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %427, align 8
  %429 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %428, i64 1
  %430 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %429, align 8
  call void %430(%"class.fxcrt::Retainable"* nonnull %426) #14
  br label %431

431:                                              ; preds = %419, %420, %425
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %386) #14
  br label %432

432:                                              ; preds = %49, %34, %376, %64, %377, %431
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #14
  br label %433

433:                                              ; preds = %10, %4, %432
  %434 = phi i1 [ true, %432 ], [ false, %4 ], [ true, %10 ]
  ret i1 %434
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6pdfium19CFX_AggDeviceDriver10GetClipBoxEP7FX_RECT(%"class.pdfium::CFX_AggDeviceDriver"* nocapture readonly, %struct.FX_RECT* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %3, align 8
  %5 = icmp eq %class.CFX_ClipRgn* %4, null
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 1
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  %11 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %10, i64 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 2
  store i32 %12, i32* %13, align 4
  %14 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  %15 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %14, i64 0, i32 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 3
  store i32 %16, i32* %17, align 4
  br label %22

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %4, i64 0, i32 1
  %20 = bitcast %struct.FX_RECT* %1 to i8*
  %21 = bitcast %struct.FX_RECT* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %21, i64 16, i1 false)
  br label %22

22:                                               ; preds = %18, %6
  ret i1 true
}

declare zeroext i1 @_ZN12CFX_DIBitmap13CompositeRectEiiiij(%class.CFX_DIBitmap*, i32, i32, i32, i32, i32) local_unnamed_addr #6

declare zeroext i1 @_ZN12CFX_DIBitmap13CompositeMaskEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEjii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap*, i32, i32, i32, i32, %"class.fxcrt::RetainPtr.33"* dereferenceable(8), i32, i32, i32, i32, %class.CFX_ClipRgn*, i1 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6pdfium19CFX_AggDeviceDriver9GetDIBitsERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEii(%"class.pdfium::CFX_AggDeviceDriver"* nocapture readonly, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8), i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.FX_RECT, align 4
  %12 = alloca %"class.fxcrt::RetainPtr", align 8
  %13 = alloca %"class.fxcrt::RetainPtr.33", align 8
  %14 = alloca %"class.fxcrt::RetainPtr", align 8
  %15 = alloca %"class.fxcrt::RetainPtr.33", align 8
  %16 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %16, align 8
  %18 = bitcast %class.CFX_DIBitmap* %17 to i8* (%class.CFX_DIBitmap*)***
  %19 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %18, align 8
  %20 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %19, i64 2
  %21 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %20, align 8
  %22 = tail call i8* %21(%class.CFX_DIBitmap* %17) #14
  %23 = icmp eq i8* %22, null
  br i1 %23, label %424, label %24

24:                                               ; preds = %4
  %25 = bitcast %struct.FX_RECT* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #14
  %26 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 0
  %27 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 1
  %28 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 2
  %29 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 3
  %30 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %30, align 8
  %32 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %31, i64 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = add nsw i32 %33, %2
  %35 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %31, i64 0, i32 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = add nsw i32 %36, %3
  store i32 %2, i32* %26, align 4
  store i32 %3, i32* %27, align 4
  store i32 %34, i32* %28, align 4
  store i32 %37, i32* %29, align 4
  %38 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %39 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %38, align 8
  %40 = icmp eq %class.CFX_DIBitmap* %39, null
  br i1 %40, label %79, label %41

41:                                               ; preds = %24
  %42 = bitcast %"class.fxcrt::RetainPtr"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #14
  %43 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %39, i64 0, i32 0
  call void @_ZNK11CFX_DIBBase5CloneEPK7FX_RECT(%"class.fxcrt::RetainPtr"* nonnull sret %12, %class.CFX_DIBBase* %43, %struct.FX_RECT* nonnull %11) #14
  %44 = bitcast %"class.fxcrt::RetainPtr"* %12 to i64*
  %45 = load i64, i64* %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #14
  %46 = inttoptr i64 %45 to %class.CFX_DIBitmap*
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %422, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %46, i64 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %46, i64 0, i32 0, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = bitcast %"class.fxcrt::RetainPtr.33"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #14
  %54 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %16, align 8
  %55 = ptrtoint %class.CFX_DIBitmap* %54 to i64
  %56 = bitcast %"class.fxcrt::RetainPtr.33"* %13 to i64*
  store i64 %55, i64* %56, align 8
  %57 = icmp eq %class.CFX_DIBitmap* %54, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %54, i64 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = add nsw i64 %60, 1
  store i64 %61, i64* %59, align 8
  br label %62

62:                                               ; preds = %48, %58
  %63 = call zeroext i1 @_ZN12CFX_DIBitmap15CompositeBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap* nonnull %46, i32 0, i32 0, i32 %50, i32 %52, %"class.fxcrt::RetainPtr.33"* nonnull dereferenceable(8) %13, i32 0, i32 0, i32 0, %class.CFX_ClipRgn* null, i1 zeroext false) #14
  %64 = getelementptr inbounds %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %64, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %64, align 8
  %66 = icmp eq %class.CFX_DIBBase* %65, null
  br i1 %66, label %78, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %65, i64 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = add nsw i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %67
  %73 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %65, i64 0, i32 0
  %74 = bitcast %class.CFX_DIBBase* %65 to void (%"class.fxcrt::Retainable"*)***
  %75 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %75, i64 1
  %77 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %76, align 8
  call void %77(%"class.fxcrt::Retainable"* nonnull %73) #14
  br label %78

78:                                               ; preds = %62, %67, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #14
  br label %86

79:                                               ; preds = %24
  %80 = bitcast %"class.fxcrt::RetainPtr"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #14
  %81 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %16, align 8
  %82 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %81, i64 0, i32 0
  call void @_ZNK11CFX_DIBBase5CloneEPK7FX_RECT(%"class.fxcrt::RetainPtr"* nonnull sret %14, %class.CFX_DIBBase* %82, %struct.FX_RECT* nonnull %11) #14
  %83 = bitcast %"class.fxcrt::RetainPtr"* %14 to i64*
  %84 = load i64, i64* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #14
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %422, label %86

86:                                               ; preds = %79, %78
  %87 = phi i64 [ %45, %78 ], [ %84, %79 ]
  %88 = icmp slt i32 %2, 0
  %89 = select i1 %88, i32 %2, i32 0
  %90 = icmp slt i32 %3, 0
  %91 = select i1 %90, i32 %3, i32 0
  %92 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 5
  %93 = load i8, i8* %92, align 2, !range !7
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %377, label %95

95:                                               ; preds = %86
  %96 = load i32, i32* %28, align 4
  %97 = load i32, i32* %26, align 4
  %98 = sub nsw i32 %96, %97
  %99 = load i32, i32* %29, align 4
  %100 = load i32, i32* %27, align 4
  %101 = sub nsw i32 %99, %100
  %102 = inttoptr i64 %87 to %class.CFX_DIBitmap*
  %103 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %102, i64 0, i32 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = add nsw i64 %104, 1
  store i64 %105, i64* %103, align 8
  %106 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106)
  %107 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %107)
  %108 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108)
  %109 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %109)
  %110 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110)
  %111 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111)
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  store i32 %98, i32* %7, align 4
  store i32 %101, i32* %8, align 4
  store i32 %89, i32* %9, align 4
  store i32 %91, i32* %10, align 4
  %112 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %30, align 8
  %113 = icmp eq %class.CFX_DIBitmap* %112, null
  br i1 %113, label %114, label %116

114:                                              ; preds = %95
  %115 = inttoptr i64 %87 to %class.CFX_DIBBase*
  br label %365

116:                                              ; preds = %95
  %117 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %112, i64 0, i32 0
  %118 = inttoptr i64 %87 to %class.CFX_DIBBase*
  %119 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %118, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %118, i64 0, i32 3
  %122 = load i32, i32* %121, align 8
  %123 = call zeroext i1 @_ZNK11CFX_DIBBase14GetOverlapRectERiS0_S0_S0_iiS0_S0_PK11CFX_ClipRgn(%class.CFX_DIBBase* %117, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8, i32 %120, i32 %122, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %10, %class.CFX_ClipRgn* null) #14
  br i1 %123, label %124, label %365

124:                                              ; preds = %116
  %125 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %30, align 8
  %126 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %125, i64 0, i32 0, i32 1
  %127 = load i16, i16* %126, align 8
  %128 = and i16 %127, 255
  %129 = zext i16 %128 to i32
  %130 = lshr i32 %129, 3
  %131 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %118, i64 0, i32 1
  %132 = load i16, i16* %131, align 8
  %133 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %125, i64 0, i32 0, i32 4
  %134 = load i32, i32* %133, align 4
  %135 = bitcast %class.CFX_DIBitmap* %125 to i8* (%class.CFX_DIBitmap*)***
  %136 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %135, align 8
  %137 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %136, i64 2
  %138 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %137, align 8
  %139 = call i8* %138(%class.CFX_DIBitmap* %125) #14
  %140 = icmp eq i16 %127, %132
  br i1 %140, label %141, label %217

141:                                              ; preds = %124
  %142 = load i32, i32* %8, align 4
  %143 = icmp sgt i32 %142, 0
  br i1 %143, label %144, label %365

144:                                              ; preds = %141
  %145 = and i32 %129, 248
  %146 = icmp eq i32 %145, 32
  %147 = inttoptr i64 %87 to i8* (%class.CFX_DIBBase*, i32)***
  br label %148

148:                                              ; preds = %213, %144
  %149 = phi i32 [ 0, %144 ], [ %214, %213 ]
  %150 = load i32, i32* %6, align 4
  %151 = add nsw i32 %150, %149
  %152 = mul nsw i32 %151, %134
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* %139, i64 %153
  %155 = load i32, i32* %5, align 4
  %156 = mul nsw i32 %155, %130
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* %154, i64 %157
  %159 = load i32, i32* %10, align 4
  %160 = add nsw i32 %159, %149
  %161 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %147, align 8
  %162 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %161, i64 3
  %163 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %162, align 8
  %164 = call i8* %163(%class.CFX_DIBBase* %118, i32 %160) #14
  %165 = load i32, i32* %9, align 4
  %166 = mul nsw i32 %165, %130
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i8, i8* %164, i64 %167
  %169 = load i32, i32* %7, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %146, label %172, label %171

171:                                              ; preds = %148
  br i1 %170, label %197, label %213

172:                                              ; preds = %148
  br i1 %170, label %173, label %213

173:                                              ; preds = %172, %173
  %174 = phi i32 [ %194, %173 ], [ 0, %172 ]
  %175 = phi i8* [ %193, %173 ], [ %168, %172 ]
  %176 = phi i8* [ %192, %173 ], [ %158, %172 ]
  %177 = bitcast i8* %175 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = lshr i32 %178, 24
  %180 = trunc i32 %179 to i8
  %181 = getelementptr inbounds i8, i8* %176, i64 3
  store i8 %180, i8* %181, align 1
  %182 = load i32, i32* %177, align 4
  %183 = lshr i32 %182, 16
  %184 = trunc i32 %183 to i8
  store i8 %184, i8* %176, align 1
  %185 = load i32, i32* %177, align 4
  %186 = lshr i32 %185, 8
  %187 = trunc i32 %186 to i8
  %188 = getelementptr inbounds i8, i8* %176, i64 1
  store i8 %187, i8* %188, align 1
  %189 = load i32, i32* %177, align 4
  %190 = trunc i32 %189 to i8
  %191 = getelementptr inbounds i8, i8* %176, i64 2
  store i8 %190, i8* %191, align 1
  %192 = getelementptr inbounds i8, i8* %176, i64 4
  %193 = getelementptr inbounds i8, i8* %175, i64 4
  %194 = add nuw nsw i32 %174, 1
  %195 = load i32, i32* %7, align 4
  %196 = icmp slt i32 %194, %195
  br i1 %196, label %173, label %213

197:                                              ; preds = %171, %197
  %198 = phi i32 [ %210, %197 ], [ 0, %171 ]
  %199 = phi i8* [ %209, %197 ], [ %168, %171 ]
  %200 = phi i8* [ %208, %197 ], [ %158, %171 ]
  %201 = getelementptr inbounds i8, i8* %199, i64 2
  %202 = load i8, i8* %201, align 1
  %203 = getelementptr inbounds i8, i8* %200, i64 1
  store i8 %202, i8* %200, align 1
  %204 = getelementptr inbounds i8, i8* %199, i64 1
  %205 = load i8, i8* %204, align 1
  %206 = getelementptr inbounds i8, i8* %200, i64 2
  store i8 %205, i8* %203, align 1
  %207 = load i8, i8* %199, align 1
  %208 = getelementptr inbounds i8, i8* %200, i64 3
  store i8 %207, i8* %206, align 1
  %209 = getelementptr inbounds i8, i8* %199, i64 3
  %210 = add nuw nsw i32 %198, 1
  %211 = load i32, i32* %7, align 4
  %212 = icmp slt i32 %210, %211
  br i1 %212, label %197, label %213

213:                                              ; preds = %197, %173, %172, %171
  %214 = add nuw nsw i32 %149, 1
  %215 = load i32, i32* %8, align 4
  %216 = icmp slt i32 %214, %215
  br i1 %216, label %148, label %365

217:                                              ; preds = %124
  %218 = load i32, i32* %6, align 4
  %219 = mul nsw i32 %218, %134
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i8, i8* %139, i64 %220
  %222 = load i32, i32* %5, align 4
  %223 = mul nsw i32 %222, %130
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i8, i8* %221, i64 %224
  %226 = icmp eq i16 %127, 24
  br i1 %226, label %227, label %272

227:                                              ; preds = %217
  %228 = load i32, i32* %8, align 4
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %365

230:                                              ; preds = %227
  %231 = sext i32 %134 to i64
  %232 = inttoptr i64 %87 to i8* (%class.CFX_DIBBase*, i32)***
  br label %233

233:                                              ; preds = %251, %230
  %234 = phi i64 [ 0, %230 ], [ %252, %251 ]
  %235 = load i32, i32* %10, align 4
  %236 = trunc i64 %234 to i32
  %237 = add nsw i32 %235, %236
  %238 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %232, align 8
  %239 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %238, i64 3
  %240 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %239, align 8
  %241 = call i8* %240(%class.CFX_DIBBase* %118, i32 %237) #14
  %242 = load i32, i32* %7, align 4
  %243 = icmp sgt i32 %242, 0
  br i1 %243, label %244, label %251

244:                                              ; preds = %233
  %245 = load i32, i32* %9, align 4
  %246 = shl nsw i32 %245, 2
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds i8, i8* %241, i64 %247
  %249 = mul nsw i64 %234, %231
  %250 = getelementptr inbounds i8, i8* %225, i64 %249
  br label %256

251:                                              ; preds = %256, %233
  %252 = add nuw nsw i64 %234, 1
  %253 = load i32, i32* %8, align 4
  %254 = sext i32 %253 to i64
  %255 = icmp slt i64 %252, %254
  br i1 %255, label %233, label %365

256:                                              ; preds = %256, %244
  %257 = phi i32 [ %269, %256 ], [ 0, %244 ]
  %258 = phi i8* [ %268, %256 ], [ %248, %244 ]
  %259 = phi i8* [ %267, %256 ], [ %250, %244 ]
  %260 = getelementptr inbounds i8, i8* %258, i64 2
  %261 = load i8, i8* %260, align 1
  %262 = getelementptr inbounds i8, i8* %259, i64 1
  store i8 %261, i8* %259, align 1
  %263 = getelementptr inbounds i8, i8* %258, i64 1
  %264 = load i8, i8* %263, align 1
  %265 = getelementptr inbounds i8, i8* %259, i64 2
  store i8 %264, i8* %262, align 1
  %266 = load i8, i8* %258, align 1
  %267 = getelementptr inbounds i8, i8* %259, i64 3
  store i8 %266, i8* %265, align 1
  %268 = getelementptr inbounds i8, i8* %258, i64 4
  %269 = add nuw nsw i32 %257, 1
  %270 = load i32, i32* %7, align 4
  %271 = icmp slt i32 %269, %270
  br i1 %271, label %256, label %251

272:                                              ; preds = %217
  switch i16 %132, label %365 [
    i16 24, label %279
    i16 32, label %273
  ]

273:                                              ; preds = %272
  %274 = load i32, i32* %8, align 4
  %275 = icmp sgt i32 %274, 0
  br i1 %275, label %276, label %365

276:                                              ; preds = %273
  %277 = sext i32 %134 to i64
  %278 = inttoptr i64 %87 to i8* (%class.CFX_DIBBase*, i32)***
  br label %325

279:                                              ; preds = %272
  %280 = load i32, i32* %8, align 4
  %281 = icmp sgt i32 %280, 0
  br i1 %281, label %282, label %365

282:                                              ; preds = %279
  %283 = sext i32 %134 to i64
  %284 = inttoptr i64 %87 to i8* (%class.CFX_DIBBase*, i32)***
  br label %285

285:                                              ; preds = %303, %282
  %286 = phi i64 [ 0, %282 ], [ %304, %303 ]
  %287 = load i32, i32* %10, align 4
  %288 = trunc i64 %286 to i32
  %289 = add nsw i32 %287, %288
  %290 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %284, align 8
  %291 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %290, i64 3
  %292 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %291, align 8
  %293 = call i8* %292(%class.CFX_DIBBase* %118, i32 %289) #14
  %294 = load i32, i32* %7, align 4
  %295 = icmp sgt i32 %294, 0
  br i1 %295, label %296, label %303

296:                                              ; preds = %285
  %297 = load i32, i32* %9, align 4
  %298 = mul nsw i32 %297, 3
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds i8, i8* %293, i64 %299
  %301 = mul nsw i64 %286, %283
  %302 = getelementptr inbounds i8, i8* %225, i64 %301
  br label %308

303:                                              ; preds = %308, %285
  %304 = add nuw nsw i64 %286, 1
  %305 = load i32, i32* %8, align 4
  %306 = sext i32 %305 to i64
  %307 = icmp slt i64 %304, %306
  br i1 %307, label %285, label %365

308:                                              ; preds = %308, %296
  %309 = phi i32 [ %322, %308 ], [ 0, %296 ]
  %310 = phi i8* [ %321, %308 ], [ %300, %296 ]
  %311 = phi i8* [ %320, %308 ], [ %302, %296 ]
  %312 = getelementptr inbounds i8, i8* %310, i64 1
  %313 = getelementptr inbounds i8, i8* %310, i64 2
  %314 = load i8, i8* %313, align 1
  store i8 %314, i8* %311, align 1
  %315 = load i8, i8* %312, align 1
  %316 = getelementptr inbounds i8, i8* %311, i64 1
  store i8 %315, i8* %316, align 1
  %317 = load i8, i8* %310, align 1
  %318 = getelementptr inbounds i8, i8* %311, i64 2
  store i8 %317, i8* %318, align 1
  %319 = getelementptr inbounds i8, i8* %311, i64 3
  store i8 -1, i8* %319, align 1
  %320 = getelementptr inbounds i8, i8* %311, i64 4
  %321 = getelementptr inbounds i8, i8* %310, i64 3
  %322 = add nuw nsw i32 %309, 1
  %323 = load i32, i32* %7, align 4
  %324 = icmp slt i32 %322, %323
  br i1 %324, label %308, label %303

325:                                              ; preds = %343, %276
  %326 = phi i64 [ 0, %276 ], [ %344, %343 ]
  %327 = load i32, i32* %10, align 4
  %328 = trunc i64 %326 to i32
  %329 = add nsw i32 %327, %328
  %330 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %278, align 8
  %331 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %330, i64 3
  %332 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %331, align 8
  %333 = call i8* %332(%class.CFX_DIBBase* %118, i32 %329) #14
  %334 = load i32, i32* %7, align 4
  %335 = icmp sgt i32 %334, 0
  br i1 %335, label %336, label %343

336:                                              ; preds = %325
  %337 = load i32, i32* %9, align 4
  %338 = shl nsw i32 %337, 2
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds i8, i8* %333, i64 %339
  %341 = mul nsw i64 %326, %277
  %342 = getelementptr inbounds i8, i8* %225, i64 %341
  br label %348

343:                                              ; preds = %348, %325
  %344 = add nuw nsw i64 %326, 1
  %345 = load i32, i32* %8, align 4
  %346 = sext i32 %345 to i64
  %347 = icmp slt i64 %344, %346
  br i1 %347, label %325, label %365

348:                                              ; preds = %348, %336
  %349 = phi i32 [ %362, %348 ], [ 0, %336 ]
  %350 = phi i8* [ %360, %348 ], [ %340, %336 ]
  %351 = phi i8* [ %361, %348 ], [ %342, %336 ]
  %352 = getelementptr inbounds i8, i8* %350, i64 1
  %353 = getelementptr inbounds i8, i8* %350, i64 2
  %354 = load i8, i8* %353, align 1
  store i8 %354, i8* %351, align 1
  %355 = load i8, i8* %352, align 1
  %356 = getelementptr inbounds i8, i8* %351, i64 1
  store i8 %355, i8* %356, align 1
  %357 = load i8, i8* %350, align 1
  %358 = getelementptr inbounds i8, i8* %351, i64 2
  store i8 %357, i8* %358, align 1
  %359 = getelementptr inbounds i8, i8* %351, i64 3
  store i8 -1, i8* %359, align 1
  %360 = getelementptr inbounds i8, i8* %350, i64 4
  %361 = getelementptr inbounds i8, i8* %351, i64 4
  %362 = add nuw nsw i32 %349, 1
  %363 = load i32, i32* %7, align 4
  %364 = icmp slt i32 %362, %363
  br i1 %364, label %348, label %343

365:                                              ; preds = %343, %303, %251, %213, %279, %273, %272, %227, %141, %116, %114
  %366 = phi %class.CFX_DIBBase* [ %115, %114 ], [ %118, %116 ], [ %118, %141 ], [ %118, %227 ], [ %118, %272 ], [ %118, %273 ], [ %118, %279 ], [ %118, %213 ], [ %118, %251 ], [ %118, %303 ], [ %118, %343 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %107)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %109)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111)
  %367 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %366, i64 0, i32 0, i32 1
  %368 = load i64, i64* %367, align 8
  %369 = add nsw i64 %368, -1
  store i64 %369, i64* %367, align 8
  %370 = icmp eq i64 %369, 0
  br i1 %370, label %371, label %407

371:                                              ; preds = %365
  %372 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %366, i64 0, i32 0
  %373 = inttoptr i64 %87 to void (%"class.fxcrt::Retainable"*)***
  %374 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %373, align 8
  %375 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %374, i64 1
  %376 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %375, align 8
  call void %376(%"class.fxcrt::Retainable"* nonnull %372) #14
  br label %407

377:                                              ; preds = %86
  %378 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %30, align 8
  %379 = load i32, i32* %28, align 4
  %380 = load i32, i32* %26, align 4
  %381 = sub nsw i32 %379, %380
  %382 = load i32, i32* %29, align 4
  %383 = load i32, i32* %27, align 4
  %384 = sub nsw i32 %382, %383
  %385 = bitcast %"class.fxcrt::RetainPtr.33"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %385) #14
  %386 = bitcast %"class.fxcrt::RetainPtr.33"* %15 to i64*
  store i64 %87, i64* %386, align 8
  %387 = inttoptr i64 %87 to %class.CFX_DIBitmap*
  %388 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %387, i64 0, i32 0, i32 0, i32 1
  %389 = load i64, i64* %388, align 8
  %390 = add nsw i64 %389, 1
  store i64 %390, i64* %388, align 8
  %391 = call zeroext i1 @_ZN12CFX_DIBitmap14TransferBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii(%class.CFX_DIBitmap* %378, i32 0, i32 0, i32 %381, i32 %384, %"class.fxcrt::RetainPtr.33"* nonnull dereferenceable(8) %15, i32 %89, i32 %91) #14
  %392 = getelementptr inbounds %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %393 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %392, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %392, align 8
  %394 = icmp eq %class.CFX_DIBBase* %393, null
  br i1 %394, label %406, label %395

395:                                              ; preds = %377
  %396 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %393, i64 0, i32 0, i32 1
  %397 = load i64, i64* %396, align 8
  %398 = add nsw i64 %397, -1
  store i64 %398, i64* %396, align 8
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %400, label %406

400:                                              ; preds = %395
  %401 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %393, i64 0, i32 0
  %402 = bitcast %class.CFX_DIBBase* %393 to void (%"class.fxcrt::Retainable"*)***
  %403 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %402, align 8
  %404 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %403, i64 1
  %405 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %404, align 8
  call void %405(%"class.fxcrt::Retainable"* nonnull %401) #14
  br label %406

406:                                              ; preds = %400, %395, %377
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %385) #14
  br label %409

407:                                              ; preds = %371, %365
  %408 = icmp eq i64 %87, 0
  br i1 %408, label %422, label %409

409:                                              ; preds = %406, %407
  %410 = phi i1 [ %391, %406 ], [ true, %407 ]
  %411 = inttoptr i64 %87 to %class.CFX_DIBitmap*
  %412 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %411, i64 0, i32 0, i32 0, i32 1
  %413 = load i64, i64* %412, align 8
  %414 = add nsw i64 %413, -1
  store i64 %414, i64* %412, align 8
  %415 = icmp eq i64 %414, 0
  br i1 %415, label %416, label %422

416:                                              ; preds = %409
  %417 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %411, i64 0, i32 0, i32 0
  %418 = inttoptr i64 %87 to void (%"class.fxcrt::Retainable"*)***
  %419 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %418, align 8
  %420 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %419, i64 1
  %421 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %420, align 8
  call void %421(%"class.fxcrt::Retainable"* nonnull %417) #14
  br label %422

422:                                              ; preds = %79, %41, %407, %409, %416
  %423 = phi i1 [ true, %407 ], [ %410, %409 ], [ %410, %416 ], [ true, %41 ], [ true, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #14
  br label %424

424:                                              ; preds = %4, %422
  %425 = phi i1 [ %423, %422 ], [ true, %4 ]
  ret i1 %425
}

declare void @_ZNK11CFX_DIBBase5CloneEPK7FX_RECT(%"class.fxcrt::RetainPtr"* sret, %class.CFX_DIBBase*, %struct.FX_RECT*) local_unnamed_addr #6

declare zeroext i1 @_ZN12CFX_DIBitmap15CompositeBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap*, i32, i32, i32, i32, %"class.fxcrt::RetainPtr.33"* dereferenceable(8), i32, i32, i32, %class.CFX_ClipRgn*, i1 zeroext) local_unnamed_addr #6

declare zeroext i1 @_ZN12CFX_DIBitmap14TransferBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii(%class.CFX_DIBitmap*, i32, i32, i32, i32, %"class.fxcrt::RetainPtr.33"* dereferenceable(8), i32, i32) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6pdfium19CFX_AggDeviceDriver11GetBackDropEv(%"class.fxcrt::RetainPtr"* noalias nocapture sret, %"class.pdfium::CFX_AggDeviceDriver"* nocapture readonly) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %3, align 8
  %5 = ptrtoint %class.CFX_DIBitmap* %4 to i64
  %6 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = icmp eq %class.CFX_DIBitmap* %4, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %4, i64 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %9, align 8
  br label %12

12:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6pdfium19CFX_AggDeviceDriver9SetDIBitsERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEjRK7FX_RECTii9BlendMode(%"class.pdfium::CFX_AggDeviceDriver"* nocapture readonly, %"class.fxcrt::RetainPtr.33"* dereferenceable(8), i32, %struct.FX_RECT* nocapture readonly dereferenceable(16), i32, i32, i32) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %8, align 8
  %10 = bitcast %class.CFX_DIBitmap* %9 to i8* (%class.CFX_DIBitmap*)***
  %11 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %11, i64 2
  %13 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %12, align 8
  %14 = tail call i8* %13(%class.CFX_DIBitmap* %9) #14
  %15 = icmp eq i8* %14, null
  br i1 %15, label %43, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %17, align 8
  %19 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %18, i64 0, i32 1
  %20 = load i16, i16* %19, align 8
  %21 = and i16 %20, 256
  %22 = icmp eq i16 %21, 0
  %23 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %8, align 8
  %24 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sub nsw i32 %25, %27
  %29 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %3, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = sub nsw i32 %30, %32
  %34 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %35 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %34, align 8
  %36 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 5
  %37 = load i8, i8* %36, align 2, !range !7
  %38 = icmp ne i8 %37, 0
  br i1 %22, label %41, label %39

39:                                               ; preds = %16
  %40 = tail call zeroext i1 @_ZN12CFX_DIBitmap13CompositeMaskEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEjii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap* %23, i32 %4, i32 %5, i32 %28, i32 %33, %"class.fxcrt::RetainPtr.33"* dereferenceable(8) %1, i32 %2, i32 %27, i32 %32, i32 %6, %class.CFX_ClipRgn* %35, i1 zeroext %38) #14
  br label %43

41:                                               ; preds = %16
  %42 = tail call zeroext i1 @_ZN12CFX_DIBitmap15CompositeBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap* %23, i32 %4, i32 %5, i32 %28, i32 %33, %"class.fxcrt::RetainPtr.33"* dereferenceable(8) %1, i32 %27, i32 %32, i32 %6, %class.CFX_ClipRgn* %35, i1 zeroext %38) #14
  br label %43

43:                                               ; preds = %7, %41, %39
  %44 = phi i1 [ %40, %39 ], [ %42, %41 ], [ true, %7 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6pdfium19CFX_AggDeviceDriver13StretchDIBitsERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEjiiiiPK7FX_RECTRK21FXDIB_ResampleOptions9BlendMode(%"class.pdfium::CFX_AggDeviceDriver"*, %"class.fxcrt::RetainPtr.33"* dereferenceable(8), i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions* dereferenceable(4), i32) unnamed_addr #0 align 2 {
  %11 = alloca %struct.FX_RECT, align 8
  %12 = alloca <4 x i32>, align 16
  %13 = bitcast <4 x i32>* %12 to %struct.FX_RECT*
  %14 = alloca %class.CFX_BitmapComposer, align 8
  %15 = alloca %class.CFX_ImageStretcher, align 8
  %16 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %17, align 8
  %19 = bitcast %class.CFX_DIBitmap* %18 to i8* (%class.CFX_DIBitmap*)***
  %20 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %19, align 8
  %21 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %20, i64 2
  %22 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %21, align 8
  %23 = tail call i8* %22(%class.CFX_DIBitmap* %18) #14
  %24 = icmp eq i8* %23, null
  br i1 %24, label %86, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %26, align 8
  %28 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %27, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %5
  br i1 %30, label %31, label %60

31:                                               ; preds = %25
  %32 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %27, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, %6
  br i1 %34, label %35, label %60

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %37 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %36, align 8
  %38 = bitcast %class.CFX_DIBitmap* %37 to i8* (%class.CFX_DIBitmap*)***
  %39 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %38, align 8
  %40 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %39, i64 2
  %41 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %40, align 8
  %42 = tail call i8* %41(%class.CFX_DIBitmap* %37) #14
  %43 = icmp eq i8* %42, null
  br i1 %43, label %86, label %44

44:                                               ; preds = %35
  %45 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %26, align 8
  %46 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %45, i64 0, i32 1
  %47 = load i16, i16* %46, align 8
  %48 = and i16 %47, 256
  %49 = icmp eq i16 %48, 0
  %50 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %36, align 8
  %51 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %52 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %51, align 8
  %53 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 5
  %54 = load i8, i8* %53, align 2, !range !7
  %55 = icmp ne i8 %54, 0
  br i1 %49, label %58, label %56

56:                                               ; preds = %44
  %57 = tail call zeroext i1 @_ZN12CFX_DIBitmap13CompositeMaskEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEjii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap* %50, i32 %3, i32 %4, i32 %5, i32 %6, %"class.fxcrt::RetainPtr.33"* dereferenceable(8) %1, i32 %2, i32 0, i32 0, i32 %9, %class.CFX_ClipRgn* %52, i1 zeroext %55) #14
  br label %86

58:                                               ; preds = %44
  %59 = tail call zeroext i1 @_ZN12CFX_DIBitmap15CompositeBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap* %50, i32 %3, i32 %4, i32 %5, i32 %6, %"class.fxcrt::RetainPtr.33"* dereferenceable(8) %1, i32 0, i32 0, i32 %9, %class.CFX_ClipRgn* %52, i1 zeroext %55) #14
  br label %86

60:                                               ; preds = %31, %25
  %61 = bitcast %struct.FX_RECT* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #14
  %62 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 0
  %63 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 1
  %64 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 2
  %65 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 3
  %66 = add nsw i32 %5, %3
  %67 = add nsw i32 %6, %4
  store i32 %3, i32* %62, align 8
  store i32 %4, i32* %63, align 4
  store i32 %66, i32* %64, align 8
  store i32 %67, i32* %65, align 4
  call void @_ZN7FX_RECT9NormalizeEv(%struct.FX_RECT* nonnull %11) #14
  %68 = bitcast <4 x i32>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %68, i8* nonnull align 8 %61, i64 16, i1 false)
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %13, %struct.FX_RECT* dereferenceable(16) %7) #14
  %69 = bitcast %class.CFX_BitmapComposer* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %69) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 224, i1 false)
  call void @_ZN18CFX_BitmapComposerC1Ev(%class.CFX_BitmapComposer* nonnull %14) #14
  %70 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %71 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %70, align 8
  %72 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 5
  %73 = load i8, i8* %72, align 2, !range !7
  %74 = icmp ne i8 %73, 0
  call void @_ZN18CFX_BitmapComposer7ComposeERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEPK11CFX_ClipRgnijRK7FX_RECTbbbb9BlendMode(%class.CFX_BitmapComposer* nonnull %14, %"class.fxcrt::RetainPtr"* dereferenceable(8) %16, %class.CFX_ClipRgn* %71, i32 255, i32 %2, %struct.FX_RECT* nonnull dereferenceable(16) %13, i1 zeroext false, i1 zeroext false, i1 zeroext false, i1 zeroext %74, i32 %9) #14
  %75 = bitcast %struct.FX_RECT* %11 to <2 x i32>*
  %76 = load <2 x i32>, <2 x i32>* %75, align 8
  %77 = shufflevector <2 x i32> %76, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %78 = load <4 x i32>, <4 x i32>* %12, align 16
  %79 = sub <4 x i32> %78, %77
  store <4 x i32> %79, <4 x i32>* %12, align 16
  %80 = bitcast %class.CFX_ImageStretcher* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %80) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 56, i1 false)
  %81 = getelementptr inbounds %class.CFX_BitmapComposer, %class.CFX_BitmapComposer* %14, i64 0, i32 0
  call void @_ZN18CFX_ImageStretcherC1EP21ScanlineComposerIfaceRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiRK7FX_RECTRK21FXDIB_ResampleOptions(%class.CFX_ImageStretcher* nonnull %15, %class.ScanlineComposerIface* nonnull %81, %"class.fxcrt::RetainPtr.33"* dereferenceable(8) %1, i32 %5, i32 %6, %struct.FX_RECT* nonnull dereferenceable(16) %13, %struct.FXDIB_ResampleOptions* dereferenceable(4) %8) #14
  %82 = call zeroext i1 @_ZN18CFX_ImageStretcher5StartEv(%class.CFX_ImageStretcher* nonnull %15) #14
  br i1 %82, label %83, label %85

83:                                               ; preds = %60
  %84 = call zeroext i1 @_ZN18CFX_ImageStretcher8ContinueEP19PauseIndicatorIface(%class.CFX_ImageStretcher* nonnull %15, %class.PauseIndicatorIface* null) #14
  br label %85

85:                                               ; preds = %83, %60
  call void @_ZN18CFX_ImageStretcherD1Ev(%class.CFX_ImageStretcher* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %80) #14
  call void @_ZN18CFX_BitmapComposerD1Ev(%class.CFX_BitmapComposer* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %69) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #14
  br label %86

86:                                               ; preds = %58, %56, %35, %10, %85
  %87 = phi i1 [ true, %85 ], [ true, %10 ], [ %57, %56 ], [ %59, %58 ], [ true, %35 ]
  ret i1 %87
}

declare void @_ZN7FX_RECT9NormalizeEv(%struct.FX_RECT*) local_unnamed_addr #6

declare void @_ZN18CFX_BitmapComposerC1Ev(%class.CFX_BitmapComposer*) unnamed_addr #6

declare void @_ZN18CFX_BitmapComposer7ComposeERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEPK11CFX_ClipRgnijRK7FX_RECTbbbb9BlendMode(%class.CFX_BitmapComposer*, %"class.fxcrt::RetainPtr"* dereferenceable(8), %class.CFX_ClipRgn*, i32, i32, %struct.FX_RECT* dereferenceable(16), i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i32) local_unnamed_addr #6

declare void @_ZN18CFX_ImageStretcherC1EP21ScanlineComposerIfaceRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiRK7FX_RECTRK21FXDIB_ResampleOptions(%class.CFX_ImageStretcher*, %class.ScanlineComposerIface*, %"class.fxcrt::RetainPtr.33"* dereferenceable(8), i32, i32, %struct.FX_RECT* dereferenceable(16), %struct.FXDIB_ResampleOptions* dereferenceable(4)) unnamed_addr #6

declare zeroext i1 @_ZN18CFX_ImageStretcher5StartEv(%class.CFX_ImageStretcher*) local_unnamed_addr #6

declare zeroext i1 @_ZN18CFX_ImageStretcher8ContinueEP19PauseIndicatorIface(%class.CFX_ImageStretcher*, %class.PauseIndicatorIface*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN18CFX_ImageStretcherD1Ev(%class.CFX_ImageStretcher*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18CFX_BitmapComposerD1Ev(%class.CFX_BitmapComposer*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6pdfium19CFX_AggDeviceDriver11StartDIBitsERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEijRK10CFX_MatrixRK21FXDIB_ResampleOptionsPNSt3__110unique_ptrI17CFX_ImageRendererNSD_14default_deleteISF_EEEE9BlendMode(%"class.pdfium::CFX_AggDeviceDriver"*, %"class.fxcrt::RetainPtr.33"* dereferenceable(8), i32, i32, %class.CFX_Matrix* dereferenceable(24), %struct.FXDIB_ResampleOptions* dereferenceable(4), %"class.std::__1::unique_ptr.54"* nocapture, i32) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %10, align 8
  %12 = bitcast %class.CFX_DIBitmap* %11 to i8* (%class.CFX_DIBitmap*)***
  %13 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %12, align 8
  %14 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %13, i64 2
  %15 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %14, align 8
  %16 = tail call i8* %15(%class.CFX_DIBitmap* %11) #14
  %17 = icmp eq i8* %16, null
  br i1 %17, label %33, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %20 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %19, align 8
  %21 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 5
  %22 = tail call i8* @_Znwm(i64 312) #15
  %23 = bitcast i8* %22 to %class.CFX_ImageRenderer*
  %24 = load i8, i8* %21, align 1, !range !7
  %25 = icmp ne i8 %24, 0
  tail call void @_ZN17CFX_ImageRendererC1ERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEPK11CFX_ClipRgnRKNS1_I11CFX_DIBBaseEEijRK10CFX_MatrixRK21FXDIB_ResampleOptionsb(%class.CFX_ImageRenderer* nonnull %23, %"class.fxcrt::RetainPtr"* dereferenceable(8) %9, %class.CFX_ClipRgn* %20, %"class.fxcrt::RetainPtr.33"* dereferenceable(8) %1, i32 %2, i32 %3, %class.CFX_Matrix* dereferenceable(24) %4, %struct.FXDIB_ResampleOptions* dereferenceable(4) %5, i1 zeroext %25) #14
  %26 = ptrtoint i8* %22 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %6, i64 0, i32 0, i32 0, i32 0
  %28 = load %class.CFX_ImageRenderer*, %class.CFX_ImageRenderer** %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.54"* %6 to i64*
  store i64 %26, i64* %29, align 8
  %30 = icmp eq %class.CFX_ImageRenderer* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %18
  tail call void @_ZN17CFX_ImageRendererD1Ev(%class.CFX_ImageRenderer* nonnull %28) #14
  %32 = bitcast %class.CFX_ImageRenderer* %28 to i8*
  tail call void @_ZdlPv(i8* %32) #15
  br label %33

33:                                               ; preds = %18, %31, %8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6pdfium19CFX_AggDeviceDriver14ContinueDIBitsEP17CFX_ImageRendererP19PauseIndicatorIface(%"class.pdfium::CFX_AggDeviceDriver"* nocapture readonly, %class.CFX_ImageRenderer*, %class.PauseIndicatorIface*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.pdfium::CFX_AggDeviceDriver", %"class.pdfium::CFX_AggDeviceDriver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %4, align 8
  %6 = bitcast %class.CFX_DIBitmap* %5 to i8* (%class.CFX_DIBitmap*)***
  %7 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %6, align 8
  %8 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %7, i64 2
  %9 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %8, align 8
  %10 = tail call i8* %9(%class.CFX_DIBitmap* %5) #14
  %11 = icmp eq i8* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call zeroext i1 @_ZN17CFX_ImageRenderer8ContinueEP19PauseIndicatorIface(%class.CFX_ImageRenderer* %1, %class.PauseIndicatorIface* %2) #14
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i1 [ true, %3 ], [ %13, %12 ]
  ret i1 %15
}

declare zeroext i1 @_ZN17CFX_ImageRenderer8ContinueEP19PauseIndicatorIface(%class.CFX_ImageRenderer*, %class.PauseIndicatorIface*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CFX_DefaultRenderDeviceC2Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %0, i64 0, i32 0
  tail call void @_ZN16CFX_RenderDeviceC2Ev(%class.CFX_RenderDevice* %2) #14
  %3 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV23CFX_DefaultRenderDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN16CFX_RenderDeviceC2Ev(%class.CFX_RenderDevice*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN16CFX_RenderDeviceD2Ev(%class.CFX_RenderDevice*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CFX_DefaultRenderDeviceD2Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %0, i64 0, i32 0
  tail call void @_ZN16CFX_RenderDeviceD2Ev(%class.CFX_RenderDevice* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CFX_DefaultRenderDeviceD0Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %0, i64 0, i32 0
  tail call void @_ZN16CFX_RenderDeviceD2Ev(%class.CFX_RenderDevice* %2) #14
  %3 = bitcast %class.CFX_DefaultRenderDevice* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN23CFX_DefaultRenderDevice6AttachERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS5_b(%class.CFX_DefaultRenderDevice*, %"class.fxcrt::RetainPtr"* dereferenceable(8), i1 zeroext, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = zext i1 %2 to i8
  %7 = zext i1 %4 to i8
  %8 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %8, align 8
  %10 = icmp eq %class.CFX_DIBitmap* %9, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %0, i64 0, i32 0
  tail call void @_ZN16CFX_RenderDevice9SetBitmapERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_RenderDevice* %12, %"class.fxcrt::RetainPtr"* dereferenceable(8) %1) #14
  %13 = tail call i8* @_Znwm(i64 64) #15
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6pdfium19CFX_AggDeviceDriverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %8, align 8
  %17 = ptrtoint %class.CFX_DIBitmap* %16 to i64
  %18 = bitcast i8* %15 to i64*
  store i64 %17, i64* %18, align 8
  %19 = icmp eq %class.CFX_DIBitmap* %16, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %16, i64 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add nsw i64 %22, 1
  store i64 %23, i64* %21, align 8
  br label %24

24:                                               ; preds = %20, %11
  %25 = getelementptr inbounds i8, i8* %13, i64 16
  %26 = getelementptr inbounds i8, i8* %13, i64 50
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 34, i1 false) #14
  store i8 %6, i8* %26, align 2
  %27 = getelementptr inbounds i8, i8* %13, i64 51
  store i8 %7, i8* %27, align 1
  %28 = getelementptr inbounds i8, i8* %13, i64 56
  %29 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %29, align 8
  %31 = ptrtoint %class.CFX_DIBitmap* %30 to i64
  %32 = bitcast i8* %28 to i64*
  store i64 %31, i64* %32, align 8
  %33 = icmp eq %class.CFX_DIBitmap* %30, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %30, i64 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = add nsw i64 %36, 1
  store i64 %37, i64* %35, align 8
  br label %38

38:                                               ; preds = %34, %24
  %39 = bitcast i8* %13 to %class.RenderDeviceDriverIface*
  tail call void @_ZN16CFX_RenderDevice15SetDeviceDriverENSt3__110unique_ptrI23RenderDeviceDriverIfaceNS0_14default_deleteIS2_EEEE(%class.CFX_RenderDevice* %12, %class.RenderDeviceDriverIface* nonnull %39) #14
  br label %40

40:                                               ; preds = %5, %38
  %41 = phi i1 [ true, %38 ], [ false, %5 ]
  ret i1 %41
}

declare void @_ZN16CFX_RenderDevice9SetBitmapERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr"* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZN16CFX_RenderDevice15SetDeviceDriverENSt3__110unique_ptrI23RenderDeviceDriverIfaceNS0_14default_deleteIS2_EEEE(%class.CFX_RenderDevice*, %class.RenderDeviceDriverIface*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN23CFX_DefaultRenderDevice6CreateEii12FXDIB_FormatRKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_DefaultRenderDevice*, i32, i32, i16 zeroext, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.fxcrt::RetainPtr", align 8
  %7 = bitcast %"class.fxcrt::RetainPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 80) #15, !noalias !38
  %10 = bitcast i8* %9 to %class.CFX_DIBitmap*
  tail call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %10) #14, !noalias !38
  %11 = ptrtoint i8* %9 to i64
  %12 = bitcast %"class.fxcrt::RetainPtr"* %6 to i64*
  store i64 %11, i64* %12, align 8, !alias.scope !38
  %13 = getelementptr inbounds i8, i8* %9, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !38
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %14, align 8, !noalias !38
  %17 = tail call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %10, i32 %1, i32 %2, i16 zeroext %3) #14
  br i1 %17, label %20, label %18

18:                                               ; preds = %5
  %19 = bitcast i8* %9 to %class.CFX_DIBitmap*
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %8, align 8
  br label %49

20:                                               ; preds = %5
  %21 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %0, i64 0, i32 0
  call void @_ZN16CFX_RenderDevice9SetBitmapERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_RenderDevice* %21, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %6) #14
  %22 = call i8* @_Znwm(i64 64) #15
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6pdfium19CFX_AggDeviceDriverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %8, align 8
  %26 = ptrtoint %class.CFX_DIBitmap* %25 to i64
  %27 = bitcast i8* %24 to i64*
  store i64 %26, i64* %27, align 8
  %28 = icmp eq %class.CFX_DIBitmap* %25, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %25, i64 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, 1
  store i64 %32, i64* %30, align 8
  br label %33

33:                                               ; preds = %29, %20
  %34 = getelementptr inbounds i8, i8* %22, i64 16
  %35 = getelementptr inbounds i8, i8* %22, i64 56
  %36 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 36, i1 false)
  %37 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %36, align 8
  %38 = ptrtoint %class.CFX_DIBitmap* %37 to i64
  %39 = bitcast i8* %35 to i64*
  store i64 %38, i64* %39, align 8
  %40 = icmp eq %class.CFX_DIBitmap* %37, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %37, i64 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, 1
  store i64 %44, i64* %42, align 8
  br label %45

45:                                               ; preds = %33, %41
  %46 = bitcast i8* %22 to %class.RenderDeviceDriverIface*
  call void @_ZN16CFX_RenderDevice15SetDeviceDriverENSt3__110unique_ptrI23RenderDeviceDriverIfaceNS0_14default_deleteIS2_EEEE(%class.CFX_RenderDevice* %21, %class.RenderDeviceDriverIface* nonnull %46) #14
  %47 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %8, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %8, align 8
  %48 = icmp eq %class.CFX_DIBitmap* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %18, %45
  %50 = phi i1 [ false, %18 ], [ true, %45 ]
  %51 = phi %class.CFX_DIBitmap* [ %19, %18 ], [ %47, %45 ]
  %52 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %51, i64 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = add nsw i64 %53, -1
  store i64 %54, i64* %52, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %49
  %57 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %51, i64 0, i32 0, i32 0
  %58 = bitcast %class.CFX_DIBitmap* %51 to void (%"class.fxcrt::Retainable"*)***
  %59 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %59, i64 1
  %61 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %60, align 8
  call void %61(%"class.fxcrt::Retainable"* nonnull %57) #14
  br label %62

62:                                               ; preds = %45, %49, %56
  %63 = phi i1 [ true, %45 ], [ %50, %49 ], [ %50, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  ret i1 %63
}

declare void @_ZN23RenderDeviceDriverIface11SetBaseClipERK7FX_RECT(%class.RenderDeviceDriverIface*, %struct.FX_RECT* dereferenceable(16)) unnamed_addr #6

declare zeroext i1 @_ZN23RenderDeviceDriverIface16DrawCosmeticLineERK13CFX_PTemplateIfES3_j9BlendMode(%class.RenderDeviceDriverIface*, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_PTemplate* dereferenceable(8), i32, i32) unnamed_addr #6

declare zeroext i1 @_ZN23RenderDeviceDriverIface11DrawShadingEPK19CPDF_ShadingPatternPK10CFX_MatrixRK7FX_RECTib(%class.RenderDeviceDriverIface*, %class.CPDF_ShadingPattern*, %class.CFX_Matrix*, %struct.FX_RECT* dereferenceable(16), i32, i1 zeroext) unnamed_addr #6

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #6

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #6

declare void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* sret, %class.CFX_Matrix*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZN6pdfium3agg12path_storage14allocate_blockEj(%"class.pdfium::agg::path_storage"*, i32) local_unnamed_addr #6

declare void @_ZN6pdfium3agg10curve4_div4initEffffffff(%"class.pdfium::agg::curve4_div"*, float, float, float, float, float, float, float, float) local_unnamed_addr #6

declare void @_ZN6pdfium3agg10outline_aaC1Ev(%"class.pdfium::agg::outline_aa"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6pdfium3agg10outline_aaD1Ev(%"class.pdfium::agg::outline_aa"*) unnamed_addr #2

declare float @_ZNK10CFX_Matrix8GetXUnitEv(%class.CFX_Matrix*) local_unnamed_addr #6

declare float @_ZNK10CFX_Matrix8GetYUnitEv(%class.CFX_Matrix*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6pdfium3agg22rasterizer_scanline_aa20add_path_transformedINS0_11conv_strokeINS0_9conv_dashINS0_12path_storageENS0_12null_markersEEES6_EEEEvRT_PK10CFX_Matrixj(%"class.pdfium::agg::rasterizer_scanline_aa"*, %"struct.pdfium::agg::conv_stroke"* dereferenceable(144), %class.CFX_Matrix*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca %class.CFX_PTemplate, align 4
  %8 = alloca %class.CFX_PTemplate, align 4
  %9 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #14
  store float 0xFFFFFFFFE0000000, float* %5, align 4
  %10 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #14
  store float 0xFFFFFFFFE0000000, float* %6, align 4
  %11 = bitcast %"struct.pdfium::agg::conv_stroke"* %1 to %"class.pdfium::agg::conv_adaptor_vcgen.89"*
  %12 = bitcast %"struct.pdfium::agg::conv_stroke"* %1 to %"class.pdfium::agg::conv_adaptor_vcgen"**
  %13 = load %"class.pdfium::agg::conv_adaptor_vcgen"*, %"class.pdfium::agg::conv_adaptor_vcgen"** %12, align 8
  %14 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen", %"class.pdfium::agg::conv_adaptor_vcgen"* %13, i64 0, i32 0
  %15 = load %"class.pdfium::agg::path_storage"*, %"class.pdfium::agg::path_storage"** %14, align 8
  tail call void @_ZN6pdfium3agg12path_storage6rewindEj(%"class.pdfium::agg::path_storage"* %15, i32 %3) #14
  %16 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen", %"class.pdfium::agg::conv_adaptor_vcgen"* %13, i64 0, i32 4
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke", %"struct.pdfium::agg::conv_stroke"* %1, i64 0, i32 0, i32 4
  store i32 0, i32* %17, align 4
  %18 = call i32 @_ZN6pdfium3agg18conv_adaptor_vcgenINS0_9conv_dashINS0_12path_storageENS0_12null_markersEEENS0_12vcgen_strokeES4_E6vertexEPfS8_(%"class.pdfium::agg::conv_adaptor_vcgen.89"* %11, float* nonnull %5, float* nonnull %6)
  %19 = and i32 %18, -129
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %52, label %21

21:                                               ; preds = %4
  %22 = icmp eq %class.CFX_Matrix* %2, null
  %23 = bitcast %class.CFX_PTemplate* %7 to i8*
  %24 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 0
  %25 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 1
  %26 = bitcast %class.CFX_PTemplate* %8 to i8*
  %27 = bitcast float* %5 to i32*
  %28 = bitcast float* %6 to i32*
  %29 = bitcast %class.CFX_PTemplate* %8 to i32*
  %30 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 1
  %31 = bitcast float* %30 to i32*
  %32 = bitcast %class.CFX_PTemplate* %7 to i32*
  %33 = bitcast float* %25 to i32*
  br label %34

34:                                               ; preds = %21, %46
  %35 = phi i32 [ %18, %21 ], [ %49, %46 ]
  br i1 %22, label %36, label %39

36:                                               ; preds = %34
  %37 = load float, float* %5, align 4
  %38 = load float, float* %6, align 4
  br label %46

39:                                               ; preds = %34
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #14
  store float 0xFFFFFFFFE0000000, float* %24, align 4
  store float 0xFFFFFFFFE0000000, float* %25, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #14
  %40 = load i32, i32* %27, align 4
  %41 = load i32, i32* %28, align 4
  store i32 %40, i32* %29, align 4
  store i32 %41, i32* %31, align 4
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %7, %class.CFX_Matrix* nonnull %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #14
  %42 = load i32, i32* %32, align 4
  store i32 %42, i32* %27, align 4
  %43 = load i32, i32* %33, align 4
  store i32 %43, i32* %28, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #14
  %44 = bitcast i32 %42 to float
  %45 = bitcast i32 %43 to float
  br label %46

46:                                               ; preds = %36, %39
  %47 = phi float [ %38, %36 ], [ %45, %39 ]
  %48 = phi float [ %37, %36 ], [ %44, %39 ]
  call void @_ZN6pdfium3agg22rasterizer_scanline_aa10add_vertexEffj(%"class.pdfium::agg::rasterizer_scanline_aa"* %0, float %48, float %47, i32 %35)
  %49 = call i32 @_ZN6pdfium3agg18conv_adaptor_vcgenINS0_9conv_dashINS0_12path_storageENS0_12null_markersEEENS0_12vcgen_strokeES4_E6vertexEPfS8_(%"class.pdfium::agg::conv_adaptor_vcgen.89"* %11, float* nonnull %5, float* nonnull %6)
  %50 = and i32 %49, -129
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %34

52:                                               ; preds = %46, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6pdfium3agg22rasterizer_scanline_aa20add_path_transformedINS0_11conv_strokeINS0_12path_storageENS0_12null_markersEEEEEvRT_PK10CFX_Matrixj(%"class.pdfium::agg::rasterizer_scanline_aa"*, %"struct.pdfium::agg::conv_stroke.95"* dereferenceable(144), %class.CFX_Matrix*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca %class.CFX_PTemplate, align 4
  %8 = alloca %class.CFX_PTemplate, align 4
  %9 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #14
  store float 0xFFFFFFFFE0000000, float* %5, align 4
  %10 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #14
  store float 0xFFFFFFFFE0000000, float* %6, align 4
  %11 = bitcast %"struct.pdfium::agg::conv_stroke.95"* %1 to %"class.pdfium::agg::conv_adaptor_vcgen.96"*
  %12 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke.95", %"struct.pdfium::agg::conv_stroke.95"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.pdfium::agg::path_storage"*, %"class.pdfium::agg::path_storage"** %12, align 8
  tail call void @_ZN6pdfium3agg12path_storage6rewindEj(%"class.pdfium::agg::path_storage"* %13, i32 %3) #14
  %14 = getelementptr inbounds %"struct.pdfium::agg::conv_stroke.95", %"struct.pdfium::agg::conv_stroke.95"* %1, i64 0, i32 0, i32 4
  store i32 0, i32* %14, align 4
  %15 = call i32 @_ZN6pdfium3agg18conv_adaptor_vcgenINS0_12path_storageENS0_12vcgen_strokeENS0_12null_markersEE6vertexEPfS6_(%"class.pdfium::agg::conv_adaptor_vcgen.96"* %11, float* nonnull %5, float* nonnull %6)
  %16 = and i32 %15, -129
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %4
  %19 = icmp eq %class.CFX_Matrix* %2, null
  %20 = bitcast %class.CFX_PTemplate* %7 to i8*
  %21 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 0
  %22 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 1
  %23 = bitcast %class.CFX_PTemplate* %8 to i8*
  %24 = bitcast float* %5 to i32*
  %25 = bitcast float* %6 to i32*
  %26 = bitcast %class.CFX_PTemplate* %8 to i32*
  %27 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 1
  %28 = bitcast float* %27 to i32*
  %29 = bitcast %class.CFX_PTemplate* %7 to i32*
  %30 = bitcast float* %22 to i32*
  br label %31

31:                                               ; preds = %18, %43
  %32 = phi i32 [ %15, %18 ], [ %46, %43 ]
  br i1 %19, label %33, label %36

33:                                               ; preds = %31
  %34 = load float, float* %5, align 4
  %35 = load float, float* %6, align 4
  br label %43

36:                                               ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  store float 0xFFFFFFFFE0000000, float* %21, align 4
  store float 0xFFFFFFFFE0000000, float* %22, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #14
  %37 = load i32, i32* %24, align 4
  %38 = load i32, i32* %25, align 4
  store i32 %37, i32* %26, align 4
  store i32 %38, i32* %28, align 4
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %7, %class.CFX_Matrix* nonnull %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #14
  %39 = load i32, i32* %29, align 4
  store i32 %39, i32* %24, align 4
  %40 = load i32, i32* %30, align 4
  store i32 %40, i32* %25, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  %41 = bitcast i32 %39 to float
  %42 = bitcast i32 %40 to float
  br label %43

43:                                               ; preds = %33, %36
  %44 = phi float [ %35, %33 ], [ %42, %36 ]
  %45 = phi float [ %34, %33 ], [ %41, %36 ]
  call void @_ZN6pdfium3agg22rasterizer_scanline_aa10add_vertexEffj(%"class.pdfium::agg::rasterizer_scanline_aa"* %0, float %45, float %44, i32 %32)
  %46 = call i32 @_ZN6pdfium3agg18conv_adaptor_vcgenINS0_12path_storageENS0_12vcgen_strokeENS0_12null_markersEE6vertexEPfS6_(%"class.pdfium::agg::conv_adaptor_vcgen.96"* %11, float* nonnull %5, float* nonnull %6)
  %47 = and i32 %46, -129
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %31

49:                                               ; preds = %43, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #14
  ret void
}

declare void @_ZN6pdfium3agg10vcgen_dashC1Ev(%"class.pdfium::agg::vcgen_dash"*) unnamed_addr #6

declare void @_ZN6pdfium3agg10vcgen_dash8add_dashEff(%"class.pdfium::agg::vcgen_dash"*, float, float) local_unnamed_addr #6

declare void @_ZN6pdfium3agg10vcgen_dash10dash_startEf(%"class.pdfium::agg::vcgen_dash"*, float) local_unnamed_addr #6

declare void @_ZN6pdfium3agg12vcgen_strokeC1Ev(%"class.pdfium::agg::vcgen_stroke"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6pdfium3agg18conv_adaptor_vcgenINS0_9conv_dashINS0_12path_storageENS0_12null_markersEEENS0_12vcgen_strokeES4_E6vertexEPfS8_(%"class.pdfium::agg::conv_adaptor_vcgen.89"*, float*, float*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen.89", %"class.pdfium::agg::conv_adaptor_vcgen.89"* %0, i64 0, i32 4
  %5 = bitcast %"class.pdfium::agg::conv_adaptor_vcgen.89"* %0 to %"class.pdfium::agg::conv_adaptor_vcgen"**
  %6 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen.89", %"class.pdfium::agg::conv_adaptor_vcgen.89"* %0, i64 0, i32 6
  %7 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen.89", %"class.pdfium::agg::conv_adaptor_vcgen.89"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen.89", %"class.pdfium::agg::conv_adaptor_vcgen.89"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen.89", %"class.pdfium::agg::conv_adaptor_vcgen.89"* %0, i64 0, i32 1
  %10 = bitcast float* %1 to i32*
  %11 = bitcast float* %6 to i32*
  %12 = bitcast float* %2 to i32*
  %13 = bitcast float* %7 to i32*
  br label %14

14:                                               ; preds = %16, %3
  %15 = load i32, i32* %4, align 4
  switch i32 %15, label %16 [
    i32 0, label %19
    i32 1, label %17
    i32 2, label %54
  ]

16:                                               ; preds = %14, %58
  br label %14

17:                                               ; preds = %14
  %18 = load i32, i32* %8, align 8
  br label %22

19:                                               ; preds = %14
  %20 = load %"class.pdfium::agg::conv_adaptor_vcgen"*, %"class.pdfium::agg::conv_adaptor_vcgen"** %5, align 8
  %21 = tail call i32 @_ZN6pdfium3agg18conv_adaptor_vcgenINS0_12path_storageENS0_10vcgen_dashENS0_12null_markersEE6vertexEPfS6_(%"class.pdfium::agg::conv_adaptor_vcgen"* %20, float* %6, float* %7)
  store i32 %21, i32* %8, align 8
  store i32 1, i32* %4, align 4
  br label %22

22:                                               ; preds = %17, %19
  %23 = phi i32 [ %18, %17 ], [ %21, %19 ]
  %24 = and i32 %23, -129
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %59, label %26

26:                                               ; preds = %22
  tail call void @_ZN6pdfium3agg12vcgen_stroke10remove_allEv(%"class.pdfium::agg::vcgen_stroke"* %9) #14
  %27 = load float, float* %6, align 4
  %28 = load float, float* %7, align 8
  tail call void @_ZN6pdfium3agg12vcgen_stroke10add_vertexEffj(%"class.pdfium::agg::vcgen_stroke"* %9, float %27, float %28, i32 1) #14
  br label %29

29:                                               ; preds = %49, %26
  %30 = load %"class.pdfium::agg::conv_adaptor_vcgen"*, %"class.pdfium::agg::conv_adaptor_vcgen"** %5, align 8
  %31 = tail call i32 @_ZN6pdfium3agg18conv_adaptor_vcgenINS0_12path_storageENS0_10vcgen_dashENS0_12null_markersEE6vertexEPfS6_(%"class.pdfium::agg::conv_adaptor_vcgen"* %30, float* %1, float* %2)
  %32 = and i32 %31, -129
  %33 = add i32 %32, -1
  %34 = icmp ult i32 %33, 14
  br i1 %34, label %35, label %43

35:                                               ; preds = %29
  store i32 %31, i32* %8, align 8
  %36 = icmp eq i32 %32, 1
  br i1 %36, label %37, label %40

37:                                               ; preds = %35
  %38 = load i32, i32* %10, align 4
  store i32 %38, i32* %11, align 4
  %39 = load i32, i32* %12, align 4
  store i32 %39, i32* %13, align 8
  br label %53

40:                                               ; preds = %35
  %41 = load float, float* %1, align 4
  %42 = load float, float* %2, align 4
  tail call void @_ZN6pdfium3agg12vcgen_stroke10add_vertexEffj(%"class.pdfium::agg::vcgen_stroke"* %9, float %41, float %42, i32 %31) #14
  br label %49

43:                                               ; preds = %29
  %44 = icmp eq i32 %32, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  store i32 0, i32* %8, align 8
  br label %53

46:                                               ; preds = %43
  %47 = and i32 %31, 15
  %48 = icmp eq i32 %47, 15
  br i1 %48, label %50, label %49

49:                                               ; preds = %46, %40
  br label %29

50:                                               ; preds = %46
  %51 = load float, float* %1, align 4
  %52 = load float, float* %2, align 4
  tail call void @_ZN6pdfium3agg12vcgen_stroke10add_vertexEffj(%"class.pdfium::agg::vcgen_stroke"* %9, float %51, float %52, i32 %31) #14
  br label %53

53:                                               ; preds = %50, %45, %37
  tail call void @_ZN6pdfium3agg12vcgen_stroke6rewindEj(%"class.pdfium::agg::vcgen_stroke"* %9, i32 0) #14
  store i32 2, i32* %4, align 4
  br label %54

54:                                               ; preds = %14, %53
  %55 = tail call i32 @_ZN6pdfium3agg12vcgen_stroke6vertexEPfS2_(%"class.pdfium::agg::vcgen_stroke"* %9, float* %1, float* %2) #14
  %56 = and i32 %55, -129
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %54
  store i32 1, i32* %4, align 4
  br label %16

59:                                               ; preds = %54, %22
  %60 = phi i32 [ 0, %22 ], [ %55, %54 ]
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6pdfium3agg22rasterizer_scanline_aa10add_vertexEffj(%"class.pdfium::agg::rasterizer_scanline_aa"*, float, float, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = and i32 %3, -177
  %6 = icmp eq i32 %5, 79
  br i1 %6, label %7, label %28

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 9
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %54

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 11
  %13 = load i8, i8* %12, align 4, !range !7
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 5
  %19 = load i32, i32* %18, align 8
  tail call void @_ZN6pdfium3agg22rasterizer_scanline_aa12clip_segmentEii(%"class.pdfium::agg::rasterizer_scanline_aa"* %0, i32 %17, i32 %19) #14
  %20 = load i32, i32* %8, align 8
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %54

22:                                               ; preds = %15, %11
  %23 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 0
  %24 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 8
  tail call void @_ZN6pdfium3agg10outline_aa7line_toEii(%"class.pdfium::agg::outline_aa"* %23, i32 %25, i32 %27) #14
  store i32 2, i32* %8, align 8
  br label %54

28:                                               ; preds = %4
  %29 = and i32 %3, -129
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = fmul float %1, 2.560000e+02
  %33 = fptosi float %32 to i32
  %34 = fmul float %2, 2.560000e+02
  %35 = fptosi float %34 to i32
  tail call void @_ZN6pdfium3agg22rasterizer_scanline_aa7move_toEii(%"class.pdfium::agg::rasterizer_scanline_aa"* %0, i32 %33, i32 %35)
  br label %54

36:                                               ; preds = %28
  %37 = add i32 %29, -1
  %38 = icmp ult i32 %37, 14
  br i1 %38, label %39, label %54

39:                                               ; preds = %36
  %40 = fmul float %1, 2.560000e+02
  %41 = fptosi float %40 to i32
  %42 = fmul float %2, 2.560000e+02
  %43 = fptosi float %42 to i32
  %44 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 11
  %45 = load i8, i8* %44, align 4, !range !7
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %39
  tail call void @_ZN6pdfium3agg22rasterizer_scanline_aa12clip_segmentEii(%"class.pdfium::agg::rasterizer_scanline_aa"* %0, i32 %41, i32 %43) #14
  br label %54

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 9
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 0
  tail call void @_ZN6pdfium3agg10outline_aa7line_toEii(%"class.pdfium::agg::outline_aa"* %53, i32 %41, i32 %43) #14
  store i32 1, i32* %49, align 8
  br label %54

54:                                               ; preds = %52, %48, %47, %22, %15, %7, %31, %36
  ret void
}

declare void @_ZN6pdfium3agg12path_storage6rewindEj(%"class.pdfium::agg::path_storage"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6pdfium3agg18conv_adaptor_vcgenINS0_12path_storageENS0_10vcgen_dashENS0_12null_markersEE6vertexEPfS6_(%"class.pdfium::agg::conv_adaptor_vcgen"*, float*, float*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen", %"class.pdfium::agg::conv_adaptor_vcgen"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen", %"class.pdfium::agg::conv_adaptor_vcgen"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen", %"class.pdfium::agg::conv_adaptor_vcgen"* %0, i64 0, i32 7
  %7 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen", %"class.pdfium::agg::conv_adaptor_vcgen"* %0, i64 0, i32 6
  %8 = bitcast float* %7 to i32*
  %9 = bitcast float* %6 to i32*
  %10 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen", %"class.pdfium::agg::conv_adaptor_vcgen"* %0, i64 0, i32 5
  %11 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen", %"class.pdfium::agg::conv_adaptor_vcgen"* %0, i64 0, i32 1
  %12 = bitcast float* %1 to i32*
  %13 = bitcast float* %2 to i32*
  br label %14

14:                                               ; preds = %16, %3
  %15 = load i32, i32* %4, align 4
  switch i32 %15, label %16 [
    i32 0, label %19
    i32 1, label %17
    i32 2, label %123
  ]

16:                                               ; preds = %14, %127
  br label %14

17:                                               ; preds = %14
  %18 = load i32, i32* %10, align 8
  br label %53

19:                                               ; preds = %14
  %20 = load %"class.pdfium::agg::path_storage"*, %"class.pdfium::agg::path_storage"** %5, align 8
  %21 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %20, i64 0, i32 6
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %20, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp ult i32 %22, %24
  br i1 %25, label %26, label %51

26:                                               ; preds = %19
  %27 = add nuw i32 %22, 1
  store i32 %27, i32* %21, align 8
  %28 = lshr i32 %22, 8
  %29 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %20, i64 0, i32 4
  %30 = load float**, float*** %29, align 8
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds float*, float** %30, i64 %31
  %33 = load float*, float** %32, align 8
  %34 = and i32 %22, 255
  %35 = shl nuw nsw i32 %34, 1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds float, float* %33, i64 %36
  %38 = getelementptr inbounds float, float* %37, i64 1
  %39 = bitcast float* %37 to i32*
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %8, align 4
  %41 = bitcast float* %38 to i32*
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %9, align 4
  %43 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %20, i64 0, i32 5
  %44 = load i8**, i8*** %43, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 %31
  %46 = load i8*, i8** %45, align 8
  %47 = zext i32 %34 to i64
  %48 = getelementptr inbounds i8, i8* %46, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  br label %51

51:                                               ; preds = %19, %26
  %52 = phi i32 [ %50, %26 ], [ 0, %19 ]
  store i32 %52, i32* %10, align 8
  store i32 1, i32* %4, align 4
  br label %53

53:                                               ; preds = %17, %51
  %54 = phi i32 [ %18, %17 ], [ %52, %51 ]
  %55 = and i32 %54, -129
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %128, label %57

57:                                               ; preds = %53
  tail call void @_ZN6pdfium3agg10vcgen_dash10remove_allEv(%"class.pdfium::agg::vcgen_dash"* %11) #14
  %58 = load float, float* %7, align 4
  %59 = load float, float* %6, align 8
  tail call void @_ZN6pdfium3agg10vcgen_dash10add_vertexEffj(%"class.pdfium::agg::vcgen_dash"* %11, float %58, float %59, i32 1) #14
  %60 = load %"class.pdfium::agg::path_storage"*, %"class.pdfium::agg::path_storage"** %5, align 8
  %61 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %60, i64 0, i32 6
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %60, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp ult i32 %62, %64
  br i1 %65, label %66, label %107

66:                                               ; preds = %57, %115
  %67 = phi i32 [ %118, %115 ], [ %62, %57 ]
  %68 = phi i32* [ %117, %115 ], [ %61, %57 ]
  %69 = phi %"class.pdfium::agg::path_storage"* [ %116, %115 ], [ %60, %57 ]
  %70 = add nuw i32 %67, 1
  store i32 %70, i32* %68, align 8
  %71 = lshr i32 %67, 8
  %72 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %69, i64 0, i32 4
  %73 = load float**, float*** %72, align 8
  %74 = zext i32 %71 to i64
  %75 = getelementptr inbounds float*, float** %73, i64 %74
  %76 = load float*, float** %75, align 8
  %77 = and i32 %67, 255
  %78 = shl nuw nsw i32 %77, 1
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds float, float* %76, i64 %79
  %81 = getelementptr inbounds float, float* %80, i64 1
  %82 = bitcast float* %80 to i32*
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %12, align 4
  %84 = bitcast float* %81 to i32*
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %13, align 4
  %86 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %69, i64 0, i32 5
  %87 = load i8**, i8*** %86, align 8
  %88 = getelementptr inbounds i8*, i8** %87, i64 %74
  %89 = load i8*, i8** %88, align 8
  %90 = zext i32 %77 to i64
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = and i32 %93, 127
  %95 = add nsw i32 %94, -1
  %96 = icmp ult i32 %95, 14
  br i1 %96, label %97, label %105

97:                                               ; preds = %66
  store i32 %93, i32* %10, align 8
  %98 = icmp eq i32 %94, 1
  br i1 %98, label %99, label %102

99:                                               ; preds = %97
  %100 = load i32, i32* %12, align 4
  store i32 %100, i32* %8, align 4
  %101 = load i32, i32* %13, align 4
  store i32 %101, i32* %9, align 8
  br label %122

102:                                              ; preds = %97
  %103 = load float, float* %1, align 4
  %104 = load float, float* %2, align 4
  tail call void @_ZN6pdfium3agg10vcgen_dash10add_vertexEffj(%"class.pdfium::agg::vcgen_dash"* %11, float %103, float %104, i32 %93) #14
  br label %115

105:                                              ; preds = %66
  %106 = icmp eq i32 %94, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %105, %115, %57
  store i32 0, i32* %10, align 8
  br label %122

108:                                              ; preds = %105
  %109 = and i32 %93, 15
  %110 = icmp eq i32 %109, 15
  br i1 %110, label %111, label %115

111:                                              ; preds = %108
  %112 = zext i8 %92 to i32
  %113 = bitcast i32 %85 to float
  %114 = load float, float* %1, align 4
  tail call void @_ZN6pdfium3agg10vcgen_dash10add_vertexEffj(%"class.pdfium::agg::vcgen_dash"* %11, float %114, float %113, i32 %112) #14
  br label %122

115:                                              ; preds = %108, %102
  %116 = load %"class.pdfium::agg::path_storage"*, %"class.pdfium::agg::path_storage"** %5, align 8
  %117 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %116, i64 0, i32 6
  %118 = load i32, i32* %117, align 8
  %119 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %116, i64 0, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = icmp ult i32 %118, %120
  br i1 %121, label %66, label %107

122:                                              ; preds = %111, %107, %99
  tail call void @_ZN6pdfium3agg10vcgen_dash6rewindEj(%"class.pdfium::agg::vcgen_dash"* %11, i32 0) #14
  store i32 2, i32* %4, align 4
  br label %123

123:                                              ; preds = %14, %122
  %124 = tail call i32 @_ZN6pdfium3agg10vcgen_dash6vertexEPfS2_(%"class.pdfium::agg::vcgen_dash"* %11, float* %1, float* %2) #14
  %125 = and i32 %124, -129
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %123
  store i32 1, i32* %4, align 4
  br label %16

128:                                              ; preds = %123, %53
  %129 = phi i32 [ 0, %53 ], [ %124, %123 ]
  ret i32 %129
}

declare void @_ZN6pdfium3agg12vcgen_stroke10remove_allEv(%"class.pdfium::agg::vcgen_stroke"*) local_unnamed_addr #6

declare void @_ZN6pdfium3agg12vcgen_stroke10add_vertexEffj(%"class.pdfium::agg::vcgen_stroke"*, float, float, i32) local_unnamed_addr #6

declare void @_ZN6pdfium3agg12vcgen_stroke6rewindEj(%"class.pdfium::agg::vcgen_stroke"*, i32) local_unnamed_addr #6

declare i32 @_ZN6pdfium3agg12vcgen_stroke6vertexEPfS2_(%"class.pdfium::agg::vcgen_stroke"*, float*, float*) local_unnamed_addr #6

declare void @_ZN6pdfium3agg10vcgen_dash10remove_allEv(%"class.pdfium::agg::vcgen_dash"*) local_unnamed_addr #6

declare void @_ZN6pdfium3agg10vcgen_dash10add_vertexEffj(%"class.pdfium::agg::vcgen_dash"*, float, float, i32) local_unnamed_addr #6

declare void @_ZN6pdfium3agg10vcgen_dash6rewindEj(%"class.pdfium::agg::vcgen_dash"*, i32) local_unnamed_addr #6

declare i32 @_ZN6pdfium3agg10vcgen_dash6vertexEPfS2_(%"class.pdfium::agg::vcgen_dash"*, float*, float*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6pdfium3agg22rasterizer_scanline_aa7move_toEii(%"class.pdfium::agg::rasterizer_scanline_aa"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 11
  %5 = load i8, i8* %4, align 4, !range !7
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %65, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 0, i32 15
  %10 = load i8, i8* %9, align 8, !range !7
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  tail call void @_ZN6pdfium3agg10outline_aa5resetEv(%"class.pdfium::agg::outline_aa"* %8) #14
  %13 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 9
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 9
  br label %35

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 9
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 1
  %19 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 9
  br i1 %18, label %20, label %35

20:                                               ; preds = %15
  %21 = load i8, i8* %4, align 4, !range !7
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 4
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 5
  %27 = load i32, i32* %26, align 8
  tail call void @_ZN6pdfium3agg22rasterizer_scanline_aa12clip_segmentEii(%"class.pdfium::agg::rasterizer_scanline_aa"* %0, i32 %25, i32 %27) #14
  %28 = load i32, i32* %19, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %35

30:                                               ; preds = %23, %20
  %31 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  tail call void @_ZN6pdfium3agg10outline_aa7line_toEii(%"class.pdfium::agg::outline_aa"* %8, i32 %32, i32 %34) #14
  store i32 2, i32* %19, align 8
  br label %35

35:                                               ; preds = %12, %30, %23, %15
  %36 = phi i32* [ %14, %12 ], [ %19, %30 ], [ %19, %23 ], [ %19, %15 ]
  %37 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 4
  store i32 %1, i32* %37, align 4
  %38 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 6
  store i32 %1, i32* %38, align 4
  %39 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 5
  store i32 %2, i32* %39, align 8
  %40 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 7
  store i32 %2, i32* %40, align 8
  store i32 0, i32* %36, align 8
  %41 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 10, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, %1
  %44 = zext i1 %43 to i32
  %45 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 10, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, %2
  %48 = zext i1 %47 to i32
  %49 = shl nuw nsw i32 %48, 1
  %50 = or i32 %49, %44
  %51 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 10, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, %1
  %54 = zext i1 %53 to i32
  %55 = shl nuw nsw i32 %54, 2
  %56 = or i32 %50, %55
  %57 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 10, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp sgt i32 %58, %2
  %60 = zext i1 %59 to i32
  %61 = shl nuw nsw i32 %60, 3
  %62 = or i32 %56, %61
  %63 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 8
  store i32 %62, i32* %63, align 4
  %64 = icmp eq i32 %62, 0
  br i1 %64, label %77, label %82

65:                                               ; preds = %3
  %66 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 9
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 0
  %71 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 3
  %74 = load i32, i32* %73, align 8
  tail call void @_ZN6pdfium3agg10outline_aa7line_toEii(%"class.pdfium::agg::outline_aa"* %70, i32 %72, i32 %74) #14
  store i32 2, i32* %66, align 8
  br label %75

75:                                               ; preds = %65, %69
  %76 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 0
  br label %77

77:                                               ; preds = %35, %75
  %78 = phi %"class.pdfium::agg::outline_aa"* [ %76, %75 ], [ %8, %35 ]
  %79 = phi i32* [ %66, %75 ], [ %36, %35 ]
  tail call void @_ZN6pdfium3agg10outline_aa7move_toEii(%"class.pdfium::agg::outline_aa"* %78, i32 %1, i32 %2) #14
  %80 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 2
  store i32 %1, i32* %80, align 4
  %81 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 3
  store i32 %2, i32* %81, align 8
  store i32 1, i32* %79, align 8
  br label %82

82:                                               ; preds = %77, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6pdfium3agg22rasterizer_scanline_aa12clip_segmentEii(%"class.pdfium::agg::rasterizer_scanline_aa"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca [4 x i32], align 16
  %5 = alloca [4 x i32], align 16
  %6 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 10
  %7 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 10, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %1
  %10 = zext i1 %9 to i32
  %11 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 10, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, %2
  %14 = zext i1 %13 to i32
  %15 = shl nuw nsw i32 %14, 1
  %16 = or i32 %15, %10
  %17 = getelementptr inbounds %"struct.pdfium::agg::rect_base", %"struct.pdfium::agg::rect_base"* %6, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, %1
  %20 = zext i1 %19 to i32
  %21 = shl nuw nsw i32 %20, 2
  %22 = or i32 %16, %21
  %23 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 10, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, %2
  %26 = zext i1 %25 to i32
  %27 = shl nuw nsw i32 %26, 3
  %28 = or i32 %22, %27
  %29 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 8
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, %28
  br i1 %31, label %32, label %43

32:                                               ; preds = %3
  %33 = icmp eq i32 %28, 0
  br i1 %33, label %34, label %83

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 9
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 0
  br i1 %37, label %39, label %42

39:                                               ; preds = %34
  tail call void @_ZN6pdfium3agg10outline_aa7move_toEii(%"class.pdfium::agg::outline_aa"* %38, i32 %1, i32 %2) #14
  %40 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 2
  store i32 %1, i32* %40, align 4
  %41 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 3
  store i32 %2, i32* %41, align 8
  store i32 1, i32* %35, align 8
  br label %83

42:                                               ; preds = %34
  tail call void @_ZN6pdfium3agg10outline_aa7line_toEii(%"class.pdfium::agg::outline_aa"* %38, i32 %1, i32 %2) #14
  store i32 1, i32* %35, align 8
  br label %83

43:                                               ; preds = %3
  %44 = bitcast [4 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #14
  %45 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 0
  %46 = bitcast [4 x i32]* %5 to i8*
  %47 = bitcast [4 x i32]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %47, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #14
  %48 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 0
  %49 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 6
  %50 = bitcast [4 x i32]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %50, i8 -86, i64 16, i1 false)
  %51 = load i32, i32* %49, align 4
  %52 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 7
  %53 = load i32, i32* %52, align 8
  %54 = call i32 @_ZN6pdfium3agg17clip_liang_barskyIiEEjT_S2_S2_S2_RKNS0_9rect_baseIS2_EEPS2_S7_(i32 %51, i32 %53, i32 %1, i32 %2, %"struct.pdfium::agg::rect_base"* dereferenceable(16) %6, i32* nonnull %45, i32* nonnull %48)
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %82, label %56

56:                                               ; preds = %43
  %57 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 9
  %58 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 0
  %59 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 2
  %60 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 3
  %61 = load i32, i32* %57, align 8
  %62 = icmp eq i32 %61, 0
  %63 = add i32 %54, -1
  %64 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 1
  %65 = load i32, i32* %45, align 16
  %66 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 1
  %67 = load i32, i32* %48, align 16
  br i1 %62, label %69, label %68

68:                                               ; preds = %56
  call void @_ZN6pdfium3agg10outline_aa7line_toEii(%"class.pdfium::agg::outline_aa"* %58, i32 %65, i32 %67) #14
  br label %70

69:                                               ; preds = %56
  call void @_ZN6pdfium3agg10outline_aa7move_toEii(%"class.pdfium::agg::outline_aa"* %58, i32 %65, i32 %67) #14
  store i32 %65, i32* %59, align 4
  store i32 %67, i32* %60, align 8
  br label %70

70:                                               ; preds = %69, %68
  store i32 1, i32* %57, align 8
  %71 = icmp eq i32 %63, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %70, %72
  %73 = phi i32 [ %76, %72 ], [ %63, %70 ]
  %74 = phi i32* [ %78, %72 ], [ %66, %70 ]
  %75 = phi i32* [ %77, %72 ], [ %64, %70 ]
  %76 = add i32 %73, -1
  %77 = getelementptr inbounds i32, i32* %75, i64 1
  %78 = getelementptr inbounds i32, i32* %74, i64 1
  %79 = load i32, i32* %74, align 4
  %80 = load i32, i32* %75, align 4
  call void @_ZN6pdfium3agg10outline_aa7line_toEii(%"class.pdfium::agg::outline_aa"* %58, i32 %80, i32 %79) #14
  store i32 1, i32* %57, align 8
  %81 = icmp eq i32 %76, 0
  br i1 %81, label %82, label %72, !llvm.loop !41

82:                                               ; preds = %70, %72, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #14
  br label %83

83:                                               ; preds = %32, %42, %39, %82
  store i32 %28, i32* %29, align 4
  %84 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 6
  store i32 %1, i32* %84, align 4
  %85 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 7
  store i32 %2, i32* %85, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6pdfium3agg17clip_liang_barskyIiEEjT_S2_S2_S2_RKNS0_9rect_baseIS2_EEPS2_S7_(i32, i32, i32, i32, %"struct.pdfium::agg::rect_base"* dereferenceable(16), i32*, i32*) local_unnamed_addr #8 comdat {
  %8 = sitofp i32 %2 to float
  %9 = tail call i1 @llvm.is.constant.f32(float %8) #14
  %10 = xor i1 %9, true
  %11 = tail call float @llvm.fabs.f32(float %8) #9
  %12 = fcmp ueq float %11, 0x7FF0000000000000
  %13 = and i1 %12, %10
  %14 = sitofp i32 %0 to float
  %15 = fsub float %8, %14
  %16 = select i1 %13, float 0.000000e+00, float %15
  %17 = tail call i1 @llvm.is.constant.f32(float %16) #14
  br i1 %17, label %18, label %22

18:                                               ; preds = %7
  %19 = fcmp ole float %16, 0x47EFFFFFE0000000
  %20 = fcmp oge float %16, 0xC7EFFFFFE0000000
  %21 = and i1 %19, %20
  br i1 %21, label %25, label %166

22:                                               ; preds = %7
  %23 = tail call float @llvm.fabs.f32(float %16) #9
  %24 = fcmp ueq float %23, 0x7FF0000000000000
  br i1 %24, label %166, label %25

25:                                               ; preds = %22, %18
  %26 = sitofp i32 %3 to float
  %27 = tail call i1 @llvm.is.constant.f32(float %26) #14
  %28 = xor i1 %27, true
  %29 = tail call float @llvm.fabs.f32(float %26) #9
  %30 = fcmp ueq float %29, 0x7FF0000000000000
  %31 = and i1 %30, %28
  %32 = sitofp i32 %1 to float
  %33 = fsub float %26, %32
  %34 = select i1 %31, float 0.000000e+00, float %33
  %35 = tail call i1 @llvm.is.constant.f32(float %34) #14
  br i1 %35, label %36, label %40

36:                                               ; preds = %25
  %37 = fcmp ole float %34, 0x47EFFFFFE0000000
  %38 = fcmp oge float %34, 0xC7EFFFFFE0000000
  %39 = and i1 %37, %38
  br i1 %39, label %43, label %166

40:                                               ; preds = %25
  %41 = tail call float @llvm.fabs.f32(float %34) #9
  %42 = fcmp ueq float %41, 0x7FF0000000000000
  br i1 %42, label %166, label %43

43:                                               ; preds = %40, %36
  br i1 %17, label %44, label %48

44:                                               ; preds = %43
  %45 = fcmp ole float %16, 0x47EFFFFFE0000000
  %46 = fcmp oge float %16, 0xC7EFFFFFE0000000
  %47 = and i1 %45, %46
  br i1 %47, label %52, label %51

48:                                               ; preds = %43
  %49 = tail call float @llvm.fabs.f32(float %16) #9
  %50 = fcmp ueq float %49, 0x7FF0000000000000
  br i1 %50, label %51, label %52

51:                                               ; preds = %48, %44
  br label %52

52:                                               ; preds = %44, %48, %51
  %53 = phi float [ 0.000000e+00, %51 ], [ %16, %48 ], [ %16, %44 ]
  br i1 %35, label %54, label %58

54:                                               ; preds = %52
  %55 = fcmp ole float %34, 0x47EFFFFFE0000000
  %56 = fcmp oge float %34, 0xC7EFFFFFE0000000
  %57 = and i1 %55, %56
  br i1 %57, label %62, label %61

58:                                               ; preds = %52
  %59 = tail call float @llvm.fabs.f32(float %34) #9
  %60 = fcmp ueq float %59, 0x7FF0000000000000
  br i1 %60, label %61, label %62

61:                                               ; preds = %58, %54
  br label %62

62:                                               ; preds = %54, %58, %61
  %63 = phi float [ 0.000000e+00, %61 ], [ %34, %58 ], [ %34, %54 ]
  %64 = fcmp oeq float %53, 0.000000e+00
  %65 = getelementptr inbounds %"struct.pdfium::agg::rect_base", %"struct.pdfium::agg::rect_base"* %4, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %66, %0
  %68 = select i1 %67, float 0xB9B4484C00000000, float 0x39B4484C00000000
  %69 = select i1 %64, float %68, float %53
  %70 = fcmp ogt float %69, 0.000000e+00
  %71 = getelementptr inbounds %"struct.pdfium::agg::rect_base", %"struct.pdfium::agg::rect_base"* %4, i64 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = select i1 %70, i32 %72, i32 %66
  %74 = select i1 %70, i32 %66, i32 %72
  %75 = sitofp i32 %73 to float
  %76 = sitofp i32 %74 to float
  %77 = fsub float %76, %14
  %78 = fdiv float %77, %69
  %79 = fcmp oeq float %63, 0.000000e+00
  %80 = getelementptr inbounds %"struct.pdfium::agg::rect_base", %"struct.pdfium::agg::rect_base"* %4, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = icmp slt i32 %81, %1
  %83 = select i1 %82, float 0xB9B4484C00000000, float 0x39B4484C00000000
  %84 = select i1 %79, float %83, float %63
  %85 = fcmp ogt float %84, 0.000000e+00
  %86 = getelementptr inbounds %"struct.pdfium::agg::rect_base", %"struct.pdfium::agg::rect_base"* %4, i64 0, i32 3
  %87 = load i32, i32* %86, align 4
  %88 = select i1 %85, i32 %87, i32 %81
  %89 = select i1 %85, i32 %81, i32 %87
  %90 = sitofp i32 %88 to float
  %91 = sitofp i32 %89 to float
  %92 = fsub float %91, %32
  %93 = fdiv float %92, %84
  %94 = fcmp olt float %78, %93
  %95 = select i1 %94, float %78, float %93
  %96 = select i1 %94, float %93, float %78
  %97 = fcmp ugt float %95, 1.000000e+00
  br i1 %97, label %166, label %98

98:                                               ; preds = %62
  %99 = fcmp ogt float %95, 0.000000e+00
  br i1 %99, label %100, label %105

100:                                              ; preds = %98
  %101 = fptosi float %76 to i32
  %102 = getelementptr inbounds i32, i32* %5, i64 1
  store i32 %101, i32* %5, align 4
  %103 = fptosi float %91 to i32
  %104 = getelementptr inbounds i32, i32* %6, i64 1
  store i32 %103, i32* %6, align 4
  br label %105

105:                                              ; preds = %100, %98
  %106 = phi i32* [ %102, %100 ], [ %5, %98 ]
  %107 = phi i32* [ %104, %100 ], [ %6, %98 ]
  %108 = phi i32 [ 1, %100 ], [ 0, %98 ]
  %109 = fcmp ugt float %96, 1.000000e+00
  br i1 %109, label %166, label %110

110:                                              ; preds = %105
  %111 = fsub float %75, %14
  %112 = fdiv float %111, %69
  %113 = fsub float %90, %32
  %114 = fdiv float %113, %84
  %115 = fcmp olt float %112, %114
  %116 = select i1 %115, float %112, float %114
  %117 = fcmp ogt float %96, 0.000000e+00
  %118 = fcmp ogt float %116, 0.000000e+00
  %119 = or i1 %117, %118
  br i1 %119, label %120, label %166

120:                                              ; preds = %110
  %121 = fcmp ugt float %96, %116
  br i1 %121, label %159, label %122

122:                                              ; preds = %120
  br i1 %117, label %123, label %139

123:                                              ; preds = %122
  %124 = fcmp ogt float %78, %93
  br i1 %124, label %125, label %129

125:                                              ; preds = %123
  %126 = fptosi float %76 to i32
  store i32 %126, i32* %106, align 4
  %127 = fmul float %78, %84
  %128 = fadd float %127, %32
  br label %133

129:                                              ; preds = %123
  %130 = fmul float %69, %93
  %131 = fadd float %130, %14
  %132 = fptosi float %131 to i32
  store i32 %132, i32* %106, align 4
  br label %133

133:                                              ; preds = %129, %125
  %134 = phi float [ %91, %129 ], [ %128, %125 ]
  %135 = getelementptr inbounds i32, i32* %107, i64 1
  %136 = getelementptr inbounds i32, i32* %106, i64 1
  %137 = fptosi float %134 to i32
  store i32 %137, i32* %107, align 4
  %138 = add nuw nsw i32 %108, 1
  br label %139

139:                                              ; preds = %133, %122
  %140 = phi i32* [ %136, %133 ], [ %106, %122 ]
  %141 = phi i32* [ %135, %133 ], [ %107, %122 ]
  %142 = phi i32 [ %138, %133 ], [ %108, %122 ]
  %143 = fcmp olt float %116, 1.000000e+00
  br i1 %143, label %144, label %155

144:                                              ; preds = %139
  br i1 %115, label %145, label %150

145:                                              ; preds = %144
  %146 = fptosi float %75 to i32
  store i32 %146, i32* %140, align 4
  %147 = fmul float %112, %84
  %148 = fadd float %147, %32
  %149 = fptosi float %148 to i32
  br label %156

150:                                              ; preds = %144
  %151 = fmul float %69, %114
  %152 = fadd float %151, %14
  %153 = fptosi float %152 to i32
  store i32 %153, i32* %140, align 4
  %154 = fptosi float %90 to i32
  br label %156

155:                                              ; preds = %139
  store i32 %2, i32* %140, align 4
  br label %156

156:                                              ; preds = %145, %150, %155
  %157 = phi i32 [ %149, %145 ], [ %154, %150 ], [ %3, %155 ]
  store i32 %157, i32* %141, align 4
  %158 = add nuw nsw i32 %142, 1
  br label %166

159:                                              ; preds = %120
  %160 = fcmp ogt float %78, %93
  %161 = select i1 %160, float %76, float %75
  %162 = select i1 %160, float %90, float %91
  %163 = fptosi float %161 to i32
  store i32 %163, i32* %106, align 4
  %164 = fptosi float %162 to i32
  store i32 %164, i32* %107, align 4
  %165 = add nuw nsw i32 %108, 1
  br label %166

166:                                              ; preds = %36, %40, %18, %22, %110, %159, %156, %105, %62
  %167 = phi i32 [ %108, %105 ], [ 0, %62 ], [ %158, %156 ], [ %165, %159 ], [ %108, %110 ], [ 0, %22 ], [ 0, %18 ], [ 0, %40 ], [ 0, %36 ]
  ret i32 %167
}

declare void @_ZN6pdfium3agg10outline_aa7move_toEii(%"class.pdfium::agg::outline_aa"*, i32, i32) local_unnamed_addr #6

declare void @_ZN6pdfium3agg10outline_aa7line_toEii(%"class.pdfium::agg::outline_aa"*, i32, i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #10

declare void @_ZN6pdfium3agg10outline_aa5resetEv(%"class.pdfium::agg::outline_aa"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6pdfium3agg18conv_adaptor_vcgenINS0_12path_storageENS0_12vcgen_strokeENS0_12null_markersEE6vertexEPfS6_(%"class.pdfium::agg::conv_adaptor_vcgen.96"*, float*, float*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen.96", %"class.pdfium::agg::conv_adaptor_vcgen.96"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen.96", %"class.pdfium::agg::conv_adaptor_vcgen.96"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen.96", %"class.pdfium::agg::conv_adaptor_vcgen.96"* %0, i64 0, i32 7
  %7 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen.96", %"class.pdfium::agg::conv_adaptor_vcgen.96"* %0, i64 0, i32 6
  %8 = bitcast float* %7 to i32*
  %9 = bitcast float* %6 to i32*
  %10 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen.96", %"class.pdfium::agg::conv_adaptor_vcgen.96"* %0, i64 0, i32 5
  %11 = getelementptr inbounds %"class.pdfium::agg::conv_adaptor_vcgen.96", %"class.pdfium::agg::conv_adaptor_vcgen.96"* %0, i64 0, i32 1
  %12 = bitcast float* %1 to i32*
  %13 = bitcast float* %2 to i32*
  br label %14

14:                                               ; preds = %16, %3
  %15 = load i32, i32* %4, align 4
  switch i32 %15, label %16 [
    i32 0, label %19
    i32 1, label %17
    i32 2, label %123
  ]

16:                                               ; preds = %14, %127
  br label %14

17:                                               ; preds = %14
  %18 = load i32, i32* %10, align 8
  br label %53

19:                                               ; preds = %14
  %20 = load %"class.pdfium::agg::path_storage"*, %"class.pdfium::agg::path_storage"** %5, align 8
  %21 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %20, i64 0, i32 6
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %20, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp ult i32 %22, %24
  br i1 %25, label %26, label %51

26:                                               ; preds = %19
  %27 = add nuw i32 %22, 1
  store i32 %27, i32* %21, align 8
  %28 = lshr i32 %22, 8
  %29 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %20, i64 0, i32 4
  %30 = load float**, float*** %29, align 8
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds float*, float** %30, i64 %31
  %33 = load float*, float** %32, align 8
  %34 = and i32 %22, 255
  %35 = shl nuw nsw i32 %34, 1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds float, float* %33, i64 %36
  %38 = getelementptr inbounds float, float* %37, i64 1
  %39 = bitcast float* %37 to i32*
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %8, align 4
  %41 = bitcast float* %38 to i32*
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %9, align 4
  %43 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %20, i64 0, i32 5
  %44 = load i8**, i8*** %43, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 %31
  %46 = load i8*, i8** %45, align 8
  %47 = zext i32 %34 to i64
  %48 = getelementptr inbounds i8, i8* %46, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  br label %51

51:                                               ; preds = %19, %26
  %52 = phi i32 [ %50, %26 ], [ 0, %19 ]
  store i32 %52, i32* %10, align 8
  store i32 1, i32* %4, align 4
  br label %53

53:                                               ; preds = %17, %51
  %54 = phi i32 [ %18, %17 ], [ %52, %51 ]
  %55 = and i32 %54, -129
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %128, label %57

57:                                               ; preds = %53
  tail call void @_ZN6pdfium3agg12vcgen_stroke10remove_allEv(%"class.pdfium::agg::vcgen_stroke"* %11) #14
  %58 = load float, float* %7, align 4
  %59 = load float, float* %6, align 8
  tail call void @_ZN6pdfium3agg12vcgen_stroke10add_vertexEffj(%"class.pdfium::agg::vcgen_stroke"* %11, float %58, float %59, i32 1) #14
  %60 = load %"class.pdfium::agg::path_storage"*, %"class.pdfium::agg::path_storage"** %5, align 8
  %61 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %60, i64 0, i32 6
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %60, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp ult i32 %62, %64
  br i1 %65, label %66, label %107

66:                                               ; preds = %57, %115
  %67 = phi i32 [ %118, %115 ], [ %62, %57 ]
  %68 = phi i32* [ %117, %115 ], [ %61, %57 ]
  %69 = phi %"class.pdfium::agg::path_storage"* [ %116, %115 ], [ %60, %57 ]
  %70 = add nuw i32 %67, 1
  store i32 %70, i32* %68, align 8
  %71 = lshr i32 %67, 8
  %72 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %69, i64 0, i32 4
  %73 = load float**, float*** %72, align 8
  %74 = zext i32 %71 to i64
  %75 = getelementptr inbounds float*, float** %73, i64 %74
  %76 = load float*, float** %75, align 8
  %77 = and i32 %67, 255
  %78 = shl nuw nsw i32 %77, 1
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds float, float* %76, i64 %79
  %81 = getelementptr inbounds float, float* %80, i64 1
  %82 = bitcast float* %80 to i32*
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %12, align 4
  %84 = bitcast float* %81 to i32*
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %13, align 4
  %86 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %69, i64 0, i32 5
  %87 = load i8**, i8*** %86, align 8
  %88 = getelementptr inbounds i8*, i8** %87, i64 %74
  %89 = load i8*, i8** %88, align 8
  %90 = zext i32 %77 to i64
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = and i32 %93, 127
  %95 = add nsw i32 %94, -1
  %96 = icmp ult i32 %95, 14
  br i1 %96, label %97, label %105

97:                                               ; preds = %66
  store i32 %93, i32* %10, align 8
  %98 = icmp eq i32 %94, 1
  br i1 %98, label %99, label %102

99:                                               ; preds = %97
  %100 = load i32, i32* %12, align 4
  store i32 %100, i32* %8, align 4
  %101 = load i32, i32* %13, align 4
  store i32 %101, i32* %9, align 8
  br label %122

102:                                              ; preds = %97
  %103 = load float, float* %1, align 4
  %104 = load float, float* %2, align 4
  tail call void @_ZN6pdfium3agg12vcgen_stroke10add_vertexEffj(%"class.pdfium::agg::vcgen_stroke"* %11, float %103, float %104, i32 %93) #14
  br label %115

105:                                              ; preds = %66
  %106 = icmp eq i32 %94, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %105, %115, %57
  store i32 0, i32* %10, align 8
  br label %122

108:                                              ; preds = %105
  %109 = and i32 %93, 15
  %110 = icmp eq i32 %109, 15
  br i1 %110, label %111, label %115

111:                                              ; preds = %108
  %112 = zext i8 %92 to i32
  %113 = bitcast i32 %85 to float
  %114 = load float, float* %1, align 4
  tail call void @_ZN6pdfium3agg12vcgen_stroke10add_vertexEffj(%"class.pdfium::agg::vcgen_stroke"* %11, float %114, float %113, i32 %112) #14
  br label %122

115:                                              ; preds = %108, %102
  %116 = load %"class.pdfium::agg::path_storage"*, %"class.pdfium::agg::path_storage"** %5, align 8
  %117 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %116, i64 0, i32 6
  %118 = load i32, i32* %117, align 8
  %119 = getelementptr inbounds %"class.pdfium::agg::path_storage", %"class.pdfium::agg::path_storage"* %116, i64 0, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = icmp ult i32 %118, %120
  br i1 %121, label %66, label %107

122:                                              ; preds = %111, %107, %99
  tail call void @_ZN6pdfium3agg12vcgen_stroke6rewindEj(%"class.pdfium::agg::vcgen_stroke"* %11, i32 0) #14
  store i32 2, i32* %4, align 4
  br label %123

123:                                              ; preds = %14, %122
  %124 = tail call i32 @_ZN6pdfium3agg12vcgen_stroke6vertexEPfS2_(%"class.pdfium::agg::vcgen_stroke"* %11, float* %1, float* %2) #14
  %125 = and i32 %124, -129
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %123
  store i32 1, i32* %4, align 4
  br label %16

128:                                              ; preds = %123, %53
  %129 = phi i32 [ 0, %53 ], [ %124, %123 ]
  ret i32 %129
}

declare { i64, i64 } @_Z10ArgbDecodej(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6pdfium12_GLOBAL__N_112CFX_Renderer17CompositeSpan1bppEPhiiiS2_iiS2_S2_(%"class.pdfium::(anonymous namespace)::CFX_Renderer"* nocapture readonly, i8* nocapture, i32, i32, i32, i8* nocapture readonly, i32, i32, i8* readonly, i8* nocapture readnone) #0 align 2 {
  %11 = icmp sgt i32 %6, %3
  %12 = sub nsw i32 %6, %3
  %13 = select i1 %11, i32 %12, i32 0
  %14 = add nsw i32 %4, %3
  %15 = icmp slt i32 %14, %7
  %16 = sub nsw i32 %7, %3
  %17 = select i1 %15, i32 %4, i32 %16
  %18 = lshr i32 %13, 3
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %1, i64 %19
  %21 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %22 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %21, align 8
  %23 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %22, i64 0, i32 0, i32 6, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %22, i64 0, i32 0, i32 6, i32 0, i32 1
  %26 = load i32*, i32** %25, align 8
  %27 = icmp eq i32* %24, %26
  br i1 %27, label %33, label %28

28:                                               ; preds = %10
  %29 = ptrtoint i32* %26 to i64
  %30 = ptrtoint i32* %24 to i64
  %31 = sub i64 %29, %30
  switch i64 %31, label %86 [
    i64 0, label %32
    i64 4, label %32
  ], !prof !27

32:                                               ; preds = %28, %28
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !13
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !14
  unreachable

33:                                               ; preds = %10
  %34 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 255
  %37 = icmp eq i32 %36, 255
  br label %38

38:                                               ; preds = %86, %33
  %39 = phi i1 [ %37, %33 ], [ %91, %86 ]
  %40 = icmp slt i32 %13, %17
  br i1 %40, label %41, label %92

41:                                               ; preds = %38
  %42 = icmp eq i8* %8, null
  %43 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 0
  %44 = srem i32 %3, 8
  %45 = zext i32 %13 to i64
  %46 = sext i32 %17 to i64
  %47 = add nsw i32 %44, 1
  %48 = sub i32 %47, %13
  br label %49

49:                                               ; preds = %79, %41
  %50 = phi i64 [ %45, %41 ], [ %84, %79 ]
  %51 = phi i8* [ %20, %41 ], [ %83, %79 ]
  %52 = load i32, i32* %43, align 8
  %53 = getelementptr inbounds i8, i8* %5, i64 %50
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = mul nsw i32 %52, %55
  br i1 %42, label %63, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds i8, i8* %8, i64 %50
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = mul nsw i32 %56, %60
  %62 = sdiv i32 %61, 255
  br label %63

63:                                               ; preds = %57, %49
  %64 = phi i32 [ %62, %57 ], [ %56, %49 ]
  %65 = add i32 %64, 254
  %66 = icmp ult i32 %65, 509
  %67 = trunc i64 %50 to i32
  br i1 %66, label %79, label %68

68:                                               ; preds = %63
  %69 = add i32 %67, %3
  %70 = srem i32 %69, 8
  %71 = sub nsw i32 7, %70
  %72 = shl i32 1, %71
  %73 = load i8, i8* %51, align 1
  %74 = trunc i32 %72 to i8
  %75 = or i8 %73, %74
  %76 = xor i8 %74, -1
  %77 = and i8 %73, %76
  %78 = select i1 %39, i8 %75, i8 %77
  store i8 %78, i8* %51, align 1
  br label %79

79:                                               ; preds = %68, %63
  %80 = add i32 %48, %67
  %81 = sdiv i32 %80, 8
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %20, i64 %82
  %84 = add nuw nsw i64 %50, 1
  %85 = icmp eq i64 %84, %46
  br i1 %85, label %92, label %49

86:                                               ; preds = %28
  %87 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 5
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds i32, i32* %24, i64 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, %88
  br label %38

92:                                               ; preds = %79, %38
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN6pdfium12_GLOBAL__N_112CFX_Renderer17CompositeSpanGrayEPhiiiS2_iiS2_S2_(%"class.pdfium::(anonymous namespace)::CFX_Renderer"* nocapture readonly, i8* nocapture, i32, i32, i32, i8* nocapture readonly, i32, i32, i8* readonly, i8*) #7 align 2 {
  %11 = icmp sgt i32 %6, %3
  %12 = sub nsw i32 %6, %3
  %13 = select i1 %11, i32 %12, i32 0
  %14 = add nsw i32 %4, %3
  %15 = icmp slt i32 %14, %7
  %16 = sub nsw i32 %7, %3
  %17 = select i1 %15, i32 %4, i32 %16
  %18 = zext i32 %13 to i64
  %19 = getelementptr inbounds i8, i8* %1, i64 %18
  %20 = icmp eq i8* %9, null
  %21 = icmp slt i32 %13, %17
  br i1 %20, label %28, label %22

22:                                               ; preds = %10
  br i1 %21, label %23, label %132

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 6
  %25 = icmp eq i8* %8, null
  %26 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 0
  %27 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 4
  br label %33

28:                                               ; preds = %10
  br i1 %21, label %29, label %132

29:                                               ; preds = %28
  %30 = icmp eq i8* %8, null
  %31 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 0
  %32 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 4
  br label %96

33:                                               ; preds = %23, %90
  %34 = phi i64 [ %18, %23 ], [ %93, %90 ]
  %35 = phi i8* [ %19, %23 ], [ %91, %90 ]
  %36 = phi i8* [ %9, %23 ], [ %92, %90 ]
  %37 = load i8, i8* %24, align 8, !range !7
  %38 = icmp eq i8 %37, 0
  %39 = load i32, i32* %26, align 8
  br i1 %38, label %47, label %40

40:                                               ; preds = %33
  br i1 %25, label %61, label %41

41:                                               ; preds = %40
  %42 = getelementptr inbounds i8, i8* %8, i64 %34
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = mul nsw i32 %39, %44
  %46 = sdiv i32 %45, 255
  br label %61

47:                                               ; preds = %33
  %48 = getelementptr inbounds i8, i8* %5, i64 %34
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = mul nsw i32 %39, %50
  br i1 %25, label %58, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds i8, i8* %8, i64 %34
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = mul nsw i32 %51, %55
  %57 = sdiv i32 %56, 255
  br label %58

58:                                               ; preds = %47, %52
  %59 = phi i32 [ %57, %52 ], [ %51, %47 ]
  %60 = sdiv i32 %59, 255
  br label %61

61:                                               ; preds = %41, %40, %58
  %62 = phi i32 [ %60, %58 ], [ %46, %41 ], [ %39, %40 ]
  switch i32 %62, label %67 [
    i32 0, label %90
    i32 255, label %63
  ]

63:                                               ; preds = %61
  %64 = load i32, i32* %27, align 8
  %65 = trunc i32 %64 to i8
  store i8 %65, i8* %35, align 1
  %66 = load i32, i32* %26, align 8
  br label %86

67:                                               ; preds = %61
  %68 = load i8, i8* %36, align 1
  %69 = zext i8 %68 to i32
  %70 = add nsw i32 %62, %69
  %71 = mul nsw i32 %62, %69
  %72 = sdiv i32 %71, -255
  %73 = add i32 %70, %72
  %74 = trunc i32 %73 to i8
  store i8 %74, i8* %36, align 1
  %75 = mul nsw i32 %62, 255
  %76 = and i32 %73, 255
  %77 = sdiv i32 %75, %76
  %78 = load i8, i8* %35, align 1
  %79 = zext i8 %78 to i32
  %80 = sub nsw i32 255, %77
  %81 = mul nsw i32 %80, %79
  %82 = load i32, i32* %27, align 8
  %83 = mul nsw i32 %82, %77
  %84 = add nsw i32 %81, %83
  %85 = sdiv i32 %84, 255
  br label %86

86:                                               ; preds = %67, %63
  %87 = phi i32 [ %66, %63 ], [ %85, %67 ]
  %88 = phi i8* [ %36, %63 ], [ %35, %67 ]
  %89 = trunc i32 %87 to i8
  store i8 %89, i8* %88, align 1
  br label %90

90:                                               ; preds = %86, %61
  %91 = getelementptr inbounds i8, i8* %35, i64 1
  %92 = getelementptr inbounds i8, i8* %36, i64 1
  %93 = add nuw nsw i64 %34, 1
  %94 = trunc i64 %93 to i32
  %95 = icmp sgt i32 %17, %94
  br i1 %95, label %33, label %132

96:                                               ; preds = %29, %127
  %97 = phi i64 [ %18, %29 ], [ %129, %127 ]
  %98 = phi i8* [ %19, %29 ], [ %128, %127 ]
  %99 = load i32, i32* %31, align 8
  %100 = getelementptr inbounds i8, i8* %5, i64 %97
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = mul nsw i32 %99, %102
  br i1 %30, label %110, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds i8, i8* %8, i64 %97
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = mul nsw i32 %103, %107
  %109 = sdiv i32 %108, 255
  br label %110

110:                                              ; preds = %96, %104
  %111 = phi i32 [ %109, %104 ], [ %103, %96 ]
  %112 = sdiv i32 %111, 255
  switch i32 %112, label %115 [
    i32 0, label %127
    i32 255, label %113
  ]

113:                                              ; preds = %110
  %114 = load i32, i32* %32, align 8
  br label %124

115:                                              ; preds = %110
  %116 = load i8, i8* %98, align 1
  %117 = zext i8 %116 to i32
  %118 = sub nsw i32 255, %112
  %119 = mul nsw i32 %118, %117
  %120 = load i32, i32* %32, align 8
  %121 = mul nsw i32 %120, %112
  %122 = add nsw i32 %119, %121
  %123 = sdiv i32 %122, 255
  br label %124

124:                                              ; preds = %115, %113
  %125 = phi i32 [ %114, %113 ], [ %123, %115 ]
  %126 = trunc i32 %125 to i8
  store i8 %126, i8* %98, align 1
  br label %127

127:                                              ; preds = %124, %110
  %128 = getelementptr inbounds i8, i8* %98, i64 1
  %129 = add nuw nsw i64 %97, 1
  %130 = trunc i64 %129 to i32
  %131 = icmp sgt i32 %17, %130
  br i1 %131, label %96, label %132

132:                                              ; preds = %90, %127, %22, %28
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN6pdfium12_GLOBAL__N_112CFX_Renderer17CompositeSpanARGBEPhiiiS2_iiS2_S2_(%"class.pdfium::(anonymous namespace)::CFX_Renderer"* nocapture readonly, i8* nocapture, i32, i32, i32, i8* nocapture readonly, i32, i32, i8* readonly, i8* nocapture readnone) #7 align 2 {
  %11 = icmp sgt i32 %6, %3
  %12 = sub nsw i32 %6, %3
  %13 = select i1 %11, i32 %12, i32 0
  %14 = add nsw i32 %4, %3
  %15 = icmp slt i32 %14, %7
  %16 = sub nsw i32 %7, %3
  %17 = select i1 %15, i32 %4, i32 %16
  %18 = mul nsw i32 %13, %2
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %1, i64 %19
  %21 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 7
  %22 = load i8, i8* %21, align 1, !range !7
  %23 = icmp eq i8 %22, 0
  %24 = icmp slt i32 %13, %17
  br i1 %23, label %35, label %25

25:                                               ; preds = %10
  br i1 %24, label %26, label %211

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 6
  %28 = icmp eq i8* %8, null
  %29 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 0
  %30 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 5
  %31 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 1
  %32 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 3
  %34 = zext i32 %13 to i64
  br label %46

35:                                               ; preds = %10
  br i1 %24, label %36, label %211

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 6
  %38 = icmp eq i8* %8, null
  %39 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 0
  %40 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 5
  %41 = sext i32 %2 to i64
  %42 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 3
  %43 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 2
  %44 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 1
  %45 = zext i32 %13 to i64
  br label %122

46:                                               ; preds = %26, %117
  %47 = phi i64 [ %34, %26 ], [ %119, %117 ]
  %48 = phi i8* [ %20, %26 ], [ %118, %117 ]
  %49 = load i8, i8* %27, align 8, !range !7
  %50 = icmp eq i8 %49, 0
  %51 = load i32, i32* %29, align 8
  br i1 %50, label %59, label %52

52:                                               ; preds = %46
  br i1 %28, label %73, label %53

53:                                               ; preds = %52
  %54 = getelementptr inbounds i8, i8* %8, i64 %47
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = mul nsw i32 %51, %56
  %58 = sdiv i32 %57, 255
  br label %73

59:                                               ; preds = %46
  %60 = getelementptr inbounds i8, i8* %5, i64 %47
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = mul nsw i32 %51, %62
  br i1 %28, label %70, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds i8, i8* %8, i64 %47
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = mul nsw i32 %63, %67
  %69 = sdiv i32 %68, 255
  br label %70

70:                                               ; preds = %59, %64
  %71 = phi i32 [ %69, %64 ], [ %63, %59 ]
  %72 = sdiv i32 %71, 255
  br label %73

73:                                               ; preds = %53, %52, %70
  %74 = phi i32 [ %72, %70 ], [ %58, %53 ], [ %51, %52 ]
  switch i32 %74, label %78 [
    i32 0, label %117
    i32 255, label %75
  ]

75:                                               ; preds = %73
  %76 = load i32, i32* %30, align 4
  %77 = bitcast i8* %48 to i32*
  store i32 %76, i32* %77, align 4
  br label %117

78:                                               ; preds = %73
  %79 = getelementptr inbounds i8, i8* %48, i64 3
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = add nsw i32 %74, %81
  %83 = mul nsw i32 %74, %81
  %84 = sdiv i32 %83, -255
  %85 = add i32 %82, %84
  %86 = trunc i32 %85 to i8
  store i8 %86, i8* %79, align 1
  %87 = mul nsw i32 %74, 255
  %88 = and i32 %85, 255
  %89 = sdiv i32 %87, %88
  %90 = load i8, i8* %48, align 1
  %91 = zext i8 %90 to i32
  %92 = sub nsw i32 255, %89
  %93 = mul nsw i32 %92, %91
  %94 = load i32, i32* %31, align 4
  %95 = mul nsw i32 %94, %89
  %96 = add nsw i32 %93, %95
  %97 = sdiv i32 %96, 255
  %98 = trunc i32 %97 to i8
  store i8 %98, i8* %48, align 1
  %99 = getelementptr inbounds i8, i8* %48, i64 1
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = mul nsw i32 %92, %101
  %103 = load i32, i32* %32, align 8
  %104 = mul nsw i32 %103, %89
  %105 = add nsw i32 %102, %104
  %106 = sdiv i32 %105, 255
  %107 = trunc i32 %106 to i8
  store i8 %107, i8* %99, align 1
  %108 = getelementptr inbounds i8, i8* %48, i64 2
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = mul nsw i32 %92, %110
  %112 = load i32, i32* %33, align 4
  %113 = mul nsw i32 %112, %89
  %114 = add nsw i32 %111, %113
  %115 = sdiv i32 %114, 255
  %116 = trunc i32 %115 to i8
  store i8 %116, i8* %108, align 1
  br label %117

117:                                              ; preds = %75, %73, %78
  %118 = getelementptr inbounds i8, i8* %48, i64 4
  %119 = add nuw nsw i64 %47, 1
  %120 = trunc i64 %119 to i32
  %121 = icmp sgt i32 %17, %120
  br i1 %121, label %46, label %211

122:                                              ; preds = %36, %205
  %123 = phi i64 [ %45, %36 ], [ %208, %205 ]
  %124 = phi i8* [ %20, %36 ], [ %207, %205 ]
  %125 = load i8, i8* %37, align 8, !range !7
  %126 = icmp eq i8 %125, 0
  %127 = load i32, i32* %39, align 8
  br i1 %126, label %135, label %128

128:                                              ; preds = %122
  br i1 %38, label %149, label %129

129:                                              ; preds = %128
  %130 = getelementptr inbounds i8, i8* %8, i64 %123
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = mul nsw i32 %127, %132
  %134 = sdiv i32 %133, 255
  br label %149

135:                                              ; preds = %122
  %136 = getelementptr inbounds i8, i8* %5, i64 %123
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = mul nsw i32 %127, %138
  br i1 %38, label %146, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds i8, i8* %8, i64 %123
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = mul nsw i32 %139, %143
  %145 = sdiv i32 %144, 255
  br label %146

146:                                              ; preds = %135, %140
  %147 = phi i32 [ %145, %140 ], [ %139, %135 ]
  %148 = sdiv i32 %147, 255
  br label %149

149:                                              ; preds = %129, %128, %146
  %150 = phi i32 [ %148, %146 ], [ %134, %129 ], [ %127, %128 ]
  switch i32 %150, label %154 [
    i32 0, label %205
    i32 255, label %151
  ]

151:                                              ; preds = %149
  %152 = load i32, i32* %40, align 4
  %153 = bitcast i8* %124 to i32*
  store i32 %152, i32* %153, align 4
  br label %205

154:                                              ; preds = %149
  %155 = getelementptr inbounds i8, i8* %124, i64 3
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = icmp eq i8 %156, 0
  br i1 %158, label %159, label %169

159:                                              ; preds = %154
  %160 = trunc i32 %150 to i8
  store i8 %160, i8* %155, align 1
  %161 = load i32, i32* %42, align 4
  %162 = trunc i32 %161 to i8
  %163 = getelementptr inbounds i8, i8* %124, i64 1
  store i8 %162, i8* %124, align 1
  %164 = load i32, i32* %43, align 8
  %165 = trunc i32 %164 to i8
  %166 = getelementptr inbounds i8, i8* %124, i64 2
  store i8 %165, i8* %163, align 1
  %167 = load i32, i32* %44, align 4
  %168 = trunc i32 %167 to i8
  store i8 %168, i8* %166, align 1
  br label %205

169:                                              ; preds = %154
  %170 = add nsw i32 %150, %157
  %171 = mul nsw i32 %150, %157
  %172 = sdiv i32 %171, -255
  %173 = add i32 %170, %172
  %174 = trunc i32 %173 to i8
  store i8 %174, i8* %155, align 1
  %175 = mul nsw i32 %150, 255
  %176 = and i32 %173, 255
  %177 = sdiv i32 %175, %176
  %178 = load i8, i8* %124, align 1
  %179 = zext i8 %178 to i32
  %180 = sub nsw i32 255, %177
  %181 = mul nsw i32 %180, %179
  %182 = load i32, i32* %42, align 4
  %183 = mul nsw i32 %182, %177
  %184 = add nsw i32 %181, %183
  %185 = sdiv i32 %184, 255
  %186 = trunc i32 %185 to i8
  store i8 %186, i8* %124, align 1
  %187 = getelementptr inbounds i8, i8* %124, i64 1
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = mul nsw i32 %180, %189
  %191 = load i32, i32* %43, align 8
  %192 = mul nsw i32 %191, %177
  %193 = add nsw i32 %190, %192
  %194 = sdiv i32 %193, 255
  %195 = trunc i32 %194 to i8
  store i8 %195, i8* %187, align 1
  %196 = getelementptr inbounds i8, i8* %124, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  %199 = mul nsw i32 %180, %198
  %200 = load i32, i32* %44, align 4
  %201 = mul nsw i32 %200, %177
  %202 = add nsw i32 %199, %201
  %203 = sdiv i32 %202, 255
  %204 = trunc i32 %203 to i8
  store i8 %204, i8* %196, align 1
  br label %205

205:                                              ; preds = %151, %149, %169, %159
  %206 = phi i64 [ 4, %169 ], [ 4, %159 ], [ %41, %149 ], [ %41, %151 ]
  %207 = getelementptr inbounds i8, i8* %124, i64 %206
  %208 = add nuw nsw i64 %123, 1
  %209 = trunc i64 %208 to i32
  %210 = icmp sgt i32 %17, %209
  br i1 %210, label %122, label %211

211:                                              ; preds = %117, %205, %25, %35
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN6pdfium12_GLOBAL__N_112CFX_Renderer16CompositeSpanRGBEPhiiiS2_iiS2_S2_(%"class.pdfium::(anonymous namespace)::CFX_Renderer"* readonly, i8* nocapture, i32, i32, i32, i8* nocapture readonly, i32, i32, i8* readonly, i8*) #7 align 2 {
  %11 = icmp sgt i32 %6, %3
  %12 = sub nsw i32 %6, %3
  %13 = select i1 %11, i32 %12, i32 0
  %14 = add nsw i32 %4, %3
  %15 = icmp slt i32 %14, %7
  %16 = sub nsw i32 %7, %3
  %17 = select i1 %15, i32 %4, i32 %16
  %18 = mul nsw i32 %13, %2
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %1, i64 %19
  %21 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 7
  %22 = load i8, i8* %21, align 1, !range !7
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %104, label %24

24:                                               ; preds = %10
  %25 = icmp slt i32 %13, %17
  br i1 %25, label %26, label %299

26:                                               ; preds = %24
  %27 = icmp eq i8* %8, null
  %28 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 0
  %29 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 1
  %30 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 2
  %31 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 3
  %32 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 5
  %33 = sext i32 %2 to i64
  %34 = add nsw i32 %2, -2
  %35 = sext i32 %34 to i64
  %36 = zext i32 %13 to i64
  br label %37

37:                                               ; preds = %26, %99
  %38 = phi i64 [ %36, %26 ], [ %101, %99 ]
  %39 = phi i8* [ %20, %26 ], [ %100, %99 ]
  %40 = load i32, i32* %28, align 8
  %41 = getelementptr inbounds i8, i8* %5, i64 %38
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = mul nsw i32 %40, %43
  br i1 %27, label %51, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds i8, i8* %8, i64 %38
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = mul nsw i32 %44, %48
  %50 = sdiv i32 %49, 255
  br label %51

51:                                               ; preds = %37, %45
  %52 = phi i32 [ %50, %45 ], [ %44, %37 ]
  %53 = sdiv i32 %52, 255
  switch i32 %53, label %68 [
    i32 0, label %97
    i32 255, label %54
  ]

54:                                               ; preds = %51
  switch i32 %2, label %97 [
    i32 4, label %55
    i32 3, label %58
  ]

55:                                               ; preds = %54
  %56 = load i32, i32* %32, align 4
  %57 = bitcast i8* %39 to i32*
  store i32 %56, i32* %57, align 4
  br label %97

58:                                               ; preds = %54
  %59 = load i32, i32* %29, align 4
  %60 = trunc i32 %59 to i8
  %61 = getelementptr inbounds i8, i8* %39, i64 1
  store i8 %60, i8* %39, align 1
  %62 = load i32, i32* %30, align 8
  %63 = trunc i32 %62 to i8
  %64 = getelementptr inbounds i8, i8* %39, i64 2
  store i8 %63, i8* %61, align 1
  %65 = load i32, i32* %31, align 4
  %66 = trunc i32 %65 to i8
  %67 = getelementptr inbounds i8, i8* %39, i64 3
  store i8 %66, i8* %64, align 1
  br label %99

68:                                               ; preds = %51
  %69 = load i8, i8* %39, align 1
  %70 = zext i8 %69 to i32
  %71 = sub nsw i32 255, %53
  %72 = mul nsw i32 %71, %70
  %73 = load i32, i32* %29, align 4
  %74 = mul nsw i32 %73, %53
  %75 = add nsw i32 %72, %74
  %76 = sdiv i32 %75, 255
  %77 = trunc i32 %76 to i8
  store i8 %77, i8* %39, align 1
  %78 = getelementptr inbounds i8, i8* %39, i64 1
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = mul nsw i32 %71, %80
  %82 = load i32, i32* %30, align 8
  %83 = mul nsw i32 %82, %53
  %84 = add nsw i32 %81, %83
  %85 = sdiv i32 %84, 255
  %86 = trunc i32 %85 to i8
  store i8 %86, i8* %78, align 1
  %87 = getelementptr inbounds i8, i8* %39, i64 2
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = mul nsw i32 %71, %89
  %91 = load i32, i32* %31, align 4
  %92 = mul nsw i32 %91, %53
  %93 = add nsw i32 %90, %92
  %94 = sdiv i32 %93, 255
  %95 = trunc i32 %94 to i8
  store i8 %95, i8* %87, align 1
  %96 = getelementptr inbounds i8, i8* %87, i64 %35
  br label %99

97:                                               ; preds = %54, %51, %55
  %98 = getelementptr inbounds i8, i8* %39, i64 %33
  br label %99

99:                                               ; preds = %97, %68, %58
  %100 = phi i8* [ %98, %97 ], [ %67, %58 ], [ %96, %68 ]
  %101 = add nuw nsw i64 %38, 1
  %102 = trunc i64 %101 to i32
  %103 = icmp sgt i32 %17, %102
  br i1 %103, label %37, label %299

104:                                              ; preds = %10
  %105 = icmp eq i32 %2, 3
  %106 = icmp ne i8* %9, null
  %107 = and i1 %105, %106
  %108 = icmp slt i32 %13, %17
  br i1 %107, label %123, label %109

109:                                              ; preds = %104
  br i1 %108, label %110, label %299

110:                                              ; preds = %109
  %111 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 6
  %112 = icmp eq i8* %8, null
  %113 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 0
  %114 = icmp eq i32 %2, 4
  %115 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 3
  %116 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 2
  %117 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 1
  %118 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 5
  %119 = sext i32 %2 to i64
  %120 = add nsw i32 %2, -2
  %121 = sext i32 %120 to i64
  %122 = zext i32 %13 to i64
  br label %219

123:                                              ; preds = %104
  br i1 %108, label %124, label %299

124:                                              ; preds = %123
  %125 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 6
  %126 = icmp eq i8* %8, null
  %127 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 0
  %128 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 3
  %129 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 2
  %130 = getelementptr inbounds %"class.pdfium::(anonymous namespace)::CFX_Renderer", %"class.pdfium::(anonymous namespace)::CFX_Renderer"* %0, i64 0, i32 1
  %131 = zext i32 %13 to i64
  br label %132

132:                                              ; preds = %124, %213
  %133 = phi i64 [ %131, %124 ], [ %216, %213 ]
  %134 = phi i8* [ %20, %124 ], [ %215, %213 ]
  %135 = phi i8* [ %9, %124 ], [ %214, %213 ]
  %136 = load i8, i8* %125, align 8, !range !7
  %137 = icmp eq i8 %136, 0
  %138 = load i32, i32* %127, align 8
  br i1 %137, label %146, label %139

139:                                              ; preds = %132
  br i1 %126, label %160, label %140

140:                                              ; preds = %139
  %141 = getelementptr inbounds i8, i8* %8, i64 %133
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = mul nsw i32 %138, %143
  %145 = sdiv i32 %144, 255
  br label %160

146:                                              ; preds = %132
  %147 = getelementptr inbounds i8, i8* %5, i64 %133
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = mul nsw i32 %138, %149
  br i1 %126, label %157, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds i8, i8* %8, i64 %133
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = mul nsw i32 %150, %154
  %156 = sdiv i32 %155, 255
  br label %157

157:                                              ; preds = %146, %151
  %158 = phi i32 [ %156, %151 ], [ %150, %146 ]
  %159 = sdiv i32 %158, 255
  br label %160

160:                                              ; preds = %140, %139, %157
  %161 = phi i32 [ %159, %157 ], [ %145, %140 ], [ %138, %139 ]
  switch i32 %161, label %172 [
    i32 0, label %213
    i32 255, label %162
  ]

162:                                              ; preds = %160
  %163 = load i32, i32* %128, align 4
  %164 = trunc i32 %163 to i8
  %165 = getelementptr inbounds i8, i8* %134, i64 1
  store i8 %164, i8* %134, align 1
  %166 = load i32, i32* %129, align 8
  %167 = trunc i32 %166 to i8
  %168 = getelementptr inbounds i8, i8* %134, i64 2
  store i8 %167, i8* %165, align 1
  %169 = load i32, i32* %130, align 4
  %170 = trunc i32 %169 to i8
  store i8 %170, i8* %168, align 1
  %171 = load i32, i32* %127, align 8
  br label %209

172:                                              ; preds = %160
  %173 = load i8, i8* %135, align 1
  %174 = zext i8 %173 to i32
  %175 = add nsw i32 %161, %174
  %176 = mul nsw i32 %161, %174
  %177 = sdiv i32 %176, -255
  %178 = add i32 %175, %177
  %179 = trunc i32 %178 to i8
  store i8 %179, i8* %135, align 1
  %180 = mul nsw i32 %161, 255
  %181 = and i32 %178, 255
  %182 = sdiv i32 %180, %181
  %183 = load i8, i8* %134, align 1
  %184 = zext i8 %183 to i32
  %185 = sub nsw i32 255, %182
  %186 = mul nsw i32 %185, %184
  %187 = load i32, i32* %128, align 4
  %188 = mul nsw i32 %187, %182
  %189 = add nsw i32 %186, %188
  %190 = sdiv i32 %189, 255
  %191 = trunc i32 %190 to i8
  store i8 %191, i8* %134, align 1
  %192 = getelementptr inbounds i8, i8* %134, i64 1
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = mul nsw i32 %185, %194
  %196 = load i32, i32* %129, align 8
  %197 = mul nsw i32 %196, %182
  %198 = add nsw i32 %195, %197
  %199 = sdiv i32 %198, 255
  %200 = trunc i32 %199 to i8
  store i8 %200, i8* %192, align 1
  %201 = getelementptr inbounds i8, i8* %134, i64 2
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i32
  %204 = mul nsw i32 %185, %203
  %205 = load i32, i32* %130, align 4
  %206 = mul nsw i32 %205, %182
  %207 = add nsw i32 %204, %206
  %208 = sdiv i32 %207, 255
  br label %209

209:                                              ; preds = %162, %172
  %210 = phi i32 [ %208, %172 ], [ %171, %162 ]
  %211 = phi i8* [ %201, %172 ], [ %135, %162 ]
  %212 = trunc i32 %210 to i8
  store i8 %212, i8* %211, align 1
  br label %213

213:                                              ; preds = %209, %160
  %214 = getelementptr inbounds i8, i8* %135, i64 1
  %215 = getelementptr inbounds i8, i8* %134, i64 3
  %216 = add nuw nsw i64 %133, 1
  %217 = trunc i64 %216 to i32
  %218 = icmp sgt i32 %17, %217
  br i1 %218, label %132, label %299

219:                                              ; preds = %110, %294
  %220 = phi i64 [ %122, %110 ], [ %296, %294 ]
  %221 = phi i8* [ %20, %110 ], [ %295, %294 ]
  %222 = load i8, i8* %111, align 8, !range !7
  %223 = icmp eq i8 %222, 0
  %224 = load i32, i32* %113, align 8
  br i1 %223, label %232, label %225

225:                                              ; preds = %219
  br i1 %112, label %246, label %226

226:                                              ; preds = %225
  %227 = getelementptr inbounds i8, i8* %8, i64 %220
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i32
  %230 = mul nsw i32 %224, %229
  %231 = sdiv i32 %230, 255
  br label %246

232:                                              ; preds = %219
  %233 = getelementptr inbounds i8, i8* %5, i64 %220
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = mul nsw i32 %224, %235
  br i1 %112, label %243, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds i8, i8* %8, i64 %220
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i32
  %241 = mul nsw i32 %236, %240
  %242 = sdiv i32 %241, 255
  br label %243

243:                                              ; preds = %232, %237
  %244 = phi i32 [ %242, %237 ], [ %236, %232 ]
  %245 = sdiv i32 %244, 255
  br label %246

246:                                              ; preds = %226, %225, %243
  %247 = phi i32 [ %245, %243 ], [ %231, %226 ], [ %224, %225 ]
  switch i32 %247, label %263 [
    i32 0, label %292
    i32 255, label %248
  ]

248:                                              ; preds = %246
  br i1 %114, label %249, label %252

249:                                              ; preds = %248
  %250 = load i32, i32* %118, align 4
  %251 = bitcast i8* %221 to i32*
  store i32 %250, i32* %251, align 4
  br label %292

252:                                              ; preds = %248
  br i1 %105, label %253, label %292

253:                                              ; preds = %252
  %254 = load i32, i32* %115, align 4
  %255 = trunc i32 %254 to i8
  %256 = getelementptr inbounds i8, i8* %221, i64 1
  store i8 %255, i8* %221, align 1
  %257 = load i32, i32* %116, align 8
  %258 = trunc i32 %257 to i8
  %259 = getelementptr inbounds i8, i8* %221, i64 2
  store i8 %258, i8* %256, align 1
  %260 = load i32, i32* %117, align 4
  %261 = trunc i32 %260 to i8
  %262 = getelementptr inbounds i8, i8* %221, i64 3
  store i8 %261, i8* %259, align 1
  br label %294

263:                                              ; preds = %246
  %264 = load i8, i8* %221, align 1
  %265 = zext i8 %264 to i32
  %266 = sub nsw i32 255, %247
  %267 = mul nsw i32 %266, %265
  %268 = load i32, i32* %115, align 4
  %269 = mul nsw i32 %268, %247
  %270 = add nsw i32 %267, %269
  %271 = sdiv i32 %270, 255
  %272 = trunc i32 %271 to i8
  store i8 %272, i8* %221, align 1
  %273 = getelementptr inbounds i8, i8* %221, i64 1
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i32
  %276 = mul nsw i32 %266, %275
  %277 = load i32, i32* %116, align 8
  %278 = mul nsw i32 %277, %247
  %279 = add nsw i32 %276, %278
  %280 = sdiv i32 %279, 255
  %281 = trunc i32 %280 to i8
  store i8 %281, i8* %273, align 1
  %282 = getelementptr inbounds i8, i8* %221, i64 2
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i32
  %285 = mul nsw i32 %266, %284
  %286 = load i32, i32* %117, align 4
  %287 = mul nsw i32 %286, %247
  %288 = add nsw i32 %285, %287
  %289 = sdiv i32 %288, 255
  %290 = trunc i32 %289 to i8
  store i8 %290, i8* %282, align 1
  %291 = getelementptr inbounds i8, i8* %282, i64 %121
  br label %294

292:                                              ; preds = %246, %252, %249
  %293 = getelementptr inbounds i8, i8* %221, i64 %119
  br label %294

294:                                              ; preds = %292, %263, %253
  %295 = phi i8* [ %293, %292 ], [ %262, %253 ], [ %291, %263 ]
  %296 = add nuw nsw i64 %220, 1
  %297 = trunc i64 %296 to i32
  %298 = icmp sgt i32 %17, %297
  br i1 %298, label %219, label %299

299:                                              ; preds = %99, %294, %213, %24, %109, %123
  ret void
}

declare zeroext i1 @_ZNK11CFX_DIBBase14GetOverlapRectERiS0_S0_S0_iiS0_S0_PK11CFX_ClipRgn(%class.CFX_DIBBase*, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), i32, i32, i32* dereferenceable(4), i32* dereferenceable(4), %class.CFX_ClipRgn*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN11CFX_ClipRgnC1ERKS_(%class.CFX_ClipRgn*, %class.CFX_ClipRgn* dereferenceable(32)) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI11CFX_ClipRgnNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr.1"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.1"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.1"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.1"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.1"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.1"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.1"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.1"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.1"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.1"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.1"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.CFX_ClipRgn** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.1"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.1"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.1"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.1"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !42

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.1"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.1"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.1"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.1"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.1"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.1"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.1"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.1"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.1"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.1"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.1"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.1"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.1"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.1"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.1"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.1"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.1"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.1"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.1"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.1"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.1"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.1"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.1"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.1"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.1"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.1"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.1"*
  %138 = icmp eq %"class.std::__1::unique_ptr.1"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.1"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.CFX_ClipRgn*, %class.CFX_ClipRgn** %142, align 8
  store %class.CFX_ClipRgn* null, %class.CFX_ClipRgn** %142, align 8
  %144 = icmp eq %class.CFX_ClipRgn* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN11CFX_ClipRgnD1Ev(%class.CFX_ClipRgn* nonnull %143) #14
  %146 = getelementptr inbounds %class.CFX_ClipRgn, %class.CFX_ClipRgn* %143, i64 0, i32 0
  tail call void @_ZdlPv(i8* %146) #15
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.1"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #15
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN11CFX_ClipRgnD1Ev(%class.CFX_ClipRgn*) unnamed_addr #2

declare void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6pdfium3agg22rasterizer_scanline_aa14sweep_scanlineINS0_10scanline_uIhEEEEbRT_b(%"class.pdfium::agg::rasterizer_scanline_aa"*, %"class.pdfium::agg::scanline_u"* dereferenceable(40), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 12
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 0, i32 14
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %7, %9
  br i1 %10, label %237, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %1, i64 0, i32 2
  %13 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %1, i64 0, i32 5
  %14 = bitcast %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %13 to i64*
  %15 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %1, i64 0, i32 6
  %16 = bitcast %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %15 to i64*
  %17 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 0, i32 12
  %18 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 0, i32 7, i32 2
  %19 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 0, i32 6, i32 2
  %20 = bitcast i32* %4 to i8*
  %21 = bitcast i32* %5 to i8*
  %22 = getelementptr inbounds %"class.pdfium::agg::rasterizer_scanline_aa", %"class.pdfium::agg::rasterizer_scanline_aa"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %1, i64 0, i32 0
  %24 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %1, i64 0, i32 4
  br label %25

25:                                               ; preds = %227, %11
  store i32 2147483632, i32* %12, align 8
  %26 = load i64, i64* %14, align 8
  store i64 %26, i64* %16, align 8
  %27 = load i32, i32* %6, align 8
  %28 = load i32, i32* %17, align 4
  %29 = sub i32 %27, %28
  %30 = load %"struct.pdfium::agg::outline_aa::sorted_y"*, %"struct.pdfium::agg::outline_aa::sorted_y"** %18, align 8
  %31 = zext i32 %29 to i64
  %32 = getelementptr inbounds %"struct.pdfium::agg::outline_aa::sorted_y", %"struct.pdfium::agg::outline_aa::sorted_y"* %30, i64 %31, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = load %"struct.pdfium::agg::cell_aa"**, %"struct.pdfium::agg::cell_aa"*** %19, align 8
  %35 = getelementptr inbounds %"struct.pdfium::agg::outline_aa::sorted_y", %"struct.pdfium::agg::outline_aa::sorted_y"* %30, i64 %31, i32 0
  %36 = load i32, i32* %35, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #14
  store i32 0, i32* %4, align 4
  %37 = icmp eq i32 %33, 0
  br i1 %37, label %220, label %38

38:                                               ; preds = %25
  %39 = zext i32 %36 to i64
  %40 = getelementptr inbounds %"struct.pdfium::agg::cell_aa"*, %"struct.pdfium::agg::cell_aa"** %34, i64 %39
  br label %41

41:                                               ; preds = %38, %216
  %42 = phi %"struct.pdfium::agg::cell_aa"** [ %217, %216 ], [ %40, %38 ]
  %43 = phi i32 [ %218, %216 ], [ %33, %38 ]
  %44 = load %"struct.pdfium::agg::cell_aa"*, %"struct.pdfium::agg::cell_aa"** %42, align 8
  %45 = getelementptr inbounds %"struct.pdfium::agg::cell_aa", %"struct.pdfium::agg::cell_aa"* %44, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #14
  %47 = getelementptr inbounds %"struct.pdfium::agg::cell_aa", %"struct.pdfium::agg::cell_aa"* %44, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %5, align 4
  %49 = getelementptr inbounds %"struct.pdfium::agg::cell_aa", %"struct.pdfium::agg::cell_aa"* %44, i64 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = call zeroext i1 @_ZN6pdfium3agg22rasterizer_scanline_aa8safe_addEPii(i32* nonnull %4, i32 %50) #14
  br i1 %51, label %52, label %55

52:                                               ; preds = %41
  %53 = add i32 %43, -1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %91, label %72

55:                                               ; preds = %41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #14
  br label %220

56:                                               ; preds = %67
  %57 = add i32 %60, -1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %215, label %59

59:                                               ; preds = %56, %72
  %60 = phi i32 [ %73, %72 ], [ %57, %56 ]
  %61 = phi %"struct.pdfium::agg::cell_aa"** [ %75, %72 ], [ %62, %56 ]
  %62 = getelementptr inbounds %"struct.pdfium::agg::cell_aa"*, %"struct.pdfium::agg::cell_aa"** %61, i64 1
  %63 = load %"struct.pdfium::agg::cell_aa"*, %"struct.pdfium::agg::cell_aa"** %62, align 8
  %64 = getelementptr inbounds %"struct.pdfium::agg::cell_aa", %"struct.pdfium::agg::cell_aa"* %63, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %46
  br i1 %66, label %67, label %86

67:                                               ; preds = %59
  br i1 %76, label %68, label %56

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"struct.pdfium::agg::cell_aa", %"struct.pdfium::agg::cell_aa"* %63, i64 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = call zeroext i1 @_ZN6pdfium3agg22rasterizer_scanline_aa8safe_addEPii(i32* nonnull %5, i32 %70) #14
  br i1 %71, label %77, label %81

72:                                               ; preds = %52, %81
  %73 = phi i32 [ %83, %81 ], [ %53, %52 ]
  %74 = phi i8 [ %82, %81 ], [ 0, %52 ]
  %75 = phi %"struct.pdfium::agg::cell_aa"** [ %62, %81 ], [ %42, %52 ]
  %76 = icmp eq i8 %74, 0
  br label %59

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"struct.pdfium::agg::cell_aa", %"struct.pdfium::agg::cell_aa"* %63, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = call zeroext i1 @_ZN6pdfium3agg22rasterizer_scanline_aa8safe_addEPii(i32* nonnull %4, i32 %79) #14
  br i1 %80, label %81, label %85

81:                                               ; preds = %77, %68
  %82 = phi i8 [ 1, %68 ], [ 0, %77 ]
  %83 = add i32 %73, -1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %86, label %72

85:                                               ; preds = %77
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #14
  br label %220

86:                                               ; preds = %81, %59
  %87 = phi i8 [ %74, %59 ], [ %82, %81 ]
  %88 = phi i32 [ %60, %59 ], [ 0, %81 ]
  %89 = phi i1 [ true, %59 ], [ false, %81 ]
  %90 = icmp eq i8 %87, 0
  br i1 %90, label %91, label %216

91:                                               ; preds = %86, %52
  %92 = phi %"struct.pdfium::agg::cell_aa"* [ %63, %86 ], [ %44, %52 ]
  %93 = phi %"struct.pdfium::agg::cell_aa"** [ %62, %86 ], [ %42, %52 ]
  %94 = phi i1 [ %89, %86 ], [ false, %52 ]
  %95 = phi i32 [ %88, %86 ], [ 0, %52 ]
  %96 = load i32, i32* %5, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %152, label %98

98:                                               ; preds = %91
  %99 = load i32, i32* %4, align 4
  %100 = call i32 @_ZN6pdfium3agg22rasterizer_scanline_aa14calculate_areaEii(i32 %99, i32 9) #14
  %101 = load i32, i32* %5, align 4
  %102 = sub nsw i32 %100, %101
  %103 = ashr i32 %102, 9
  %104 = icmp slt i32 %102, 0
  %105 = sub nsw i32 0, %103
  %106 = select i1 %104, i32 %105, i32 %103
  %107 = load i32, i32* %22, align 8
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %114

109:                                              ; preds = %98
  %110 = and i32 %106, 511
  %111 = icmp ugt i32 %110, 256
  %112 = sub nuw nsw i32 512, %110
  %113 = select i1 %111, i32 %112, i32 %110
  br label %114

114:                                              ; preds = %98, %109
  %115 = phi i32 [ %106, %98 ], [ %113, %109 ]
  %116 = icmp sgt i32 %115, 127
  %117 = select i1 %116, i32 255, i32 0
  %118 = select i1 %2, i32 %117, i32 %115
  %119 = icmp slt i32 %118, 255
  %120 = select i1 %119, i32 %118, i32 255
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %150, label %122

122:                                              ; preds = %114
  %123 = load i32, i32* %23, align 8
  %124 = sub nsw i32 %46, %123
  %125 = trunc i32 %120 to i8
  %126 = load i8*, i8** %24, align 8
  %127 = sext i32 %124 to i64
  %128 = getelementptr inbounds i8, i8* %126, i64 %127
  store i8 %125, i8* %128, align 1
  %129 = load i32, i32* %12, align 8
  %130 = add nsw i32 %129, 1
  %131 = icmp eq i32 %124, %130
  %132 = load %"struct.pdfium::agg::scanline_u<unsigned char>::span"*, %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %15, align 8
  br i1 %131, label %133, label %137

133:                                              ; preds = %122
  %134 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %132, i64 0, i32 1
  %135 = load i16, i16* %134, align 2
  %136 = add i16 %135, 1
  store i16 %136, i16* %134, align 2
  br label %149

137:                                              ; preds = %122
  %138 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %132, i64 1
  store %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %138, %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %15, align 8
  %139 = load i32, i32* %23, align 8
  %140 = add nsw i32 %139, %124
  %141 = trunc i32 %140 to i16
  %142 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %138, i64 0, i32 0
  store i16 %141, i16* %142, align 8
  %143 = load %"struct.pdfium::agg::scanline_u<unsigned char>::span"*, %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %15, align 8
  %144 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %143, i64 0, i32 1
  store i16 1, i16* %144, align 2
  %145 = load i8*, i8** %24, align 8
  %146 = getelementptr inbounds i8, i8* %145, i64 %127
  %147 = load %"struct.pdfium::agg::scanline_u<unsigned char>::span"*, %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %15, align 8
  %148 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %147, i64 0, i32 2
  store i8* %146, i8** %148, align 8
  br label %149

149:                                              ; preds = %133, %137
  store i32 %124, i32* %12, align 8
  br label %150

150:                                              ; preds = %114, %149
  %151 = add nsw i32 %46, 1
  br label %152

152:                                              ; preds = %91, %150
  %153 = phi i32 [ %151, %150 ], [ %46, %91 ]
  br i1 %94, label %154, label %216

154:                                              ; preds = %152
  %155 = getelementptr inbounds %"struct.pdfium::agg::cell_aa", %"struct.pdfium::agg::cell_aa"* %92, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = icmp sgt i32 %156, %153
  br i1 %157, label %158, label %216

158:                                              ; preds = %154
  %159 = load i32, i32* %4, align 4
  %160 = call i32 @_ZN6pdfium3agg22rasterizer_scanline_aa14calculate_areaEii(i32 %159, i32 9) #14
  %161 = ashr i32 %160, 9
  %162 = icmp slt i32 %160, 0
  %163 = sub nsw i32 0, %161
  %164 = select i1 %162, i32 %163, i32 %161
  %165 = load i32, i32* %22, align 8
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %167, label %172

167:                                              ; preds = %158
  %168 = and i32 %164, 511
  %169 = icmp ugt i32 %168, 256
  %170 = sub nuw nsw i32 512, %168
  %171 = select i1 %169, i32 %170, i32 %168
  br label %172

172:                                              ; preds = %158, %167
  %173 = phi i32 [ %164, %158 ], [ %171, %167 ]
  %174 = icmp sgt i32 %173, 127
  %175 = select i1 %174, i32 255, i32 0
  %176 = select i1 %2, i32 %175, i32 %173
  %177 = icmp slt i32 %176, 255
  %178 = select i1 %177, i32 %176, i32 255
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %216, label %180

180:                                              ; preds = %172
  %181 = load i32, i32* %155, align 4
  %182 = sub nsw i32 %181, %153
  %183 = load i32, i32* %23, align 8
  %184 = sub nsw i32 %153, %183
  %185 = load i8*, i8** %24, align 8
  %186 = sext i32 %184 to i64
  %187 = getelementptr inbounds i8, i8* %185, i64 %186
  %188 = trunc i32 %178 to i8
  %189 = zext i32 %182 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %187, i8 %188, i64 %189, i1 false) #14
  %190 = load i32, i32* %12, align 8
  %191 = add nsw i32 %190, 1
  %192 = icmp eq i32 %184, %191
  %193 = load %"struct.pdfium::agg::scanline_u<unsigned char>::span"*, %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %15, align 8
  br i1 %192, label %194, label %199

194:                                              ; preds = %180
  %195 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %193, i64 0, i32 1
  %196 = load i16, i16* %195, align 2
  %197 = trunc i32 %182 to i16
  %198 = add i16 %196, %197
  store i16 %198, i16* %195, align 2
  br label %212

199:                                              ; preds = %180
  %200 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %193, i64 1
  store %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %200, %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %15, align 8
  %201 = load i32, i32* %23, align 8
  %202 = add nsw i32 %201, %184
  %203 = trunc i32 %202 to i16
  %204 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %200, i64 0, i32 0
  store i16 %203, i16* %204, align 8
  %205 = trunc i32 %182 to i16
  %206 = load %"struct.pdfium::agg::scanline_u<unsigned char>::span"*, %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %15, align 8
  %207 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %206, i64 0, i32 1
  store i16 %205, i16* %207, align 2
  %208 = load i8*, i8** %24, align 8
  %209 = getelementptr inbounds i8, i8* %208, i64 %186
  %210 = load %"struct.pdfium::agg::scanline_u<unsigned char>::span"*, %"struct.pdfium::agg::scanline_u<unsigned char>::span"** %15, align 8
  %211 = getelementptr inbounds %"struct.pdfium::agg::scanline_u<unsigned char>::span", %"struct.pdfium::agg::scanline_u<unsigned char>::span"* %210, i64 0, i32 2
  store i8* %209, i8** %211, align 8
  br label %212

212:                                              ; preds = %194, %199
  %213 = add i32 %182, -1
  %214 = add i32 %213, %184
  store i32 %214, i32* %12, align 8
  br label %216

215:                                              ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #14
  br label %220

216:                                              ; preds = %152, %154, %172, %86, %212
  %217 = phi %"struct.pdfium::agg::cell_aa"** [ %93, %212 ], [ %93, %152 ], [ %93, %154 ], [ %93, %172 ], [ %62, %86 ]
  %218 = phi i32 [ %95, %212 ], [ 0, %152 ], [ %95, %154 ], [ %95, %172 ], [ %88, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #14
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %41

220:                                              ; preds = %216, %215, %25, %85, %55
  %221 = load i64, i64* %16, align 8
  %222 = load i64, i64* %14, align 8
  %223 = sub i64 %221, %222
  %224 = lshr exact i64 %223, 4
  %225 = trunc i64 %224 to i32
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %232

227:                                              ; preds = %220
  %228 = load i32, i32* %6, align 8
  %229 = add nsw i32 %228, 1
  store i32 %229, i32* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #14
  %230 = load i32, i32* %8, align 4
  %231 = icmp slt i32 %228, %230
  br i1 %231, label %25, label %237

232:                                              ; preds = %220
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #14
  %233 = load i32, i32* %6, align 8
  %234 = getelementptr inbounds %"class.pdfium::agg::scanline_u", %"class.pdfium::agg::scanline_u"* %1, i64 0, i32 3
  store i32 %233, i32* %234, align 4
  %235 = load i32, i32* %6, align 8
  %236 = add nsw i32 %235, 1
  store i32 %236, i32* %6, align 8
  br label %237

237:                                              ; preds = %227, %3, %232
  %238 = phi i1 [ true, %232 ], [ false, %3 ], [ false, %227 ]
  ret i1 %238
}

declare void @_ZN6pdfium3agg10outline_aa10sort_cellsEv(%"class.pdfium::agg::outline_aa"*) local_unnamed_addr #6

declare zeroext i1 @_ZN6pdfium3agg22rasterizer_scanline_aa8safe_addEPii(i32*, i32) local_unnamed_addr #6

declare i32 @_ZN6pdfium3agg22rasterizer_scanline_aa14calculate_areaEii(i32, i32) local_unnamed_addr #6

declare void @_ZN11CFX_ClipRgnC1Eii(%class.CFX_ClipRgn*, i32, i32) unnamed_addr #6

declare void @_ZN11CFX_DIBBase12GetAlphaMaskEv(%"class.fxcrt::RetainPtr"* sret, %class.CFX_DIBBase*) local_unnamed_addr #6

declare void @_ZN17CFX_ImageRendererC1ERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEPK11CFX_ClipRgnRKNS1_I11CFX_DIBBaseEEijRK10CFX_MatrixRK21FXDIB_ResampleOptionsb(%class.CFX_ImageRenderer*, %"class.fxcrt::RetainPtr"* dereferenceable(8), %class.CFX_ClipRgn*, %"class.fxcrt::RetainPtr.33"* dereferenceable(8), i32, i32, %class.CFX_Matrix* dereferenceable(24), %struct.FXDIB_ResampleOptions* dereferenceable(4), i1 zeroext) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN17CFX_ImageRendererD1Ev(%class.CFX_ImageRenderer*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = !{i8 0, i8 2}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11, !9}
!11 = !{!"llvm.loop.unroll.runtime.disable"}
!12 = !{!"branch_weights", i32 2000, i32 1}
!13 = !{i32 -2143766330}
!14 = !{i32 -2143766309}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6pdfium12_GLOBAL__N_18HardClipERK13CFX_PTemplateIfE: argument 0"}
!17 = distinct !{!17, !"_ZN6pdfium12_GLOBAL__N_18HardClipERK13CFX_PTemplateIfE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN6pdfium12_GLOBAL__N_18HardClipERK13CFX_PTemplateIfE: argument 0"}
!20 = distinct !{!20, !"_ZN6pdfium12_GLOBAL__N_18HardClipERK13CFX_PTemplateIfE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN6pdfium12_GLOBAL__N_121GetClipMaskFromRegionEPK11CFX_ClipRgn: argument 0"}
!23 = distinct !{!23, !"_ZN6pdfium12_GLOBAL__N_121GetClipMaskFromRegionEPK11CFX_ClipRgn"}
!24 = !{!25, !22}
!25 = distinct !{!25, !26, !"_ZNK11CFX_ClipRgn7GetMaskEv: argument 0"}
!26 = distinct !{!26, !"_ZNK11CFX_ClipRgn7GetMaskEv"}
!27 = !{!"branch_weights", i32 4000000, i32 2001, i32 2000}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!30 = distinct !{!30, !"_ZNK10CFX_MatrixmlERKS_"}
!31 = distinct !{!31, !9}
!32 = distinct !{!32, !6}
!33 = distinct !{!33, !11, !9}
!34 = distinct !{!34, !6}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK11CFX_ClipRgn7GetMaskEv: argument 0"}
!37 = distinct !{!37, !"_ZNK11CFX_ClipRgn7GetMaskEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!40 = distinct !{!40, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!41 = distinct !{!41, !6}
!42 = distinct !{!42, !6}
