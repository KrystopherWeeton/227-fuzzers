; ModuleID = 'gen/third_party/libaddressinput/en_messages.cc'
source_filename = "gen/third_party/libaddressinput/en_messages.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c"Country / Region\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"City\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"Post Town\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Suburb\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"Townland\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"Village / Township\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"Street address\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"Eircode\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"PIN code\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"Postal code\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"ZIP code\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"Area\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"County\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"Department\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"District\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"Do/Si\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"Emirate\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"Island\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"Oblast\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"Parish\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"Prefecture\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"Province\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"State\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"Organization\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"Name\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"Neighborhood\00", align 1
@.str.26 = private unnamed_addr constant [28 x i8] c"You can't leave this empty.\00", align 1
@.str.27 = private unnamed_addr constant [99 x i8] c"You must provide a postal code, for example $1. Don't know your postal code? Find it out $2here$3.\00", align 1
@.str.28 = private unnamed_addr constant [48 x i8] c"You must provide a postal code, for example $1.\00", align 1
@.str.29 = private unnamed_addr constant [93 x i8] c"You must provide a ZIP code, for example $1. Don't know your ZIP code? Find it out $2here$3.\00", align 1
@.str.30 = private unnamed_addr constant [45 x i8] c"You must provide a ZIP code, for example $1.\00", align 1
@.str.31 = private unnamed_addr constant [54 x i8] c"$1 is not recognized as a known value for this field.\00", align 1
@.str.32 = private unnamed_addr constant [130 x i8] c"This postal code format is not recognized. Example of a valid postal code: $1. Don't know your postal code? Find it out $2here$3.\00", align 1
@.str.33 = private unnamed_addr constant [79 x i8] c"This postal code format is not recognized. Example of a valid postal code: $1.\00", align 1
@.str.34 = private unnamed_addr constant [43 x i8] c"This postal code format is not recognized.\00", align 1
@.str.35 = private unnamed_addr constant [121 x i8] c"This ZIP code format is not recognized. Example of a valid ZIP code: $1. Don't know your ZIP code? Find it out $2here$3.\00", align 1
@.str.36 = private unnamed_addr constant [73 x i8] c"This ZIP code format is not recognized. Example of a valid ZIP code: $1.\00", align 1
@.str.37 = private unnamed_addr constant [40 x i8] c"This ZIP code format is not recognized.\00", align 1
@.str.38 = private unnamed_addr constant [119 x i8] c"This postal code does not appear to match the rest of this address. Don't know your postal code? Find it out $1here$2.\00", align 1
@.str.39 = private unnamed_addr constant [68 x i8] c"This postal code does not appear to match the rest of this address.\00", align 1
@.str.40 = private unnamed_addr constant [113 x i8] c"This ZIP code does not appear to match the rest of this address. Don't know your ZIP code? Find it out $1here$2.\00", align 1
@.str.41 = private unnamed_addr constant [65 x i8] c"This ZIP code does not appear to match the rest of this address.\00", align 1
@.str.42 = private unnamed_addr constant [97 x i8] c"This address line appears to contain a post office box. Please use a street or building address.\00", align 1
@switch.table._Z9GetStringi = private unnamed_addr constant [43 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.42, i64 0, i64 0)], align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_Z9GetStringi(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -25150
  %3 = icmp ult i32 %2, 43
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [43 x i8*], [43 x i8*]* @switch.table._Z9GetStringi, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  ret i8* %7

8:                                                ; preds = %1
  ret i8* null
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
