; ModuleID = '../../third_party/skia/src/core/SkRasterClip.cpp'
source_filename = "../../third_party/skia/src/core/SkRasterClip.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkRasterClip = type { %class.SkRegion, %class.SkAAClip, i8, i8, i8, %struct.SkIRect*, %class.sk_sp.13 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type { %"struct.std::__1::atomic", i32, i32, i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkAAClip = type { %struct.SkIRect, %"struct.SkAAClip::RunHead"* }
%"struct.SkAAClip::RunHead" = type opaque
%class.sk_sp.13 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkAAClipBlitterWrapper = type { %class.SkRegion, %class.SkAAClipBlitter, %class.SkRegion*, %class.SkBlitter* }
%class.SkAAClipBlitter = type { %class.SkBlitter, %class.SkBlitter*, %class.SkAAClip*, %struct.SkIRect, i16*, i8*, %class.SkAutoSMalloc, i8* }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.SkAutoSMalloc = type { i8*, i64, [256 x i32] }
%class.SkConservativeClip = type { %struct.SkIRect, i8, i8, %struct.SkIRect* }
%struct.SkRect = type { float, float, float, float }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

@_ZTV15SkAAClipBlitter = external unnamed_addr constant { [16 x i8*] }, align 8
@switch.table._ZN18SkConservativeClip6opPathERK6SkPathRK8SkMatrixRK7SkIRectN8SkRegion2OpEb = private unnamed_addr constant [5 x i32] [i32 1, i32 2, i32 2, i32 5, i32 5], align 4

@_ZN12SkRasterClipC1ERKS_ = hidden unnamed_addr alias void (%class.SkRasterClip*, %class.SkRasterClip*), void (%class.SkRasterClip*, %class.SkRasterClip*)* @_ZN12SkRasterClipC2ERKS_
@_ZN12SkRasterClipC1ERK8SkRegion = hidden unnamed_addr alias void (%class.SkRasterClip*, %class.SkRegion*), void (%class.SkRasterClip*, %class.SkRegion*)* @_ZN12SkRasterClipC2ERK8SkRegion
@_ZN12SkRasterClipC1ERK7SkIRect = hidden unnamed_addr alias void (%class.SkRasterClip*, %struct.SkIRect*), void (%class.SkRasterClip*, %struct.SkIRect*)* @_ZN12SkRasterClipC2ERK7SkIRect
@_ZN12SkRasterClipC1Ev = hidden unnamed_addr alias void (%class.SkRasterClip*), void (%class.SkRasterClip*)* @_ZN12SkRasterClipC2Ev
@_ZN12SkRasterClipD1Ev = hidden unnamed_addr alias void (%class.SkRasterClip*), void (%class.SkRasterClip*)* @_ZN12SkRasterClipD2Ev
@_ZN22SkAAClipBlitterWrapperC1Ev = hidden unnamed_addr alias void (%class.SkAAClipBlitterWrapper*), void (%class.SkAAClipBlitterWrapper*)* @_ZN22SkAAClipBlitterWrapperC2Ev
@_ZN22SkAAClipBlitterWrapperC1ERK12SkRasterClipP9SkBlitter = hidden unnamed_addr alias void (%class.SkAAClipBlitterWrapper*, %class.SkRasterClip*, %class.SkBlitter*), void (%class.SkAAClipBlitterWrapper*, %class.SkRasterClip*, %class.SkBlitter*)* @_ZN22SkAAClipBlitterWrapperC2ERK12SkRasterClipP9SkBlitter
@_ZN22SkAAClipBlitterWrapperC1EPK8SkAAClipP9SkBlitter = hidden unnamed_addr alias void (%class.SkAAClipBlitterWrapper*, %class.SkAAClip*, %class.SkBlitter*), void (%class.SkAAClipBlitterWrapper*, %class.SkAAClip*, %class.SkBlitter*)* @_ZN22SkAAClipBlitterWrapperC2EPK8SkAAClipP9SkBlitter

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkConservativeClip6opRectERK6SkRectRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkConservativeClip*, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readonly dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkIRect, align 8
  %8 = alloca %struct.SkRect, align 4
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = trunc i32 %10 to i8
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %6
  %14 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #6
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %9, align 4
  br label %16

16:                                               ; preds = %6, %13
  %17 = phi i32 [ %15, %13 ], [ %10, %6 ]
  %18 = and i32 %17, 12
  %19 = icmp eq i32 %18, 0
  %20 = zext i1 %5 to i8
  %21 = getelementptr inbounds %class.SkConservativeClip, %class.SkConservativeClip* %0, i64 0, i32 2
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = or i8 %22, %20
  store i8 %23, i8* %21, align 1
  %24 = icmp eq i32 %4, 1
  %25 = and i1 %24, %19
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %class.SkConservativeClip, %class.SkConservativeClip* %0, i64 0, i32 1
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = and i8 %28, %26
  store i8 %29, i8* %27, align 8
  %30 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #6
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 2
  %32 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false)
  %33 = add i32 %4, -1
  %34 = icmp ult i32 %33, 5
  br i1 %34, label %35, label %114

35:                                               ; preds = %16
  %36 = sext i32 %33 to i64
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN18SkConservativeClip6opPathERK6SkPathRK8SkMatrixRK7SkIRectN8SkRegion2OpEb, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #6
  %40 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 0
  %41 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 1
  %42 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 2
  %43 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 3
  %44 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %44, i8 -1, i64 16, i1 false)
  %45 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %2, %struct.SkRect* nonnull %8, %struct.SkRect* dereferenceable(16) %1, i32 1) #6
  %46 = load float, float* %40, align 4
  br i1 %5, label %47, label %67

47:                                               ; preds = %35
  %48 = call float @llvm.floor.f32(float %46) #6
  %49 = fcmp olt float %48, 0x41DFFFFFE0000000
  %50 = select i1 %49, float %48, float 0x41DFFFFFE0000000
  %51 = fcmp ogt float %50, 0xC1DFFFFFE0000000
  %52 = select i1 %51, float %50, float 0xC1DFFFFFE0000000
  %53 = load float, float* %41, align 4
  %54 = call float @llvm.floor.f32(float %53) #6
  %55 = fcmp olt float %54, 0x41DFFFFFE0000000
  %56 = select i1 %55, float %54, float 0x41DFFFFFE0000000
  %57 = fcmp ogt float %56, 0xC1DFFFFFE0000000
  %58 = select i1 %57, float %56, float 0xC1DFFFFFE0000000
  %59 = load float, float* %42, align 4
  %60 = call float @llvm.ceil.f32(float %59) #6
  %61 = fcmp olt float %60, 0x41DFFFFFE0000000
  %62 = select i1 %61, float %60, float 0x41DFFFFFE0000000
  %63 = fcmp ogt float %62, 0xC1DFFFFFE0000000
  %64 = select i1 %63, float %62, float 0xC1DFFFFFE0000000
  %65 = load float, float* %43, align 4
  %66 = call float @llvm.ceil.f32(float %65) #6
  br label %91

67:                                               ; preds = %35
  %68 = fadd float %46, 5.000000e-01
  %69 = call float @llvm.floor.f32(float %68) #6
  %70 = fcmp olt float %69, 0x41DFFFFFE0000000
  %71 = select i1 %70, float %69, float 0x41DFFFFFE0000000
  %72 = fcmp ogt float %71, 0xC1DFFFFFE0000000
  %73 = select i1 %72, float %71, float 0xC1DFFFFFE0000000
  %74 = load float, float* %41, align 4
  %75 = fadd float %74, 5.000000e-01
  %76 = call float @llvm.floor.f32(float %75) #6
  %77 = fcmp olt float %76, 0x41DFFFFFE0000000
  %78 = select i1 %77, float %76, float 0x41DFFFFFE0000000
  %79 = fcmp ogt float %78, 0xC1DFFFFFE0000000
  %80 = select i1 %79, float %78, float 0xC1DFFFFFE0000000
  %81 = load float, float* %42, align 4
  %82 = fadd float %81, 5.000000e-01
  %83 = call float @llvm.floor.f32(float %82) #6
  %84 = fcmp olt float %83, 0x41DFFFFFE0000000
  %85 = select i1 %84, float %83, float 0x41DFFFFFE0000000
  %86 = fcmp ogt float %85, 0xC1DFFFFFE0000000
  %87 = select i1 %86, float %85, float 0xC1DFFFFFE0000000
  %88 = load float, float* %43, align 4
  %89 = fadd float %88, 5.000000e-01
  %90 = call float @llvm.floor.f32(float %89) #6
  br label %91

91:                                               ; preds = %47, %67
  %92 = phi float [ %66, %47 ], [ %90, %67 ]
  %93 = phi float [ %58, %47 ], [ %80, %67 ]
  %94 = phi float [ %52, %47 ], [ %73, %67 ]
  %95 = phi float [ %64, %47 ], [ %87, %67 ]
  %96 = fptosi float %95 to i32
  %97 = fptosi float %94 to i32
  %98 = fptosi float %93 to i32
  %99 = fcmp olt float %92, 0x41DFFFFFE0000000
  %100 = select i1 %99, float %92, float 0x41DFFFFFE0000000
  %101 = fcmp ogt float %100, 0xC1DFFFFFE0000000
  %102 = select i1 %101, float %100, float 0xC1DFFFFFE0000000
  %103 = fptosi float %102 to i32
  %104 = zext i32 %98 to i64
  %105 = shl nuw i64 %104, 32
  %106 = zext i32 %97 to i64
  %107 = or i64 %105, %106
  %108 = zext i32 %103 to i64
  %109 = shl nuw i64 %108, 32
  %110 = zext i32 %96 to i64
  %111 = or i64 %109, %110
  %112 = bitcast %struct.SkIRect* %7 to i64*
  store i64 %107, i64* %112, align 8
  %113 = bitcast i32* %31 to i64*
  store i64 %111, i64* %113, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #6
  call void @_ZN18SkConservativeClip7opIRectERK7SkIRectN8SkRegion2OpE(%class.SkConservativeClip* %0, %struct.SkIRect* nonnull dereferenceable(16) %7, i32 %38)
  br label %114

114:                                              ; preds = %16, %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkConservativeClip7opIRectERK7SkIRectN8SkRegion2OpE(%class.SkConservativeClip*, %struct.SkIRect* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkRegion, align 8
  %5 = alloca %class.SkRegion, align 8
  %6 = alloca %class.SkRegion, align 8
  %7 = icmp eq i32 %2, 1
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %class.SkConservativeClip, %class.SkConservativeClip* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = and i8 %10, %8
  store i8 %11, i8* %9, align 8
  br i1 %7, label %12, label %17

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.SkConservativeClip, %class.SkConservativeClip* %0, i64 0, i32 0
  %14 = tail call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %13, %struct.SkIRect* dereferenceable(16) %13, %struct.SkIRect* dereferenceable(16) %1) #6
  br i1 %14, label %56, label %15

15:                                               ; preds = %12
  %16 = bitcast %class.SkConservativeClip* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 16, i1 false) #6
  br label %56

17:                                               ; preds = %3
  %18 = bitcast %class.SkRegion* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #6
  %19 = bitcast %class.SkRegion* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %4) #6
  %20 = bitcast %class.SkRegion* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #6
  %21 = getelementptr inbounds %class.SkConservativeClip, %class.SkConservativeClip* %0, i64 0, i32 0
  call void @_ZN8SkRegionC1ERK7SkIRect(%class.SkRegion* nonnull %5, %struct.SkIRect* dereferenceable(16) %21) #6
  %22 = bitcast %class.SkRegion* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #6
  call void @_ZN8SkRegionC1ERK7SkIRect(%class.SkRegion* nonnull %6, %struct.SkIRect* dereferenceable(16) %1) #6
  %23 = call zeroext i1 @_ZN8SkRegion2opERKS_S1_NS_2OpE(%class.SkRegion* nonnull %4, %class.SkRegion* nonnull dereferenceable(24) %5, %class.SkRegion* nonnull dereferenceable(24) %6, i32 %2) #6
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #6
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #6
  %24 = bitcast %class.SkConservativeClip* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 8 %18, i64 16, i1 false)
  %25 = icmp sgt i32 %2, 1
  br i1 %25, label %26, label %55

26:                                               ; preds = %17
  %27 = getelementptr inbounds %class.SkConservativeClip, %class.SkConservativeClip* %0, i64 0, i32 3
  %28 = load %struct.SkIRect*, %struct.SkIRect** %27, align 8
  %29 = icmp eq %struct.SkIRect* %28, null
  br i1 %29, label %55, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %28, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %28, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = sub nsw i64 %33, %36
  %38 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %28, i64 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %28, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = sub nsw i64 %40, %43
  %45 = icmp slt i64 %37, 1
  %46 = icmp slt i64 %44, 1
  %47 = or i1 %45, %46
  br i1 %47, label %55, label %48

48:                                               ; preds = %30
  %49 = or i64 %44, %37
  %50 = add nsw i64 %49, 2147483648
  %51 = icmp ugt i64 %50, 4294967295
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %21, %struct.SkIRect* dereferenceable(16) %21, %struct.SkIRect* nonnull dereferenceable(16) %28) #6
  br i1 %53, label %55, label %54

54:                                               ; preds = %52
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 16, i1 false) #6
  br label %55

55:                                               ; preds = %17, %26, %30, %48, %52, %54
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #6
  br label %56

56:                                               ; preds = %12, %15, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkConservativeClip7opRRectERK7SkRRectRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkConservativeClip*, %class.SkRRect* dereferenceable(52), %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readonly dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %22

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #6
  %17 = zext i8 %16 to i32
  store i32 %17, i32* %11, align 4
  br label %18

18:                                               ; preds = %10, %15
  %19 = phi i32 [ %17, %15 ], [ %12, %10 ]
  %20 = and i32 %19, 12
  %21 = icmp eq i32 %20, 0
  br label %22

22:                                               ; preds = %18, %6
  %23 = phi i1 [ false, %6 ], [ %21, %18 ]
  %24 = zext i1 %5 to i8
  %25 = getelementptr inbounds %class.SkConservativeClip, %class.SkConservativeClip* %0, i64 0, i32 2
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = or i8 %26, %24
  store i8 %27, i8* %25, align 1
  %28 = icmp eq i32 %4, 1
  %29 = and i1 %28, %23
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %class.SkConservativeClip, %class.SkConservativeClip* %0, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = and i8 %32, %30
  store i8 %33, i8* %31, align 8
  %34 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0
  tail call void @_ZN18SkConservativeClip6opRectERK6SkRectRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkConservativeClip* %0, %struct.SkRect* dereferenceable(16) %34, %class.SkMatrix* dereferenceable(40) %2, %struct.SkIRect* dereferenceable(16) %3, i32 %4, i1 zeroext %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkConservativeClip6opPathERK6SkPathRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkConservativeClip*, %class.SkPath* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readonly dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkIRect, align 8
  %8 = alloca %struct.SkRect, align 4
  %9 = zext i1 %5 to i8
  %10 = getelementptr inbounds %class.SkConservativeClip, %class.SkConservativeClip* %0, i64 0, i32 2
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = or i8 %11, %9
  store i8 %12, i8* %10, align 1
  %13 = getelementptr inbounds %class.SkConservativeClip, %class.SkConservativeClip* %0, i64 0, i32 1
  store i8 0, i8* %13, align 8
  %14 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #6
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 2
  %16 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %17 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  %18 = load i8, i8* %16, align 2
  %19 = and i8 %18, 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %6
  %22 = add i32 %4, -2
  %23 = icmp ult i32 %22, 4
  br i1 %23, label %27, label %97

24:                                               ; preds = %6
  %25 = add i32 %4, -1
  %26 = icmp ult i32 %25, 5
  br i1 %26, label %29, label %97

27:                                               ; preds = %21
  %28 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 4 %28, i64 16, i1 false)
  br label %95

29:                                               ; preds = %24
  %30 = sext i32 %25 to i64
  %31 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN18SkConservativeClip6opPathERK6SkPathRK8SkMatrixRK7SkIRectN8SkRegion2OpEb, i64 0, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #6
  %34 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 0
  %35 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 1
  %36 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 2
  %37 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 3
  %38 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %39 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %39, i8 -1, i64 16, i1 false)
  %40 = load %class.SkPathRef*, %class.SkPathRef** %38, align 8
  %41 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %40, i64 0, i32 9
  %42 = load i8, i8* %41, align 8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %53, label %44

44:                                               ; preds = %29
  %45 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %40, i64 0, i32 1
  %46 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %40, i64 0, i32 3, i32 0
  %47 = load %struct.SkPoint*, %struct.SkPoint** %46, align 8
  %48 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %40, i64 0, i32 3, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %45, %struct.SkPoint* %47, i32 %49) #6
  %51 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %40, i64 0, i32 10
  %52 = zext i1 %50 to i8
  store i8 %52, i8* %51, align 1
  store i8 0, i8* %41, align 8
  br label %53

53:                                               ; preds = %29, %44
  %54 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %40, i64 0, i32 1
  %55 = bitcast %struct.SkRect* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %55, i64 16, i1 false)
  %56 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %2, %struct.SkRect* nonnull %8, %struct.SkRect* nonnull dereferenceable(16) %8, i32 1) #6
  %57 = load float, float* %34, align 4
  %58 = call float @llvm.floor.f32(float %57) #6
  %59 = fcmp olt float %58, 0x41DFFFFFE0000000
  %60 = select i1 %59, float %58, float 0x41DFFFFFE0000000
  %61 = fcmp ogt float %60, 0xC1DFFFFFE0000000
  %62 = select i1 %61, float %60, float 0xC1DFFFFFE0000000
  %63 = fptosi float %62 to i32
  %64 = load float, float* %35, align 4
  %65 = call float @llvm.floor.f32(float %64) #6
  %66 = fcmp olt float %65, 0x41DFFFFFE0000000
  %67 = select i1 %66, float %65, float 0x41DFFFFFE0000000
  %68 = fcmp ogt float %67, 0xC1DFFFFFE0000000
  %69 = select i1 %68, float %67, float 0xC1DFFFFFE0000000
  %70 = fptosi float %69 to i32
  %71 = load float, float* %36, align 4
  %72 = call float @llvm.ceil.f32(float %71) #6
  %73 = fcmp olt float %72, 0x41DFFFFFE0000000
  %74 = select i1 %73, float %72, float 0x41DFFFFFE0000000
  %75 = fcmp ogt float %74, 0xC1DFFFFFE0000000
  %76 = select i1 %75, float %74, float 0xC1DFFFFFE0000000
  %77 = fptosi float %76 to i32
  %78 = load float, float* %37, align 4
  %79 = call float @llvm.ceil.f32(float %78) #6
  %80 = fcmp olt float %79, 0x41DFFFFFE0000000
  %81 = select i1 %80, float %79, float 0x41DFFFFFE0000000
  %82 = fcmp ogt float %81, 0xC1DFFFFFE0000000
  %83 = select i1 %82, float %81, float 0xC1DFFFFFE0000000
  %84 = fptosi float %83 to i32
  %85 = zext i32 %70 to i64
  %86 = shl nuw i64 %85, 32
  %87 = zext i32 %63 to i64
  %88 = or i64 %86, %87
  %89 = zext i32 %84 to i64
  %90 = shl nuw i64 %89, 32
  %91 = zext i32 %77 to i64
  %92 = or i64 %90, %91
  %93 = bitcast %struct.SkIRect* %7 to i64*
  store i64 %88, i64* %93, align 8
  %94 = bitcast i32* %15 to i64*
  store i64 %92, i64* %94, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #6
  br label %95

95:                                               ; preds = %53, %27
  %96 = phi i32 [ %32, %53 ], [ 5, %27 ]
  call void @_ZN18SkConservativeClip7opIRectERK7SkIRectN8SkRegion2OpE(%class.SkConservativeClip* %0, %struct.SkIRect* nonnull dereferenceable(16) %7, i32 %96)
  br label %97

97:                                               ; preds = %24, %21, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkConservativeClip8opRegionERK8SkRegionNS0_2OpE(%class.SkConservativeClip*, %class.SkRegion* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %5 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %4, align 8
  %6 = icmp eq %"struct.SkRegion::RunHead"* %5, null
  %7 = icmp eq i32 %2, 1
  %8 = and i1 %7, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %class.SkConservativeClip, %class.SkConservativeClip* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = and i8 %11, %9
  store i8 %12, i8* %10, align 8
  %13 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0
  tail call void @_ZN18SkConservativeClip7opIRectERK7SkIRectN8SkRegion2OpE(%class.SkConservativeClip* %0, %struct.SkIRect* dereferenceable(16) %13, i32 %2)
  ret void
}

declare void @_ZN8SkRegionC1Ev(%class.SkRegion*) unnamed_addr #2

declare zeroext i1 @_ZN8SkRegion2opERKS_S1_NS_2OpE(%class.SkRegion*, %class.SkRegion* dereferenceable(24), %class.SkRegion* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN8SkRegionC1ERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkRasterClipC2ERKS_(%class.SkRasterClip*, %class.SkRasterClip* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  tail call void @_ZN8SkRegionC1Ev(%class.SkRegion* %3) #6
  %4 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  tail call void @_ZN8SkAAClipC1Ev(%class.SkAAClip* %4) #6
  %5 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !2
  store i8 %7, i8* %5, align 8
  %8 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %9 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 3
  %10 = load i8, i8* %9, align 1, !range !2
  store i8 %10, i8* %8, align 1
  %11 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %12 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 4
  %13 = load i8, i8* %12, align 2, !range !2
  store i8 %13, i8* %11, align 2
  %14 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 5
  %15 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 5
  %16 = bitcast %struct.SkIRect** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %struct.SkIRect** %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 6, i32 0
  %20 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 6, i32 0
  %21 = load %class.SkShader*, %class.SkShader** %20, align 8
  %22 = icmp eq %class.SkShader* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %class.SkShader, %class.SkShader* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  %26 = load i8, i8* %5, align 8, !range !2
  br label %27

27:                                               ; preds = %2, %23
  %28 = phi i8 [ %7, %2 ], [ %26, %23 ]
  store %class.SkShader* %21, %class.SkShader** %19, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 0
  %32 = tail call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %3, %class.SkRegion* dereferenceable(24) %31) #6
  br label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 1
  %35 = tail call dereferenceable(24) %class.SkAAClip* @_ZN8SkAAClipaSERKS_(%class.SkAAClip* %4, %class.SkAAClip* dereferenceable(24) %34) #6
  br label %36

36:                                               ; preds = %33, %30
  ret void
}

declare void @_ZN8SkAAClipC1Ev(%class.SkAAClip*) unnamed_addr #2

declare dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %class.SkAAClip* @_ZN8SkAAClipaSERKS_(%class.SkAAClip*, %class.SkAAClip* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %class.SkRasterClip* @_ZN12SkRasterClipaSERKS_(%class.SkRasterClip* returned, %class.SkRasterClip* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  store i8 %4, i8* %6, align 8
  br i1 %5, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 0
  %9 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %10 = tail call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %9, %class.SkRegion* dereferenceable(24) %8) #6
  br label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 1
  %13 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %14 = tail call dereferenceable(24) %class.SkAAClip* @_ZN8SkAAClipaSERKS_(%class.SkAAClip* %13, %class.SkAAClip* dereferenceable(24) %12) #6
  br label %15

15:                                               ; preds = %11, %7
  %16 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 3
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  store i8 %17, i8* %18, align 1
  %19 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 4
  %20 = load i8, i8* %19, align 2, !range !2
  %21 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  store i8 %20, i8* %21, align 2
  %22 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 5
  %23 = bitcast %struct.SkIRect** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 5
  %26 = bitcast %struct.SkIRect** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = icmp eq %class.SkRasterClip* %0, %1
  br i1 %27, label %49, label %28

28:                                               ; preds = %15
  %29 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 6, i32 0
  %30 = load %class.SkShader*, %class.SkShader** %29, align 8
  %31 = icmp eq %class.SkShader* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.SkShader, %class.SkShader* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  br label %35

35:                                               ; preds = %32, %28
  %36 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 6, i32 0
  %37 = load %class.SkShader*, %class.SkShader** %36, align 8
  store %class.SkShader* %30, %class.SkShader** %36, align 8
  %38 = icmp eq %class.SkShader* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkShader, %class.SkShader* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = bitcast %class.SkShader* %37 to %class.SkRefCntBase*
  %45 = bitcast %class.SkShader* %37 to void (%class.SkRefCntBase*)***
  %46 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, i64 2
  %48 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, align 8
  tail call void %48(%class.SkRefCntBase* nonnull %44) #6
  br label %49

49:                                               ; preds = %15, %35, %39, %43
  ret %class.SkRasterClip* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkRasterClipC2ERK8SkRegion(%class.SkRasterClip*, %class.SkRegion* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  tail call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %3, %class.SkRegion* dereferenceable(24) %1) #6
  %4 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  tail call void @_ZN8SkAAClipC1Ev(%class.SkAAClip* %4) #6
  %5 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 5
  %6 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %7 = bitcast %struct.SkIRect** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store i8 1, i8* %6, align 8
  %8 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %8, align 8
  %10 = icmp eq %"struct.SkRegion::RunHead"* %9, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %11 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %12 = zext i1 %10 to i8
  store i8 %12, i8* %11, align 1
  %13 = xor i1 %10, true
  %14 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %15 = zext i1 %13 to i8
  store i8 %15, i8* %14, align 2
  ret void
}

declare void @_ZN8SkRegionC1ERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkRasterClipC2ERK7SkIRect(%class.SkRasterClip*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  tail call void @_ZN8SkRegionC1ERK7SkIRect(%class.SkRegion* %3, %struct.SkIRect* dereferenceable(16) %1) #6
  %4 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  tail call void @_ZN8SkAAClipC1Ev(%class.SkAAClip* %4) #6
  %5 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 5
  %6 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %7 = bitcast %struct.SkIRect** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store i8 1, i8* %6, align 8
  %8 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %8, align 8
  %10 = icmp eq %"struct.SkRegion::RunHead"* %9, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %11 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %12 = zext i1 %10 to i8
  store i8 %12, i8* %11, align 1
  %13 = xor i1 %10, true
  %14 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %15 = zext i1 %13 to i8
  store i8 %15, i8* %14, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkRasterClipC2Ev(%class.SkRasterClip*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  tail call void @_ZN8SkRegionC1Ev(%class.SkRegion* %2) #6
  %3 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  tail call void @_ZN8SkAAClipC1Ev(%class.SkAAClip* %3) #6
  %4 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 5
  %5 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %6 = bitcast %struct.SkIRect** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  store i8 1, i8* %5, align 8
  %7 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  store i8 0, i8* %8, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkRasterClipD2Ev(%class.SkRasterClip*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 6, i32 0
  %3 = load %class.SkShader*, %class.SkShader** %2, align 8
  %4 = icmp eq %class.SkShader* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkShader, %class.SkShader* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %class.SkShader* %3 to %class.SkRefCntBase*
  %11 = bitcast %class.SkShader* %3 to void (%class.SkRefCntBase*)***
  %12 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, i64 2
  %14 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, align 8
  tail call void %14(%class.SkRefCntBase* nonnull %10) #6
  br label %15

15:                                               ; preds = %1, %5, %9
  %16 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  tail call void @_ZN8SkAAClipD1Ev(%class.SkAAClip* %16) #6
  %17 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  tail call void @_ZN8SkRegionD1Ev(%class.SkRegion* %17) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkAAClipD1Ev(%class.SkAAClip*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12SkRasterClipeqERKS_(%class.SkRasterClip*, %class.SkRasterClip* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = icmp eq i8 %4, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %12 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZNK8SkRegioneqERKS_(%class.SkRegion* %11, %class.SkRegion* dereferenceable(24) %12) #6
  br label %18

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %16 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 1
  %17 = tail call zeroext i1 @_ZeqRK8SkAAClipS1_(%class.SkAAClip* dereferenceable(24) %15, %class.SkAAClip* dereferenceable(24) %16) #6
  br label %18

18:                                               ; preds = %10, %14, %2
  %19 = phi i1 [ false, %2 ], [ %13, %10 ], [ %17, %14 ]
  ret i1 %19
}

declare zeroext i1 @_ZNK8SkRegioneqERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZeqRK8SkAAClipS1_(%class.SkAAClip* dereferenceable(24), %class.SkAAClip* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK12SkRasterClip9isComplexEv(%class.SkRasterClip* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %7 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %6, align 8
  %8 = icmp ne %"struct.SkRegion::RunHead"* %7, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %9 = icmp ne %"struct.SkRegion::RunHead"* %7, null
  %10 = and i1 %9, %8
  br label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1, i32 1
  %13 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %12, align 8
  %14 = icmp ne %"struct.SkAAClip::RunHead"* %13, null
  br label %15

15:                                               ; preds = %11, %5
  %16 = phi i1 [ %10, %5 ], [ %14, %11 ]
  ret i1 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1, i32 0
  %7 = select i1 %4, %struct.SkIRect* %6, %struct.SkIRect* %5
  ret %struct.SkIRect* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkRasterClip8setEmptyEv(%class.SkRasterClip*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  store i8 1, i8* %2, align 8
  %3 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* %3) #6
  %5 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %6 = tail call zeroext i1 @_ZN8SkAAClip8setEmptyEv(%class.SkAAClip* %5) #6
  %7 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  store i8 0, i8* %8, align 2
  ret i1 false
}

declare zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion*) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkAAClip8setEmptyEv(%class.SkAAClip*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkRasterClip7setRectERK7SkIRect(%class.SkRasterClip*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZN8SkAAClip8setEmptyEv(%class.SkAAClip* %4) #6
  %6 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %6, %struct.SkIRect* dereferenceable(16) %1) #6
  %8 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %9 = zext i1 %7 to i8
  store i8 %9, i8* %8, align 2
  %10 = xor i1 %7, true
  %11 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %12 = zext i1 %10 to i8
  store i8 %12, i8* %11, align 1
  ret i1 %7
}

declare zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkRasterClip19setConservativeRectERK6SkRectRK7SkIRectb(%class.SkRasterClip*, %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkIRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %struct.SkIRect*
  %7 = xor i1 %3, true
  %8 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %9 = tail call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %8, %struct.SkIRect* dereferenceable(16) %2) #6
  %10 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = tail call float @llvm.floor.f32(float %12) #6
  %14 = fcmp olt float %13, 0x41DFFFFFE0000000
  %15 = select i1 %14, float %13, float 0x41DFFFFFE0000000
  %16 = fcmp ogt float %15, 0xC1DFFFFFE0000000
  %17 = select i1 %16, float %15, float 0xC1DFFFFFE0000000
  %18 = fptosi float %17 to i32
  %19 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = tail call float @llvm.floor.f32(float %20) #6
  %22 = fcmp olt float %21, 0x41DFFFFFE0000000
  %23 = select i1 %22, float %21, float 0x41DFFFFFE0000000
  %24 = fcmp ogt float %23, 0xC1DFFFFFE0000000
  %25 = select i1 %24, float %23, float 0xC1DFFFFFE0000000
  %26 = fptosi float %25 to i32
  %27 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %28 = load float, float* %27, align 4
  %29 = tail call float @llvm.ceil.f32(float %28) #6
  %30 = fcmp olt float %29, 0x41DFFFFFE0000000
  %31 = select i1 %30, float %29, float 0x41DFFFFFE0000000
  %32 = fcmp ogt float %31, 0xC1DFFFFFE0000000
  %33 = select i1 %32, float %31, float 0xC1DFFFFFE0000000
  %34 = fptosi float %33 to i32
  %35 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %36 = load float, float* %35, align 4
  %37 = tail call float @llvm.ceil.f32(float %36) #6
  %38 = fcmp olt float %37, 0x41DFFFFFE0000000
  %39 = select i1 %38, float %37, float 0x41DFFFFFE0000000
  %40 = fcmp ogt float %39, 0xC1DFFFFFE0000000
  %41 = select i1 %40, float %39, float 0xC1DFFFFFE0000000
  %42 = fptosi float %41 to i32
  %43 = zext i32 %26 to i64
  %44 = shl nuw i64 %43, 32
  %45 = zext i32 %18 to i64
  %46 = or i64 %44, %45
  %47 = zext i32 %42 to i64
  %48 = shl nuw i64 %47, 32
  %49 = zext i32 %34 to i64
  %50 = or i64 %48, %49
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %46, i64* %51, align 8
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  store i64 %50, i64* %52, align 8
  %53 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %54 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %53, align 8
  %55 = icmp eq %"struct.SkRegion::RunHead"* %54, null
  %56 = and i1 %55, %7
  br i1 %56, label %57, label %62

57:                                               ; preds = %4
  %58 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 0
  %59 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %58, %struct.SkIRect* dereferenceable(16) %58, %struct.SkIRect* nonnull dereferenceable(16) %6) #6
  br i1 %59, label %65, label %60

60:                                               ; preds = %57
  %61 = call zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* %8) #6
  br label %65

62:                                               ; preds = %4
  %63 = zext i1 %7 to i32
  %64 = call zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion* %8, %class.SkRegion* dereferenceable(24) %8, %struct.SkIRect* nonnull dereferenceable(16) %6, i32 %63) #6
  br label %65

65:                                               ; preds = %57, %60, %62
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  %66 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %65
  %70 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %53, align 8
  %71 = icmp eq %"struct.SkRegion::RunHead"* %70, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %72 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %73 = zext i1 %71 to i8
  store i8 %73, i8* %72, align 1
  br label %90

74:                                               ; preds = %65
  %75 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1, i32 1
  %76 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %75, align 8
  %77 = icmp eq %"struct.SkAAClip::RunHead"* %76, null
  %78 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %79 = zext i1 %77 to i8
  store i8 %79, i8* %78, align 1
  br i1 %77, label %94, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %82 = call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %81) #6
  br i1 %82, label %83, label %87

83:                                               ; preds = %80
  %84 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %81, i64 0, i32 0
  %85 = call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %8, %struct.SkIRect* dereferenceable(16) %84) #6
  %86 = call zeroext i1 @_ZN8SkAAClip8setEmptyEv(%class.SkAAClip* %81) #6
  store i8 1, i8* %66, align 8
  br label %90

87:                                               ; preds = %80
  %88 = load i8, i8* %66, align 8
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %69, %87, %83
  %91 = phi i8* [ %78, %87 ], [ %78, %83 ], [ %72, %69 ]
  %92 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %53, align 8
  %93 = icmp eq %"struct.SkRegion::RunHead"* %92, null
  br label %97

94:                                               ; preds = %74, %87
  %95 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %96 = call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %95) #6
  br label %97

97:                                               ; preds = %90, %94
  %98 = phi i8* [ %91, %90 ], [ %78, %94 ]
  %99 = phi i1 [ %93, %90 ], [ %96, %94 ]
  %100 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %101 = zext i1 %99 to i8
  store i8 %101, i8* %100, align 2
  %102 = load i8, i8* %98, align 1, !range !2
  %103 = icmp eq i8 %102, 0
  ret i1 %103
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkRasterClip7setPathERK6SkPathRK8SkRegionb(%class.SkRasterClip*, %class.SkPath* dereferenceable(16), %class.SkRegion* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = xor i1 %7, true
  %9 = or i1 %8, %3
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZN8SkRegion7setPathERK6SkPathRKS_(%class.SkRegion* %11, %class.SkPath* dereferenceable(16) %1, %class.SkRegion* dereferenceable(24) %2) #6
  br label %29

13:                                               ; preds = %4
  br i1 %7, label %14, label %26

14:                                               ; preds = %13
  %15 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %16 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN8SkAAClip9setRegionERK8SkRegion(%class.SkAAClip* %15, %class.SkRegion* dereferenceable(24) %16) #6
  store i8 0, i8* %5, align 8
  %18 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1, i32 1
  %19 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %18, align 8
  %20 = icmp eq %"struct.SkAAClip::RunHead"* %19, null
  %21 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %22 = zext i1 %20 to i8
  store i8 %22, i8* %21, align 1
  %23 = tail call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %15) #6
  %24 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %25 = zext i1 %23 to i8
  store i8 %25, i8* %24, align 2
  br label %26

26:                                               ; preds = %14, %13
  %27 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %28 = tail call zeroext i1 @_ZN8SkAAClip7setPathERK6SkPathPK8SkRegionb(%class.SkAAClip* %27, %class.SkPath* dereferenceable(16) %1, %class.SkRegion* %2, i1 zeroext %3) #6
  br label %29

29:                                               ; preds = %26, %10
  %30 = load i8, i8* %5, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %34 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %33, align 8
  %35 = icmp eq %"struct.SkRegion::RunHead"* %34, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %36 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %37 = zext i1 %35 to i8
  store i8 %37, i8* %36, align 1
  br label %55

38:                                               ; preds = %29
  %39 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1, i32 1
  %40 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %39, align 8
  %41 = icmp eq %"struct.SkAAClip::RunHead"* %40, null
  %42 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %43 = zext i1 %41 to i8
  store i8 %43, i8* %42, align 1
  br i1 %41, label %60, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %46 = tail call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %45) #6
  br i1 %46, label %47, label %52

47:                                               ; preds = %44
  %48 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %49 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %45, i64 0, i32 0
  %50 = tail call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %48, %struct.SkIRect* dereferenceable(16) %49) #6
  %51 = tail call zeroext i1 @_ZN8SkAAClip8setEmptyEv(%class.SkAAClip* %45) #6
  store i8 1, i8* %5, align 8
  br label %55

52:                                               ; preds = %44
  %53 = load i8, i8* %5, align 8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %32, %52, %47
  %56 = phi i8* [ %42, %52 ], [ %42, %47 ], [ %36, %32 ]
  %57 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %58 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %57, align 8
  %59 = icmp eq %"struct.SkRegion::RunHead"* %58, null
  br label %63

60:                                               ; preds = %38, %52
  %61 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %62 = tail call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %61) #6
  br label %63

63:                                               ; preds = %55, %60
  %64 = phi i8* [ %56, %55 ], [ %42, %60 ]
  %65 = phi i1 [ %59, %55 ], [ %62, %60 ]
  %66 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %67 = zext i1 %65 to i8
  store i8 %67, i8* %66, align 2
  %68 = load i8, i8* %64, align 1, !range !2
  %69 = icmp eq i8 %68, 0
  ret i1 %69
}

declare zeroext i1 @_ZN8SkRegion7setPathERK6SkPathRKS_(%class.SkRegion*, %class.SkPath* dereferenceable(16), %class.SkRegion* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkRasterClip11convertToAAEv(%class.SkRasterClip*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZN8SkAAClip9setRegionERK8SkRegion(%class.SkAAClip* %2, %class.SkRegion* dereferenceable(24) %3) #6
  %5 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1, i32 1
  %7 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %6, align 8
  %8 = icmp eq %"struct.SkAAClip::RunHead"* %7, null
  %9 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %10 = zext i1 %8 to i8
  store i8 %10, i8* %9, align 1
  %11 = tail call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %2) #6
  %12 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %13 = zext i1 %11 to i8
  store i8 %13, i8* %12, align 2
  ret void
}

declare zeroext i1 @_ZN8SkAAClip7setPathERK6SkPathPK8SkRegionb(%class.SkAAClip*, %class.SkPath* dereferenceable(16), %class.SkRegion*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkRasterClip2opERK7SkRRectRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkRasterClip*, %class.SkRRect* dereferenceable(52), %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readonly dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkIRect, align 4
  %8 = alloca %class.SkPath, align 8
  %9 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #6
  %10 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %9, i8* align 4 %10, i64 16, i1 false)
  %11 = icmp sgt i32 %4, 1
  br i1 %11, label %12, label %41

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 5
  %14 = load %struct.SkIRect*, %struct.SkIRect** %13, align 8
  %15 = icmp eq %struct.SkIRect* %14, null
  br i1 %15, label %41, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %14, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %14, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = sub nsw i64 %19, %22
  %24 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %14, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %14, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = sub nsw i64 %26, %29
  %31 = icmp slt i64 %23, 1
  %32 = icmp slt i64 %30, 1
  %33 = or i1 %31, %32
  br i1 %33, label %41, label %34

34:                                               ; preds = %16
  %35 = or i64 %30, %23
  %36 = add nsw i64 %35, 2147483648
  %37 = icmp ugt i64 %36, 4294967295
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %7, %struct.SkIRect* nonnull dereferenceable(16) %7, %struct.SkIRect* nonnull dereferenceable(16) %14) #6
  br i1 %39, label %41, label %40

40:                                               ; preds = %38
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 0, i64 16, i1 false) #6
  br label %41

41:                                               ; preds = %6, %12, %16, %34, %38, %40
  %42 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #6
  call void @_ZN6SkPath5RRectERK7SkRRect15SkPathDirection(%class.SkPath* nonnull sret %8, %class.SkRRect* dereferenceable(52) %1, i32 0) #6
  %43 = call zeroext i1 @_ZN12SkRasterClip2opERK6SkPathRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkRasterClip* %0, %class.SkPath* nonnull dereferenceable(16) %8, %class.SkMatrix* dereferenceable(40) %2, %struct.SkIRect* nonnull dereferenceable(16) %7, i32 %4, i1 zeroext %5)
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkRasterClip2opERK6SkPathRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkRasterClip*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readonly dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkIRect, align 4
  %8 = alloca %class.SkRegion, align 8
  %9 = alloca %class.SkPath, align 8
  %10 = alloca %class.SkRasterClip, align 8
  %11 = alloca %class.SkRasterClip, align 8
  %12 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #6
  %13 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %12, i8* align 4 %13, i64 16, i1 false)
  %14 = icmp sgt i32 %4, 1
  br i1 %14, label %15, label %44

15:                                               ; preds = %6
  %16 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 5
  %17 = load %struct.SkIRect*, %struct.SkIRect** %16, align 8
  %18 = icmp eq %struct.SkIRect* %17, null
  br i1 %18, label %44, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = sub nsw i64 %22, %25
  %27 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = sub nsw i64 %29, %32
  %34 = icmp slt i64 %26, 1
  %35 = icmp slt i64 %33, 1
  %36 = or i1 %34, %35
  br i1 %36, label %44, label %37

37:                                               ; preds = %19
  %38 = or i64 %33, %26
  %39 = add nsw i64 %38, 2147483648
  %40 = icmp ugt i64 %39, 4294967295
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %7, %struct.SkIRect* nonnull dereferenceable(16) %7, %struct.SkIRect* nonnull dereferenceable(16) %17) #6
  br i1 %42, label %44, label %43

43:                                               ; preds = %41
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 0, i64 16, i1 false) #6
  br label %44

44:                                               ; preds = %6, %15, %19, %37, %41, %43
  %45 = bitcast %class.SkRegion* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #6
  %46 = bitcast %class.SkRegion* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %8) #6
  %47 = bitcast %class.SkPath* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #6
  %48 = getelementptr inbounds %class.SkPath, %class.SkPath* %9, i64 0, i32 4
  %49 = bitcast %class.SkPath* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %9) #6
  %50 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = trunc i32 %51 to i8
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %44
  %55 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #6
  %56 = zext i8 %55 to i32
  store i32 %56, i32* %50, align 4
  br label %57

57:                                               ; preds = %44, %54
  %58 = phi i32 [ %56, %54 ], [ %51, %44 ]
  %59 = and i32 %58, 15
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  %62 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* nonnull %9, %class.SkPath* dereferenceable(16) %1) #6
  br label %66

63:                                               ; preds = %57
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %1, %class.SkMatrix* dereferenceable(40) %2, %class.SkPath* nonnull %9, i32 1) #6
  %64 = load i8, i8* %48, align 2
  %65 = or i8 %64, 4
  store i8 %65, i8* %48, align 2
  br label %66

66:                                               ; preds = %63, %61
  %67 = icmp eq i32 %4, 1
  br i1 %67, label %68, label %107

68:                                               ; preds = %66
  %69 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %70 = load i8, i8* %69, align 2, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %74 = call zeroext i1 @_ZN12SkRasterClip7setPathERK6SkPathRK8SkRegionb(%class.SkRasterClip* %0, %class.SkPath* nonnull dereferenceable(16) %9, %class.SkRegion* dereferenceable(24) %73, i1 zeroext %5)
  br label %137

75:                                               ; preds = %68
  %76 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %77 = load i8, i8* %76, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  %79 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1, i32 0
  %81 = select i1 %78, %struct.SkIRect* %80, %struct.SkIRect* %79
  %82 = call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* nonnull %8, %struct.SkIRect* dereferenceable(16) %81) #6
  %83 = bitcast %class.SkRasterClip* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %83) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 72, i1 false)
  %84 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %10, i64 0, i32 0
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %84) #6
  %85 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %10, i64 0, i32 1
  call void @_ZN8SkAAClipC1Ev(%class.SkAAClip* %85) #6
  %86 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %10, i64 0, i32 5
  %87 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %10, i64 0, i32 2
  %88 = bitcast %struct.SkIRect** %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #6
  store i8 1, i8* %87, align 8
  %89 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %10, i64 0, i32 3
  store i8 1, i8* %89, align 1
  %90 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %10, i64 0, i32 4
  store i8 0, i8* %90, align 2
  %91 = call zeroext i1 @_ZN12SkRasterClip7setPathERK6SkPathRK8SkRegionb(%class.SkRasterClip* nonnull %10, %class.SkPath* nonnull dereferenceable(16) %9, %class.SkRegion* nonnull dereferenceable(24) %8, i1 zeroext %5)
  %92 = call zeroext i1 @_ZN12SkRasterClip2opERKS_N8SkRegion2OpE(%class.SkRasterClip* %0, %class.SkRasterClip* nonnull dereferenceable(72) %10, i32 1)
  %93 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %10, i64 0, i32 6, i32 0
  %94 = load %class.SkShader*, %class.SkShader** %93, align 8
  %95 = icmp eq %class.SkShader* %94, null
  br i1 %95, label %106, label %96

96:                                               ; preds = %75
  %97 = getelementptr inbounds %class.SkShader, %class.SkShader* %94, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 -1 acq_rel
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %106

100:                                              ; preds = %96
  %101 = bitcast %class.SkShader* %94 to %class.SkRefCntBase*
  %102 = bitcast %class.SkShader* %94 to void (%class.SkRefCntBase*)***
  %103 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %102, align 8
  %104 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, i64 2
  %105 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, align 8
  call void %105(%class.SkRefCntBase* nonnull %101) #6
  br label %106

106:                                              ; preds = %75, %96, %100
  call void @_ZN8SkAAClipD1Ev(%class.SkAAClip* %85) #6
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %84) #6
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %83) #6
  br label %137

107:                                              ; preds = %66
  %108 = call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* nonnull %8, %struct.SkIRect* nonnull dereferenceable(16) %7) #6
  %109 = icmp eq i32 %4, 5
  br i1 %109, label %110, label %112

110:                                              ; preds = %107
  %111 = call zeroext i1 @_ZN12SkRasterClip7setPathERK6SkPathRK8SkRegionb(%class.SkRasterClip* %0, %class.SkPath* nonnull dereferenceable(16) %9, %class.SkRegion* nonnull dereferenceable(24) %8, i1 zeroext %5)
  br label %137

112:                                              ; preds = %107
  %113 = bitcast %class.SkRasterClip* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %113) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 72, i1 false)
  %114 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %11, i64 0, i32 0
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %114) #6
  %115 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %11, i64 0, i32 1
  call void @_ZN8SkAAClipC1Ev(%class.SkAAClip* %115) #6
  %116 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %11, i64 0, i32 5
  %117 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %11, i64 0, i32 2
  %118 = bitcast %struct.SkIRect** %116 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 16, i1 false) #6
  store i8 1, i8* %117, align 8
  %119 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %11, i64 0, i32 3
  store i8 1, i8* %119, align 1
  %120 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %11, i64 0, i32 4
  store i8 0, i8* %120, align 2
  %121 = call zeroext i1 @_ZN12SkRasterClip7setPathERK6SkPathRK8SkRegionb(%class.SkRasterClip* nonnull %11, %class.SkPath* nonnull dereferenceable(16) %9, %class.SkRegion* nonnull dereferenceable(24) %8, i1 zeroext %5)
  %122 = call zeroext i1 @_ZN12SkRasterClip2opERKS_N8SkRegion2OpE(%class.SkRasterClip* %0, %class.SkRasterClip* nonnull dereferenceable(72) %11, i32 %4)
  %123 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %11, i64 0, i32 6, i32 0
  %124 = load %class.SkShader*, %class.SkShader** %123, align 8
  %125 = icmp eq %class.SkShader* %124, null
  br i1 %125, label %136, label %126

126:                                              ; preds = %112
  %127 = getelementptr inbounds %class.SkShader, %class.SkShader* %124, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw add i32* %127, i32 -1 acq_rel
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %136

130:                                              ; preds = %126
  %131 = bitcast %class.SkShader* %124 to %class.SkRefCntBase*
  %132 = bitcast %class.SkShader* %124 to void (%class.SkRefCntBase*)***
  %133 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %132, align 8
  %134 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %133, i64 2
  %135 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %134, align 8
  call void %135(%class.SkRefCntBase* nonnull %131) #6
  br label %136

136:                                              ; preds = %112, %126, %130
  call void @_ZN8SkAAClipD1Ev(%class.SkAAClip* %115) #6
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %114) #6
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %113) #6
  br label %137

137:                                              ; preds = %136, %110, %106, %72
  %138 = phi i1 [ %74, %72 ], [ %92, %106 ], [ %111, %110 ], [ %122, %136 ]
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #6
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #6
  ret i1 %138
}

declare void @_ZN6SkPath5RRectERK7SkRRect15SkPathDirection(%class.SkPath* sret, %class.SkRRect* dereferenceable(52), i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkRasterClip2opERKS_N8SkRegion2OpE(%class.SkRasterClip*, %class.SkRasterClip* dereferenceable(72), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkAAClip, align 8
  %5 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %14 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 0
  %15 = tail call zeroext i1 @_ZN8SkRegion2opERKS_S1_NS_2OpE(%class.SkRegion* %13, %class.SkRegion* dereferenceable(24) %13, %class.SkRegion* dereferenceable(24) %14, i32 %2) #6
  br label %46

16:                                               ; preds = %8, %3
  %17 = bitcast %class.SkAAClip* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #6
  %18 = bitcast %class.SkAAClip* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call void @_ZN8SkAAClipC1Ev(%class.SkAAClip* nonnull %4) #6
  %19 = load i8, i8* %5, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %23 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %24 = call zeroext i1 @_ZN8SkAAClip9setRegionERK8SkRegion(%class.SkAAClip* %22, %class.SkRegion* dereferenceable(24) %23) #6
  store i8 0, i8* %5, align 8
  %25 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1, i32 1
  %26 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %25, align 8
  %27 = icmp eq %"struct.SkAAClip::RunHead"* %26, null
  %28 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %29 = zext i1 %27 to i8
  store i8 %29, i8* %28, align 1
  %30 = call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %22) #6
  %31 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %32 = zext i1 %30 to i8
  store i8 %32, i8* %31, align 2
  br label %33

33:                                               ; preds = %16, %21
  %34 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 2
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 0
  %39 = call zeroext i1 @_ZN8SkAAClip9setRegionERK8SkRegion(%class.SkAAClip* nonnull %4, %class.SkRegion* dereferenceable(24) %38) #6
  br label %42

40:                                               ; preds = %33
  %41 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 1
  br label %42

42:                                               ; preds = %40, %37
  %43 = phi %class.SkAAClip* [ %4, %37 ], [ %41, %40 ]
  %44 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %45 = call zeroext i1 @_ZN8SkAAClip2opERKS_N8SkRegion2OpE(%class.SkAAClip* %44, %class.SkAAClip* dereferenceable(24) %43, i32 %2) #6
  call void @_ZN8SkAAClipD1Ev(%class.SkAAClip* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #6
  br label %46

46:                                               ; preds = %42, %12
  %47 = load i8, i8* %5, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %51 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %50, align 8
  %52 = icmp eq %"struct.SkRegion::RunHead"* %51, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %53 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %54 = zext i1 %52 to i8
  store i8 %54, i8* %53, align 1
  br label %72

55:                                               ; preds = %46
  %56 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1, i32 1
  %57 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %56, align 8
  %58 = icmp eq %"struct.SkAAClip::RunHead"* %57, null
  %59 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %60 = zext i1 %58 to i8
  store i8 %60, i8* %59, align 1
  br i1 %58, label %77, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %63 = call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %62) #6
  br i1 %63, label %64, label %69

64:                                               ; preds = %61
  %65 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %66 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %62, i64 0, i32 0
  %67 = call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %65, %struct.SkIRect* dereferenceable(16) %66) #6
  %68 = call zeroext i1 @_ZN8SkAAClip8setEmptyEv(%class.SkAAClip* %62) #6
  store i8 1, i8* %5, align 8
  br label %72

69:                                               ; preds = %61
  %70 = load i8, i8* %5, align 8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %77, label %72

72:                                               ; preds = %49, %69, %64
  %73 = phi i8* [ %59, %69 ], [ %59, %64 ], [ %53, %49 ]
  %74 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %75 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %74, align 8
  %76 = icmp eq %"struct.SkRegion::RunHead"* %75, null
  br label %80

77:                                               ; preds = %55, %69
  %78 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %79 = call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %78) #6
  br label %80

80:                                               ; preds = %72, %77
  %81 = phi i8* [ %73, %72 ], [ %59, %77 ]
  %82 = phi i1 [ %76, %72 ], [ %79, %77 ]
  %83 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %84 = zext i1 %82 to i8
  store i8 %84, i8* %83, align 2
  %85 = load i8, i8* %81, align 1, !range !2
  %86 = icmp eq i8 %85, 0
  ret i1 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkRasterClip7setPathERK6SkPathRK7SkIRectb(%class.SkRasterClip*, %class.SkPath* dereferenceable(16), %struct.SkIRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkRegion, align 8
  %6 = bitcast %class.SkRegion* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  %7 = bitcast %class.SkRegion* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %5) #6
  %8 = call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* nonnull %5, %struct.SkIRect* dereferenceable(16) %2) #6
  %9 = call zeroext i1 @_ZN12SkRasterClip7setPathERK6SkPathRK8SkRegionb(%class.SkRasterClip* %0, %class.SkPath* dereferenceable(16) %1, %class.SkRegion* nonnull dereferenceable(24) %5, i1 zeroext %3)
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkRasterClip2opERK7SkIRectN8SkRegion2OpE(%class.SkRasterClip*, %struct.SkIRect* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %9 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %10 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %9, align 8
  %11 = icmp eq %"struct.SkRegion::RunHead"* %10, null
  %12 = icmp eq i32 %2, 1
  %13 = and i1 %12, %11
  br i1 %13, label %14, label %19

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %15, %struct.SkIRect* dereferenceable(16) %15, %struct.SkIRect* dereferenceable(16) %1) #6
  br i1 %16, label %24, label %17

17:                                               ; preds = %14
  %18 = tail call zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* %8) #6
  br label %24

19:                                               ; preds = %7
  %20 = tail call zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion* %8, %class.SkRegion* dereferenceable(24) %8, %struct.SkIRect* dereferenceable(16) %1, i32 %2) #6
  br label %24

21:                                               ; preds = %3
  %22 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %23 = tail call zeroext i1 @_ZN8SkAAClip2opERK7SkIRectN8SkRegion2OpE(%class.SkAAClip* %22, %struct.SkIRect* dereferenceable(16) %1, i32 %2) #6
  br label %24

24:                                               ; preds = %19, %17, %14, %21
  %25 = load i8, i8* %4, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %29 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %28, align 8
  %30 = icmp eq %"struct.SkRegion::RunHead"* %29, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %31 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %32 = zext i1 %30 to i8
  store i8 %32, i8* %31, align 1
  br label %50

33:                                               ; preds = %24
  %34 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1, i32 1
  %35 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %34, align 8
  %36 = icmp eq %"struct.SkAAClip::RunHead"* %35, null
  %37 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %38 = zext i1 %36 to i8
  store i8 %38, i8* %37, align 1
  br i1 %36, label %55, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %41 = tail call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %40) #6
  br i1 %41, label %42, label %47

42:                                               ; preds = %39
  %43 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %44 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %40, i64 0, i32 0
  %45 = tail call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %43, %struct.SkIRect* dereferenceable(16) %44) #6
  %46 = tail call zeroext i1 @_ZN8SkAAClip8setEmptyEv(%class.SkAAClip* %40) #6
  store i8 1, i8* %4, align 8
  br label %50

47:                                               ; preds = %39
  %48 = load i8, i8* %4, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %27, %47, %42
  %51 = phi i8* [ %37, %47 ], [ %37, %42 ], [ %31, %27 ]
  %52 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %53 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %52, align 8
  %54 = icmp eq %"struct.SkRegion::RunHead"* %53, null
  br label %58

55:                                               ; preds = %33, %47
  %56 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %57 = tail call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %56) #6
  br label %58

58:                                               ; preds = %50, %55
  %59 = phi i8* [ %51, %50 ], [ %37, %55 ]
  %60 = phi i1 [ %54, %50 ], [ %57, %55 ]
  %61 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %62 = zext i1 %60 to i8
  store i8 %62, i8* %61, align 2
  %63 = load i8, i8* %59, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  ret i1 %64
}

declare zeroext i1 @_ZN8SkAAClip2opERK7SkIRectN8SkRegion2OpE(%class.SkAAClip*, %struct.SkIRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkRasterClip2opERK8SkRegionNS0_2OpE(%class.SkRasterClip*, %class.SkRegion* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkAAClip, align 8
  %5 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZN8SkRegion2opERKS_S1_NS_2OpE(%class.SkRegion* %9, %class.SkRegion* dereferenceable(24) %9, %class.SkRegion* dereferenceable(24) %1, i32 %2) #6
  br label %17

11:                                               ; preds = %3
  %12 = bitcast %class.SkAAClip* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #6
  %13 = bitcast %class.SkAAClip* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @_ZN8SkAAClipC1Ev(%class.SkAAClip* nonnull %4) #6
  %14 = call zeroext i1 @_ZN8SkAAClip9setRegionERK8SkRegion(%class.SkAAClip* nonnull %4, %class.SkRegion* dereferenceable(24) %1) #6
  %15 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %16 = call zeroext i1 @_ZN8SkAAClip2opERKS_N8SkRegion2OpE(%class.SkAAClip* %15, %class.SkAAClip* nonnull dereferenceable(24) %4, i32 %2) #6
  call void @_ZN8SkAAClipD1Ev(%class.SkAAClip* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #6
  br label %17

17:                                               ; preds = %11, %8
  %18 = load i8, i8* %5, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %22 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %21, align 8
  %23 = icmp eq %"struct.SkRegion::RunHead"* %22, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %24 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %25 = zext i1 %23 to i8
  store i8 %25, i8* %24, align 1
  br label %43

26:                                               ; preds = %17
  %27 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1, i32 1
  %28 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %27, align 8
  %29 = icmp eq %"struct.SkAAClip::RunHead"* %28, null
  %30 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %31 = zext i1 %29 to i8
  store i8 %31, i8* %30, align 1
  br i1 %29, label %48, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %34 = call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %33) #6
  br i1 %34, label %35, label %40

35:                                               ; preds = %32
  %36 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %37 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %33, i64 0, i32 0
  %38 = call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %36, %struct.SkIRect* dereferenceable(16) %37) #6
  %39 = call zeroext i1 @_ZN8SkAAClip8setEmptyEv(%class.SkAAClip* %33) #6
  store i8 1, i8* %5, align 8
  br label %43

40:                                               ; preds = %32
  %41 = load i8, i8* %5, align 8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %20, %40, %35
  %44 = phi i8* [ %30, %40 ], [ %30, %35 ], [ %24, %20 ]
  %45 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %46 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %45, align 8
  %47 = icmp eq %"struct.SkRegion::RunHead"* %46, null
  br label %51

48:                                               ; preds = %26, %40
  %49 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %50 = call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %49) #6
  br label %51

51:                                               ; preds = %43, %48
  %52 = phi i8* [ %44, %43 ], [ %30, %48 ]
  %53 = phi i1 [ %47, %43 ], [ %50, %48 ]
  %54 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %55 = zext i1 %53 to i8
  store i8 %55, i8* %54, align 2
  %56 = load i8, i8* %52, align 1, !range !2
  %57 = icmp eq i8 %56, 0
  ret i1 %57
}

declare zeroext i1 @_ZN8SkAAClip9setRegionERK8SkRegion(%class.SkAAClip*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkAAClip2opERKS_N8SkRegion2OpE(%class.SkAAClip*, %class.SkAAClip* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkRasterClip2opE5sk_spI8SkShaderE(%class.SkRasterClip*, %class.sk_sp.13* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.13, align 8
  %4 = alloca %class.sk_sp.13, align 8
  %5 = alloca %class.sk_sp.13, align 8
  %6 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 6
  %7 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %6, i64 0, i32 0
  %8 = load %class.SkShader*, %class.SkShader** %7, align 8
  %9 = icmp eq %class.SkShader* %8, null
  br i1 %9, label %10, label %32

10:                                               ; preds = %2
  %11 = icmp eq %class.sk_sp.13* %6, %1
  br i1 %11, label %110, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %1, i64 0, i32 0
  %14 = load %class.SkShader*, %class.SkShader** %13, align 8
  %15 = icmp eq %class.SkShader* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  store %class.SkShader* %14, %class.SkShader** %7, align 8
  br label %110

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkShader, %class.SkShader* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  %20 = load %class.SkShader*, %class.SkShader** %7, align 8
  %21 = bitcast %class.SkShader* %20 to %class.SkRefCntBase*
  store %class.SkShader* %14, %class.SkShader** %7, align 8
  %22 = icmp eq %class.SkShader* %20, null
  br i1 %22, label %110, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.SkShader, %class.SkShader* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %110

27:                                               ; preds = %23
  %28 = bitcast %class.SkShader* %20 to void (%class.SkRefCntBase*)***
  %29 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, i64 2
  %31 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, align 8
  tail call void %31(%class.SkRefCntBase* nonnull %21) #6
  br label %110

32:                                               ; preds = %2
  %33 = bitcast %class.sk_sp.13* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #6
  %34 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %4, i64 0, i32 0
  %35 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %1, i64 0, i32 0
  %36 = load %class.SkShader*, %class.SkShader** %35, align 8
  %37 = icmp eq %class.SkShader* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  store %class.SkShader* %36, %class.SkShader** %34, align 8
  %39 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %5, i64 0, i32 0
  br label %46

40:                                               ; preds = %32
  %41 = getelementptr inbounds %class.SkShader, %class.SkShader* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic
  %43 = load %class.SkShader*, %class.SkShader** %7, align 8
  store %class.SkShader* %36, %class.SkShader** %34, align 8
  %44 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %5, i64 0, i32 0
  %45 = icmp eq %class.SkShader* %43, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %38, %40
  %47 = phi %class.SkShader** [ %39, %38 ], [ %44, %40 ]
  %48 = phi %class.SkShader* [ %8, %38 ], [ %43, %40 ]
  %49 = getelementptr inbounds %class.SkShader, %class.SkShader* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic
  br label %51

51:                                               ; preds = %40, %46
  %52 = phi %class.SkShader** [ %44, %40 ], [ %47, %46 ]
  %53 = phi %class.SkShader* [ null, %40 ], [ %48, %46 ]
  store %class.SkShader* %53, %class.SkShader** %52, align 8
  call void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.13* nonnull sret %3, i32 5, %class.sk_sp.13* nonnull %4, %class.sk_sp.13* nonnull %5) #6
  %54 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %3, i64 0, i32 0
  %55 = bitcast %class.sk_sp.13* %3 to i64*
  %56 = load i64, i64* %55, align 8
  store %class.SkShader* null, %class.SkShader** %54, align 8
  %57 = load %class.SkShader*, %class.SkShader** %7, align 8
  %58 = bitcast %class.sk_sp.13* %6 to i64*
  store i64 %56, i64* %58, align 8
  %59 = icmp eq %class.SkShader* %57, null
  br i1 %59, label %83, label %60

60:                                               ; preds = %51
  %61 = getelementptr inbounds %class.SkShader, %class.SkShader* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %class.SkShader* %57 to %class.SkRefCntBase*
  %66 = bitcast %class.SkShader* %57 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  call void %69(%class.SkRefCntBase* nonnull %65) #6
  br label %70

70:                                               ; preds = %60, %64
  %71 = load %class.SkShader*, %class.SkShader** %54, align 8
  %72 = icmp eq %class.SkShader* %71, null
  br i1 %72, label %83, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %class.SkShader, %class.SkShader* %71, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %83

77:                                               ; preds = %73
  %78 = bitcast %class.SkShader* %71 to %class.SkRefCntBase*
  %79 = bitcast %class.SkShader* %71 to void (%class.SkRefCntBase*)***
  %80 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, i64 2
  %82 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, align 8
  call void %82(%class.SkRefCntBase* nonnull %78) #6
  br label %83

83:                                               ; preds = %51, %70, %73, %77
  %84 = load %class.SkShader*, %class.SkShader** %52, align 8
  %85 = icmp eq %class.SkShader* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %class.SkShader, %class.SkShader* %84, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = bitcast %class.SkShader* %84 to %class.SkRefCntBase*
  %92 = bitcast %class.SkShader* %84 to void (%class.SkRefCntBase*)***
  %93 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %92, align 8
  %94 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, i64 2
  %95 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, align 8
  call void %95(%class.SkRefCntBase* nonnull %91) #6
  br label %96

96:                                               ; preds = %83, %86, %90
  %97 = load %class.SkShader*, %class.SkShader** %34, align 8
  %98 = icmp eq %class.SkShader* %97, null
  br i1 %98, label %109, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %class.SkShader, %class.SkShader* %97, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %109

103:                                              ; preds = %99
  %104 = bitcast %class.SkShader* %97 to %class.SkRefCntBase*
  %105 = bitcast %class.SkShader* %97 to void (%class.SkRefCntBase*)***
  %106 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %105, align 8
  %107 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, i64 2
  %108 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, align 8
  call void %108(%class.SkRefCntBase* nonnull %104) #6
  br label %109

109:                                              ; preds = %96, %99, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #6
  br label %110

110:                                              ; preds = %16, %27, %23, %17, %10, %109
  %111 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %112 = load i8, i8* %111, align 1, !range !2
  %113 = icmp eq i8 %112, 0
  ret i1 %113
}

declare void @_ZN9SkShaders5BlendE11SkBlendMode5sk_spI8SkShaderES3_(%class.sk_sp.13* sret, i32, %class.sk_sp.13*, %class.sk_sp.13*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkRasterClip2opERK6SkRectRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkRasterClip*, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkIRect* nocapture readonly dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca <4 x float>, align 16
  %9 = bitcast <4 x float>* %8 to %struct.SkRect*
  %10 = alloca %class.SkPath, align 8
  %11 = alloca <4 x i32>, align 16
  %12 = bitcast <4 x i32>* %11 to %struct.SkIRect*
  %13 = zext i1 %5 to i8
  %14 = bitcast <4 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #6
  %15 = getelementptr inbounds <4 x float>, <4 x float>* %8, i64 0, i64 0
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 1
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 2
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 3
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %20 = bitcast <4 x float>* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -1, i64 16, i1 false)
  %21 = load i32, i32* %19, align 4
  %22 = trunc i32 %21 to i8
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %6
  %25 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #6
  %26 = zext i8 %25 to i32
  store i32 %26, i32* %19, align 4
  br label %27

27:                                               ; preds = %6, %24
  %28 = phi i32 [ %26, %24 ], [ %21, %6 ]
  %29 = and i32 %28, 12
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %39, label %31

31:                                               ; preds = %27
  %32 = bitcast %class.SkPath* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #6
  %33 = getelementptr inbounds %class.SkPath, %class.SkPath* %10, i64 0, i32 4
  %34 = bitcast %class.SkPath* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %10) #6
  %35 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull %10, %struct.SkRect* dereferenceable(16) %1, i32 0, i32 0) #6
  %36 = load i8, i8* %33, align 2
  %37 = or i8 %36, 4
  store i8 %37, i8* %33, align 2
  %38 = call zeroext i1 @_ZN12SkRasterClip2opERK6SkPathRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkRasterClip* %0, %class.SkPath* nonnull dereferenceable(16) %10, %class.SkMatrix* dereferenceable(40) %2, %struct.SkIRect* dereferenceable(16) %3, i32 %4, i1 zeroext %5)
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #6
  br label %236

39:                                               ; preds = %27
  %40 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %2, %struct.SkRect* nonnull %9, %struct.SkRect* dereferenceable(16) %1, i32 1) #6
  %41 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  %44 = xor i1 %5, true
  %45 = or i1 %43, %44
  br i1 %45, label %72, label %46

46:                                               ; preds = %39
  %47 = load float, float* %15, align 16
  %48 = fadd float %47, 1.250000e-01
  %49 = call float @llvm.floor.f32(float %48) #6
  %50 = fsub float %48, %49
  %51 = fcmp olt float %50, 2.500000e-01
  br i1 %51, label %52, label %72

52:                                               ; preds = %46
  %53 = load float, float* %16, align 4
  %54 = fadd float %53, 1.250000e-01
  %55 = call float @llvm.floor.f32(float %54) #6
  %56 = fsub float %54, %55
  %57 = fcmp olt float %56, 2.500000e-01
  br i1 %57, label %58, label %72

58:                                               ; preds = %52
  %59 = load float, float* %17, align 8
  %60 = fadd float %59, 1.250000e-01
  %61 = call float @llvm.floor.f32(float %60) #6
  %62 = fsub float %60, %61
  %63 = fcmp olt float %62, 2.500000e-01
  br i1 %63, label %64, label %72

64:                                               ; preds = %58
  %65 = load float, float* %18, align 4
  %66 = fadd float %65, 1.250000e-01
  %67 = call float @llvm.floor.f32(float %66) #6
  %68 = fsub float %66, %67
  %69 = fcmp uge float %68, 2.500000e-01
  %70 = and i1 %69, %5
  %71 = zext i1 %70 to i8
  br label %72

72:                                               ; preds = %64, %39, %46, %52, %58
  %73 = phi i8 [ %13, %58 ], [ %13, %52 ], [ %13, %46 ], [ %13, %39 ], [ %71, %64 ]
  %74 = icmp ne i8 %42, 0
  %75 = icmp eq i8 %73, 0
  %76 = and i1 %74, %75
  br i1 %76, label %77, label %135

77:                                               ; preds = %72
  %78 = bitcast <4 x i32>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #6
  %79 = load <4 x float>, <4 x float>* %8, align 16
  %80 = fadd <4 x float> %79, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %81 = call <4 x float> @llvm.floor.v4f32(<4 x float> %80)
  %82 = fcmp olt <4 x float> %81, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %83 = select <4 x i1> %82, <4 x float> %81, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %84 = fcmp ogt <4 x float> %83, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %85 = select <4 x i1> %84, <4 x float> %83, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %86 = fptosi <4 x float> %85 to <4 x i32>
  store <4 x i32> %86, <4 x i32>* %11, align 16
  %87 = icmp sgt i32 %4, 1
  br i1 %87, label %88, label %119

88:                                               ; preds = %77
  %89 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 5
  %90 = load %struct.SkIRect*, %struct.SkIRect** %89, align 8
  %91 = icmp eq %struct.SkIRect* %90, null
  br i1 %91, label %117, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %90, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %90, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = sext i32 %97 to i64
  %99 = sub nsw i64 %95, %98
  %100 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %90, i64 0, i32 3
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %90, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = sub nsw i64 %102, %105
  %107 = icmp slt i64 %99, 1
  %108 = icmp slt i64 %106, 1
  %109 = or i1 %107, %108
  br i1 %109, label %117, label %110

110:                                              ; preds = %92
  %111 = or i64 %106, %99
  %112 = add nsw i64 %111, 2147483648
  %113 = icmp ugt i64 %112, 4294967295
  br i1 %113, label %117, label %114

114:                                              ; preds = %110
  %115 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %12, %struct.SkIRect* nonnull dereferenceable(16) %12, %struct.SkIRect* nonnull dereferenceable(16) %90) #6
  br i1 %115, label %117, label %116

116:                                              ; preds = %114
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %78, i8 0, i64 16, i1 false) #6
  br label %117

117:                                              ; preds = %88, %92, %110, %114, %116
  %118 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  br label %131

119:                                              ; preds = %77
  %120 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %121 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %122 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %121, align 8
  %123 = icmp eq %"struct.SkRegion::RunHead"* %122, null
  %124 = icmp eq i32 %4, 1
  %125 = and i1 %124, %123
  br i1 %125, label %126, label %131

126:                                              ; preds = %119
  %127 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 0
  %128 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %127, %struct.SkIRect* dereferenceable(16) %127, %struct.SkIRect* nonnull dereferenceable(16) %12) #6
  br i1 %128, label %134, label %129

129:                                              ; preds = %126
  %130 = call zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* %120) #6
  br label %134

131:                                              ; preds = %117, %119
  %132 = phi %class.SkRegion* [ %118, %117 ], [ %120, %119 ]
  %133 = call zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion* %132, %class.SkRegion* dereferenceable(24) %132, %struct.SkIRect* nonnull dereferenceable(16) %12, i32 %4) #6
  br label %134

134:                                              ; preds = %126, %129, %131
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #6
  br label %195

135:                                              ; preds = %72
  br i1 %43, label %148, label %136

136:                                              ; preds = %135
  %137 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %138 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %139 = call zeroext i1 @_ZN8SkAAClip9setRegionERK8SkRegion(%class.SkAAClip* %137, %class.SkRegion* dereferenceable(24) %138) #6
  store i8 0, i8* %41, align 8
  %140 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1, i32 1
  %141 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %140, align 8
  %142 = icmp eq %"struct.SkAAClip::RunHead"* %141, null
  %143 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %144 = zext i1 %142 to i8
  store i8 %144, i8* %143, align 1
  %145 = call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %137) #6
  %146 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %147 = zext i1 %145 to i8
  store i8 %147, i8* %146, align 2
  br label %148

148:                                              ; preds = %135, %136
  %149 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %150 = icmp sgt i32 %4, 1
  br i1 %150, label %151, label %191

151:                                              ; preds = %148
  %152 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 5
  %153 = load %struct.SkIRect*, %struct.SkIRect** %152, align 8
  %154 = icmp eq %struct.SkIRect* %153, null
  br i1 %154, label %191, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %153, i64 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %153, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = sext i32 %160 to i64
  %162 = sub nsw i64 %158, %161
  %163 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %153, i64 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %153, i64 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = sext i32 %167 to i64
  %169 = sub nsw i64 %165, %168
  %170 = icmp slt i64 %162, 1
  %171 = icmp slt i64 %169, 1
  %172 = or i1 %170, %171
  br i1 %172, label %191, label %173

173:                                              ; preds = %155
  %174 = or i64 %169, %162
  %175 = add nsw i64 %174, 2147483648
  %176 = icmp ugt i64 %175, 4294967295
  br i1 %176, label %191, label %177

177:                                              ; preds = %173
  %178 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %178) #6
  %179 = sitofp i32 %160 to float
  %180 = insertelement <2 x float> undef, float %179, i32 0
  %181 = sitofp i32 %167 to float
  %182 = insertelement <2 x float> %180, float %181, i32 1
  %183 = sitofp i32 %157 to float
  %184 = insertelement <2 x float> undef, float %183, i32 0
  %185 = sitofp i32 %164 to float
  %186 = insertelement <2 x float> %184, float %185, i32 1
  %187 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %182, <2 x float>* %187, align 8
  %188 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %186, <2 x float>* %188, align 8
  %189 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %149) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %178) #6
  br i1 %189, label %191, label %190

190:                                              ; preds = %177
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 16, i1 false) #6
  br label %191

191:                                              ; preds = %148, %151, %155, %173, %177, %190
  %192 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %193 = icmp ne i8 %73, 0
  %194 = call zeroext i1 @_ZN8SkAAClip2opERK6SkRectN8SkRegion2OpEb(%class.SkAAClip* %192, %struct.SkRect* nonnull dereferenceable(16) %9, i32 %4, i1 zeroext %193) #6
  br label %195

195:                                              ; preds = %191, %134
  %196 = load i8, i8* %41, align 8, !range !2
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %204, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %200 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %199, align 8
  %201 = icmp eq %"struct.SkRegion::RunHead"* %200, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %202 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %203 = zext i1 %201 to i8
  store i8 %203, i8* %202, align 1
  br label %221

204:                                              ; preds = %195
  %205 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1, i32 1
  %206 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %205, align 8
  %207 = icmp eq %"struct.SkAAClip::RunHead"* %206, null
  %208 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %209 = zext i1 %207 to i8
  store i8 %209, i8* %208, align 1
  br i1 %207, label %226, label %210

210:                                              ; preds = %204
  %211 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %212 = call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %211) #6
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %215 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %211, i64 0, i32 0
  %216 = call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %214, %struct.SkIRect* dereferenceable(16) %215) #6
  %217 = call zeroext i1 @_ZN8SkAAClip8setEmptyEv(%class.SkAAClip* %211) #6
  store i8 1, i8* %41, align 8
  br label %221

218:                                              ; preds = %210
  %219 = load i8, i8* %41, align 8
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %226, label %221

221:                                              ; preds = %198, %218, %213
  %222 = phi i8* [ %208, %218 ], [ %208, %213 ], [ %202, %198 ]
  %223 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %224 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %223, align 8
  %225 = icmp eq %"struct.SkRegion::RunHead"* %224, null
  br label %229

226:                                              ; preds = %204, %218
  %227 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %228 = call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %227) #6
  br label %229

229:                                              ; preds = %221, %226
  %230 = phi i8* [ %222, %221 ], [ %208, %226 ]
  %231 = phi i1 [ %225, %221 ], [ %228, %226 ]
  %232 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %233 = zext i1 %231 to i8
  store i8 %233, i8* %232, align 2
  %234 = load i8, i8* %230, align 1, !range !2
  %235 = icmp eq i8 %234, 0
  br label %236

236:                                              ; preds = %229, %31
  %237 = phi i1 [ %235, %229 ], [ %38, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #6
  ret i1 %237
}

declare zeroext i1 @_ZN8SkAAClip2opERK6SkRectN8SkRegion2OpEb(%class.SkAAClip*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkRasterClip9translateEiiPS_(%class.SkRasterClip*, i32, i32, %class.SkRasterClip*) local_unnamed_addr #0 align 2 {
  %5 = icmp eq %class.SkRasterClip* %3, null
  br i1 %5, label %119, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 2
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* %12) #6
  %14 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 1
  %15 = tail call zeroext i1 @_ZN8SkAAClip8setEmptyEv(%class.SkAAClip* %14) #6
  %16 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 3
  store i8 1, i8* %16, align 1
  %17 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 4
  store i8 0, i8* %17, align 2
  br label %119

18:                                               ; preds = %6
  %19 = or i32 %2, %1
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %22 = load i8, i8* %21, align 8, !range !2
  br i1 %20, label %23, label %67

23:                                               ; preds = %18
  %24 = icmp eq i8 %22, 0
  %25 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 2
  store i8 %22, i8* %25, align 8
  br i1 %24, label %30, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %28 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 0
  %29 = tail call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %28, %class.SkRegion* dereferenceable(24) %27) #6
  br label %34

30:                                               ; preds = %23
  %31 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %32 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 1
  %33 = tail call dereferenceable(24) %class.SkAAClip* @_ZN8SkAAClipaSERKS_(%class.SkAAClip* %32, %class.SkAAClip* dereferenceable(24) %31) #6
  br label %34

34:                                               ; preds = %30, %26
  %35 = load i8, i8* %7, align 1, !range !2
  %36 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 3
  store i8 %35, i8* %36, align 1
  %37 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 4
  %38 = load i8, i8* %37, align 2, !range !2
  %39 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 4
  store i8 %38, i8* %39, align 2
  %40 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 5
  %41 = bitcast %struct.SkIRect** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 5
  %44 = bitcast %struct.SkIRect** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = icmp eq %class.SkRasterClip* %3, %0
  br i1 %45, label %119, label %46

46:                                               ; preds = %34
  %47 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 6, i32 0
  %48 = load %class.SkShader*, %class.SkShader** %47, align 8
  %49 = icmp eq %class.SkShader* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.SkShader, %class.SkShader* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 1 monotonic
  br label %53

53:                                               ; preds = %50, %46
  %54 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 6, i32 0
  %55 = load %class.SkShader*, %class.SkShader** %54, align 8
  store %class.SkShader* %48, %class.SkShader** %54, align 8
  %56 = icmp eq %class.SkShader* %55, null
  br i1 %56, label %119, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.SkShader, %class.SkShader* %55, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %119

61:                                               ; preds = %57
  %62 = bitcast %class.SkShader* %55 to %class.SkRefCntBase*
  %63 = bitcast %class.SkShader* %55 to void (%class.SkRefCntBase*)***
  %64 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, i64 2
  %66 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, align 8
  tail call void %66(%class.SkRefCntBase* nonnull %62) #6
  br label %119

67:                                               ; preds = %18
  %68 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 2
  store i8 %22, i8* %68, align 8
  %69 = load i8, i8* %21, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %73 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 0
  tail call void @_ZNK8SkRegion9translateEiiPS_(%class.SkRegion* %72, i32 %1, i32 %2, %class.SkRegion* %73) #6
  %74 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 1
  %75 = tail call zeroext i1 @_ZN8SkAAClip8setEmptyEv(%class.SkAAClip* %74) #6
  br label %82

76:                                               ; preds = %67
  %77 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %78 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 1
  %79 = tail call zeroext i1 @_ZNK8SkAAClip9translateEiiPS_(%class.SkAAClip* %77, i32 %1, i32 %2, %class.SkAAClip* %78) #6
  %80 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 0
  %81 = tail call zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* %80) #6
  br label %82

82:                                               ; preds = %76, %71
  %83 = load i8, i8* %68, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %91, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 0, i32 1
  %87 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %86, align 8
  %88 = icmp eq %"struct.SkRegion::RunHead"* %87, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  %89 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 3
  %90 = zext i1 %88 to i8
  store i8 %90, i8* %89, align 1
  br label %108

91:                                               ; preds = %82
  %92 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 1, i32 1
  %93 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %92, align 8
  %94 = icmp eq %"struct.SkAAClip::RunHead"* %93, null
  %95 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 3
  %96 = zext i1 %94 to i8
  store i8 %96, i8* %95, align 1
  br i1 %94, label %112, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 1
  %99 = tail call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %98) #6
  br i1 %99, label %100, label %105

100:                                              ; preds = %97
  %101 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 0
  %102 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %98, i64 0, i32 0
  %103 = tail call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %101, %struct.SkIRect* dereferenceable(16) %102) #6
  %104 = tail call zeroext i1 @_ZN8SkAAClip8setEmptyEv(%class.SkAAClip* %98) #6
  store i8 1, i8* %68, align 8
  br label %108

105:                                              ; preds = %97
  %106 = load i8, i8* %68, align 8
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %85, %105, %100
  %109 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 0, i32 1
  %110 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %109, align 8
  %111 = icmp eq %"struct.SkRegion::RunHead"* %110, null
  br label %115

112:                                              ; preds = %91, %105
  %113 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 1
  %114 = tail call zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* %113) #6
  br label %115

115:                                              ; preds = %108, %112
  %116 = phi i1 [ %111, %108 ], [ %114, %112 ]
  %117 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %3, i64 0, i32 4
  %118 = zext i1 %116 to i8
  store i8 %118, i8* %117, align 2
  br label %119

119:                                              ; preds = %61, %57, %53, %34, %4, %115, %10
  ret void
}

declare void @_ZNK8SkRegion9translateEiiPS_(%class.SkRegion*, i32, i32, %class.SkRegion*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkAAClip9translateEiiPS_(%class.SkAAClip*, i32, i32, %class.SkAAClip*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12SkRasterClip13quickContainsERK7SkIRect(%class.SkRasterClip*, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %8, %10
  br i1 %11, label %12, label %49

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %14, %16
  br i1 %17, label %18, label %49

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 1
  %20 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %19, align 8
  %21 = icmp eq %"struct.SkRegion::RunHead"* %20, null
  br i1 %21, label %22, label %49

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, %8
  br i1 %25, label %49, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, %14
  br i1 %29, label %49, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = icmp slt i32 %32, %10
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = icmp sge i32 %36, %16
  br label %49

38:                                               ; preds = %2
  %39 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1
  %40 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = tail call zeroext i1 @_ZNK8SkAAClip13quickContainsEiiii(%class.SkAAClip* %39, i32 %41, i32 %43, i32 %45, i32 %47) #6
  br label %49

49:                                               ; preds = %34, %30, %26, %22, %18, %12, %6, %38
  %50 = phi i1 [ %48, %38 ], [ false, %30 ], [ false, %26 ], [ false, %22 ], [ false, %18 ], [ false, %12 ], [ false, %6 ], [ %37, %34 ]
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %class.SkRegion* @_ZN12SkRasterClip10forceGetBWEv(%class.SkRasterClip*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  %7 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 1, i32 0
  %8 = tail call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %6, %struct.SkIRect* dereferenceable(16) %7) #6
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %0, i64 0, i32 0
  ret %class.SkRegion* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkAAClipBlitterWrapperC2Ev(%class.SkAAClipBlitterWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 0
  tail call void @_ZN8SkRegionC1Ev(%class.SkRegion* %2) #6
  %3 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 0, i32 1
  %5 = bitcast %class.SkAutoMalloc* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15SkAAClipBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 6
  %7 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 6, i32 2, i64 0
  %8 = bitcast %class.SkAutoSMalloc* %6 to i32**
  store i32* %7, i32** %8, align 8
  %9 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 6, i32 1
  store i64 1024, i64* %9, align 8
  %10 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 7
  store i8* null, i8** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkAAClipBlitterWrapperC2ERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper*, %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 0
  tail call void @_ZN8SkRegionC1Ev(%class.SkRegion* %4) #6
  %5 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 0, i32 1
  %7 = bitcast %class.SkAutoMalloc* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15SkAAClipBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 6
  %9 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 6, i32 2, i64 0
  %10 = bitcast %class.SkAutoSMalloc* %8 to i32**
  store i32* %9, i32** %10, align 8
  %11 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 6, i32 1
  store i64 1024, i64* %11, align 8
  %12 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 7
  store i8* null, i8** %12, align 8
  %13 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 0
  br label %28

18:                                               ; preds = %3
  %19 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 1
  %20 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %19, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %4, %struct.SkIRect* dereferenceable(16) %20) #6
  %22 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 1
  store %class.SkBlitter* %2, %class.SkBlitter** %22, align 8
  %23 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 2
  store %class.SkAAClip* %19, %class.SkAAClip** %23, align 8
  %24 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 3
  %25 = bitcast %struct.SkIRect* %24 to i8*
  %26 = bitcast %class.SkAAClip* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 4 %26, i64 16, i1 false) #6
  %27 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 0
  br label %28

28:                                               ; preds = %16, %18
  %29 = phi %class.SkRegion* [ %4, %18 ], [ %17, %16 ]
  %30 = phi %class.SkBlitter* [ %27, %18 ], [ %2, %16 ]
  %31 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 2
  store %class.SkRegion* %29, %class.SkRegion** %31, align 8
  %32 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 3
  store %class.SkBlitter* %30, %class.SkBlitter** %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkAAClipBlitterWrapper4initERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper*, %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 0
  br label %20

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %1, i64 0, i32 1
  %11 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 0
  %12 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %10, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %11, %struct.SkIRect* dereferenceable(16) %12) #6
  %14 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 1
  store %class.SkBlitter* %2, %class.SkBlitter** %14, align 8
  %15 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 2
  store %class.SkAAClip* %10, %class.SkAAClip** %15, align 8
  %16 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 3
  %17 = bitcast %struct.SkIRect* %16 to i8*
  %18 = bitcast %class.SkAAClip* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 4 %18, i64 16, i1 false) #6
  %19 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 0
  br label %20

20:                                               ; preds = %9, %7
  %21 = phi %class.SkRegion* [ %11, %9 ], [ %8, %7 ]
  %22 = phi %class.SkBlitter* [ %19, %9 ], [ %2, %7 ]
  %23 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 2
  store %class.SkRegion* %21, %class.SkRegion** %23, align 8
  %24 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 3
  store %class.SkBlitter* %22, %class.SkBlitter** %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkAAClipBlitterWrapperC2EPK8SkAAClipP9SkBlitter(%class.SkAAClipBlitterWrapper*, %class.SkAAClip*, %class.SkBlitter*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 0
  tail call void @_ZN8SkRegionC1Ev(%class.SkRegion* %4) #6
  %5 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %5, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %class.SkAutoMalloc* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15SkAAClipBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 6
  %10 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 6, i32 2, i64 0
  %11 = bitcast %class.SkAutoSMalloc* %9 to i32**
  store i32* %10, i32** %11, align 8
  %12 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 6, i32 1
  store i64 1024, i64* %12, align 8
  %13 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 7
  store i8* null, i8** %13, align 8
  %14 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %1, i64 0, i32 0
  %15 = tail call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %4, %struct.SkIRect* dereferenceable(16) %14) #6
  %16 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 1
  store %class.SkBlitter* %2, %class.SkBlitter** %16, align 8
  %17 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 2
  store %class.SkAAClip* %1, %class.SkAAClip** %17, align 8
  %18 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 1, i32 3
  %19 = bitcast %struct.SkIRect* %18 to i8*
  %20 = bitcast %class.SkAAClip* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 4 %20, i64 16, i1 false) #6
  %21 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 2
  store %class.SkRegion* %4, %class.SkRegion** %21, align 8
  %22 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %5, i64 0, i32 0
  %23 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %0, i64 0, i32 3
  store %class.SkBlitter* %22, %class.SkBlitter** %23, align 8
  ret void
}

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #5

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion*, %class.SkRegion* dereferenceable(24), %struct.SkIRect* dereferenceable(16), i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip*) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkAAClip13quickContainsEiiii(%class.SkAAClip*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.floor.v4f32(<4 x float>) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
