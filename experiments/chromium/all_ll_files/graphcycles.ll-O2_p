; ModuleID = '../../third_party/abseil-cpp/absl/synchronization/internal/graphcycles.cc'
source_filename = "../../third_party/abseil-cpp/absl/synchronization/internal/graphcycles.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.absl::base_internal::LowLevelAlloc::Arena" = type opaque
%"class.absl::synchronization_internal::GraphCycles" = type { %"struct.absl::synchronization_internal::GraphCycles::Rep"* }
%"struct.absl::synchronization_internal::GraphCycles::Rep" = type { %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::PointerMap", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0" }
%"class.absl::synchronization_internal::(anonymous namespace)::Vec" = type { %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, [8 x %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*], i32, i32 }
%"struct.absl::synchronization_internal::(anonymous namespace)::Node" = type { i32, i32, i32, i8, i64, %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", i32, i32, [40 x i8*] }
%"class.absl::synchronization_internal::(anonymous namespace)::NodeSet" = type <{ %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", i32, [4 x i8] }>
%"class.absl::synchronization_internal::(anonymous namespace)::PointerMap" = type <{ %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"struct.std::__1::array", [4 x i8] }>
%"struct.std::__1::array" = type { [8171 x i32] }
%"class.absl::synchronization_internal::(anonymous namespace)::Vec.0" = type { i32*, [8 x i32], i32, i32 }
%"class.absl::base_internal::SpinLock" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.ByRank = type { %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* }
%"struct.absl::synchronization_internal::GraphId" = type { i64 }

@_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE = internal unnamed_addr global %"struct.absl::base_internal::LowLevelAlloc::Arena"* null, align 8
@.str = private unnamed_addr constant [74 x i8] c"../../third_party/abseil-cpp/absl/synchronization/internal/graphcycles.cc\00", align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"Did not find live node in hash table %u %p\00", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"Did not clear visited marker on node %u\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"Duplicate occurrence of rank %d\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"Edge %u->%d has bad rank assignment %d->%d\00", align 1
@_ZN4absl24synchronization_internal12_GLOBAL__N_18arena_muE = internal global { { { i32 } } } zeroinitializer, align 4

@_ZN4absl24synchronization_internal11GraphCyclesC1Ev = hidden unnamed_addr alias void (%"class.absl::synchronization_internal::GraphCycles"*), void (%"class.absl::synchronization_internal::GraphCycles"*)* @_ZN4absl24synchronization_internal11GraphCyclesC2Ev
@_ZN4absl24synchronization_internal11GraphCyclesD1Ev = hidden unnamed_addr alias void (%"class.absl::synchronization_internal::GraphCycles"*), void (%"class.absl::synchronization_internal::GraphCycles"*)* @_ZN4absl24synchronization_internal11GraphCyclesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl24synchronization_internal11GraphCyclesC2Ev(%"class.absl::synchronization_internal::GraphCycles"* nocapture) unnamed_addr #0 align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4absl24synchronization_internal12_GLOBAL__N_18arena_muE, i64 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = and i32 %2, 1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = or i32 %2, 1
  %7 = cmpxchg i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4absl24synchronization_internal12_GLOBAL__N_18arena_muE, i64 0, i32 0, i32 0, i32 0), i32 %2, i32 %6 acquire monotonic
  %8 = extractvalue { i32, i1 } %7, 0
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %5, %1
  tail call void @_ZN4absl13base_internal8SpinLock8SlowLockEv(%"class.absl::base_internal::SpinLock"* bitcast ({ { { i32 } } }* @_ZN4absl24synchronization_internal12_GLOBAL__N_18arena_muE to %"class.absl::base_internal::SpinLock"*)) #6
  br label %12

12:                                               ; preds = %11, %5
  %13 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %14 = icmp eq %"struct.absl::base_internal::LowLevelAlloc::Arena"* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %12
  %16 = tail call %"struct.absl::base_internal::LowLevelAlloc::Arena"* @_ZN4absl13base_internal13LowLevelAlloc8NewArenaEi(i32 0) #7
  store %"struct.absl::base_internal::LowLevelAlloc::Arena"* %16, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  br label %17

17:                                               ; preds = %15, %12
  %18 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4absl24synchronization_internal12_GLOBAL__N_18arena_muE, i64 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = and i32 %18, 2
  %20 = atomicrmw xchg i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4absl24synchronization_internal12_GLOBAL__N_18arena_muE, i64 0, i32 0, i32 0, i32 0), i32 %19 release
  %21 = icmp ugt i32 %20, 7
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  tail call void @_ZN4absl13base_internal8SpinLock10SlowUnlockEj(%"class.absl::base_internal::SpinLock"* bitcast ({ { { i32 } } }* @_ZN4absl24synchronization_internal12_GLOBAL__N_18arena_muE to %"class.absl::base_internal::SpinLock"*), i32 %20) #6
  br label %23

23:                                               ; preds = %17, %22
  %24 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %25 = tail call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 33064, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %24) #7
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %25 to i8**
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds i8, i8* %25, i64 72
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %25, i64 76
  %31 = bitcast i8* %30 to i32*
  store i32 8, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %25, i64 88
  %33 = getelementptr inbounds i8, i8* %25, i64 80
  %34 = bitcast i8* %33 to i8**
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds i8, i8* %25, i64 120
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds i8, i8* %25, i64 124
  %38 = bitcast i8* %37 to i32*
  store i32 8, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %25, i64 128
  %40 = bitcast i8* %39 to i8**
  store i8* %25, i8** %40, align 8
  %41 = getelementptr i8, i8* %25, i64 136
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 -1, i64 32684, i1 false) #7
  %42 = getelementptr inbounds i8, i8* %25, i64 32832
  %43 = getelementptr inbounds i8, i8* %25, i64 32824
  %44 = bitcast i8* %43 to i8**
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds i8, i8* %25, i64 32864
  %46 = bitcast i8* %45 to i32*
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds i8, i8* %25, i64 32868
  %48 = bitcast i8* %47 to i32*
  store i32 8, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %25, i64 32880
  %50 = getelementptr inbounds i8, i8* %25, i64 32872
  %51 = bitcast i8* %50 to i8**
  store i8* %49, i8** %51, align 8
  %52 = getelementptr inbounds i8, i8* %25, i64 32912
  %53 = bitcast i8* %52 to i32*
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %25, i64 32916
  %55 = bitcast i8* %54 to i32*
  store i32 8, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %25, i64 32928
  %57 = getelementptr inbounds i8, i8* %25, i64 32920
  %58 = bitcast i8* %57 to i8**
  store i8* %56, i8** %58, align 8
  %59 = getelementptr inbounds i8, i8* %25, i64 32960
  %60 = bitcast i8* %59 to i32*
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds i8, i8* %25, i64 32964
  %62 = bitcast i8* %61 to i32*
  store i32 8, i32* %62, align 4
  %63 = getelementptr inbounds i8, i8* %25, i64 32976
  %64 = getelementptr inbounds i8, i8* %25, i64 32968
  %65 = bitcast i8* %64 to i8**
  store i8* %63, i8** %65, align 8
  %66 = getelementptr inbounds i8, i8* %25, i64 33008
  %67 = bitcast i8* %66 to i32*
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds i8, i8* %25, i64 33012
  %69 = bitcast i8* %68 to i32*
  store i32 8, i32* %69, align 4
  %70 = getelementptr inbounds i8, i8* %25, i64 33024
  %71 = getelementptr inbounds i8, i8* %25, i64 33016
  %72 = bitcast i8* %71 to i8**
  store i8* %70, i8** %72, align 8
  %73 = getelementptr inbounds i8, i8* %25, i64 33056
  %74 = bitcast i8* %73 to i32*
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds i8, i8* %25, i64 33060
  %76 = bitcast i8* %75 to i32*
  store i32 8, i32* %76, align 4
  %77 = bitcast %"class.absl::synchronization_internal::GraphCycles"* %0 to i8**
  store i8* %25, i8** %77, align 8
  ret void
}

declare i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64, %"struct.absl::base_internal::LowLevelAlloc::Arena"*) local_unnamed_addr #1 section "malloc_hook"

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl24synchronization_internal11GraphCyclesD2Ev(%"class.absl::synchronization_internal::GraphCycles"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.absl::synchronization_internal::GraphCycles", %"class.absl::synchronization_internal::GraphCycles"* %0, i64 0, i32 0
  %3 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %2, align 8
  %4 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %4, align 8
  %6 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %3, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %13, label %66

11:                                               ; preds = %82
  %12 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %2, align 8
  br label %13

13:                                               ; preds = %11, %1
  %14 = phi %"struct.absl::synchronization_internal::GraphCycles::Rep"* [ %12, %11 ], [ %3, %1 ]
  %15 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %14, i64 0, i32 7, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %14, i64 0, i32 7, i32 1, i64 0
  %18 = icmp eq i32* %16, %17
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast i32* %16 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %20) #7
  br label %21

21:                                               ; preds = %19, %13
  %22 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %14, i64 0, i32 6, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %14, i64 0, i32 6, i32 1, i64 0
  %25 = icmp eq i32* %23, %24
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = bitcast i32* %23 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %27) #7
  br label %28

28:                                               ; preds = %26, %21
  %29 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %14, i64 0, i32 5, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %14, i64 0, i32 5, i32 1, i64 0
  %32 = icmp eq i32* %30, %31
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = bitcast i32* %30 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %34) #7
  br label %35

35:                                               ; preds = %33, %28
  %36 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %14, i64 0, i32 4, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %14, i64 0, i32 4, i32 1, i64 0
  %39 = icmp eq i32* %37, %38
  br i1 %39, label %42, label %40

40:                                               ; preds = %35
  %41 = bitcast i32* %37 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %41) #7
  br label %42

42:                                               ; preds = %40, %35
  %43 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %14, i64 0, i32 3, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %14, i64 0, i32 3, i32 1, i64 0
  %46 = icmp eq i32* %44, %45
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  %48 = bitcast i32* %44 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %48) #7
  br label %49

49:                                               ; preds = %47, %42
  %50 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %14, i64 0, i32 1, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %14, i64 0, i32 1, i32 1, i64 0
  %53 = icmp eq i32* %51, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %49
  %55 = bitcast i32* %51 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %55) #7
  br label %56

56:                                               ; preds = %54, %49
  %57 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %14, i64 0, i32 0, i32 0
  %58 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %57, align 8
  %59 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %14, i64 0, i32 0, i32 1, i64 0
  %60 = icmp eq %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %58, %59
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = bitcast %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %58 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %62) #7
  br label %63

63:                                               ; preds = %56, %61
  %64 = bitcast %"class.absl::synchronization_internal::GraphCycles"* %0 to i8**
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %65) #7
  ret void

66:                                               ; preds = %1, %82
  %67 = phi %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** [ %84, %82 ], [ %5, %1 ]
  %68 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %67, align 8
  %69 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %68, i64 0, i32 6, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %68, i64 0, i32 6, i32 0, i32 1, i64 0
  %72 = icmp eq i32* %70, %71
  br i1 %72, label %75, label %73

73:                                               ; preds = %66
  %74 = bitcast i32* %70 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %74) #7
  br label %75

75:                                               ; preds = %73, %66
  %76 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %68, i64 0, i32 5, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %68, i64 0, i32 5, i32 0, i32 1, i64 0
  %79 = icmp eq i32* %77, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = bitcast i32* %77 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %81) #7
  br label %82

82:                                               ; preds = %75, %80
  %83 = bitcast %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %68 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %83) #7
  %84 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %67, i64 1
  %85 = icmp eq %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %84, %9
  br i1 %85, label %11, label %66
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8*) local_unnamed_addr #1 section "malloc_hook"

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4absl24synchronization_internal11GraphCycles15CheckInvariantsEv(%"class.absl::synchronization_internal::GraphCycles"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", align 8
  %3 = getelementptr inbounds %"class.absl::synchronization_internal::GraphCycles", %"class.absl::synchronization_internal::GraphCycles"* %0, i64 0, i32 0
  %4 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %3, align 8
  %5 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %2, i64 0, i32 0, i32 1
  %7 = bitcast [8 x i32]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  %8 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %2, i64 0, i32 0, i32 1, i64 0
  %9 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %2, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %2, i64 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %2, i64 0, i32 0, i32 3
  store i32* %8, i32** %9, align 8
  store i32 8, i32* %11, align 4
  store i32 8, i32* %10, align 8
  store i32 -1, i32* %8, align 8
  br label %12

12:                                               ; preds = %1, %12
  %13 = phi i64 [ 1, %1 ], [ %16, %12 ]
  %14 = load i32*, i32** %9, align 8
  %15 = getelementptr inbounds i32, i32* %14, i64 %13
  store i32 -1, i32* %15, align 4
  %16 = add nuw nsw i64 %13, 1
  %17 = load i32, i32* %10, align 8
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %12, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %2, i64 0, i32 1
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %4, i64 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %4, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %4, i64 0, i32 2, i32 0
  br label %34

28:                                               ; preds = %101, %20
  %29 = load i32*, i32** %9, align 8
  %30 = icmp eq i32* %29, %8
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = bitcast i32* %29 to i8*
  call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %32) #7
  br label %33

33:                                               ; preds = %28, %31
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #7
  ret i1 true

34:                                               ; preds = %25, %101
  %35 = phi i64 [ 0, %25 ], [ %102, %101 ]
  %36 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %26, align 8
  %37 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %36, i64 %35
  %38 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %37, align 8
  %39 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %38, i64 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = xor i64 %40, -1136490970041655429
  %42 = inttoptr i64 %41 to i8*
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %71, label %44

44:                                               ; preds = %34
  %45 = urem i64 %41, 8171
  %46 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %4, i64 0, i32 2, i32 1, i32 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %65, label %49

49:                                               ; preds = %44
  %50 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %27, align 8
  %51 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %50, i64 0, i32 0
  %52 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %51, align 8
  br label %57

53:                                               ; preds = %57
  %54 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %61, i64 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %65, label %57

57:                                               ; preds = %53, %49
  %58 = phi i32 [ %47, %49 ], [ %55, %53 ]
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %52, i64 %59
  %61 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %60, align 8
  %62 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %61, i64 0, i32 4
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %53

65:                                               ; preds = %53, %57, %44
  %66 = phi i32 [ -1, %44 ], [ %58, %57 ], [ -1, %53 ]
  %67 = zext i32 %66 to i64
  %68 = icmp eq i64 %35, %67
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = trunc i64 %35 to i32
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 59), i32 387, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i32 %70, i8* nonnull %42) #7
  br label %71

71:                                               ; preds = %65, %34, %69
  %72 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %38, i64 0, i32 3
  %73 = load i8, i8* %72, align 4, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = trunc i64 %35 to i32
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 59), i32 390, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), i32 %76) #7
  br label %77

77:                                               ; preds = %71, %75
  %78 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %38, i64 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = call fastcc zeroext i1 @_ZN4absl24synchronization_internal12_GLOBAL__N_17NodeSet6insertEi(%"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* nonnull %2, i32 %79)
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  %82 = load i32, i32* %78, align 8
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 59), i32 393, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 %82) #7
  br label %83

83:                                               ; preds = %81, %77
  %84 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %38, i64 0, i32 6, i32 0, i32 2
  %85 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %38, i64 0, i32 6, i32 0, i32 0
  %86 = trunc i64 %35 to i32
  br label %87

87:                                               ; preds = %115, %83
  %88 = phi i64 [ 0, %83 ], [ %99, %115 ]
  %89 = load i32, i32* %84, align 8
  %90 = and i64 %88, 4294967295
  %91 = zext i32 %89 to i64
  br label %92

92:                                               ; preds = %95, %87
  %93 = phi i64 [ %99, %95 ], [ %90, %87 ]
  %94 = icmp ult i64 %93, %91
  br i1 %94, label %95, label %101

95:                                               ; preds = %92
  %96 = load i32*, i32** %85, align 8
  %97 = getelementptr inbounds i32, i32* %96, i64 %93
  %98 = load i32, i32* %97, align 4
  %99 = add nuw nsw i64 %93, 1
  %100 = icmp sgt i32 %98, -1
  br i1 %100, label %106, label %92

101:                                              ; preds = %92
  %102 = add nuw nsw i64 %35, 1
  %103 = load i32, i32* %22, align 8
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %102, %104
  br i1 %105, label %34, label %28

106:                                              ; preds = %95
  %107 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %26, align 8
  %108 = zext i32 %98 to i64
  %109 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %107, i64 %108
  %110 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %109, align 8
  %111 = load i32, i32* %78, align 8
  %112 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %110, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp slt i32 %111, %113
  br i1 %114, label %115, label %116

115:                                              ; preds = %106, %116
  br label %87

116:                                              ; preds = %106
  call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 59), i32 399, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0), i32 %86, i32 %98, i32 %111, i32 %113) #7
  br label %115
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32, i8*, i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4absl24synchronization_internal12_GLOBAL__N_17NodeSet6insertEi(%"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", align 8
  %4 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %0, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = mul i32 %1, 41
  %8 = and i32 %6, %7
  %9 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %0, i64 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = zext i32 %8 to i64
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, %1
  br i1 %14, label %174, label %15

15:                                               ; preds = %2, %20
  %16 = phi i32 [ %29, %20 ], [ %13, %2 ]
  %17 = phi i32 [ %26, %20 ], [ %8, %2 ]
  %18 = phi i32 [ %24, %20 ], [ -1, %2 ]
  %19 = icmp eq i32 %16, -1
  br i1 %19, label %31, label %20

20:                                               ; preds = %15
  %21 = icmp eq i32 %16, -2
  %22 = icmp slt i32 %18, 0
  %23 = and i1 %21, %22
  %24 = select i1 %23, i32 %17, i32 %18
  %25 = add i32 %17, 1
  %26 = and i32 %25, %6
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %10, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %1
  br i1 %30, label %174, label %15

31:                                               ; preds = %15
  %32 = icmp sgt i32 %18, -1
  %33 = select i1 %32, i32 %18, i32 %17
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %10, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds i32, i32* %10, i64 %34
  %38 = icmp eq i32 %36, %1
  br i1 %38, label %174, label %39

39:                                               ; preds = %31
  %40 = icmp eq i32 %36, -1
  br i1 %40, label %41, label %45

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %0, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = add i32 %43, 1
  store i32 %44, i32* %42, align 8
  br label %45

45:                                               ; preds = %41, %39
  store i32 %1, i32* %37, align 4
  %46 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %0, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = load i32, i32* %4, align 8
  %49 = lshr i32 %48, 2
  %50 = sub i32 %48, %49
  %51 = icmp ult i32 %47, %50
  br i1 %51, label %174, label %52

52:                                               ; preds = %45
  %53 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %53) #7
  %54 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %3, i64 0, i32 1
  %55 = bitcast [8 x i32]* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 32, i1 false) #7
  %56 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %3, i64 0, i32 1, i64 0
  %57 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %3, i64 0, i32 0
  store i32* %56, i32** %57, align 8
  %58 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %3, i64 0, i32 2
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %3, i64 0, i32 3
  store i32 8, i32* %59, align 4
  %60 = load i32*, i32** %9, align 8
  %61 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %0, i64 0, i32 0, i32 1, i64 0
  %62 = icmp eq i32* %60, %61
  br i1 %62, label %63, label %104

63:                                               ; preds = %52
  %64 = bitcast i32* %56 to i8*
  %65 = icmp ugt i32 %48, 8
  br i1 %65, label %66, label %90

66:                                               ; preds = %63, %66
  %67 = phi i32 [ %68, %66 ], [ 8, %63 ]
  %68 = shl i32 %67, 1
  %69 = icmp ult i32 %68, %48
  br i1 %69, label %66, label %70

70:                                               ; preds = %66
  store i32 %68, i32* %59, align 4
  %71 = zext i32 %68 to i64
  %72 = shl nuw nsw i64 %71, 2
  %73 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %74 = call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 %72, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %73) #7
  %75 = load i32, i32* %58, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %70
  %78 = zext i32 %75 to i64
  %79 = shl nuw nsw i64 %78, 2
  %80 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %3 to i8**
  %81 = load i8*, i8** %80, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %74, i8* align 4 %81, i64 %79, i1 false) #7
  br label %82

82:                                               ; preds = %77, %70
  %83 = load i32*, i32** %57, align 8
  %84 = icmp eq i32* %83, %56
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = bitcast i32* %83 to i8*
  call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %86) #7
  br label %87

87:                                               ; preds = %85, %82
  %88 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %3 to i8**
  store i8* %74, i8** %88, align 8
  %89 = load i32, i32* %4, align 8
  br label %90

90:                                               ; preds = %87, %63
  %91 = phi i8* [ %74, %87 ], [ %64, %63 ]
  %92 = phi i32 [ %89, %87 ], [ %48, %63 ]
  store i32 %48, i32* %58, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %90
  %95 = zext i32 %92 to i64
  %96 = shl nuw nsw i64 %95, 2
  %97 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %0 to i8**
  %98 = load i8*, i8** %97, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %98, i64 %96, i1 false) #7
  %99 = load i32, i32* %58, align 8
  br label %100

100:                                              ; preds = %94, %90
  %101 = phi i32 [ %99, %94 ], [ %48, %90 ]
  store i32 0, i32* %4, align 8
  %102 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %0, i64 0, i32 0, i32 3
  %103 = load i32, i32* %102, align 4
  br label %109

104:                                              ; preds = %52
  %105 = ptrtoint i32* %60 to i64
  %106 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %3 to i64*
  store i64 %105, i64* %106, align 8
  store i32 %48, i32* %58, align 8
  %107 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %0, i64 0, i32 0, i32 3
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* %59, align 4
  store i32* %61, i32** %9, align 8
  store i32 0, i32* %4, align 8
  store i32 8, i32* %107, align 4
  br label %109

109:                                              ; preds = %104, %100
  %110 = phi i32 [ 8, %104 ], [ %103, %100 ]
  %111 = phi i32 [ %48, %104 ], [ %101, %100 ]
  store i32 0, i32* %46, align 8
  %112 = shl i32 %111, 1
  %113 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %0, i64 0, i32 0, i32 3
  %114 = icmp ult i32 %110, %112
  br i1 %114, label %115, label %138

115:                                              ; preds = %109, %115
  %116 = phi i32 [ %117, %115 ], [ %110, %109 ]
  %117 = shl i32 %116, 1
  %118 = icmp ult i32 %117, %112
  br i1 %118, label %115, label %119

119:                                              ; preds = %115
  store i32 %117, i32* %113, align 4
  %120 = zext i32 %117 to i64
  %121 = shl nuw nsw i64 %120, 2
  %122 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %123 = call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 %121, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %122) #7
  %124 = load i32, i32* %4, align 8
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %131, label %126

126:                                              ; preds = %119
  %127 = zext i32 %124 to i64
  %128 = shl nuw nsw i64 %127, 2
  %129 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %0 to i8**
  %130 = load i8*, i8** %129, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %123, i8* align 4 %130, i64 %128, i1 false) #7
  br label %131

131:                                              ; preds = %126, %119
  %132 = load i32*, i32** %9, align 8
  %133 = icmp eq i32* %132, %61
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = bitcast i32* %132 to i8*
  call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %135) #7
  br label %136

136:                                              ; preds = %131, %134
  %137 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %0 to i8**
  store i8* %123, i8** %137, align 8
  store i32 %112, i32* %4, align 8
  br label %140

138:                                              ; preds = %109
  store i32 %112, i32* %4, align 8
  %139 = icmp eq i32 %112, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %136, %138
  br label %141

141:                                              ; preds = %140, %141
  %142 = phi i64 [ %145, %141 ], [ 0, %140 ]
  %143 = load i32*, i32** %9, align 8
  %144 = getelementptr inbounds i32, i32* %143, i64 %142
  store i32 -1, i32* %144, align 4
  %145 = add nuw nsw i64 %142, 1
  %146 = load i32, i32* %4, align 8
  %147 = zext i32 %146 to i64
  %148 = icmp ult i64 %145, %147
  br i1 %148, label %141, label %149

149:                                              ; preds = %141
  %150 = load i32, i32* %58, align 8
  br label %151

151:                                              ; preds = %149, %138
  %152 = phi i32 [ %150, %149 ], [ %111, %138 ]
  %153 = load i32*, i32** %57, align 8
  %154 = zext i32 %152 to i64
  %155 = getelementptr inbounds i32, i32* %153, i64 %154
  %156 = icmp eq i32 %152, 0
  br i1 %156, label %159, label %164

157:                                              ; preds = %170
  %158 = load i32*, i32** %57, align 8
  br label %159

159:                                              ; preds = %157, %151
  %160 = phi i32* [ %158, %157 ], [ %153, %151 ]
  %161 = icmp eq i32* %160, %56
  br i1 %161, label %173, label %162

162:                                              ; preds = %159
  %163 = bitcast i32* %160 to i8*
  call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %163) #7
  br label %173

164:                                              ; preds = %151, %170
  %165 = phi i32* [ %171, %170 ], [ %153, %151 ]
  %166 = load i32, i32* %165, align 4
  %167 = icmp sgt i32 %166, -1
  br i1 %167, label %168, label %170

168:                                              ; preds = %164
  %169 = call fastcc zeroext i1 @_ZN4absl24synchronization_internal12_GLOBAL__N_17NodeSet6insertEi(%"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %0, i32 %166) #7
  br label %170

170:                                              ; preds = %168, %164
  %171 = getelementptr inbounds i32, i32* %165, i64 1
  %172 = icmp eq i32* %171, %155
  br i1 %172, label %157, label %164

173:                                              ; preds = %159, %162
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %53) #7
  br label %174

174:                                              ; preds = %20, %2, %173, %45, %31
  %175 = phi i1 [ false, %31 ], [ true, %45 ], [ true, %173 ], [ false, %2 ], [ false, %20 ]
  ret i1 %175
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4absl24synchronization_internal11GraphCycles5GetIdEPv(%"class.absl::synchronization_internal::GraphCycles"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::synchronization_internal::GraphCycles", %"class.absl::synchronization_internal::GraphCycles"* %0, i64 0, i32 0
  %4 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %3, align 8
  %5 = ptrtoint i8* %1 to i64
  %6 = xor i64 %5, -1136490970041655429
  %7 = urem i64 %5, 8171
  %8 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %4, i64 0, i32 2, i32 1, i32 0, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %39, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %4, i64 0, i32 2, i32 0
  %13 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %12, align 8
  %14 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %13, i64 0, i32 0
  %15 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %14, align 8
  br label %20

16:                                               ; preds = %20
  %17 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %24, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %39, label %20

20:                                               ; preds = %16, %11
  %21 = phi i32 [ %9, %11 ], [ %18, %16 ]
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %15, i64 %22
  %24 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %23, align 8
  %25 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %24, i64 0, i32 4
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, %6
  br i1 %27, label %28, label %16

28:                                               ; preds = %20
  %29 = zext i32 %21 to i64
  %30 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %4, i64 0, i32 0, i32 0
  %31 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %30, align 8
  %32 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %31, i64 %29
  %33 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %32, align 8
  %34 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = shl nuw i64 %36, 32
  %38 = or i64 %37, %29
  br label %202

39:                                               ; preds = %16, %2
  %40 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %4, i64 0, i32 1, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %171

43:                                               ; preds = %39
  %44 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %45 = tail call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 464, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %44) #7
  %46 = getelementptr inbounds i8, i8* %45, i64 32
  %47 = bitcast i8* %46 to i32*
  %48 = getelementptr inbounds i8, i8* %45, i64 24
  %49 = bitcast i8* %48 to i32**
  %50 = getelementptr inbounds i8, i8* %45, i64 64
  %51 = bitcast i8* %50 to i32*
  %52 = getelementptr inbounds i8, i8* %45, i64 68
  %53 = bitcast i8* %52 to i32*
  %54 = bitcast i8* %48 to i8**
  store i8* %46, i8** %54, align 8
  store i32 8, i32* %53, align 4
  store i32 8, i32* %51, align 8
  store i32 -1, i32* %47, align 4
  %55 = getelementptr inbounds i8, i8* %45, i64 36
  %56 = bitcast i8* %55 to i32*
  store i32 -1, i32* %56, align 4
  br label %57

57:                                               ; preds = %43, %57
  %58 = phi i64 [ 2, %43 ], [ %61, %57 ]
  %59 = load i32*, i32** %49, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 %58
  store i32 -1, i32* %60, align 4
  %61 = add nuw nsw i64 %58, 1
  %62 = load i32, i32* %51, align 8
  %63 = zext i32 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %57, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds i8, i8* %45, i64 72
  %67 = bitcast i8* %66 to i32*
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds i8, i8* %45, i64 88
  %69 = bitcast i8* %68 to i32*
  %70 = getelementptr inbounds i8, i8* %45, i64 80
  %71 = bitcast i8* %70 to i32**
  %72 = getelementptr inbounds i8, i8* %45, i64 120
  %73 = bitcast i8* %72 to i32*
  %74 = getelementptr inbounds i8, i8* %45, i64 124
  %75 = bitcast i8* %74 to i32*
  %76 = bitcast i8* %70 to i8**
  store i8* %68, i8** %76, align 8
  store i32 8, i32* %75, align 4
  store i32 8, i32* %73, align 8
  store i32 -1, i32* %69, align 4
  %77 = getelementptr inbounds i8, i8* %45, i64 92
  %78 = bitcast i8* %77 to i32*
  store i32 -1, i32* %78, align 4
  br label %79

79:                                               ; preds = %65, %79
  %80 = phi i64 [ 2, %65 ], [ %83, %79 ]
  %81 = load i32*, i32** %71, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 %80
  store i32 -1, i32* %82, align 4
  %83 = add nuw nsw i64 %80, 1
  %84 = load i32, i32* %73, align 8
  %85 = zext i32 %84 to i64
  %86 = icmp ult i64 %83, %85
  br i1 %86, label %79, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds i8, i8* %45, i64 128
  %89 = bitcast i8* %88 to i32*
  store i32 0, i32* %89, align 8
  %90 = ptrtoint i8* %45 to i64
  %91 = getelementptr inbounds i8, i8* %45, i64 4
  %92 = bitcast i8* %91 to i32*
  store i32 1, i32* %92, align 4
  %93 = getelementptr inbounds i8, i8* %45, i64 12
  store i8 0, i8* %93, align 4
  %94 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %3, align 8
  %95 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %94, i64 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 8
  %97 = bitcast i8* %45 to i32*
  store i32 %96, i32* %97, align 8
  %98 = getelementptr inbounds i8, i8* %45, i64 16
  %99 = bitcast i8* %98 to i64*
  store i64 %6, i64* %99, align 8
  %100 = getelementptr inbounds i8, i8* %45, i64 140
  %101 = bitcast i8* %100 to i32*
  store i32 0, i32* %101, align 4
  %102 = getelementptr inbounds i8, i8* %45, i64 136
  %103 = bitcast i8* %102 to i32*
  store i32 0, i32* %103, align 8
  %104 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %3, align 8
  %105 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %104, i64 0, i32 0, i32 2
  %106 = load i32, i32* %105, align 8
  %107 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %104, i64 0, i32 0, i32 3
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %106, %108
  br i1 %109, label %113, label %110

110:                                              ; preds = %87
  %111 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %104, i64 0, i32 0, i32 0
  %112 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %111, align 8
  br label %145

113:                                              ; preds = %87
  %114 = add i32 %106, 1
  %115 = icmp eq i32 %106, -1
  br i1 %115, label %123, label %116

116:                                              ; preds = %113, %116
  %117 = phi i32 [ %118, %116 ], [ %106, %113 ]
  %118 = shl i32 %117, 1
  %119 = icmp ult i32 %118, %114
  br i1 %119, label %116, label %120

120:                                              ; preds = %116
  store i32 %118, i32* %107, align 4
  %121 = zext i32 %118 to i64
  %122 = shl nuw nsw i64 %121, 3
  br label %123

123:                                              ; preds = %120, %113
  %124 = phi i64 [ %122, %120 ], [ 34359738360, %113 ]
  %125 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %126 = tail call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 %124, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %125) #7
  %127 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %104, i64 0, i32 0, i32 0
  %128 = load i32, i32* %105, align 8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %123
  %131 = zext i32 %128 to i64
  %132 = shl nuw nsw i64 %131, 3
  %133 = bitcast %"struct.absl::synchronization_internal::GraphCycles::Rep"* %104 to i8**
  %134 = load i8*, i8** %133, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %134, i64 %132, i1 false) #7
  br label %135

135:                                              ; preds = %130, %123
  %136 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %127, align 8
  %137 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %104, i64 0, i32 0, i32 1, i64 0
  %138 = icmp eq %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %136, %137
  br i1 %138, label %141, label %139

139:                                              ; preds = %135
  %140 = bitcast %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %136 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %140) #7
  br label %141

141:                                              ; preds = %139, %135
  %142 = bitcast %"struct.absl::synchronization_internal::GraphCycles::Rep"* %104 to i8**
  store i8* %126, i8** %142, align 8
  %143 = bitcast i8* %126 to %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**
  %144 = load i32, i32* %105, align 8
  br label %145

145:                                              ; preds = %110, %141
  %146 = phi i32 [ %106, %110 ], [ %144, %141 ]
  %147 = phi %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** [ %112, %110 ], [ %143, %141 ]
  %148 = zext i32 %146 to i64
  %149 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %147, i64 %148
  %150 = bitcast %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %149 to i64*
  store i64 %90, i64* %150, align 8
  %151 = load i32, i32* %105, align 8
  %152 = add i32 %151, 1
  store i32 %152, i32* %105, align 8
  %153 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %3, align 8
  %154 = load i32, i32* %97, align 8
  %155 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %153, i64 0, i32 2, i32 1, i32 0, i64 %7
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %153, i64 0, i32 2, i32 0
  %158 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %157, align 8
  %159 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %158, i64 0, i32 0
  %160 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %159, align 8
  %161 = zext i32 %154 to i64
  %162 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %160, i64 %161
  %163 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %162, align 8
  %164 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %163, i64 0, i32 2
  store i32 %156, i32* %164, align 8
  store i32 %154, i32* %155, align 4
  %165 = load i32, i32* %97, align 8
  %166 = load i32, i32* %92, align 4
  %167 = zext i32 %166 to i64
  %168 = shl nuw i64 %167, 32
  %169 = zext i32 %165 to i64
  %170 = or i64 %168, %169
  br label %202

171:                                              ; preds = %39
  %172 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %4, i64 0, i32 1, i32 0
  %173 = load i32*, i32** %172, align 8
  %174 = add i32 %41, -1
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds i32, i32* %173, i64 %175
  %177 = load i32, i32* %176, align 4
  store i32 %174, i32* %40, align 8
  %178 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %3, align 8
  %179 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %178, i64 0, i32 0, i32 0
  %180 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %179, align 8
  %181 = zext i32 %177 to i64
  %182 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %180, i64 %181
  %183 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %182, align 8
  %184 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %183, i64 0, i32 4
  store i64 %6, i64* %184, align 8
  %185 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %183, i64 0, i32 8
  store i32 0, i32* %185, align 4
  %186 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %183, i64 0, i32 7
  store i32 0, i32* %186, align 8
  %187 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %3, align 8
  %188 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %187, i64 0, i32 2, i32 1, i32 0, i64 %7
  %189 = load i32, i32* %188, align 4
  %190 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %187, i64 0, i32 2, i32 0
  %191 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %190, align 8
  %192 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %191, i64 0, i32 0
  %193 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %192, align 8
  %194 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %193, i64 %181
  %195 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %194, align 8
  %196 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %195, i64 0, i32 2
  store i32 %189, i32* %196, align 8
  store i32 %177, i32* %188, align 4
  %197 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %183, i64 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = zext i32 %198 to i64
  %200 = shl nuw i64 %199, 32
  %201 = or i64 %200, %181
  br label %202

202:                                              ; preds = %171, %145, %28
  %203 = phi i64 [ %38, %28 ], [ %170, %145 ], [ %201, %171 ]
  ret i64 %203
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl24synchronization_internal11GraphCycles10RemoveNodeEPv(%"class.absl::synchronization_internal::GraphCycles"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::synchronization_internal::GraphCycles", %"class.absl::synchronization_internal::GraphCycles"* %0, i64 0, i32 0
  %4 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %3, align 8
  %5 = ptrtoint i8* %1 to i64
  %6 = xor i64 %5, -1136490970041655429
  %7 = urem i64 %5, 8171
  %8 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %4, i64 0, i32 2, i32 1, i32 0, i64 %7
  %9 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %4, i64 0, i32 2, i32 0
  br label %10

10:                                               ; preds = %14, %2
  %11 = phi i32* [ %8, %2 ], [ %24, %14 ]
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %248, label %14

14:                                               ; preds = %10
  %15 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %9, align 8
  %16 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %15, i64 0, i32 0
  %17 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %16, align 8
  %18 = zext i32 %12 to i64
  %19 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %17, i64 %18
  %20 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %19, align 8
  %21 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %20, i64 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, %6
  %24 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %20, i64 0, i32 2
  br i1 %23, label %25, label %10

25:                                               ; preds = %14
  %26 = zext i32 %12 to i64
  %27 = load i32, i32* %24, align 8
  store i32 %27, i32* %11, align 4
  store i32 -1, i32* %24, align 8
  %28 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %3, align 8
  %29 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %28, i64 0, i32 0, i32 0
  %30 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %29, align 8
  %31 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %30, i64 %26
  %32 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %31, align 8
  %33 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %32, i64 0, i32 6, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %32, i64 0, i32 6, i32 0, i32 0
  %35 = mul i32 %12, 41
  br label %36

36:                                               ; preds = %93, %25
  %37 = phi i64 [ 0, %25 ], [ %51, %93 ]
  %38 = load i32, i32* %33, align 8
  %39 = and i64 %37, 4294967295
  %40 = zext i32 %38 to i64
  br label %41

41:                                               ; preds = %47, %36
  %42 = phi i64 [ %51, %47 ], [ %39, %36 ]
  %43 = icmp ult i64 %42, %40
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %32, i64 0, i32 5, i32 0, i32 2
  %46 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %32, i64 0, i32 5, i32 0, i32 0
  br label %99

47:                                               ; preds = %41
  %48 = load i32*, i32** %34, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 %42
  %50 = load i32, i32* %49, align 4
  %51 = add nuw nsw i64 %42, 1
  %52 = icmp sgt i32 %50, -1
  br i1 %52, label %53, label %41

53:                                               ; preds = %47
  %54 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %3, align 8
  %55 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %54, i64 0, i32 0, i32 0
  %56 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %55, align 8
  %57 = zext i32 %50 to i64
  %58 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %56, i64 %57
  %59 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %58, align 8
  %60 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %59, i64 0, i32 5, i32 0, i32 2
  %61 = load i32, i32* %60, align 8
  %62 = add i32 %61, -1
  %63 = and i32 %62, %35
  %64 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %59, i64 0, i32 5, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = zext i32 %63 to i64
  %67 = getelementptr inbounds i32, i32* %65, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %12
  br i1 %69, label %96, label %70

70:                                               ; preds = %53, %75
  %71 = phi i32 [ %84, %75 ], [ %68, %53 ]
  %72 = phi i32 [ %81, %75 ], [ %63, %53 ]
  %73 = phi i32 [ %79, %75 ], [ -1, %53 ]
  %74 = icmp eq i32 %71, -1
  br i1 %74, label %86, label %75

75:                                               ; preds = %70
  %76 = icmp eq i32 %71, -2
  %77 = icmp slt i32 %73, 0
  %78 = and i1 %76, %77
  %79 = select i1 %78, i32 %72, i32 %73
  %80 = add i32 %72, 1
  %81 = and i32 %80, %62
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32* %65, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, %12
  br i1 %85, label %94, label %70

86:                                               ; preds = %70
  %87 = icmp sgt i32 %73, -1
  %88 = select i1 %87, i32 %73, i32 %72
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, i32* %65, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, %12
  br i1 %92, label %96, label %93

93:                                               ; preds = %86, %96
  br label %36

94:                                               ; preds = %75
  %95 = zext i32 %81 to i64
  br label %96

96:                                               ; preds = %94, %86, %53
  %97 = phi i64 [ %89, %86 ], [ %66, %53 ], [ %95, %94 ]
  %98 = getelementptr inbounds i32, i32* %65, i64 %97
  store i32 -2, i32* %98, align 4
  br label %93

99:                                               ; preds = %191, %44
  %100 = phi i64 [ 0, %44 ], [ %111, %191 ]
  %101 = load i32, i32* %45, align 8
  %102 = load i32*, i32** %46, align 8
  %103 = and i64 %100, 4294967295
  %104 = zext i32 %101 to i64
  br label %105

105:                                              ; preds = %108, %99
  %106 = phi i64 [ %111, %108 ], [ %103, %99 ]
  %107 = icmp ult i64 %106, %104
  br i1 %107, label %108, label %113

108:                                              ; preds = %105
  %109 = getelementptr inbounds i32, i32* %102, i64 %106
  %110 = load i32, i32* %109, align 4
  %111 = add nuw nsw i64 %106, 1
  %112 = icmp sgt i32 %110, -1
  br i1 %112, label %151, label %105

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %32, i64 0, i32 5, i32 0, i32 1, i64 0
  %115 = icmp eq i32* %102, %114
  br i1 %115, label %118, label %116

116:                                              ; preds = %113
  %117 = bitcast i32* %102 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %117) #7
  br label %118

118:                                              ; preds = %116, %113
  store i32* %114, i32** %46, align 8
  %119 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %32, i64 0, i32 5, i32 0, i32 3
  store i32 8, i32* %119, align 4
  store i32 8, i32* %45, align 8
  store i32 -1, i32* %114, align 4
  br label %120

120:                                              ; preds = %118, %120
  %121 = phi i64 [ 1, %118 ], [ %124, %120 ]
  %122 = load i32*, i32** %46, align 8
  %123 = getelementptr inbounds i32, i32* %122, i64 %121
  store i32 -1, i32* %123, align 4
  %124 = add nuw nsw i64 %121, 1
  %125 = load i32, i32* %45, align 8
  %126 = zext i32 %125 to i64
  %127 = icmp ult i64 %124, %126
  br i1 %127, label %120, label %128

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %32, i64 0, i32 5, i32 1
  store i32 0, i32* %129, align 8
  %130 = load i32*, i32** %34, align 8
  %131 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %32, i64 0, i32 6, i32 0, i32 1, i64 0
  %132 = icmp eq i32* %130, %131
  br i1 %132, label %135, label %133

133:                                              ; preds = %128
  %134 = bitcast i32* %130 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %134) #7
  br label %135

135:                                              ; preds = %133, %128
  store i32* %131, i32** %34, align 8
  %136 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %32, i64 0, i32 6, i32 0, i32 3
  store i32 8, i32* %136, align 4
  store i32 8, i32* %33, align 8
  store i32 -1, i32* %131, align 4
  br label %137

137:                                              ; preds = %135, %137
  %138 = phi i64 [ 1, %135 ], [ %141, %137 ]
  %139 = load i32*, i32** %34, align 8
  %140 = getelementptr inbounds i32, i32* %139, i64 %138
  store i32 -1, i32* %140, align 4
  %141 = add nuw nsw i64 %138, 1
  %142 = load i32, i32* %33, align 8
  %143 = zext i32 %142 to i64
  %144 = icmp ult i64 %141, %143
  br i1 %144, label %137, label %145

145:                                              ; preds = %137
  %146 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %32, i64 0, i32 6, i32 1
  store i32 0, i32* %146, align 8
  %147 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %32, i64 0, i32 4
  store i64 -1136490970041655429, i64* %147, align 8
  %148 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %32, i64 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %248, label %197

151:                                              ; preds = %108
  %152 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %3, align 8
  %153 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %152, i64 0, i32 0, i32 0
  %154 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %153, align 8
  %155 = zext i32 %110 to i64
  %156 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %154, i64 %155
  %157 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %156, align 8
  %158 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %157, i64 0, i32 6, i32 0, i32 2
  %159 = load i32, i32* %158, align 8
  %160 = add i32 %159, -1
  %161 = and i32 %160, %35
  %162 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %157, i64 0, i32 6, i32 0, i32 0
  %163 = load i32*, i32** %162, align 8
  %164 = zext i32 %161 to i64
  %165 = getelementptr inbounds i32, i32* %163, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, %12
  br i1 %167, label %194, label %168

168:                                              ; preds = %151, %173
  %169 = phi i32 [ %182, %173 ], [ %166, %151 ]
  %170 = phi i32 [ %179, %173 ], [ %161, %151 ]
  %171 = phi i32 [ %177, %173 ], [ -1, %151 ]
  %172 = icmp eq i32 %169, -1
  br i1 %172, label %184, label %173

173:                                              ; preds = %168
  %174 = icmp eq i32 %169, -2
  %175 = icmp slt i32 %171, 0
  %176 = and i1 %174, %175
  %177 = select i1 %176, i32 %170, i32 %171
  %178 = add i32 %170, 1
  %179 = and i32 %178, %160
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds i32, i32* %163, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %182, %12
  br i1 %183, label %192, label %168

184:                                              ; preds = %168
  %185 = icmp sgt i32 %171, -1
  %186 = select i1 %185, i32 %171, i32 %170
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds i32, i32* %163, i64 %187
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %12
  br i1 %190, label %194, label %191

191:                                              ; preds = %184, %194
  br label %99

192:                                              ; preds = %173
  %193 = zext i32 %179 to i64
  br label %194

194:                                              ; preds = %192, %184, %151
  %195 = phi i64 [ %187, %184 ], [ %164, %151 ], [ %193, %192 ]
  %196 = getelementptr inbounds i32, i32* %163, i64 %195
  store i32 -2, i32* %196, align 4
  br label %191

197:                                              ; preds = %145
  %198 = add nuw i32 %149, 1
  store i32 %198, i32* %148, align 4
  %199 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %3, align 8
  %200 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %199, i64 0, i32 1
  %201 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %199, i64 0, i32 1, i32 2
  %202 = load i32, i32* %201, align 8
  %203 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %199, i64 0, i32 1, i32 3
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %202, %204
  br i1 %205, label %209, label %206

206:                                              ; preds = %197
  %207 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %200, i64 0, i32 0
  %208 = load i32*, i32** %207, align 8
  br label %241

209:                                              ; preds = %197
  %210 = add i32 %202, 1
  %211 = icmp eq i32 %202, -1
  br i1 %211, label %219, label %212

212:                                              ; preds = %209, %212
  %213 = phi i32 [ %214, %212 ], [ %202, %209 ]
  %214 = shl i32 %213, 1
  %215 = icmp ult i32 %214, %210
  br i1 %215, label %212, label %216

216:                                              ; preds = %212
  store i32 %214, i32* %203, align 4
  %217 = zext i32 %214 to i64
  %218 = shl nuw nsw i64 %217, 2
  br label %219

219:                                              ; preds = %216, %209
  %220 = phi i64 [ %218, %216 ], [ 17179869180, %209 ]
  %221 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %222 = tail call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 %220, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %221) #7
  %223 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %200, i64 0, i32 0
  %224 = load i32, i32* %201, align 8
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %231, label %226

226:                                              ; preds = %219
  %227 = zext i32 %224 to i64
  %228 = shl nuw nsw i64 %227, 2
  %229 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %200 to i8**
  %230 = load i8*, i8** %229, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %222, i8* align 4 %230, i64 %228, i1 false) #7
  br label %231

231:                                              ; preds = %226, %219
  %232 = load i32*, i32** %223, align 8
  %233 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %199, i64 0, i32 1, i32 1, i64 0
  %234 = icmp eq i32* %232, %233
  br i1 %234, label %237, label %235

235:                                              ; preds = %231
  %236 = bitcast i32* %232 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %236) #7
  br label %237

237:                                              ; preds = %235, %231
  %238 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %200 to i8**
  store i8* %222, i8** %238, align 8
  %239 = bitcast i8* %222 to i32*
  %240 = load i32, i32* %201, align 8
  br label %241

241:                                              ; preds = %206, %237
  %242 = phi i32 [ %202, %206 ], [ %240, %237 ]
  %243 = phi i32* [ %208, %206 ], [ %239, %237 ]
  %244 = zext i32 %242 to i64
  %245 = getelementptr inbounds i32, i32* %243, i64 %244
  store i32 %12, i32* %245, align 4
  %246 = load i32, i32* %201, align 8
  %247 = add i32 %246, 1
  store i32 %247, i32* %201, align 8
  br label %248

248:                                              ; preds = %10, %241, %145
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN4absl24synchronization_internal11GraphCycles3PtrENS0_7GraphIdE(%"class.absl::synchronization_internal::GraphCycles"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.absl::synchronization_internal::GraphCycles", %"class.absl::synchronization_internal::GraphCycles"* %0, i64 0, i32 0
  %4 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %3, align 8
  %5 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %4, i64 0, i32 0, i32 0
  %6 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %5, align 8
  %7 = and i64 %1, 4294967295
  %8 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %6, i64 %7
  %9 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %8, align 8
  %10 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = lshr i64 %1, 32
  %13 = trunc i64 %12 to i32
  %14 = icmp ne i32 %11, %13
  %15 = icmp eq %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %9, null
  %16 = or i1 %15, %14
  br i1 %16, label %22, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %9, i64 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = xor i64 %19, -1136490970041655429
  %21 = inttoptr i64 %20 to i8*
  br label %22

22:                                               ; preds = %2, %17
  %23 = phi i8* [ %21, %17 ], [ null, %2 ]
  ret i8* %23
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4absl24synchronization_internal11GraphCycles7HasNodeENS0_7GraphIdE(%"class.absl::synchronization_internal::GraphCycles"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.absl::synchronization_internal::GraphCycles", %"class.absl::synchronization_internal::GraphCycles"* %0, i64 0, i32 0
  %4 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %3, align 8
  %5 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %4, i64 0, i32 0, i32 0
  %6 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %5, align 8
  %7 = and i64 %1, 4294967295
  %8 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %6, i64 %7
  %9 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %8, align 8
  %10 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = lshr i64 %1, 32
  %13 = trunc i64 %12 to i32
  %14 = icmp eq i32 %11, %13
  %15 = icmp ne %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %9, null
  %16 = and i1 %15, %14
  ret i1 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4absl24synchronization_internal11GraphCycles7HasEdgeENS0_7GraphIdES2_(%"class.absl::synchronization_internal::GraphCycles"* nocapture readonly, i64, i64) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.absl::synchronization_internal::GraphCycles", %"class.absl::synchronization_internal::GraphCycles"* %0, i64 0, i32 0
  %5 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %4, align 8
  %6 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %5, i64 0, i32 0, i32 0
  %7 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %6, align 8
  %8 = and i64 %1, 4294967295
  %9 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %7, i64 %8
  %10 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %9, align 8
  %11 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = lshr i64 %1, 32
  %14 = trunc i64 %13 to i32
  %15 = icmp ne i32 %12, %14
  %16 = icmp eq %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %10, null
  %17 = or i1 %16, %15
  br i1 %17, label %67, label %18

18:                                               ; preds = %3
  %19 = and i64 %2, 4294967295
  %20 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %7, i64 %19
  %21 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %20, align 8
  %22 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = lshr i64 %2, 32
  %25 = trunc i64 %24 to i32
  %26 = icmp ne i32 %23, %25
  %27 = icmp eq %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %21, null
  %28 = or i1 %27, %26
  br i1 %28, label %67, label %29

29:                                               ; preds = %18
  %30 = trunc i64 %2 to i32
  %31 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %10, i64 0, i32 6, i32 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = add i32 %32, -1
  %34 = mul i32 %30, 41
  %35 = and i32 %33, %34
  %36 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %10, i64 0, i32 6, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds i32, i32* %37, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %30
  br i1 %41, label %64, label %42

42:                                               ; preds = %29, %53
  %43 = phi i32 [ %62, %53 ], [ %40, %29 ]
  %44 = phi i32 [ %59, %53 ], [ %35, %29 ]
  %45 = phi i32 [ %57, %53 ], [ -1, %29 ]
  %46 = icmp eq i32 %43, -1
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = icmp sgt i32 %45, -1
  %49 = select i1 %48, i32 %45, i32 %44
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %37, i64 %50
  %52 = load i32, i32* %51, align 4
  br label %64

53:                                               ; preds = %42
  %54 = icmp eq i32 %43, -2
  %55 = icmp slt i32 %45, 0
  %56 = and i1 %54, %55
  %57 = select i1 %56, i32 %44, i32 %45
  %58 = add i32 %44, 1
  %59 = and i32 %58, %33
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %37, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %30
  br i1 %63, label %64, label %42

64:                                               ; preds = %53, %29, %47
  %65 = phi i32 [ %30, %29 ], [ %52, %47 ], [ %30, %53 ]
  %66 = icmp eq i32 %65, %30
  br label %67

67:                                               ; preds = %18, %3, %64
  %68 = phi i1 [ false, %18 ], [ false, %3 ], [ %66, %64 ]
  ret i1 %68
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4absl24synchronization_internal11GraphCycles10RemoveEdgeENS0_7GraphIdES2_(%"class.absl::synchronization_internal::GraphCycles"* nocapture readonly, i64, i64) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.absl::synchronization_internal::GraphCycles", %"class.absl::synchronization_internal::GraphCycles"* %0, i64 0, i32 0
  %5 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %4, align 8
  %6 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %5, i64 0, i32 0, i32 0
  %7 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %6, align 8
  %8 = and i64 %1, 4294967295
  %9 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %7, i64 %8
  %10 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %9, align 8
  %11 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = lshr i64 %1, 32
  %14 = trunc i64 %13 to i32
  %15 = icmp eq i32 %12, %14
  %16 = select i1 %15, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %10, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* null
  %17 = and i64 %2, 4294967295
  %18 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %7, i64 %17
  %19 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %18, align 8
  %20 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = lshr i64 %2, 32
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %21, %23
  %25 = select i1 %24, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %19, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* null
  %26 = icmp ne %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %16, null
  %27 = icmp ne %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %25, null
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %111

29:                                               ; preds = %3
  %30 = trunc i64 %2 to i32
  %31 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %16, i64 0, i32 6, i32 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = add i32 %32, -1
  %34 = mul i32 %30, 41
  %35 = and i32 %33, %34
  %36 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %16, i64 0, i32 6, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds i32, i32* %37, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %30
  br i1 %41, label %67, label %42

42:                                               ; preds = %29, %47
  %43 = phi i32 [ %56, %47 ], [ %40, %29 ]
  %44 = phi i32 [ %53, %47 ], [ %35, %29 ]
  %45 = phi i32 [ %51, %47 ], [ -1, %29 ]
  %46 = icmp eq i32 %43, -1
  br i1 %46, label %58, label %47

47:                                               ; preds = %42
  %48 = icmp eq i32 %43, -2
  %49 = icmp slt i32 %45, 0
  %50 = and i1 %48, %49
  %51 = select i1 %50, i32 %44, i32 %45
  %52 = add i32 %44, 1
  %53 = and i32 %52, %33
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %37, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %30
  br i1 %57, label %65, label %42

58:                                               ; preds = %42
  %59 = icmp sgt i32 %45, -1
  %60 = select i1 %59, i32 %45, i32 %44
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %37, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %30
  br i1 %64, label %67, label %70

65:                                               ; preds = %47
  %66 = zext i32 %53 to i64
  br label %67

67:                                               ; preds = %65, %58, %29
  %68 = phi i64 [ %61, %58 ], [ %38, %29 ], [ %66, %65 ]
  %69 = getelementptr inbounds i32, i32* %37, i64 %68
  store i32 -2, i32* %69, align 4
  br label %70

70:                                               ; preds = %58, %67
  %71 = trunc i64 %1 to i32
  %72 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %25, i64 0, i32 5, i32 0, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, -1
  %75 = mul i32 %71, 41
  %76 = and i32 %74, %75
  %77 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %25, i64 0, i32 5, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8
  %79 = zext i32 %76 to i64
  %80 = getelementptr inbounds i32, i32* %78, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, %71
  br i1 %82, label %108, label %83

83:                                               ; preds = %70, %88
  %84 = phi i32 [ %97, %88 ], [ %81, %70 ]
  %85 = phi i32 [ %94, %88 ], [ %76, %70 ]
  %86 = phi i32 [ %92, %88 ], [ -1, %70 ]
  %87 = icmp eq i32 %84, -1
  br i1 %87, label %99, label %88

88:                                               ; preds = %83
  %89 = icmp eq i32 %84, -2
  %90 = icmp slt i32 %86, 0
  %91 = and i1 %89, %90
  %92 = select i1 %91, i32 %85, i32 %86
  %93 = add i32 %85, 1
  %94 = and i32 %93, %74
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds i32, i32* %78, i64 %95
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, %71
  br i1 %98, label %106, label %83

99:                                               ; preds = %83
  %100 = icmp sgt i32 %86, -1
  %101 = select i1 %100, i32 %86, i32 %85
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i32, i32* %78, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, %71
  br i1 %105, label %108, label %111

106:                                              ; preds = %88
  %107 = zext i32 %94 to i64
  br label %108

108:                                              ; preds = %106, %99, %70
  %109 = phi i64 [ %102, %99 ], [ %79, %70 ], [ %107, %106 ]
  %110 = getelementptr inbounds i32, i32* %78, i64 %109
  store i32 -2, i32* %110, align 4
  br label %111

111:                                              ; preds = %108, %99, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4absl24synchronization_internal11GraphCycles10InsertEdgeENS0_7GraphIdES2_(%"class.absl::synchronization_internal::GraphCycles"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.ByRank, align 8
  %5 = alloca %struct.ByRank, align 8
  %6 = getelementptr inbounds %"class.absl::synchronization_internal::GraphCycles", %"class.absl::synchronization_internal::GraphCycles"* %0, i64 0, i32 0
  %7 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %6, align 8
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %2 to i32
  %10 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 0, i32 0
  %11 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %12 = and i64 %1, 4294967295
  %13 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %11, i64 %12
  %14 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %13, align 8
  %15 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = lshr i64 %1, 32
  %18 = trunc i64 %17 to i32
  %19 = icmp eq i32 %16, %18
  %20 = select i1 %19, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %14, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* null
  %21 = and i64 %2, 4294967295
  %22 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %11, i64 %21
  %23 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %22, align 8
  %24 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %23, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = lshr i64 %2, 32
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %25, %27
  %29 = select i1 %28, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %23, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* null
  %30 = icmp eq %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %20, null
  %31 = icmp eq %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %29, null
  %32 = or i1 %30, %31
  br i1 %32, label %754, label %33

33:                                               ; preds = %3
  %34 = icmp eq %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %20, %29
  br i1 %34, label %754, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %20, i64 0, i32 6
  %37 = tail call fastcc zeroext i1 @_ZN4absl24synchronization_internal12_GLOBAL__N_17NodeSet6insertEi(%"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %36, i32 %9)
  br i1 %37, label %38, label %754

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %29, i64 0, i32 5
  %40 = tail call fastcc zeroext i1 @_ZN4absl24synchronization_internal12_GLOBAL__N_17NodeSet6insertEi(%"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %39, i32 %8)
  %41 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %20, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %29, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp sgt i32 %42, %44
  br i1 %45, label %46, label %754

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 3
  %48 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %47, i64 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 3, i32 1, i64 0
  %51 = icmp eq i32* %49, %50
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = bitcast i32* %49 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %53) #7
  br label %54

54:                                               ; preds = %52, %46
  store i32* %50, i32** %48, align 8
  %55 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 3, i32 2
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 3, i32 3
  store i32 8, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 7
  %58 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %57, i64 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 7, i32 1, i64 0
  %61 = icmp eq i32* %59, %60
  br i1 %61, label %64, label %62

62:                                               ; preds = %54
  %63 = bitcast i32* %59 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %63) #7
  br label %64

64:                                               ; preds = %62, %54
  store i32* %60, i32** %58, align 8
  %65 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 7, i32 2
  %66 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 7, i32 3
  store i32 8, i32* %66, align 4
  store i32 %9, i32* %60, align 4
  store i32 1, i32* %65, align 8
  %67 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %47 to i8**
  %68 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %57 to i8**
  br label %76

69:                                               ; preds = %138
  %70 = load i32, i32* %65, align 8
  br label %71

71:                                               ; preds = %76, %69
  %72 = phi i32 [ %70, %69 ], [ %79, %76 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %342, label %74

74:                                               ; preds = %71
  %75 = load i32*, i32** %58, align 8
  br label %76

76:                                               ; preds = %74, %64
  %77 = phi i32* [ %60, %64 ], [ %75, %74 ]
  %78 = phi i32 [ 1, %64 ], [ %72, %74 ]
  %79 = add i32 %78, -1
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %77, i64 %80
  %82 = load i32, i32* %81, align 4
  store i32 %79, i32* %65, align 8
  %83 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %84 = zext i32 %82 to i64
  %85 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %83, i64 %84
  %86 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %85, align 8
  %87 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %86, i64 0, i32 3
  %88 = load i8, i8* %87, align 4, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %71

90:                                               ; preds = %76
  store i8 1, i8* %87, align 4
  %91 = load i32, i32* %55, align 8
  %92 = load i32, i32* %56, align 4
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %90
  %95 = load i32*, i32** %48, align 8
  br label %124

96:                                               ; preds = %90
  %97 = add i32 %91, 1
  %98 = icmp eq i32 %91, -1
  br i1 %98, label %106, label %99

99:                                               ; preds = %96, %99
  %100 = phi i32 [ %101, %99 ], [ %91, %96 ]
  %101 = shl i32 %100, 1
  %102 = icmp ult i32 %101, %97
  br i1 %102, label %99, label %103

103:                                              ; preds = %99
  store i32 %101, i32* %56, align 4
  %104 = zext i32 %101 to i64
  %105 = shl nuw nsw i64 %104, 2
  br label %106

106:                                              ; preds = %103, %96
  %107 = phi i64 [ %105, %103 ], [ 17179869180, %96 ]
  %108 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %109 = tail call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 %107, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %108) #7
  %110 = load i32, i32* %55, align 8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %116, label %112

112:                                              ; preds = %106
  %113 = zext i32 %110 to i64
  %114 = shl nuw nsw i64 %113, 2
  %115 = load i8*, i8** %67, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %115, i64 %114, i1 false) #7
  br label %116

116:                                              ; preds = %112, %106
  %117 = load i32*, i32** %48, align 8
  %118 = icmp eq i32* %117, %50
  br i1 %118, label %121, label %119

119:                                              ; preds = %116
  %120 = bitcast i32* %117 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %120) #7
  br label %121

121:                                              ; preds = %119, %116
  store i8* %109, i8** %67, align 8
  %122 = bitcast i8* %109 to i32*
  %123 = load i32, i32* %55, align 8
  br label %124

124:                                              ; preds = %121, %94
  %125 = phi i32 [ %91, %94 ], [ %123, %121 ]
  %126 = phi i32* [ %95, %94 ], [ %122, %121 ]
  %127 = zext i32 %125 to i64
  %128 = getelementptr inbounds i32, i32* %126, i64 %127
  store i32 %82, i32* %128, align 4
  %129 = load i32, i32* %55, align 8
  %130 = add i32 %129, 1
  store i32 %130, i32* %55, align 8
  %131 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %86, i64 0, i32 6, i32 0, i32 2
  %132 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %86, i64 0, i32 6, i32 0, i32 0
  br label %133

133:                                              ; preds = %202, %124
  %134 = phi i64 [ 0, %124 ], [ %145, %202 ]
  %135 = load i32, i32* %131, align 8
  %136 = and i64 %134, 4294967295
  %137 = zext i32 %135 to i64
  br label %138

138:                                              ; preds = %141, %133
  %139 = phi i64 [ %145, %141 ], [ %136, %133 ]
  %140 = icmp ult i64 %139, %137
  br i1 %140, label %141, label %69

141:                                              ; preds = %138
  %142 = load i32*, i32** %132, align 8
  %143 = getelementptr inbounds i32, i32* %142, i64 %139
  %144 = load i32, i32* %143, align 4
  %145 = add nuw nsw i64 %139, 1
  %146 = icmp sgt i32 %144, -1
  br i1 %146, label %147, label %138

147:                                              ; preds = %141
  %148 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %149 = zext i32 %144 to i64
  %150 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %148, i64 %149
  %151 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %150, align 8
  %152 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %151, i64 0, i32 0
  %153 = load i32, i32* %152, align 8
  %154 = icmp eq i32 %153, %42
  br i1 %154, label %203, label %155

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %151, i64 0, i32 3
  %157 = load i8, i8* %156, align 4, !range !2
  %158 = icmp eq i8 %157, 0
  %159 = icmp slt i32 %153, %42
  %160 = and i1 %159, %158
  br i1 %160, label %161, label %202

161:                                              ; preds = %155
  %162 = load i32, i32* %65, align 8
  %163 = load i32, i32* %66, align 4
  %164 = icmp eq i32 %162, %163
  br i1 %164, label %167, label %165

165:                                              ; preds = %161
  %166 = load i32*, i32** %58, align 8
  br label %195

167:                                              ; preds = %161
  %168 = add i32 %162, 1
  %169 = icmp eq i32 %162, -1
  br i1 %169, label %177, label %170

170:                                              ; preds = %167, %170
  %171 = phi i32 [ %172, %170 ], [ %162, %167 ]
  %172 = shl i32 %171, 1
  %173 = icmp ult i32 %172, %168
  br i1 %173, label %170, label %174

174:                                              ; preds = %170
  store i32 %172, i32* %66, align 4
  %175 = zext i32 %172 to i64
  %176 = shl nuw nsw i64 %175, 2
  br label %177

177:                                              ; preds = %174, %167
  %178 = phi i64 [ %176, %174 ], [ 17179869180, %167 ]
  %179 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %180 = tail call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 %178, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %179) #7
  %181 = load i32, i32* %65, align 8
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %177
  %184 = zext i32 %181 to i64
  %185 = shl nuw nsw i64 %184, 2
  %186 = load i8*, i8** %68, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %180, i8* align 4 %186, i64 %185, i1 false) #7
  br label %187

187:                                              ; preds = %183, %177
  %188 = load i32*, i32** %58, align 8
  %189 = icmp eq i32* %188, %60
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  %191 = bitcast i32* %188 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %191) #7
  br label %192

192:                                              ; preds = %190, %187
  store i8* %180, i8** %68, align 8
  %193 = bitcast i8* %180 to i32*
  %194 = load i32, i32* %65, align 8
  br label %195

195:                                              ; preds = %192, %165
  %196 = phi i32 [ %162, %165 ], [ %194, %192 ]
  %197 = phi i32* [ %166, %165 ], [ %193, %192 ]
  %198 = zext i32 %196 to i64
  %199 = getelementptr inbounds i32, i32* %197, i64 %198
  store i32 %144, i32* %199, align 4
  %200 = load i32, i32* %65, align 8
  %201 = add i32 %200, 1
  store i32 %201, i32* %65, align 8
  br label %202

202:                                              ; preds = %195, %155
  br label %133

203:                                              ; preds = %147
  %204 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %20, i64 0, i32 6, i32 0, i32 2
  %205 = load i32, i32* %204, align 8
  %206 = add i32 %205, -1
  %207 = mul i32 %9, 41
  %208 = and i32 %206, %207
  %209 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %36, i64 0, i32 0, i32 0
  %210 = load i32*, i32** %209, align 8
  %211 = zext i32 %208 to i64
  %212 = getelementptr inbounds i32, i32* %210, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, %9
  br i1 %214, label %240, label %215

215:                                              ; preds = %203, %220
  %216 = phi i32 [ %229, %220 ], [ %213, %203 ]
  %217 = phi i32 [ %226, %220 ], [ %208, %203 ]
  %218 = phi i32 [ %224, %220 ], [ -1, %203 ]
  %219 = icmp eq i32 %216, -1
  br i1 %219, label %231, label %220

220:                                              ; preds = %215
  %221 = icmp eq i32 %216, -2
  %222 = icmp slt i32 %218, 0
  %223 = and i1 %221, %222
  %224 = select i1 %223, i32 %217, i32 %218
  %225 = add i32 %217, 1
  %226 = and i32 %225, %206
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds i32, i32* %210, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %229, %9
  br i1 %230, label %238, label %215

231:                                              ; preds = %215
  %232 = icmp sgt i32 %218, -1
  %233 = select i1 %232, i32 %218, i32 %217
  %234 = zext i32 %233 to i64
  %235 = getelementptr inbounds i32, i32* %210, i64 %234
  %236 = load i32, i32* %235, align 4
  %237 = icmp eq i32 %236, %9
  br i1 %237, label %240, label %243

238:                                              ; preds = %220
  %239 = zext i32 %226 to i64
  br label %240

240:                                              ; preds = %238, %231, %203
  %241 = phi i64 [ %234, %231 ], [ %211, %203 ], [ %239, %238 ]
  %242 = getelementptr inbounds i32, i32* %210, i64 %241
  store i32 -2, i32* %242, align 4
  br label %243

243:                                              ; preds = %231, %240
  %244 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %29, i64 0, i32 5, i32 0, i32 2
  %245 = load i32, i32* %244, align 8
  %246 = add i32 %245, -1
  %247 = mul i32 %8, 41
  %248 = and i32 %246, %247
  %249 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %39, i64 0, i32 0, i32 0
  %250 = load i32*, i32** %249, align 8
  %251 = zext i32 %248 to i64
  %252 = getelementptr inbounds i32, i32* %250, i64 %251
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, %8
  br i1 %254, label %280, label %255

255:                                              ; preds = %243, %260
  %256 = phi i32 [ %269, %260 ], [ %253, %243 ]
  %257 = phi i32 [ %266, %260 ], [ %248, %243 ]
  %258 = phi i32 [ %264, %260 ], [ -1, %243 ]
  %259 = icmp eq i32 %256, -1
  br i1 %259, label %271, label %260

260:                                              ; preds = %255
  %261 = icmp eq i32 %256, -2
  %262 = icmp slt i32 %258, 0
  %263 = and i1 %261, %262
  %264 = select i1 %263, i32 %257, i32 %258
  %265 = add i32 %257, 1
  %266 = and i32 %265, %246
  %267 = zext i32 %266 to i64
  %268 = getelementptr inbounds i32, i32* %250, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = icmp eq i32 %269, %8
  br i1 %270, label %278, label %255

271:                                              ; preds = %255
  %272 = icmp sgt i32 %258, -1
  %273 = select i1 %272, i32 %258, i32 %257
  %274 = zext i32 %273 to i64
  %275 = getelementptr inbounds i32, i32* %250, i64 %274
  %276 = load i32, i32* %275, align 4
  %277 = icmp eq i32 %276, %8
  br i1 %277, label %280, label %283

278:                                              ; preds = %260
  %279 = zext i32 %266 to i64
  br label %280

280:                                              ; preds = %278, %271, %243
  %281 = phi i64 [ %274, %271 ], [ %251, %243 ], [ %279, %278 ]
  %282 = getelementptr inbounds i32, i32* %250, i64 %281
  store i32 -2, i32* %282, align 4
  br label %283

283:                                              ; preds = %271, %280
  %284 = load i32*, i32** %48, align 8
  %285 = load i32, i32* %55, align 8
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds i32, i32* %284, i64 %286
  %288 = icmp eq i32 %285, 0
  br i1 %288, label %754, label %289

289:                                              ; preds = %283
  %290 = shl nuw nsw i64 %286, 2
  %291 = add nsw i64 %290, -4
  %292 = lshr exact i64 %291, 2
  %293 = add nuw nsw i64 %292, 1
  %294 = and i64 %293, 3
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %308, label %296

296:                                              ; preds = %289, %296
  %297 = phi i32* [ %305, %296 ], [ %284, %289 ]
  %298 = phi i64 [ %306, %296 ], [ %294, %289 ]
  %299 = load i32, i32* %297, align 4
  %300 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %301 = zext i32 %299 to i64
  %302 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %300, i64 %301
  %303 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %302, align 8
  %304 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %303, i64 0, i32 3
  store i8 0, i8* %304, align 4
  %305 = getelementptr inbounds i32, i32* %297, i64 1
  %306 = add i64 %298, -1
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %296, !llvm.loop !3

308:                                              ; preds = %296, %289
  %309 = phi i32* [ %284, %289 ], [ %305, %296 ]
  %310 = icmp ult i64 %291, 12
  br i1 %310, label %754, label %311

311:                                              ; preds = %308, %311
  %312 = phi i32* [ %340, %311 ], [ %309, %308 ]
  %313 = load i32, i32* %312, align 4
  %314 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %315 = zext i32 %313 to i64
  %316 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %314, i64 %315
  %317 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %316, align 8
  %318 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %317, i64 0, i32 3
  store i8 0, i8* %318, align 4
  %319 = getelementptr inbounds i32, i32* %312, i64 1
  %320 = load i32, i32* %319, align 4
  %321 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %322 = zext i32 %320 to i64
  %323 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %321, i64 %322
  %324 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %323, align 8
  %325 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %324, i64 0, i32 3
  store i8 0, i8* %325, align 4
  %326 = getelementptr inbounds i32, i32* %312, i64 2
  %327 = load i32, i32* %326, align 4
  %328 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %329 = zext i32 %327 to i64
  %330 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %328, i64 %329
  %331 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %330, align 8
  %332 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %331, i64 0, i32 3
  store i8 0, i8* %332, align 4
  %333 = getelementptr inbounds i32, i32* %312, i64 3
  %334 = load i32, i32* %333, align 4
  %335 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %336 = zext i32 %334 to i64
  %337 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %335, i64 %336
  %338 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %337, align 8
  %339 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %338, i64 0, i32 3
  store i8 0, i8* %339, align 4
  %340 = getelementptr inbounds i32, i32* %312, i64 4
  %341 = icmp eq i32* %340, %287
  br i1 %341, label %754, label %311

342:                                              ; preds = %71
  %343 = load i32, i32* %43, align 8
  %344 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 4
  %345 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %344, i64 0, i32 0
  %346 = load i32*, i32** %345, align 8
  %347 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 4, i32 1, i64 0
  %348 = icmp eq i32* %346, %347
  br i1 %348, label %351, label %349

349:                                              ; preds = %342
  %350 = bitcast i32* %346 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %350) #7
  br label %351

351:                                              ; preds = %349, %342
  store i32* %347, i32** %345, align 8
  %352 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 4, i32 2
  store i32 0, i32* %352, align 8
  %353 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 4, i32 3
  store i32 8, i32* %353, align 4
  %354 = load i32*, i32** %58, align 8
  %355 = icmp eq i32* %354, %60
  br i1 %355, label %358, label %356

356:                                              ; preds = %351
  %357 = bitcast i32* %354 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %357) #7
  br label %358

358:                                              ; preds = %356, %351
  store i32* %60, i32** %58, align 8
  store i32 8, i32* %66, align 4
  store i32 %8, i32* %60, align 4
  store i32 1, i32* %65, align 8
  %359 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %344 to i8**
  br label %360

360:                                              ; preds = %490, %358
  %361 = phi i32* [ %60, %358 ], [ %491, %490 ]
  %362 = phi i32 [ 1, %358 ], [ %488, %490 ]
  %363 = add i32 %362, -1
  %364 = zext i32 %363 to i64
  %365 = getelementptr inbounds i32, i32* %361, i64 %364
  %366 = load i32, i32* %365, align 4
  store i32 %363, i32* %65, align 8
  %367 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %368 = zext i32 %366 to i64
  %369 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %367, i64 %368
  %370 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %369, align 8
  %371 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %370, i64 0, i32 3
  %372 = load i8, i8* %371, align 4, !range !2
  %373 = icmp eq i8 %372, 0
  br i1 %373, label %374, label %487

374:                                              ; preds = %360
  store i8 1, i8* %371, align 4
  %375 = load i32, i32* %352, align 8
  %376 = load i32, i32* %353, align 4
  %377 = icmp eq i32 %375, %376
  br i1 %377, label %380, label %378

378:                                              ; preds = %374
  %379 = load i32*, i32** %345, align 8
  br label %408

380:                                              ; preds = %374
  %381 = add i32 %375, 1
  %382 = icmp eq i32 %375, -1
  br i1 %382, label %390, label %383

383:                                              ; preds = %380, %383
  %384 = phi i32 [ %385, %383 ], [ %375, %380 ]
  %385 = shl i32 %384, 1
  %386 = icmp ult i32 %385, %381
  br i1 %386, label %383, label %387

387:                                              ; preds = %383
  store i32 %385, i32* %353, align 4
  %388 = zext i32 %385 to i64
  %389 = shl nuw nsw i64 %388, 2
  br label %390

390:                                              ; preds = %387, %380
  %391 = phi i64 [ %389, %387 ], [ 17179869180, %380 ]
  %392 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %393 = tail call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 %391, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %392) #7
  %394 = load i32, i32* %352, align 8
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %400, label %396

396:                                              ; preds = %390
  %397 = zext i32 %394 to i64
  %398 = shl nuw nsw i64 %397, 2
  %399 = load i8*, i8** %359, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %393, i8* align 4 %399, i64 %398, i1 false) #7
  br label %400

400:                                              ; preds = %396, %390
  %401 = load i32*, i32** %345, align 8
  %402 = icmp eq i32* %401, %347
  br i1 %402, label %405, label %403

403:                                              ; preds = %400
  %404 = bitcast i32* %401 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %404) #7
  br label %405

405:                                              ; preds = %403, %400
  store i8* %393, i8** %359, align 8
  %406 = bitcast i8* %393 to i32*
  %407 = load i32, i32* %352, align 8
  br label %408

408:                                              ; preds = %405, %378
  %409 = phi i32 [ %375, %378 ], [ %407, %405 ]
  %410 = phi i32* [ %379, %378 ], [ %406, %405 ]
  %411 = zext i32 %409 to i64
  %412 = getelementptr inbounds i32, i32* %410, i64 %411
  store i32 %366, i32* %412, align 4
  %413 = load i32, i32* %352, align 8
  %414 = add i32 %413, 1
  store i32 %414, i32* %352, align 8
  %415 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %370, i64 0, i32 5, i32 0, i32 2
  %416 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %370, i64 0, i32 5, i32 0, i32 0
  br label %417

417:                                              ; preds = %484, %408
  %418 = phi i64 [ 0, %408 ], [ %429, %484 ]
  %419 = load i32, i32* %415, align 8
  %420 = and i64 %418, 4294967295
  %421 = zext i32 %419 to i64
  br label %422

422:                                              ; preds = %425, %417
  %423 = phi i64 [ %429, %425 ], [ %420, %417 ]
  %424 = icmp ult i64 %423, %421
  br i1 %424, label %425, label %485

425:                                              ; preds = %422
  %426 = load i32*, i32** %416, align 8
  %427 = getelementptr inbounds i32, i32* %426, i64 %423
  %428 = load i32, i32* %427, align 4
  %429 = add nuw nsw i64 %423, 1
  %430 = icmp sgt i32 %428, -1
  br i1 %430, label %431, label %422

431:                                              ; preds = %425
  %432 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %433 = zext i32 %428 to i64
  %434 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %432, i64 %433
  %435 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %434, align 8
  %436 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %435, i64 0, i32 3
  %437 = load i8, i8* %436, align 4, !range !2
  %438 = icmp eq i8 %437, 0
  br i1 %438, label %439, label %484

439:                                              ; preds = %431
  %440 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %435, i64 0, i32 0
  %441 = load i32, i32* %440, align 8
  %442 = icmp sgt i32 %441, %343
  br i1 %442, label %443, label %484

443:                                              ; preds = %439
  %444 = load i32, i32* %65, align 8
  %445 = load i32, i32* %66, align 4
  %446 = icmp eq i32 %444, %445
  br i1 %446, label %449, label %447

447:                                              ; preds = %443
  %448 = load i32*, i32** %58, align 8
  br label %477

449:                                              ; preds = %443
  %450 = add i32 %444, 1
  %451 = icmp eq i32 %444, -1
  br i1 %451, label %459, label %452

452:                                              ; preds = %449, %452
  %453 = phi i32 [ %454, %452 ], [ %444, %449 ]
  %454 = shl i32 %453, 1
  %455 = icmp ult i32 %454, %450
  br i1 %455, label %452, label %456

456:                                              ; preds = %452
  store i32 %454, i32* %66, align 4
  %457 = zext i32 %454 to i64
  %458 = shl nuw nsw i64 %457, 2
  br label %459

459:                                              ; preds = %456, %449
  %460 = phi i64 [ %458, %456 ], [ 17179869180, %449 ]
  %461 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %462 = tail call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 %460, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %461) #7
  %463 = load i32, i32* %65, align 8
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %469, label %465

465:                                              ; preds = %459
  %466 = zext i32 %463 to i64
  %467 = shl nuw nsw i64 %466, 2
  %468 = load i8*, i8** %68, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %462, i8* align 4 %468, i64 %467, i1 false) #7
  br label %469

469:                                              ; preds = %465, %459
  %470 = load i32*, i32** %58, align 8
  %471 = icmp eq i32* %470, %60
  br i1 %471, label %474, label %472

472:                                              ; preds = %469
  %473 = bitcast i32* %470 to i8*
  tail call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %473) #7
  br label %474

474:                                              ; preds = %472, %469
  store i8* %462, i8** %68, align 8
  %475 = bitcast i8* %462 to i32*
  %476 = load i32, i32* %65, align 8
  br label %477

477:                                              ; preds = %474, %447
  %478 = phi i32 [ %444, %447 ], [ %476, %474 ]
  %479 = phi i32* [ %448, %447 ], [ %475, %474 ]
  %480 = zext i32 %478 to i64
  %481 = getelementptr inbounds i32, i32* %479, i64 %480
  store i32 %428, i32* %481, align 4
  %482 = load i32, i32* %65, align 8
  %483 = add i32 %482, 1
  store i32 %483, i32* %65, align 8
  br label %484

484:                                              ; preds = %477, %439, %431
  br label %417

485:                                              ; preds = %422
  %486 = load i32, i32* %65, align 8
  br label %487

487:                                              ; preds = %485, %360
  %488 = phi i32 [ %486, %485 ], [ %363, %360 ]
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %492, label %490

490:                                              ; preds = %487
  %491 = load i32*, i32** %58, align 8
  br label %360

492:                                              ; preds = %487
  %493 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 0
  %494 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 4, i32 0
  %495 = load i32*, i32** %494, align 8
  %496 = load i32, i32* %352, align 8
  %497 = zext i32 %496 to i64
  %498 = getelementptr inbounds i32, i32* %495, i64 %497
  %499 = bitcast %struct.ByRank* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %499) #7
  %500 = getelementptr inbounds %struct.ByRank, %struct.ByRank* %5, i64 0, i32 0
  store %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %493, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %500, align 8
  call fastcc void @_ZNSt3__16__sortIRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEvT0_SF_T_(i32* %495, i32* %498, %struct.ByRank* nonnull dereferenceable(8) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %499) #7
  %501 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 3, i32 0
  %502 = load i32*, i32** %501, align 8
  %503 = load i32, i32* %55, align 8
  %504 = zext i32 %503 to i64
  %505 = getelementptr inbounds i32, i32* %502, i64 %504
  %506 = bitcast %struct.ByRank* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %506) #7
  %507 = getelementptr inbounds %struct.ByRank, %struct.ByRank* %4, i64 0, i32 0
  store %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %493, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %507, align 8
  call fastcc void @_ZNSt3__16__sortIRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEvT0_SF_T_(i32* %502, i32* %505, %struct.ByRank* nonnull dereferenceable(8) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %506) #7
  %508 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 5
  %509 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %508, i64 0, i32 0
  %510 = load i32*, i32** %509, align 8
  %511 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 5, i32 1, i64 0
  %512 = icmp eq i32* %510, %511
  br i1 %512, label %515, label %513

513:                                              ; preds = %492
  %514 = bitcast i32* %510 to i8*
  call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %514) #7
  br label %515

515:                                              ; preds = %513, %492
  store i32* %511, i32** %509, align 8
  %516 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 5, i32 2
  store i32 0, i32* %516, align 8
  %517 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 5, i32 3
  store i32 8, i32* %517, align 4
  %518 = load i32*, i32** %494, align 8
  %519 = load i32, i32* %352, align 8
  %520 = zext i32 %519 to i64
  %521 = getelementptr inbounds i32, i32* %518, i64 %520
  %522 = icmp eq i32 %519, 0
  br i1 %522, label %580, label %523

523:                                              ; preds = %515
  %524 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %508 to i8**
  br label %525

525:                                              ; preds = %571, %523
  %526 = phi i32* [ %518, %523 ], [ %578, %571 ]
  %527 = load i32, i32* %526, align 4
  %528 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %529 = zext i32 %527 to i64
  %530 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %528, i64 %529
  %531 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %530, align 8
  %532 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %531, i64 0, i32 0
  %533 = load i32, i32* %532, align 8
  store i32 %533, i32* %526, align 4
  %534 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %535 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %534, i64 %529
  %536 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %535, align 8
  %537 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %536, i64 0, i32 3
  store i8 0, i8* %537, align 4
  %538 = load i32, i32* %516, align 8
  %539 = load i32, i32* %517, align 4
  %540 = icmp eq i32 %538, %539
  br i1 %540, label %543, label %541

541:                                              ; preds = %525
  %542 = load i32*, i32** %509, align 8
  br label %571

543:                                              ; preds = %525
  %544 = add i32 %538, 1
  %545 = icmp eq i32 %538, -1
  br i1 %545, label %553, label %546

546:                                              ; preds = %543, %546
  %547 = phi i32 [ %548, %546 ], [ %538, %543 ]
  %548 = shl i32 %547, 1
  %549 = icmp ult i32 %548, %544
  br i1 %549, label %546, label %550

550:                                              ; preds = %546
  store i32 %548, i32* %517, align 4
  %551 = zext i32 %548 to i64
  %552 = shl nuw nsw i64 %551, 2
  br label %553

553:                                              ; preds = %550, %543
  %554 = phi i64 [ %552, %550 ], [ 17179869180, %543 ]
  %555 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %556 = call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 %554, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %555) #7
  %557 = load i32, i32* %516, align 8
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %563, label %559

559:                                              ; preds = %553
  %560 = zext i32 %557 to i64
  %561 = shl nuw nsw i64 %560, 2
  %562 = load i8*, i8** %524, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %556, i8* align 4 %562, i64 %561, i1 false) #7
  br label %563

563:                                              ; preds = %559, %553
  %564 = load i32*, i32** %509, align 8
  %565 = icmp eq i32* %564, %511
  br i1 %565, label %568, label %566

566:                                              ; preds = %563
  %567 = bitcast i32* %564 to i8*
  call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %567) #7
  br label %568

568:                                              ; preds = %566, %563
  store i8* %556, i8** %524, align 8
  %569 = bitcast i8* %556 to i32*
  %570 = load i32, i32* %516, align 8
  br label %571

571:                                              ; preds = %568, %541
  %572 = phi i32 [ %538, %541 ], [ %570, %568 ]
  %573 = phi i32* [ %542, %541 ], [ %569, %568 ]
  %574 = zext i32 %572 to i64
  %575 = getelementptr inbounds i32, i32* %573, i64 %574
  store i32 %527, i32* %575, align 4
  %576 = load i32, i32* %516, align 8
  %577 = add i32 %576, 1
  store i32 %577, i32* %516, align 8
  %578 = getelementptr inbounds i32, i32* %526, i64 1
  %579 = icmp eq i32* %578, %521
  br i1 %579, label %580, label %525

580:                                              ; preds = %571, %515
  %581 = load i32*, i32** %501, align 8
  %582 = load i32, i32* %55, align 8
  %583 = zext i32 %582 to i64
  %584 = getelementptr inbounds i32, i32* %581, i64 %583
  %585 = icmp eq i32 %582, 0
  br i1 %585, label %645, label %586

586:                                              ; preds = %580
  %587 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %508 to i8**
  br label %588

588:                                              ; preds = %634, %586
  %589 = phi i32* [ %581, %586 ], [ %641, %634 ]
  %590 = load i32, i32* %589, align 4
  %591 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %592 = zext i32 %590 to i64
  %593 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %591, i64 %592
  %594 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %593, align 8
  %595 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %594, i64 0, i32 0
  %596 = load i32, i32* %595, align 8
  store i32 %596, i32* %589, align 4
  %597 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %598 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %597, i64 %592
  %599 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %598, align 8
  %600 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %599, i64 0, i32 3
  store i8 0, i8* %600, align 4
  %601 = load i32, i32* %516, align 8
  %602 = load i32, i32* %517, align 4
  %603 = icmp eq i32 %601, %602
  br i1 %603, label %606, label %604

604:                                              ; preds = %588
  %605 = load i32*, i32** %509, align 8
  br label %634

606:                                              ; preds = %588
  %607 = add i32 %601, 1
  %608 = icmp eq i32 %601, -1
  br i1 %608, label %616, label %609

609:                                              ; preds = %606, %609
  %610 = phi i32 [ %611, %609 ], [ %601, %606 ]
  %611 = shl i32 %610, 1
  %612 = icmp ult i32 %611, %607
  br i1 %612, label %609, label %613

613:                                              ; preds = %609
  store i32 %611, i32* %517, align 4
  %614 = zext i32 %611 to i64
  %615 = shl nuw nsw i64 %614, 2
  br label %616

616:                                              ; preds = %613, %606
  %617 = phi i64 [ %615, %613 ], [ 17179869180, %606 ]
  %618 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %619 = call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 %617, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %618) #7
  %620 = load i32, i32* %516, align 8
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %626, label %622

622:                                              ; preds = %616
  %623 = zext i32 %620 to i64
  %624 = shl nuw nsw i64 %623, 2
  %625 = load i8*, i8** %587, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %619, i8* align 4 %625, i64 %624, i1 false) #7
  br label %626

626:                                              ; preds = %622, %616
  %627 = load i32*, i32** %509, align 8
  %628 = icmp eq i32* %627, %511
  br i1 %628, label %631, label %629

629:                                              ; preds = %626
  %630 = bitcast i32* %627 to i8*
  call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %630) #7
  br label %631

631:                                              ; preds = %629, %626
  store i8* %619, i8** %587, align 8
  %632 = bitcast i8* %619 to i32*
  %633 = load i32, i32* %516, align 8
  br label %634

634:                                              ; preds = %631, %604
  %635 = phi i32 [ %601, %604 ], [ %633, %631 ]
  %636 = phi i32* [ %605, %604 ], [ %632, %631 ]
  %637 = zext i32 %635 to i64
  %638 = getelementptr inbounds i32, i32* %636, i64 %637
  store i32 %590, i32* %638, align 4
  %639 = load i32, i32* %516, align 8
  %640 = add i32 %639, 1
  store i32 %640, i32* %516, align 8
  %641 = getelementptr inbounds i32, i32* %589, i64 1
  %642 = icmp eq i32* %641, %584
  br i1 %642, label %643, label %588

643:                                              ; preds = %634
  %644 = load i32, i32* %55, align 8
  br label %645

645:                                              ; preds = %643, %580
  %646 = phi i32 [ %644, %643 ], [ 0, %580 ]
  %647 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 6
  %648 = load i32, i32* %352, align 8
  %649 = add i32 %648, %646
  %650 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 6, i32 3
  %651 = load i32, i32* %650, align 4
  %652 = icmp ult i32 %651, %649
  br i1 %652, label %656, label %653

653:                                              ; preds = %645
  %654 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %647, i64 0, i32 0
  %655 = load i32*, i32** %654, align 8
  br label %685

656:                                              ; preds = %645, %656
  %657 = phi i32 [ %658, %656 ], [ %651, %645 ]
  %658 = shl i32 %657, 1
  %659 = icmp ult i32 %658, %649
  br i1 %659, label %656, label %660

660:                                              ; preds = %656
  store i32 %658, i32* %650, align 4
  %661 = zext i32 %658 to i64
  %662 = shl nuw nsw i64 %661, 2
  %663 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %664 = call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 %662, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %663) #7
  %665 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %647, i64 0, i32 0
  %666 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 6, i32 2
  %667 = load i32, i32* %666, align 8
  %668 = icmp eq i32 %667, 0
  br i1 %668, label %674, label %669

669:                                              ; preds = %660
  %670 = zext i32 %667 to i64
  %671 = shl nuw nsw i64 %670, 2
  %672 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %647 to i8**
  %673 = load i8*, i8** %672, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %664, i8* align 4 %673, i64 %671, i1 false) #7
  br label %674

674:                                              ; preds = %669, %660
  %675 = load i32*, i32** %665, align 8
  %676 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 6, i32 1, i64 0
  %677 = icmp eq i32* %675, %676
  br i1 %677, label %680, label %678

678:                                              ; preds = %674
  %679 = bitcast i32* %675 to i8*
  call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %679) #7
  br label %680

680:                                              ; preds = %678, %674
  %681 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %647 to i8**
  store i8* %664, i8** %681, align 8
  %682 = load i32, i32* %352, align 8
  %683 = load i32, i32* %55, align 8
  %684 = bitcast i8* %664 to i32*
  br label %685

685:                                              ; preds = %680, %653
  %686 = phi i32* [ %655, %653 ], [ %684, %680 ]
  %687 = phi i32 [ %646, %653 ], [ %683, %680 ]
  %688 = phi i32 [ %648, %653 ], [ %682, %680 ]
  %689 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %7, i64 0, i32 6, i32 2
  store i32 %649, i32* %689, align 8
  %690 = load i32*, i32** %494, align 8
  %691 = zext i32 %688 to i64
  %692 = getelementptr inbounds i32, i32* %690, i64 %691
  %693 = load i32*, i32** %501, align 8
  %694 = zext i32 %687 to i64
  %695 = getelementptr inbounds i32, i32* %693, i64 %694
  %696 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %647, i64 0, i32 0
  %697 = icmp eq i32 %688, 0
  br i1 %697, label %724, label %698

698:                                              ; preds = %685, %719
  %699 = phi i32* [ %722, %719 ], [ %686, %685 ]
  %700 = phi i32* [ %721, %719 ], [ %690, %685 ]
  %701 = phi i32* [ %720, %719 ], [ %693, %685 ]
  %702 = icmp eq i32* %701, %695
  br i1 %702, label %703, label %711

703:                                              ; preds = %698
  %704 = ptrtoint i32* %692 to i64
  %705 = ptrtoint i32* %700 to i64
  %706 = sub i64 %704, %705
  %707 = icmp eq i64 %706, 0
  br i1 %707, label %734, label %708

708:                                              ; preds = %703
  %709 = bitcast i32* %699 to i8*
  %710 = bitcast i32* %700 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %709, i8* align 4 %710, i64 %706, i1 false) #7
  br label %734

711:                                              ; preds = %698
  %712 = load i32, i32* %701, align 4
  %713 = load i32, i32* %700, align 4
  %714 = icmp slt i32 %712, %713
  br i1 %714, label %715, label %717

715:                                              ; preds = %711
  store i32 %712, i32* %699, align 4
  %716 = getelementptr inbounds i32, i32* %701, i64 1
  br label %719

717:                                              ; preds = %711
  store i32 %713, i32* %699, align 4
  %718 = getelementptr inbounds i32, i32* %700, i64 1
  br label %719

719:                                              ; preds = %717, %715
  %720 = phi i32* [ %716, %715 ], [ %701, %717 ]
  %721 = phi i32* [ %700, %715 ], [ %718, %717 ]
  %722 = getelementptr inbounds i32, i32* %699, i64 1
  %723 = icmp eq i32* %721, %692
  br i1 %723, label %724, label %698

724:                                              ; preds = %719, %685
  %725 = phi i32* [ %693, %685 ], [ %720, %719 ]
  %726 = phi i32* [ %686, %685 ], [ %722, %719 ]
  %727 = ptrtoint i32* %695 to i64
  %728 = ptrtoint i32* %725 to i64
  %729 = sub i64 %727, %728
  %730 = icmp eq i64 %729, 0
  br i1 %730, label %734, label %731

731:                                              ; preds = %724
  %732 = bitcast i32* %726 to i8*
  %733 = bitcast i32* %725 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %732, i8* align 4 %733, i64 %729, i1 false) #7
  br label %734

734:                                              ; preds = %731, %724, %708, %703
  %735 = load i32, i32* %516, align 8
  %736 = icmp eq i32 %735, 0
  br i1 %736, label %754, label %737

737:                                              ; preds = %734, %737
  %738 = phi i64 [ %750, %737 ], [ 0, %734 ]
  %739 = load i32*, i32** %696, align 8
  %740 = getelementptr inbounds i32, i32* %739, i64 %738
  %741 = load i32, i32* %740, align 4
  %742 = load i32*, i32** %509, align 8
  %743 = getelementptr inbounds i32, i32* %742, i64 %738
  %744 = load i32, i32* %743, align 4
  %745 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %746 = zext i32 %744 to i64
  %747 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %745, i64 %746
  %748 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %747, align 8
  %749 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %748, i64 0, i32 0
  store i32 %741, i32* %749, align 8
  %750 = add nuw nsw i64 %738, 1
  %751 = load i32, i32* %516, align 8
  %752 = zext i32 %751 to i64
  %753 = icmp ult i64 %750, %752
  br i1 %753, label %737, label %754

754:                                              ; preds = %737, %308, %311, %283, %734, %38, %35, %33, %3
  %755 = phi i1 [ true, %3 ], [ false, %33 ], [ true, %35 ], [ true, %38 ], [ true, %734 ], [ false, %283 ], [ false, %311 ], [ false, %308 ], [ true, %737 ]
  ret i1 %755
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4absl24synchronization_internal11GraphCycles8FindPathENS0_7GraphIdES2_iPS2_(%"class.absl::synchronization_internal::GraphCycles"* nocapture readonly, i64, i64, i32, %"struct.absl::synchronization_internal::GraphId"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", align 8
  %7 = getelementptr inbounds %"class.absl::synchronization_internal::GraphCycles", %"class.absl::synchronization_internal::GraphCycles"* %0, i64 0, i32 0
  %8 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %7, align 8
  %9 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %8, i64 0, i32 0, i32 0
  %10 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %9, align 8
  %11 = and i64 %1, 4294967295
  %12 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %10, i64 %11
  %13 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %12, align 8
  %14 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = lshr i64 %1, 32
  %17 = trunc i64 %16 to i32
  %18 = icmp ne i32 %15, %17
  %19 = icmp eq %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %13, null
  %20 = or i1 %19, %18
  br i1 %20, label %214, label %21

21:                                               ; preds = %5
  %22 = and i64 %2, 4294967295
  %23 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %10, i64 %22
  %24 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %23, align 8
  %25 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = lshr i64 %2, 32
  %28 = trunc i64 %27 to i32
  %29 = icmp ne i32 %26, %28
  %30 = icmp eq %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %24, null
  %31 = or i1 %30, %29
  br i1 %31, label %214, label %32

32:                                               ; preds = %21
  %33 = trunc i64 %1 to i32
  %34 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %34) #7
  %35 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %6, i64 0, i32 0, i32 1
  %36 = bitcast [8 x i32]* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 48, i1 false)
  %37 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %6, i64 0, i32 0, i32 1, i64 0
  %38 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %6, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %6, i64 0, i32 0, i32 2
  %40 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %6, i64 0, i32 0, i32 3
  store i32* %37, i32** %38, align 8
  store i32 8, i32* %40, align 4
  store i32 8, i32* %39, align 8
  store i32 -1, i32* %37, align 8
  br label %41

41:                                               ; preds = %32, %41
  %42 = phi i64 [ 1, %32 ], [ %45, %41 ]
  %43 = load i32*, i32** %38, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 %42
  store i32 -1, i32* %44, align 4
  %45 = add nuw nsw i64 %42, 1
  %46 = load i32, i32* %39, align 8
  %47 = zext i32 %46 to i64
  %48 = icmp ult i64 %45, %47
  br i1 %48, label %41, label %49

49:                                               ; preds = %41
  %50 = trunc i64 %2 to i32
  %51 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet", %"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* %6, i64 0, i32 1
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %8, i64 0, i32 7
  %53 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0", %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %52, i64 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %8, i64 0, i32 7, i32 1, i64 0
  %56 = icmp eq i32* %54, %55
  br i1 %56, label %59, label %57

57:                                               ; preds = %49
  %58 = bitcast i32* %54 to i8*
  call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %58) #7
  br label %59

59:                                               ; preds = %49, %57
  store i32* %55, i32** %53, align 8
  %60 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %8, i64 0, i32 7, i32 2
  %61 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %8, i64 0, i32 7, i32 3
  store i32 8, i32* %61, align 4
  store i32 %33, i32* %55, align 4
  store i32 1, i32* %60, align 8
  %62 = bitcast %"class.absl::synchronization_internal::(anonymous namespace)::Vec.0"* %52 to i8**
  br label %71

63:                                               ; preds = %154
  %64 = load i32, i32* %60, align 8
  br label %65

65:                                               ; preds = %63, %80
  %66 = phi i32 [ %75, %80 ], [ %64, %63 ]
  %67 = phi i32 [ %81, %80 ], [ %101, %63 ]
  %68 = icmp eq i32 %66, 0
  br i1 %68, label %207, label %69

69:                                               ; preds = %65
  %70 = load i32*, i32** %53, align 8
  br label %71

71:                                               ; preds = %69, %59
  %72 = phi i32* [ %55, %59 ], [ %70, %69 ]
  %73 = phi i32 [ 0, %59 ], [ %67, %69 ]
  %74 = phi i32 [ 1, %59 ], [ %66, %69 ]
  %75 = add i32 %74, -1
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %72, i64 %76
  %78 = load i32, i32* %77, align 4
  store i32 %75, i32* %60, align 8
  %79 = icmp slt i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %71
  %81 = add nsw i32 %73, -1
  br label %65

82:                                               ; preds = %71
  %83 = icmp slt i32 %73, %3
  br i1 %83, label %84, label %99

84:                                               ; preds = %82
  %85 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %7, align 8
  %86 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %85, i64 0, i32 0, i32 0
  %87 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %86, align 8
  %88 = zext i32 %78 to i64
  %89 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %87, i64 %88
  %90 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %89, align 8
  %91 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %90, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = shl nuw i64 %93, 32
  %95 = or i64 %94, %88
  %96 = sext i32 %73 to i64
  %97 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphId", %"struct.absl::synchronization_internal::GraphId"* %4, i64 %96, i32 0
  store i64 %95, i64* %97, align 8
  %98 = load i32, i32* %60, align 8
  br label %99

99:                                               ; preds = %84, %82
  %100 = phi i32 [ %98, %84 ], [ %75, %82 ]
  %101 = add nsw i32 %73, 1
  %102 = load i32, i32* %61, align 4
  %103 = icmp eq i32 %100, %102
  br i1 %103, label %106, label %104

104:                                              ; preds = %99
  %105 = load i32*, i32** %53, align 8
  br label %134

106:                                              ; preds = %99
  %107 = add i32 %100, 1
  %108 = icmp eq i32 %100, -1
  br i1 %108, label %116, label %109

109:                                              ; preds = %106, %109
  %110 = phi i32 [ %111, %109 ], [ %100, %106 ]
  %111 = shl i32 %110, 1
  %112 = icmp ult i32 %111, %107
  br i1 %112, label %109, label %113

113:                                              ; preds = %109
  store i32 %111, i32* %61, align 4
  %114 = zext i32 %111 to i64
  %115 = shl nuw nsw i64 %114, 2
  br label %116

116:                                              ; preds = %113, %106
  %117 = phi i64 [ %115, %113 ], [ 17179869180, %106 ]
  %118 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %119 = call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 %117, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %118) #7
  %120 = load i32, i32* %60, align 8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %126, label %122

122:                                              ; preds = %116
  %123 = zext i32 %120 to i64
  %124 = shl nuw nsw i64 %123, 2
  %125 = load i8*, i8** %62, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %119, i8* align 4 %125, i64 %124, i1 false) #7
  br label %126

126:                                              ; preds = %122, %116
  %127 = load i32*, i32** %53, align 8
  %128 = icmp eq i32* %127, %55
  br i1 %128, label %131, label %129

129:                                              ; preds = %126
  %130 = bitcast i32* %127 to i8*
  call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %130) #7
  br label %131

131:                                              ; preds = %129, %126
  store i8* %119, i8** %62, align 8
  %132 = bitcast i8* %119 to i32*
  %133 = load i32, i32* %60, align 8
  br label %134

134:                                              ; preds = %104, %131
  %135 = phi i32 [ %100, %104 ], [ %133, %131 ]
  %136 = phi i32* [ %105, %104 ], [ %132, %131 ]
  %137 = zext i32 %135 to i64
  %138 = getelementptr inbounds i32, i32* %136, i64 %137
  store i32 -1, i32* %138, align 4
  %139 = load i32, i32* %60, align 8
  %140 = add i32 %139, 1
  store i32 %140, i32* %60, align 8
  %141 = icmp eq i32 %78, %50
  br i1 %141, label %207, label %142

142:                                              ; preds = %134
  %143 = zext i32 %78 to i64
  br label %144

144:                                              ; preds = %206, %142
  %145 = phi i64 [ 0, %142 ], [ %161, %206 ]
  %146 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %9, align 8
  %147 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %146, i64 %143
  %148 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %147, align 8
  %149 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %148, i64 0, i32 6, i32 0, i32 2
  %150 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %148, i64 0, i32 6, i32 0, i32 0
  %151 = load i32, i32* %149, align 8
  %152 = and i64 %145, 4294967295
  %153 = zext i32 %151 to i64
  br label %154

154:                                              ; preds = %157, %144
  %155 = phi i64 [ %161, %157 ], [ %152, %144 ]
  %156 = icmp ult i64 %155, %153
  br i1 %156, label %157, label %63

157:                                              ; preds = %154
  %158 = load i32*, i32** %150, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 %155
  %160 = load i32, i32* %159, align 4
  %161 = add nuw nsw i64 %155, 1
  %162 = icmp sgt i32 %160, -1
  br i1 %162, label %163, label %154

163:                                              ; preds = %157
  %164 = call fastcc zeroext i1 @_ZN4absl24synchronization_internal12_GLOBAL__N_17NodeSet6insertEi(%"class.absl::synchronization_internal::(anonymous namespace)::NodeSet"* nonnull %6, i32 %160)
  br i1 %164, label %165, label %206

165:                                              ; preds = %163
  %166 = load i32, i32* %60, align 8
  %167 = load i32, i32* %61, align 4
  %168 = icmp eq i32 %166, %167
  br i1 %168, label %171, label %169

169:                                              ; preds = %165
  %170 = load i32*, i32** %53, align 8
  br label %199

171:                                              ; preds = %165
  %172 = add i32 %166, 1
  %173 = icmp eq i32 %166, -1
  br i1 %173, label %181, label %174

174:                                              ; preds = %171, %174
  %175 = phi i32 [ %176, %174 ], [ %166, %171 ]
  %176 = shl i32 %175, 1
  %177 = icmp ult i32 %176, %172
  br i1 %177, label %174, label %178

178:                                              ; preds = %174
  store i32 %176, i32* %61, align 4
  %179 = zext i32 %176 to i64
  %180 = shl nuw nsw i64 %179, 2
  br label %181

181:                                              ; preds = %178, %171
  %182 = phi i64 [ %180, %178 ], [ 17179869180, %171 ]
  %183 = load %"struct.absl::base_internal::LowLevelAlloc::Arena"*, %"struct.absl::base_internal::LowLevelAlloc::Arena"** @_ZN4absl24synchronization_internal12_GLOBAL__N_15arenaE, align 8
  %184 = call i8* @_ZN4absl13base_internal13LowLevelAlloc14AllocWithArenaEmPNS1_5ArenaE(i64 %182, %"struct.absl::base_internal::LowLevelAlloc::Arena"* %183) #7
  %185 = load i32, i32* %60, align 8
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %191, label %187

187:                                              ; preds = %181
  %188 = zext i32 %185 to i64
  %189 = shl nuw nsw i64 %188, 2
  %190 = load i8*, i8** %62, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %184, i8* align 4 %190, i64 %189, i1 false) #7
  br label %191

191:                                              ; preds = %187, %181
  %192 = load i32*, i32** %53, align 8
  %193 = icmp eq i32* %192, %55
  br i1 %193, label %196, label %194

194:                                              ; preds = %191
  %195 = bitcast i32* %192 to i8*
  call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %195) #7
  br label %196

196:                                              ; preds = %194, %191
  store i8* %184, i8** %62, align 8
  %197 = bitcast i8* %184 to i32*
  %198 = load i32, i32* %60, align 8
  br label %199

199:                                              ; preds = %169, %196
  %200 = phi i32 [ %166, %169 ], [ %198, %196 ]
  %201 = phi i32* [ %170, %169 ], [ %197, %196 ]
  %202 = zext i32 %200 to i64
  %203 = getelementptr inbounds i32, i32* %201, i64 %202
  store i32 %160, i32* %203, align 4
  %204 = load i32, i32* %60, align 8
  %205 = add i32 %204, 1
  store i32 %205, i32* %60, align 8
  br label %206

206:                                              ; preds = %199, %163
  br label %144

207:                                              ; preds = %134, %65
  %208 = phi i32 [ 0, %65 ], [ %101, %134 ]
  %209 = load i32*, i32** %38, align 8
  %210 = icmp eq i32* %209, %37
  br i1 %210, label %213, label %211

211:                                              ; preds = %207
  %212 = bitcast i32* %209 to i8*
  call void @_ZN4absl13base_internal13LowLevelAlloc4FreeEPv(i8* %212) #7
  br label %213

213:                                              ; preds = %207, %211
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %34) #7
  br label %214

214:                                              ; preds = %5, %21, %213
  %215 = phi i32 [ %208, %213 ], [ 0, %21 ], [ 0, %5 ]
  ret i32 %215
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4absl24synchronization_internal11GraphCycles11IsReachableENS0_7GraphIdES2_(%"class.absl::synchronization_internal::GraphCycles"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZNK4absl24synchronization_internal11GraphCycles8FindPathENS0_7GraphIdES2_iPS2_(%"class.absl::synchronization_internal::GraphCycles"* %0, i64 %1, i64 %2, i32 0, %"struct.absl::synchronization_internal::GraphId"* null)
  %5 = icmp sgt i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl24synchronization_internal11GraphCycles16UpdateStackTraceENS0_7GraphIdEiPFiPPviE(%"class.absl::synchronization_internal::GraphCycles"* nocapture readonly, i64, i32, i32 (i8**, i32)* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.absl::synchronization_internal::GraphCycles", %"class.absl::synchronization_internal::GraphCycles"* %0, i64 0, i32 0
  %6 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %5, align 8
  %7 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %6, i64 0, i32 0, i32 0
  %8 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %7, align 8
  %9 = and i64 %1, 4294967295
  %10 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %8, i64 %9
  %11 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %10, align 8
  %12 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = lshr i64 %1, 32
  %15 = trunc i64 %14 to i32
  %16 = icmp ne i32 %13, %15
  %17 = icmp eq %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %11, null
  %18 = or i1 %17, %16
  br i1 %18, label %27, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %11, i64 0, i32 7
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, %2
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %11, i64 0, i32 9, i64 0
  %25 = tail call i32 %3(i8** %24, i32 40) #7
  %26 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %11, i64 0, i32 8
  store i32 %25, i32* %26, align 4
  store i32 %2, i32* %20, align 8
  br label %27

27:                                               ; preds = %4, %19, %23
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN4absl24synchronization_internal11GraphCycles13GetStackTraceENS0_7GraphIdEPPPv(%"class.absl::synchronization_internal::GraphCycles"* nocapture readonly, i64, i8*** nocapture) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.absl::synchronization_internal::GraphCycles", %"class.absl::synchronization_internal::GraphCycles"* %0, i64 0, i32 0
  %5 = load %"struct.absl::synchronization_internal::GraphCycles::Rep"*, %"struct.absl::synchronization_internal::GraphCycles::Rep"** %4, align 8
  %6 = getelementptr inbounds %"struct.absl::synchronization_internal::GraphCycles::Rep", %"struct.absl::synchronization_internal::GraphCycles::Rep"* %5, i64 0, i32 0, i32 0
  %7 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %6, align 8
  %8 = and i64 %1, 4294967295
  %9 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %7, i64 %8
  %10 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %9, align 8
  %11 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = lshr i64 %1, 32
  %14 = trunc i64 %13 to i32
  %15 = icmp ne i32 %12, %14
  %16 = icmp eq %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %10, null
  %17 = or i1 %16, %15
  br i1 %17, label %18, label %19

18:                                               ; preds = %3
  store i8** null, i8*** %2, align 8
  br label %23

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %10, i64 0, i32 9, i64 0
  store i8** %20, i8*** %2, align 8
  %21 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %10, i64 0, i32 8
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %19, %18
  %24 = phi i32 [ 0, %18 ], [ %22, %19 ]
  ret i32 %24
}

declare %"struct.absl::base_internal::LowLevelAlloc::Arena"* @_ZN4absl13base_internal13LowLevelAlloc8NewArenaEi(i32) local_unnamed_addr #1

; Function Attrs: cold
declare void @_ZN4absl13base_internal8SpinLock8SlowLockEv(%"class.absl::base_internal::SpinLock"*) local_unnamed_addr #5

; Function Attrs: cold
declare void @_ZN4absl13base_internal8SpinLock10SlowUnlockEj(%"class.absl::base_internal::SpinLock"*, i32) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__sortIRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEvT0_SF_T_(i32*, i32*, %struct.ByRank* readonly dereferenceable(8)) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ByRank, %struct.ByRank* %2, i64 0, i32 0
  br label %5

5:                                                ; preds = %464, %3
  %6 = phi i32* [ %1, %3 ], [ %435, %464 ]
  %7 = phi i32* [ %0, %3 ], [ %14, %464 ]
  %8 = ptrtoint i32* %6 to i64
  %9 = getelementptr inbounds i32, i32* %6, i64 -1
  %10 = ptrtoint i32* %6 to i64
  br label %11

11:                                               ; preds = %473, %5
  %12 = phi i32* [ %7, %5 ], [ %474, %473 ]
  br label %13

13:                                               ; preds = %373, %11
  %14 = phi i32* [ %12, %11 ], [ %354, %373 ]
  %15 = ptrtoint i32* %14 to i64
  %16 = sub i64 %8, %15
  %17 = ashr exact i64 %16, 2
  switch i64 %17, label %111 [
    i64 0, label %477
    i64 1, label %477
    i64 2, label %18
    i64 3, label %37
    i64 4, label %100
    i64 5, label %105
  ]

18:                                               ; preds = %13
  %19 = getelementptr inbounds i32, i32* %6, i64 -1
  %20 = load i32, i32* %19, align 4
  %21 = load i32, i32* %14, align 4
  %22 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %23 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %22, i64 0, i32 0
  %24 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %23, align 8
  %25 = zext i32 %20 to i64
  %26 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %24, i64 %25
  %27 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %26, align 8
  %28 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %21 to i64
  %31 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %24, i64 %30
  %32 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %31, align 8
  %33 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp slt i32 %29, %34
  br i1 %35, label %36, label %477

36:                                               ; preds = %18
  store i32 %20, i32* %14, align 4
  store i32 %21, i32* %19, align 4
  br label %477

37:                                               ; preds = %13
  %38 = getelementptr inbounds i32, i32* %14, i64 1
  %39 = getelementptr inbounds i32, i32* %6, i64 -1
  %40 = load i32, i32* %38, align 4
  %41 = load i32, i32* %14, align 4
  %42 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %43 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %42, i64 0, i32 0
  %44 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %43, align 8
  %45 = zext i32 %40 to i64
  %46 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %44, i64 %45
  %47 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %46, align 8
  %48 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = zext i32 %41 to i64
  %51 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %44, i64 %50
  %52 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %51, align 8
  %53 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %52, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp slt i32 %49, %54
  %56 = load i32, i32* %39, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %44, i64 %57
  %59 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %58, align 8
  %60 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = icmp slt i32 %61, %49
  br i1 %55, label %82, label %63

63:                                               ; preds = %37
  br i1 %62, label %64, label %477

64:                                               ; preds = %63
  store i32 %56, i32* %38, align 4
  store i32 %40, i32* %39, align 4
  %65 = load i32, i32* %38, align 4
  %66 = load i32, i32* %14, align 4
  %67 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %68 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %67, i64 0, i32 0
  %69 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %68, align 8
  %70 = zext i32 %65 to i64
  %71 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %69, i64 %70
  %72 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %71, align 8
  %73 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %72, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = zext i32 %66 to i64
  %76 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %69, i64 %75
  %77 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %76, align 8
  %78 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = icmp slt i32 %74, %79
  br i1 %80, label %81, label %477

81:                                               ; preds = %64
  store i32 %65, i32* %14, align 4
  store i32 %66, i32* %38, align 4
  br label %477

82:                                               ; preds = %37
  br i1 %62, label %83, label %84

83:                                               ; preds = %82
  store i32 %56, i32* %14, align 4
  store i32 %41, i32* %39, align 4
  br label %477

84:                                               ; preds = %82
  store i32 %40, i32* %14, align 4
  store i32 %41, i32* %38, align 4
  %85 = load i32, i32* %39, align 4
  %86 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %87 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %86, i64 0, i32 0
  %88 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %87, align 8
  %89 = zext i32 %85 to i64
  %90 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %88, i64 %89
  %91 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %90, align 8
  %92 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %91, i64 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %88, i64 %50
  %95 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %94, align 8
  %96 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %95, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp slt i32 %93, %97
  br i1 %98, label %99, label %477

99:                                               ; preds = %84
  store i32 %85, i32* %38, align 4
  store i32 %41, i32* %39, align 4
  br label %477

100:                                              ; preds = %13
  %101 = getelementptr inbounds i32, i32* %14, i64 1
  %102 = getelementptr inbounds i32, i32* %14, i64 2
  %103 = getelementptr inbounds i32, i32* %6, i64 -1
  %104 = tail call fastcc i32 @_ZNSt3__17__sort4IRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEjT0_SF_SF_SF_T_(i32* %14, i32* %101, i32* %102, i32* %103, %struct.ByRank* dereferenceable(8) %2)
  br label %477

105:                                              ; preds = %13
  %106 = getelementptr inbounds i32, i32* %14, i64 1
  %107 = getelementptr inbounds i32, i32* %14, i64 2
  %108 = getelementptr inbounds i32, i32* %14, i64 3
  %109 = getelementptr inbounds i32, i32* %6, i64 -1
  %110 = tail call fastcc i32 @_ZNSt3__17__sort5IRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEjT0_SF_SF_SF_SF_T_(i32* %14, i32* %106, i32* %107, i32* %108, i32* %109, %struct.ByRank* dereferenceable(8) %2)
  br label %477

111:                                              ; preds = %13
  %112 = icmp slt i64 %16, 124
  br i1 %112, label %113, label %221

113:                                              ; preds = %111
  %114 = getelementptr inbounds i32, i32* %14, i64 2
  %115 = getelementptr inbounds i32, i32* %14, i64 1
  %116 = load i32, i32* %115, align 4
  %117 = load i32, i32* %14, align 4
  %118 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %119 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %118, i64 0, i32 0
  %120 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %119, align 8
  %121 = zext i32 %116 to i64
  %122 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %120, i64 %121
  %123 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %122, align 8
  %124 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %123, i64 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = zext i32 %117 to i64
  %127 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %120, i64 %126
  %128 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %127, align 8
  %129 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %128, i64 0, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = icmp slt i32 %125, %130
  %132 = load i32, i32* %114, align 4
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %120, i64 %133
  %135 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %134, align 8
  %136 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %135, i64 0, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = icmp slt i32 %137, %125
  br i1 %131, label %154, label %139

139:                                              ; preds = %113
  br i1 %138, label %140, label %170

140:                                              ; preds = %139
  store i32 %132, i32* %115, align 4
  store i32 %116, i32* %114, align 4
  %141 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %142 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %141, i64 0, i32 0
  %143 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %142, align 8
  %144 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %143, i64 %133
  %145 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %144, align 8
  %146 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %145, i64 0, i32 0
  %147 = load i32, i32* %146, align 8
  %148 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %143, i64 %126
  %149 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %148, align 8
  %150 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %149, i64 0, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = icmp slt i32 %147, %151
  br i1 %152, label %153, label %170

153:                                              ; preds = %140
  store i32 %132, i32* %14, align 4
  store i32 %117, i32* %115, align 4
  br label %170

154:                                              ; preds = %113
  br i1 %138, label %155, label %156

155:                                              ; preds = %154
  store i32 %132, i32* %14, align 4
  store i32 %117, i32* %114, align 4
  br label %170

156:                                              ; preds = %154
  store i32 %116, i32* %14, align 4
  store i32 %117, i32* %115, align 4
  %157 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %158 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %157, i64 0, i32 0
  %159 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %158, align 8
  %160 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %159, i64 %133
  %161 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %160, align 8
  %162 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %161, i64 0, i32 0
  %163 = load i32, i32* %162, align 8
  %164 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %159, i64 %126
  %165 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %164, align 8
  %166 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %165, i64 0, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = icmp slt i32 %163, %167
  br i1 %168, label %169, label %170

169:                                              ; preds = %156
  store i32 %132, i32* %115, align 4
  store i32 %117, i32* %114, align 4
  br label %170

170:                                              ; preds = %169, %156, %155, %153, %140, %139
  %171 = phi i32 [ %132, %139 ], [ %116, %140 ], [ %116, %153 ], [ %117, %155 ], [ %132, %156 ], [ %117, %169 ]
  %172 = getelementptr inbounds i32, i32* %14, i64 3
  %173 = icmp eq i32* %172, %6
  br i1 %173, label %477, label %174

174:                                              ; preds = %170, %219
  %175 = phi i32 [ %220, %219 ], [ %171, %170 ]
  %176 = phi i32* [ %217, %219 ], [ %172, %170 ]
  %177 = phi i32* [ %176, %219 ], [ %114, %170 ]
  %178 = load i32, i32* %176, align 4
  %179 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %180 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %179, i64 0, i32 0
  %181 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %180, align 8
  %182 = zext i32 %178 to i64
  %183 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %181, i64 %182
  %184 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %183, align 8
  %185 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %184, i64 0, i32 0
  %186 = load i32, i32* %185, align 8
  %187 = zext i32 %175 to i64
  %188 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %181, i64 %187
  %189 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %188, align 8
  %190 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %189, i64 0, i32 0
  %191 = load i32, i32* %190, align 8
  %192 = icmp slt i32 %186, %191
  br i1 %192, label %193, label %216

193:                                              ; preds = %174, %198
  %194 = phi i32 [ %200, %198 ], [ %175, %174 ]
  %195 = phi i32* [ %196, %198 ], [ %176, %174 ]
  %196 = phi i32* [ %199, %198 ], [ %177, %174 ]
  store i32 %194, i32* %195, align 4
  %197 = icmp eq i32* %196, %14
  br i1 %197, label %214, label %198

198:                                              ; preds = %193
  %199 = getelementptr inbounds i32, i32* %196, i64 -1
  %200 = load i32, i32* %199, align 4
  %201 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %202 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %201, i64 0, i32 0
  %203 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %202, align 8
  %204 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %203, i64 %182
  %205 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %204, align 8
  %206 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %205, i64 0, i32 0
  %207 = load i32, i32* %206, align 8
  %208 = zext i32 %200 to i64
  %209 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %203, i64 %208
  %210 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %209, align 8
  %211 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %210, i64 0, i32 0
  %212 = load i32, i32* %211, align 8
  %213 = icmp slt i32 %207, %212
  br i1 %213, label %193, label %214

214:                                              ; preds = %198, %193
  %215 = phi i32* [ %14, %193 ], [ %196, %198 ]
  store i32 %178, i32* %215, align 4
  br label %216

216:                                              ; preds = %214, %174
  %217 = getelementptr inbounds i32, i32* %176, i64 1
  %218 = icmp eq i32* %217, %6
  br i1 %218, label %477, label %219

219:                                              ; preds = %216
  %220 = load i32, i32* %176, align 4
  br label %174

221:                                              ; preds = %111
  %222 = icmp sgt i64 %16, 3996
  %223 = sdiv i64 %17, 2
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  br i1 %222, label %225, label %230

225:                                              ; preds = %221
  %226 = sdiv i64 %17, 4
  %227 = getelementptr inbounds i32, i32* %14, i64 %226
  %228 = getelementptr inbounds i32, i32* %224, i64 %226
  %229 = tail call fastcc i32 @_ZNSt3__17__sort5IRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEjT0_SF_SF_SF_SF_T_(i32* %14, i32* %227, i32* %224, i32* %228, i32* %9, %struct.ByRank* dereferenceable(8) %2)
  br label %291

230:                                              ; preds = %221
  %231 = load i32, i32* %224, align 4
  %232 = load i32, i32* %14, align 4
  %233 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %234 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %233, i64 0, i32 0
  %235 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %234, align 8
  %236 = zext i32 %231 to i64
  %237 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %235, i64 %236
  %238 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %237, align 8
  %239 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %238, i64 0, i32 0
  %240 = load i32, i32* %239, align 8
  %241 = zext i32 %232 to i64
  %242 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %235, i64 %241
  %243 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %242, align 8
  %244 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %243, i64 0, i32 0
  %245 = load i32, i32* %244, align 8
  %246 = icmp slt i32 %240, %245
  %247 = load i32, i32* %9, align 4
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %235, i64 %248
  %250 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %249, align 8
  %251 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %250, i64 0, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = icmp slt i32 %252, %240
  br i1 %246, label %273, label %254

254:                                              ; preds = %230
  br i1 %253, label %255, label %291

255:                                              ; preds = %254
  store i32 %247, i32* %224, align 4
  store i32 %231, i32* %9, align 4
  %256 = load i32, i32* %224, align 4
  %257 = load i32, i32* %14, align 4
  %258 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %259 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %258, i64 0, i32 0
  %260 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %259, align 8
  %261 = zext i32 %256 to i64
  %262 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %260, i64 %261
  %263 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %262, align 8
  %264 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %263, i64 0, i32 0
  %265 = load i32, i32* %264, align 8
  %266 = zext i32 %257 to i64
  %267 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %260, i64 %266
  %268 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %267, align 8
  %269 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %268, i64 0, i32 0
  %270 = load i32, i32* %269, align 8
  %271 = icmp slt i32 %265, %270
  br i1 %271, label %272, label %291

272:                                              ; preds = %255
  store i32 %256, i32* %14, align 4
  store i32 %257, i32* %224, align 4
  br label %291

273:                                              ; preds = %230
  br i1 %253, label %274, label %275

274:                                              ; preds = %273
  store i32 %247, i32* %14, align 4
  store i32 %232, i32* %9, align 4
  br label %291

275:                                              ; preds = %273
  store i32 %231, i32* %14, align 4
  store i32 %232, i32* %224, align 4
  %276 = load i32, i32* %9, align 4
  %277 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %278 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %277, i64 0, i32 0
  %279 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %278, align 8
  %280 = zext i32 %276 to i64
  %281 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %279, i64 %280
  %282 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %281, align 8
  %283 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %282, i64 0, i32 0
  %284 = load i32, i32* %283, align 8
  %285 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %279, i64 %241
  %286 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %285, align 8
  %287 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %286, i64 0, i32 0
  %288 = load i32, i32* %287, align 8
  %289 = icmp slt i32 %284, %288
  br i1 %289, label %290, label %291

290:                                              ; preds = %275
  store i32 %276, i32* %224, align 4
  store i32 %232, i32* %9, align 4
  br label %291

291:                                              ; preds = %290, %275, %274, %272, %255, %254, %225
  %292 = phi i32 [ %229, %225 ], [ 1, %274 ], [ 0, %254 ], [ 2, %272 ], [ 1, %255 ], [ 2, %290 ], [ 1, %275 ]
  %293 = load i32, i32* %14, align 4
  %294 = load i32, i32* %224, align 4
  %295 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %296 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %295, i64 0, i32 0
  %297 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %296, align 8
  %298 = zext i32 %293 to i64
  %299 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %297, i64 %298
  %300 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %299, align 8
  %301 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %300, i64 0, i32 0
  %302 = load i32, i32* %301, align 8
  %303 = zext i32 %294 to i64
  %304 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %297, i64 %303
  %305 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %304, align 8
  %306 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %305, i64 0, i32 0
  %307 = load i32, i32* %306, align 8
  %308 = icmp slt i32 %302, %307
  br i1 %308, label %386, label %309

309:                                              ; preds = %291, %376
  %310 = phi i32* [ %311, %376 ], [ %9, %291 ]
  %311 = getelementptr inbounds i32, i32* %310, i64 -1
  %312 = icmp eq i32* %14, %311
  br i1 %312, label %313, label %376

313:                                              ; preds = %309
  %314 = getelementptr inbounds i32, i32* %14, i64 1
  %315 = load i32, i32* %9, align 4
  %316 = zext i32 %315 to i64
  %317 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %297, i64 %316
  %318 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %317, align 8
  %319 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %318, i64 0, i32 0
  %320 = load i32, i32* %319, align 8
  %321 = icmp slt i32 %302, %320
  br i1 %321, label %338, label %322

322:                                              ; preds = %313
  %323 = icmp eq i32* %314, %9
  br i1 %323, label %477, label %324

324:                                              ; preds = %322, %335
  %325 = phi i32* [ %336, %335 ], [ %314, %322 ]
  %326 = load i32, i32* %325, align 4
  %327 = zext i32 %326 to i64
  %328 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %297, i64 %327
  %329 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %328, align 8
  %330 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %329, i64 0, i32 0
  %331 = load i32, i32* %330, align 8
  %332 = icmp slt i32 %302, %331
  br i1 %332, label %333, label %335

333:                                              ; preds = %324
  store i32 %315, i32* %325, align 4
  store i32 %326, i32* %9, align 4
  %334 = getelementptr inbounds i32, i32* %325, i64 1
  br label %338

335:                                              ; preds = %324
  %336 = getelementptr inbounds i32, i32* %325, i64 1
  %337 = icmp eq i32* %336, %9
  br i1 %337, label %477, label %324

338:                                              ; preds = %333, %313
  %339 = phi i32* [ %314, %313 ], [ %334, %333 ]
  %340 = icmp eq i32* %339, %9
  br i1 %340, label %477, label %341

341:                                              ; preds = %338, %375
  %342 = phi i32* [ %362, %375 ], [ %339, %338 ]
  %343 = phi i32* [ %365, %375 ], [ %9, %338 ]
  %344 = load i32, i32* %14, align 4
  %345 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %346 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %345, i64 0, i32 0
  %347 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %346, align 8
  %348 = zext i32 %344 to i64
  %349 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %347, i64 %348
  %350 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %349, align 8
  %351 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %350, i64 0, i32 0
  %352 = load i32, i32* %351, align 8
  br label %353

353:                                              ; preds = %353, %341
  %354 = phi i32* [ %342, %341 ], [ %362, %353 ]
  %355 = load i32, i32* %354, align 4
  %356 = zext i32 %355 to i64
  %357 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %347, i64 %356
  %358 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %357, align 8
  %359 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %358, i64 0, i32 0
  %360 = load i32, i32* %359, align 8
  %361 = icmp slt i32 %352, %360
  %362 = getelementptr inbounds i32, i32* %354, i64 1
  br i1 %361, label %363, label %353

363:                                              ; preds = %353, %363
  %364 = phi i32* [ %365, %363 ], [ %343, %353 ]
  %365 = getelementptr inbounds i32, i32* %364, i64 -1
  %366 = load i32, i32* %365, align 4
  %367 = zext i32 %366 to i64
  %368 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %347, i64 %367
  %369 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %368, align 8
  %370 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %369, i64 0, i32 0
  %371 = load i32, i32* %370, align 8
  %372 = icmp slt i32 %352, %371
  br i1 %372, label %363, label %373

373:                                              ; preds = %363
  %374 = icmp ult i32* %354, %365
  br i1 %374, label %375, label %13

375:                                              ; preds = %373
  store i32 %366, i32* %354, align 4
  store i32 %355, i32* %365, align 4
  br label %341

376:                                              ; preds = %309
  %377 = load i32, i32* %311, align 4
  %378 = zext i32 %377 to i64
  %379 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %297, i64 %378
  %380 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %379, align 8
  %381 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %380, i64 0, i32 0
  %382 = load i32, i32* %381, align 8
  %383 = icmp slt i32 %382, %307
  br i1 %383, label %384, label %309

384:                                              ; preds = %376
  store i32 %377, i32* %14, align 4
  store i32 %293, i32* %311, align 4
  %385 = add i32 %292, 1
  br label %386

386:                                              ; preds = %291, %384
  %387 = phi i32 [ %385, %384 ], [ %292, %291 ]
  %388 = phi i32* [ %311, %384 ], [ %9, %291 ]
  %389 = ptrtoint i32* %14 to i64
  %390 = getelementptr inbounds i32, i32* %14, i64 1
  %391 = icmp ult i32* %390, %388
  br i1 %391, label %392, label %432

392:                                              ; preds = %386, %428
  %393 = phi i32* [ %431, %428 ], [ %224, %386 ]
  %394 = phi i32 [ %429, %428 ], [ %387, %386 ]
  %395 = phi i32* [ %415, %428 ], [ %390, %386 ]
  %396 = phi i32* [ %418, %428 ], [ %388, %386 ]
  %397 = load i32, i32* %393, align 4
  %398 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %399 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %398, i64 0, i32 0
  %400 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %399, align 8
  %401 = zext i32 %397 to i64
  %402 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %400, i64 %401
  %403 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %402, align 8
  %404 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %403, i64 0, i32 0
  %405 = load i32, i32* %404, align 8
  br label %406

406:                                              ; preds = %406, %392
  %407 = phi i32* [ %395, %392 ], [ %415, %406 ]
  %408 = load i32, i32* %407, align 4
  %409 = zext i32 %408 to i64
  %410 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %400, i64 %409
  %411 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %410, align 8
  %412 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %411, i64 0, i32 0
  %413 = load i32, i32* %412, align 8
  %414 = icmp slt i32 %413, %405
  %415 = getelementptr inbounds i32, i32* %407, i64 1
  br i1 %414, label %406, label %416

416:                                              ; preds = %406, %416
  %417 = phi i32* [ %418, %416 ], [ %396, %406 ]
  %418 = getelementptr inbounds i32, i32* %417, i64 -1
  %419 = load i32, i32* %418, align 4
  %420 = zext i32 %419 to i64
  %421 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %400, i64 %420
  %422 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %421, align 8
  %423 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %422, i64 0, i32 0
  %424 = load i32, i32* %423, align 8
  %425 = icmp slt i32 %424, %405
  br i1 %425, label %426, label %416

426:                                              ; preds = %416
  %427 = icmp ugt i32* %407, %418
  br i1 %427, label %432, label %428

428:                                              ; preds = %426
  store i32 %419, i32* %407, align 4
  store i32 %408, i32* %418, align 4
  %429 = add i32 %394, 1
  %430 = icmp eq i32* %393, %407
  %431 = select i1 %430, i32* %418, i32* %393
  br label %392

432:                                              ; preds = %426, %386
  %433 = phi i32* [ %224, %386 ], [ %393, %426 ]
  %434 = phi i32 [ %387, %386 ], [ %394, %426 ]
  %435 = phi i32* [ %390, %386 ], [ %407, %426 ]
  %436 = icmp eq i32* %435, %433
  br i1 %436, label %456, label %437

437:                                              ; preds = %432
  %438 = load i32, i32* %433, align 4
  %439 = load i32, i32* %435, align 4
  %440 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %4, align 8
  %441 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %440, i64 0, i32 0
  %442 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %441, align 8
  %443 = zext i32 %438 to i64
  %444 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %442, i64 %443
  %445 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %444, align 8
  %446 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %445, i64 0, i32 0
  %447 = load i32, i32* %446, align 8
  %448 = zext i32 %439 to i64
  %449 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %442, i64 %448
  %450 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %449, align 8
  %451 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %450, i64 0, i32 0
  %452 = load i32, i32* %451, align 8
  %453 = icmp slt i32 %447, %452
  br i1 %453, label %454, label %456

454:                                              ; preds = %437
  store i32 %438, i32* %435, align 4
  store i32 %439, i32* %433, align 4
  %455 = add i32 %434, 1
  br label %456

456:                                              ; preds = %432, %454, %437
  %457 = phi i32 [ %455, %454 ], [ %434, %437 ], [ %434, %432 ]
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %466

459:                                              ; preds = %456
  %460 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEbT0_SF_T_(i32* %14, i32* %435, %struct.ByRank* dereferenceable(8) %2)
  %461 = getelementptr inbounds i32, i32* %435, i64 1
  %462 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEbT0_SF_T_(i32* %461, i32* %6, %struct.ByRank* dereferenceable(8) %2)
  br i1 %462, label %463, label %465

463:                                              ; preds = %459
  br i1 %460, label %477, label %464

464:                                              ; preds = %463, %475
  br label %5

465:                                              ; preds = %459
  br i1 %460, label %473, label %466

466:                                              ; preds = %465, %456
  %467 = ptrtoint i32* %435 to i64
  %468 = sub i64 %467, %389
  %469 = sub i64 %10, %467
  %470 = icmp slt i64 %468, %469
  br i1 %470, label %471, label %475

471:                                              ; preds = %466
  tail call fastcc void @_ZNSt3__16__sortIRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEvT0_SF_T_(i32* %14, i32* %435, %struct.ByRank* dereferenceable(8) %2)
  %472 = getelementptr inbounds i32, i32* %435, i64 1
  br label %473

473:                                              ; preds = %471, %465
  %474 = phi i32* [ %461, %465 ], [ %472, %471 ]
  br label %11

475:                                              ; preds = %466
  %476 = getelementptr inbounds i32, i32* %435, i64 1
  tail call fastcc void @_ZNSt3__16__sortIRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEvT0_SF_T_(i32* %476, i32* %6, %struct.ByRank* dereferenceable(8) %2)
  br label %464

477:                                              ; preds = %463, %338, %13, %13, %322, %335, %216, %170, %99, %84, %83, %81, %64, %63, %18, %36, %100, %105
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort4IRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEjT0_SF_SF_SF_T_(i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, %struct.ByRank* nocapture readonly dereferenceable(8)) unnamed_addr #4 {
  %6 = load i32, i32* %1, align 4
  %7 = load i32, i32* %0, align 4
  %8 = getelementptr inbounds %struct.ByRank, %struct.ByRank* %4, i64 0, i32 0
  %9 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %8, align 8
  %10 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %9, i64 0, i32 0
  %11 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %10, align 8
  %12 = zext i32 %6 to i64
  %13 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %11, i64 %12
  %14 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %13, align 8
  %15 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %7 to i64
  %18 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %11, i64 %17
  %19 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %18, align 8
  %20 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %16, %21
  %23 = load i32, i32* %2, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %11, i64 %24
  %26 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %25, align 8
  %27 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp slt i32 %28, %16
  br i1 %22, label %51, label %30

30:                                               ; preds = %5
  br i1 %29, label %31, label %69

31:                                               ; preds = %30
  store i32 %23, i32* %1, align 4
  store i32 %6, i32* %2, align 4
  %32 = load i32, i32* %1, align 4
  %33 = load i32, i32* %0, align 4
  %34 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %8, align 8
  %35 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %34, i64 0, i32 0
  %36 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %35, align 8
  %37 = zext i32 %32 to i64
  %38 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %36, i64 %37
  %39 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %38, align 8
  %40 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %39, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = zext i32 %33 to i64
  %43 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %36, i64 %42
  %44 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %43, align 8
  %45 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %44, i64 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp slt i32 %41, %46
  br i1 %47, label %48, label %69

48:                                               ; preds = %31
  store i32 %32, i32* %0, align 4
  store i32 %33, i32* %1, align 4
  %49 = load i32, i32* %2, align 4
  %50 = zext i32 %49 to i64
  br label %69

51:                                               ; preds = %5
  br i1 %29, label %52, label %53

52:                                               ; preds = %51
  store i32 %23, i32* %0, align 4
  store i32 %7, i32* %2, align 4
  br label %69

53:                                               ; preds = %51
  store i32 %6, i32* %0, align 4
  store i32 %7, i32* %1, align 4
  %54 = load i32, i32* %2, align 4
  %55 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %8, align 8
  %56 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %55, i64 0, i32 0
  %57 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %56, align 8
  %58 = zext i32 %54 to i64
  %59 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %57, i64 %58
  %60 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %59, align 8
  %61 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %57, i64 %17
  %64 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %63, align 8
  %65 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = icmp slt i32 %62, %66
  br i1 %67, label %68, label %69

68:                                               ; preds = %53
  store i32 %54, i32* %1, align 4
  store i32 %7, i32* %2, align 4
  br label %69

69:                                               ; preds = %30, %31, %48, %52, %53, %68
  %70 = phi i64 [ %24, %30 ], [ %12, %31 ], [ %50, %48 ], [ %17, %52 ], [ %58, %53 ], [ %17, %68 ]
  %71 = phi i32 [ %23, %30 ], [ %6, %31 ], [ %49, %48 ], [ %7, %52 ], [ %54, %53 ], [ %7, %68 ]
  %72 = phi i32 [ 0, %30 ], [ 1, %31 ], [ 2, %48 ], [ 1, %52 ], [ 1, %53 ], [ 2, %68 ]
  %73 = load i32, i32* %3, align 4
  %74 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %8, align 8
  %75 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %74, i64 0, i32 0
  %76 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %75, align 8
  %77 = zext i32 %73 to i64
  %78 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %76, i64 %77
  %79 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %78, align 8
  %80 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %79, i64 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %76, i64 %70
  %83 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %82, align 8
  %84 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %83, i64 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = icmp slt i32 %81, %85
  br i1 %86, label %87, label %125

87:                                               ; preds = %69
  store i32 %73, i32* %2, align 4
  store i32 %71, i32* %3, align 4
  %88 = add nuw nsw i32 %72, 1
  %89 = load i32, i32* %2, align 4
  %90 = load i32, i32* %1, align 4
  %91 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %8, align 8
  %92 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %91, i64 0, i32 0
  %93 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %92, align 8
  %94 = zext i32 %89 to i64
  %95 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %93, i64 %94
  %96 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %95, align 8
  %97 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %96, i64 0, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = zext i32 %90 to i64
  %100 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %93, i64 %99
  %101 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %100, align 8
  %102 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %101, i64 0, i32 0
  %103 = load i32, i32* %102, align 8
  %104 = icmp slt i32 %98, %103
  br i1 %104, label %105, label %125

105:                                              ; preds = %87
  store i32 %89, i32* %1, align 4
  store i32 %90, i32* %2, align 4
  %106 = add nuw nsw i32 %72, 2
  %107 = load i32, i32* %1, align 4
  %108 = load i32, i32* %0, align 4
  %109 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %8, align 8
  %110 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %109, i64 0, i32 0
  %111 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %110, align 8
  %112 = zext i32 %107 to i64
  %113 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %111, i64 %112
  %114 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %113, align 8
  %115 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %114, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = zext i32 %108 to i64
  %118 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %111, i64 %117
  %119 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %118, align 8
  %120 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %119, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp slt i32 %116, %121
  br i1 %122, label %123, label %125

123:                                              ; preds = %105
  store i32 %107, i32* %0, align 4
  store i32 %108, i32* %1, align 4
  %124 = add nuw nsw i32 %72, 3
  br label %125

125:                                              ; preds = %87, %123, %105, %69
  %126 = phi i32 [ %124, %123 ], [ %106, %105 ], [ %88, %87 ], [ %72, %69 ]
  ret i32 %126
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort5IRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEjT0_SF_SF_SF_SF_T_(i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, %struct.ByRank* nocapture readonly dereferenceable(8)) unnamed_addr #4 {
  %7 = tail call fastcc i32 @_ZNSt3__17__sort4IRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEjT0_SF_SF_SF_T_(i32* %0, i32* %1, i32* %2, i32* %3, %struct.ByRank* dereferenceable(8) %5)
  %8 = load i32, i32* %4, align 4
  %9 = load i32, i32* %3, align 4
  %10 = getelementptr inbounds %struct.ByRank, %struct.ByRank* %5, i64 0, i32 0
  %11 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %10, align 8
  %12 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %11, i64 0, i32 0
  %13 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %12, align 8
  %14 = zext i32 %8 to i64
  %15 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %13, i64 %14
  %16 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %15, align 8
  %17 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %9 to i64
  %20 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %13, i64 %19
  %21 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %20, align 8
  %22 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %18, %23
  br i1 %24, label %25, label %81

25:                                               ; preds = %6
  store i32 %8, i32* %3, align 4
  store i32 %9, i32* %4, align 4
  %26 = add i32 %7, 1
  %27 = load i32, i32* %3, align 4
  %28 = load i32, i32* %2, align 4
  %29 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %10, align 8
  %30 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %29, i64 0, i32 0
  %31 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %30, align 8
  %32 = zext i32 %27 to i64
  %33 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %31, i64 %32
  %34 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %33, align 8
  %35 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %28 to i64
  %38 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %31, i64 %37
  %39 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %38, align 8
  %40 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %39, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = icmp slt i32 %36, %41
  br i1 %42, label %43, label %81

43:                                               ; preds = %25
  store i32 %27, i32* %2, align 4
  store i32 %28, i32* %3, align 4
  %44 = add i32 %7, 2
  %45 = load i32, i32* %2, align 4
  %46 = load i32, i32* %1, align 4
  %47 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %10, align 8
  %48 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %47, i64 0, i32 0
  %49 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %48, align 8
  %50 = zext i32 %45 to i64
  %51 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %49, i64 %50
  %52 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %51, align 8
  %53 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %52, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = zext i32 %46 to i64
  %56 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %49, i64 %55
  %57 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %56, align 8
  %58 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = icmp slt i32 %54, %59
  br i1 %60, label %61, label %81

61:                                               ; preds = %43
  store i32 %45, i32* %1, align 4
  store i32 %46, i32* %2, align 4
  %62 = add i32 %7, 3
  %63 = load i32, i32* %1, align 4
  %64 = load i32, i32* %0, align 4
  %65 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %10, align 8
  %66 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %65, i64 0, i32 0
  %67 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %66, align 8
  %68 = zext i32 %63 to i64
  %69 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %67, i64 %68
  %70 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %69, align 8
  %71 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = zext i32 %64 to i64
  %74 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %67, i64 %73
  %75 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %74, align 8
  %76 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = icmp slt i32 %72, %77
  br i1 %78, label %79, label %81

79:                                               ; preds = %61
  store i32 %63, i32* %0, align 4
  store i32 %64, i32* %1, align 4
  %80 = add i32 %7, 4
  br label %81

81:                                               ; preds = %25, %61, %79, %43, %6
  %82 = phi i32 [ %80, %79 ], [ %62, %61 ], [ %44, %43 ], [ %26, %25 ], [ %7, %6 ]
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEbT0_SF_T_(i32*, i32*, %struct.ByRank* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %4 = ptrtoint i32* %1 to i64
  %5 = ptrtoint i32* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  switch i64 %7, label %103 [
    i64 0, label %219
    i64 1, label %219
    i64 2, label %8
    i64 3, label %28
    i64 4, label %92
    i64 5, label %97
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds i32, i32* %1, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %0, align 4
  %12 = getelementptr inbounds %struct.ByRank, %struct.ByRank* %2, i64 0, i32 0
  %13 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %12, align 8
  %14 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %13, i64 0, i32 0
  %15 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %14, align 8
  %16 = zext i32 %10 to i64
  %17 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %15, i64 %16
  %18 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %17, align 8
  %19 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %11 to i64
  %22 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %15, i64 %21
  %23 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %22, align 8
  %24 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %20, %25
  br i1 %26, label %27, label %219

27:                                               ; preds = %8
  store i32 %10, i32* %0, align 4
  store i32 %11, i32* %9, align 4
  br label %219

28:                                               ; preds = %3
  %29 = getelementptr inbounds i32, i32* %0, i64 1
  %30 = getelementptr inbounds i32, i32* %1, i64 -1
  %31 = load i32, i32* %29, align 4
  %32 = load i32, i32* %0, align 4
  %33 = getelementptr inbounds %struct.ByRank, %struct.ByRank* %2, i64 0, i32 0
  %34 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %33, align 8
  %35 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %34, i64 0, i32 0
  %36 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %35, align 8
  %37 = zext i32 %31 to i64
  %38 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %36, i64 %37
  %39 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %38, align 8
  %40 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %39, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = zext i32 %32 to i64
  %43 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %36, i64 %42
  %44 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %43, align 8
  %45 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %44, i64 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp slt i32 %41, %46
  %48 = load i32, i32* %30, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %36, i64 %49
  %51 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %50, align 8
  %52 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp slt i32 %53, %41
  br i1 %47, label %74, label %55

55:                                               ; preds = %28
  br i1 %54, label %56, label %219

56:                                               ; preds = %55
  store i32 %48, i32* %29, align 4
  store i32 %31, i32* %30, align 4
  %57 = load i32, i32* %29, align 4
  %58 = load i32, i32* %0, align 4
  %59 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %33, align 8
  %60 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %59, i64 0, i32 0
  %61 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %60, align 8
  %62 = zext i32 %57 to i64
  %63 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %61, i64 %62
  %64 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %63, align 8
  %65 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %58 to i64
  %68 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %61, i64 %67
  %69 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %68, align 8
  %70 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %69, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = icmp slt i32 %66, %71
  br i1 %72, label %73, label %219

73:                                               ; preds = %56
  store i32 %57, i32* %0, align 4
  store i32 %58, i32* %29, align 4
  br label %219

74:                                               ; preds = %28
  br i1 %54, label %75, label %76

75:                                               ; preds = %74
  store i32 %48, i32* %0, align 4
  store i32 %32, i32* %30, align 4
  br label %219

76:                                               ; preds = %74
  store i32 %31, i32* %0, align 4
  store i32 %32, i32* %29, align 4
  %77 = load i32, i32* %30, align 4
  %78 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %33, align 8
  %79 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %78, i64 0, i32 0
  %80 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %79, align 8
  %81 = zext i32 %77 to i64
  %82 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %80, i64 %81
  %83 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %82, align 8
  %84 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %83, i64 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %80, i64 %42
  %87 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %86, align 8
  %88 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp slt i32 %85, %89
  br i1 %90, label %91, label %219

91:                                               ; preds = %76
  store i32 %77, i32* %29, align 4
  store i32 %32, i32* %30, align 4
  br label %219

92:                                               ; preds = %3
  %93 = getelementptr inbounds i32, i32* %0, i64 1
  %94 = getelementptr inbounds i32, i32* %0, i64 2
  %95 = getelementptr inbounds i32, i32* %1, i64 -1
  %96 = tail call fastcc i32 @_ZNSt3__17__sort4IRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEjT0_SF_SF_SF_T_(i32* %0, i32* %93, i32* %94, i32* %95, %struct.ByRank* dereferenceable(8) %2)
  br label %219

97:                                               ; preds = %3
  %98 = getelementptr inbounds i32, i32* %0, i64 1
  %99 = getelementptr inbounds i32, i32* %0, i64 2
  %100 = getelementptr inbounds i32, i32* %0, i64 3
  %101 = getelementptr inbounds i32, i32* %1, i64 -1
  %102 = tail call fastcc i32 @_ZNSt3__17__sort5IRZN4absl24synchronization_internalL4SortERKNS2_12_GLOBAL__N_13VecIPNS3_4NodeEEEPNS4_IiEEE6ByRankPiEEjT0_SF_SF_SF_SF_T_(i32* %0, i32* %98, i32* %99, i32* %100, i32* %101, %struct.ByRank* dereferenceable(8) %2)
  br label %219

103:                                              ; preds = %3
  %104 = getelementptr inbounds i32, i32* %0, i64 2
  %105 = getelementptr inbounds i32, i32* %0, i64 1
  %106 = load i32, i32* %105, align 4
  %107 = load i32, i32* %0, align 4
  %108 = getelementptr inbounds %struct.ByRank, %struct.ByRank* %2, i64 0, i32 0
  %109 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %108, align 8
  %110 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %109, i64 0, i32 0
  %111 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %110, align 8
  %112 = zext i32 %106 to i64
  %113 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %111, i64 %112
  %114 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %113, align 8
  %115 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %114, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = zext i32 %107 to i64
  %118 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %111, i64 %117
  %119 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %118, align 8
  %120 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %119, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp slt i32 %116, %121
  %123 = load i32, i32* %104, align 4
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %111, i64 %124
  %126 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %125, align 8
  %127 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %126, i64 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = icmp slt i32 %128, %116
  br i1 %122, label %145, label %130

130:                                              ; preds = %103
  br i1 %129, label %131, label %161

131:                                              ; preds = %130
  store i32 %123, i32* %105, align 4
  store i32 %106, i32* %104, align 4
  %132 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %108, align 8
  %133 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %132, i64 0, i32 0
  %134 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %133, align 8
  %135 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %134, i64 %124
  %136 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %135, align 8
  %137 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %136, i64 0, i32 0
  %138 = load i32, i32* %137, align 8
  %139 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %134, i64 %117
  %140 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %139, align 8
  %141 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %140, i64 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = icmp slt i32 %138, %142
  br i1 %143, label %144, label %161

144:                                              ; preds = %131
  store i32 %123, i32* %0, align 4
  store i32 %107, i32* %105, align 4
  br label %161

145:                                              ; preds = %103
  br i1 %129, label %146, label %147

146:                                              ; preds = %145
  store i32 %123, i32* %0, align 4
  store i32 %107, i32* %104, align 4
  br label %161

147:                                              ; preds = %145
  store i32 %106, i32* %0, align 4
  store i32 %107, i32* %105, align 4
  %148 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %108, align 8
  %149 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %148, i64 0, i32 0
  %150 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %149, align 8
  %151 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %150, i64 %124
  %152 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %151, align 8
  %153 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %152, i64 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %150, i64 %117
  %156 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %155, align 8
  %157 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %156, i64 0, i32 0
  %158 = load i32, i32* %157, align 8
  %159 = icmp slt i32 %154, %158
  br i1 %159, label %160, label %161

160:                                              ; preds = %147
  store i32 %123, i32* %105, align 4
  store i32 %107, i32* %104, align 4
  br label %161

161:                                              ; preds = %130, %131, %144, %146, %147, %160
  %162 = phi i32 [ %123, %130 ], [ %106, %131 ], [ %106, %144 ], [ %107, %146 ], [ %123, %147 ], [ %107, %160 ]
  %163 = getelementptr inbounds i32, i32* %0, i64 3
  %164 = icmp eq i32* %163, %1
  br i1 %164, label %219, label %165

165:                                              ; preds = %161, %214
  %166 = phi i32 [ %215, %214 ], [ %162, %161 ]
  %167 = phi i32* [ %212, %214 ], [ %163, %161 ]
  %168 = phi i32 [ %211, %214 ], [ 0, %161 ]
  %169 = phi i32* [ %167, %214 ], [ %104, %161 ]
  %170 = load i32, i32* %167, align 4
  %171 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %108, align 8
  %172 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %171, i64 0, i32 0
  %173 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %172, align 8
  %174 = zext i32 %170 to i64
  %175 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %173, i64 %174
  %176 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %175, align 8
  %177 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %176, i64 0, i32 0
  %178 = load i32, i32* %177, align 8
  %179 = zext i32 %166 to i64
  %180 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %173, i64 %179
  %181 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %180, align 8
  %182 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %181, i64 0, i32 0
  %183 = load i32, i32* %182, align 8
  %184 = icmp slt i32 %178, %183
  br i1 %184, label %185, label %210

185:                                              ; preds = %165, %190
  %186 = phi i32 [ %192, %190 ], [ %166, %165 ]
  %187 = phi i32* [ %188, %190 ], [ %167, %165 ]
  %188 = phi i32* [ %191, %190 ], [ %169, %165 ]
  store i32 %186, i32* %187, align 4
  %189 = icmp eq i32* %188, %0
  br i1 %189, label %206, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds i32, i32* %188, i64 -1
  %192 = load i32, i32* %191, align 4
  %193 = load %"class.absl::synchronization_internal::(anonymous namespace)::Vec"*, %"class.absl::synchronization_internal::(anonymous namespace)::Vec"** %108, align 8
  %194 = getelementptr inbounds %"class.absl::synchronization_internal::(anonymous namespace)::Vec", %"class.absl::synchronization_internal::(anonymous namespace)::Vec"* %193, i64 0, i32 0
  %195 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"**, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*** %194, align 8
  %196 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %195, i64 %174
  %197 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %196, align 8
  %198 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %197, i64 0, i32 0
  %199 = load i32, i32* %198, align 8
  %200 = zext i32 %192 to i64
  %201 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %195, i64 %200
  %202 = load %"struct.absl::synchronization_internal::(anonymous namespace)::Node"*, %"struct.absl::synchronization_internal::(anonymous namespace)::Node"** %201, align 8
  %203 = getelementptr inbounds %"struct.absl::synchronization_internal::(anonymous namespace)::Node", %"struct.absl::synchronization_internal::(anonymous namespace)::Node"* %202, i64 0, i32 0
  %204 = load i32, i32* %203, align 8
  %205 = icmp slt i32 %199, %204
  br i1 %205, label %185, label %206

206:                                              ; preds = %185, %190
  %207 = phi i32* [ %0, %185 ], [ %188, %190 ]
  store i32 %170, i32* %207, align 4
  %208 = add i32 %168, 1
  %209 = icmp eq i32 %208, 8
  br i1 %209, label %216, label %210

210:                                              ; preds = %206, %165
  %211 = phi i32 [ %208, %206 ], [ %168, %165 ]
  %212 = getelementptr inbounds i32, i32* %167, i64 1
  %213 = icmp eq i32* %212, %1
  br i1 %213, label %219, label %214

214:                                              ; preds = %210
  %215 = load i32, i32* %167, align 4
  br label %165

216:                                              ; preds = %206
  %217 = getelementptr inbounds i32, i32* %167, i64 1
  %218 = icmp eq i32* %217, %1
  br label %219

219:                                              ; preds = %210, %216, %161, %91, %76, %75, %73, %56, %55, %8, %27, %3, %3, %97, %92
  %220 = phi i1 [ true, %97 ], [ true, %92 ], [ true, %3 ], [ true, %3 ], [ true, %27 ], [ true, %8 ], [ true, %55 ], [ true, %56 ], [ true, %73 ], [ true, %75 ], [ true, %76 ], [ true, %91 ], [ true, %161 ], [ %218, %216 ], [ true, %210 ]
  ret i1 %220
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
