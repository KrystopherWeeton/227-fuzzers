; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_validity_state_flags.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_validity_state_flags.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.72", i32, [4 x i8], %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.224", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.242", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.249", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.188", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__atomic_base.110" }
%"struct.std::__1::__atomic_base.110" = type { %"struct.std::__1::__cxx_atomic_impl.111" }
%"struct.std::__1::__cxx_atomic_impl.111" = type { %"struct.std::__1::__cxx_atomic_base_impl.112" }
%"struct.std::__1::__cxx_atomic_base_impl.112" = type { i64 }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::Worklist.119"* }
%"class.blink::Worklist.119" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::Worklist.126"* }
%"class.blink::Worklist.126" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::Worklist.133"* }
%"class.blink::Worklist.133" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::Worklist.140"* }
%"class.blink::Worklist.140" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::Worklist.147"* }
%"class.blink::Worklist.147" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::Worklist.154"* }
%"class.blink::Worklist.154" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::Worklist.161"* }
%"class.blink::Worklist.161" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.168", %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.182", [4 x i8] }>
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170", %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { i64 }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { float }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.191", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.200" }
%"class.WTF::Vector.200" = type { %"class.WTF::VectorBuffer.201" }
%"class.WTF::VectorBuffer.201" = type { %"class.WTF::VectorBufferBase.202" }
%"class.WTF::VectorBufferBase.202" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.216" }
%"class.WTF::VectorBuffer.216" = type { %"class.WTF::VectorBufferBase.217" }
%"class.WTF::VectorBufferBase.217" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.230" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.119"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.126"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.133"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.140"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.147"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.280" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.248 }
%class.scoped_refptr.248 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.249" = type { %"struct.std::__1::__atomic_base.250" }
%"struct.std::__1::__atomic_base.250" = type { %"struct.std::__1::__cxx_atomic_impl.251" }
%"struct.std::__1::__cxx_atomic_impl.251" = type { %"struct.std::__1::__cxx_atomic_base_impl.252" }
%"struct.std::__1::__cxx_atomic_base_impl.252" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::ValidityStateFlags" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.19", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.66", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.253", %"class.std::__1::unique_ptr.258", %"class.blink::Persistent.264", %"class.blink::Persistent.268", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.19" = type { %"class.WTF::HashTable.20" }
%"class.WTF::HashTable.20" = type <{ %"struct.WTF::KeyValuePair.23"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.23" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.32", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.27", i8* }
%"class.WTF::HashMap.27" = type { %"class.WTF::HashTable.28" }
%"class.WTF::HashTable.28" = type <{ %"struct.WTF::KeyValuePair.31"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.31" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.32" = type { %"class.v8::PersistentValueMapBase.33" }
%"class.v8::PersistentValueMapBase.33" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.34", i8* }
%"class.WTF::HashMap.34" = type { %"class.WTF::HashTable.35" }
%"class.WTF::HashTable.35" = type <{ %"struct.WTF::KeyValuePair.38"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.38" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.39" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.50", %"class.WTF::Vector.56", i8, i32 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.287, %"class.blink::Member.306", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.287 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.288", i32, i32, %"class.blink::Persistent.290" }
%"class.WTF::RefCounted.288" = type { %"class.base::RefCounted.289" }
%"class.base::RefCounted.289" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.290" = type { %"class.blink::PersistentBase.291" }
%"class.blink::PersistentBase.291" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.296" }
%"class.WTF::HashMap.296" = type { %"class.WTF::HashTable.297" }
%"class.WTF::HashTable.297" = type <{ %"struct.WTF::KeyValuePair.299"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.299" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.303" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.303" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.303" = type { %"class.v8::TracedReference.304" }
%"class.v8::TracedReference.304" = type { %"class.v8::BasicTracedReference.305" }
%"class.v8::BasicTracedReference.305" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.306" = type { %"class.blink::MemberBase.307" }
%"class.blink::MemberBase.307" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.253" = type { %"class.WTF::VectorBuffer.254" }
%"class.WTF::VectorBuffer.254" = type { %"class.WTF::VectorBufferBase.255" }
%"class.WTF::VectorBufferBase.255" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.264" = type { %"class.blink::PersistentBase.265" }
%"class.blink::PersistentBase.265" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.268" = type { %"class.blink::PersistentBase.269" }
%"class.blink::PersistentBase.269" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"struct.std::__1::pair.277"*, i32, i32 }
%"struct.std::__1::pair.277" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.308" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::Boolean" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blinkL31eternalV8ValidityStateFlagsKeysEPN2v87IsolateEE5kKeys = internal constant [10 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [9 x i8] c"badInput\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"customError\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"patternMismatch\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"rangeOverflow\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"rangeUnderflow\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"stepMismatch\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"tooLong\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"tooShort\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"typeMismatch\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"valueMissing\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 10, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZZN5blinkL31eternalV8ValidityStateFlagsKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.13 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20V8ValidityStateFlags6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18ValidityStateFlagsERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ValidityStateFlags"* nocapture, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = icmp eq %"class.v8::Value"* %1, null
  br i1 %6, label %540, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %540
    i32 3, label %540
  ]

28:                                               ; preds = %23, %12, %7
  %29 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #4
  br i1 %29, label %31, label %30

30:                                               ; preds = %28
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #4
  br label %540

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %33 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to %"class.blink::V8PerIsolateData"**
  %36 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %35, align 8
  %37 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %36, i8* bitcast ([10 x i8*]* @_ZZN5blinkL31eternalV8ValidityStateFlagsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.308"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.308"*)) #4
  %38 = extractvalue { i64, %"class.v8::Eternal"* } %37, 1
  %39 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %39) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #4
  %40 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #4
  %41 = bitcast %"class.v8::Eternal"* %38 to %"class.v8::Value"**
  %42 = load %"class.v8::Value"*, %"class.v8::Value"** %41, align 8
  %43 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %42) #4
  %44 = icmp eq %"class.v8::Value"* %43, null
  br i1 %44, label %45, label %51

45:                                               ; preds = %31
  %46 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %47 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %48 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %48, i64 5
  %50 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %49, align 8
  call void %50(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %46) #4
  br label %539

51:                                               ; preds = %31
  %52 = bitcast %"class.v8::Value"* %43 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 3
  %55 = icmp eq i64 %54, 1
  br i1 %55, label %56, label %73

56:                                               ; preds = %51
  %57 = add i64 %53, -1
  %58 = inttoptr i64 %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = and i64 %53, -4294967296
  %61 = zext i32 %59 to i64
  %62 = or i64 %60, %61
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i16*
  %65 = load i16, i16* %64, align 2
  %66 = icmp eq i16 %65, 67
  br i1 %66, label %67, label %73

67:                                               ; preds = %56
  %68 = add i64 %53, 23
  %69 = inttoptr i64 %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, -2
  %72 = icmp eq i32 %71, 10
  br i1 %72, label %89, label %73

73:                                               ; preds = %56, %51, %67
  %74 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %43) #4
  br i1 %74, label %75, label %78, !prof !2

75:                                               ; preds = %73
  %76 = bitcast %"class.v8::Value"* %43 to %"class.v8::Boolean"*
  %77 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %76) #4
  br label %80

78:                                               ; preds = %73
  %79 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %43, %"class.v8::Isolate"* %0) #4
  br label %80

80:                                               ; preds = %75, %78
  %81 = phi i1 [ %77, %75 ], [ %79, %78 ]
  %82 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %539

85:                                               ; preds = %80
  %86 = zext i1 %81 to i8
  %87 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 11
  store i8 %86, i8* %87, align 2
  %88 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 1
  store i8 1, i8* %88, align 8
  br label %89

89:                                               ; preds = %85, %67
  %90 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 1, i32 0
  %91 = bitcast %"class.v8::Name"** %90 to %"class.v8::Value"**
  %92 = load %"class.v8::Value"*, %"class.v8::Value"** %91, align 8
  %93 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %92) #4
  %94 = icmp eq %"class.v8::Value"* %93, null
  br i1 %94, label %95, label %101

95:                                               ; preds = %89
  %96 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %97 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %98 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %98, i64 5
  %100 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %99, align 8
  call void %100(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %96) #4
  br label %539

101:                                              ; preds = %89
  %102 = bitcast %"class.v8::Value"* %93 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = and i64 %103, 3
  %105 = icmp eq i64 %104, 1
  br i1 %105, label %106, label %123

106:                                              ; preds = %101
  %107 = add i64 %103, -1
  %108 = inttoptr i64 %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = and i64 %103, -4294967296
  %111 = zext i32 %109 to i64
  %112 = or i64 %110, %111
  %113 = add i64 %112, 7
  %114 = inttoptr i64 %113 to i16*
  %115 = load i16, i16* %114, align 2
  %116 = icmp eq i16 %115, 67
  br i1 %116, label %117, label %123

117:                                              ; preds = %106
  %118 = add i64 %103, 23
  %119 = inttoptr i64 %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = and i32 %120, -2
  %122 = icmp eq i32 %121, 10
  br i1 %122, label %139, label %123

123:                                              ; preds = %106, %101, %117
  %124 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %93) #4
  br i1 %124, label %125, label %128, !prof !2

125:                                              ; preds = %123
  %126 = bitcast %"class.v8::Value"* %93 to %"class.v8::Boolean"*
  %127 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %126) #4
  br label %130

128:                                              ; preds = %123
  %129 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %93, %"class.v8::Isolate"* %0) #4
  br label %130

130:                                              ; preds = %125, %128
  %131 = phi i1 [ %127, %125 ], [ %129, %128 ]
  %132 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %539

135:                                              ; preds = %130
  %136 = zext i1 %131 to i8
  %137 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 12
  store i8 %136, i8* %137, align 1
  %138 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 2
  store i8 1, i8* %138, align 1
  br label %139

139:                                              ; preds = %135, %117
  %140 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 2, i32 0
  %141 = bitcast %"class.v8::Name"** %140 to %"class.v8::Value"**
  %142 = load %"class.v8::Value"*, %"class.v8::Value"** %141, align 8
  %143 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %142) #4
  %144 = icmp eq %"class.v8::Value"* %143, null
  br i1 %144, label %145, label %151

145:                                              ; preds = %139
  %146 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %147 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %148 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %148, i64 5
  %150 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %149, align 8
  call void %150(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %146) #4
  br label %539

151:                                              ; preds = %139
  %152 = bitcast %"class.v8::Value"* %143 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = and i64 %153, 3
  %155 = icmp eq i64 %154, 1
  br i1 %155, label %156, label %173

156:                                              ; preds = %151
  %157 = add i64 %153, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = and i64 %153, -4294967296
  %161 = zext i32 %159 to i64
  %162 = or i64 %160, %161
  %163 = add i64 %162, 7
  %164 = inttoptr i64 %163 to i16*
  %165 = load i16, i16* %164, align 2
  %166 = icmp eq i16 %165, 67
  br i1 %166, label %167, label %173

167:                                              ; preds = %156
  %168 = add i64 %153, 23
  %169 = inttoptr i64 %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = and i32 %170, -2
  %172 = icmp eq i32 %171, 10
  br i1 %172, label %189, label %173

173:                                              ; preds = %156, %151, %167
  %174 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %143) #4
  br i1 %174, label %175, label %178, !prof !2

175:                                              ; preds = %173
  %176 = bitcast %"class.v8::Value"* %143 to %"class.v8::Boolean"*
  %177 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %176) #4
  br label %180

178:                                              ; preds = %173
  %179 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %143, %"class.v8::Isolate"* %0) #4
  br label %180

180:                                              ; preds = %175, %178
  %181 = phi i1 [ %177, %175 ], [ %179, %178 ]
  %182 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %183 = load i32, i32* %182, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %539

185:                                              ; preds = %180
  %186 = zext i1 %181 to i8
  %187 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 13
  store i8 %186, i8* %187, align 4
  %188 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 3
  store i8 1, i8* %188, align 2
  br label %189

189:                                              ; preds = %185, %167
  %190 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 3, i32 0
  %191 = bitcast %"class.v8::Name"** %190 to %"class.v8::Value"**
  %192 = load %"class.v8::Value"*, %"class.v8::Value"** %191, align 8
  %193 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %192) #4
  %194 = icmp eq %"class.v8::Value"* %193, null
  br i1 %194, label %195, label %201

195:                                              ; preds = %189
  %196 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %197 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %198 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %197, align 8
  %199 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %198, i64 5
  %200 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %199, align 8
  call void %200(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %196) #4
  br label %539

201:                                              ; preds = %189
  %202 = bitcast %"class.v8::Value"* %193 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = and i64 %203, 3
  %205 = icmp eq i64 %204, 1
  br i1 %205, label %206, label %223

206:                                              ; preds = %201
  %207 = add i64 %203, -1
  %208 = inttoptr i64 %207 to i32*
  %209 = load i32, i32* %208, align 4
  %210 = and i64 %203, -4294967296
  %211 = zext i32 %209 to i64
  %212 = or i64 %210, %211
  %213 = add i64 %212, 7
  %214 = inttoptr i64 %213 to i16*
  %215 = load i16, i16* %214, align 2
  %216 = icmp eq i16 %215, 67
  br i1 %216, label %217, label %223

217:                                              ; preds = %206
  %218 = add i64 %203, 23
  %219 = inttoptr i64 %218 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = and i32 %220, -2
  %222 = icmp eq i32 %221, 10
  br i1 %222, label %239, label %223

223:                                              ; preds = %206, %201, %217
  %224 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %193) #4
  br i1 %224, label %225, label %228, !prof !2

225:                                              ; preds = %223
  %226 = bitcast %"class.v8::Value"* %193 to %"class.v8::Boolean"*
  %227 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %226) #4
  br label %230

228:                                              ; preds = %223
  %229 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %193, %"class.v8::Isolate"* %0) #4
  br label %230

230:                                              ; preds = %225, %228
  %231 = phi i1 [ %227, %225 ], [ %229, %228 ]
  %232 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %233 = load i32, i32* %232, align 8
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %539

235:                                              ; preds = %230
  %236 = zext i1 %231 to i8
  %237 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 14
  store i8 %236, i8* %237, align 1
  %238 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 4
  store i8 1, i8* %238, align 1
  br label %239

239:                                              ; preds = %235, %217
  %240 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 4, i32 0
  %241 = bitcast %"class.v8::Name"** %240 to %"class.v8::Value"**
  %242 = load %"class.v8::Value"*, %"class.v8::Value"** %241, align 8
  %243 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %242) #4
  %244 = icmp eq %"class.v8::Value"* %243, null
  br i1 %244, label %245, label %251

245:                                              ; preds = %239
  %246 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %247 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %248 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %247, align 8
  %249 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %248, i64 5
  %250 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %249, align 8
  call void %250(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %246) #4
  br label %539

251:                                              ; preds = %239
  %252 = bitcast %"class.v8::Value"* %243 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = and i64 %253, 3
  %255 = icmp eq i64 %254, 1
  br i1 %255, label %256, label %273

256:                                              ; preds = %251
  %257 = add i64 %253, -1
  %258 = inttoptr i64 %257 to i32*
  %259 = load i32, i32* %258, align 4
  %260 = and i64 %253, -4294967296
  %261 = zext i32 %259 to i64
  %262 = or i64 %260, %261
  %263 = add i64 %262, 7
  %264 = inttoptr i64 %263 to i16*
  %265 = load i16, i16* %264, align 2
  %266 = icmp eq i16 %265, 67
  br i1 %266, label %267, label %273

267:                                              ; preds = %256
  %268 = add i64 %253, 23
  %269 = inttoptr i64 %268 to i32*
  %270 = load i32, i32* %269, align 4
  %271 = and i32 %270, -2
  %272 = icmp eq i32 %271, 10
  br i1 %272, label %289, label %273

273:                                              ; preds = %256, %251, %267
  %274 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %243) #4
  br i1 %274, label %275, label %278, !prof !2

275:                                              ; preds = %273
  %276 = bitcast %"class.v8::Value"* %243 to %"class.v8::Boolean"*
  %277 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %276) #4
  br label %280

278:                                              ; preds = %273
  %279 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %243, %"class.v8::Isolate"* %0) #4
  br label %280

280:                                              ; preds = %275, %278
  %281 = phi i1 [ %277, %275 ], [ %279, %278 ]
  %282 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %283 = load i32, i32* %282, align 8
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %539

285:                                              ; preds = %280
  %286 = zext i1 %281 to i8
  %287 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 15
  store i8 %286, i8* %287, align 2
  %288 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 5
  store i8 1, i8* %288, align 4
  br label %289

289:                                              ; preds = %285, %267
  %290 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 5, i32 0
  %291 = bitcast %"class.v8::Name"** %290 to %"class.v8::Value"**
  %292 = load %"class.v8::Value"*, %"class.v8::Value"** %291, align 8
  %293 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %292) #4
  %294 = icmp eq %"class.v8::Value"* %293, null
  br i1 %294, label %295, label %301

295:                                              ; preds = %289
  %296 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %297 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %298 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %297, align 8
  %299 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %298, i64 5
  %300 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %299, align 8
  call void %300(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %296) #4
  br label %539

301:                                              ; preds = %289
  %302 = bitcast %"class.v8::Value"* %293 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = and i64 %303, 3
  %305 = icmp eq i64 %304, 1
  br i1 %305, label %306, label %323

306:                                              ; preds = %301
  %307 = add i64 %303, -1
  %308 = inttoptr i64 %307 to i32*
  %309 = load i32, i32* %308, align 4
  %310 = and i64 %303, -4294967296
  %311 = zext i32 %309 to i64
  %312 = or i64 %310, %311
  %313 = add i64 %312, 7
  %314 = inttoptr i64 %313 to i16*
  %315 = load i16, i16* %314, align 2
  %316 = icmp eq i16 %315, 67
  br i1 %316, label %317, label %323

317:                                              ; preds = %306
  %318 = add i64 %303, 23
  %319 = inttoptr i64 %318 to i32*
  %320 = load i32, i32* %319, align 4
  %321 = and i32 %320, -2
  %322 = icmp eq i32 %321, 10
  br i1 %322, label %339, label %323

323:                                              ; preds = %306, %301, %317
  %324 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %293) #4
  br i1 %324, label %325, label %328, !prof !2

325:                                              ; preds = %323
  %326 = bitcast %"class.v8::Value"* %293 to %"class.v8::Boolean"*
  %327 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %326) #4
  br label %330

328:                                              ; preds = %323
  %329 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %293, %"class.v8::Isolate"* %0) #4
  br label %330

330:                                              ; preds = %325, %328
  %331 = phi i1 [ %327, %325 ], [ %329, %328 ]
  %332 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %333 = load i32, i32* %332, align 8
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %539

335:                                              ; preds = %330
  %336 = zext i1 %331 to i8
  %337 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 16
  store i8 %336, i8* %337, align 1
  %338 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 6
  store i8 1, i8* %338, align 1
  br label %339

339:                                              ; preds = %335, %317
  %340 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 6, i32 0
  %341 = bitcast %"class.v8::Name"** %340 to %"class.v8::Value"**
  %342 = load %"class.v8::Value"*, %"class.v8::Value"** %341, align 8
  %343 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %342) #4
  %344 = icmp eq %"class.v8::Value"* %343, null
  br i1 %344, label %345, label %351

345:                                              ; preds = %339
  %346 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %347 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %348 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %347, align 8
  %349 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %348, i64 5
  %350 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %349, align 8
  call void %350(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %346) #4
  br label %539

351:                                              ; preds = %339
  %352 = bitcast %"class.v8::Value"* %343 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = and i64 %353, 3
  %355 = icmp eq i64 %354, 1
  br i1 %355, label %356, label %373

356:                                              ; preds = %351
  %357 = add i64 %353, -1
  %358 = inttoptr i64 %357 to i32*
  %359 = load i32, i32* %358, align 4
  %360 = and i64 %353, -4294967296
  %361 = zext i32 %359 to i64
  %362 = or i64 %360, %361
  %363 = add i64 %362, 7
  %364 = inttoptr i64 %363 to i16*
  %365 = load i16, i16* %364, align 2
  %366 = icmp eq i16 %365, 67
  br i1 %366, label %367, label %373

367:                                              ; preds = %356
  %368 = add i64 %353, 23
  %369 = inttoptr i64 %368 to i32*
  %370 = load i32, i32* %369, align 4
  %371 = and i32 %370, -2
  %372 = icmp eq i32 %371, 10
  br i1 %372, label %389, label %373

373:                                              ; preds = %356, %351, %367
  %374 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %343) #4
  br i1 %374, label %375, label %378, !prof !2

375:                                              ; preds = %373
  %376 = bitcast %"class.v8::Value"* %343 to %"class.v8::Boolean"*
  %377 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %376) #4
  br label %380

378:                                              ; preds = %373
  %379 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %343, %"class.v8::Isolate"* %0) #4
  br label %380

380:                                              ; preds = %375, %378
  %381 = phi i1 [ %377, %375 ], [ %379, %378 ]
  %382 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %383 = load i32, i32* %382, align 8
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %539

385:                                              ; preds = %380
  %386 = zext i1 %381 to i8
  %387 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 17
  store i8 %386, i8* %387, align 8
  %388 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 7
  store i8 1, i8* %388, align 2
  br label %389

389:                                              ; preds = %385, %367
  %390 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 7, i32 0
  %391 = bitcast %"class.v8::Name"** %390 to %"class.v8::Value"**
  %392 = load %"class.v8::Value"*, %"class.v8::Value"** %391, align 8
  %393 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %392) #4
  %394 = icmp eq %"class.v8::Value"* %393, null
  br i1 %394, label %395, label %401

395:                                              ; preds = %389
  %396 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %397 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %398 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %397, align 8
  %399 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %398, i64 5
  %400 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %399, align 8
  call void %400(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %396) #4
  br label %539

401:                                              ; preds = %389
  %402 = bitcast %"class.v8::Value"* %393 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = and i64 %403, 3
  %405 = icmp eq i64 %404, 1
  br i1 %405, label %406, label %423

406:                                              ; preds = %401
  %407 = add i64 %403, -1
  %408 = inttoptr i64 %407 to i32*
  %409 = load i32, i32* %408, align 4
  %410 = and i64 %403, -4294967296
  %411 = zext i32 %409 to i64
  %412 = or i64 %410, %411
  %413 = add i64 %412, 7
  %414 = inttoptr i64 %413 to i16*
  %415 = load i16, i16* %414, align 2
  %416 = icmp eq i16 %415, 67
  br i1 %416, label %417, label %423

417:                                              ; preds = %406
  %418 = add i64 %403, 23
  %419 = inttoptr i64 %418 to i32*
  %420 = load i32, i32* %419, align 4
  %421 = and i32 %420, -2
  %422 = icmp eq i32 %421, 10
  br i1 %422, label %439, label %423

423:                                              ; preds = %406, %401, %417
  %424 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %393) #4
  br i1 %424, label %425, label %428, !prof !2

425:                                              ; preds = %423
  %426 = bitcast %"class.v8::Value"* %393 to %"class.v8::Boolean"*
  %427 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %426) #4
  br label %430

428:                                              ; preds = %423
  %429 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %393, %"class.v8::Isolate"* %0) #4
  br label %430

430:                                              ; preds = %425, %428
  %431 = phi i1 [ %427, %425 ], [ %429, %428 ]
  %432 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %433 = load i32, i32* %432, align 8
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %539

435:                                              ; preds = %430
  %436 = zext i1 %431 to i8
  %437 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 18
  store i8 %436, i8* %437, align 1
  %438 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 8
  store i8 1, i8* %438, align 1
  br label %439

439:                                              ; preds = %435, %417
  %440 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 8, i32 0
  %441 = bitcast %"class.v8::Name"** %440 to %"class.v8::Value"**
  %442 = load %"class.v8::Value"*, %"class.v8::Value"** %441, align 8
  %443 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %442) #4
  %444 = icmp eq %"class.v8::Value"* %443, null
  br i1 %444, label %445, label %451

445:                                              ; preds = %439
  %446 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %447 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %448 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %447, align 8
  %449 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %448, i64 5
  %450 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %449, align 8
  call void %450(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %446) #4
  br label %539

451:                                              ; preds = %439
  %452 = bitcast %"class.v8::Value"* %443 to i64*
  %453 = load i64, i64* %452, align 8
  %454 = and i64 %453, 3
  %455 = icmp eq i64 %454, 1
  br i1 %455, label %456, label %473

456:                                              ; preds = %451
  %457 = add i64 %453, -1
  %458 = inttoptr i64 %457 to i32*
  %459 = load i32, i32* %458, align 4
  %460 = and i64 %453, -4294967296
  %461 = zext i32 %459 to i64
  %462 = or i64 %460, %461
  %463 = add i64 %462, 7
  %464 = inttoptr i64 %463 to i16*
  %465 = load i16, i16* %464, align 2
  %466 = icmp eq i16 %465, 67
  br i1 %466, label %467, label %473

467:                                              ; preds = %456
  %468 = add i64 %453, 23
  %469 = inttoptr i64 %468 to i32*
  %470 = load i32, i32* %469, align 4
  %471 = and i32 %470, -2
  %472 = icmp eq i32 %471, 10
  br i1 %472, label %489, label %473

473:                                              ; preds = %456, %451, %467
  %474 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %443) #4
  br i1 %474, label %475, label %478, !prof !2

475:                                              ; preds = %473
  %476 = bitcast %"class.v8::Value"* %443 to %"class.v8::Boolean"*
  %477 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %476) #4
  br label %480

478:                                              ; preds = %473
  %479 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %443, %"class.v8::Isolate"* %0) #4
  br label %480

480:                                              ; preds = %475, %478
  %481 = phi i1 [ %477, %475 ], [ %479, %478 ]
  %482 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %483 = load i32, i32* %482, align 8
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %485, label %539

485:                                              ; preds = %480
  %486 = zext i1 %481 to i8
  %487 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 19
  store i8 %486, i8* %487, align 2
  %488 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 9
  store i8 1, i8* %488, align 8
  br label %489

489:                                              ; preds = %485, %467
  %490 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 9, i32 0
  %491 = bitcast %"class.v8::Name"** %490 to %"class.v8::Value"**
  %492 = load %"class.v8::Value"*, %"class.v8::Value"** %491, align 8
  %493 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %492) #4
  %494 = icmp eq %"class.v8::Value"* %493, null
  br i1 %494, label %495, label %501

495:                                              ; preds = %489
  %496 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %497 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %498 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %497, align 8
  %499 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %498, i64 5
  %500 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %499, align 8
  call void %500(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %496) #4
  br label %539

501:                                              ; preds = %489
  %502 = bitcast %"class.v8::Value"* %493 to i64*
  %503 = load i64, i64* %502, align 8
  %504 = and i64 %503, 3
  %505 = icmp eq i64 %504, 1
  br i1 %505, label %506, label %523

506:                                              ; preds = %501
  %507 = add i64 %503, -1
  %508 = inttoptr i64 %507 to i32*
  %509 = load i32, i32* %508, align 4
  %510 = and i64 %503, -4294967296
  %511 = zext i32 %509 to i64
  %512 = or i64 %510, %511
  %513 = add i64 %512, 7
  %514 = inttoptr i64 %513 to i16*
  %515 = load i16, i16* %514, align 2
  %516 = icmp eq i16 %515, 67
  br i1 %516, label %517, label %523

517:                                              ; preds = %506
  %518 = add i64 %503, 23
  %519 = inttoptr i64 %518 to i32*
  %520 = load i32, i32* %519, align 4
  %521 = and i32 %520, -2
  %522 = icmp eq i32 %521, 10
  br i1 %522, label %539, label %523

523:                                              ; preds = %506, %501, %517
  %524 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %493) #4
  br i1 %524, label %525, label %528, !prof !2

525:                                              ; preds = %523
  %526 = bitcast %"class.v8::Value"* %493 to %"class.v8::Boolean"*
  %527 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %526) #4
  br label %530

528:                                              ; preds = %523
  %529 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %493, %"class.v8::Isolate"* %0) #4
  br label %530

530:                                              ; preds = %525, %528
  %531 = phi i1 [ %527, %525 ], [ %529, %528 ]
  %532 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %533 = load i32, i32* %532, align 8
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %539

535:                                              ; preds = %530
  %536 = zext i1 %531 to i8
  %537 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 20
  store i8 %536, i8* %537, align 1
  %538 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %2, i64 0, i32 10
  store i8 1, i8* %538, align 1
  br label %539

539:                                              ; preds = %530, %480, %430, %380, %330, %280, %230, %180, %130, %80, %95, %195, %295, %395, %495, %535, %517, %445, %345, %245, %145, %45
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %39) #4
  br label %540

540:                                              ; preds = %23, %23, %4, %539, %30
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink18ValidityStateFlags8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::ValidityStateFlags"* nocapture readonly, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #4
  %5 = tail call zeroext i1 @_ZN5blink22toV8ValidityStateFlagsEPKNS_18ValidityStateFlagsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::ValidityStateFlags"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* undef, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22toV8ValidityStateFlagsEPKNS_18ValidityStateFlagsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::ValidityStateFlags"* nocapture readonly, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %6 to %"class.blink::V8PerIsolateData"**
  %8 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %7, align 8
  %9 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %8, i8* bitcast ([10 x i8*]* @_ZZN5blinkL31eternalV8ValidityStateFlagsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.308"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.308"*)) #4
  %10 = extractvalue { i64, %"class.v8::Eternal"* } %9, 1
  %11 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #4
  %12 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !3
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 11
  %17 = load i8, i8* %16, align 2, !range !3
  %18 = icmp eq i8 %17, 0
  %19 = select i1 %18, i64 192, i64 184
  %20 = add i64 %19, %5
  br label %23

21:                                               ; preds = %4
  %22 = add i64 %5, 192
  br label %23

23:                                               ; preds = %15, %21
  %24 = phi i64 [ %20, %15 ], [ %22, %21 ]
  %25 = inttoptr i64 %24 to %"class.v8::Value"*
  %26 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 0, i32 0
  %27 = load %"class.v8::Name"*, %"class.v8::Name"** %26, align 8
  %28 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %27, %"class.v8::Value"* %25) #4
  %29 = trunc i16 %28 to i8
  %30 = icmp ne i8 %29, 0
  %31 = icmp ugt i16 %28, 255
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %231

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 2
  %35 = load i8, i8* %34, align 1, !range !3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 12
  %39 = load i8, i8* %38, align 1, !range !3
  %40 = icmp eq i8 %39, 0
  %41 = select i1 %40, i64 192, i64 184
  %42 = add i64 %41, %5
  br label %45

43:                                               ; preds = %33
  %44 = add i64 %5, 192
  br label %45

45:                                               ; preds = %37, %43
  %46 = phi i64 [ %42, %37 ], [ %44, %43 ]
  %47 = inttoptr i64 %46 to %"class.v8::Value"*
  %48 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 1, i32 0
  %49 = load %"class.v8::Name"*, %"class.v8::Name"** %48, align 8
  %50 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %49, %"class.v8::Value"* %47) #4
  %51 = trunc i16 %50 to i8
  %52 = icmp ne i8 %51, 0
  %53 = icmp ugt i16 %50, 255
  %54 = and i1 %53, %52
  br i1 %54, label %55, label %231

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 3
  %57 = load i8, i8* %56, align 2, !range !3
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %65, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 13
  %61 = load i8, i8* %60, align 4, !range !3
  %62 = icmp eq i8 %61, 0
  %63 = select i1 %62, i64 192, i64 184
  %64 = add i64 %63, %5
  br label %67

65:                                               ; preds = %55
  %66 = add i64 %5, 192
  br label %67

67:                                               ; preds = %59, %65
  %68 = phi i64 [ %64, %59 ], [ %66, %65 ]
  %69 = inttoptr i64 %68 to %"class.v8::Value"*
  %70 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 2, i32 0
  %71 = load %"class.v8::Name"*, %"class.v8::Name"** %70, align 8
  %72 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %71, %"class.v8::Value"* %69) #4
  %73 = trunc i16 %72 to i8
  %74 = icmp ne i8 %73, 0
  %75 = icmp ugt i16 %72, 255
  %76 = and i1 %75, %74
  br i1 %76, label %77, label %231

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 4
  %79 = load i8, i8* %78, align 1, !range !3
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 14
  %83 = load i8, i8* %82, align 1, !range !3
  %84 = icmp eq i8 %83, 0
  %85 = select i1 %84, i64 192, i64 184
  %86 = add i64 %85, %5
  br label %89

87:                                               ; preds = %77
  %88 = add i64 %5, 192
  br label %89

89:                                               ; preds = %81, %87
  %90 = phi i64 [ %86, %81 ], [ %88, %87 ]
  %91 = inttoptr i64 %90 to %"class.v8::Value"*
  %92 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 3, i32 0
  %93 = load %"class.v8::Name"*, %"class.v8::Name"** %92, align 8
  %94 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %93, %"class.v8::Value"* %91) #4
  %95 = trunc i16 %94 to i8
  %96 = icmp ne i8 %95, 0
  %97 = icmp ugt i16 %94, 255
  %98 = and i1 %97, %96
  br i1 %98, label %99, label %231

99:                                               ; preds = %89
  %100 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 5
  %101 = load i8, i8* %100, align 4, !range !3
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 15
  %105 = load i8, i8* %104, align 2, !range !3
  %106 = icmp eq i8 %105, 0
  %107 = select i1 %106, i64 192, i64 184
  %108 = add i64 %107, %5
  br label %111

109:                                              ; preds = %99
  %110 = add i64 %5, 192
  br label %111

111:                                              ; preds = %103, %109
  %112 = phi i64 [ %108, %103 ], [ %110, %109 ]
  %113 = inttoptr i64 %112 to %"class.v8::Value"*
  %114 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 4, i32 0
  %115 = load %"class.v8::Name"*, %"class.v8::Name"** %114, align 8
  %116 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %115, %"class.v8::Value"* %113) #4
  %117 = trunc i16 %116 to i8
  %118 = icmp ne i8 %117, 0
  %119 = icmp ugt i16 %116, 255
  %120 = and i1 %119, %118
  br i1 %120, label %121, label %231

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 6
  %123 = load i8, i8* %122, align 1, !range !3
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %131, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 16
  %127 = load i8, i8* %126, align 1, !range !3
  %128 = icmp eq i8 %127, 0
  %129 = select i1 %128, i64 192, i64 184
  %130 = add i64 %129, %5
  br label %133

131:                                              ; preds = %121
  %132 = add i64 %5, 192
  br label %133

133:                                              ; preds = %125, %131
  %134 = phi i64 [ %130, %125 ], [ %132, %131 ]
  %135 = inttoptr i64 %134 to %"class.v8::Value"*
  %136 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 5, i32 0
  %137 = load %"class.v8::Name"*, %"class.v8::Name"** %136, align 8
  %138 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %137, %"class.v8::Value"* %135) #4
  %139 = trunc i16 %138 to i8
  %140 = icmp ne i8 %139, 0
  %141 = icmp ugt i16 %138, 255
  %142 = and i1 %141, %140
  br i1 %142, label %143, label %231

143:                                              ; preds = %133
  %144 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 7
  %145 = load i8, i8* %144, align 2, !range !3
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %153, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 17
  %149 = load i8, i8* %148, align 8, !range !3
  %150 = icmp eq i8 %149, 0
  %151 = select i1 %150, i64 192, i64 184
  %152 = add i64 %151, %5
  br label %155

153:                                              ; preds = %143
  %154 = add i64 %5, 192
  br label %155

155:                                              ; preds = %147, %153
  %156 = phi i64 [ %152, %147 ], [ %154, %153 ]
  %157 = inttoptr i64 %156 to %"class.v8::Value"*
  %158 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 6, i32 0
  %159 = load %"class.v8::Name"*, %"class.v8::Name"** %158, align 8
  %160 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %159, %"class.v8::Value"* %157) #4
  %161 = trunc i16 %160 to i8
  %162 = icmp ne i8 %161, 0
  %163 = icmp ugt i16 %160, 255
  %164 = and i1 %163, %162
  br i1 %164, label %165, label %231

165:                                              ; preds = %155
  %166 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 8
  %167 = load i8, i8* %166, align 1, !range !3
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %175, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 18
  %171 = load i8, i8* %170, align 1, !range !3
  %172 = icmp eq i8 %171, 0
  %173 = select i1 %172, i64 192, i64 184
  %174 = add i64 %173, %5
  br label %177

175:                                              ; preds = %165
  %176 = add i64 %5, 192
  br label %177

177:                                              ; preds = %169, %175
  %178 = phi i64 [ %174, %169 ], [ %176, %175 ]
  %179 = inttoptr i64 %178 to %"class.v8::Value"*
  %180 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 7, i32 0
  %181 = load %"class.v8::Name"*, %"class.v8::Name"** %180, align 8
  %182 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %181, %"class.v8::Value"* %179) #4
  %183 = trunc i16 %182 to i8
  %184 = icmp ne i8 %183, 0
  %185 = icmp ugt i16 %182, 255
  %186 = and i1 %185, %184
  br i1 %186, label %187, label %231

187:                                              ; preds = %177
  %188 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 9
  %189 = load i8, i8* %188, align 8, !range !3
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %197, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 19
  %193 = load i8, i8* %192, align 2, !range !3
  %194 = icmp eq i8 %193, 0
  %195 = select i1 %194, i64 192, i64 184
  %196 = add i64 %195, %5
  br label %199

197:                                              ; preds = %187
  %198 = add i64 %5, 192
  br label %199

199:                                              ; preds = %191, %197
  %200 = phi i64 [ %196, %191 ], [ %198, %197 ]
  %201 = inttoptr i64 %200 to %"class.v8::Value"*
  %202 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 8, i32 0
  %203 = load %"class.v8::Name"*, %"class.v8::Name"** %202, align 8
  %204 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %203, %"class.v8::Value"* %201) #4
  %205 = trunc i16 %204 to i8
  %206 = icmp ne i8 %205, 0
  %207 = icmp ugt i16 %204, 255
  %208 = and i1 %207, %206
  br i1 %208, label %209, label %231

209:                                              ; preds = %199
  %210 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 10
  %211 = load i8, i8* %210, align 1, !range !3
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %219, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %0, i64 0, i32 20
  %215 = load i8, i8* %214, align 1, !range !3
  %216 = icmp eq i8 %215, 0
  %217 = select i1 %216, i64 192, i64 184
  %218 = add i64 %217, %5
  br label %221

219:                                              ; preds = %209
  %220 = add i64 %5, 192
  br label %221

221:                                              ; preds = %213, %219
  %222 = phi i64 [ %218, %213 ], [ %220, %219 ]
  %223 = inttoptr i64 %222 to %"class.v8::Value"*
  %224 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 9, i32 0
  %225 = load %"class.v8::Name"*, %"class.v8::Name"** %224, align 8
  %226 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %225, %"class.v8::Value"* %223) #4
  %227 = trunc i16 %226 to i8
  %228 = icmp ne i8 %227, 0
  %229 = icmp ugt i16 %226, 255
  %230 = and i1 %229, %228
  br label %231

231:                                              ; preds = %45, %89, %133, %177, %199, %221, %155, %111, %67, %23
  %232 = phi i1 [ false, %23 ], [ false, %45 ], [ false, %67 ], [ false, %89 ], [ false, %111 ], [ false, %133 ], [ false, %155 ], [ false, %177 ], [ %230, %221 ], [ false, %199 ]
  ret i1 %232
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ValidityStateFlags"* @_ZN5blink17NativeValueTraitsINS_18ValidityStateFlagsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 32) #4
  %5 = bitcast i8* %4 to %"class.blink::ValidityStateFlags"*
  tail call void @_ZN5blink18ValidityStateFlagsC1Ev(%"class.blink::ValidityStateFlags"* %5) #4
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink20V8ValidityStateFlags6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18ValidityStateFlagsERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::ValidityStateFlags"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::ValidityStateFlags"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.308"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink18ValidityStateFlagsC1Ev(%"class.blink::ValidityStateFlags"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #4
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #4
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #4
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #4
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #4
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #4
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %40, i8* %41) #4
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #4
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #4
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !4

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #4
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
