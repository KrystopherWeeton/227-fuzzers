; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_paint_rendering_context_2d.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_paint_rendering_context_2d.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig" = type { %"struct.blink::bindings::IDLMemberInstaller::OperationConfig", %"class.v8::CFunction" }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::CFunction" = type { i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::CFunctionInfo" = type { %"class.v8::CTypeInfo", i32, %"class.v8::CTypeInfo"* }
%"class.v8::CTypeInfo" = type { i8, i8 }
%"class.WTF::String" = type { %class.scoped_refptr.210 }
%class.scoped_refptr.210 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.211" }
%"struct.std::__1::atomic.211" = type { %"struct.std::__1::__atomic_base.212" }
%"struct.std::__1::__atomic_base.212" = type { %"struct.std::__1::__atomic_base.213" }
%"struct.std::__1::__atomic_base.213" = type { %"struct.std::__1::__cxx_atomic_impl.214" }
%"struct.std::__1::__cxx_atomic_impl.214" = type { %"struct.std::__1::__cxx_atomic_base_impl.215" }
%"struct.std::__1::__cxx_atomic_base_impl.215" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.187" }
%"struct.std::__1::atomic.187" = type { %"struct.std::__1::__atomic_base.188" }
%"struct.std::__1::__atomic_base.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__cxx_atomic_impl.190" }
%"struct.std::__1::__cxx_atomic_impl.190" = type { %"struct.std::__1::__cxx_atomic_base_impl.191" }
%"struct.std::__1::__cxx_atomic_base_impl.191" = type { i32 }
%"class.v8::internal::CFunctionInfoImpl" = type { %"class.v8::CFunctionInfo", [8 x %"class.v8::CTypeInfo"] }
%"class.v8::internal::CFunctionInfoImpl.1845" = type <{ %"class.v8::CFunctionInfo", [7 x %"class.v8::CTypeInfo"], [2 x i8] }>
%"class.v8::internal::CFunctionInfoImpl.1847" = type { %"class.v8::CFunctionInfo", [8 x %"class.v8::CTypeInfo"] }
%"class.v8::internal::CFunctionInfoImpl.1849" = type <{ %"class.v8::CFunctionInfo", [2 x %"class.v8::CTypeInfo"], [4 x i8] }>
%"class.v8::internal::CFunctionInfoImpl.1852" = type <{ %"class.v8::CFunctionInfo", [10 x %"class.v8::CTypeInfo"], [4 x i8] }>
%"class.v8::internal::CFunctionInfoImpl.1855" = type { %"class.v8::CFunctionInfo", [4 x %"class.v8::CTypeInfo"] }
%"class.v8::internal::CFunctionInfoImpl.1857" = type <{ %"class.v8::CFunctionInfo", [6 x %"class.v8::CTypeInfo"], [4 x i8] }>
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.181" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.v8::internal::CFunctionBuilderWithFunction.1846" = type { i8* }
%"class.v8::internal::CFunctionBuilderWithFunction.1844" = type { i8* }
%"class.v8::internal::CFunctionBuilderWithFunction" = type { i8* }
%"class.base::span.182" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"* }
%"struct.v8::FastApiCallbackOptions" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::BaseRenderingContext2D" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::CanvasPath", %"class.blink::HeapVector", i32, [4 x i8], %"class.blink::IdentifiabilityStudyHelper", i8, [7 x i8] }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::CanvasPath" = type { i32 (...)**, %"class.blink::NoAllocDirectCallHost", %"class.blink::Path" }
%"class.blink::NoAllocDirectCallHost" = type { %"class.WTF::Vector.183", %"struct.v8::FastApiCallbackOptions"* }
%"class.WTF::Vector.183" = type { %"class.WTF::VectorBuffer.184" }
%"class.WTF::VectorBuffer.184" = type { %"class.WTF::VectorBufferBase.185" }
%"class.WTF::VectorBufferBase.185" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.186 }
%class.scoped_refptr.186 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.187" }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.196", %"struct.std::__1::atomic.196", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.194, %class.SkTDArray.195, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.187" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.194 = type { i8*, i32, i32 }
%class.SkTDArray.195 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.201 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.187", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.196" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.201 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.167", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.187" }>
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i8 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.204" }
%"class.WTF::Vector.204" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase.207" }
%"class.blink::MemberBase.207" = type { %"class.blink::CanvasRenderingContext2DState"* }
%"class.blink::CanvasRenderingContext2DState" = type { %"class.blink::FontSelectorClient", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.216", %"class.blink::Member.216", %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::FloatSize", double, i32, %class.sk_sp.279, %class.sk_sp.279, %class.sk_sp.279, %class.sk_sp.280, %class.sk_sp.280, double, %"class.blink::TransformationMatrix", %"class.WTF::Vector.288", double, %"class.WTF::String", %"class.blink::Font", %"class.blink::Font", i32, %"class.blink::Member.357", %"class.WTF::String", %"class.blink::Member.370", %class.sk_sp.280, i32, i32, i32, float, float, i32, i32, %"class.blink::FontSelectionValue", i32, i8, i8, i32, %"class.blink::ClipList" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.216" = type { %"class.blink::MemberBase.217" }
%"class.blink::MemberBase.217" = type { %"class.blink::CanvasStyle"* }
%"class.blink::CanvasStyle" = type { i32, i32, %"class.blink::Member.220", %"class.blink::Member.272" }
%"class.blink::Member.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::CanvasGradient"* }
%"class.blink::CanvasGradient" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.222, %"class.blink::IdentifiabilityStudyHelper" }
%class.scoped_refptr.222 = type { %"class.blink::Gradient"* }
%"class.blink::Gradient" = type { i32 (...)**, %"class.WTF::RefCounted.223", i32, i32, i32, i32, %"class.WTF::Vector.225", i8, %class.sk_sp.230, %class.sk_sp.271 }
%"class.WTF::RefCounted.223" = type { %"class.base::RefCounted.224" }
%"class.base::RefCounted.224" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.225" = type { %"class.WTF::VectorBuffer.226" }
%"class.WTF::VectorBuffer.226" = type { %"class.WTF::VectorBufferBase.227", [32 x i8] }
%"class.WTF::VectorBufferBase.227" = type { %"struct.blink::Gradient::ColorStop"*, i32, i32 }
%"struct.blink::Gradient::ColorStop" = type <{ double, %"class.blink::Color", [4 x i8] }>
%"class.blink::Color" = type { i32 }
%class.sk_sp.230 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.235, i32, %"class.absl::optional.251", %"class.std::__1::vector.256", %"class.std::__1::vector.263", %class.sk_sp.270, %class.sk_sp.232, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.231 }
%union.anon.231 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.cc::PaintImage" = type { %class.sk_sp.232, %class.sk_sp.235, %"class.gfx::Rect", i32, %class.sk_sp.240, %class.sk_sp.248, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.232, %class.scoped_refptr.249 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.240 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.241" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.233, i32, i32 }
%class.sk_sp.233 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.234, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.234 = type { %"struct.std::__1::atomic.187" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.243" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.248 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.249 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.250", [4 x i8] }>
%"class.base::RefCountedThreadSafe.250" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.235 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.236", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { i8* }
%"class.absl::optional.251" = type { %"class.absl::optional_internal::optional_data.252" }
%"class.absl::optional_internal::optional_data.252" = type { %"class.absl::optional_internal::optional_data_base.253" }
%"class.absl::optional_internal::optional_data_base.253" = type { %"class.absl::optional_internal::optional_data_dtor_base.254" }
%"class.absl::optional_internal::optional_data_dtor_base.254" = type { i8, %union.anon.255 }
%union.anon.255 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.256" = type { %"class.std::__1::__vector_base.257" }
%"class.std::__1::__vector_base.257" = type { i32*, i32*, %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { i32* }
%"class.std::__1::vector.263" = type { %"class.std::__1::__vector_base.264" }
%"class.std::__1::__vector_base.264" = type { float*, float*, %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { float* }
%class.sk_sp.270 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.167", [7 x i8] }>
%class.sk_sp.232 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.271 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::CanvasPattern"* }
%"class.blink::CanvasPattern" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.274, %"class.blink::AffineTransform", i8, [7 x i8], %"class.blink::IdentifiabilityStudyHelper" }
%class.scoped_refptr.274 = type { %"class.blink::Pattern"* }
%"class.blink::Pattern" = type { i32 (...)**, %"class.WTF::RefCounted.275", i32, %class.sk_sp.230 }
%"class.WTF::RefCounted.275" = type { %"class.base::RefCounted.276" }
%"class.base::RefCounted.276" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.277, %class.sk_sp.230, %class.sk_sp.278, %class.sk_sp.271, %class.sk_sp.279, %class.sk_sp.280, i32, float, float, i32, %union.anon.287, [4 x i8] }>
%class.sk_sp.277 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.278 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.287 = type { i32 }
%"class.blink::FloatSize" = type { float, float }
%class.sk_sp.279 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.WTF::Vector.288" = type { %"class.WTF::VectorBuffer.289" }
%"class.WTF::VectorBuffer.289" = type { %"class.WTF::VectorBufferBase.290" }
%"class.WTF::VectorBufferBase.290" = type { double*, i32, i32 }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.325 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.294, %class.scoped_refptr.302, %class.scoped_refptr.312, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.324 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.293 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.293 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.420", [4 x i8] }>
%"class.WTF::RefCounted.420" = type { %"class.base::RefCounted.421" }
%"class.base::RefCounted.421" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.294 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.300", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.295" }
%"class.WTF::Vector.295" = type { %"class.WTF::VectorBuffer.296" }
%"class.WTF::VectorBuffer.296" = type { %"class.WTF::VectorBufferBase.297" }
%"class.WTF::VectorBufferBase.297" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.300" = type { %"class.base::RefCounted.301" }
%"class.base::RefCounted.301" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.302 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.303", %"class.WTF::RefCounted.310", [4 x i8] }>
%"class.blink::FontSettings.303" = type { %"class.WTF::Vector.304" }
%"class.WTF::Vector.304" = type { %"class.WTF::VectorBuffer.305" }
%"class.WTF::VectorBuffer.305" = type { %"class.WTF::VectorBufferBase.306" }
%"class.WTF::VectorBufferBase.306" = type { %"class.blink::FontTagValuePair.307"*, i32, i32 }
%"class.blink::FontTagValuePair.307" = type { i32, float }
%"class.WTF::RefCounted.310" = type { %"class.base::RefCounted.311" }
%"class.base::RefCounted.311" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.312 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.313", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.321, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.313" = type { %"class.base::RefCounted.314" }
%"class.base::RefCounted.314" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.317 }
%union.anon.317 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.321 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.322", [4 x i8] }>
%"class.WTF::RefCounted.322" = type { %"class.base::RefCounted.323" }
%"class.base::RefCounted.323" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%union.anon.324 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.325 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.326", %"class.WTF::Vector.328", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.326" = type { %"class.base::RefCounted.327" }
%"class.base::RefCounted.327" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.328" = type { %"class.WTF::VectorBuffer.329" }
%"class.WTF::VectorBuffer.329" = type { %"class.WTF::VectorBufferBase.330", [8 x i8] }
%"class.WTF::VectorBufferBase.330" = type { %class.scoped_refptr.331*, i32, i32 }
%class.scoped_refptr.331 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.332", [4 x i8] }>
%"class.WTF::RefCounted.332" = type { %"class.base::RefCounted.333" }
%"class.base::RefCounted.333" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.343", %class.scoped_refptr.350, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.332" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.336", %"class.absl::optional.336", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.336" = type { %"class.absl::optional_internal::optional_data.337" }
%"class.absl::optional_internal::optional_data.337" = type { %"class.absl::optional_internal::optional_data_base.338" }
%"class.absl::optional_internal::optional_data_base.338" = type { %"class.absl::optional_internal::optional_data_dtor_base.339" }
%"class.absl::optional_internal::optional_data_dtor_base.339" = type { i8, %union.anon.340 }
%union.anon.340 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp.341, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.342, i8, [7 x i8] }>
%class.sk_sp.341 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.187" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.342 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp.341, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.346, %class.scoped_refptr.346 }
%class.scoped_refptr.346 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.350 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.351", [4 x i8] }>
%"class.WTF::RefCounted.351" = type { %"class.base::RefCounted.352" }
%"class.base::RefCounted.352" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.353" }
%"class.blink::PersistentBase.353" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.354" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.354" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.355 }
%class.scoped_refptr.355 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.356", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.356" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.196" }
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::CanvasFilter"* }
%"class.blink::CanvasFilter" = type { %"class.blink::ScriptWrappable", %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.359" }
%"class.blink::HeapVector.359" = type { %"class.WTF::Vector.362" }
%"class.WTF::Vector.362" = type { %"class.WTF::VectorBuffer.363" }
%"class.WTF::VectorBuffer.363" = type { %"class.WTF::VectorBufferBase.364" }
%"class.WTF::VectorBufferBase.364" = type { %"class.blink::Member.365"*, i32, i32 }
%"class.blink::Member.365" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%class.sk_sp.280 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.281, i32, %"class.absl::optional.282", i8, i32 }
%class.sk_sp.281 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.282" = type { %"class.absl::optional_internal::optional_data.283" }
%"class.absl::optional_internal::optional_data.283" = type { %"class.absl::optional_internal::optional_data_base.284" }
%"class.absl::optional_internal::optional_data_base.284" = type { %"class.absl::optional_internal::optional_data_dtor_base.285" }
%"class.absl::optional_internal::optional_data_dtor_base.285" = type { i8, %union.anon.286 }
%union.anon.286 = type { %struct.SkRect }
%"class.blink::FontSelectionValue" = type { i16 }
%"class.blink::ClipList" = type { %"class.WTF::Vector.374" }
%"class.WTF::Vector.374" = type { %"class.WTF::VectorBuffer.375" }
%"class.WTF::VectorBuffer.375" = type { %"class.WTF::VectorBufferBase.376", [96 x i8] }
%"class.WTF::VectorBufferBase.376" = type { %"struct.blink::ClipList::ClipOp"*, i32, i32 }
%"struct.blink::ClipList::ClipOp" = type { %class.SkPath, i32, [4 x i8] }
%"class.blink::IdentifiabilityStudyHelper" = type <{ %"class.blink::IdentifiableTokenBuilder", i32, i8, i8, [2 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.v8::Number" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.424" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.424" = type { %"class.v8::TracedReference.425" }
%"class.v8::TracedReference.425" = type { %"class.v8::BasicTracedReference.426" }
%"class.v8::BasicTracedReference.426" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::Value" = type { i8 }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.446", %"class.WTF::HashMap.446", %"class.WTF::HashMap.451", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.503", %"class.blink::Persistent.514", i8, i8, i8, %"class.WTF::Vector.183", %"class.std::__1::unique_ptr.516", %"class.blink::Persistent.522", %"class.blink::Persistent.526", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.428", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.440", i32, i32 }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.446" = type { %"class.WTF::HashTable.447" }
%"class.WTF::HashTable.447" = type <{ %"struct.WTF::KeyValuePair.450"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.450" = type opaque
%"class.WTF::HashMap.451" = type { %"class.WTF::HashTable.452" }
%"class.WTF::HashTable.452" = type <{ %"struct.WTF::KeyValuePair.455"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.455" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.464", %class.scoped_refptr.210 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.459", i8* }
%"class.WTF::HashMap.459" = type { %"class.WTF::HashTable.460" }
%"class.WTF::HashTable.460" = type <{ %"struct.WTF::KeyValuePair.463"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.463" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.464" = type { %"class.v8::PersistentValueMapBase.465" }
%"class.v8::PersistentValueMapBase.465" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.466", i8* }
%"class.WTF::HashMap.466" = type { %"class.WTF::HashTable.467" }
%"class.WTF::HashTable.467" = type <{ %"struct.WTF::KeyValuePair.470"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.470" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.471", %"class.WTF::String", %"class.std::__1::unique_ptr.473" }
%"class.WTF::RefCounted.471" = type { %"class.base::RefCounted.472" }
%"class.base::RefCounted.472" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.487", %"class.WTF::Vector.493", i8, i32 }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.WTF::Vector.479"* }
%"class.WTF::Vector.479" = type { %"class.WTF::VectorBuffer.480" }
%"class.WTF::VectorBuffer.480" = type { %"class.WTF::VectorBufferBase.481" }
%"class.WTF::VectorBufferBase.481" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.493" = type { %"class.WTF::VectorBuffer.494" }
%"class.WTF::VectorBuffer.494" = type { %"class.WTF::VectorBufferBase.481", [32 x i8] }
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent", %"class.WTF::HashMap.506" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.506" = type { %"class.WTF::HashTable.507" }
%"class.WTF::HashTable.507" = type <{ %"struct.WTF::KeyValuePair.510"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.510" = type opaque
%"class.blink::Persistent.514" = type { %"class.blink::PersistentBase.515" }
%"class.blink::PersistentBase.515" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent.543", %class.scoped_refptr.546, %"class.blink::Member.547", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent.543" = type { %"class.v8::Persistent.544" }
%"class.v8::Persistent.544" = type { %"class.v8::PersistentBase.545" }
%"class.v8::PersistentBase.545" = type { %"class.v8::Context"* }
%class.scoped_refptr.546 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.514" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.522" = type { %"class.blink::PersistentBase.523" }
%"class.blink::PersistentBase.523" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.526" = type { %"class.blink::PersistentBase.527" }
%"class.blink::PersistentBase.527" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.530", i64 }
%"class.blink::HeapVector.530" = type { %"class.WTF::Vector.533" }
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { %"struct.std::__1::pair.536"*, i32, i32 }
%"struct.std::__1::pair.536" = type { %"class.blink::UntracedMember", %"class.blink::Member.538" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.549", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.549" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.550" }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.605", i32, i8, [3 x i8], %"class.blink::HeapVector.607", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.615", %"class.blink::Member.617", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.626", %"class.blink::Member.632", %"class.blink::Member.634", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.554" }
%"class.blink::HeapHashMap.554" = type { %"class.WTF::HashMap.557" }
%"class.WTF::HashMap.557" = type { %"class.WTF::HashTable.558" }
%"class.WTF::HashTable.558" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.566" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.563" }
%"class.WTF::HashTable.563" = type <{ %"class.blink::WeakMember.565"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.565" = type opaque
%"class.blink::Supplementable.566" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.567" }
%"class.blink::HeapHashMap.567" = type { %"class.WTF::HashMap.570" }
%"class.WTF::HashMap.570" = type { %"class.WTF::HashTable.571" }
%"class.WTF::HashTable.571" = type <{ %"struct.WTF::KeyValuePair.573"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.573" = type { i8*, %"class.blink::Member.574" }
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.576" }
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.578, %"class.std::__1::unique_ptr.587", %"class.std::__1::unique_ptr.587", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593", %"class.blink::Member.599", i32, [4 x i8], %"class.WTF::HashSet.601", i32, i32 }
%class.scoped_refptr.578 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.579", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.581", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.586 }
%"class.WTF::RefCounted.579" = type { %"class.base::RefCounted.580" }
%"class.base::RefCounted.580" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.581" = type { %"class.absl::optional_internal::optional_data.582" }
%"class.absl::optional_internal::optional_data.582" = type { %"class.absl::optional_internal::optional_data_base.583" }
%"class.absl::optional_internal::optional_data_base.583" = type { %"class.absl::optional_internal::optional_data_dtor_base.584" }
%"class.absl::optional_internal::optional_data_dtor_base.584" = type { i8, %union.anon.585 }
%union.anon.585 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.586 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.599" = type { %"class.blink::MemberBase.600" }
%"class.blink::MemberBase.600" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.601" = type { %"class.WTF::HashTable.602" }
%"class.WTF::HashTable.602" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.607" = type { %"class.WTF::Vector.610" }
%"class.WTF::Vector.610" = type { %"class.WTF::VectorBuffer.611" }
%"class.WTF::VectorBuffer.611" = type { %"class.WTF::VectorBufferBase.612" }
%"class.WTF::VectorBufferBase.612" = type { %"class.blink::Member.613"*, i32, i32 }
%"class.blink::Member.613" = type opaque
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.617" = type { %"class.blink::MemberBase.618" }
%"class.blink::MemberBase.618" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.619", i32, i32 }
%"class.blink::HeapHashMap.619" = type { %"class.WTF::HashMap.622" }
%"class.WTF::HashMap.622" = type { %"class.WTF::HashTable.623" }
%"class.WTF::HashTable.623" = type <{ %"struct.WTF::KeyValuePair.625"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.625" = type opaque
%"class.std::__1::unique_ptr.626" = type { %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::V8UnionCanvasFilterOrString" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.357", %"class.WTF::String" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.v8::Boolean" = type { i8 }
%"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.641", %"class.blink::Member.220", %"class.blink::Member.272", %"class.WTF::String" }
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::CSSColorValue"* }
%"class.blink::CSSColorValue" = type { %"class.blink::CSSStyleValue" }
%"class.blink::CSSStyleValue" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::PaintRenderingContext2D" = type { %"class.blink::ScriptWrappable", %"class.blink::BaseRenderingContext2D.base", %"class.std::__1::unique_ptr.380", %class.sk_sp.235, %"class.blink::IntSize", %"class.blink::Member.416", i8, float }
%"class.blink::BaseRenderingContext2D.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::CanvasPath", %"class.blink::HeapVector", i32, [4 x i8], %"class.blink::IdentifiabilityStudyHelper", i8 }>
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.cc::PaintRecorder"* }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.383, %"class.std::__1::unique_ptr.384" }
%class.scoped_refptr.383 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.387", %struct.SkRect }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.absl::optional.387" = type { %"class.absl::optional_internal::optional_data.388" }
%"class.absl::optional_internal::optional_data.388" = type { %"class.absl::optional_internal::optional_data_base.389" }
%"class.absl::optional_internal::optional_data_base.389" = type { %"class.absl::optional_internal::optional_data_dtor_base.390" }
%"class.absl::optional_internal::optional_data_dtor_base.390" = type { i8, %union.anon.391 }
%union.anon.391 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.392, [384 x i64], %class.sk_sp.393, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.394", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.400" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.392 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.393 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::PaintRenderingContext2DSettings"* }
%"class.blink::PaintRenderingContext2DSettings" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::scheduler::CooperativeSchedulingManager" = type <{ i32 (...)**, i32, i8, [3 x i8], %"class.base::TimeTicks", %"class.base::TickClock"*, i8, [7 x i8] }>
%"class.blink::V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.649", %"class.blink::Member.651", %"class.blink::Member.1116", %"class.blink::Member.1165", %"class.blink::Member.1346", %"class.blink::Member.1348", %"class.blink::Member.1372", %"class.blink::Member.1405" }
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::CSSStyleImageValue"* }
%"class.blink::CSSStyleImageValue" = type { %"class.blink::CSSResourceValue", %"class.blink::CanvasImageSource" }
%"class.blink::CSSResourceValue" = type { %"class.blink::CSSStyleValue" }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::HTMLCanvasElement"* }
%"class.blink::HTMLCanvasElement" = type { %"class.blink::HTMLElement", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::PageVisibilityObserver", %"class.blink::CanvasRenderingContextHost", %"class.blink::WebSurfaceLayerBridgeObserver", %"class.blink::ImageBitmapSource", %"class.blink::OffscreenCanvasPlaceholder.base", %"class.blink::ThreadState::PrefinalizerRegistration", [3 x i8], %"class.blink::HeapHashSet.760", %"class.blink::IntSize", %"class.blink::Member.767", i8, i8, i8, %"class.blink::FloatRect", i8, i8, i8, %"class.std::__1::unique_ptr.772", %"class.std::__1::unique_ptr.807", %"class.std::__1::unique_ptr.1057", i8, i64, %class.scoped_refptr.1091 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.664" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.653", %"class.blink::Member.653" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.653", %"class.blink::Member.655", %"class.blink::Member.653", %"class.blink::Member.653", %"class.blink::Member.657" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1485", %"class.blink::Member.1487", %"class.blink::Member.655", %"class.blink::Member.1489", %"class.blink::Member.1489", %"class.blink::Member.1511", %"class.blink::Member.1513", %"class.blink::Member.1515", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1520", %"class.blink::HeapVector.1522" }
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1531", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.183", %"class.WTF::Vector.183", i8, i32, %"class.blink::Member.1539", %"class.blink::Member.599", %"class.blink::Member.1541", %"class.blink::Member.1543", %"class.blink::Member.1545", %"class.blink::Member.1547", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1549", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1555", %"class.blink::Member.1557", %"class.blink::Member.1528", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1559", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1564", %"class.blink::HeapVector.1504", %"class.blink::Member.1123", %"class.blink::Member.1566", %"class.blink::Member.1123", %"class.blink::Member.1123", %"class.blink::Member.1123", %"class.blink::UserActionElementSet", %"class.blink::Member.1575", double, double, i64, i64, %"class.blink::HeapHashSet.1577", %"class.blink::HeapHashSet.1584", i16, i8, %"class.blink::Member.1591", %"class.blink::Member.1593", %"class.blink::Member.1595", %"class.blink::Member.1597", %"class.blink::TextLinkColors", %"class.blink::Member.1599", i8, [7 x i8], %"class.blink::HeapHashMap.1601", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1123", %"class.WTF::Vector.1608", %"class.blink::Member.1613", %"class.blink::Member.1615", i8, %"class.blink::Member.1123", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1617", %"class.blink::HeapVector.1619", %"class.std::__1::unique_ptr.1627", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1633", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1646", %"class.WTF::Vector.1648", i8, i8, %"class.std::__1::unique_ptr.1653", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1504", %"class.blink::HeapVector.1659", i32, i8, %"class.blink::HeapTaskRunnerTimer.1564", %"class.blink::HeapTaskRunnerTimer.1564", %"class.blink::DocumentTiming", %"class.blink::Member.1667", i8, i32, %"class.blink::Member.1669", %"class.blink::Member.1671", %"class.blink::Member.1673", %"class.blink::HeapTaskRunnerTimer.1564", %"class.blink::Member.1675", %"class.WTF::HashMap.1677", %"class.blink::Member.1682", %"class.blink::Member.1684", %"class.blink::Member.1686", %"class.blink::Member.1688", %"class.blink::Member.1487", %"class.blink::Member.1487", %"class.blink::HeapTaskRunnerTimer.1564", %"class.blink::HeapHashSet.1690", i8, i32, %"class.blink::Member.1697", %"class.blink::Member.1699", i32, %"class.blink::Member.1701", %"class.blink::Member.1703", %"class.blink::Member.1705", %"class.std::__1::unique_ptr.1707", i64, %"class.std::__1::unique_ptr.1713", i32, i32, %"class.blink::Member.1728", %"class.blink::Member.1730", %"class.blink::Member.1732", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1734", %"class.WTF::Vector.1738", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1743", %"class.blink::Member.1750", %"class.std::__1::unique_ptr.1752", %"class.blink::Member.1758", i8, i8, %"class.WTF::String", %"class.blink::Member.1760", i8, [7 x i8], %"class.blink::HeapHashMap.1762", %"class.blink::HeapObserverSet.1769", %"class.blink::Member.1777", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1779", i32, i8, i8, %"class.blink::WeakMember.1781", %"class.blink::Member.1782" }
%"class.blink::Supplementable.1531" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1532" }
%"class.blink::HeapHashMap.1532" = type { %"class.WTF::HashMap.1535" }
%"class.WTF::HashMap.1535" = type { %"class.WTF::HashTable.1536" }
%"class.WTF::HashTable.1536" = type <{ %"struct.WTF::KeyValuePair.1538"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1538" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1543" = type { %"class.blink::MemberBase.1544" }
%"class.blink::MemberBase.1544" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1545" = type { %"class.blink::MemberBase.1546" }
%"class.blink::MemberBase.1546" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1547" = type { %"class.blink::MemberBase.1548" }
%"class.blink::MemberBase.1548" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1549" = type { %"class.std::__1::__compressed_pair.1550" }
%"class.std::__1::__compressed_pair.1550" = type { %"struct.std::__1::__compressed_pair_elem.1551" }
%"struct.std::__1::__compressed_pair_elem.1551" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1184" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1184" = type { %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"class.blink::KURL"* }
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1557" = type { %"class.blink::MemberBase.1558" }
%"class.blink::MemberBase.1558" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.1528" = type { %"class.blink::MemberBase.1529" }
%"class.blink::MemberBase.1529" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1144 }
%class.scoped_refptr.1144 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1559" = type { %"class.WTF::VectorBuffer.1560" }
%"class.WTF::VectorBuffer.1560" = type { %"class.WTF::VectorBufferBase.1561" }
%"class.WTF::VectorBufferBase.1561" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1246 }
%class.scoped_refptr.1246 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1566" = type { %"class.blink::MemberBase.1567" }
%"class.blink::MemberBase.1567" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1568" }
%"class.blink::HeapHashMap.1568" = type { %"class.WTF::HashMap.1571" }
%"class.WTF::HashMap.1571" = type { %"class.WTF::HashTable.1572" }
%"class.WTF::HashTable.1572" = type <{ %"struct.WTF::KeyValuePair.1574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1574" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1577" = type { %"class.WTF::HashSet.1580" }
%"class.WTF::HashSet.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"class.blink::WeakMember.1583"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1583" = type opaque
%"class.blink::HeapHashSet.1584" = type { %"class.WTF::HashSet.1587" }
%"class.WTF::HashSet.1587" = type { %"class.WTF::HashTable.1588" }
%"class.WTF::HashTable.1588" = type <{ %"class.blink::WeakMember.1590"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1590" = type opaque
%"class.blink::Member.1591" = type { %"class.blink::MemberBase.1592" }
%"class.blink::MemberBase.1592" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1593" = type { %"class.blink::MemberBase.1594" }
%"class.blink::MemberBase.1594" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1595" = type { %"class.blink::MemberBase.1596" }
%"class.blink::MemberBase.1596" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1597" = type { %"class.blink::MemberBase.1598" }
%"class.blink::MemberBase.1598" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1601" = type { %"class.WTF::HashMap.1604" }
%"class.WTF::HashMap.1604" = type { %"class.WTF::HashTable.1605" }
%"class.WTF::HashTable.1605" = type <{ %"struct.WTF::KeyValuePair.1607"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1607" = type opaque
%"class.WTF::Vector.1608" = type { %"class.WTF::VectorBuffer.1609" }
%"class.WTF::VectorBuffer.1609" = type { %"class.WTF::VectorBufferBase.1610" }
%"class.WTF::VectorBufferBase.1610" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1613" = type { %"class.blink::MemberBase.1614" }
%"class.blink::MemberBase.1614" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1615" = type { %"class.blink::MemberBase.1616" }
%"class.blink::MemberBase.1616" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.1123" = type { %"class.blink::MemberBase.1124" }
%"class.blink::MemberBase.1124" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1617" = type { %"class.blink::MemberBase.1618" }
%"class.blink::MemberBase.1618" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1619" = type { %"class.WTF::Vector.1622" }
%"class.WTF::Vector.1622" = type { %"class.WTF::VectorBuffer.1623" }
%"class.WTF::VectorBuffer.1623" = type { %"class.WTF::VectorBufferBase.1624" }
%"class.WTF::VectorBufferBase.1624" = type { %"class.blink::Member.1625"*, i32, i32 }
%"class.blink::Member.1625" = type opaque
%"class.std::__1::unique_ptr.1627" = type { %"class.std::__1::__compressed_pair.1628" }
%"class.std::__1::__compressed_pair.1628" = type { %"struct.std::__1::__compressed_pair_elem.1629" }
%"struct.std::__1::__compressed_pair_elem.1629" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1633" = type { %"class.WTF::HashSet.1636" }
%"class.WTF::HashSet.1636" = type { %"class.WTF::HashTable.1637" }
%"class.WTF::HashTable.1637" = type <{ %"class.blink::WeakMember.1639"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1639" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1640", i32, [4 x i8] }>
%"class.WTF::Vector.1640" = type { %"class.WTF::VectorBuffer.1641" }
%"class.WTF::VectorBuffer.1641" = type { %"class.WTF::VectorBufferBase.1642" }
%"class.WTF::VectorBufferBase.1642" = type { %"struct.std::__1::pair.1643"*, i32, i32 }
%"struct.std::__1::pair.1643" = type opaque
%"class.blink::Member.1646" = type { %"class.blink::MemberBase.1647" }
%"class.blink::MemberBase.1647" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1648" = type { %"class.WTF::VectorBuffer.1649" }
%"class.WTF::VectorBuffer.1649" = type { %"class.WTF::VectorBufferBase.1650" }
%"class.WTF::VectorBufferBase.1650" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1653" = type { %"class.std::__1::__compressed_pair.1654" }
%"class.std::__1::__compressed_pair.1654" = type { %"struct.std::__1::__compressed_pair_elem.1655" }
%"struct.std::__1::__compressed_pair_elem.1655" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1504" = type { %"class.WTF::Vector.1507" }
%"class.WTF::Vector.1507" = type { %"class.WTF::VectorBuffer.1508" }
%"class.WTF::VectorBuffer.1508" = type { %"class.WTF::VectorBufferBase.1509" }
%"class.WTF::VectorBufferBase.1509" = type { %"class.blink::Member.1123"*, i32, i32 }
%"class.blink::HeapVector.1659" = type { %"class.WTF::Vector.1662" }
%"class.WTF::Vector.1662" = type { %"class.WTF::VectorBuffer.1663" }
%"class.WTF::VectorBuffer.1663" = type { %"class.WTF::VectorBufferBase.1664" }
%"class.WTF::VectorBufferBase.1664" = type { %"class.blink::Member.1665"*, i32, i32 }
%"class.blink::Member.1665" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1487" }
%"class.blink::Member.1667" = type { %"class.blink::MemberBase.1668" }
%"class.blink::MemberBase.1668" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1669" = type { %"class.blink::MemberBase.1670" }
%"class.blink::MemberBase.1670" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1671" = type { %"class.blink::MemberBase.1672" }
%"class.blink::MemberBase.1672" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1673" = type { %"class.blink::MemberBase.1674" }
%"class.blink::MemberBase.1674" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1675" = type { %"class.blink::MemberBase.1676" }
%"class.blink::MemberBase.1676" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1677" = type { %"class.WTF::HashTable.1678" }
%"class.WTF::HashTable.1678" = type <{ %"struct.WTF::KeyValuePair.1681"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1681" = type opaque
%"class.blink::Member.1682" = type { %"class.blink::MemberBase.1683" }
%"class.blink::MemberBase.1683" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1684" = type { %"class.blink::MemberBase.1685" }
%"class.blink::MemberBase.1685" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1686" = type { %"class.blink::MemberBase.1687" }
%"class.blink::MemberBase.1687" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1688" = type { %"class.blink::MemberBase.1689" }
%"class.blink::MemberBase.1689" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1564" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1565", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.722, %"class.base::WeakPtrFactory.1177" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.722 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.723" }>
%"class.base::RefCountedThreadSafe.723" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.1177" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.687 }
%class.scoped_refptr.687 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.1565" = type { %"class.blink::MemberBase.1488" }
%"class.blink::HeapHashSet.1690" = type { %"class.WTF::HashSet.1693" }
%"class.WTF::HashSet.1693" = type { %"class.WTF::HashTable.1694" }
%"class.WTF::HashTable.1694" = type <{ %"class.blink::Member.1696"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1696" = type opaque
%"class.blink::Member.1697" = type { %"class.blink::MemberBase.1698" }
%"class.blink::MemberBase.1698" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1699" = type { %"class.blink::MemberBase.1700" }
%"class.blink::MemberBase.1700" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1701" = type { %"class.blink::MemberBase.1702" }
%"class.blink::MemberBase.1702" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1703" = type { %"class.blink::MemberBase.1704" }
%"class.blink::MemberBase.1704" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1705" = type { %"class.blink::MemberBase.1706" }
%"class.blink::MemberBase.1706" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1707" = type { %"class.std::__1::__compressed_pair.1708" }
%"class.std::__1::__compressed_pair.1708" = type { %"struct.std::__1::__compressed_pair_elem.1709" }
%"struct.std::__1::__compressed_pair_elem.1709" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1713" = type { %"class.std::__1::__compressed_pair.1714" }
%"class.std::__1::__compressed_pair.1714" = type { %"struct.std::__1::__compressed_pair_elem.1715" }
%"struct.std::__1::__compressed_pair_elem.1715" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1716", %"class.WTF::HashSet.1716", %"class.WTF::HashSet.1716", %"class.WTF::HashSet.1716", %"class.WTF::HashSet.1716", %"class.WTF::HashSet.1716", i32, [4 x i8], %"class.WTF::HashMap.1720", %"class.WTF::HashMap.1720", %"class.WTF::HashMap.1720", %"class.WTF::HashMap.1720", %"class.WTF::HashMap.1720", %"class.WTF::HashMap.1720", %"class.WTF::HashMap.1720", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.1716" = type { %"class.WTF::HashTable.1717" }
%"class.WTF::HashTable.1717" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1720" = type { %"class.WTF::HashTable.1721" }
%"class.WTF::HashTable.1721" = type <{ %"struct.WTF::KeyValuePair.1724"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1724" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1728" = type { %"class.blink::MemberBase.1729" }
%"class.blink::MemberBase.1729" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1730" = type { %"class.blink::MemberBase.1731" }
%"class.blink::MemberBase.1731" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1732" = type { %"class.blink::MemberBase.1733" }
%"class.blink::MemberBase.1733" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1734" = type { %"class.blink::MemberBase.1735" }
%"class.blink::MemberBase.1735" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type <{ %"class.blink::Member.1289", %"class.blink::Member.1289", i32, i8, [3 x i8] }>
%"class.blink::Member.1289" = type { %"class.blink::MemberBase.1290" }
%"class.blink::MemberBase.1290" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable.1291", %"class.blink::ExecutionContextClient", %"class.blink::Member.1293", %"class.blink::UntracedMember.1295", %"class.blink::HeapLinkedHashSet", %"class.WTF::Vector.1307", double, %"class.WTF::Vector.1312", i32, i8, [3 x i8] }>
%"class.blink::ActiveScriptWrappable.1291" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1292" }
%"class.blink::WeakMember.1292" = type { %"class.blink::MemberBase.600" }
%"class.blink::Member.1293" = type { %"class.blink::MemberBase.1294" }
%"class.blink::MemberBase.1294" = type { %"class.blink::IntersectionObserverDelegate"* }
%"class.blink::IntersectionObserverDelegate" = type opaque
%"class.blink::UntracedMember.1295" = type { %"class.blink::MemberBase.1296" }
%"class.blink::MemberBase.1296" = type { %"class.blink::Node"* }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1299", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1299" = type { %"class.WTF::HashTable.1300" }
%"class.WTF::HashTable.1300" = type <{ %"struct.WTF::KeyValuePair.1302"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1302" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1303", i32, i32 }
%"class.WTF::Vector.1303" = type { %"class.WTF::VectorBuffer.1304" }
%"class.WTF::VectorBuffer.1304" = type { %"class.WTF::VectorBufferBase.1305" }
%"class.WTF::VectorBufferBase.1305" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::Vector.1307" = type { %"class.WTF::VectorBuffer.1308" }
%"class.WTF::VectorBuffer.1308" = type { %"class.WTF::VectorBufferBase.1309" }
%"class.WTF::VectorBufferBase.1309" = type { float*, i32, i32 }
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314" }
%"class.WTF::VectorBufferBase.1314" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::Length" = type <{ %union.anon.1315, i8, i8, i8, i8 }>
%union.anon.1315 = type { i32 }
%"class.WTF::Vector.1738" = type { %"class.WTF::VectorBuffer.1739" }
%"class.WTF::VectorBuffer.1739" = type { %"class.WTF::VectorBufferBase.1740" }
%"class.WTF::VectorBufferBase.1740" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1743" = type { %"class.WTF::HashMap.1746" }
%"class.WTF::HashMap.1746" = type { %"class.WTF::HashTable.1747" }
%"class.WTF::HashTable.1747" = type <{ %"struct.WTF::KeyValuePair.1749"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1749" = type opaque
%"class.blink::Member.1750" = type { %"class.blink::MemberBase.1751" }
%"class.blink::MemberBase.1751" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1752" = type { %"class.std::__1::__compressed_pair.1753" }
%"class.std::__1::__compressed_pair.1753" = type { %"struct.std::__1::__compressed_pair_elem.1754" }
%"struct.std::__1::__compressed_pair_elem.1754" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1758" = type { %"class.blink::MemberBase.1759" }
%"class.blink::MemberBase.1759" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1760" = type { %"class.blink::MemberBase.1761" }
%"class.blink::MemberBase.1761" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1762" = type { %"class.WTF::HashMap.1765" }
%"class.WTF::HashMap.1765" = type { %"class.WTF::HashTable.1766" }
%"class.WTF::HashTable.1766" = type <{ %"struct.WTF::KeyValuePair.1768"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1768" = type opaque
%"class.blink::HeapObserverSet.1769" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1770" }
%"class.blink::HeapHashSet.1770" = type { %"class.WTF::HashSet.1773" }
%"class.WTF::HashSet.1773" = type { %"class.WTF::HashTable.1774" }
%"class.WTF::HashTable.1774" = type <{ %"class.blink::WeakMember.1776"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1776" = type opaque
%"class.blink::Member.1777" = type { %"class.blink::MemberBase.1778" }
%"class.blink::MemberBase.1778" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1779" = type { %"class.blink::MemberBase.1780" }
%"class.blink::MemberBase.1780" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1487", %"class.blink::HeapHashSet.1786", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1793", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1786" = type { %"class.WTF::HashSet.1789" }
%"class.WTF::HashSet.1789" = type { %"class.WTF::HashTable.1790" }
%"class.WTF::HashTable.1790" = type <{ %"class.blink::Member.1792"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1792" = type opaque
%"class.blink::HeapTaskRunnerTimer.1793" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1794", { i64, i64 } }
%"class.blink::WeakMember.1794" = type { %"class.blink::MemberBase.1780" }
%"class.blink::WeakMember.1781" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::Node"* }
%"class.blink::Member.1782" = type { %"class.blink::MemberBase.1783" }
%"class.blink::MemberBase.1783" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1489" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1493" }
%"class.blink::HeapHashMap.1493" = type { %"class.WTF::HashMap.1496" }
%"class.WTF::HashMap.1496" = type { %"class.WTF::HashTable.1497" }
%"class.WTF::HashTable.1497" = type <{ %"struct.WTF::KeyValuePair.1499"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1499" = type { %"class.WTF::AtomicString", %"class.blink::Member.1500" }
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.1123", i32, %"class.blink::HeapVector.1504" }
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1517" }
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::HeapHashMap.1519"* }
%"class.blink::HeapHashMap.1519" = type opaque
%"class.blink::Member.1520" = type { %"class.blink::MemberBase.1521" }
%"class.blink::MemberBase.1521" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1522" = type { %"class.WTF::Vector.1525" }
%"class.WTF::Vector.1525" = type { %"class.WTF::VectorBuffer.1526" }
%"class.WTF::VectorBuffer.1526" = type { %"class.WTF::VectorBufferBase.1527" }
%"class.WTF::VectorBufferBase.1527" = type { %"class.blink::Member.1528"*, i32, i32 }
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.661 }
%class.scoped_refptr.661 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.662", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.662" = type { %"class.base::RefCounted.663" }
%"class.base::RefCounted.663" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.664" = type { %"class.blink::MemberBase.665" }
%"class.blink::MemberBase.665" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.668", %"class.blink::Member.670", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.668" = type { %"class.WTF::SingleThreadedBitField.669" }
%"class.WTF::SingleThreadedBitField.669" = type { i32 }
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.672 }
%class.scoped_refptr.672 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.673", %"class.WTF::AtomicString", %"class.WTF::Vector.675" }
%"class.WTF::RefCounted.673" = type { %"class.base::RefCounted.674" }
%"class.base::RefCounted.674" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.675" = type { %"class.WTF::VectorBuffer.676" }
%"class.WTF::VectorBuffer.676" = type { %"class.WTF::VectorBufferBase.677", [32 x i8] }
%"class.WTF::VectorBufferBase.677" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.680" }
%"class.blink::WeakMember.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::PageVisibilityObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.682" }
%"class.blink::WeakMember.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::CanvasRenderingContextHost" = type { %"class.blink::CanvasResourceHost.base", %"class.blink::CanvasImageSource", %"class.blink::GarbageCollectedMixin", i8, i8, i32 }
%"class.blink::CanvasResourceHost.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.684", i32 }>
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp.688, i32, %"class.base::WeakPtr.689", %"class.base::WeakPtr.690", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.691", %"class.std::__1::unique_ptr.697", %"class.std::__1::unique_ptr.711", i8, i32, i32, i32, %"class.WTF::Vector.717", i8, i8, i64, i64, %"class.base::RepeatingCallback.728", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.749" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp.688 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%"class.base::WeakPtr.689" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.690" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.702", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%class.SkBitmap = type { %class.sk_sp.700, %class.SkPixmap, %class.sk_sp.701 }
%class.sk_sp.700 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.701 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::Vector.717" = type { %"class.WTF::VectorBuffer.718" }
%"class.WTF::VectorBuffer.718" = type { %"class.WTF::VectorBufferBase.719" }
%"class.WTF::VectorBufferBase.719" = type { %class.scoped_refptr.720*, i32, i32 }
%class.scoped_refptr.720 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", %"class.base::PlatformThreadRef", %class.scoped_refptr.722, %"struct.gpu::SyncToken", %"class.base::WeakPtr.725", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.721" }
%"class.base::RefCountedThreadSafe.721" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias.724" }
%"class.base::StrongAlias.724" = type { i64 }
%"class.base::WeakPtr.725" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.728" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.729" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.733", %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.743" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.743" = type { %"class.std::__1::__vector_base.744" }
%"class.std::__1::__vector_base.744" = type { %"struct.std::__1::pair.745"*, %"struct.std::__1::pair.745"*, %"class.std::__1::__compressed_pair.746" }
%"struct.std::__1::pair.745" = type { i32, i32 }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747", %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"struct.std::__1::pair.745"* }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.233, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.749" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WebSurfaceLayerBridgeObserver" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::OffscreenCanvasPlaceholder.base" = type <{ i32 (...)**, %class.scoped_refptr.720, %"class.base::WeakPtr.690", %class.scoped_refptr.722, %"class.util::IdType.753", i32, i32, %"class.absl::optional.755" }>
%"class.util::IdType.753" = type { %"class.base::StrongAlias.754" }
%"class.base::StrongAlias.754" = type { i32 }
%"class.absl::optional.755" = type { %"class.absl::optional_internal::optional_data.756" }
%"class.absl::optional_internal::optional_data.756" = type { %"class.absl::optional_internal::optional_data_base.757" }
%"class.absl::optional_internal::optional_data_base.757" = type { %"class.absl::optional_internal::optional_data_dtor_base.758" }
%"class.absl::optional_internal::optional_data_dtor_base.758" = type { i8, %union.anon.759 }
%union.anon.759 = type { i32 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::HeapHashSet.760" = type { %"class.WTF::HashSet.763" }
%"class.WTF::HashSet.763" = type { %"class.WTF::HashTable.764" }
%"class.WTF::HashTable.764" = type <{ %"class.blink::WeakMember.766"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.766" = type opaque
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::CanvasRenderingContext"* }
%"class.blink::CanvasRenderingContext" = type <{ %"class.blink::ScriptWrappable", %"class.base::TaskObserver", %"class.blink::ThreadState::PrefinalizerRegistration.769", [7 x i8], %"class.blink::Member.770", %"class.blink::CanvasColorParams", [4 x i8], %"class.blink::CanvasContextCreationAttributesCore", i8, [7 x i8] }>
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.769" = type { i8 }
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::CanvasRenderingContextHost"* }
%"class.blink::CanvasColorParams" = type { i32, i32, i32 }
%"class.blink::CanvasContextCreationAttributesCore" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8], %"class.WTF::String", i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.772" = type { %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.blink::Canvas2DLayerBridge"* }
%"class.blink::Canvas2DLayerBridge" = type { %"class.cc::TextureLayerClient", %class.sk_sp.232, %class.scoped_refptr.775, %"class.std::__1::unique_ptr.776", %"class.std::__1::unique_ptr.782", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::CanvasColorParams", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceHost"*, %"struct.viz::TransferableResource", %"class.std::__1::mersenne_twister_engine", %"class.std::__1::bernoulli_distribution", %"class.WTF::Deque.798", %class.sk_sp.235, %"class.base::WeakPtrFactory.803" }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%class.scoped_refptr.775 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::SharedContextRateLimiter"* }
%"class.blink::SharedContextRateLimiter" = type opaque
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.blink::Canvas2DLayerBridge::Logger"* }
%"class.blink::Canvas2DLayerBridge::Logger" = type { i32 (...)** }
%"class.blink::CanvasResourceHost" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.684", i32, [4 x i8] }>
%"struct.viz::TransferableResource" = type { %"class.util::IdType.753", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.788", i8, i32, i8, [7 x i8], %"class.absl::optional.793" }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.788" = type { %"class.absl::optional_internal::optional_data.789" }
%"class.absl::optional_internal::optional_data.789" = type { %"class.absl::optional_internal::optional_data_base.790" }
%"class.absl::optional_internal::optional_data_base.790" = type { %"class.absl::optional_internal::optional_data_dtor_base.791" }
%"class.absl::optional_internal::optional_data_dtor_base.791" = type { i8, %union.anon.792 }
%union.anon.792 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.793" = type { %"class.absl::optional_internal::optional_data.794" }
%"class.absl::optional_internal::optional_data.794" = type { %"class.absl::optional_internal::optional_data_base.795" }
%"class.absl::optional_internal::optional_data_base.795" = type { %"class.absl::optional_internal::optional_data_dtor_base.796" }
%"class.absl::optional_internal::optional_data_dtor_base.796" = type { i8, [7 x i8], %union.anon.797 }
%union.anon.797 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::mersenne_twister_engine" = type { [624 x i64], i64 }
%"class.std::__1::bernoulli_distribution" = type { %"class.std::__1::bernoulli_distribution::param_type" }
%"class.std::__1::bernoulli_distribution::param_type" = type { double }
%"class.WTF::Deque.798" = type { %"class.WTF::Deque<blink::Canvas2DLayerBridge::RasterTimer, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Canvas2DLayerBridge::RasterTimer, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.801" }
%"class.WTF::VectorBuffer.801" = type { %"class.WTF::VectorBufferBase.802" }
%"class.WTF::VectorBufferBase.802" = type { %"struct.blink::Canvas2DLayerBridge::RasterTimer"*, i32, i32 }
%"struct.blink::Canvas2DLayerBridge::RasterTimer" = type { i32, %"class.base::TimeDelta" }
%"class.base::WeakPtrFactory.803" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.blink::SurfaceLayerBridge"* }
%"class.blink::SurfaceLayerBridge" = type <{ %"class.blink::mojom::blink::EmbeddedFrameSinkClient", %"class.blink::mojom::blink::SurfaceEmbedder", %"class.blink::WebSurfaceLayerBridge", %class.scoped_refptr.810, %class.scoped_refptr.893, %"class.blink::WebSurfaceLayerBridgeObserver"*, %"class.base::RepeatingCallback.882", %"class.viz::ParentLocalSurfaceIdAllocator", %"class.mojo::Receiver", %"class.mojo::Receiver.1052", %"class.viz::FrameSinkId", i32, [4 x i8], %"class.viz::SurfaceId", %"class.viz::FrameSinkId", i8, i8, [6 x i8] }>
%"class.blink::mojom::blink::EmbeddedFrameSinkClient" = type { i32 (...)** }
%"class.blink::mojom::blink::SurfaceEmbedder" = type { i32 (...)** }
%"class.blink::WebSurfaceLayerBridge" = type { i32 (...)** }
%class.scoped_refptr.810 = type { %"class.cc::SurfaceLayer"* }
%"class.cc::SurfaceLayer" = type <{ %"class.cc::Layer", %"class.base::RepeatingCallback.882", i8, [7 x i8], %"class.viz::SurfaceRange", %"class.absl::optional.888", i8, i8, i8, i8, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.811", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.828", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.862" }>
%"class.base::RefCounted.811" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.812", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.812" = type { %"class.std::__1::__vector_base.813" }
%"class.std::__1::__vector_base.813" = type { %class.scoped_refptr.814*, %class.scoped_refptr.814*, %"class.std::__1::__compressed_pair.815" }
%class.scoped_refptr.814 = type opaque
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %class.scoped_refptr.814* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.820" }
%"class.std::__1::vector.820" = type { %"class.std::__1::__vector_base.821" }
%"class.std::__1::__vector_base.821" = type { %"struct.std::__1::pair.822"*, %"struct.std::__1::pair.822"*, %"class.std::__1::__compressed_pair.823" }
%"struct.std::__1::pair.822" = type opaque
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::pair.822"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.828" = type { %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.845", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback.850", %"class.std::__1::vector.851" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.831" }
%"class.std::__1::vector.831" = type { %"class.std::__1::__vector_base.832" }
%"class.std::__1::__vector_base.832" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.840" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.280, [20 x float], i32, [4 x i8], %"class.std::__1::vector.833", i32, [4 x i8] }>
%"class.std::__1::vector.833" = type { %"class.std::__1::__vector_base.834" }
%"class.std::__1::__vector_base.834" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.845" = type { %"class.absl::optional_internal::optional_data.846" }
%"class.absl::optional_internal::optional_data.846" = type { %"class.absl::optional_internal::optional_data_base.847" }
%"class.absl::optional_internal::optional_data_base.847" = type { %"class.absl::optional_internal::optional_data_dtor_base.848" }
%"class.absl::optional_internal::optional_data_dtor_base.848" = type { i8, %union.anon.849 }
%union.anon.849 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback.850" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { %"class.std::__1::unique_ptr.853"*, %"class.std::__1::unique_ptr.853"*, %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::unique_ptr.853" = type opaque
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::unique_ptr.853"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.865", %"class.std::__1::vector.865", %"class.std::__1::vector.872" }
%"class.std::__1::vector.865" = type { %"class.std::__1::__vector_base.866" }
%"class.std::__1::__vector_base.866" = type { i8**, i8**, %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { i8** }
%"class.std::__1::vector.872" = type { %"class.std::__1::__vector_base.873" }
%"class.std::__1::__vector_base.873" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.874" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.883", %"class.viz::SurfaceId" }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.viz::SurfaceId" }
%"class.absl::optional.888" = type { %"class.absl::optional_internal::optional_data.889" }
%"class.absl::optional_internal::optional_data.889" = type { %"class.absl::optional_internal::optional_data_base.890" }
%"class.absl::optional_internal::optional_data_base.890" = type { %"class.absl::optional_internal::optional_data_dtor_base.891" }
%"class.absl::optional_internal::optional_data_dtor_base.891" = type { i8, %union.anon.892 }
%union.anon.892 = type { i32 }
%class.scoped_refptr.893 = type { %"class.cc::SolidColorLayer"* }
%"class.cc::SolidColorLayer" = type opaque
%"class.base::RepeatingCallback.882" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.viz::ParentLocalSurfaceIdAllocator" = type <{ %"class.viz::LocalSurfaceId", i8, i8, [6 x i8] }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::EmbeddedFrameSinkClientStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.894, %"class.std::__1::unique_ptr.1002", %"class.base::WeakPtrFactory.1051" }
%class.scoped_refptr.894 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.896, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.968", %"class.absl::optional.973", %"class.absl::optional.926", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.993", i8, [7 x i8], %class.scoped_refptr.896, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.895" }>
%"class.base::RefCountedThreadSafe.895" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.909" }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.909" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.896, %"class.std::__1::unique_ptr.910", %"class.absl::optional.920", %"struct.std::__1::atomic.167", i8, i8, i8, i8, i32, i32, %"class.absl::optional.926", %"class.std::__1::unique_ptr.931", i8, i64, %class.scoped_refptr.964, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.966", %"class.base::WeakPtrFactory.967" }
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.896, i8, %"class.mojo::ScopedHandleBase.913", %class.scoped_refptr.914, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.915", i8*, %"class.base::WeakPtrFactory.916" }
%"class.mojo::ScopedHandleBase.913" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.914 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.915" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.916" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.920" = type { %"class.absl::optional_internal::optional_data.921" }
%"class.absl::optional_internal::optional_data.921" = type { %"class.absl::optional_internal::optional_data_base.922" }
%"class.absl::optional_internal::optional_data_base.922" = type { %"class.absl::optional_internal::optional_data_dtor_base.923" }
%"class.absl::optional_internal::optional_data_dtor_base.923" = type { i8, %union.anon.924 }
%union.anon.924 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.925", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.925" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.934", i8, i64, %class.scoped_refptr.935, %class.scoped_refptr.960 }
%"class.base::RepeatingCallback.934" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.935 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.936", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.938", %"class.std::__1::map.949", i8, [7 x i8] }>
%"class.base::RefCounted.936" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.937 }
%class.scoped_refptr.937 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.938" = type { %"class.std::__1::__tree.939" }
%"class.std::__1::__tree.939" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.940", %"class.std::__1::__compressed_pair.944" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.949" = type { %"class.std::__1::__tree.950" }
%"class.std::__1::__tree.950" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.951", %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%class.scoped_refptr.960 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.964 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1484", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.896, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.211", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1484" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.966" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.967" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.absl::optional.968" = type { %"class.absl::optional_internal::optional_data.969" }
%"class.absl::optional_internal::optional_data.969" = type { %"class.absl::optional_internal::optional_data_base.970" }
%"class.absl::optional_internal::optional_data_base.970" = type { %"class.absl::optional_internal::optional_data_dtor_base.971" }
%"class.absl::optional_internal::optional_data_dtor_base.971" = type { i8, %union.anon.972 }
%union.anon.972 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.973" = type { %"class.absl::optional_internal::optional_data.974" }
%"class.absl::optional_internal::optional_data.974" = type { %"class.absl::optional_internal::optional_data_base.975" }
%"class.absl::optional_internal::optional_data_base.975" = type { %"class.absl::optional_internal::optional_data_dtor_base.976" }
%"class.absl::optional_internal::optional_data_dtor_base.976" = type { i8, [7 x i8], %union.anon.977 }
%union.anon.977 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.926" = type { %"class.absl::optional_internal::optional_data.927" }
%"class.absl::optional_internal::optional_data.927" = type { %"class.absl::optional_internal::optional_data_base.928" }
%"class.absl::optional_internal::optional_data_base.928" = type { %"class.absl::optional_internal::optional_data_dtor_base.929" }
%"class.absl::optional_internal::optional_data_dtor_base.929" = type { i8, %union.anon.930 }
%union.anon.930 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.978 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.978 = type { %"class.std::__1::map.981" }
%"class.std::__1::map.981" = type { %"class.std::__1::__tree.982" }
%"class.std::__1::__tree.982" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.983", %"class.std::__1::__compressed_pair.987" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.992"*, i64 }
%"class.std::__1::unique_ptr.992" = type opaque
%"class.std::__1::map.993" = type { %"class.std::__1::__tree.994" }
%"class.std::__1::__tree.994" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.995", %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%class.scoped_refptr.896 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.1002" = type { %"class.std::__1::__compressed_pair.1003" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1005", %"class.absl::optional.1006", %"class.absl::optional.1011", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1018", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1026", %"class.std::__1::map.1037", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1046", i8, %class.scoped_refptr.896, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1047" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.1005" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1006" = type { %"class.absl::optional_internal::optional_data.1007" }
%"class.absl::optional_internal::optional_data.1007" = type { %"class.absl::optional_internal::optional_data_base.1008" }
%"class.absl::optional_internal::optional_data_base.1008" = type { %"class.absl::optional_internal::optional_data_dtor_base.1009" }
%"class.absl::optional_internal::optional_data_dtor_base.1009" = type { i8, %union.anon.1010 }
%union.anon.1010 = type { %"class.base::TimeDelta" }
%"class.absl::optional.1011" = type { %"class.absl::optional_internal::optional_data.1012" }
%"class.absl::optional_internal::optional_data.1012" = type { %"class.absl::optional_internal::optional_data_base.1013" }
%"class.absl::optional_internal::optional_data_base.1013" = type { %"class.absl::optional_internal::optional_data_dtor_base.1014" }
%"class.absl::optional_internal::optional_data_dtor_base.1014" = type { i8, %union.anon.1015 }
%union.anon.1015 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.896, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1016" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::WeakPtrFactory.1016" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1017 }
%class.scoped_refptr.1017 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1021", %class.scoped_refptr.1022 }
%"class.base::RepeatingCallback.1021" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1022 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.895", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.1026" = type { %"class.std::__1::__tree.1027" }
%"class.std::__1::__tree.1027" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1028", %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::map.1037" = type { %"class.std::__1::__tree.1038" }
%"class.std::__1::__tree.1038" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1039", %"class.std::__1::__compressed_pair.1043" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.base::OnceCallback.1046" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1047" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.1051" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::EmbeddedFrameSinkClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::EmbeddedFrameSinkClient"* }
%"class.mojo::Receiver.1052" = type { %"class.mojo::internal::BindingState.1053" }
%"class.mojo::internal::BindingState.1053" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::SurfaceEmbedderStub" }
%"class.blink::mojom::blink::SurfaceEmbedderStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::SurfaceEmbedder"* }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.blink::CanvasResourceDispatcher"* }
%"class.blink::CanvasResourceDispatcher" = type { %"class.viz::mojom::blink::CompositorFrameSinkClient", %"class.viz::ParentLocalSurfaceIdAllocator", %"class.viz::FrameSinkId", %"class.blink::IntSize", i8, i8, i8, i32, %"class.mojo::Remote", %"class.mojo::Remote.1066", %"class.mojo::Receiver.1074", i32, %"class.viz::ResourceIdGenerator", [4 x i8], %"class.WTF::HashMap.1076", %"class.viz::FrameTokenGenerator", %class.scoped_refptr.720, %"class.util::IdType.753", i32, %"struct.viz::BeginFrameAck", %"class.blink::CanvasResourceDispatcherClient"*, %"class.std::__1::unique_ptr.1081", %"class.base::WeakPtrFactory.1087" }
%"class.viz::mojom::blink::CompositorFrameSinkClient" = type { i32 (...)** }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1060" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.894, %"class.std::__1::unique_ptr.1002", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.896, i32 }>
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.viz::mojom::blink::CompositorFrameSinkProxy"* }
%"class.viz::mojom::blink::CompositorFrameSinkProxy" = type { %"class.viz::mojom::blink::CompositorFrameSink", %"class.mojo::MessageReceiverWithResponder"* }
%"class.viz::mojom::blink::CompositorFrameSink" = type { i32 (...)** }
%"class.mojo::Remote.1066" = type { %"class.mojo::internal::InterfacePtrState.1067" }
%"class.mojo::internal::InterfacePtrState.1067" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1068" }
%"class.std::__1::unique_ptr.1068" = type { %"class.std::__1::__compressed_pair.1069" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"class.blink::mojom::blink::SurfaceEmbedderProxy"* }
%"class.blink::mojom::blink::SurfaceEmbedderProxy" = type { %"class.blink::mojom::blink::SurfaceEmbedder", %"class.mojo::MessageReceiverWithResponder"* }
%"class.mojo::Receiver.1074" = type { %"class.mojo::internal::BindingState.1075" }
%"class.mojo::internal::BindingState.1075" = type { %"class.mojo::internal::BindingStateBase", %"class.viz::mojom::blink::CompositorFrameSinkClientStub" }
%"class.viz::mojom::blink::CompositorFrameSinkClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.viz::mojom::blink::CompositorFrameSinkClient"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.WTF::HashMap.1076" = type { %"class.WTF::HashTable.1077" }
%"class.WTF::HashTable.1077" = type <{ %"struct.WTF::KeyValuePair.1080"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1080" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"struct.viz::BeginFrameAck" = type <{ %"struct.viz::BeginFrameId", i64, i8, [7 x i8] }>
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.blink::CanvasResourceDispatcherClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1087" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.1091 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1092", i8, %class.scoped_refptr.1094, %"class.blink::WeakPersistent.1108", i32, i8, %"class.std::__1::unique_ptr.1110" }
%"class.WTF::ThreadSafeRefCounted.1092" = type { %"class.base::RefCountedThreadSafe.1093" }
%"class.base::RefCountedThreadSafe.1093" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1094 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1095", i64, %"class.WTF::Vector.1097", %"class.WTF::Vector.1102" }
%"class.WTF::RefCounted.1095" = type { %"class.base::RefCounted.1096" }
%"class.base::RefCounted.1096" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1097" = type { %"class.WTF::VectorBuffer.1098" }
%"class.WTF::VectorBuffer.1098" = type { %"class.WTF::VectorBufferBase.1099" }
%"class.WTF::VectorBufferBase.1099" = type { i8*, i32, i32 }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1104" }
%"class.WTF::VectorBufferBase.1104" = type { %"class.std::__1::unique_ptr.1105"*, i32, i32 }
%"class.std::__1::unique_ptr.1105" = type opaque
%"class.blink::WeakPersistent.1108" = type { %"class.blink::PersistentBase.1109" }
%"class.blink::PersistentBase.1109" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr.354" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.1110" = type { %"class.std::__1::__compressed_pair.1111" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.1112" }
%"struct.std::__1::__compressed_pair_elem.1112" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::HTMLImageElement"* }
%"class.blink::HTMLImageElement" = type { %"class.blink::HTMLElement", %"class.blink::ImageElementBase", %"class.blink::ActiveScriptWrappable", %"class.blink::FormAssociated", %"class.blink::Member.1118", %"class.blink::Member.1153", %"class.blink::Member.1155", %"class.WTF::AtomicString", float, %"class.blink::Member.1157", i8, i8, i32, %"class.std::__1::unique_ptr.1159" }
%"class.blink::ImageElementBase" = type { %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", i32, i32 }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.1118" = type { %"class.blink::MemberBase.1119" }
%"class.blink::MemberBase.1119" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1122", %"class.blink::Member.1123", %"class.blink::Member.1125", %"class.blink::Member.1125", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr.1137", %"class.std::__1::unique_ptr.1138", %"class.std::__1::unique_ptr.1138", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.1145" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.1122" = type { i8 }
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.1129", float, i8, %class.scoped_refptr.1131, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.1131 = type { %"class.blink::Image"* }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1132" }
%"class.WTF::HashMap.1132" = type { %"class.WTF::HashTable.1133" }
%"class.WTF::HashTable.1133" = type <{ %"struct.WTF::KeyValuePair.1136"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1136" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr.1137" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.1138" = type { %"class.std::__1::__compressed_pair.1139" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.1140" }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::HeapVector.1145" = type { %"class.WTF::Vector.1148" }
%"class.WTF::Vector.1148" = type { %"class.WTF::VectorBuffer.1149" }
%"class.WTF::VectorBuffer.1149" = type { %"class.WTF::VectorBufferBase.1150" }
%"class.WTF::VectorBufferBase.1150" = type { %"class.blink::Member.1151"*, i32, i32 }
%"class.blink::Member.1151" = type opaque
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::HTMLImageElement::ViewportChangeListener"* }
%"class.blink::HTMLImageElement::ViewportChangeListener" = type opaque
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.std::__1::unique_ptr.1159" = type { %"class.std::__1::__compressed_pair.1160" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* }
%"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics" = type { i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::Member.1165" = type { %"class.blink::MemberBase.1166" }
%"class.blink::MemberBase.1166" = type { %"class.blink::HTMLVideoElement"* }
%"class.blink::HTMLVideoElement" = type { %"class.blink::HTMLMediaElement", %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", %"class.blink::Supplementable.1330", %"class.blink::Member.1118", %"class.blink::Member.1338", %"class.blink::Member.1340", %"class.blink::Member.1342", %"class.blink::Member.1344", %"class.WTF::AtomicString", i8, %"class.std::__1::unique_ptr.684" }
%"class.blink::HTMLMediaElement" = type { %"class.blink::HTMLElement", %"class.blink::Supplementable.1167", %"class.blink::ActiveScriptWrappable.1175", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.media::mojom::blink::MediaPlayer", %"class.blink::WebMediaPlayerClient", %"class.blink::ThreadState::PrefinalizerRegistration.1176", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1180", %"class.blink::Member.1182", double, double, i32, i32, i32, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::Member.1190", %"class.blink::Member.1192", double, double, %"class.absl::optional.1194", double, double, double, i32, %"class.blink::Member.1157", %"class.blink::Member.653", i32, %"class.blink::HeapTaskRunnerTimer", %"class.std::__1::unique_ptr.1203", %"class.cc::Layer"*, %class.scoped_refptr.1209, %"class.blink::Member.1210", double, i8, double, i32, i16, %"class.absl::optional.1212", i8, %"class.base::TimeTicks", %"class.blink::Member.1217", %"class.blink::Member.1219", %"class.blink::Member.1221", %"class.blink::HeapVector.1223", %"class.blink::Member.1231", %"class.blink::HeapVector.1233", %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::HeapVector.1233", %"class.blink::HeapVector.1233", i32, %"class.blink::Member.1251", %"class.blink::HTMLMediaElement::AudioSourceProviderImpl", %"class.blink::Member.1282", %"class.blink::WebRemotePlaybackClient"*, %"class.blink::Member.1284", %"class.blink::Member.1287", %"class.blink::Member.1289", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::Member.1327" }
%"class.blink::Supplementable.1167" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1168" }
%"class.blink::HeapHashMap.1168" = type { %"class.WTF::HashMap.1171" }
%"class.WTF::HashMap.1171" = type { %"class.WTF::HashTable.1172" }
%"class.WTF::HashTable.1172" = type <{ %"struct.WTF::KeyValuePair.1174"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1174" = type opaque
%"class.blink::ActiveScriptWrappable.1175" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.media::mojom::blink::MediaPlayer" = type { i32 (...)** }
%"class.blink::WebMediaPlayerClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.1176" = type { i8 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::TimeRanges"* }
%"class.blink::TimeRanges" = type opaque
%"class.blink::Member.1182" = type { %"class.blink::MemberBase.1183" }
%"class.blink::MemberBase.1183" = type { %"class.blink::EventQueue"* }
%"class.blink::EventQueue" = type opaque
%"class.blink::Member.1190" = type { %"class.blink::MemberBase.1191" }
%"class.blink::MemberBase.1191" = type { %"class.blink::MediaStreamDescriptor"* }
%"class.blink::MediaStreamDescriptor" = type opaque
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::MediaError"* }
%"class.blink::MediaError" = type opaque
%"class.absl::optional.1194" = type { %"class.absl::optional_internal::optional_data.1195" }
%"class.absl::optional_internal::optional_data.1195" = type { %"class.absl::optional_internal::optional_data_base.1196" }
%"class.absl::optional_internal::optional_data_base.1196" = type { %"class.absl::optional_internal::optional_data_dtor_base.1197" }
%"class.absl::optional_internal::optional_data_dtor_base.1197" = type { i8, %union.anon.1198 }
%union.anon.1198 = type { %"class.base::ElapsedTimer" }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1178", { i64, i64 } }
%"class.blink::WeakMember.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::HTMLMediaElement"* }
%"class.std::__1::unique_ptr.1203" = type { %"class.std::__1::__compressed_pair.1204" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.1205" }
%"struct.std::__1::__compressed_pair_elem.1205" = type { %"class.blink::WebMediaPlayer"* }
%"class.blink::WebMediaPlayer" = type { i32 (...)** }
%class.scoped_refptr.1209 = type { %"class.blink::MediaSourceAttachment"* }
%"class.blink::MediaSourceAttachment" = type opaque
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::MediaSourceTracer"* }
%"class.blink::MediaSourceTracer" = type opaque
%"class.absl::optional.1212" = type { %"class.absl::optional_internal::optional_data.1213" }
%"class.absl::optional_internal::optional_data.1213" = type { %"class.absl::optional_internal::optional_data_base.1214" }
%"class.absl::optional_internal::optional_data_base.1214" = type { %"class.absl::optional_internal::optional_data_dtor_base.1215" }
%"class.absl::optional_internal::optional_data_dtor_base.1215" = type { i8, %union.anon.1216 }
%union.anon.1216 = type { i8 }
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::AudioTrackList"* }
%"class.blink::AudioTrackList" = type opaque
%"class.blink::Member.1219" = type { %"class.blink::MemberBase.1220" }
%"class.blink::MemberBase.1220" = type { %"class.blink::VideoTrackList"* }
%"class.blink::VideoTrackList" = type opaque
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::TextTrackList"* }
%"class.blink::TextTrackList" = type opaque
%"class.blink::HeapVector.1223" = type { %"class.WTF::Vector.1226" }
%"class.WTF::Vector.1226" = type { %"class.WTF::VectorBuffer.1227" }
%"class.WTF::VectorBuffer.1227" = type { %"class.WTF::VectorBufferBase.1228" }
%"class.WTF::VectorBufferBase.1228" = type { %"class.blink::Member.1229"*, i32, i32 }
%"class.blink::Member.1229" = type opaque
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::CueTimeline"* }
%"class.blink::CueTimeline" = type opaque
%"class.blink::HeapVector.1233" = type { %"class.WTF::Vector.1236" }
%"class.WTF::Vector.1236" = type { %"class.WTF::VectorBuffer.1237" }
%"class.WTF::VectorBuffer.1237" = type { %"class.WTF::VectorBufferBase.1238" }
%"class.WTF::VectorBufferBase.1238" = type { %"class.blink::Member.1239"*, i32, i32 }
%"class.blink::Member.1239" = type { %"class.blink::MemberBase.1240" }
%"class.blink::MemberBase.1240" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.1243", i32, %"class.blink::Member.1244", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.424", %"class.blink::SelfKeepAlive.1247" }
%"class.blink::ThreadState::PrefinalizerRegistration.1243" = type { i8 }
%"class.blink::Member.1244" = type { %"class.blink::MemberBase.1245" }
%"class.blink::MemberBase.1245" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.1244", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.424", %class.scoped_refptr.1246 }
%"class.blink::SelfKeepAlive.1247" = type { %"class.blink::Persistent.1248" }
%"class.blink::Persistent.1248" = type { %"class.blink::PersistentBase.1249" }
%"class.blink::PersistentBase.1249" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::AudioSourceProviderClient"* }
%"class.blink::AudioSourceProviderClient" = type opaque
%"class.blink::HTMLMediaElement::AudioSourceProviderImpl" = type { %"class.blink::AudioSourceProvider", %class.scoped_refptr.1253, %"class.blink::Member.1278", %"class.WTF::Mutex" }
%"class.blink::AudioSourceProvider" = type { i32 (...)** }
%class.scoped_refptr.1253 = type { %"class.blink::WebAudioSourceProviderImpl"* }
%"class.blink::WebAudioSourceProviderImpl" = type { %"class.blink::WebAudioSourceProvider", %"class.media::SwitchableAudioRendererSink.base", double, i32, %"class.base::RepeatingCallback", %"class.blink::WebAudioSourceProviderClient"*, %"class.base::Lock", %class.scoped_refptr.1255, %"class.std::__1::unique_ptr.1256", %"class.std::__1::unique_ptr.1271", %"class.media::MediaLog"*, %"class.base::OnceCallback", %"class.base::WeakPtrFactory.1277" }
%"class.blink::WebAudioSourceProvider" = type { i32 (...)** }
%"class.media::SwitchableAudioRendererSink.base" = type { %"class.media::RestartableAudioRendererSink.base" }
%"class.media::RestartableAudioRendererSink.base" = type { %"class.media::AudioRendererSink.base" }
%"class.media::AudioRendererSink.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1254" }>
%"class.base::RefCountedThreadSafe.1254" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WebAudioSourceProviderClient" = type { i32 (...)** }
%class.scoped_refptr.1255 = type { %"class.media::SwitchableAudioRendererSink"* }
%"class.media::SwitchableAudioRendererSink" = type { %"class.media::RestartableAudioRendererSink.base", [4 x i8] }
%"class.std::__1::unique_ptr.1256" = type { %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.1258" }
%"struct.std::__1::__compressed_pair_elem.1258" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.1259", i8, i64, i32, %"class.std::__1::vector.1261", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.1259" = type { %"class.std::__1::__compressed_pair.1260" }
%"class.std::__1::__compressed_pair.1260" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"class.std::__1::vector.1261" = type { %"class.std::__1::__vector_base.1262" }
%"class.std::__1::__vector_base.1262" = type { float**, float**, %"class.std::__1::__compressed_pair.1263" }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.1264" }
%"struct.std::__1::__compressed_pair_elem.1264" = type { float** }
%"class.std::__1::unique_ptr.1271" = type { %"class.std::__1::__compressed_pair.1272" }
%"class.std::__1::__compressed_pair.1272" = type { %"struct.std::__1::__compressed_pair_elem.1273" }
%"struct.std::__1::__compressed_pair_elem.1273" = type { %"class.blink::WebAudioSourceProviderImpl::TeeFilter"* }
%"class.blink::WebAudioSourceProviderImpl::TeeFilter" = type opaque
%"class.media::MediaLog" = type opaque
%"class.base::WeakPtrFactory.1277" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1278" = type { %"class.blink::MemberBase.1279" }
%"class.blink::MemberBase.1279" = type { %"class.blink::HTMLMediaElement::AudioClientImpl"* }
%"class.blink::HTMLMediaElement::AudioClientImpl" = type { %"class.blink::WebAudioSourceProviderClient", %"class.blink::Member.1251" }
%"class.blink::Member.1282" = type { %"class.blink::MemberBase.1283" }
%"class.blink::MemberBase.1283" = type { %"class.blink::AutoplayPolicy"* }
%"class.blink::AutoplayPolicy" = type opaque
%"class.blink::WebRemotePlaybackClient" = type opaque
%"class.blink::Member.1284" = type { %"class.blink::MemberBase.1285" }
%"class.blink::MemberBase.1285" = type { %"class.blink::MediaControls"* }
%"class.blink::MediaControls" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1286" }
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.1179" }
%"class.blink::Member.1287" = type { %"class.blink::MemberBase.1288" }
%"class.blink::MemberBase.1288" = type { %"class.blink::HTMLMediaElementControlsList"* }
%"class.blink::HTMLMediaElementControlsList" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::DisallowNewWrapper.1322"* }
%"class.blink::DisallowNewWrapper.1322" = type { %"class.blink::HeapMojoAssociatedRemoteSet" }
%"class.blink::HeapMojoAssociatedRemoteSet" = type { %"class.blink::Member.1325" }
%"class.blink::Member.1325" = type { %"class.blink::MemberBase.1326" }
%"class.blink::MemberBase.1326" = type { %"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1327" = type { %"class.blink::MemberBase.1328" }
%"class.blink::MemberBase.1328" = type { %"class.blink::DisallowNewWrapper.1329"* }
%"class.blink::DisallowNewWrapper.1329" = type opaque
%"class.blink::Supplementable.1330" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1331" }
%"class.blink::HeapHashMap.1331" = type { %"class.WTF::HashMap.1334" }
%"class.WTF::HashMap.1334" = type { %"class.WTF::HashTable.1335" }
%"class.WTF::HashTable.1335" = type <{ %"struct.WTF::KeyValuePair.1337"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1337" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::MediaCustomControlsFullscreenDetector"* }
%"class.blink::MediaCustomControlsFullscreenDetector" = type opaque
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::VideoWakeLock"* }
%"class.blink::VideoWakeLock" = type opaque
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::MediaRemotingInterstitial"* }
%"class.blink::MediaRemotingInterstitial" = type opaque
%"class.blink::Member.1344" = type { %"class.blink::MemberBase.1345" }
%"class.blink::MemberBase.1345" = type { %"class.blink::PictureInPictureInterstitial"* }
%"class.blink::PictureInPictureInterstitial" = type opaque
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::ImageBitmap"* }
%"class.blink::ImageBitmap" = type { %"class.blink::ScriptWrappable", %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", %class.scoped_refptr.1091, i8, i32 }
%"class.blink::Member.1348" = type { %"class.blink::MemberBase.1349" }
%"class.blink::MemberBase.1349" = type { %"class.blink::OffscreenCanvas"* }
%"class.blink::OffscreenCanvas" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ImageBitmapSource", %"class.blink::CanvasRenderingContextHost", %"class.blink::CanvasResourceDispatcherClient", %"class.blink::ThreadState::PrefinalizerRegistration.1371", [3 x i8], i32, %"class.blink::Member.767", %"class.blink::WeakMember.1292", i32, %"class.blink::IntSize", i8, i8, i8, i8, %"class.std::__1::unique_ptr.1057", %struct.SkIRect, i8, i8, i8, i8, i32, i32, [4 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1364" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1352" }
%"class.blink::HeapVector.1352" = type { %"class.WTF::Vector.1355" }
%"class.WTF::Vector.1355" = type { %"class.WTF::VectorBuffer.1356" }
%"class.WTF::VectorBuffer.1356" = type { %"class.WTF::VectorBufferBase.1357", [32 x i8] }
%"class.WTF::VectorBufferBase.1357" = type { %"struct.std::__1::pair.1358"*, i32, i32 }
%"struct.std::__1::pair.1358" = type { %"class.WTF::AtomicString", %"class.blink::Member.1359" }
%"class.blink::Member.1359" = type { %"class.blink::MemberBase.1360" }
%"class.blink::MemberBase.1360" = type { %"class.blink::HeapVector.1361"* }
%"class.blink::HeapVector.1361" = type opaque
%"class.std::__1::unique_ptr.1364" = type { %"class.std::__1::__compressed_pair.1365" }
%"class.std::__1::__compressed_pair.1365" = type { %"struct.std::__1::__compressed_pair_elem.1366" }
%"struct.std::__1::__compressed_pair_elem.1366" = type { %"class.WTF::Vector.1367"* }
%"class.WTF::Vector.1367" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.1371" = type { i8 }
%"class.blink::Member.1372" = type { %"class.blink::MemberBase.1373" }
%"class.blink::MemberBase.1373" = type { %"class.blink::SVGImageElement"* }
%"class.blink::SVGImageElement" = type { %"class.blink::SVGGraphicsElement", %"class.blink::ImageElementBase", %"class.blink::SVGURIReference", %"class.blink::ActiveScriptWrappable.1398", i8, %"class.blink::Member.1399", %"class.blink::Member.1399", %"class.blink::Member.1399", %"class.blink::Member.1399", %"class.blink::Member.1401", %"class.blink::Member.1403" }
%"class.blink::SVGGraphicsElement" = type { %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.1394" }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet.1374", %"class.blink::HeapHashMap.1381", %"class.blink::Member.1388", %"class.blink::Member.1390" }
%"class.blink::HeapHashSet.1374" = type { %"class.WTF::HashSet.1377" }
%"class.WTF::HashSet.1377" = type { %"class.WTF::HashTable.1378" }
%"class.WTF::HashTable.1378" = type <{ %"class.blink::WeakMember.1380"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1380" = type opaque
%"class.blink::HeapHashMap.1381" = type { %"class.WTF::HashMap.1384" }
%"class.WTF::HashMap.1384" = type { %"class.WTF::HashTable.1385" }
%"class.WTF::HashTable.1385" = type <{ %"struct.WTF::KeyValuePair.1387"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1387" = type opaque
%"class.blink::Member.1388" = type { %"class.blink::MemberBase.1389" }
%"class.blink::MemberBase.1389" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::SVGTests" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1392", %"class.blink::Member.1392" }
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::SVGStaticStringList"* }
%"class.blink::SVGStaticStringList" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::SVGAnimatedTransformList"* }
%"class.blink::SVGAnimatedTransformList" = type opaque
%"class.blink::SVGURIReference" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1396" }
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::SVGAnimatedHref"* }
%"class.blink::SVGAnimatedHref" = type opaque
%"class.blink::ActiveScriptWrappable.1398" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::SVGAnimatedLength"* }
%"class.blink::SVGAnimatedLength" = type opaque
%"class.blink::Member.1401" = type { %"class.blink::MemberBase.1402" }
%"class.blink::MemberBase.1402" = type { %"class.blink::SVGAnimatedPreserveAspectRatio"* }
%"class.blink::SVGAnimatedPreserveAspectRatio" = type opaque
%"class.blink::Member.1403" = type { %"class.blink::MemberBase.1404" }
%"class.blink::MemberBase.1404" = type { %"class.blink::SVGImageLoader"* }
%"class.blink::SVGImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::VideoFrame"* }
%"class.blink::VideoFrame" = type { %"class.blink::ScriptWrappable", %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", %class.scoped_refptr.1407, %"class.blink::HeapVector.1414" }
%class.scoped_refptr.1407 = type { %"class.blink::VideoFrameHandle"* }
%"class.blink::VideoFrameHandle" = type { %"class.WTF::ThreadSafeRefCounted.1408", i8, %"class.WTF::Mutex", %class.sk_sp.232, %class.scoped_refptr.1410, %class.scoped_refptr.1411 }
%"class.WTF::ThreadSafeRefCounted.1408" = type { %"class.base::RefCountedThreadSafe.1409" }
%"class.base::RefCountedThreadSafe.1409" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1410 = type { %"class.media::VideoFrame"* }
%"class.media::VideoFrame" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.1422", %"class.media::VideoFrameLayout", %class.scoped_refptr.1410, i32, %"class.gfx::Rect", %"class.gfx::Size", [4 x i8*], [4 x %"struct.gpu::MailboxHolder"], %"class.base::OnceCallback.1430", %"class.base::UnsafeSharedMemoryRegion"*, %"class.base::UnsafeSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.std::__1::unique_ptr.1431", %class.scoped_refptr.1437, %"class.std::__1::vector.1438", %"class.base::TimeDelta", %"class.base::Lock", %"struct.gpu::SyncToken", %"struct.media::VideoFrameMetadata", i32, %"class.gfx::ColorSpace", %"class.absl::optional.788", [4 x i8], %"class.absl::optional.793", %"class.std::__1::unique_ptr.1480" }
%"class.base::RefCountedThreadSafe.1422" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.media::VideoFrameLayout" = type { i32, %"class.gfx::Size", %"class.std::__1::vector.1423", i8, i64, i64 }
%"class.std::__1::vector.1423" = type { %"class.std::__1::__vector_base.1424" }
%"class.std::__1::__vector_base.1424" = type { %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"*, %"class.std::__1::__compressed_pair.1425" }
%"struct.media::ColorPlaneLayout" = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair.1425" = type { %"struct.std::__1::__compressed_pair_elem.1426" }
%"struct.std::__1::__compressed_pair_elem.1426" = type { %"struct.media::ColorPlaneLayout"* }
%"class.base::OnceCallback.1430" = type { %"class.base::internal::CallbackBase" }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1431" = type { %"class.std::__1::__compressed_pair.1432" }
%"class.std::__1::__compressed_pair.1432" = type { %"struct.std::__1::__compressed_pair_elem.1433" }
%"struct.std::__1::__compressed_pair_elem.1433" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type { i32 (...)** }
%class.scoped_refptr.1437 = type { %"class.media::VideoFrame::DmabufHolder"* }
%"class.media::VideoFrame::DmabufHolder" = type opaque
%"class.std::__1::vector.1438" = type { %"class.std::__1::__vector_base.1439" }
%"class.std::__1::__vector_base.1439" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.1440" }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.base::OnceCallback"* }
%"struct.media::VideoFrameMetadata" = type { i8, %"class.absl::optional.1445", %"class.absl::optional.1445", %"class.absl::optional.1450", %"class.absl::optional.1455", %"class.absl::optional.1460", i8, %"class.absl::optional.1006", %"class.absl::optional.1465", i8, %"class.absl::optional.1445", i8, [3 x i8], %"class.absl::optional.1470", i8, i8, i8, i8, i32, %"class.absl::optional.1475", i8, %"class.absl::optional.1465", %"class.absl::optional.1465", %"class.absl::optional.1465", %"class.absl::optional.1465", %"class.absl::optional.1465", %"class.absl::optional.1445", %"class.absl::optional.1445", %"class.absl::optional.1006", %"class.absl::optional.1465", %"class.absl::optional.1445", %"class.absl::optional.1006", %"class.absl::optional.1450" }
%"class.absl::optional.1455" = type { %"class.absl::optional_internal::optional_data.1456" }
%"class.absl::optional_internal::optional_data.1456" = type { %"class.absl::optional_internal::optional_data_base.1457" }
%"class.absl::optional_internal::optional_data_base.1457" = type { %"class.absl::optional_internal::optional_data_dtor_base.1458" }
%"class.absl::optional_internal::optional_data_dtor_base.1458" = type { i8, %union.anon.1459 }
%union.anon.1459 = type { %"class.gfx::Rect" }
%"class.absl::optional.1460" = type { %"class.absl::optional_internal::optional_data.1461" }
%"class.absl::optional_internal::optional_data.1461" = type { %"class.absl::optional_internal::optional_data_base.1462" }
%"class.absl::optional_internal::optional_data_base.1462" = type { %"class.absl::optional_internal::optional_data_dtor_base.1463" }
%"class.absl::optional_internal::optional_data_dtor_base.1463" = type { i8, %union.anon.1464 }
%union.anon.1464 = type { i32 }
%"class.absl::optional.1470" = type { %"class.absl::optional_internal::optional_data.1471" }
%"class.absl::optional_internal::optional_data.1471" = type { %"class.absl::optional_internal::optional_data_base.1472" }
%"class.absl::optional_internal::optional_data_base.1472" = type { %"class.absl::optional_internal::optional_data_dtor_base.1473" }
%"class.absl::optional_internal::optional_data_dtor_base.1473" = type { i8, [3 x i8], %union.anon.1474 }
%union.anon.1474 = type { %"struct.media::VideoTransformation" }
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1475" = type { %"class.absl::optional_internal::optional_data.1476" }
%"class.absl::optional_internal::optional_data.1476" = type { %"class.absl::optional_internal::optional_data_base.1477" }
%"class.absl::optional_internal::optional_data_base.1477" = type { %"class.absl::optional_internal::optional_data_dtor_base.1478" }
%"class.absl::optional_internal::optional_data_dtor_base.1478" = type { i8, %union.anon.1479 }
%union.anon.1479 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.1465" = type { %"class.absl::optional_internal::optional_data.1466" }
%"class.absl::optional_internal::optional_data.1466" = type { %"class.absl::optional_internal::optional_data_base.1467" }
%"class.absl::optional_internal::optional_data_base.1467" = type { %"class.absl::optional_internal::optional_data_dtor_base.1468" }
%"class.absl::optional_internal::optional_data_dtor_base.1468" = type { i8, %union.anon.1469 }
%union.anon.1469 = type { double }
%"class.absl::optional.1445" = type { %"class.absl::optional_internal::optional_data.1446" }
%"class.absl::optional_internal::optional_data.1446" = type { %"class.absl::optional_internal::optional_data_base.1447" }
%"class.absl::optional_internal::optional_data_base.1447" = type { %"class.absl::optional_internal::optional_data_dtor_base.1448" }
%"class.absl::optional_internal::optional_data_dtor_base.1448" = type { i8, %union.anon.1449 }
%union.anon.1449 = type { %"class.base::TimeTicks" }
%"class.absl::optional.1450" = type { %"class.absl::optional_internal::optional_data.1451" }
%"class.absl::optional_internal::optional_data.1451" = type { %"class.absl::optional_internal::optional_data_base.1452" }
%"class.absl::optional_internal::optional_data_base.1452" = type { %"class.absl::optional_internal::optional_data_dtor_base.1453" }
%"class.absl::optional_internal::optional_data_dtor_base.1453" = type { i8, %union.anon.1454 }
%union.anon.1454 = type { i32 }
%"class.std::__1::unique_ptr.1480" = type { %"class.std::__1::__compressed_pair.1481" }
%"class.std::__1::__compressed_pair.1481" = type { %"struct.std::__1::__compressed_pair_elem.1482" }
%"struct.std::__1::__compressed_pair_elem.1482" = type { i8* }
%class.scoped_refptr.1411 = type { %"class.blink::WebCodecsLogger::VideoFrameCloseAuditor"* }
%"class.blink::WebCodecsLogger::VideoFrameCloseAuditor" = type <{ %"class.WTF::ThreadSafeRefCounted.1412", i8, [3 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1412" = type { %"class.base::RefCountedThreadSafe.1413" }
%"class.base::RefCountedThreadSafe.1413" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::HeapVector.1414" = type { %"class.WTF::Vector.1417" }
%"class.WTF::Vector.1417" = type { %"class.WTF::VectorBuffer.1418" }
%"class.WTF::VectorBuffer.1418" = type { %"class.WTF::VectorBufferBase.1419" }
%"class.WTF::VectorBufferBase.1419" = type { %"class.blink::Member.1420"*, i32, i32 }
%"class.blink::Member.1420" = type opaque
%"class.blink::DOMMatrix" = type { %"class.blink::DOMMatrixReadOnly.base", [7 x i8] }
%"class.blink::DOMMatrixReadOnly.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::TransformationMatrix", i8 }>
%"class.blink::Path2D" = type { %"class.blink::ScriptWrappable", %"class.blink::CanvasPath" }
%"class.blink::DOMMatrixInit" = type { %"class.blink::DOMMatrix2DInit", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, double, double, double, double, double, double, double, double, double, double }
%"class.blink::DOMMatrix2DInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, double, double, double, double, double, double, double, double, double, double, double, double }
%"class.v8::Isolate::DisallowJavascriptExecutionScope" = type <{ i32, [4 x i8], %"class.v8::Isolate"*, i8, i8, i8, [5 x i8] }>
%"class.blink::NoAllocDirectCallExceptionState" = type { %"class.blink::ExceptionState", %"class.blink::NoAllocDirectCallHost"*, %"class.base::OnceCallback" }
%"class.blink::HeapVector.1822" = type { %"class.WTF::Vector.1825" }
%"class.WTF::Vector.1825" = type { %"class.WTF::VectorBuffer.1826" }
%"class.WTF::VectorBuffer.1826" = type { %"class.WTF::VectorBufferBase.1827" }
%"class.WTF::VectorBufferBase.1827" = type { %"class.blink::Member.1828"*, i32, i32 }
%"class.blink::Member.1828" = type { %"class.blink::MemberBase.1829" }
%"class.blink::MemberBase.1829" = type { %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"* }
%"class.blink::V8UnionDOMPointOrUnrestrictedDouble" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.1830", double }
%"class.blink::Member.1830" = type { %"class.blink::MemberBase.1831" }
%"class.blink::MemberBase.1831" = type { %"class.blink::DOMPoint"* }
%"class.blink::DOMPoint" = type { %"class.blink::DOMPointReadOnly" }
%"class.blink::DOMPointReadOnly" = type { %"class.blink::ScriptWrappable", double, double, double, double }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Int32" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::Array" = type { i8 }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.177", %"class.v8::Local.423", %"class.v8::Local.549", %"class.v8::Local.549", i8, %"class.v8::MaybeLocal.638" }
%"class.v8::Local.177" = type { %"class.v8::Object"* }
%"class.v8::Local.423" = type { %"class.v8::Value"* }
%"class.v8::MaybeLocal.638" = type { %"class.v8::Value"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE2EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings18ToV8HelperSequenceINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE1EEEN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINS9_5ValueEEEPNS_11ScriptStateERKT0_ = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE1EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE1EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_35V8UnionDOMPointOrUnrestrictedDoubleEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_35V8UnionDOMPointOrUnrestrictedDoubleEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_35V8UnionDOMPointOrUnrestrictedDoubleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_35V8UnionDOMPointOrUnrestrictedDoubleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_35V8UnionDOMPointOrUnrestrictedDoubleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_35V8UnionDOMPointOrUnrestrictedDoubleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEv = comdat any

$_ZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEv = comdat any

$_ZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

$_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = comdat any

@.str = private unnamed_addr constant [24 x i8] c"PaintRenderingContext2D\00", align 1
@_ZN5blink25V8PaintRenderingContext2D18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink25V8PaintRenderingContext2D24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* null, i8 8 }, align 8
@_ZN5blink23PaintRenderingContext2D18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink25V8PaintRenderingContext2D18wrapper_type_info_E, align 8
@_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [15 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31GlobalAlphaAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31GlobalAlphaAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d44GlobalCompositeOperationAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d44GlobalCompositeOperationAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26FilterAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26FilterAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d41ImageSmoothingEnabledAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d41ImageSmoothingEnabledAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31StrokeStyleAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31StrokeStyleAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d29FillStyleAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d29FillStyleAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d33ShadowOffsetXAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d33ShadowOffsetXAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d33ShadowOffsetYAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d33ShadowOffsetYAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d30ShadowBlurAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d30ShadowBlurAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31ShadowColorAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31ShadowColorAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d29LineWidthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d29LineWidthAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d27LineCapAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d27LineCapAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d28LineJoinAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d28LineJoinAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d30MiterLimitAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d30MiterLimitAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d34LineDashOffsetAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d34LineDashOffsetAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [12 x i8] c"globalAlpha\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"globalCompositeOperation\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"filter\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"imageSmoothingEnabled\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"strokeStyle\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"fillStyle\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"shadowOffsetX\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"shadowOffsetY\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"shadowBlur\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"shadowColor\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"lineWidth\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"lineCap\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"lineJoin\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"miterLimit\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"lineDashOffset\00", align 1
@_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [24 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26BeginPathOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26ClearRectOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d21ClipOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d37CreateLinearGradientOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d30CreatePatternOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d37CreateRadialGradientOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 6, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26DrawImageOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d21FillOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d25FillRectOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d28GetLineDashOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d29GetTransformOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d30IsPointInPathOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d32IsPointInStrokeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31ResetTransformOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d24RestoreOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d23RotateOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d21SaveOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22ScaleOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d28SetLineDashOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d29SetTransformOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d23StrokeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d27StrokeRectOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26TransformOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 6, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26TranslateOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }], align 16
@.str.16 = private unnamed_addr constant [10 x i8] c"beginPath\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"clearRect\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"clip\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"createLinearGradient\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"createPattern\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"createRadialGradient\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"drawImage\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"fill\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"fillRect\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"getLineDash\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"getTransform\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"isPointInPath\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"isPointInStroke\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"resetTransform\00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c"restore\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"rotate\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"save\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"scale\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"setLineDash\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"setTransform\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"stroke\00", align 1
@.str.37 = private unnamed_addr constant [11 x i8] c"strokeRect\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"transform\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"translate\00", align 1
@_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0 = internal global [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"] zeroinitializer, align 16
@.str.40 = private unnamed_addr constant [4 x i8] c"arc\00", align 1
@_ZGVZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0 = internal global i64 0, align 8
@.str.41 = private unnamed_addr constant [6 x i8] c"arcTo\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"bezierCurveTo\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"closePath\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"ellipse\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"lineTo\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"moveTo\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"quadraticCurveTo\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"rect\00", align 1
@_ZZN5blink25V8PaintRenderingContext2D35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.49, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d41ImageSmoothingQualityAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d41ImageSmoothingQualityAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }], align 16
@.str.49 = private unnamed_addr constant [22 x i8] c"imageSmoothingQuality\00", align 1
@_ZZN5blink25V8PaintRenderingContext2D35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [4 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.50, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d28PerspectiveOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d25Rotate3dOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d27RotateAxisOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26RoundRectOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 5, i8 104, i8 0 }], align 16
@.str.50 = private unnamed_addr constant [12 x i8] c"perspective\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"rotate3d\00", align 1
@.str.52 = private unnamed_addr constant [11 x i8] c"rotateAxis\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"roundRect\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.54 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.55 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.56 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.57 = private unnamed_addr constant [8 x i8] c"nonzero\00", align 1
@_ZN5blink6Path2D18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink16V8CanvasFillRule13string_table_E = external constant [2 x i8*], align 16
@.str.58 = private unnamed_addr constant [8 x i8] c"evenodd\00", align 1
@.str.59 = private unnamed_addr constant [15 x i8] c"CanvasFillRule\00", align 1
@_ZN5blink16V8CanvasFillRule13string_table_E.const = private unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i32 0, i32 0)], align 16
@_ZN5blink8V8Path2D18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.60 = private unnamed_addr constant [28 x i8] c"Overload resolution failed.\00", align 1
@.str.61 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.62 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.63 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.64 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.65 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv = private unnamed_addr constant [54 x i8] c"const char *WTF::GetStringWithTypeName() [T = double]\00", align 1
@.str.66 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.67 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.68 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.69 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.70 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink31NoAllocDirectCallExceptionStateE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase34is_canvas_image_smoothing_enabled_E = external local_unnamed_addr global i8, align 1
@.str.71 = private unnamed_addr constant [22 x i8] c"ImageSmoothingQuality\00", align 1
@_ZN5blink23V8ImageSmoothingQuality13string_table_E = external constant [3 x i8*], align 16
@.str.72 = private unnamed_addr constant [4 x i8] c"low\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"medium\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"high\00", align 1
@_ZN5blink23V8ImageSmoothingQuality13string_table_E.const = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i32 0, i32 0)], align 16
@_ZN5blink26RuntimeEnabledFeaturesBase29is_new_canvas_2d_api_enabled_E = external local_unnamed_addr global i8, align 1
@.str.75 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.76 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.77 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_35V8UnionDOMPointOrUnrestrictedDoubleEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [211 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::V8UnionDOMPointOrUnrestrictedDouble>, WTF::VectorTraits<blink::Member<blink::V8UnionDOMPointOrUnrestrictedDouble> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global %"class.v8::internal::CFunctionInfoImpl" zeroinitializer, comdat, align 8
@_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global %"class.v8::internal::CFunctionInfoImpl.1845" zeroinitializer, comdat, align 8
@_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global %"class.v8::internal::CFunctionInfoImpl.1847" zeroinitializer, comdat, align 8
@_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global %"class.v8::internal::CFunctionInfoImpl.1849" zeroinitializer, comdat, align 8
@_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global %"class.v8::internal::CFunctionInfoImpl.1852" zeroinitializer, comdat, align 8
@_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global i64 0, comdat, align 8
@constinit = private unnamed_addr constant [10 x %"class.v8::CTypeInfo"] [%"class.v8::CTypeInfo" { i8 8, i8 0 }, %"class.v8::CTypeInfo" { i8 7, i8 0 }, %"class.v8::CTypeInfo" { i8 7, i8 0 }, %"class.v8::CTypeInfo" { i8 7, i8 0 }, %"class.v8::CTypeInfo" { i8 7, i8 0 }, %"class.v8::CTypeInfo" { i8 7, i8 0 }, %"class.v8::CTypeInfo" { i8 7, i8 0 }, %"class.v8::CTypeInfo" { i8 7, i8 0 }, %"class.v8::CTypeInfo" { i8 1, i8 0 }, %"class.v8::CTypeInfo" { i8 -1, i8 0 }], align 1
@_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global %"class.v8::internal::CFunctionInfoImpl.1855" zeroinitializer, comdat, align 8
@_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global %"class.v8::internal::CFunctionInfoImpl.1857" zeroinitializer, comdat, align 8
@_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance = linkonce_odr hidden global i64 0, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25V8PaintRenderingContext2D24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"class.base::span.181", align 8
  %6 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %6) #10
  %8 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %6) #10
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink25V8PaintRenderingContext2D18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %7, %"class.v8::ObjectTemplate"* %8, %"class.v8::FunctionTemplate"* %6, %"class.v8::FunctionTemplate"* null) #10
  %9 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %10 = bitcast %"class.v8::ObjectTemplate"* %8 to %"class.v8::Template"*
  tail call void @_ZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %9, %"class.v8::Template"* %10, %"class.v8::Template"* %2)
  %11 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  %12 = bitcast %"class.base::span.181"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12)
  %13 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_canvas_image_smoothing_enabled_E, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %3
  %16 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %6) #10
  %17 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 1, i64* %17, align 8
  %18 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink25V8PaintRenderingContext2D35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %18, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %9, %"class.v8::Template"* %10, %"class.v8::Template"* %2, %"class.v8::Signature"* %16, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #10
  br label %19

19:                                               ; preds = %15, %3
  %20 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_new_canvas_2d_api_enabled_E, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %6) #10
  %24 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 0, i32 0
  store i64 4, i64* %24, align 8
  %25 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([4 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink25V8PaintRenderingContext2D35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %25, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %9, %"class.v8::Template"* %10, %"class.v8::Template"* %2, %"class.v8::Signature"* %23, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %5) #10
  br label %26

26:                                               ; preds = %19, %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca i16, align 2
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"class.v8::CFunction"*
  %9 = alloca i16, align 2
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"class.v8::CFunction"*
  %12 = alloca i16, align 2
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"class.v8::CFunction"*
  %15 = alloca i16, align 2
  %16 = alloca <2 x i64>, align 16
  %17 = bitcast <2 x i64>* %16 to %"class.v8::CFunction"*
  %18 = alloca i16, align 2
  %19 = alloca <2 x i64>, align 16
  %20 = bitcast <2 x i64>* %19 to %"class.v8::CFunction"*
  %21 = alloca %"class.v8::internal::CFunctionBuilderWithFunction.1846", align 8
  %22 = alloca %"class.v8::internal::CFunctionBuilderWithFunction.1844", align 8
  %23 = alloca %"class.v8::internal::CFunctionBuilderWithFunction", align 8
  %24 = alloca i16, align 2
  %25 = alloca <2 x i64>, align 16
  %26 = bitcast <2 x i64>* %25 to %"class.v8::CFunction"*
  %27 = alloca %"class.base::span", align 8
  %28 = alloca %"class.base::span.181", align 8
  %29 = alloca %"class.base::span.182", align 8
  %30 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %31 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %30) #10
  %32 = getelementptr inbounds %"class.base::span", %"class.base::span"* %27, i64 0, i32 0, i32 0
  store i64 15, i64* %32, align 8
  %33 = getelementptr inbounds %"class.base::span", %"class.base::span"* %27, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([15 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %33, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %31, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %27) #10
  %34 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %28, i64 0, i32 0, i32 0
  store i64 24, i64* %34, align 8
  %35 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %28, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([24 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %35, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %31, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %28) #10
  %36 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0 to i8*) acquire, align 8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %151, !prof !3

38:                                               ; preds = %5
  %39 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0) #10
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %151, label %41

41:                                               ; preds = %38
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0), i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 0, i32 0, i32 0), align 16
  store void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d20ArcOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 0, i32 0, i32 1), align 8
  %42 = load i24, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 0, i32 0, i32 2) to i24*), align 16
  %43 = and i24 %42, -524288
  %44 = or i24 %43, 26629
  store i24 %44, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 0, i32 0, i32 2) to i24*), align 16
  %45 = bitcast %"class.v8::internal::CFunctionBuilderWithFunction"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  %46 = bitcast %"class.v8::internal::CFunctionBuilderWithFunction"* %23 to void (%"class.v8::Object"*, double, double, double, double, double, i1, %"struct.v8::FastApiCallbackOptions"*)**
  store void (%"class.v8::Object"*, double, double, double, double, double, i1, %"struct.v8::FastApiCallbackOptions"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d37ArcOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEdddddbRNS2_22FastApiCallbackOptionsE, void (%"class.v8::Object"*, double, double, double, double, double, i1, %"struct.v8::FastApiCallbackOptions"*)** %46, align 8
  %47 = call { i8*, %"class.v8::CFunctionInfo"* } @_ZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEv(%"class.v8::internal::CFunctionBuilderWithFunction"* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  %48 = extractvalue { i8*, %"class.v8::CFunctionInfo"* } %47, 0
  store i8* %48, i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 0, i32 1, i32 0), align 8
  %49 = extractvalue { i8*, %"class.v8::CFunctionInfo"* } %47, 1
  store %"class.v8::CFunctionInfo"* %49, %"class.v8::CFunctionInfo"** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 0, i32 1, i32 1), align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0), i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 1, i32 0, i32 0), align 8
  store void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22ArcToOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 1, i32 0, i32 1), align 8
  %50 = load i24, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 1, i32 0, i32 2) to i24*), align 8
  %51 = and i24 %50, -524288
  %52 = or i24 %51, 26629
  store i24 %52, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 1, i32 0, i32 2) to i24*), align 8
  %53 = bitcast %"class.v8::internal::CFunctionBuilderWithFunction.1844"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  %54 = bitcast %"class.v8::internal::CFunctionBuilderWithFunction.1844"* %22 to void (%"class.v8::Object"*, double, double, double, double, double, %"struct.v8::FastApiCallbackOptions"*)**
  store void (%"class.v8::Object"*, double, double, double, double, double, %"struct.v8::FastApiCallbackOptions"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d39ArcToOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEdddddRNS2_22FastApiCallbackOptionsE, void (%"class.v8::Object"*, double, double, double, double, double, %"struct.v8::FastApiCallbackOptions"*)** %54, align 8
  %55 = call { i8*, %"class.v8::CFunctionInfo"* } @_ZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEv(%"class.v8::internal::CFunctionBuilderWithFunction.1844"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  %56 = extractvalue { i8*, %"class.v8::CFunctionInfo"* } %55, 0
  store i8* %56, i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 1, i32 1, i32 0), align 8
  %57 = extractvalue { i8*, %"class.v8::CFunctionInfo"* } %55, 1
  store %"class.v8::CFunctionInfo"* %57, %"class.v8::CFunctionInfo"** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 1, i32 1, i32 1), align 8
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0), i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 2, i32 0, i32 0), align 16
  store void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d30BezierCurveToOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 2, i32 0, i32 1), align 8
  %58 = load i24, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 2, i32 0, i32 2) to i24*), align 16
  %59 = and i24 %58, -524288
  %60 = or i24 %59, 26630
  store i24 %60, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 2, i32 0, i32 2) to i24*), align 16
  %61 = bitcast %"class.v8::internal::CFunctionBuilderWithFunction.1846"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #10
  %62 = bitcast %"class.v8::internal::CFunctionBuilderWithFunction.1846"* %21 to void (%"class.v8::Object"*, double, double, double, double, double, double, %"struct.v8::FastApiCallbackOptions"*)**
  store void (%"class.v8::Object"*, double, double, double, double, double, double, %"struct.v8::FastApiCallbackOptions"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d47BezierCurveToOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEddddddRNS2_22FastApiCallbackOptionsE, void (%"class.v8::Object"*, double, double, double, double, double, double, %"struct.v8::FastApiCallbackOptions"*)** %62, align 8
  %63 = call { i8*, %"class.v8::CFunctionInfo"* } @_ZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEv(%"class.v8::internal::CFunctionBuilderWithFunction.1846"* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #10
  %64 = extractvalue { i8*, %"class.v8::CFunctionInfo"* } %63, 0
  store i8* %64, i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 2, i32 1, i32 0), align 8
  %65 = extractvalue { i8*, %"class.v8::CFunctionInfo"* } %63, 1
  store %"class.v8::CFunctionInfo"* %65, %"class.v8::CFunctionInfo"** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 2, i32 1, i32 1), align 8
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i64 0, i64 0), i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 3, i32 0, i32 0), align 8
  store void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26ClosePathOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 3, i32 0, i32 1), align 8
  %66 = load i24, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 3, i32 0, i32 2) to i24*), align 8
  %67 = and i24 %66, -524288
  %68 = or i24 %67, 26624
  store i24 %68, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 3, i32 0, i32 2) to i24*), align 8
  %69 = bitcast <2 x i64>* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #10
  %70 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance to i8*) acquire, align 8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %78, !prof !3

72:                                               ; preds = %41
  %73 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %72
  %76 = bitcast i16* %18 to %"class.v8::CTypeInfo"*
  %77 = bitcast i16* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %77) #10
  store i16 0, i16* %18, align 2
  call void @_ZN2v813CFunctionInfoC2ERKNS_9CTypeInfoEjPS2_(%"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1849", %"class.v8::internal::CFunctionInfoImpl.1849"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0), %"class.v8::CTypeInfo"* nonnull dereferenceable(2) %76, i32 2, %"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1849", %"class.v8::internal::CFunctionInfoImpl.1849"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0)) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %77) #10
  store i16 8, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1849", %"class.v8::internal::CFunctionInfoImpl.1849"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0) to i16*), align 8
  store i16 255, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1849", %"class.v8::internal::CFunctionInfoImpl.1849"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 1) to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  br label %78

78:                                               ; preds = %41, %72, %75
  call void @_ZN2v89CFunctionC1EPKvPKNS_13CFunctionInfoE(%"class.v8::CFunction"* nonnull %20, i8* bitcast (void (%"class.v8::Object"*, %"struct.v8::FastApiCallbackOptions"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d43ClosePathOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEERNS2_22FastApiCallbackOptionsE to i8*), %"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1849", %"class.v8::internal::CFunctionInfoImpl.1849"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0)) #10
  %79 = load <2 x i64>, <2 x i64>* %19, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #10
  store <2 x i64> %79, <2 x i64>* bitcast (i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 3, i32 1, i32 0) to <2 x i64>*), align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0), i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 4, i32 0, i32 0), align 16
  store void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d24EllipseOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 4, i32 0, i32 1), align 8
  %80 = load i24, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 4, i32 0, i32 2) to i24*), align 16
  %81 = and i24 %80, -524288
  %82 = or i24 %81, 26631
  store i24 %82, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 4, i32 0, i32 2) to i24*), align 16
  %83 = bitcast <2 x i64>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #10
  %84 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance to i8*) acquire, align 8
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %92, !prof !3

86:                                               ; preds = %78
  %87 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %86
  %90 = bitcast i16* %15 to %"class.v8::CTypeInfo"*
  %91 = bitcast i16* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %91) #10
  store i16 0, i16* %15, align 2
  call void @_ZN2v813CFunctionInfoC2ERKNS_9CTypeInfoEjPS2_(%"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1852", %"class.v8::internal::CFunctionInfoImpl.1852"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0), %"class.v8::CTypeInfo"* nonnull dereferenceable(2) %90, i32 10, %"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1852", %"class.v8::internal::CFunctionInfoImpl.1852"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0)) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %91) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1852", %"class.v8::internal::CFunctionInfoImpl.1852"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0, i32 0), i8* align 1 getelementptr inbounds ([10 x %"class.v8::CTypeInfo"], [10 x %"class.v8::CTypeInfo"]* @constinit, i64 0, i64 0, i32 0), i64 20, i1 false) #10
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  br label %92

92:                                               ; preds = %78, %86, %89
  call void @_ZN2v89CFunctionC1EPKvPKNS_13CFunctionInfoE(%"class.v8::CFunction"* nonnull %17, i8* bitcast (void (%"class.v8::Object"*, double, double, double, double, double, double, double, i1, %"struct.v8::FastApiCallbackOptions"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d41EllipseOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEdddddddbRNS2_22FastApiCallbackOptionsE to i8*), %"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1852", %"class.v8::internal::CFunctionInfoImpl.1852"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0)) #10
  %93 = load <2 x i64>, <2 x i64>* %16, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #10
  store <2 x i64> %93, <2 x i64>* bitcast (i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 4, i32 1, i32 0) to <2 x i64>*), align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 5, i32 0, i32 0), align 8
  store void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d23LineToOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 5, i32 0, i32 1), align 8
  %94 = load i24, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 5, i32 0, i32 2) to i24*), align 8
  %95 = and i24 %94, -524288
  %96 = or i24 %95, 26626
  store i24 %96, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 5, i32 0, i32 2) to i24*), align 8
  %97 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #10
  %98 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance to i8*) acquire, align 8
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %106, !prof !3

100:                                              ; preds = %92
  %101 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %100
  %104 = bitcast i16* %12 to %"class.v8::CTypeInfo"*
  %105 = bitcast i16* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %105) #10
  store i16 0, i16* %12, align 2
  call void @_ZN2v813CFunctionInfoC2ERKNS_9CTypeInfoEjPS2_(%"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1855", %"class.v8::internal::CFunctionInfoImpl.1855"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0), %"class.v8::CTypeInfo"* nonnull dereferenceable(2) %104, i32 4, %"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1855", %"class.v8::internal::CFunctionInfoImpl.1855"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0)) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %105) #10
  store i16 8, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1855", %"class.v8::internal::CFunctionInfoImpl.1855"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0) to i16*), align 8
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1855", %"class.v8::internal::CFunctionInfoImpl.1855"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 1) to i16*), align 2
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1855", %"class.v8::internal::CFunctionInfoImpl.1855"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 2) to i16*), align 4
  store i16 255, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1855", %"class.v8::internal::CFunctionInfoImpl.1855"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 3) to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  br label %106

106:                                              ; preds = %92, %100, %103
  call void @_ZN2v89CFunctionC1EPKvPKNS_13CFunctionInfoE(%"class.v8::CFunction"* nonnull %14, i8* bitcast (void (%"class.v8::Object"*, double, double, %"struct.v8::FastApiCallbackOptions"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d40LineToOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEddRNS2_22FastApiCallbackOptionsE to i8*), %"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1855", %"class.v8::internal::CFunctionInfoImpl.1855"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0)) #10
  %107 = load <2 x i64>, <2 x i64>* %13, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #10
  store <2 x i64> %107, <2 x i64>* bitcast (i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 5, i32 1, i32 0) to <2 x i64>*), align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i64 0, i64 0), i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 6, i32 0, i32 0), align 16
  store void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d23MoveToOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 6, i32 0, i32 1), align 8
  %108 = load i24, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 6, i32 0, i32 2) to i24*), align 16
  %109 = and i24 %108, -524288
  %110 = or i24 %109, 26626
  store i24 %110, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 6, i32 0, i32 2) to i24*), align 16
  %111 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #10
  %112 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance to i8*) acquire, align 8
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %120, !prof !3

114:                                              ; preds = %106
  %115 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = bitcast i16* %9 to %"class.v8::CTypeInfo"*
  %119 = bitcast i16* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %119) #10
  store i16 0, i16* %9, align 2
  call void @_ZN2v813CFunctionInfoC2ERKNS_9CTypeInfoEjPS2_(%"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1855", %"class.v8::internal::CFunctionInfoImpl.1855"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0), %"class.v8::CTypeInfo"* nonnull dereferenceable(2) %118, i32 4, %"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1855", %"class.v8::internal::CFunctionInfoImpl.1855"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0)) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %119) #10
  store i16 8, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1855", %"class.v8::internal::CFunctionInfoImpl.1855"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0) to i16*), align 8
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1855", %"class.v8::internal::CFunctionInfoImpl.1855"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 1) to i16*), align 2
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1855", %"class.v8::internal::CFunctionInfoImpl.1855"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 2) to i16*), align 4
  store i16 255, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1855", %"class.v8::internal::CFunctionInfoImpl.1855"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 3) to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  br label %120

120:                                              ; preds = %106, %114, %117
  call void @_ZN2v89CFunctionC1EPKvPKNS_13CFunctionInfoE(%"class.v8::CFunction"* nonnull %11, i8* bitcast (void (%"class.v8::Object"*, double, double, %"struct.v8::FastApiCallbackOptions"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d40MoveToOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEddRNS2_22FastApiCallbackOptionsE to i8*), %"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1855", %"class.v8::internal::CFunctionInfoImpl.1855"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0)) #10
  %121 = load <2 x i64>, <2 x i64>* %10, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #10
  store <2 x i64> %121, <2 x i64>* bitcast (i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 6, i32 1, i32 0) to <2 x i64>*), align 8
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47, i64 0, i64 0), i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 7, i32 0, i32 0), align 8
  store void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d33QuadraticCurveToOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 7, i32 0, i32 1), align 8
  %122 = load i24, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 7, i32 0, i32 2) to i24*), align 8
  %123 = and i24 %122, -524288
  %124 = or i24 %123, 26628
  store i24 %124, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 7, i32 0, i32 2) to i24*), align 8
  %125 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125) #10
  %126 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance to i8*) acquire, align 8
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %134, !prof !3

128:                                              ; preds = %120
  %129 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %134, label %131

131:                                              ; preds = %128
  %132 = bitcast i16* %6 to %"class.v8::CTypeInfo"*
  %133 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %133) #10
  store i16 0, i16* %6, align 2
  call void @_ZN2v813CFunctionInfoC2ERKNS_9CTypeInfoEjPS2_(%"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0), %"class.v8::CTypeInfo"* nonnull dereferenceable(2) %132, i32 6, %"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0)) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %133) #10
  store i16 8, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0) to i16*), align 8
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 1) to i16*), align 2
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 2) to i16*), align 4
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 3) to i16*), align 2
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 4) to i16*), align 8
  store i16 255, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 5) to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  br label %134

134:                                              ; preds = %120, %128, %131
  call void @_ZN2v89CFunctionC1EPKvPKNS_13CFunctionInfoE(%"class.v8::CFunction"* nonnull %8, i8* bitcast (void (%"class.v8::Object"*, double, double, double, double, %"struct.v8::FastApiCallbackOptions"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d50QuadraticCurveToOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEddddRNS2_22FastApiCallbackOptionsE to i8*), %"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0)) #10
  %135 = load <2 x i64>, <2 x i64>* %7, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #10
  store <2 x i64> %135, <2 x i64>* bitcast (i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 7, i32 1, i32 0) to <2 x i64>*), align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 8, i32 0, i32 0), align 16
  store void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d21RectOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 8, i32 0, i32 1), align 8
  %136 = load i24, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 8, i32 0, i32 2) to i24*), align 16
  %137 = and i24 %136, -524288
  %138 = or i24 %137, 26628
  store i24 %138, i24* bitcast ([3 x i8]* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 8, i32 0, i32 2) to i24*), align 16
  %139 = bitcast <2 x i64>* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #10
  %140 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance to i8*) acquire, align 8
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %148, !prof !3

142:                                              ; preds = %134
  %143 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %142
  %146 = bitcast i16* %24 to %"class.v8::CTypeInfo"*
  %147 = bitcast i16* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %147) #10
  store i16 0, i16* %24, align 2
  call void @_ZN2v813CFunctionInfoC2ERKNS_9CTypeInfoEjPS2_(%"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0), %"class.v8::CTypeInfo"* nonnull dereferenceable(2) %146, i32 6, %"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0)) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %147) #10
  store i16 8, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0) to i16*), align 8
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 1) to i16*), align 2
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 2) to i16*), align 4
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 3) to i16*), align 2
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 4) to i16*), align 8
  store i16 255, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 5) to i16*), align 2
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  br label %148

148:                                              ; preds = %134, %142, %145
  call void @_ZN2v89CFunctionC1EPKvPKNS_13CFunctionInfoE(%"class.v8::CFunction"* nonnull %26, i8* bitcast (void (%"class.v8::Object"*, double, double, double, double, %"struct.v8::FastApiCallbackOptions"*)* @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d38RectOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEddddRNS2_22FastApiCallbackOptionsE to i8*), %"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1857", %"class.v8::internal::CFunctionInfoImpl.1857"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0)) #10
  %149 = load <2 x i64>, <2 x i64>* %25, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #10
  store <2 x i64> %149, <2 x i64>* bitcast (i8** getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 8, i32 1, i32 0) to <2 x i64>*), align 8
  %150 = call {}* @llvm.invariant.start.p0i8(i64 360, i8* bitcast ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0 to i8*))
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0) #10
  br label %151

151:                                              ; preds = %38, %148, %5
  %152 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %29, i64 0, i32 0, i32 0
  store i64 9, i64* %152, align 8
  %153 = getelementptr inbounds %"class.base::span.182", %"class.base::span.182"* %29, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"* getelementptr inbounds ([9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"], [9 x %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"]* @_ZZN5blink25V8PaintRenderingContext2D30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable_0, i64 0, i64 0), %"struct.blink::bindings::IDLMemberInstaller::NoAllocDirectCallOperationConfig"** %153, align 8
  call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_32NoAllocDirectCallOperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %31, %"class.base::span.182"* nonnull byval(%"class.base::span.182") align 8 %29) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25V8PaintRenderingContext2D35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span.181", align 8
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_canvas_image_smoothing_enabled_E, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %12 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %11) #10
  %13 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 1, i64* %13, align 8
  %14 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink25V8PaintRenderingContext2D35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %14, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %12, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #10
  br label %15

15:                                               ; preds = %5, %10
  %16 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_new_canvas_2d_api_enabled_E, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %20 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %19) #10
  %21 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 0, i32 0
  store i64 4, i64* %21, align 8
  %22 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([4 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink25V8PaintRenderingContext2D35InstallContextIndependentPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %22, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %20, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %7) #10
  br label %23

23:                                               ; preds = %15, %18
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31GlobalAlphaAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %"class.blink::BaseRenderingContext2D"*
  %26 = tail call double @_ZNK5blink22BaseRenderingContext2D11globalAlphaEv(%"class.blink::BaseRenderingContext2D"* %25) #10
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 3
  %30 = getelementptr inbounds i64, i64* %28, i64 1
  %31 = bitcast i64* %30 to %"class.v8::Isolate"**
  %32 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %31, align 8
  %33 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %32, double %26) #10
  %34 = icmp eq %"class.v8::Number"* %33, null
  %35 = bitcast %"class.v8::Number"* %33 to i64*
  %36 = getelementptr inbounds i64, i64* %28, i64 2
  %37 = select i1 %34, i64* %36, i64* %35, !prof !4
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31GlobalAlphaAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #10
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i64* %27 to %"class.v8::Isolate"**
  %29 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %23
  %34 = ptrtoint %"class.v8::Isolate"* %29 to i64
  %35 = add i64 %34, 160
  %36 = inttoptr i64 %35 to %"class.v8::Value"*
  br label %40

37:                                               ; preds = %23
  %38 = bitcast i64** %3 to %"class.v8::Value"**
  %39 = load %"class.v8::Value"*, %"class.v8::Value"** %38, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi %"class.v8::Value"* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %42) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 56, i1 false)
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %45, align 2
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %47 = bitcast i8** %46 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0)>, <2 x i8*>* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %29, %"class.v8::Isolate"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %52 = bitcast %"class.WTF::StringImpl"** %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10
  %53 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %41) #10
  br i1 %53, label %54, label %57, !prof !5

54:                                               ; preds = %40
  %55 = bitcast %"class.v8::Value"* %41 to %"class.v8::Number"*
  %56 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %55) #10
  br label %61

57:                                               ; preds = %40
  %58 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %29, %"class.v8::Value"* %41, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %59 = load i32, i32* %50, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %54, %57
  %62 = phi double [ %56, %54 ], [ %58, %57 ]
  %63 = getelementptr inbounds i8, i8* %24, i64 16
  %64 = bitcast i8* %63 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D14setGlobalAlphaEd(%"class.blink::BaseRenderingContext2D"* %64, double %62) #10
  br label %65

65:                                               ; preds = %57, %61
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %67, null
  br i1 %68, label %78, label %69

69:                                               ; preds = %65
  %70 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, align 8
  %71 = bitcast %"class.v8::Isolate"* %70 to %"class.v8::internal::Isolate"*
  %72 = load i64, i64* %67, align 8
  %73 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %71, i64 %72) #10
  %74 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %70) #10
  br i1 %74, label %78, label %75

75:                                               ; preds = %69
  %76 = bitcast i64* %73 to %"class.v8::Value"*
  %77 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %70, %"class.v8::Value"* %76) #10
  br label %78

78:                                               ; preds = %75, %69, %65
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #10
  br label %94

94:                                               ; preds = %78, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %42) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d44GlobalCompositeOperationAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %"class.blink::BaseRenderingContext2D"*
  %26 = tail call %"class.WTF::StringImpl"* @_ZNK5blink22BaseRenderingContext2D24globalCompositeOperationEv(%"class.blink::BaseRenderingContext2D"* %25) #10
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %22
  %32 = load i64, i64* %29, align 8
  %33 = add i64 %32, 8
  %34 = inttoptr i64 %33 to %"class.blink::V8PerIsolateData"**
  %35 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %35, i64 0, i32 5, i32 0, i32 0, i32 0
  %37 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %36, align 8
  %38 = getelementptr inbounds i64, i64* %28, i64 3
  %39 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %37, i64 0, i32 3, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, %26
  br i1 %41, label %42, label %49

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %37, i64 0, i32 1, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = inttoptr i64 %44 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %38, align 8
  br label %56

49:                                               ; preds = %31
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %37, i64* %38, %"class.WTF::StringImpl"* nonnull %26) #10
  br label %56

50:                                               ; preds = %22
  %51 = getelementptr inbounds i64, i64* %28, i64 3
  %52 = load i64, i64* %29, align 8
  %53 = add i64 %52, 200
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %51, align 8
  br label %69

56:                                               ; preds = %42, %46, %49
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #10
  br label %69

69:                                               ; preds = %50, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d44GlobalCompositeOperationAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 -1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %8, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  switch i16 %17, label %22 [
    i16 1057, label %18
    i16 1056, label %18
    i16 1040, label %18
  ]

18:                                               ; preds = %1, %1, %1
  %19 = add i64 %8, 19
  %20 = inttoptr i64 %19 to i8**
  %21 = load i8*, i8** %20, align 1
  br label %25

22:                                               ; preds = %1
  %23 = bitcast i64* %7 to %"class.v8::Object"*
  %24 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %23, i32 1) #10
  br label %25

25:                                               ; preds = %18, %22
  %26 = phi i8* [ %21, %18 ], [ %24, %22 ]
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = bitcast i64* %29 to %"class.v8::Isolate"**
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %25
  %36 = ptrtoint %"class.v8::Isolate"* %31 to i64
  %37 = add i64 %36, 160
  %38 = inttoptr i64 %37 to %"class.v8::Value"*
  br label %42

39:                                               ; preds = %25
  %40 = bitcast i64** %5 to %"class.v8::Value"**
  %41 = load %"class.v8::Value"*, %"class.v8::Value"** %40, align 8
  br label %42

42:                                               ; preds = %35, %39
  %43 = phi %"class.v8::Value"* [ %38, %35 ], [ %41, %39 ]
  %44 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %44) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 56, i1 false)
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %47, align 2
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %49 = bitcast i8** %48 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %31, %"class.v8::Isolate"** %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %54 = bitcast %"class.WTF::StringImpl"** %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #10
  %55 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %55) #10
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %3, %"class.v8::Isolate"* %31, %"class.v8::Value"* %43, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %56 = load i32, i32* %52, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %107

58:                                               ; preds = %42
  %59 = getelementptr inbounds i8, i8* %26, i64 16
  %60 = bitcast i8* %59 to %"class.blink::BaseRenderingContext2D"*
  %61 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #10
  %62 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 0, i32 0
  %63 = load %"class.v8::String"*, %"class.v8::String"** %62, align 8
  %64 = icmp eq %"class.v8::String"* %63, null
  br i1 %64, label %67, label %65, !prof !4

65:                                               ; preds = %58
  %66 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %63, i32 0) #10
  br label %88

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %88, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #10
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !4

85:                                               ; preds = %76
  call void @llvm.trap() #10
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %88

88:                                               ; preds = %65, %67, %71, %86
  %89 = phi %"class.WTF::StringImpl"* [ %66, %65 ], [ null, %67 ], [ %69, %71 ], [ %69, %86 ]
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %90, align 8
  call void @_ZN5blink22BaseRenderingContext2D27setGlobalCompositeOperationERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %60, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #10
  br label %106

106:                                              ; preds = %88, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #10
  br label %107

107:                                              ; preds = %42, %106
  %108 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  store i8* null, i8** %108, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %112, label %111

111:                                              ; preds = %107
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %109) #10
  br label %112

112:                                              ; preds = %111, %107
  %113 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #10
  br label %129

129:                                              ; preds = %112, %125, %128
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %55) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %130 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %131 = load i64*, i64** %130, align 8
  %132 = icmp eq i64* %131, null
  br i1 %132, label %142, label %133

133:                                              ; preds = %129
  %134 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %51, align 8
  %135 = bitcast %"class.v8::Isolate"* %134 to %"class.v8::internal::Isolate"*
  %136 = load i64, i64* %131, align 8
  %137 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %135, i64 %136) #10
  %138 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %134) #10
  br i1 %138, label %142, label %139

139:                                              ; preds = %133
  %140 = bitcast i64* %137 to %"class.v8::Value"*
  %141 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %134, %"class.v8::Value"* %140) #10
  br label %142

142:                                              ; preds = %139, %133, %129
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #10
  br label %158

158:                                              ; preds = %142, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %44) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26FilterAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #10
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #10
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 1830) #10
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = bitcast i64* %21 to %"class.v8::Object"*
  %23 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %22) #10
  %24 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %23)
  %25 = load i64, i64* %21, align 8
  %26 = add i64 %25, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i64 %25, -4294967296
  %30 = zext i32 %28 to i64
  %31 = or i64 %29, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load i16, i16* %33, align 2
  switch i16 %34, label %39 [
    i16 1057, label %35
    i16 1056, label %35
    i16 1040, label %35
  ]

35:                                               ; preds = %18, %18, %18
  %36 = add i64 %25, 19
  %37 = inttoptr i64 %36 to i8**
  %38 = load i8*, i8** %37, align 1
  br label %41

39:                                               ; preds = %18
  %40 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #10
  br label %41

41:                                               ; preds = %35, %39
  %42 = phi i8* [ %38, %35 ], [ %40, %39 ]
  %43 = getelementptr inbounds i8, i8* %42, i64 16
  %44 = bitcast i8* %43 to %"class.blink::BaseRenderingContext2D"*
  %45 = tail call %"class.blink::V8UnionCanvasFilterOrString"* @_ZNK5blink22BaseRenderingContext2D6filterEv(%"class.blink::BaseRenderingContext2D"* %44) #10
  %46 = icmp eq %"class.blink::V8UnionCanvasFilterOrString"* %45, null
  br i1 %46, label %47, label %52

47:                                               ; preds = %41
  %48 = bitcast %"class.blink::ScriptState"* %24 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 176
  %51 = inttoptr i64 %50 to %"class.v8::Value"*
  br label %54

52:                                               ; preds = %41
  %53 = tail call %"class.v8::Value"* @_ZNK5blink27V8UnionCanvasFilterOrString9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionCanvasFilterOrString"* nonnull %45, %"class.blink::ScriptState"* %24) #10
  br label %54

54:                                               ; preds = %47, %52
  %55 = phi %"class.v8::Value"* [ %51, %47 ], [ %53, %52 ]
  %56 = icmp eq %"class.v8::Value"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %54
  %58 = load i64*, i64** %2, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 3
  %60 = bitcast %"class.v8::Value"* %55 to i64*
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %59, align 8
  br label %62

62:                                               ; preds = %54, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26FilterAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #10
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #10
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 0, i32 3
  %13 = icmp eq %"class.blink::UseCounter"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* nonnull %12, i32 1830) #10
  br label %20

20:                                               ; preds = %1, %15
  %21 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %26 = bitcast i8** %25 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)>, <2 x i8*>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #10
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %35, label %55, !prof !4

35:                                               ; preds = %20
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  %37 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %33) #10
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #10
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %121

55:                                               ; preds = %20
  %56 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 -1
  %59 = bitcast i64* %58 to %"class.v8::Object"*
  %60 = load i64, i64* %58, align 8
  %61 = add i64 %60, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = and i64 %60, -4294967296
  %65 = zext i32 %63 to i64
  %66 = or i64 %64, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load i16, i16* %68, align 2
  switch i16 %69, label %74 [
    i16 1057, label %70
    i16 1056, label %70
    i16 1040, label %70
  ]

70:                                               ; preds = %55, %55, %55
  %71 = add i64 %60, 19
  %72 = inttoptr i64 %71 to i8**
  %73 = load i8*, i8** %72, align 1
  br label %76

74:                                               ; preds = %55
  %75 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %59, i32 1) #10
  br label %76

76:                                               ; preds = %70, %74
  %77 = phi i8* [ %73, %70 ], [ %75, %74 ]
  %78 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %59) #10
  %79 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %78) #10
  %80 = load i32, i32* %32, align 8
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %88, label %82

82:                                               ; preds = %76
  %83 = load i64*, i64** %4, align 8
  %84 = getelementptr inbounds i64, i64* %83, i64 1
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 160
  %87 = inttoptr i64 %86 to %"class.v8::Value"*
  br label %91

88:                                               ; preds = %76
  %89 = bitcast i64** %56 to %"class.v8::Value"**
  %90 = load %"class.v8::Value"*, %"class.v8::Value"** %89, align 8
  br label %91

91:                                               ; preds = %82, %88
  %92 = phi %"class.v8::Value"* [ %87, %82 ], [ %90, %88 ]
  %93 = bitcast %"class.v8::Value"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = and i64 %94, 3
  %96 = icmp eq i64 %95, 1
  br i1 %96, label %97, label %113

97:                                               ; preds = %91
  %98 = add i64 %94, -1
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = and i64 %94, -4294967296
  %102 = zext i32 %100 to i64
  %103 = or i64 %101, %102
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i16*
  %106 = load i16, i16* %105, align 2
  %107 = icmp eq i16 %106, 67
  br i1 %107, label %108, label %113

108:                                              ; preds = %97
  %109 = add i64 %94, 23
  %110 = inttoptr i64 %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = ashr i32 %111, 1
  switch i32 %112, label %113 [
    i32 5, label %117
    i32 3, label %117
  ]

113:                                              ; preds = %91, %97, %108
  %114 = call %"class.blink::V8UnionCanvasFilterOrString"* @_ZN5blink27V8UnionCanvasFilterOrString6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %92, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %115 = load i32, i32* %29, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %121

117:                                              ; preds = %108, %108, %113
  %118 = phi %"class.blink::V8UnionCanvasFilterOrString"* [ %114, %113 ], [ null, %108 ], [ null, %108 ]
  %119 = getelementptr inbounds i8, i8* %77, i64 16
  %120 = bitcast i8* %119 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D9setFilterEPKNS_16ExecutionContextEPKNS_27V8UnionCanvasFilterOrStringE(%"class.blink::BaseRenderingContext2D"* %120, %"class.blink::ExecutionContext"* %79, %"class.blink::V8UnionCanvasFilterOrString"* %118) #10
  br label %121

121:                                              ; preds = %113, %117, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %122 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %123 = load i64*, i64** %122, align 8
  %124 = icmp eq i64* %123, null
  br i1 %124, label %134, label %125

125:                                              ; preds = %121
  %126 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %127 = bitcast %"class.v8::Isolate"* %126 to %"class.v8::internal::Isolate"*
  %128 = load i64, i64* %123, align 8
  %129 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %127, i64 %128) #10
  %130 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %126) #10
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = bitcast i64* %129 to %"class.v8::Value"*
  %133 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %126, %"class.v8::Value"* %132) #10
  br label %134

134:                                              ; preds = %131, %125, %121
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #10
  br label %150

150:                                              ; preds = %134, %146, %149
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d41ImageSmoothingEnabledAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %"class.blink::BaseRenderingContext2D"*
  %26 = tail call zeroext i1 @_ZNK5blink22BaseRenderingContext2D21imageSmoothingEnabledEv(%"class.blink::BaseRenderingContext2D"* %25) #10
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 3
  %30 = getelementptr inbounds i64, i64* %28, i64 1
  %31 = load i64, i64* %30, align 8
  %32 = select i1 %26, i64 184, i64 192
  %33 = add i64 %31, %32
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d41ImageSmoothingEnabledAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds i64, i64* %25, i64 1
  %27 = bitcast i64* %26 to %"class.v8::Isolate"**
  %28 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %22
  %33 = ptrtoint %"class.v8::Isolate"* %28 to i64
  %34 = add i64 %33, 160
  %35 = inttoptr i64 %34 to %"class.v8::Value"*
  br label %39

36:                                               ; preds = %22
  %37 = bitcast i64** %2 to %"class.v8::Value"**
  %38 = load %"class.v8::Value"*, %"class.v8::Value"** %37, align 8
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi %"class.v8::Value"* [ %35, %32 ], [ %38, %36 ]
  %41 = tail call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %40) #10
  br i1 %41, label %42, label %45, !prof !5

42:                                               ; preds = %39
  %43 = bitcast %"class.v8::Value"* %40 to %"class.v8::Boolean"*
  %44 = tail call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %43) #10
  br label %47

45:                                               ; preds = %39
  %46 = tail call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %40, %"class.v8::Isolate"* %28) #10
  br label %47

47:                                               ; preds = %42, %45
  %48 = phi i1 [ %44, %42 ], [ %46, %45 ]
  %49 = getelementptr inbounds i8, i8* %23, i64 16
  %50 = bitcast i8* %49 to %"class.blink::BaseRenderingContext2D"*
  tail call void @_ZN5blink22BaseRenderingContext2D24setImageSmoothingEnabledEb(%"class.blink::BaseRenderingContext2D"* %50, i1 zeroext %48) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31StrokeStyleAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = bitcast i64* %4 to %"class.v8::Object"*
  %6 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %5) #10
  %7 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %6)
  %8 = load i64, i64* %4, align 8
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %8, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  switch i16 %17, label %22 [
    i16 1057, label %18
    i16 1056, label %18
    i16 1040, label %18
  ]

18:                                               ; preds = %1, %1, %1
  %19 = add i64 %8, 19
  %20 = inttoptr i64 %19 to i8**
  %21 = load i8*, i8** %20, align 1
  br label %24

22:                                               ; preds = %1
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %5, i32 1) #10
  br label %24

24:                                               ; preds = %18, %22
  %25 = phi i8* [ %21, %18 ], [ %23, %22 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %"class.blink::BaseRenderingContext2D"*
  %28 = tail call %"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"* @_ZNK5blink22BaseRenderingContext2D11strokeStyleEv(%"class.blink::BaseRenderingContext2D"* %27) #10
  %29 = icmp eq %"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"* %28, null
  br i1 %29, label %30, label %35

30:                                               ; preds = %24
  %31 = bitcast %"class.blink::ScriptState"* %7 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 176
  %34 = inttoptr i64 %33 to %"class.v8::Value"*
  br label %37

35:                                               ; preds = %24
  %36 = tail call %"class.v8::Value"* @_ZNK5blink59V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"* nonnull %28, %"class.blink::ScriptState"* %7) #10
  br label %37

37:                                               ; preds = %30, %35
  %38 = phi %"class.v8::Value"* [ %34, %30 ], [ %36, %35 ]
  %39 = icmp eq %"class.v8::Value"* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 3
  %44 = bitcast %"class.v8::Value"* %38 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %43, align 8
  br label %46

46:                                               ; preds = %37, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31StrokeStyleAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #10
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i64* %27 to %"class.v8::Isolate"**
  %29 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %23
  %34 = ptrtoint %"class.v8::Isolate"* %29 to i64
  %35 = add i64 %34, 160
  %36 = inttoptr i64 %35 to %"class.v8::Value"*
  br label %40

37:                                               ; preds = %23
  %38 = bitcast i64** %3 to %"class.v8::Value"**
  %39 = load %"class.v8::Value"*, %"class.v8::Value"** %38, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi %"class.v8::Value"* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %42) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 56, i1 false)
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %45, align 2
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %47 = bitcast i8** %46 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0)>, <2 x i8*>* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %29, %"class.v8::Isolate"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %52 = bitcast %"class.WTF::StringImpl"** %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10
  %53 = call %"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"* @_ZN5blink59V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %29, %"class.v8::Value"* %41, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %54 = load i32, i32* %50, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %40
  %57 = getelementptr inbounds i8, i8* %24, i64 16
  %58 = bitcast i8* %57 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D14setStrokeStyleEPKNS_59V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrStringE(%"class.blink::BaseRenderingContext2D"* %58, %"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"* %53) #10
  br label %59

59:                                               ; preds = %40, %56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %61, null
  br i1 %62, label %72, label %63

63:                                               ; preds = %59
  %64 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, align 8
  %65 = bitcast %"class.v8::Isolate"* %64 to %"class.v8::internal::Isolate"*
  %66 = load i64, i64* %61, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %65, i64 %66) #10
  %68 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %64) #10
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = bitcast i64* %67 to %"class.v8::Value"*
  %71 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %64, %"class.v8::Value"* %70) #10
  br label %72

72:                                               ; preds = %69, %63, %59
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #10
  br label %88

88:                                               ; preds = %72, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %42) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d29FillStyleAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = bitcast i64* %4 to %"class.v8::Object"*
  %6 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %5) #10
  %7 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %6)
  %8 = load i64, i64* %4, align 8
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %8, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  switch i16 %17, label %22 [
    i16 1057, label %18
    i16 1056, label %18
    i16 1040, label %18
  ]

18:                                               ; preds = %1, %1, %1
  %19 = add i64 %8, 19
  %20 = inttoptr i64 %19 to i8**
  %21 = load i8*, i8** %20, align 1
  br label %24

22:                                               ; preds = %1
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %5, i32 1) #10
  br label %24

24:                                               ; preds = %18, %22
  %25 = phi i8* [ %21, %18 ], [ %23, %22 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %"class.blink::BaseRenderingContext2D"*
  %28 = tail call %"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"* @_ZNK5blink22BaseRenderingContext2D9fillStyleEv(%"class.blink::BaseRenderingContext2D"* %27) #10
  %29 = icmp eq %"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"* %28, null
  br i1 %29, label %30, label %35

30:                                               ; preds = %24
  %31 = bitcast %"class.blink::ScriptState"* %7 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 176
  %34 = inttoptr i64 %33 to %"class.v8::Value"*
  br label %37

35:                                               ; preds = %24
  %36 = tail call %"class.v8::Value"* @_ZNK5blink59V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"* nonnull %28, %"class.blink::ScriptState"* %7) #10
  br label %37

37:                                               ; preds = %30, %35
  %38 = phi %"class.v8::Value"* [ %34, %30 ], [ %36, %35 ]
  %39 = icmp eq %"class.v8::Value"* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 3
  %44 = bitcast %"class.v8::Value"* %38 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %43, align 8
  br label %46

46:                                               ; preds = %37, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d29FillStyleAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #10
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i64* %27 to %"class.v8::Isolate"**
  %29 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %23
  %34 = ptrtoint %"class.v8::Isolate"* %29 to i64
  %35 = add i64 %34, 160
  %36 = inttoptr i64 %35 to %"class.v8::Value"*
  br label %40

37:                                               ; preds = %23
  %38 = bitcast i64** %3 to %"class.v8::Value"**
  %39 = load %"class.v8::Value"*, %"class.v8::Value"** %38, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi %"class.v8::Value"* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %42) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 56, i1 false)
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %45, align 2
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %47 = bitcast i8** %46 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %29, %"class.v8::Isolate"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %52 = bitcast %"class.WTF::StringImpl"** %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10
  %53 = call %"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"* @_ZN5blink59V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %29, %"class.v8::Value"* %41, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %54 = load i32, i32* %50, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %40
  %57 = getelementptr inbounds i8, i8* %24, i64 16
  %58 = bitcast i8* %57 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D12setFillStyleEPKNS_59V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrStringE(%"class.blink::BaseRenderingContext2D"* %58, %"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"* %53) #10
  br label %59

59:                                               ; preds = %40, %56
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %61, null
  br i1 %62, label %72, label %63

63:                                               ; preds = %59
  %64 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, align 8
  %65 = bitcast %"class.v8::Isolate"* %64 to %"class.v8::internal::Isolate"*
  %66 = load i64, i64* %61, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %65, i64 %66) #10
  %68 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %64) #10
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = bitcast i64* %67 to %"class.v8::Value"*
  %71 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %64, %"class.v8::Value"* %70) #10
  br label %72

72:                                               ; preds = %69, %63, %59
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #10
  br label %88

88:                                               ; preds = %72, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %42) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d33ShadowOffsetXAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::PaintRenderingContext2D"*
  %25 = tail call double @_ZNK5blink23PaintRenderingContext2D13shadowOffsetXEv(%"class.blink::PaintRenderingContext2D"* %24) #10
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = getelementptr inbounds i64, i64* %27, i64 1
  %30 = bitcast i64* %29 to %"class.v8::Isolate"**
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %31, double %25) #10
  %33 = icmp eq %"class.v8::Number"* %32, null
  %34 = bitcast %"class.v8::Number"* %32 to i64*
  %35 = getelementptr inbounds i64, i64* %27, i64 2
  %36 = select i1 %33, i64* %35, i64* %34, !prof !4
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d33ShadowOffsetXAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #10
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = bitcast i8* %24 to %"class.blink::PaintRenderingContext2D"*
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = bitcast i64* %28 to %"class.v8::Isolate"**
  %30 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %23
  %35 = ptrtoint %"class.v8::Isolate"* %30 to i64
  %36 = add i64 %35, 160
  %37 = inttoptr i64 %36 to %"class.v8::Value"*
  br label %41

38:                                               ; preds = %23
  %39 = bitcast i64** %3 to %"class.v8::Value"**
  %40 = load %"class.v8::Value"*, %"class.v8::Value"** %39, align 8
  br label %41

41:                                               ; preds = %34, %38
  %42 = phi %"class.v8::Value"* [ %37, %34 ], [ %40, %38 ]
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %30, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #10
  %54 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %42) #10
  br i1 %54, label %55, label %58, !prof !5

55:                                               ; preds = %41
  %56 = bitcast %"class.v8::Value"* %42 to %"class.v8::Number"*
  %57 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %56) #10
  br label %62

58:                                               ; preds = %41
  %59 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %30, %"class.v8::Value"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %60 = load i32, i32* %51, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %55, %58
  %63 = phi double [ %57, %55 ], [ %59, %58 ]
  call void @_ZN5blink23PaintRenderingContext2D16setShadowOffsetXEd(%"class.blink::PaintRenderingContext2D"* %25, double %63) #10
  br label %64

64:                                               ; preds = %58, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %66, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %64
  %69 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %70 = bitcast %"class.v8::Isolate"* %69 to %"class.v8::internal::Isolate"*
  %71 = load i64, i64* %66, align 8
  %72 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %70, i64 %71) #10
  %73 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %69) #10
  br i1 %73, label %77, label %74

74:                                               ; preds = %68
  %75 = bitcast i64* %72 to %"class.v8::Value"*
  %76 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %69, %"class.v8::Value"* %75) #10
  br label %77

77:                                               ; preds = %74, %68, %64
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #10
  br label %93

93:                                               ; preds = %77, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d33ShadowOffsetYAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::PaintRenderingContext2D"*
  %25 = tail call double @_ZNK5blink23PaintRenderingContext2D13shadowOffsetYEv(%"class.blink::PaintRenderingContext2D"* %24) #10
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = getelementptr inbounds i64, i64* %27, i64 1
  %30 = bitcast i64* %29 to %"class.v8::Isolate"**
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %31, double %25) #10
  %33 = icmp eq %"class.v8::Number"* %32, null
  %34 = bitcast %"class.v8::Number"* %32 to i64*
  %35 = getelementptr inbounds i64, i64* %27, i64 2
  %36 = select i1 %33, i64* %35, i64* %34, !prof !4
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d33ShadowOffsetYAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #10
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = bitcast i8* %24 to %"class.blink::PaintRenderingContext2D"*
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = bitcast i64* %28 to %"class.v8::Isolate"**
  %30 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %23
  %35 = ptrtoint %"class.v8::Isolate"* %30 to i64
  %36 = add i64 %35, 160
  %37 = inttoptr i64 %36 to %"class.v8::Value"*
  br label %41

38:                                               ; preds = %23
  %39 = bitcast i64** %3 to %"class.v8::Value"**
  %40 = load %"class.v8::Value"*, %"class.v8::Value"** %39, align 8
  br label %41

41:                                               ; preds = %34, %38
  %42 = phi %"class.v8::Value"* [ %37, %34 ], [ %40, %38 ]
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %30, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #10
  %54 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %42) #10
  br i1 %54, label %55, label %58, !prof !5

55:                                               ; preds = %41
  %56 = bitcast %"class.v8::Value"* %42 to %"class.v8::Number"*
  %57 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %56) #10
  br label %62

58:                                               ; preds = %41
  %59 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %30, %"class.v8::Value"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %60 = load i32, i32* %51, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %55, %58
  %63 = phi double [ %57, %55 ], [ %59, %58 ]
  call void @_ZN5blink23PaintRenderingContext2D16setShadowOffsetYEd(%"class.blink::PaintRenderingContext2D"* %25, double %63) #10
  br label %64

64:                                               ; preds = %58, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %66, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %64
  %69 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %70 = bitcast %"class.v8::Isolate"* %69 to %"class.v8::internal::Isolate"*
  %71 = load i64, i64* %66, align 8
  %72 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %70, i64 %71) #10
  %73 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %69) #10
  br i1 %73, label %77, label %74

74:                                               ; preds = %68
  %75 = bitcast i64* %72 to %"class.v8::Value"*
  %76 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %69, %"class.v8::Value"* %75) #10
  br label %77

77:                                               ; preds = %74, %68, %64
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #10
  br label %93

93:                                               ; preds = %77, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d30ShadowBlurAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::PaintRenderingContext2D"*
  %25 = tail call double @_ZNK5blink23PaintRenderingContext2D10shadowBlurEv(%"class.blink::PaintRenderingContext2D"* %24) #10
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 3
  %29 = getelementptr inbounds i64, i64* %27, i64 1
  %30 = bitcast i64* %29 to %"class.v8::Isolate"**
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %31, double %25) #10
  %33 = icmp eq %"class.v8::Number"* %32, null
  %34 = bitcast %"class.v8::Number"* %32 to i64*
  %35 = getelementptr inbounds i64, i64* %27, i64 2
  %36 = select i1 %33, i64* %35, i64* %34, !prof !4
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d30ShadowBlurAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #10
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = bitcast i8* %24 to %"class.blink::PaintRenderingContext2D"*
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = bitcast i64* %28 to %"class.v8::Isolate"**
  %30 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %23
  %35 = ptrtoint %"class.v8::Isolate"* %30 to i64
  %36 = add i64 %35, 160
  %37 = inttoptr i64 %36 to %"class.v8::Value"*
  br label %41

38:                                               ; preds = %23
  %39 = bitcast i64** %3 to %"class.v8::Value"**
  %40 = load %"class.v8::Value"*, %"class.v8::Value"** %39, align 8
  br label %41

41:                                               ; preds = %34, %38
  %42 = phi %"class.v8::Value"* [ %37, %34 ], [ %40, %38 ]
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %30, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #10
  %54 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %42) #10
  br i1 %54, label %55, label %58, !prof !5

55:                                               ; preds = %41
  %56 = bitcast %"class.v8::Value"* %42 to %"class.v8::Number"*
  %57 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %56) #10
  br label %62

58:                                               ; preds = %41
  %59 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %30, %"class.v8::Value"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %60 = load i32, i32* %51, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %55, %58
  %63 = phi double [ %57, %55 ], [ %59, %58 ]
  call void @_ZN5blink23PaintRenderingContext2D13setShadowBlurEd(%"class.blink::PaintRenderingContext2D"* %25, double %63) #10
  br label %64

64:                                               ; preds = %58, %62
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %66, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %64
  %69 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %70 = bitcast %"class.v8::Isolate"* %69 to %"class.v8::internal::Isolate"*
  %71 = load i64, i64* %66, align 8
  %72 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %70, i64 %71) #10
  %73 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %69) #10
  br i1 %73, label %77, label %74

74:                                               ; preds = %68
  %75 = bitcast i64* %72 to %"class.v8::Value"*
  %76 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %69, %"class.v8::Value"* %75) #10
  br label %77

77:                                               ; preds = %74, %68, %64
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #10
  br label %93

93:                                               ; preds = %77, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31ShadowColorAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %"class.blink::BaseRenderingContext2D"*
  %26 = tail call %"class.WTF::StringImpl"* @_ZNK5blink22BaseRenderingContext2D11shadowColorEv(%"class.blink::BaseRenderingContext2D"* %25) #10
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %22
  %32 = load i64, i64* %29, align 8
  %33 = add i64 %32, 8
  %34 = inttoptr i64 %33 to %"class.blink::V8PerIsolateData"**
  %35 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %35, i64 0, i32 5, i32 0, i32 0, i32 0
  %37 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %36, align 8
  %38 = getelementptr inbounds i64, i64* %28, i64 3
  %39 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %37, i64 0, i32 3, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, %26
  br i1 %41, label %42, label %49

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %37, i64 0, i32 1, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = inttoptr i64 %44 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %38, align 8
  br label %56

49:                                               ; preds = %31
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %37, i64* %38, %"class.WTF::StringImpl"* nonnull %26) #10
  br label %56

50:                                               ; preds = %22
  %51 = getelementptr inbounds i64, i64* %28, i64 3
  %52 = load i64, i64* %29, align 8
  %53 = add i64 %52, 200
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %51, align 8
  br label %69

56:                                               ; preds = %42, %46, %49
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #10
  br label %69

69:                                               ; preds = %50, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31ShadowColorAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 -1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %8, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  switch i16 %17, label %22 [
    i16 1057, label %18
    i16 1056, label %18
    i16 1040, label %18
  ]

18:                                               ; preds = %1, %1, %1
  %19 = add i64 %8, 19
  %20 = inttoptr i64 %19 to i8**
  %21 = load i8*, i8** %20, align 1
  br label %25

22:                                               ; preds = %1
  %23 = bitcast i64* %7 to %"class.v8::Object"*
  %24 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %23, i32 1) #10
  br label %25

25:                                               ; preds = %18, %22
  %26 = phi i8* [ %21, %18 ], [ %24, %22 ]
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = bitcast i64* %29 to %"class.v8::Isolate"**
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %25
  %36 = ptrtoint %"class.v8::Isolate"* %31 to i64
  %37 = add i64 %36, 160
  %38 = inttoptr i64 %37 to %"class.v8::Value"*
  br label %42

39:                                               ; preds = %25
  %40 = bitcast i64** %5 to %"class.v8::Value"**
  %41 = load %"class.v8::Value"*, %"class.v8::Value"** %40, align 8
  br label %42

42:                                               ; preds = %35, %39
  %43 = phi %"class.v8::Value"* [ %38, %35 ], [ %41, %39 ]
  %44 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %44) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 56, i1 false)
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %47, align 2
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %49 = bitcast i8** %48 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)>, <2 x i8*>* %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %31, %"class.v8::Isolate"** %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %54 = bitcast %"class.WTF::StringImpl"** %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #10
  %55 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %55) #10
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %3, %"class.v8::Isolate"* %31, %"class.v8::Value"* %43, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %56 = load i32, i32* %52, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %107

58:                                               ; preds = %42
  %59 = getelementptr inbounds i8, i8* %26, i64 16
  %60 = bitcast i8* %59 to %"class.blink::BaseRenderingContext2D"*
  %61 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #10
  %62 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 0, i32 0
  %63 = load %"class.v8::String"*, %"class.v8::String"** %62, align 8
  %64 = icmp eq %"class.v8::String"* %63, null
  br i1 %64, label %67, label %65, !prof !4

65:                                               ; preds = %58
  %66 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %63, i32 0) #10
  br label %88

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %88, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #10
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !4

85:                                               ; preds = %76
  call void @llvm.trap() #10
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %88

88:                                               ; preds = %65, %67, %71, %86
  %89 = phi %"class.WTF::StringImpl"* [ %66, %65 ], [ null, %67 ], [ %69, %71 ], [ %69, %86 ]
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %90, align 8
  call void @_ZN5blink22BaseRenderingContext2D14setShadowColorERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %60, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #10
  br label %106

106:                                              ; preds = %88, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #10
  br label %107

107:                                              ; preds = %42, %106
  %108 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  store i8* null, i8** %108, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %112, label %111

111:                                              ; preds = %107
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %109) #10
  br label %112

112:                                              ; preds = %111, %107
  %113 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #10
  br label %129

129:                                              ; preds = %112, %125, %128
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %55) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %130 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %131 = load i64*, i64** %130, align 8
  %132 = icmp eq i64* %131, null
  br i1 %132, label %142, label %133

133:                                              ; preds = %129
  %134 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %51, align 8
  %135 = bitcast %"class.v8::Isolate"* %134 to %"class.v8::internal::Isolate"*
  %136 = load i64, i64* %131, align 8
  %137 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %135, i64 %136) #10
  %138 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %134) #10
  br i1 %138, label %142, label %139

139:                                              ; preds = %133
  %140 = bitcast i64* %137 to %"class.v8::Value"*
  %141 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %134, %"class.v8::Value"* %140) #10
  br label %142

142:                                              ; preds = %139, %133, %129
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #10
  br label %158

158:                                              ; preds = %142, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %44) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d29LineWidthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %"class.blink::BaseRenderingContext2D"*
  %26 = tail call double @_ZNK5blink22BaseRenderingContext2D9lineWidthEv(%"class.blink::BaseRenderingContext2D"* %25) #10
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 3
  %30 = getelementptr inbounds i64, i64* %28, i64 1
  %31 = bitcast i64* %30 to %"class.v8::Isolate"**
  %32 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %31, align 8
  %33 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %32, double %26) #10
  %34 = icmp eq %"class.v8::Number"* %33, null
  %35 = bitcast %"class.v8::Number"* %33 to i64*
  %36 = getelementptr inbounds i64, i64* %28, i64 2
  %37 = select i1 %34, i64* %36, i64* %35, !prof !4
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d29LineWidthAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #10
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i64* %27 to %"class.v8::Isolate"**
  %29 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %23
  %34 = ptrtoint %"class.v8::Isolate"* %29 to i64
  %35 = add i64 %34, 160
  %36 = inttoptr i64 %35 to %"class.v8::Value"*
  br label %40

37:                                               ; preds = %23
  %38 = bitcast i64** %3 to %"class.v8::Value"**
  %39 = load %"class.v8::Value"*, %"class.v8::Value"** %38, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi %"class.v8::Value"* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %42) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 56, i1 false)
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %45, align 2
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %47 = bitcast i8** %46 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)>, <2 x i8*>* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %29, %"class.v8::Isolate"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %52 = bitcast %"class.WTF::StringImpl"** %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10
  %53 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %41) #10
  br i1 %53, label %54, label %57, !prof !5

54:                                               ; preds = %40
  %55 = bitcast %"class.v8::Value"* %41 to %"class.v8::Number"*
  %56 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %55) #10
  br label %61

57:                                               ; preds = %40
  %58 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %29, %"class.v8::Value"* %41, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %59 = load i32, i32* %50, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %54, %57
  %62 = phi double [ %56, %54 ], [ %58, %57 ]
  %63 = getelementptr inbounds i8, i8* %24, i64 16
  %64 = bitcast i8* %63 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D12setLineWidthEd(%"class.blink::BaseRenderingContext2D"* %64, double %62) #10
  br label %65

65:                                               ; preds = %57, %61
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %67, null
  br i1 %68, label %78, label %69

69:                                               ; preds = %65
  %70 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, align 8
  %71 = bitcast %"class.v8::Isolate"* %70 to %"class.v8::internal::Isolate"*
  %72 = load i64, i64* %67, align 8
  %73 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %71, i64 %72) #10
  %74 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %70) #10
  br i1 %74, label %78, label %75

75:                                               ; preds = %69
  %76 = bitcast i64* %73 to %"class.v8::Value"*
  %77 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %70, %"class.v8::Value"* %76) #10
  br label %78

78:                                               ; preds = %75, %69, %65
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #10
  br label %94

94:                                               ; preds = %78, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %42) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d27LineCapAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %"class.blink::BaseRenderingContext2D"*
  %26 = tail call %"class.WTF::StringImpl"* @_ZNK5blink22BaseRenderingContext2D7lineCapEv(%"class.blink::BaseRenderingContext2D"* %25) #10
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %22
  %32 = load i64, i64* %29, align 8
  %33 = add i64 %32, 8
  %34 = inttoptr i64 %33 to %"class.blink::V8PerIsolateData"**
  %35 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %35, i64 0, i32 5, i32 0, i32 0, i32 0
  %37 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %36, align 8
  %38 = getelementptr inbounds i64, i64* %28, i64 3
  %39 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %37, i64 0, i32 3, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, %26
  br i1 %41, label %42, label %49

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %37, i64 0, i32 1, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = inttoptr i64 %44 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %38, align 8
  br label %56

49:                                               ; preds = %31
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %37, i64* %38, %"class.WTF::StringImpl"* nonnull %26) #10
  br label %56

50:                                               ; preds = %22
  %51 = getelementptr inbounds i64, i64* %28, i64 3
  %52 = load i64, i64* %29, align 8
  %53 = add i64 %52, 200
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %51, align 8
  br label %69

56:                                               ; preds = %42, %46, %49
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #10
  br label %69

69:                                               ; preds = %50, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d27LineCapAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 -1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %8, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  switch i16 %17, label %22 [
    i16 1057, label %18
    i16 1056, label %18
    i16 1040, label %18
  ]

18:                                               ; preds = %1, %1, %1
  %19 = add i64 %8, 19
  %20 = inttoptr i64 %19 to i8**
  %21 = load i8*, i8** %20, align 1
  br label %25

22:                                               ; preds = %1
  %23 = bitcast i64* %7 to %"class.v8::Object"*
  %24 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %23, i32 1) #10
  br label %25

25:                                               ; preds = %18, %22
  %26 = phi i8* [ %21, %18 ], [ %24, %22 ]
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = bitcast i64* %29 to %"class.v8::Isolate"**
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %25
  %36 = ptrtoint %"class.v8::Isolate"* %31 to i64
  %37 = add i64 %36, 160
  %38 = inttoptr i64 %37 to %"class.v8::Value"*
  br label %42

39:                                               ; preds = %25
  %40 = bitcast i64** %5 to %"class.v8::Value"**
  %41 = load %"class.v8::Value"*, %"class.v8::Value"** %40, align 8
  br label %42

42:                                               ; preds = %35, %39
  %43 = phi %"class.v8::Value"* [ %38, %35 ], [ %41, %39 ]
  %44 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %44) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 56, i1 false)
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %47, align 2
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %49 = bitcast i8** %48 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0)>, <2 x i8*>* %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %31, %"class.v8::Isolate"** %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %54 = bitcast %"class.WTF::StringImpl"** %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #10
  %55 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %55) #10
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %3, %"class.v8::Isolate"* %31, %"class.v8::Value"* %43, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %56 = load i32, i32* %52, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %107

58:                                               ; preds = %42
  %59 = getelementptr inbounds i8, i8* %26, i64 16
  %60 = bitcast i8* %59 to %"class.blink::BaseRenderingContext2D"*
  %61 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #10
  %62 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 0, i32 0
  %63 = load %"class.v8::String"*, %"class.v8::String"** %62, align 8
  %64 = icmp eq %"class.v8::String"* %63, null
  br i1 %64, label %67, label %65, !prof !4

65:                                               ; preds = %58
  %66 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %63, i32 0) #10
  br label %88

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %88, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #10
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !4

85:                                               ; preds = %76
  call void @llvm.trap() #10
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %88

88:                                               ; preds = %65, %67, %71, %86
  %89 = phi %"class.WTF::StringImpl"* [ %66, %65 ], [ null, %67 ], [ %69, %71 ], [ %69, %86 ]
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %90, align 8
  call void @_ZN5blink22BaseRenderingContext2D10setLineCapERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %60, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #10
  br label %106

106:                                              ; preds = %88, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #10
  br label %107

107:                                              ; preds = %42, %106
  %108 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  store i8* null, i8** %108, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %112, label %111

111:                                              ; preds = %107
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %109) #10
  br label %112

112:                                              ; preds = %111, %107
  %113 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #10
  br label %129

129:                                              ; preds = %112, %125, %128
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %55) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %130 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %131 = load i64*, i64** %130, align 8
  %132 = icmp eq i64* %131, null
  br i1 %132, label %142, label %133

133:                                              ; preds = %129
  %134 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %51, align 8
  %135 = bitcast %"class.v8::Isolate"* %134 to %"class.v8::internal::Isolate"*
  %136 = load i64, i64* %131, align 8
  %137 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %135, i64 %136) #10
  %138 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %134) #10
  br i1 %138, label %142, label %139

139:                                              ; preds = %133
  %140 = bitcast i64* %137 to %"class.v8::Value"*
  %141 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %134, %"class.v8::Value"* %140) #10
  br label %142

142:                                              ; preds = %139, %133, %129
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #10
  br label %158

158:                                              ; preds = %142, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %44) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d28LineJoinAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %"class.blink::BaseRenderingContext2D"*
  %26 = tail call %"class.WTF::StringImpl"* @_ZNK5blink22BaseRenderingContext2D8lineJoinEv(%"class.blink::BaseRenderingContext2D"* %25) #10
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %22
  %32 = load i64, i64* %29, align 8
  %33 = add i64 %32, 8
  %34 = inttoptr i64 %33 to %"class.blink::V8PerIsolateData"**
  %35 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %35, i64 0, i32 5, i32 0, i32 0, i32 0
  %37 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %36, align 8
  %38 = getelementptr inbounds i64, i64* %28, i64 3
  %39 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %37, i64 0, i32 3, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, %26
  br i1 %41, label %42, label %49

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %37, i64 0, i32 1, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = inttoptr i64 %44 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %38, align 8
  br label %56

49:                                               ; preds = %31
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %37, i64* %38, %"class.WTF::StringImpl"* nonnull %26) #10
  br label %56

50:                                               ; preds = %22
  %51 = getelementptr inbounds i64, i64* %28, i64 3
  %52 = load i64, i64* %29, align 8
  %53 = add i64 %52, 200
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %51, align 8
  br label %69

56:                                               ; preds = %42, %46, %49
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #10
  br label %69

69:                                               ; preds = %50, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d28LineJoinAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 -1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %8, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  switch i16 %17, label %22 [
    i16 1057, label %18
    i16 1056, label %18
    i16 1040, label %18
  ]

18:                                               ; preds = %1, %1, %1
  %19 = add i64 %8, 19
  %20 = inttoptr i64 %19 to i8**
  %21 = load i8*, i8** %20, align 1
  br label %25

22:                                               ; preds = %1
  %23 = bitcast i64* %7 to %"class.v8::Object"*
  %24 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %23, i32 1) #10
  br label %25

25:                                               ; preds = %18, %22
  %26 = phi i8* [ %21, %18 ], [ %24, %22 ]
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = bitcast i64* %29 to %"class.v8::Isolate"**
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %25
  %36 = ptrtoint %"class.v8::Isolate"* %31 to i64
  %37 = add i64 %36, 160
  %38 = inttoptr i64 %37 to %"class.v8::Value"*
  br label %42

39:                                               ; preds = %25
  %40 = bitcast i64** %5 to %"class.v8::Value"**
  %41 = load %"class.v8::Value"*, %"class.v8::Value"** %40, align 8
  br label %42

42:                                               ; preds = %35, %39
  %43 = phi %"class.v8::Value"* [ %38, %35 ], [ %41, %39 ]
  %44 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %44) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 56, i1 false)
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %47, align 2
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %49 = bitcast i8** %48 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0)>, <2 x i8*>* %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %31, %"class.v8::Isolate"** %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %54 = bitcast %"class.WTF::StringImpl"** %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #10
  %55 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %55) #10
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %3, %"class.v8::Isolate"* %31, %"class.v8::Value"* %43, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %56 = load i32, i32* %52, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %107

58:                                               ; preds = %42
  %59 = getelementptr inbounds i8, i8* %26, i64 16
  %60 = bitcast i8* %59 to %"class.blink::BaseRenderingContext2D"*
  %61 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #10
  %62 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 0, i32 0
  %63 = load %"class.v8::String"*, %"class.v8::String"** %62, align 8
  %64 = icmp eq %"class.v8::String"* %63, null
  br i1 %64, label %67, label %65, !prof !4

65:                                               ; preds = %58
  %66 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %63, i32 0) #10
  br label %88

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %88, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #10
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !4

85:                                               ; preds = %76
  call void @llvm.trap() #10
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %88

88:                                               ; preds = %65, %67, %71, %86
  %89 = phi %"class.WTF::StringImpl"* [ %66, %65 ], [ null, %67 ], [ %69, %71 ], [ %69, %86 ]
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %90, align 8
  call void @_ZN5blink22BaseRenderingContext2D11setLineJoinERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %60, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #10
  br label %106

106:                                              ; preds = %88, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #10
  br label %107

107:                                              ; preds = %42, %106
  %108 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  store i8* null, i8** %108, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %112, label %111

111:                                              ; preds = %107
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %109) #10
  br label %112

112:                                              ; preds = %111, %107
  %113 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #10
  br label %129

129:                                              ; preds = %112, %125, %128
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %55) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %130 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %131 = load i64*, i64** %130, align 8
  %132 = icmp eq i64* %131, null
  br i1 %132, label %142, label %133

133:                                              ; preds = %129
  %134 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %51, align 8
  %135 = bitcast %"class.v8::Isolate"* %134 to %"class.v8::internal::Isolate"*
  %136 = load i64, i64* %131, align 8
  %137 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %135, i64 %136) #10
  %138 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %134) #10
  br i1 %138, label %142, label %139

139:                                              ; preds = %133
  %140 = bitcast i64* %137 to %"class.v8::Value"*
  %141 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %134, %"class.v8::Value"* %140) #10
  br label %142

142:                                              ; preds = %139, %133, %129
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #10
  br label %158

158:                                              ; preds = %142, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %44) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d30MiterLimitAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %"class.blink::BaseRenderingContext2D"*
  %26 = tail call double @_ZNK5blink22BaseRenderingContext2D10miterLimitEv(%"class.blink::BaseRenderingContext2D"* %25) #10
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 3
  %30 = getelementptr inbounds i64, i64* %28, i64 1
  %31 = bitcast i64* %30 to %"class.v8::Isolate"**
  %32 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %31, align 8
  %33 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %32, double %26) #10
  %34 = icmp eq %"class.v8::Number"* %33, null
  %35 = bitcast %"class.v8::Number"* %33 to i64*
  %36 = getelementptr inbounds i64, i64* %28, i64 2
  %37 = select i1 %34, i64* %36, i64* %35, !prof !4
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d30MiterLimitAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #10
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i64* %27 to %"class.v8::Isolate"**
  %29 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %23
  %34 = ptrtoint %"class.v8::Isolate"* %29 to i64
  %35 = add i64 %34, 160
  %36 = inttoptr i64 %35 to %"class.v8::Value"*
  br label %40

37:                                               ; preds = %23
  %38 = bitcast i64** %3 to %"class.v8::Value"**
  %39 = load %"class.v8::Value"*, %"class.v8::Value"** %38, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi %"class.v8::Value"* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %42) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 56, i1 false)
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %45, align 2
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %47 = bitcast i8** %46 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0)>, <2 x i8*>* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %29, %"class.v8::Isolate"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %52 = bitcast %"class.WTF::StringImpl"** %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10
  %53 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %41) #10
  br i1 %53, label %54, label %57, !prof !5

54:                                               ; preds = %40
  %55 = bitcast %"class.v8::Value"* %41 to %"class.v8::Number"*
  %56 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %55) #10
  br label %61

57:                                               ; preds = %40
  %58 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %29, %"class.v8::Value"* %41, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %59 = load i32, i32* %50, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %54, %57
  %62 = phi double [ %56, %54 ], [ %58, %57 ]
  %63 = getelementptr inbounds i8, i8* %24, i64 16
  %64 = bitcast i8* %63 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D13setMiterLimitEd(%"class.blink::BaseRenderingContext2D"* %64, double %62) #10
  br label %65

65:                                               ; preds = %57, %61
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %67, null
  br i1 %68, label %78, label %69

69:                                               ; preds = %65
  %70 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, align 8
  %71 = bitcast %"class.v8::Isolate"* %70 to %"class.v8::internal::Isolate"*
  %72 = load i64, i64* %67, align 8
  %73 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %71, i64 %72) #10
  %74 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %70) #10
  br i1 %74, label %78, label %75

75:                                               ; preds = %69
  %76 = bitcast i64* %73 to %"class.v8::Value"*
  %77 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %70, %"class.v8::Value"* %76) #10
  br label %78

78:                                               ; preds = %75, %69, %65
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #10
  br label %94

94:                                               ; preds = %78, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %42) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d34LineDashOffsetAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %"class.blink::BaseRenderingContext2D"*
  %26 = tail call double @_ZNK5blink22BaseRenderingContext2D14lineDashOffsetEv(%"class.blink::BaseRenderingContext2D"* %25) #10
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 3
  %30 = getelementptr inbounds i64, i64* %28, i64 1
  %31 = bitcast i64* %30 to %"class.v8::Isolate"**
  %32 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %31, align 8
  %33 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %32, double %26) #10
  %34 = icmp eq %"class.v8::Number"* %33, null
  %35 = bitcast %"class.v8::Number"* %33 to i64*
  %36 = getelementptr inbounds i64, i64* %28, i64 2
  %37 = select i1 %34, i64* %36, i64* %35, !prof !4
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d34LineDashOffsetAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %1, %1, %1
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %1
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #10
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i64* %27 to %"class.v8::Isolate"**
  %29 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %23
  %34 = ptrtoint %"class.v8::Isolate"* %29 to i64
  %35 = add i64 %34, 160
  %36 = inttoptr i64 %35 to %"class.v8::Value"*
  br label %40

37:                                               ; preds = %23
  %38 = bitcast i64** %3 to %"class.v8::Value"**
  %39 = load %"class.v8::Value"*, %"class.v8::Value"** %38, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi %"class.v8::Value"* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %42) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 56, i1 false)
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %45, align 2
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %47 = bitcast i8** %46 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)>, <2 x i8*>* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %29, %"class.v8::Isolate"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %52 = bitcast %"class.WTF::StringImpl"** %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10
  %53 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %41) #10
  br i1 %53, label %54, label %57, !prof !5

54:                                               ; preds = %40
  %55 = bitcast %"class.v8::Value"* %41 to %"class.v8::Number"*
  %56 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %55) #10
  br label %61

57:                                               ; preds = %40
  %58 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %29, %"class.v8::Value"* %41, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %59 = load i32, i32* %50, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %54, %57
  %62 = phi double [ %56, %54 ], [ %58, %57 ]
  %63 = getelementptr inbounds i8, i8* %24, i64 16
  %64 = bitcast i8* %63 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D17setLineDashOffsetEd(%"class.blink::BaseRenderingContext2D"* %64, double %62) #10
  br label %65

65:                                               ; preds = %57, %61
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %67, null
  br i1 %68, label %78, label %69

69:                                               ; preds = %65
  %70 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %49, align 8
  %71 = bitcast %"class.v8::Isolate"* %70 to %"class.v8::internal::Isolate"*
  %72 = load i64, i64* %67, align 8
  %73 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %71, i64 %72) #10
  %74 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %70) #10
  br i1 %74, label %78, label %75

75:                                               ; preds = %69
  %76 = bitcast i64* %73 to %"class.v8::Value"*
  %77 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %70, %"class.v8::Value"* %76) #10
  br label %78

78:                                               ; preds = %75, %69, %65
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #10
  br label %94

94:                                               ; preds = %78, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %42) #10
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26BeginPathOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %"class.blink::BaseRenderingContext2D"*
  tail call void @_ZN5blink22BaseRenderingContext2D9beginPathEv(%"class.blink::BaseRenderingContext2D"* %25) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26ClearRectOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #10
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !4

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #10
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %166

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #10
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %78) #10
  br i1 %79, label %80, label %83, !prof !5

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Number"*
  %82 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %81) #10
  br label %87

83:                                               ; preds = %76
  %84 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %166

87:                                               ; preds = %80, %83
  %88 = phi double [ %82, %80 ], [ %84, %83 ]
  %89 = load i32, i32* %20, align 8
  %90 = icmp sgt i32 %89, 1
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = load i64*, i64** %4, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 1
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 160
  %96 = inttoptr i64 %95 to %"class.v8::Value"*
  br label %101

97:                                               ; preds = %87
  %98 = load i64*, i64** %44, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 1
  %100 = bitcast i64* %99 to %"class.v8::Value"*
  br label %101

101:                                              ; preds = %91, %97
  %102 = phi %"class.v8::Value"* [ %96, %91 ], [ %100, %97 ]
  %103 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %102) #10
  br i1 %103, label %104, label %107, !prof !5

104:                                              ; preds = %101
  %105 = bitcast %"class.v8::Value"* %102 to %"class.v8::Number"*
  %106 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %105) #10
  br label %109

107:                                              ; preds = %101
  %108 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %102, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %109

109:                                              ; preds = %104, %107
  %110 = phi double [ %106, %104 ], [ %108, %107 ]
  %111 = load i32, i32* %17, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %166

113:                                              ; preds = %109
  %114 = load i32, i32* %20, align 8
  %115 = icmp sgt i32 %114, 2
  br i1 %115, label %122, label %116

116:                                              ; preds = %113
  %117 = load i64*, i64** %4, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %126

122:                                              ; preds = %113
  %123 = load i64*, i64** %44, align 8
  %124 = getelementptr inbounds i64, i64* %123, i64 2
  %125 = bitcast i64* %124 to %"class.v8::Value"*
  br label %126

126:                                              ; preds = %116, %122
  %127 = phi %"class.v8::Value"* [ %121, %116 ], [ %125, %122 ]
  %128 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %127) #10
  br i1 %128, label %129, label %132, !prof !5

129:                                              ; preds = %126
  %130 = bitcast %"class.v8::Value"* %127 to %"class.v8::Number"*
  %131 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %130) #10
  br label %134

132:                                              ; preds = %126
  %133 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %127, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %134

134:                                              ; preds = %129, %132
  %135 = phi double [ %131, %129 ], [ %133, %132 ]
  %136 = load i32, i32* %17, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %166

138:                                              ; preds = %134
  %139 = load i32, i32* %20, align 8
  %140 = icmp sgt i32 %139, 3
  br i1 %140, label %147, label %141

141:                                              ; preds = %138
  %142 = load i64*, i64** %4, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 1
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, 160
  %146 = inttoptr i64 %145 to %"class.v8::Value"*
  br label %151

147:                                              ; preds = %138
  %148 = load i64*, i64** %44, align 8
  %149 = getelementptr inbounds i64, i64* %148, i64 3
  %150 = bitcast i64* %149 to %"class.v8::Value"*
  br label %151

151:                                              ; preds = %141, %147
  %152 = phi %"class.v8::Value"* [ %146, %141 ], [ %150, %147 ]
  %153 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %152) #10
  br i1 %153, label %154, label %157, !prof !5

154:                                              ; preds = %151
  %155 = bitcast %"class.v8::Value"* %152 to %"class.v8::Number"*
  %156 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %155) #10
  br label %159

157:                                              ; preds = %151
  %158 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %152, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %159

159:                                              ; preds = %154, %157
  %160 = phi double [ %156, %154 ], [ %158, %157 ]
  %161 = load i32, i32* %17, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %159
  %164 = getelementptr inbounds i8, i8* %77, i64 16
  %165 = bitcast i8* %164 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D9clearRectEdddd(%"class.blink::BaseRenderingContext2D"* %165, double %88, double %110, double %135, double %160) #10
  br label %166

166:                                              ; preds = %159, %134, %109, %83, %163, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %168 = load i64*, i64** %167, align 8
  %169 = icmp eq i64* %168, null
  br i1 %169, label %179, label %170

170:                                              ; preds = %166
  %171 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %172 = bitcast %"class.v8::Isolate"* %171 to %"class.v8::internal::Isolate"*
  %173 = load i64, i64* %168, align 8
  %174 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %172, i64 %173) #10
  %175 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %171) #10
  br i1 %175, label %179, label %176

176:                                              ; preds = %170
  %177 = bitcast i64* %174 to %"class.v8::Value"*
  %178 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %171, %"class.v8::Value"* %177) #10
  br label %179

179:                                              ; preds = %176, %170, %166
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #10
  br label %195

195:                                              ; preds = %179, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d21ClipOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #10
  %3 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %2, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %18

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %2, i64 0, i32 5
  %8 = load %"class.base::TickClock"*, %"class.base::TickClock"** %7, align 8
  %9 = bitcast %"class.base::TickClock"* %8 to i64 (%"class.base::TickClock"*)***
  %10 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %10, i64 2
  %12 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %11, align 8
  %13 = tail call i64 %12(%"class.base::TickClock"* %8) #10
  %14 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %2, i64 0, i32 4, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %6
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %2) #10
  br label %18

18:                                               ; preds = %1, %6, %17
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %20, 2
  %22 = select i1 %21, i32 %20, i32 2
  switch i32 %22, label %81 [
    i32 2, label %23
    i32 1, label %24
  ]

23:                                               ; preds = %18
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22ClipOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %82

24:                                               ; preds = %18
  %25 = icmp sgt i32 %20, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 160
  %32 = inttoptr i64 %31 to %"class.v8::Value"*
  br label %37

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %35 = bitcast i64** %34 to %"class.v8::Value"**
  %36 = load %"class.v8::Value"*, %"class.v8::Value"** %35, align 8
  br label %37

37:                                               ; preds = %26, %33
  %38 = phi %"class.v8::Value"* [ %32, %26 ], [ %36, %33 ]
  %39 = bitcast %"class.v8::Value"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 3
  %42 = icmp eq i64 %41, 1
  br i1 %42, label %43, label %61

43:                                               ; preds = %37
  %44 = add i64 %40, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = and i64 %40, -4294967296
  %48 = zext i32 %46 to i64
  %49 = or i64 %47, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %52, 67
  br i1 %53, label %54, label %61

54:                                               ; preds = %43
  %55 = add i64 %40, 23
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, -2
  %59 = icmp eq i32 %58, 10
  br i1 %59, label %60, label %61

60:                                               ; preds = %54
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22ClipOperationOverload1ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %82

61:                                               ; preds = %43, %37, %54
  %62 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds i64, i64* %63, i64 1
  %65 = load i64, i64* %64, align 8
  br i1 %25, label %69, label %66

66:                                               ; preds = %61
  %67 = add i64 %65, 160
  %68 = inttoptr i64 %67 to %"class.v8::Value"*
  br label %73

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %71 = bitcast i64** %70 to %"class.v8::Value"**
  %72 = load %"class.v8::Value"*, %"class.v8::Value"** %71, align 8
  br label %73

73:                                               ; preds = %66, %69
  %74 = phi %"class.v8::Value"* [ %68, %66 ], [ %72, %69 ]
  %75 = add i64 %65, 8
  %76 = inttoptr i64 %75 to %"class.blink::V8PerIsolateData"**
  %77 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %76, align 8
  %78 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %77, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink8V8Path2D18wrapper_type_info_E, %"class.v8::Value"* %74) #10
  br i1 %78, label %79, label %80

79:                                               ; preds = %73
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22ClipOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %82

80:                                               ; preds = %73
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22ClipOperationOverload1ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %82

81:                                               ; preds = %18
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22ClipOperationOverload1ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %82

82:                                               ; preds = %79, %80, %81, %60, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d37CreateLinearGradientOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #10
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !4

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #10
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %173

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #10
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %80 = load i32, i32* %17, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %173

82:                                               ; preds = %76
  %83 = load i32, i32* %20, align 8
  %84 = icmp sgt i32 %83, 1
  br i1 %84, label %91, label %85

85:                                               ; preds = %82
  %86 = load i64*, i64** %4, align 8
  %87 = getelementptr inbounds i64, i64* %86, i64 1
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 160
  %90 = inttoptr i64 %89 to %"class.v8::Value"*
  br label %95

91:                                               ; preds = %82
  %92 = load i64*, i64** %44, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 1
  %94 = bitcast i64* %93 to %"class.v8::Value"*
  br label %95

95:                                               ; preds = %85, %91
  %96 = phi %"class.v8::Value"* [ %90, %85 ], [ %94, %91 ]
  %97 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %96, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %98 = load i32, i32* %17, align 8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %173

100:                                              ; preds = %95
  %101 = load i32, i32* %20, align 8
  %102 = icmp sgt i32 %101, 2
  br i1 %102, label %109, label %103

103:                                              ; preds = %100
  %104 = load i64*, i64** %4, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 1
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, 160
  %108 = inttoptr i64 %107 to %"class.v8::Value"*
  br label %113

109:                                              ; preds = %100
  %110 = load i64*, i64** %44, align 8
  %111 = getelementptr inbounds i64, i64* %110, i64 2
  %112 = bitcast i64* %111 to %"class.v8::Value"*
  br label %113

113:                                              ; preds = %103, %109
  %114 = phi %"class.v8::Value"* [ %108, %103 ], [ %112, %109 ]
  %115 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %114, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %116 = load i32, i32* %17, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %173

118:                                              ; preds = %113
  %119 = load i32, i32* %20, align 8
  %120 = icmp sgt i32 %119, 3
  br i1 %120, label %127, label %121

121:                                              ; preds = %118
  %122 = load i64*, i64** %4, align 8
  %123 = getelementptr inbounds i64, i64* %122, i64 1
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 160
  %126 = inttoptr i64 %125 to %"class.v8::Value"*
  br label %131

127:                                              ; preds = %118
  %128 = load i64*, i64** %44, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 3
  %130 = bitcast i64* %129 to %"class.v8::Value"*
  br label %131

131:                                              ; preds = %121, %127
  %132 = phi %"class.v8::Value"* [ %126, %121 ], [ %130, %127 ]
  %133 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %132, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %134 = load i32, i32* %17, align 8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %173

136:                                              ; preds = %131
  %137 = getelementptr inbounds i8, i8* %77, i64 16
  %138 = bitcast i8* %137 to %"class.blink::BaseRenderingContext2D"*
  %139 = call %"class.blink::CanvasGradient"* @_ZN5blink22BaseRenderingContext2D20createLinearGradientEdddd(%"class.blink::BaseRenderingContext2D"* %138, double %79, double %97, double %115, double %133) #10
  %140 = getelementptr inbounds %"class.blink::CanvasGradient", %"class.blink::CanvasGradient"* %139, i64 0, i32 0
  %141 = icmp eq %"class.blink::CanvasGradient"* %139, null
  %142 = load i64*, i64** %4, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 3
  br i1 %141, label %144, label %150, !prof !4

144:                                              ; preds = %136
  %145 = getelementptr inbounds i64, i64* %142, i64 1
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, 176
  %148 = inttoptr i64 %147 to i64*
  %149 = load i64, i64* %148, align 8
  store i64 %149, i64* %143, align 8
  br label %173

150:                                              ; preds = %136
  %151 = bitcast i8* %77 to %"class.blink::ScriptWrappable"*
  %152 = load i64*, i64** %44, align 8
  %153 = getelementptr inbounds i64, i64* %152, i64 -1
  %154 = bitcast i64* %153 to %"class.v8::Object"*
  %155 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %143, %"class.blink::ScriptWrappable"* nonnull %140, %"class.v8::Object"* %154, %"class.blink::ScriptWrappable"* %151) #10
  br i1 %155, label %173, label %156

156:                                              ; preds = %150
  %157 = load i64*, i64** %44, align 8
  %158 = getelementptr inbounds i64, i64* %157, i64 -1
  %159 = bitcast i64* %158 to %"class.v8::Object"*
  %160 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %159) #10
  %161 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %160) #10
  %162 = bitcast %"class.blink::CanvasGradient"* %139 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %163 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %162, align 8
  %164 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %163, i64 7
  %165 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %164, align 8
  %166 = call %"class.v8::Value"* %165(%"class.blink::ScriptWrappable"* nonnull %140, %"class.blink::ScriptState"* %161) #10
  %167 = icmp eq %"class.v8::Value"* %166, null
  br i1 %167, label %173, label %168

168:                                              ; preds = %156
  %169 = load i64*, i64** %4, align 8
  %170 = getelementptr inbounds i64, i64* %169, i64 3
  %171 = bitcast %"class.v8::Value"* %166 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %170, align 8
  br label %173

173:                                              ; preds = %131, %113, %95, %76, %168, %156, %150, %144, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %174 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %175 = load i64*, i64** %174, align 8
  %176 = icmp eq i64* %175, null
  br i1 %176, label %186, label %177

177:                                              ; preds = %173
  %178 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %179 = bitcast %"class.v8::Isolate"* %178 to %"class.v8::internal::Isolate"*
  %180 = load i64, i64* %175, align 8
  %181 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %179, i64 %180) #10
  %182 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %178) #10
  br i1 %182, label %186, label %183

183:                                              ; preds = %177
  %184 = bitcast i64* %181 to %"class.v8::Value"*
  %185 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %178, %"class.v8::Value"* %184) #10
  br label %186

186:                                              ; preds = %183, %177, %173
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %202, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  br i1 %193, label %196, label %198

196:                                              ; preds = %189
  %197 = add i32 %195, -1
  store i32 %197, i32* %194, align 4
  br label %198

198:                                              ; preds = %196, %189
  %199 = phi i32 [ %197, %196 ], [ %195, %189 ]
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %198
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %187) #10
  br label %202

202:                                              ; preds = %186, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d30CreatePatternOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #10
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 2
  br i1 %24, label %25, label %45, !prof !4

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %23) #10
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #10
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  br label %213

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = bitcast i64* %48 to %"class.v8::Object"*
  %50 = load i64, i64* %48, align 8
  %51 = add i64 %50, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i64 %50, -4294967296
  %55 = zext i32 %53 to i64
  %56 = or i64 %54, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load i16, i16* %58, align 2
  switch i16 %59, label %64 [
    i16 1057, label %60
    i16 1056, label %60
    i16 1040, label %60
  ]

60:                                               ; preds = %45, %45, %45
  %61 = add i64 %50, 19
  %62 = inttoptr i64 %61 to i8**
  %63 = load i8*, i8** %62, align 1
  br label %66

64:                                               ; preds = %45
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %49, i32 1) #10
  br label %66

66:                                               ; preds = %60, %64
  %67 = phi i8* [ %63, %60 ], [ %65, %64 ]
  %68 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %49) #10
  %69 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %68)
  %70 = load i32, i32* %22, align 8
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %78, label %72

72:                                               ; preds = %66
  %73 = load i64*, i64** %6, align 8
  %74 = getelementptr inbounds i64, i64* %73, i64 1
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, 160
  %77 = inttoptr i64 %76 to %"class.v8::Value"*
  br label %81

78:                                               ; preds = %66
  %79 = bitcast i64** %46 to %"class.v8::Value"**
  %80 = load %"class.v8::Value"*, %"class.v8::Value"** %79, align 8
  br label %81

81:                                               ; preds = %72, %78
  %82 = phi %"class.v8::Value"* [ %77, %72 ], [ %80, %78 ]
  %83 = call %"class.blink::V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame"* @_ZN5blink134V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %82, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %84 = load i32, i32* %19, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %213

86:                                               ; preds = %81
  %87 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %87) #10
  %88 = load i32, i32* %22, align 8
  %89 = icmp sgt i32 %88, 1
  br i1 %89, label %96, label %90

90:                                               ; preds = %86
  %91 = load i64*, i64** %6, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, 160
  %95 = inttoptr i64 %94 to %"class.v8::Value"*
  br label %100

96:                                               ; preds = %86
  %97 = load i64*, i64** %46, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = bitcast i64* %98 to %"class.v8::Value"*
  br label %100

100:                                              ; preds = %90, %96
  %101 = phi %"class.v8::Value"* [ %95, %90 ], [ %99, %96 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE2EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %101, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %102 = load i32, i32* %19, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %190

104:                                              ; preds = %100
  %105 = getelementptr inbounds i8, i8* %67, i64 16
  %106 = bitcast i8* %105 to %"class.blink::BaseRenderingContext2D"*
  %107 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #10
  %108 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %109 = load %"class.v8::String"*, %"class.v8::String"** %108, align 8
  %110 = icmp eq %"class.v8::String"* %109, null
  br i1 %110, label %113, label %111, !prof !4

111:                                              ; preds = %104
  %112 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %109, i32 0) #10
  br label %134

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %134, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %134

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i33
  %126 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %125, i33 1) #10
  %127 = extractvalue { i33, i1 } %126, 1
  %128 = extractvalue { i33, i1 } %126, 0
  %129 = icmp slt i33 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %132, !prof !4

131:                                              ; preds = %122
  call void @llvm.trap() #10
  unreachable

132:                                              ; preds = %122
  %133 = trunc i33 %128 to i32
  store i32 %133, i32* %123, align 4
  br label %134

134:                                              ; preds = %111, %113, %117, %132
  %135 = phi %"class.WTF::StringImpl"* [ %112, %111 ], [ null, %113 ], [ %115, %117 ], [ %115, %132 ]
  %136 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %136, align 8
  %137 = call %"class.blink::CanvasPattern"* @_ZN5blink22BaseRenderingContext2D13createPatternEPNS_11ScriptStateEPKNS_134V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrameERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::BaseRenderingContext2D"* %106, %"class.blink::ScriptState"* %69, %"class.blink::V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame"* %83, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #10
  br label %153

153:                                              ; preds = %134, %149, %152
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #10
  %154 = load i32, i32* %19, align 8
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %190

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.blink::CanvasPattern", %"class.blink::CanvasPattern"* %137, i64 0, i32 0
  %158 = icmp eq %"class.blink::CanvasPattern"* %137, null
  %159 = load i64*, i64** %6, align 8
  %160 = getelementptr inbounds i64, i64* %159, i64 3
  br i1 %158, label %161, label %167, !prof !4

161:                                              ; preds = %156
  %162 = getelementptr inbounds i64, i64* %159, i64 1
  %163 = load i64, i64* %162, align 8
  %164 = add i64 %163, 176
  %165 = inttoptr i64 %164 to i64*
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %160, align 8
  br label %190

167:                                              ; preds = %156
  %168 = bitcast i8* %67 to %"class.blink::ScriptWrappable"*
  %169 = load i64*, i64** %46, align 8
  %170 = getelementptr inbounds i64, i64* %169, i64 -1
  %171 = bitcast i64* %170 to %"class.v8::Object"*
  %172 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %160, %"class.blink::ScriptWrappable"* nonnull %157, %"class.v8::Object"* %171, %"class.blink::ScriptWrappable"* %168) #10
  br i1 %172, label %190, label %173

173:                                              ; preds = %167
  %174 = load i64*, i64** %46, align 8
  %175 = getelementptr inbounds i64, i64* %174, i64 -1
  %176 = bitcast i64* %175 to %"class.v8::Object"*
  %177 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %176) #10
  %178 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %177) #10
  %179 = bitcast %"class.blink::CanvasPattern"* %137 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %180 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %179, align 8
  %181 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %180, i64 7
  %182 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %181, align 8
  %183 = call %"class.v8::Value"* %182(%"class.blink::ScriptWrappable"* nonnull %157, %"class.blink::ScriptState"* %178) #10
  %184 = icmp eq %"class.v8::Value"* %183, null
  br i1 %184, label %190, label %185

185:                                              ; preds = %173
  %186 = load i64*, i64** %6, align 8
  %187 = getelementptr inbounds i64, i64* %186, i64 3
  %188 = bitcast %"class.v8::Value"* %183 to i64*
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %187, align 8
  br label %190

190:                                              ; preds = %153, %100, %185, %173, %167, %161
  %191 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %192 = load i8*, i8** %191, align 8
  store i8* null, i8** %191, align 8
  %193 = icmp eq i8* %192, null
  br i1 %193, label %195, label %194

194:                                              ; preds = %190
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %192) #10
  br label %195

195:                                              ; preds = %194, %190
  %196 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %196, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #10
  br label %212

212:                                              ; preds = %195, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %87) #10
  br label %213

213:                                              ; preds = %81, %212, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %214 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  br i1 %216, label %226, label %217

217:                                              ; preds = %213
  %218 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %219 = bitcast %"class.v8::Isolate"* %218 to %"class.v8::internal::Isolate"*
  %220 = load i64, i64* %215, align 8
  %221 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %219, i64 %220) #10
  %222 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %218) #10
  br i1 %222, label %226, label %223

223:                                              ; preds = %217
  %224 = bitcast i64* %221 to %"class.v8::Value"*
  %225 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %218, %"class.v8::Value"* %224) #10
  br label %226

226:                                              ; preds = %223, %217, %213
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #10
  br label %242

242:                                              ; preds = %226, %238, %241
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d37CreateRadialGradientOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #10
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 6
  br i1 %22, label %23, label %43, !prof !4

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 6, i32 %21) #10
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %212

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #10
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %80 = load i32, i32* %17, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %212

82:                                               ; preds = %76
  %83 = load i32, i32* %20, align 8
  %84 = icmp sgt i32 %83, 1
  br i1 %84, label %91, label %85

85:                                               ; preds = %82
  %86 = load i64*, i64** %4, align 8
  %87 = getelementptr inbounds i64, i64* %86, i64 1
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 160
  %90 = inttoptr i64 %89 to %"class.v8::Value"*
  br label %95

91:                                               ; preds = %82
  %92 = load i64*, i64** %44, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 1
  %94 = bitcast i64* %93 to %"class.v8::Value"*
  br label %95

95:                                               ; preds = %85, %91
  %96 = phi %"class.v8::Value"* [ %90, %85 ], [ %94, %91 ]
  %97 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %96, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %98 = load i32, i32* %17, align 8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %212

100:                                              ; preds = %95
  %101 = load i32, i32* %20, align 8
  %102 = icmp sgt i32 %101, 2
  br i1 %102, label %109, label %103

103:                                              ; preds = %100
  %104 = load i64*, i64** %4, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 1
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, 160
  %108 = inttoptr i64 %107 to %"class.v8::Value"*
  br label %113

109:                                              ; preds = %100
  %110 = load i64*, i64** %44, align 8
  %111 = getelementptr inbounds i64, i64* %110, i64 2
  %112 = bitcast i64* %111 to %"class.v8::Value"*
  br label %113

113:                                              ; preds = %103, %109
  %114 = phi %"class.v8::Value"* [ %108, %103 ], [ %112, %109 ]
  %115 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %114, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %116 = load i32, i32* %17, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %212

118:                                              ; preds = %113
  %119 = load i32, i32* %20, align 8
  %120 = icmp sgt i32 %119, 3
  br i1 %120, label %127, label %121

121:                                              ; preds = %118
  %122 = load i64*, i64** %4, align 8
  %123 = getelementptr inbounds i64, i64* %122, i64 1
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 160
  %126 = inttoptr i64 %125 to %"class.v8::Value"*
  br label %131

127:                                              ; preds = %118
  %128 = load i64*, i64** %44, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 3
  %130 = bitcast i64* %129 to %"class.v8::Value"*
  br label %131

131:                                              ; preds = %121, %127
  %132 = phi %"class.v8::Value"* [ %126, %121 ], [ %130, %127 ]
  %133 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %132, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %134 = load i32, i32* %17, align 8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %212

136:                                              ; preds = %131
  %137 = load i32, i32* %20, align 8
  %138 = icmp sgt i32 %137, 4
  br i1 %138, label %145, label %139

139:                                              ; preds = %136
  %140 = load i64*, i64** %4, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 1
  %142 = load i64, i64* %141, align 8
  %143 = add i64 %142, 160
  %144 = inttoptr i64 %143 to %"class.v8::Value"*
  br label %149

145:                                              ; preds = %136
  %146 = load i64*, i64** %44, align 8
  %147 = getelementptr inbounds i64, i64* %146, i64 4
  %148 = bitcast i64* %147 to %"class.v8::Value"*
  br label %149

149:                                              ; preds = %139, %145
  %150 = phi %"class.v8::Value"* [ %144, %139 ], [ %148, %145 ]
  %151 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %150, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %152 = load i32, i32* %17, align 8
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %212

154:                                              ; preds = %149
  %155 = load i32, i32* %20, align 8
  %156 = icmp sgt i32 %155, 5
  br i1 %156, label %163, label %157

157:                                              ; preds = %154
  %158 = load i64*, i64** %4, align 8
  %159 = getelementptr inbounds i64, i64* %158, i64 1
  %160 = load i64, i64* %159, align 8
  %161 = add i64 %160, 160
  %162 = inttoptr i64 %161 to %"class.v8::Value"*
  br label %167

163:                                              ; preds = %154
  %164 = load i64*, i64** %44, align 8
  %165 = getelementptr inbounds i64, i64* %164, i64 5
  %166 = bitcast i64* %165 to %"class.v8::Value"*
  br label %167

167:                                              ; preds = %157, %163
  %168 = phi %"class.v8::Value"* [ %162, %157 ], [ %166, %163 ]
  %169 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %168, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %170 = load i32, i32* %17, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %212

172:                                              ; preds = %167
  %173 = getelementptr inbounds i8, i8* %77, i64 16
  %174 = bitcast i8* %173 to %"class.blink::BaseRenderingContext2D"*
  %175 = call %"class.blink::CanvasGradient"* @_ZN5blink22BaseRenderingContext2D20createRadialGradientEddddddRNS_14ExceptionStateE(%"class.blink::BaseRenderingContext2D"* %174, double %79, double %97, double %115, double %133, double %151, double %169, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %176 = load i32, i32* %17, align 8
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %212

178:                                              ; preds = %172
  %179 = getelementptr inbounds %"class.blink::CanvasGradient", %"class.blink::CanvasGradient"* %175, i64 0, i32 0
  %180 = icmp eq %"class.blink::CanvasGradient"* %175, null
  %181 = load i64*, i64** %4, align 8
  %182 = getelementptr inbounds i64, i64* %181, i64 3
  br i1 %180, label %183, label %189, !prof !4

183:                                              ; preds = %178
  %184 = getelementptr inbounds i64, i64* %181, i64 1
  %185 = load i64, i64* %184, align 8
  %186 = add i64 %185, 176
  %187 = inttoptr i64 %186 to i64*
  %188 = load i64, i64* %187, align 8
  store i64 %188, i64* %182, align 8
  br label %212

189:                                              ; preds = %178
  %190 = bitcast i8* %77 to %"class.blink::ScriptWrappable"*
  %191 = load i64*, i64** %44, align 8
  %192 = getelementptr inbounds i64, i64* %191, i64 -1
  %193 = bitcast i64* %192 to %"class.v8::Object"*
  %194 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %182, %"class.blink::ScriptWrappable"* nonnull %179, %"class.v8::Object"* %193, %"class.blink::ScriptWrappable"* %190) #10
  br i1 %194, label %212, label %195

195:                                              ; preds = %189
  %196 = load i64*, i64** %44, align 8
  %197 = getelementptr inbounds i64, i64* %196, i64 -1
  %198 = bitcast i64* %197 to %"class.v8::Object"*
  %199 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %198) #10
  %200 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %199) #10
  %201 = bitcast %"class.blink::CanvasGradient"* %175 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %202 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %201, align 8
  %203 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %202, i64 7
  %204 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %203, align 8
  %205 = call %"class.v8::Value"* %204(%"class.blink::ScriptWrappable"* nonnull %179, %"class.blink::ScriptState"* %200) #10
  %206 = icmp eq %"class.v8::Value"* %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %195
  %208 = load i64*, i64** %4, align 8
  %209 = getelementptr inbounds i64, i64* %208, i64 3
  %210 = bitcast %"class.v8::Value"* %205 to i64*
  %211 = load i64, i64* %210, align 8
  store i64 %211, i64* %209, align 8
  br label %212

212:                                              ; preds = %172, %167, %149, %131, %113, %95, %76, %207, %195, %189, %183, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %213 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %214 = load i64*, i64** %213, align 8
  %215 = icmp eq i64* %214, null
  br i1 %215, label %225, label %216

216:                                              ; preds = %212
  %217 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %218 = bitcast %"class.v8::Isolate"* %217 to %"class.v8::internal::Isolate"*
  %219 = load i64, i64* %214, align 8
  %220 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %218, i64 %219) #10
  %221 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %217) #10
  br i1 %221, label %225, label %222

222:                                              ; preds = %216
  %223 = bitcast i64* %220 to %"class.v8::Value"*
  %224 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %217, %"class.v8::Value"* %223) #10
  br label %225

225:                                              ; preds = %222, %216, %212
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %237

235:                                              ; preds = %228
  %236 = add i32 %234, -1
  store i32 %236, i32* %233, align 4
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i32 [ %236, %235 ], [ %234, %228 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %226) #10
  br label %241

241:                                              ; preds = %225, %237, %240
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26DrawImageOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #10
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 5
  %16 = load %"class.base::TickClock"*, %"class.base::TickClock"** %15, align 8
  %17 = bitcast %"class.base::TickClock"* %16 to i64 (%"class.base::TickClock"*)***
  %18 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, i64 2
  %20 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::TickClock"* %16) #10
  %22 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 4, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %14
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %10) #10
  br label %26

26:                                               ; preds = %1, %14, %25
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp slt i32 %28, 9
  %30 = select i1 %29, i32 %28, i32 9
  switch i32 %30, label %713 [
    i32 9, label %31
    i32 5, label %341
    i32 3, label %552
  ]

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 1
  %35 = bitcast i64* %34 to %"class.v8::Isolate"**
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  %37 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %37) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 56, i1 false) #10
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 6, i16* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %40, align 2
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %42 = bitcast i8** %41 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)>, <2 x i8*>* %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  store %"class.v8::Isolate"* %36, %"class.v8::Isolate"** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %47 = bitcast %"class.WTF::StringImpl"** %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #10
  br i1 %29, label %48, label %68, !prof !4

48:                                               ; preds = %31
  %49 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #10
  %50 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 9, i32 %28) #10
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %51, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #10
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #10
  br label %67

67:                                               ; preds = %66, %63, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #10
  br label %312

68:                                               ; preds = %31
  %69 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %70 = load i64*, i64** %69, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  %72 = bitcast i64* %71 to %"class.v8::Object"*
  %73 = load i64, i64* %71, align 8
  %74 = add i64 %73, -1
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = and i64 %73, -4294967296
  %78 = zext i32 %76 to i64
  %79 = or i64 %77, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load i16, i16* %81, align 2
  switch i16 %82, label %87 [
    i16 1057, label %83
    i16 1056, label %83
    i16 1040, label %83
  ]

83:                                               ; preds = %68, %68, %68
  %84 = add i64 %73, 19
  %85 = inttoptr i64 %84 to i8**
  %86 = load i8*, i8** %85, align 1
  br label %89

87:                                               ; preds = %68
  %88 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %72, i32 1) #10
  br label %89

89:                                               ; preds = %87, %83
  %90 = phi i8* [ %86, %83 ], [ %88, %87 ]
  %91 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %72) #10
  %92 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %91) #10
  %93 = load i32, i32* %27, align 8
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %101, label %95

95:                                               ; preds = %89
  %96 = load i64*, i64** %32, align 8
  %97 = getelementptr inbounds i64, i64* %96, i64 1
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 160
  %100 = inttoptr i64 %99 to %"class.v8::Value"*
  br label %104

101:                                              ; preds = %89
  %102 = bitcast i64** %69 to %"class.v8::Value"**
  %103 = load %"class.v8::Value"*, %"class.v8::Value"** %102, align 8
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi %"class.v8::Value"* [ %100, %95 ], [ %103, %101 ]
  %106 = call %"class.blink::V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame"* @_ZN5blink134V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %36, %"class.v8::Value"* %105, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #10
  %107 = load i32, i32* %45, align 8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %312

109:                                              ; preds = %104
  %110 = load i32, i32* %27, align 8
  %111 = icmp sgt i32 %110, 1
  br i1 %111, label %118, label %112

112:                                              ; preds = %109
  %113 = load i64*, i64** %32, align 8
  %114 = getelementptr inbounds i64, i64* %113, i64 1
  %115 = load i64, i64* %114, align 8
  %116 = add i64 %115, 160
  %117 = inttoptr i64 %116 to %"class.v8::Value"*
  br label %122

118:                                              ; preds = %109
  %119 = load i64*, i64** %69, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = bitcast i64* %120 to %"class.v8::Value"*
  br label %122

122:                                              ; preds = %118, %112
  %123 = phi %"class.v8::Value"* [ %117, %112 ], [ %121, %118 ]
  %124 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %123) #10
  br i1 %124, label %125, label %128, !prof !5

125:                                              ; preds = %122
  %126 = bitcast %"class.v8::Value"* %123 to %"class.v8::Number"*
  %127 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %126) #10
  br label %130

128:                                              ; preds = %122
  %129 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %36, %"class.v8::Value"* %123, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #10
  br label %130

130:                                              ; preds = %128, %125
  %131 = phi double [ %127, %125 ], [ %129, %128 ]
  %132 = load i32, i32* %45, align 8
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %312

134:                                              ; preds = %130
  %135 = load i32, i32* %27, align 8
  %136 = icmp sgt i32 %135, 2
  br i1 %136, label %143, label %137

137:                                              ; preds = %134
  %138 = load i64*, i64** %32, align 8
  %139 = getelementptr inbounds i64, i64* %138, i64 1
  %140 = load i64, i64* %139, align 8
  %141 = add i64 %140, 160
  %142 = inttoptr i64 %141 to %"class.v8::Value"*
  br label %147

143:                                              ; preds = %134
  %144 = load i64*, i64** %69, align 8
  %145 = getelementptr inbounds i64, i64* %144, i64 2
  %146 = bitcast i64* %145 to %"class.v8::Value"*
  br label %147

147:                                              ; preds = %143, %137
  %148 = phi %"class.v8::Value"* [ %142, %137 ], [ %146, %143 ]
  %149 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %148) #10
  br i1 %149, label %150, label %153, !prof !5

150:                                              ; preds = %147
  %151 = bitcast %"class.v8::Value"* %148 to %"class.v8::Number"*
  %152 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %151) #10
  br label %155

153:                                              ; preds = %147
  %154 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %36, %"class.v8::Value"* %148, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #10
  br label %155

155:                                              ; preds = %153, %150
  %156 = phi double [ %152, %150 ], [ %154, %153 ]
  %157 = load i32, i32* %45, align 8
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %312

159:                                              ; preds = %155
  %160 = load i32, i32* %27, align 8
  %161 = icmp sgt i32 %160, 3
  br i1 %161, label %168, label %162

162:                                              ; preds = %159
  %163 = load i64*, i64** %32, align 8
  %164 = getelementptr inbounds i64, i64* %163, i64 1
  %165 = load i64, i64* %164, align 8
  %166 = add i64 %165, 160
  %167 = inttoptr i64 %166 to %"class.v8::Value"*
  br label %172

168:                                              ; preds = %159
  %169 = load i64*, i64** %69, align 8
  %170 = getelementptr inbounds i64, i64* %169, i64 3
  %171 = bitcast i64* %170 to %"class.v8::Value"*
  br label %172

172:                                              ; preds = %168, %162
  %173 = phi %"class.v8::Value"* [ %167, %162 ], [ %171, %168 ]
  %174 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %173) #10
  br i1 %174, label %175, label %178, !prof !5

175:                                              ; preds = %172
  %176 = bitcast %"class.v8::Value"* %173 to %"class.v8::Number"*
  %177 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %176) #10
  br label %180

178:                                              ; preds = %172
  %179 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %36, %"class.v8::Value"* %173, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #10
  br label %180

180:                                              ; preds = %178, %175
  %181 = phi double [ %177, %175 ], [ %179, %178 ]
  %182 = load i32, i32* %45, align 8
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %312

184:                                              ; preds = %180
  %185 = load i32, i32* %27, align 8
  %186 = icmp sgt i32 %185, 4
  br i1 %186, label %193, label %187

187:                                              ; preds = %184
  %188 = load i64*, i64** %32, align 8
  %189 = getelementptr inbounds i64, i64* %188, i64 1
  %190 = load i64, i64* %189, align 8
  %191 = add i64 %190, 160
  %192 = inttoptr i64 %191 to %"class.v8::Value"*
  br label %197

193:                                              ; preds = %184
  %194 = load i64*, i64** %69, align 8
  %195 = getelementptr inbounds i64, i64* %194, i64 4
  %196 = bitcast i64* %195 to %"class.v8::Value"*
  br label %197

197:                                              ; preds = %193, %187
  %198 = phi %"class.v8::Value"* [ %192, %187 ], [ %196, %193 ]
  %199 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %198) #10
  br i1 %199, label %200, label %203, !prof !5

200:                                              ; preds = %197
  %201 = bitcast %"class.v8::Value"* %198 to %"class.v8::Number"*
  %202 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %201) #10
  br label %205

203:                                              ; preds = %197
  %204 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %36, %"class.v8::Value"* %198, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #10
  br label %205

205:                                              ; preds = %203, %200
  %206 = phi double [ %202, %200 ], [ %204, %203 ]
  %207 = load i32, i32* %45, align 8
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %312

209:                                              ; preds = %205
  %210 = load i32, i32* %27, align 8
  %211 = icmp sgt i32 %210, 5
  br i1 %211, label %218, label %212

212:                                              ; preds = %209
  %213 = load i64*, i64** %32, align 8
  %214 = getelementptr inbounds i64, i64* %213, i64 1
  %215 = load i64, i64* %214, align 8
  %216 = add i64 %215, 160
  %217 = inttoptr i64 %216 to %"class.v8::Value"*
  br label %222

218:                                              ; preds = %209
  %219 = load i64*, i64** %69, align 8
  %220 = getelementptr inbounds i64, i64* %219, i64 5
  %221 = bitcast i64* %220 to %"class.v8::Value"*
  br label %222

222:                                              ; preds = %218, %212
  %223 = phi %"class.v8::Value"* [ %217, %212 ], [ %221, %218 ]
  %224 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %223) #10
  br i1 %224, label %225, label %228, !prof !5

225:                                              ; preds = %222
  %226 = bitcast %"class.v8::Value"* %223 to %"class.v8::Number"*
  %227 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %226) #10
  br label %230

228:                                              ; preds = %222
  %229 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %36, %"class.v8::Value"* %223, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #10
  br label %230

230:                                              ; preds = %228, %225
  %231 = phi double [ %227, %225 ], [ %229, %228 ]
  %232 = load i32, i32* %45, align 8
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %312

234:                                              ; preds = %230
  %235 = load i32, i32* %27, align 8
  %236 = icmp sgt i32 %235, 6
  br i1 %236, label %243, label %237

237:                                              ; preds = %234
  %238 = load i64*, i64** %32, align 8
  %239 = getelementptr inbounds i64, i64* %238, i64 1
  %240 = load i64, i64* %239, align 8
  %241 = add i64 %240, 160
  %242 = inttoptr i64 %241 to %"class.v8::Value"*
  br label %247

243:                                              ; preds = %234
  %244 = load i64*, i64** %69, align 8
  %245 = getelementptr inbounds i64, i64* %244, i64 6
  %246 = bitcast i64* %245 to %"class.v8::Value"*
  br label %247

247:                                              ; preds = %243, %237
  %248 = phi %"class.v8::Value"* [ %242, %237 ], [ %246, %243 ]
  %249 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %248) #10
  br i1 %249, label %250, label %253, !prof !5

250:                                              ; preds = %247
  %251 = bitcast %"class.v8::Value"* %248 to %"class.v8::Number"*
  %252 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %251) #10
  br label %255

253:                                              ; preds = %247
  %254 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %36, %"class.v8::Value"* %248, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #10
  br label %255

255:                                              ; preds = %253, %250
  %256 = phi double [ %252, %250 ], [ %254, %253 ]
  %257 = load i32, i32* %45, align 8
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %312

259:                                              ; preds = %255
  %260 = load i32, i32* %27, align 8
  %261 = icmp sgt i32 %260, 7
  br i1 %261, label %268, label %262

262:                                              ; preds = %259
  %263 = load i64*, i64** %32, align 8
  %264 = getelementptr inbounds i64, i64* %263, i64 1
  %265 = load i64, i64* %264, align 8
  %266 = add i64 %265, 160
  %267 = inttoptr i64 %266 to %"class.v8::Value"*
  br label %272

268:                                              ; preds = %259
  %269 = load i64*, i64** %69, align 8
  %270 = getelementptr inbounds i64, i64* %269, i64 7
  %271 = bitcast i64* %270 to %"class.v8::Value"*
  br label %272

272:                                              ; preds = %268, %262
  %273 = phi %"class.v8::Value"* [ %267, %262 ], [ %271, %268 ]
  %274 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %273) #10
  br i1 %274, label %275, label %278, !prof !5

275:                                              ; preds = %272
  %276 = bitcast %"class.v8::Value"* %273 to %"class.v8::Number"*
  %277 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %276) #10
  br label %280

278:                                              ; preds = %272
  %279 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %36, %"class.v8::Value"* %273, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #10
  br label %280

280:                                              ; preds = %278, %275
  %281 = phi double [ %277, %275 ], [ %279, %278 ]
  %282 = load i32, i32* %45, align 8
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %312

284:                                              ; preds = %280
  %285 = load i32, i32* %27, align 8
  %286 = icmp sgt i32 %285, 8
  br i1 %286, label %293, label %287

287:                                              ; preds = %284
  %288 = load i64*, i64** %32, align 8
  %289 = getelementptr inbounds i64, i64* %288, i64 1
  %290 = load i64, i64* %289, align 8
  %291 = add i64 %290, 160
  %292 = inttoptr i64 %291 to %"class.v8::Value"*
  br label %297

293:                                              ; preds = %284
  %294 = load i64*, i64** %69, align 8
  %295 = getelementptr inbounds i64, i64* %294, i64 8
  %296 = bitcast i64* %295 to %"class.v8::Value"*
  br label %297

297:                                              ; preds = %293, %287
  %298 = phi %"class.v8::Value"* [ %292, %287 ], [ %296, %293 ]
  %299 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %298) #10
  br i1 %299, label %300, label %303, !prof !5

300:                                              ; preds = %297
  %301 = bitcast %"class.v8::Value"* %298 to %"class.v8::Number"*
  %302 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %301) #10
  br label %305

303:                                              ; preds = %297
  %304 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %36, %"class.v8::Value"* %298, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #10
  br label %305

305:                                              ; preds = %303, %300
  %306 = phi double [ %302, %300 ], [ %304, %303 ]
  %307 = load i32, i32* %45, align 8
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %312

309:                                              ; preds = %305
  %310 = getelementptr inbounds i8, i8* %90, i64 16
  %311 = bitcast i8* %310 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D9drawImageEPNS_11ScriptStateEPKNS_134V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrameEddddddddRNS_14ExceptionStateE(%"class.blink::BaseRenderingContext2D"* %311, %"class.blink::ScriptState"* %92, %"class.blink::V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame"* %106, double %131, double %156, double %181, double %206, double %231, double %256, double %281, double %306, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #10
  br label %312

312:                                              ; preds = %309, %305, %280, %255, %230, %205, %180, %155, %130, %104, %67
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %313 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %314 = load i64*, i64** %313, align 8
  %315 = icmp eq i64* %314, null
  br i1 %315, label %325, label %316

316:                                              ; preds = %312
  %317 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %44, align 8
  %318 = bitcast %"class.v8::Isolate"* %317 to %"class.v8::internal::Isolate"*
  %319 = load i64, i64* %314, align 8
  %320 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %318, i64 %319) #10
  %321 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %317) #10
  br i1 %321, label %325, label %322

322:                                              ; preds = %316
  %323 = bitcast i64* %320 to %"class.v8::Value"*
  %324 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %317, %"class.v8::Value"* %323) #10
  br label %325

325:                                              ; preds = %322, %316, %312
  %326 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %327 = icmp eq %"class.WTF::StringImpl"* %326, null
  br i1 %327, label %781, label %328

328:                                              ; preds = %325
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = load atomic i32, i32* %329 monotonic, align 4
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 0
  %334 = load i32, i32* %333, align 4
  br i1 %332, label %335, label %337

335:                                              ; preds = %328
  %336 = add i32 %334, -1
  store i32 %336, i32* %333, align 4
  br label %337

337:                                              ; preds = %335, %328
  %338 = phi i32 [ %336, %335 ], [ %334, %328 ]
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %781

340:                                              ; preds = %337
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %326) #10
  br label %781

341:                                              ; preds = %26
  %342 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %343 = load i64*, i64** %342, align 8
  %344 = getelementptr inbounds i64, i64* %343, i64 1
  %345 = bitcast i64* %344 to %"class.v8::Isolate"**
  %346 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %345, align 8
  %347 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %347) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 56, i1 false) #10
  %348 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %348, align 8
  %349 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %349, align 8
  %350 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %350, align 2
  %351 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %352 = bitcast i8** %351 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)>, <2 x i8*>* %352, align 8
  %353 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %353, align 8
  %354 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %346, %"class.v8::Isolate"** %354, align 8
  %355 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %355, align 8
  %356 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %357 = bitcast %"class.WTF::StringImpl"** %356 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %357, i8 0, i64 16, i1 false) #10
  %358 = icmp slt i32 %28, 5
  br i1 %358, label %359, label %379, !prof !4

359:                                              ; preds = %341
  %360 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %360) #10
  %361 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 5, i32 %28) #10
  %362 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %361, %"class.WTF::StringImpl"** %362, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %363 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %362, align 8
  %364 = icmp eq %"class.WTF::StringImpl"* %363, null
  br i1 %364, label %378, label %365

365:                                              ; preds = %359
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %367 = load atomic i32, i32* %366 monotonic, align 4
  %368 = and i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 0
  %371 = load i32, i32* %370, align 4
  br i1 %369, label %372, label %374

372:                                              ; preds = %365
  %373 = add i32 %371, -1
  store i32 %373, i32* %370, align 4
  br label %374

374:                                              ; preds = %372, %365
  %375 = phi i32 [ %373, %372 ], [ %371, %365 ]
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %378

377:                                              ; preds = %374
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %363) #10
  br label %378

378:                                              ; preds = %377, %374, %359
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %360) #10
  br label %523

379:                                              ; preds = %341
  %380 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %381 = load i64*, i64** %380, align 8
  %382 = getelementptr inbounds i64, i64* %381, i64 -1
  %383 = bitcast i64* %382 to %"class.v8::Object"*
  %384 = load i64, i64* %382, align 8
  %385 = add i64 %384, -1
  %386 = inttoptr i64 %385 to i32*
  %387 = load i32, i32* %386, align 4
  %388 = and i64 %384, -4294967296
  %389 = zext i32 %387 to i64
  %390 = or i64 %388, %389
  %391 = add i64 %390, 7
  %392 = inttoptr i64 %391 to i16*
  %393 = load i16, i16* %392, align 2
  switch i16 %393, label %398 [
    i16 1057, label %394
    i16 1056, label %394
    i16 1040, label %394
  ]

394:                                              ; preds = %379, %379, %379
  %395 = add i64 %384, 19
  %396 = inttoptr i64 %395 to i8**
  %397 = load i8*, i8** %396, align 1
  br label %400

398:                                              ; preds = %379
  %399 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %383, i32 1) #10
  br label %400

400:                                              ; preds = %398, %394
  %401 = phi i8* [ %397, %394 ], [ %399, %398 ]
  %402 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %383) #10
  %403 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %402) #10
  %404 = load i32, i32* %27, align 8
  %405 = icmp sgt i32 %404, 0
  br i1 %405, label %412, label %406

406:                                              ; preds = %400
  %407 = load i64*, i64** %342, align 8
  %408 = getelementptr inbounds i64, i64* %407, i64 1
  %409 = load i64, i64* %408, align 8
  %410 = add i64 %409, 160
  %411 = inttoptr i64 %410 to %"class.v8::Value"*
  br label %415

412:                                              ; preds = %400
  %413 = bitcast i64** %380 to %"class.v8::Value"**
  %414 = load %"class.v8::Value"*, %"class.v8::Value"** %413, align 8
  br label %415

415:                                              ; preds = %412, %406
  %416 = phi %"class.v8::Value"* [ %411, %406 ], [ %414, %412 ]
  %417 = call %"class.blink::V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame"* @_ZN5blink134V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %346, %"class.v8::Value"* %416, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #10
  %418 = load i32, i32* %355, align 8
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %523

420:                                              ; preds = %415
  %421 = load i32, i32* %27, align 8
  %422 = icmp sgt i32 %421, 1
  br i1 %422, label %429, label %423

423:                                              ; preds = %420
  %424 = load i64*, i64** %342, align 8
  %425 = getelementptr inbounds i64, i64* %424, i64 1
  %426 = load i64, i64* %425, align 8
  %427 = add i64 %426, 160
  %428 = inttoptr i64 %427 to %"class.v8::Value"*
  br label %433

429:                                              ; preds = %420
  %430 = load i64*, i64** %380, align 8
  %431 = getelementptr inbounds i64, i64* %430, i64 1
  %432 = bitcast i64* %431 to %"class.v8::Value"*
  br label %433

433:                                              ; preds = %429, %423
  %434 = phi %"class.v8::Value"* [ %428, %423 ], [ %432, %429 ]
  %435 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %434) #10
  br i1 %435, label %436, label %439, !prof !5

436:                                              ; preds = %433
  %437 = bitcast %"class.v8::Value"* %434 to %"class.v8::Number"*
  %438 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %437) #10
  br label %441

439:                                              ; preds = %433
  %440 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %346, %"class.v8::Value"* %434, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #10
  br label %441

441:                                              ; preds = %439, %436
  %442 = phi double [ %438, %436 ], [ %440, %439 ]
  %443 = load i32, i32* %355, align 8
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %523

445:                                              ; preds = %441
  %446 = load i32, i32* %27, align 8
  %447 = icmp sgt i32 %446, 2
  br i1 %447, label %454, label %448

448:                                              ; preds = %445
  %449 = load i64*, i64** %342, align 8
  %450 = getelementptr inbounds i64, i64* %449, i64 1
  %451 = load i64, i64* %450, align 8
  %452 = add i64 %451, 160
  %453 = inttoptr i64 %452 to %"class.v8::Value"*
  br label %458

454:                                              ; preds = %445
  %455 = load i64*, i64** %380, align 8
  %456 = getelementptr inbounds i64, i64* %455, i64 2
  %457 = bitcast i64* %456 to %"class.v8::Value"*
  br label %458

458:                                              ; preds = %454, %448
  %459 = phi %"class.v8::Value"* [ %453, %448 ], [ %457, %454 ]
  %460 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %459) #10
  br i1 %460, label %461, label %464, !prof !5

461:                                              ; preds = %458
  %462 = bitcast %"class.v8::Value"* %459 to %"class.v8::Number"*
  %463 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %462) #10
  br label %466

464:                                              ; preds = %458
  %465 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %346, %"class.v8::Value"* %459, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #10
  br label %466

466:                                              ; preds = %464, %461
  %467 = phi double [ %463, %461 ], [ %465, %464 ]
  %468 = load i32, i32* %355, align 8
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %523

470:                                              ; preds = %466
  %471 = load i32, i32* %27, align 8
  %472 = icmp sgt i32 %471, 3
  br i1 %472, label %479, label %473

473:                                              ; preds = %470
  %474 = load i64*, i64** %342, align 8
  %475 = getelementptr inbounds i64, i64* %474, i64 1
  %476 = load i64, i64* %475, align 8
  %477 = add i64 %476, 160
  %478 = inttoptr i64 %477 to %"class.v8::Value"*
  br label %483

479:                                              ; preds = %470
  %480 = load i64*, i64** %380, align 8
  %481 = getelementptr inbounds i64, i64* %480, i64 3
  %482 = bitcast i64* %481 to %"class.v8::Value"*
  br label %483

483:                                              ; preds = %479, %473
  %484 = phi %"class.v8::Value"* [ %478, %473 ], [ %482, %479 ]
  %485 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %484) #10
  br i1 %485, label %486, label %489, !prof !5

486:                                              ; preds = %483
  %487 = bitcast %"class.v8::Value"* %484 to %"class.v8::Number"*
  %488 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %487) #10
  br label %491

489:                                              ; preds = %483
  %490 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %346, %"class.v8::Value"* %484, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #10
  br label %491

491:                                              ; preds = %489, %486
  %492 = phi double [ %488, %486 ], [ %490, %489 ]
  %493 = load i32, i32* %355, align 8
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %495, label %523

495:                                              ; preds = %491
  %496 = load i32, i32* %27, align 8
  %497 = icmp sgt i32 %496, 4
  br i1 %497, label %504, label %498

498:                                              ; preds = %495
  %499 = load i64*, i64** %342, align 8
  %500 = getelementptr inbounds i64, i64* %499, i64 1
  %501 = load i64, i64* %500, align 8
  %502 = add i64 %501, 160
  %503 = inttoptr i64 %502 to %"class.v8::Value"*
  br label %508

504:                                              ; preds = %495
  %505 = load i64*, i64** %380, align 8
  %506 = getelementptr inbounds i64, i64* %505, i64 4
  %507 = bitcast i64* %506 to %"class.v8::Value"*
  br label %508

508:                                              ; preds = %504, %498
  %509 = phi %"class.v8::Value"* [ %503, %498 ], [ %507, %504 ]
  %510 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %509) #10
  br i1 %510, label %511, label %514, !prof !5

511:                                              ; preds = %508
  %512 = bitcast %"class.v8::Value"* %509 to %"class.v8::Number"*
  %513 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %512) #10
  br label %516

514:                                              ; preds = %508
  %515 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %346, %"class.v8::Value"* %509, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #10
  br label %516

516:                                              ; preds = %514, %511
  %517 = phi double [ %513, %511 ], [ %515, %514 ]
  %518 = load i32, i32* %355, align 8
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %520, label %523

520:                                              ; preds = %516
  %521 = getelementptr inbounds i8, i8* %401, i64 16
  %522 = bitcast i8* %521 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D9drawImageEPNS_11ScriptStateEPKNS_134V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrameEddddRNS_14ExceptionStateE(%"class.blink::BaseRenderingContext2D"* %522, %"class.blink::ScriptState"* %403, %"class.blink::V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame"* %417, double %442, double %467, double %492, double %517, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #10
  br label %523

523:                                              ; preds = %520, %516, %491, %466, %441, %415, %378
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %348, align 8
  %524 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %525 = load i64*, i64** %524, align 8
  %526 = icmp eq i64* %525, null
  br i1 %526, label %536, label %527

527:                                              ; preds = %523
  %528 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %354, align 8
  %529 = bitcast %"class.v8::Isolate"* %528 to %"class.v8::internal::Isolate"*
  %530 = load i64, i64* %525, align 8
  %531 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %529, i64 %530) #10
  %532 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %528) #10
  br i1 %532, label %536, label %533

533:                                              ; preds = %527
  %534 = bitcast i64* %531 to %"class.v8::Value"*
  %535 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %528, %"class.v8::Value"* %534) #10
  br label %536

536:                                              ; preds = %533, %527, %523
  %537 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %356, align 8
  %538 = icmp eq %"class.WTF::StringImpl"* %537, null
  br i1 %538, label %781, label %539

539:                                              ; preds = %536
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %541 = load atomic i32, i32* %540 monotonic, align 4
  %542 = and i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 0
  %545 = load i32, i32* %544, align 4
  br i1 %543, label %546, label %548

546:                                              ; preds = %539
  %547 = add i32 %545, -1
  store i32 %547, i32* %544, align 4
  br label %548

548:                                              ; preds = %546, %539
  %549 = phi i32 [ %547, %546 ], [ %545, %539 ]
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %551, label %781

551:                                              ; preds = %548
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %537) #10
  br label %781

552:                                              ; preds = %26
  %553 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %554 = load i64*, i64** %553, align 8
  %555 = getelementptr inbounds i64, i64* %554, i64 1
  %556 = bitcast i64* %555 to %"class.v8::Isolate"**
  %557 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %556, align 8
  %558 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %558) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %558, i8 -86, i64 56, i1 false) #10
  %559 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %559, align 8
  %560 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %560, align 8
  %561 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %561, align 2
  %562 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %563 = bitcast i8** %562 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)>, <2 x i8*>* %563, align 8
  %564 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %564, align 8
  %565 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %557, %"class.v8::Isolate"** %565, align 8
  %566 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %566, align 8
  %567 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %568 = bitcast %"class.WTF::StringImpl"** %567 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %568, i8 0, i64 16, i1 false) #10
  %569 = icmp slt i32 %28, 3
  br i1 %569, label %570, label %590, !prof !4

570:                                              ; preds = %552
  %571 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %571) #10
  %572 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %28) #10
  %573 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %572, %"class.WTF::StringImpl"** %573, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %574 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %573, align 8
  %575 = icmp eq %"class.WTF::StringImpl"* %574, null
  br i1 %575, label %589, label %576

576:                                              ; preds = %570
  %577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %574, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %578 = load atomic i32, i32* %577 monotonic, align 4
  %579 = and i32 %578, 2
  %580 = icmp eq i32 %579, 0
  %581 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %574, i64 0, i32 0
  %582 = load i32, i32* %581, align 4
  br i1 %580, label %583, label %585

583:                                              ; preds = %576
  %584 = add i32 %582, -1
  store i32 %584, i32* %581, align 4
  br label %585

585:                                              ; preds = %583, %576
  %586 = phi i32 [ %584, %583 ], [ %582, %576 ]
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %588, label %589

588:                                              ; preds = %585
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %574) #10
  br label %589

589:                                              ; preds = %588, %585, %570
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %571) #10
  br label %684

590:                                              ; preds = %552
  %591 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %592 = load i64*, i64** %591, align 8
  %593 = getelementptr inbounds i64, i64* %592, i64 -1
  %594 = bitcast i64* %593 to %"class.v8::Object"*
  %595 = load i64, i64* %593, align 8
  %596 = add i64 %595, -1
  %597 = inttoptr i64 %596 to i32*
  %598 = load i32, i32* %597, align 4
  %599 = and i64 %595, -4294967296
  %600 = zext i32 %598 to i64
  %601 = or i64 %599, %600
  %602 = add i64 %601, 7
  %603 = inttoptr i64 %602 to i16*
  %604 = load i16, i16* %603, align 2
  switch i16 %604, label %609 [
    i16 1057, label %605
    i16 1056, label %605
    i16 1040, label %605
  ]

605:                                              ; preds = %590, %590, %590
  %606 = add i64 %595, 19
  %607 = inttoptr i64 %606 to i8**
  %608 = load i8*, i8** %607, align 1
  br label %611

609:                                              ; preds = %590
  %610 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %594, i32 1) #10
  br label %611

611:                                              ; preds = %609, %605
  %612 = phi i8* [ %608, %605 ], [ %610, %609 ]
  %613 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %594) #10
  %614 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %613) #10
  %615 = load i32, i32* %27, align 8
  %616 = icmp sgt i32 %615, 0
  br i1 %616, label %623, label %617

617:                                              ; preds = %611
  %618 = load i64*, i64** %553, align 8
  %619 = getelementptr inbounds i64, i64* %618, i64 1
  %620 = load i64, i64* %619, align 8
  %621 = add i64 %620, 160
  %622 = inttoptr i64 %621 to %"class.v8::Value"*
  br label %626

623:                                              ; preds = %611
  %624 = bitcast i64** %591 to %"class.v8::Value"**
  %625 = load %"class.v8::Value"*, %"class.v8::Value"** %624, align 8
  br label %626

626:                                              ; preds = %623, %617
  %627 = phi %"class.v8::Value"* [ %622, %617 ], [ %625, %623 ]
  %628 = call %"class.blink::V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame"* @_ZN5blink134V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %557, %"class.v8::Value"* %627, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %629 = load i32, i32* %566, align 8
  %630 = icmp eq i32 %629, 0
  br i1 %630, label %631, label %684

631:                                              ; preds = %626
  %632 = load i32, i32* %27, align 8
  %633 = icmp sgt i32 %632, 1
  br i1 %633, label %640, label %634

634:                                              ; preds = %631
  %635 = load i64*, i64** %553, align 8
  %636 = getelementptr inbounds i64, i64* %635, i64 1
  %637 = load i64, i64* %636, align 8
  %638 = add i64 %637, 160
  %639 = inttoptr i64 %638 to %"class.v8::Value"*
  br label %644

640:                                              ; preds = %631
  %641 = load i64*, i64** %591, align 8
  %642 = getelementptr inbounds i64, i64* %641, i64 1
  %643 = bitcast i64* %642 to %"class.v8::Value"*
  br label %644

644:                                              ; preds = %640, %634
  %645 = phi %"class.v8::Value"* [ %639, %634 ], [ %643, %640 ]
  %646 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %645) #10
  br i1 %646, label %647, label %650, !prof !5

647:                                              ; preds = %644
  %648 = bitcast %"class.v8::Value"* %645 to %"class.v8::Number"*
  %649 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %648) #10
  br label %652

650:                                              ; preds = %644
  %651 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %557, %"class.v8::Value"* %645, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %652

652:                                              ; preds = %650, %647
  %653 = phi double [ %649, %647 ], [ %651, %650 ]
  %654 = load i32, i32* %566, align 8
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %656, label %684

656:                                              ; preds = %652
  %657 = load i32, i32* %27, align 8
  %658 = icmp sgt i32 %657, 2
  br i1 %658, label %665, label %659

659:                                              ; preds = %656
  %660 = load i64*, i64** %553, align 8
  %661 = getelementptr inbounds i64, i64* %660, i64 1
  %662 = load i64, i64* %661, align 8
  %663 = add i64 %662, 160
  %664 = inttoptr i64 %663 to %"class.v8::Value"*
  br label %669

665:                                              ; preds = %656
  %666 = load i64*, i64** %591, align 8
  %667 = getelementptr inbounds i64, i64* %666, i64 2
  %668 = bitcast i64* %667 to %"class.v8::Value"*
  br label %669

669:                                              ; preds = %665, %659
  %670 = phi %"class.v8::Value"* [ %664, %659 ], [ %668, %665 ]
  %671 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %670) #10
  br i1 %671, label %672, label %675, !prof !5

672:                                              ; preds = %669
  %673 = bitcast %"class.v8::Value"* %670 to %"class.v8::Number"*
  %674 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %673) #10
  br label %677

675:                                              ; preds = %669
  %676 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %557, %"class.v8::Value"* %670, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %677

677:                                              ; preds = %675, %672
  %678 = phi double [ %674, %672 ], [ %676, %675 ]
  %679 = load i32, i32* %566, align 8
  %680 = icmp eq i32 %679, 0
  br i1 %680, label %681, label %684

681:                                              ; preds = %677
  %682 = getelementptr inbounds i8, i8* %612, i64 16
  %683 = bitcast i8* %682 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D9drawImageEPNS_11ScriptStateEPKNS_134V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrameEddRNS_14ExceptionStateE(%"class.blink::BaseRenderingContext2D"* %683, %"class.blink::ScriptState"* %614, %"class.blink::V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame"* %628, double %653, double %678, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %684

684:                                              ; preds = %681, %677, %652, %626, %589
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %559, align 8
  %685 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %686 = load i64*, i64** %685, align 8
  %687 = icmp eq i64* %686, null
  br i1 %687, label %697, label %688

688:                                              ; preds = %684
  %689 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %565, align 8
  %690 = bitcast %"class.v8::Isolate"* %689 to %"class.v8::internal::Isolate"*
  %691 = load i64, i64* %686, align 8
  %692 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %690, i64 %691) #10
  %693 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %689) #10
  br i1 %693, label %697, label %694

694:                                              ; preds = %688
  %695 = bitcast i64* %692 to %"class.v8::Value"*
  %696 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %689, %"class.v8::Value"* %695) #10
  br label %697

697:                                              ; preds = %694, %688, %684
  %698 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %567, align 8
  %699 = icmp eq %"class.WTF::StringImpl"* %698, null
  br i1 %699, label %781, label %700

700:                                              ; preds = %697
  %701 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %698, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %702 = load atomic i32, i32* %701 monotonic, align 4
  %703 = and i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %698, i64 0, i32 0
  %706 = load i32, i32* %705, align 4
  br i1 %704, label %707, label %709

707:                                              ; preds = %700
  %708 = add i32 %706, -1
  store i32 %708, i32* %705, align 4
  br label %709

709:                                              ; preds = %707, %700
  %710 = phi i32 [ %708, %707 ], [ %706, %700 ]
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %712, label %781

712:                                              ; preds = %709
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %698) #10
  br label %781

713:                                              ; preds = %26
  %714 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %715 = load i64*, i64** %714, align 8
  %716 = getelementptr inbounds i64, i64* %715, i64 1
  %717 = load i64, i64* %716, align 8
  %718 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %718) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %718, i8 -86, i64 56, i1 false)
  %719 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %719, align 8
  %720 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %720, align 8
  %721 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %721, align 2
  %722 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %723 = bitcast i8** %722 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)>, <2 x i8*>* %723, align 8
  %724 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %724, align 8
  %725 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  %726 = bitcast %"class.v8::Isolate"** %725 to i64*
  store i64 %717, i64* %726, align 8
  %727 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %727, align 8
  %728 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %729 = bitcast %"class.WTF::StringImpl"** %728 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %729, i8 0, i64 16, i1 false) #10
  %730 = icmp slt i32 %28, 3
  br i1 %730, label %731, label %751, !prof !4

731:                                              ; preds = %713
  %732 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %732) #10
  %733 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %28) #10
  %734 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %733, %"class.WTF::StringImpl"** %734, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #10
  %735 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %734, align 8
  %736 = icmp eq %"class.WTF::StringImpl"* %735, null
  br i1 %736, label %750, label %737

737:                                              ; preds = %731
  %738 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %735, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %739 = load atomic i32, i32* %738 monotonic, align 4
  %740 = and i32 %739, 2
  %741 = icmp eq i32 %740, 0
  %742 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %735, i64 0, i32 0
  %743 = load i32, i32* %742, align 4
  br i1 %741, label %744, label %746

744:                                              ; preds = %737
  %745 = add i32 %743, -1
  store i32 %745, i32* %742, align 4
  br label %746

746:                                              ; preds = %744, %737
  %747 = phi i32 [ %745, %744 ], [ %743, %737 ]
  %748 = icmp eq i32 %747, 0
  br i1 %748, label %749, label %750

749:                                              ; preds = %746
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %735) #10
  br label %750

750:                                              ; preds = %731, %746, %749
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %732) #10
  br label %752

751:                                              ; preds = %713
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.60, i64 0, i64 0)) #10
  br label %752

752:                                              ; preds = %751, %750
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %719, align 8
  %753 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %754 = load i64*, i64** %753, align 8
  %755 = icmp eq i64* %754, null
  br i1 %755, label %765, label %756

756:                                              ; preds = %752
  %757 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %725, align 8
  %758 = bitcast %"class.v8::Isolate"* %757 to %"class.v8::internal::Isolate"*
  %759 = load i64, i64* %754, align 8
  %760 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %758, i64 %759) #10
  %761 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %757) #10
  br i1 %761, label %765, label %762

762:                                              ; preds = %756
  %763 = bitcast i64* %760 to %"class.v8::Value"*
  %764 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %757, %"class.v8::Value"* %763) #10
  br label %765

765:                                              ; preds = %762, %756, %752
  %766 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %728, align 8
  %767 = icmp eq %"class.WTF::StringImpl"* %766, null
  br i1 %767, label %781, label %768

768:                                              ; preds = %765
  %769 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %766, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %770 = load atomic i32, i32* %769 monotonic, align 4
  %771 = and i32 %770, 2
  %772 = icmp eq i32 %771, 0
  %773 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %766, i64 0, i32 0
  %774 = load i32, i32* %773, align 4
  br i1 %772, label %775, label %777

775:                                              ; preds = %768
  %776 = add i32 %774, -1
  store i32 %776, i32* %773, align 4
  br label %777

777:                                              ; preds = %775, %768
  %778 = phi i32 [ %776, %775 ], [ %774, %768 ]
  %779 = icmp eq i32 %778, 0
  br i1 %779, label %780, label %781

780:                                              ; preds = %777
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %766) #10
  br label %781

781:                                              ; preds = %780, %777, %765, %712, %709, %697, %551, %548, %536, %340, %337, %325
  %782 = phi i8* [ %37, %325 ], [ %37, %337 ], [ %37, %340 ], [ %347, %536 ], [ %347, %548 ], [ %347, %551 ], [ %558, %697 ], [ %558, %709 ], [ %558, %712 ], [ %718, %765 ], [ %718, %777 ], [ %718, %780 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %782) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d21FillOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #10
  %3 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %2, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %18

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %2, i64 0, i32 5
  %8 = load %"class.base::TickClock"*, %"class.base::TickClock"** %7, align 8
  %9 = bitcast %"class.base::TickClock"* %8 to i64 (%"class.base::TickClock"*)***
  %10 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %10, i64 2
  %12 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %11, align 8
  %13 = tail call i64 %12(%"class.base::TickClock"* %8) #10
  %14 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %2, i64 0, i32 4, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %6
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %2) #10
  br label %18

18:                                               ; preds = %1, %6, %17
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %20, 2
  %22 = select i1 %21, i32 %20, i32 2
  switch i32 %22, label %81 [
    i32 2, label %23
    i32 1, label %24
  ]

23:                                               ; preds = %18
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22FillOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %82

24:                                               ; preds = %18
  %25 = icmp sgt i32 %20, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 160
  %32 = inttoptr i64 %31 to %"class.v8::Value"*
  br label %37

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %35 = bitcast i64** %34 to %"class.v8::Value"**
  %36 = load %"class.v8::Value"*, %"class.v8::Value"** %35, align 8
  br label %37

37:                                               ; preds = %26, %33
  %38 = phi %"class.v8::Value"* [ %32, %26 ], [ %36, %33 ]
  %39 = bitcast %"class.v8::Value"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 3
  %42 = icmp eq i64 %41, 1
  br i1 %42, label %43, label %61

43:                                               ; preds = %37
  %44 = add i64 %40, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = and i64 %40, -4294967296
  %48 = zext i32 %46 to i64
  %49 = or i64 %47, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %52, 67
  br i1 %53, label %54, label %61

54:                                               ; preds = %43
  %55 = add i64 %40, 23
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, -2
  %59 = icmp eq i32 %58, 10
  br i1 %59, label %60, label %61

60:                                               ; preds = %54
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22FillOperationOverload1ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %82

61:                                               ; preds = %43, %37, %54
  %62 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds i64, i64* %63, i64 1
  %65 = load i64, i64* %64, align 8
  br i1 %25, label %69, label %66

66:                                               ; preds = %61
  %67 = add i64 %65, 160
  %68 = inttoptr i64 %67 to %"class.v8::Value"*
  br label %73

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %71 = bitcast i64** %70 to %"class.v8::Value"**
  %72 = load %"class.v8::Value"*, %"class.v8::Value"** %71, align 8
  br label %73

73:                                               ; preds = %66, %69
  %74 = phi %"class.v8::Value"* [ %68, %66 ], [ %72, %69 ]
  %75 = add i64 %65, 8
  %76 = inttoptr i64 %75 to %"class.blink::V8PerIsolateData"**
  %77 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %76, align 8
  %78 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %77, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink8V8Path2D18wrapper_type_info_E, %"class.v8::Value"* %74) #10
  br i1 %78, label %79, label %80

79:                                               ; preds = %73
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22FillOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %82

80:                                               ; preds = %73
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22FillOperationOverload1ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %82

81:                                               ; preds = %18
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22FillOperationOverload1ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %82

82:                                               ; preds = %79, %80, %81, %60, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d25FillRectOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #10
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !4

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #10
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %166

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #10
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %78) #10
  br i1 %79, label %80, label %83, !prof !5

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Number"*
  %82 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %81) #10
  br label %87

83:                                               ; preds = %76
  %84 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %166

87:                                               ; preds = %80, %83
  %88 = phi double [ %82, %80 ], [ %84, %83 ]
  %89 = load i32, i32* %20, align 8
  %90 = icmp sgt i32 %89, 1
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = load i64*, i64** %4, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 1
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 160
  %96 = inttoptr i64 %95 to %"class.v8::Value"*
  br label %101

97:                                               ; preds = %87
  %98 = load i64*, i64** %44, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 1
  %100 = bitcast i64* %99 to %"class.v8::Value"*
  br label %101

101:                                              ; preds = %91, %97
  %102 = phi %"class.v8::Value"* [ %96, %91 ], [ %100, %97 ]
  %103 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %102) #10
  br i1 %103, label %104, label %107, !prof !5

104:                                              ; preds = %101
  %105 = bitcast %"class.v8::Value"* %102 to %"class.v8::Number"*
  %106 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %105) #10
  br label %109

107:                                              ; preds = %101
  %108 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %102, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %109

109:                                              ; preds = %104, %107
  %110 = phi double [ %106, %104 ], [ %108, %107 ]
  %111 = load i32, i32* %17, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %166

113:                                              ; preds = %109
  %114 = load i32, i32* %20, align 8
  %115 = icmp sgt i32 %114, 2
  br i1 %115, label %122, label %116

116:                                              ; preds = %113
  %117 = load i64*, i64** %4, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %126

122:                                              ; preds = %113
  %123 = load i64*, i64** %44, align 8
  %124 = getelementptr inbounds i64, i64* %123, i64 2
  %125 = bitcast i64* %124 to %"class.v8::Value"*
  br label %126

126:                                              ; preds = %116, %122
  %127 = phi %"class.v8::Value"* [ %121, %116 ], [ %125, %122 ]
  %128 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %127) #10
  br i1 %128, label %129, label %132, !prof !5

129:                                              ; preds = %126
  %130 = bitcast %"class.v8::Value"* %127 to %"class.v8::Number"*
  %131 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %130) #10
  br label %134

132:                                              ; preds = %126
  %133 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %127, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %134

134:                                              ; preds = %129, %132
  %135 = phi double [ %131, %129 ], [ %133, %132 ]
  %136 = load i32, i32* %17, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %166

138:                                              ; preds = %134
  %139 = load i32, i32* %20, align 8
  %140 = icmp sgt i32 %139, 3
  br i1 %140, label %147, label %141

141:                                              ; preds = %138
  %142 = load i64*, i64** %4, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 1
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, 160
  %146 = inttoptr i64 %145 to %"class.v8::Value"*
  br label %151

147:                                              ; preds = %138
  %148 = load i64*, i64** %44, align 8
  %149 = getelementptr inbounds i64, i64* %148, i64 3
  %150 = bitcast i64* %149 to %"class.v8::Value"*
  br label %151

151:                                              ; preds = %141, %147
  %152 = phi %"class.v8::Value"* [ %146, %141 ], [ %150, %147 ]
  %153 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %152) #10
  br i1 %153, label %154, label %157, !prof !5

154:                                              ; preds = %151
  %155 = bitcast %"class.v8::Value"* %152 to %"class.v8::Number"*
  %156 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %155) #10
  br label %159

157:                                              ; preds = %151
  %158 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %152, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %159

159:                                              ; preds = %154, %157
  %160 = phi double [ %156, %154 ], [ %158, %157 ]
  %161 = load i32, i32* %17, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %159
  %164 = getelementptr inbounds i8, i8* %77, i64 16
  %165 = bitcast i8* %164 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D8fillRectEdddd(%"class.blink::BaseRenderingContext2D"* %165, double %88, double %110, double %135, double %160) #10
  br label %166

166:                                              ; preds = %159, %134, %109, %83, %163, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %168 = load i64*, i64** %167, align 8
  %169 = icmp eq i64* %168, null
  br i1 %169, label %179, label %170

170:                                              ; preds = %166
  %171 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %172 = bitcast %"class.v8::Isolate"* %171 to %"class.v8::internal::Isolate"*
  %173 = load i64, i64* %168, align 8
  %174 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %172, i64 %173) #10
  %175 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %171) #10
  br i1 %175, label %179, label %176

176:                                              ; preds = %170
  %177 = bitcast i64* %174 to %"class.v8::Value"*
  %178 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %171, %"class.v8::Value"* %177) #10
  br label %179

179:                                              ; preds = %176, %170, %166
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #10
  br label %195

195:                                              ; preds = %179, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d28GetLineDashOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = bitcast i64* %4 to %"class.v8::Object"*
  %6 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %5) #10
  %7 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %6)
  %8 = load i64, i64* %4, align 8
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %8, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  switch i16 %17, label %22 [
    i16 1057, label %18
    i16 1056, label %18
    i16 1040, label %18
  ]

18:                                               ; preds = %1, %1, %1
  %19 = add i64 %8, 19
  %20 = inttoptr i64 %19 to i8**
  %21 = load i8*, i8** %20, align 1
  br label %24

22:                                               ; preds = %1
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %5, i32 1) #10
  br label %24

24:                                               ; preds = %18, %22
  %25 = phi i8* [ %21, %18 ], [ %23, %22 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %"class.blink::BaseRenderingContext2D"*
  %28 = tail call dereferenceable(16) %"class.WTF::Vector.288"* @_ZNK5blink22BaseRenderingContext2D11getLineDashEv(%"class.blink::BaseRenderingContext2D"* %27) #10
  %29 = tail call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE1EEEN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINS9_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %7, %"class.WTF::Vector.288"* dereferenceable(16) %28) #10
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 3
  %35 = bitcast %"class.v8::Value"* %29 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %34, align 8
  br label %37

37:                                               ; preds = %24, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d29GetTransformOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::PaintRenderingContext2D"*
  %25 = tail call %"class.blink::DOMMatrix"* @_ZN5blink23PaintRenderingContext2D12getTransformEv(%"class.blink::PaintRenderingContext2D"* %24) #10
  %26 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %25, i64 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::DOMMatrix"* %25, null
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 3
  br i1 %27, label %31, label %37, !prof !4

31:                                               ; preds = %22
  %32 = getelementptr inbounds i64, i64* %29, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 176
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %30, align 8
  br label %60

37:                                               ; preds = %22
  %38 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %39 = load i64*, i64** %2, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 -1
  %41 = bitcast i64* %40 to %"class.v8::Object"*
  %42 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %30, %"class.blink::ScriptWrappable"* nonnull %26, %"class.v8::Object"* %41, %"class.blink::ScriptWrappable"* %38) #10
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = load i64*, i64** %2, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 -1
  %46 = bitcast i64* %45 to %"class.v8::Object"*
  %47 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %46) #10
  %48 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %47) #10
  %49 = bitcast %"class.blink::DOMMatrix"* %25 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %50, i64 7
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %51, align 8
  %53 = tail call %"class.v8::Value"* %52(%"class.blink::ScriptWrappable"* nonnull %26, %"class.blink::ScriptState"* %48) #10
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43
  %56 = load i64*, i64** %28, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 3
  %58 = bitcast %"class.v8::Value"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %31, %37, %43, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d30IsPointInPathOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #10
  %5 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %20

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %4, i64 0, i32 5
  %10 = load %"class.base::TickClock"*, %"class.base::TickClock"** %9, align 8
  %11 = bitcast %"class.base::TickClock"* %10 to i64 (%"class.base::TickClock"*)***
  %12 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %12, i64 2
  %14 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %13, align 8
  %15 = tail call i64 %14(%"class.base::TickClock"* %10) #10
  %16 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %4, i64 0, i32 4, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp slt i64 %15, %17
  br i1 %18, label %20, label %19

19:                                               ; preds = %8
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %4) #10
  br label %20

20:                                               ; preds = %1, %8, %19
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp sgt i32 %22, 3
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31IsPointInPathOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %118

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = bitcast i64* %28 to %"class.v8::Isolate"**
  %30 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8
  switch i32 %22, label %58 [
    i32 3, label %31
    i32 2, label %57
  ]

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %33 = bitcast i64** %32 to %"class.v8::Value"**
  %34 = load %"class.v8::Value"*, %"class.v8::Value"** %33, align 8
  %35 = ptrtoint %"class.v8::Isolate"* %30 to i64
  %36 = add i64 %35, 8
  %37 = inttoptr i64 %36 to %"class.blink::V8PerIsolateData"**
  %38 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %37, align 8
  %39 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %38, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink8V8Path2D18wrapper_type_info_E, %"class.v8::Value"* %34) #10
  br i1 %39, label %40, label %41

40:                                               ; preds = %31
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31IsPointInPathOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %118

41:                                               ; preds = %31
  %42 = load i32, i32* %21, align 8
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %41
  %45 = load i64*, i64** %26, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 160
  %49 = inttoptr i64 %48 to %"class.v8::Value"*
  br label %54

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %52 = bitcast i64** %51 to %"class.v8::Value"**
  %53 = load %"class.v8::Value"*, %"class.v8::Value"** %52, align 8
  br label %54

54:                                               ; preds = %44, %50
  %55 = phi %"class.v8::Value"* [ %49, %44 ], [ %53, %50 ]
  %56 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %55) #10
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31IsPointInPathOperationOverload1ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %118

57:                                               ; preds = %25
  tail call fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31IsPointInPathOperationOverload1ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %118

58:                                               ; preds = %25
  %59 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %59) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 56, i1 false)
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %61, align 8
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %62, align 2
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %64 = bitcast i8** %63 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)>, <2 x i8*>* %64, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %65, align 8
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %30, %"class.v8::Isolate"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %69 = bitcast %"class.WTF::StringImpl"** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #10
  %70 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #10
  %71 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %22) #10
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %72, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %58
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #10
  br label %88

88:                                               ; preds = %87, %84, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %89 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = icmp eq i64* %90, null
  br i1 %91, label %101, label %92

92:                                               ; preds = %88
  %93 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %66, align 8
  %94 = bitcast %"class.v8::Isolate"* %93 to %"class.v8::internal::Isolate"*
  %95 = load i64, i64* %90, align 8
  %96 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %94, i64 %95) #10
  %97 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %93) #10
  br i1 %97, label %101, label %98

98:                                               ; preds = %92
  %99 = bitcast i64* %96 to %"class.v8::Value"*
  %100 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %93, %"class.v8::Value"* %99) #10
  br label %101

101:                                              ; preds = %98, %92, %88
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #10
  br label %117

117:                                              ; preds = %101, %113, %116
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %59) #10
  br label %118

118:                                              ; preds = %40, %57, %117, %54, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d32IsPointInStrokeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #10
  %9 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %8, i64 0, i32 5
  %14 = load %"class.base::TickClock"*, %"class.base::TickClock"** %13, align 8
  %15 = bitcast %"class.base::TickClock"* %14 to i64 (%"class.base::TickClock"*)***
  %16 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %16, i64 2
  %18 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %17, align 8
  %19 = tail call i64 %18(%"class.base::TickClock"* %14) #10
  %20 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %8, i64 0, i32 4, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp slt i64 %19, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %12
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %8) #10
  br label %24

24:                                               ; preds = %1, %12, %23
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %26, 3
  %28 = select i1 %27, i32 %26, i32 3
  switch i32 %28, label %397 [
    i32 3, label %29
    i32 2, label %237
  ]

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = bitcast i64* %32 to %"class.v8::Isolate"**
  %34 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %33, align 8
  %35 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %34) #10
  %36 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %35) #10
  %37 = icmp eq %"class.blink::ExecutionContext"* %36, null
  %38 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %36, i64 0, i32 3
  br i1 %37, label %44, label %39

39:                                               ; preds = %29
  %40 = bitcast %"class.blink::UseCounter"* %38 to void (%"class.blink::UseCounter"*, i32)***
  %41 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %41, i64 3
  %43 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %42, align 8
  tail call void %43(%"class.blink::UseCounter"* nonnull %38, i32 2684) #10
  br label %44

44:                                               ; preds = %39, %29
  %45 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %45) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 56, i1 false) #10
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %48, align 2
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %50 = bitcast i8** %49 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i64 0, i64 0)>, <2 x i8*>* %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %34, %"class.v8::Isolate"** %52, align 8
  %53 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %55 = bitcast %"class.WTF::StringImpl"** %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #10
  %56 = load i32, i32* %25, align 8
  %57 = icmp slt i32 %56, 3
  br i1 %57, label %58, label %78, !prof !4

58:                                               ; preds = %44
  %59 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #10
  %60 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %56) #10
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %61, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #10
  br label %77

77:                                               ; preds = %76, %73, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #10
  br label %208

78:                                               ; preds = %44
  %79 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %80 = load i64*, i64** %79, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 -1
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, -1
  %84 = inttoptr i64 %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = and i64 %82, -4294967296
  %87 = zext i32 %85 to i64
  %88 = or i64 %86, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load i16, i16* %90, align 2
  switch i16 %91, label %97 [
    i16 1057, label %92
    i16 1056, label %92
    i16 1040, label %92
  ]

92:                                               ; preds = %78, %78, %78
  %93 = bitcast i64* %80 to %"class.v8::Value"*
  %94 = add i64 %82, 19
  %95 = inttoptr i64 %94 to i8**
  %96 = load i8*, i8** %95, align 1
  br label %111

97:                                               ; preds = %78
  %98 = bitcast i64* %81 to %"class.v8::Object"*
  %99 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %98, i32 1) #10
  %100 = load i32, i32* %25, align 8
  %101 = icmp sgt i32 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %97
  %103 = bitcast i64** %79 to %"class.v8::Value"**
  %104 = load %"class.v8::Value"*, %"class.v8::Value"** %103, align 8
  br label %111

105:                                              ; preds = %97
  %106 = load i64*, i64** %30, align 8
  %107 = getelementptr inbounds i64, i64* %106, i64 1
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %108, 160
  %110 = inttoptr i64 %109 to %"class.v8::Value"*
  br label %111

111:                                              ; preds = %92, %102, %105
  %112 = phi i8* [ %99, %105 ], [ %96, %92 ], [ %99, %102 ]
  %113 = phi %"class.v8::Value"* [ %110, %105 ], [ %93, %92 ], [ %104, %102 ]
  %114 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink6Path2D18wrapper_type_info_E, align 8
  %115 = ptrtoint %"class.v8::Isolate"* %34 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to %"class.blink::V8PerIsolateData"**
  %118 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %117, align 8
  %119 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %118, %"struct.blink::WrapperTypeInfo"* %114, %"class.v8::Value"* %113) #10
  br i1 %119, label %120, label %142

120:                                              ; preds = %111
  %121 = bitcast %"class.v8::Value"* %113 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = add i64 %122, -1
  %124 = inttoptr i64 %123 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = and i64 %122, -4294967296
  %127 = zext i32 %125 to i64
  %128 = or i64 %126, %127
  %129 = add i64 %128, 7
  %130 = inttoptr i64 %129 to i16*
  %131 = load i16, i16* %130, align 2
  switch i16 %131, label %136 [
    i16 1057, label %132
    i16 1056, label %132
    i16 1040, label %132
  ]

132:                                              ; preds = %120, %120, %120
  %133 = add i64 %122, 19
  %134 = inttoptr i64 %133 to i8**
  %135 = load i8*, i8** %134, align 1
  br label %139

136:                                              ; preds = %120
  %137 = bitcast %"class.v8::Value"* %113 to %"class.v8::Object"*
  %138 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %137, i32 1) #10
  br label %139

139:                                              ; preds = %136, %132
  %140 = phi i8* [ %135, %132 ], [ %138, %136 ]
  %141 = bitcast i8* %140 to %"class.blink::Path2D"*
  br label %145

142:                                              ; preds = %111
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %114, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #10
  %143 = load i32, i32* %53, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %208

145:                                              ; preds = %142, %139
  %146 = phi %"class.blink::Path2D"* [ %141, %139 ], [ null, %142 ]
  %147 = load i32, i32* %25, align 8
  %148 = icmp sgt i32 %147, 1
  br i1 %148, label %155, label %149

149:                                              ; preds = %145
  %150 = load i64*, i64** %30, align 8
  %151 = getelementptr inbounds i64, i64* %150, i64 1
  %152 = load i64, i64* %151, align 8
  %153 = add i64 %152, 160
  %154 = inttoptr i64 %153 to %"class.v8::Value"*
  br label %159

155:                                              ; preds = %145
  %156 = load i64*, i64** %79, align 8
  %157 = getelementptr inbounds i64, i64* %156, i64 1
  %158 = bitcast i64* %157 to %"class.v8::Value"*
  br label %159

159:                                              ; preds = %155, %149
  %160 = phi %"class.v8::Value"* [ %154, %149 ], [ %158, %155 ]
  %161 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %160) #10
  br i1 %161, label %162, label %165, !prof !5

162:                                              ; preds = %159
  %163 = bitcast %"class.v8::Value"* %160 to %"class.v8::Number"*
  %164 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %163) #10
  br label %167

165:                                              ; preds = %159
  %166 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %160, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #10
  br label %167

167:                                              ; preds = %165, %162
  %168 = phi double [ %164, %162 ], [ %166, %165 ]
  %169 = load i32, i32* %53, align 8
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %208

171:                                              ; preds = %167
  %172 = load i32, i32* %25, align 8
  %173 = icmp sgt i32 %172, 2
  br i1 %173, label %180, label %174

174:                                              ; preds = %171
  %175 = load i64*, i64** %30, align 8
  %176 = getelementptr inbounds i64, i64* %175, i64 1
  %177 = load i64, i64* %176, align 8
  %178 = add i64 %177, 160
  %179 = inttoptr i64 %178 to %"class.v8::Value"*
  br label %184

180:                                              ; preds = %171
  %181 = load i64*, i64** %79, align 8
  %182 = getelementptr inbounds i64, i64* %181, i64 2
  %183 = bitcast i64* %182 to %"class.v8::Value"*
  br label %184

184:                                              ; preds = %180, %174
  %185 = phi %"class.v8::Value"* [ %179, %174 ], [ %183, %180 ]
  %186 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %185) #10
  br i1 %186, label %187, label %190, !prof !5

187:                                              ; preds = %184
  %188 = bitcast %"class.v8::Value"* %185 to %"class.v8::Number"*
  %189 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %188) #10
  br label %192

190:                                              ; preds = %184
  %191 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %185, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #10
  br label %192

192:                                              ; preds = %190, %187
  %193 = phi double [ %189, %187 ], [ %191, %190 ]
  %194 = load i32, i32* %53, align 8
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %208

196:                                              ; preds = %192
  %197 = getelementptr inbounds i8, i8* %112, i64 16
  %198 = bitcast i8* %197 to %"class.blink::BaseRenderingContext2D"*
  %199 = call zeroext i1 @_ZN5blink22BaseRenderingContext2D15isPointInStrokeEPNS_6Path2DEdd(%"class.blink::BaseRenderingContext2D"* %198, %"class.blink::Path2D"* %146, double %168, double %193) #10
  %200 = load i64*, i64** %30, align 8
  %201 = getelementptr inbounds i64, i64* %200, i64 3
  %202 = getelementptr inbounds i64, i64* %200, i64 1
  %203 = load i64, i64* %202, align 8
  %204 = select i1 %199, i64 184, i64 192
  %205 = add i64 %203, %204
  %206 = inttoptr i64 %205 to i64*
  %207 = load i64, i64* %206, align 8
  store i64 %207, i64* %201, align 8
  call void @_ZN5blink13Dactyloscoper6RecordEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %36, i32 2684) #10
  br label %208

208:                                              ; preds = %196, %192, %167, %142, %77
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %209 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %210 = load i64*, i64** %209, align 8
  %211 = icmp eq i64* %210, null
  br i1 %211, label %221, label %212

212:                                              ; preds = %208
  %213 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %214 = bitcast %"class.v8::Isolate"* %213 to %"class.v8::internal::Isolate"*
  %215 = load i64, i64* %210, align 8
  %216 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %214, i64 %215) #10
  %217 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %213) #10
  br i1 %217, label %221, label %218

218:                                              ; preds = %212
  %219 = bitcast i64* %216 to %"class.v8::Value"*
  %220 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %213, %"class.v8::Value"* %219) #10
  br label %221

221:                                              ; preds = %218, %212, %208
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %223 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %223, label %465, label %224

224:                                              ; preds = %221
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load atomic i32, i32* %225 monotonic, align 4
  %227 = and i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  br i1 %228, label %231, label %233

231:                                              ; preds = %224
  %232 = add i32 %230, -1
  store i32 %232, i32* %229, align 4
  br label %233

233:                                              ; preds = %231, %224
  %234 = phi i32 [ %232, %231 ], [ %230, %224 ]
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %465

236:                                              ; preds = %233
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #10
  br label %465

237:                                              ; preds = %24
  %238 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %239 = load i64*, i64** %238, align 8
  %240 = getelementptr inbounds i64, i64* %239, i64 1
  %241 = bitcast i64* %240 to %"class.v8::Isolate"**
  %242 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %241, align 8
  %243 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %242) #10
  %244 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %243) #10
  %245 = icmp eq %"class.blink::ExecutionContext"* %244, null
  %246 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %244, i64 0, i32 3
  br i1 %245, label %252, label %247

247:                                              ; preds = %237
  %248 = bitcast %"class.blink::UseCounter"* %246 to void (%"class.blink::UseCounter"*, i32)***
  %249 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %248, align 8
  %250 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %249, i64 3
  %251 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %250, align 8
  tail call void %251(%"class.blink::UseCounter"* nonnull %246, i32 2684) #10
  br label %252

252:                                              ; preds = %247, %237
  %253 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %253) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %253, i8 -86, i64 56, i1 false) #10
  %254 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %254, align 8
  %255 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %255, align 8
  %256 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %256, align 2
  %257 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %258 = bitcast i8** %257 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i64 0, i64 0)>, <2 x i8*>* %258, align 8
  %259 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %259, align 8
  %260 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %242, %"class.v8::Isolate"** %260, align 8
  %261 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %261, align 8
  %262 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %263 = bitcast %"class.WTF::StringImpl"** %262 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %263, i8 0, i64 16, i1 false) #10
  %264 = load i32, i32* %25, align 8
  %265 = icmp slt i32 %264, 2
  br i1 %265, label %266, label %286, !prof !4

266:                                              ; preds = %252
  %267 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %267) #10
  %268 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %264) #10
  %269 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %268, %"class.WTF::StringImpl"** %269, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %269, align 8
  %271 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %271, label %285, label %272

272:                                              ; preds = %266
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = and i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  br i1 %276, label %279, label %281

279:                                              ; preds = %272
  %280 = add i32 %278, -1
  store i32 %280, i32* %277, align 4
  br label %281

281:                                              ; preds = %279, %272
  %282 = phi i32 [ %280, %279 ], [ %278, %272 ]
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %270) #10
  br label %285

285:                                              ; preds = %284, %281, %266
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %267) #10
  br label %368

286:                                              ; preds = %252
  %287 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %288 = load i64*, i64** %287, align 8
  %289 = getelementptr inbounds i64, i64* %288, i64 -1
  %290 = load i64, i64* %289, align 8
  %291 = add i64 %290, -1
  %292 = inttoptr i64 %291 to i32*
  %293 = load i32, i32* %292, align 4
  %294 = and i64 %290, -4294967296
  %295 = zext i32 %293 to i64
  %296 = or i64 %294, %295
  %297 = add i64 %296, 7
  %298 = inttoptr i64 %297 to i16*
  %299 = load i16, i16* %298, align 2
  switch i16 %299, label %305 [
    i16 1057, label %300
    i16 1056, label %300
    i16 1040, label %300
  ]

300:                                              ; preds = %286, %286, %286
  %301 = bitcast i64* %288 to %"class.v8::Value"*
  %302 = add i64 %290, 19
  %303 = inttoptr i64 %302 to i8**
  %304 = load i8*, i8** %303, align 1
  br label %319

305:                                              ; preds = %286
  %306 = bitcast i64* %289 to %"class.v8::Object"*
  %307 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %306, i32 1) #10
  %308 = load i32, i32* %25, align 8
  %309 = icmp sgt i32 %308, 0
  br i1 %309, label %310, label %313

310:                                              ; preds = %305
  %311 = bitcast i64** %287 to %"class.v8::Value"**
  %312 = load %"class.v8::Value"*, %"class.v8::Value"** %311, align 8
  br label %319

313:                                              ; preds = %305
  %314 = load i64*, i64** %238, align 8
  %315 = getelementptr inbounds i64, i64* %314, i64 1
  %316 = load i64, i64* %315, align 8
  %317 = add i64 %316, 160
  %318 = inttoptr i64 %317 to %"class.v8::Value"*
  br label %319

319:                                              ; preds = %300, %310, %313
  %320 = phi i8* [ %307, %313 ], [ %304, %300 ], [ %307, %310 ]
  %321 = phi %"class.v8::Value"* [ %318, %313 ], [ %301, %300 ], [ %312, %310 ]
  %322 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %321) #10
  br i1 %322, label %323, label %326, !prof !5

323:                                              ; preds = %319
  %324 = bitcast %"class.v8::Value"* %321 to %"class.v8::Number"*
  %325 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %324) #10
  br label %330

326:                                              ; preds = %319
  %327 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %242, %"class.v8::Value"* %321, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %328 = load i32, i32* %261, align 8
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %368

330:                                              ; preds = %326, %323
  %331 = phi double [ %325, %323 ], [ %327, %326 ]
  %332 = load i32, i32* %25, align 8
  %333 = icmp sgt i32 %332, 1
  br i1 %333, label %340, label %334

334:                                              ; preds = %330
  %335 = load i64*, i64** %238, align 8
  %336 = getelementptr inbounds i64, i64* %335, i64 1
  %337 = load i64, i64* %336, align 8
  %338 = add i64 %337, 160
  %339 = inttoptr i64 %338 to %"class.v8::Value"*
  br label %344

340:                                              ; preds = %330
  %341 = load i64*, i64** %287, align 8
  %342 = getelementptr inbounds i64, i64* %341, i64 1
  %343 = bitcast i64* %342 to %"class.v8::Value"*
  br label %344

344:                                              ; preds = %340, %334
  %345 = phi %"class.v8::Value"* [ %339, %334 ], [ %343, %340 ]
  %346 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %345) #10
  br i1 %346, label %347, label %350, !prof !5

347:                                              ; preds = %344
  %348 = bitcast %"class.v8::Value"* %345 to %"class.v8::Number"*
  %349 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %348) #10
  br label %352

350:                                              ; preds = %344
  %351 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %242, %"class.v8::Value"* %345, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %352

352:                                              ; preds = %350, %347
  %353 = phi double [ %349, %347 ], [ %351, %350 ]
  %354 = load i32, i32* %261, align 8
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %368

356:                                              ; preds = %352
  %357 = getelementptr inbounds i8, i8* %320, i64 16
  %358 = bitcast i8* %357 to %"class.blink::BaseRenderingContext2D"*
  %359 = call zeroext i1 @_ZN5blink22BaseRenderingContext2D15isPointInStrokeEdd(%"class.blink::BaseRenderingContext2D"* %358, double %331, double %353) #10
  %360 = load i64*, i64** %238, align 8
  %361 = getelementptr inbounds i64, i64* %360, i64 3
  %362 = getelementptr inbounds i64, i64* %360, i64 1
  %363 = load i64, i64* %362, align 8
  %364 = select i1 %359, i64 184, i64 192
  %365 = add i64 %363, %364
  %366 = inttoptr i64 %365 to i64*
  %367 = load i64, i64* %366, align 8
  store i64 %367, i64* %361, align 8
  call void @_ZN5blink13Dactyloscoper6RecordEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %244, i32 2684) #10
  br label %368

368:                                              ; preds = %356, %352, %326, %285
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %254, align 8
  %369 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %370 = load i64*, i64** %369, align 8
  %371 = icmp eq i64* %370, null
  br i1 %371, label %381, label %372

372:                                              ; preds = %368
  %373 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %260, align 8
  %374 = bitcast %"class.v8::Isolate"* %373 to %"class.v8::internal::Isolate"*
  %375 = load i64, i64* %370, align 8
  %376 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %374, i64 %375) #10
  %377 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %373) #10
  br i1 %377, label %381, label %378

378:                                              ; preds = %372
  %379 = bitcast i64* %376 to %"class.v8::Value"*
  %380 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %373, %"class.v8::Value"* %379) #10
  br label %381

381:                                              ; preds = %378, %372, %368
  %382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %262, align 8
  %383 = icmp eq %"class.WTF::StringImpl"* %382, null
  br i1 %383, label %465, label %384

384:                                              ; preds = %381
  %385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %386 = load atomic i32, i32* %385 monotonic, align 4
  %387 = and i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 0
  %390 = load i32, i32* %389, align 4
  br i1 %388, label %391, label %393

391:                                              ; preds = %384
  %392 = add i32 %390, -1
  store i32 %392, i32* %389, align 4
  br label %393

393:                                              ; preds = %391, %384
  %394 = phi i32 [ %392, %391 ], [ %390, %384 ]
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %465

396:                                              ; preds = %393
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %382) #10
  br label %465

397:                                              ; preds = %24
  %398 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %399 = load i64*, i64** %398, align 8
  %400 = getelementptr inbounds i64, i64* %399, i64 1
  %401 = load i64, i64* %400, align 8
  %402 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %402) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %402, i8 -86, i64 56, i1 false)
  %403 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %403, align 8
  %404 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 6, i16* %404, align 8
  %405 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %405, align 2
  %406 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %407 = bitcast i8** %406 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i64 0, i64 0)>, <2 x i8*>* %407, align 8
  %408 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %408, align 8
  %409 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  %410 = bitcast %"class.v8::Isolate"** %409 to i64*
  store i64 %401, i64* %410, align 8
  %411 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %411, align 8
  %412 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %413 = bitcast %"class.WTF::StringImpl"** %412 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %413, i8 0, i64 16, i1 false) #10
  %414 = icmp slt i32 %26, 2
  br i1 %414, label %415, label %435, !prof !4

415:                                              ; preds = %397
  %416 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %416) #10
  %417 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %26) #10
  %418 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %417, %"class.WTF::StringImpl"** %418, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #10
  %419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %418, align 8
  %420 = icmp eq %"class.WTF::StringImpl"* %419, null
  br i1 %420, label %434, label %421

421:                                              ; preds = %415
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = load atomic i32, i32* %422 monotonic, align 4
  %424 = and i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 0
  %427 = load i32, i32* %426, align 4
  br i1 %425, label %428, label %430

428:                                              ; preds = %421
  %429 = add i32 %427, -1
  store i32 %429, i32* %426, align 4
  br label %430

430:                                              ; preds = %428, %421
  %431 = phi i32 [ %429, %428 ], [ %427, %421 ]
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %434

433:                                              ; preds = %430
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %419) #10
  br label %434

434:                                              ; preds = %415, %430, %433
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %416) #10
  br label %436

435:                                              ; preds = %397
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.60, i64 0, i64 0)) #10
  br label %436

436:                                              ; preds = %435, %434
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %403, align 8
  %437 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %438 = load i64*, i64** %437, align 8
  %439 = icmp eq i64* %438, null
  br i1 %439, label %449, label %440

440:                                              ; preds = %436
  %441 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %409, align 8
  %442 = bitcast %"class.v8::Isolate"* %441 to %"class.v8::internal::Isolate"*
  %443 = load i64, i64* %438, align 8
  %444 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %442, i64 %443) #10
  %445 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %441) #10
  br i1 %445, label %449, label %446

446:                                              ; preds = %440
  %447 = bitcast i64* %444 to %"class.v8::Value"*
  %448 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %441, %"class.v8::Value"* %447) #10
  br label %449

449:                                              ; preds = %446, %440, %436
  %450 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %412, align 8
  %451 = icmp eq %"class.WTF::StringImpl"* %450, null
  br i1 %451, label %465, label %452

452:                                              ; preds = %449
  %453 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %454 = load atomic i32, i32* %453 monotonic, align 4
  %455 = and i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 0
  %458 = load i32, i32* %457, align 4
  br i1 %456, label %459, label %461

459:                                              ; preds = %452
  %460 = add i32 %458, -1
  store i32 %460, i32* %457, align 4
  br label %461

461:                                              ; preds = %459, %452
  %462 = phi i32 [ %460, %459 ], [ %458, %452 ]
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %464, label %465

464:                                              ; preds = %461
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %450) #10
  br label %465

465:                                              ; preds = %464, %461, %449, %396, %393, %381, %236, %233, %221
  %466 = phi i8* [ %45, %221 ], [ %45, %233 ], [ %45, %236 ], [ %253, %381 ], [ %253, %393 ], [ %253, %396 ], [ %402, %449 ], [ %402, %461 ], [ %402, %464 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %466) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31ResetTransformOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::PaintRenderingContext2D"*
  tail call void @_ZN5blink23PaintRenderingContext2D14resetTransformEv(%"class.blink::PaintRenderingContext2D"* %24) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d24RestoreOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %"class.blink::BaseRenderingContext2D"*
  tail call void @_ZN5blink22BaseRenderingContext2D7restoreEv(%"class.blink::BaseRenderingContext2D"* %25) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d23RotateOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #10
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !4

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #10
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %91

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #10
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %78) #10
  br i1 %79, label %80, label %83, !prof !5

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Number"*
  %82 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %81) #10
  br label %87

83:                                               ; preds = %76
  %84 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %80, %83
  %88 = phi double [ %82, %80 ], [ %84, %83 ]
  %89 = getelementptr inbounds i8, i8* %77, i64 16
  %90 = bitcast i8* %89 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D6rotateEd(%"class.blink::BaseRenderingContext2D"* %90, double %88) #10
  br label %91

91:                                               ; preds = %83, %87, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #10
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #10
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #10
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #10
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d21SaveOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %"class.blink::BaseRenderingContext2D"*
  tail call void @_ZN5blink22BaseRenderingContext2D4saveEv(%"class.blink::BaseRenderingContext2D"* %25) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22ScaleOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #10
  %7 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %6, i64 0, i32 5
  %12 = load %"class.base::TickClock"*, %"class.base::TickClock"** %11, align 8
  %13 = bitcast %"class.base::TickClock"* %12 to i64 (%"class.base::TickClock"*)***
  %14 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %14, i64 2
  %16 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %15, align 8
  %17 = tail call i64 %16(%"class.base::TickClock"* %12) #10
  %18 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %6, i64 0, i32 4, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %22, label %21

21:                                               ; preds = %10
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %6) #10
  br label %22

22:                                               ; preds = %1, %10, %21
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_new_canvas_2d_api_enabled_E, align 1, !range !2
  %26 = icmp ne i8 %25, 0
  %27 = icmp sgt i32 %24, 2
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %172

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = bitcast i64* %32 to %"class.v8::Isolate"**
  %34 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %33, align 8
  %35 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 56, i1 false) #10
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %40 = bitcast i8** %39 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0)>, <2 x i8*>* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %34, %"class.v8::Isolate"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %45 = bitcast %"class.WTF::StringImpl"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #10
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %64 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %29, %29, %29
  %60 = bitcast i64* %47 to %"class.v8::Value"*
  %61 = add i64 %49, 19
  %62 = inttoptr i64 %61 to i8**
  %63 = load i8*, i8** %62, align 1
  br label %78

64:                                               ; preds = %29
  %65 = bitcast i64* %48 to %"class.v8::Object"*
  %66 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %65, i32 1) #10
  %67 = load i32, i32* %23, align 8
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = bitcast i64** %46 to %"class.v8::Value"**
  %71 = load %"class.v8::Value"*, %"class.v8::Value"** %70, align 8
  br label %78

72:                                               ; preds = %64
  %73 = load i64*, i64** %30, align 8
  %74 = getelementptr inbounds i64, i64* %73, i64 1
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, 160
  %77 = inttoptr i64 %76 to %"class.v8::Value"*
  br label %78

78:                                               ; preds = %59, %69, %72
  %79 = phi i8* [ %66, %72 ], [ %63, %59 ], [ %66, %69 ]
  %80 = phi %"class.v8::Value"* [ %77, %72 ], [ %60, %59 ], [ %71, %69 ]
  %81 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %80) #10
  br i1 %81, label %82, label %85, !prof !5

82:                                               ; preds = %78
  %83 = bitcast %"class.v8::Value"* %80 to %"class.v8::Number"*
  %84 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %83) #10
  br label %89

85:                                               ; preds = %78
  %86 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %80, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  %87 = load i32, i32* %43, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %143

89:                                               ; preds = %85, %82
  %90 = phi double [ %84, %82 ], [ %86, %85 ]
  %91 = load i32, i32* %23, align 8
  %92 = icmp sgt i32 %91, 1
  br i1 %92, label %99, label %93

93:                                               ; preds = %89
  %94 = load i64*, i64** %30, align 8
  %95 = getelementptr inbounds i64, i64* %94, i64 1
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 160
  %98 = inttoptr i64 %97 to %"class.v8::Value"*
  br label %103

99:                                               ; preds = %89
  %100 = load i64*, i64** %46, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = bitcast i64* %101 to %"class.v8::Value"*
  br label %103

103:                                              ; preds = %99, %93
  %104 = phi %"class.v8::Value"* [ %98, %93 ], [ %102, %99 ]
  %105 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %104) #10
  br i1 %105, label %106, label %109, !prof !5

106:                                              ; preds = %103
  %107 = bitcast %"class.v8::Value"* %104 to %"class.v8::Number"*
  %108 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %107) #10
  br label %111

109:                                              ; preds = %103
  %110 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %104, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %111

111:                                              ; preds = %109, %106
  %112 = phi double [ %108, %106 ], [ %110, %109 ]
  %113 = load i32, i32* %43, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %143

115:                                              ; preds = %111
  %116 = load i32, i32* %23, align 8
  %117 = icmp sgt i32 %116, 2
  br i1 %117, label %124, label %118

118:                                              ; preds = %115
  %119 = load i64*, i64** %30, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 160
  %123 = inttoptr i64 %122 to %"class.v8::Value"*
  br label %128

124:                                              ; preds = %115
  %125 = load i64*, i64** %46, align 8
  %126 = getelementptr inbounds i64, i64* %125, i64 2
  %127 = bitcast i64* %126 to %"class.v8::Value"*
  br label %128

128:                                              ; preds = %124, %118
  %129 = phi %"class.v8::Value"* [ %123, %118 ], [ %127, %124 ]
  %130 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %129) #10
  br i1 %130, label %131, label %134, !prof !5

131:                                              ; preds = %128
  %132 = bitcast %"class.v8::Value"* %129 to %"class.v8::Number"*
  %133 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %132) #10
  br label %136

134:                                              ; preds = %128
  %135 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %129, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %136

136:                                              ; preds = %134, %131
  %137 = phi double [ %133, %131 ], [ %135, %134 ]
  %138 = load i32, i32* %43, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %136
  %141 = getelementptr inbounds i8, i8* %79, i64 16
  %142 = bitcast i8* %141 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D5scaleEddd(%"class.blink::BaseRenderingContext2D"* %142, double %90, double %112, double %137) #10
  br label %143

143:                                              ; preds = %140, %136, %111, %85
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %144 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %145 = load i64*, i64** %144, align 8
  %146 = icmp eq i64* %145, null
  br i1 %146, label %156, label %147

147:                                              ; preds = %143
  %148 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %42, align 8
  %149 = bitcast %"class.v8::Isolate"* %148 to %"class.v8::internal::Isolate"*
  %150 = load i64, i64* %145, align 8
  %151 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %149, i64 %150) #10
  %152 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %148) #10
  br i1 %152, label %156, label %153

153:                                              ; preds = %147
  %154 = bitcast i64* %151 to %"class.v8::Value"*
  %155 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %148, %"class.v8::Value"* %154) #10
  br label %156

156:                                              ; preds = %153, %147, %143
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %355, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %355

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #10
  br label %355

172:                                              ; preds = %22
  %173 = icmp eq i32 %24, 2
  %174 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %175 = load i64*, i64** %174, align 8
  %176 = getelementptr inbounds i64, i64* %175, i64 1
  %177 = bitcast i64* %176 to %"class.v8::Isolate"**
  %178 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %177, align 8
  br i1 %173, label %179, label %292

179:                                              ; preds = %172
  %180 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %180) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %180, i8 -86, i64 56, i1 false) #10
  %181 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %181, align 8
  %182 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %182, align 8
  %183 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %183, align 2
  %184 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %185 = bitcast i8** %184 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0)>, <2 x i8*>* %185, align 8
  %186 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %186, align 8
  %187 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %178, %"class.v8::Isolate"** %187, align 8
  %188 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %188, align 8
  %189 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %190 = bitcast %"class.WTF::StringImpl"** %189 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 16, i1 false) #10
  %191 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %192 = load i64*, i64** %191, align 8
  %193 = getelementptr inbounds i64, i64* %192, i64 -1
  %194 = load i64, i64* %193, align 8
  %195 = add i64 %194, -1
  %196 = inttoptr i64 %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = and i64 %194, -4294967296
  %199 = zext i32 %197 to i64
  %200 = or i64 %198, %199
  %201 = add i64 %200, 7
  %202 = inttoptr i64 %201 to i16*
  %203 = load i16, i16* %202, align 2
  switch i16 %203, label %209 [
    i16 1057, label %204
    i16 1056, label %204
    i16 1040, label %204
  ]

204:                                              ; preds = %179, %179, %179
  %205 = bitcast i64* %192 to %"class.v8::Value"*
  %206 = add i64 %194, 19
  %207 = inttoptr i64 %206 to i8**
  %208 = load i8*, i8** %207, align 1
  br label %223

209:                                              ; preds = %179
  %210 = bitcast i64* %193 to %"class.v8::Object"*
  %211 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %210, i32 1) #10
  %212 = load i32, i32* %23, align 8
  %213 = icmp sgt i32 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %209
  %215 = bitcast i64** %191 to %"class.v8::Value"**
  %216 = load %"class.v8::Value"*, %"class.v8::Value"** %215, align 8
  br label %223

217:                                              ; preds = %209
  %218 = load i64*, i64** %174, align 8
  %219 = getelementptr inbounds i64, i64* %218, i64 1
  %220 = load i64, i64* %219, align 8
  %221 = add i64 %220, 160
  %222 = inttoptr i64 %221 to %"class.v8::Value"*
  br label %223

223:                                              ; preds = %204, %214, %217
  %224 = phi i8* [ %211, %217 ], [ %208, %204 ], [ %211, %214 ]
  %225 = phi %"class.v8::Value"* [ %222, %217 ], [ %205, %204 ], [ %216, %214 ]
  %226 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %225) #10
  br i1 %226, label %227, label %230, !prof !5

227:                                              ; preds = %223
  %228 = bitcast %"class.v8::Value"* %225 to %"class.v8::Number"*
  %229 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %228) #10
  br label %234

230:                                              ; preds = %223
  %231 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %178, %"class.v8::Value"* %225, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %232 = load i32, i32* %188, align 8
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %263

234:                                              ; preds = %230, %227
  %235 = phi double [ %229, %227 ], [ %231, %230 ]
  %236 = load i32, i32* %23, align 8
  %237 = icmp sgt i32 %236, 1
  br i1 %237, label %244, label %238

238:                                              ; preds = %234
  %239 = load i64*, i64** %174, align 8
  %240 = getelementptr inbounds i64, i64* %239, i64 1
  %241 = load i64, i64* %240, align 8
  %242 = add i64 %241, 160
  %243 = inttoptr i64 %242 to %"class.v8::Value"*
  br label %248

244:                                              ; preds = %234
  %245 = load i64*, i64** %191, align 8
  %246 = getelementptr inbounds i64, i64* %245, i64 1
  %247 = bitcast i64* %246 to %"class.v8::Value"*
  br label %248

248:                                              ; preds = %244, %238
  %249 = phi %"class.v8::Value"* [ %243, %238 ], [ %247, %244 ]
  %250 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %249) #10
  br i1 %250, label %251, label %254, !prof !5

251:                                              ; preds = %248
  %252 = bitcast %"class.v8::Value"* %249 to %"class.v8::Number"*
  %253 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %252) #10
  br label %256

254:                                              ; preds = %248
  %255 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %178, %"class.v8::Value"* %249, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %256

256:                                              ; preds = %254, %251
  %257 = phi double [ %253, %251 ], [ %255, %254 ]
  %258 = load i32, i32* %188, align 8
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %263

260:                                              ; preds = %256
  %261 = getelementptr inbounds i8, i8* %224, i64 16
  %262 = bitcast i8* %261 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D5scaleEdd(%"class.blink::BaseRenderingContext2D"* %262, double %235, double %257) #10
  br label %263

263:                                              ; preds = %260, %256, %230
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %181, align 8
  %264 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %265 = load i64*, i64** %264, align 8
  %266 = icmp eq i64* %265, null
  br i1 %266, label %276, label %267

267:                                              ; preds = %263
  %268 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %187, align 8
  %269 = bitcast %"class.v8::Isolate"* %268 to %"class.v8::internal::Isolate"*
  %270 = load i64, i64* %265, align 8
  %271 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %269, i64 %270) #10
  %272 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %268) #10
  br i1 %272, label %276, label %273

273:                                              ; preds = %267
  %274 = bitcast i64* %271 to %"class.v8::Value"*
  %275 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %268, %"class.v8::Value"* %274) #10
  br label %276

276:                                              ; preds = %273, %267, %263
  %277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %278 = icmp eq %"class.WTF::StringImpl"* %277, null
  br i1 %278, label %355, label %279

279:                                              ; preds = %276
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load atomic i32, i32* %280 monotonic, align 4
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  br i1 %283, label %286, label %288

286:                                              ; preds = %279
  %287 = add i32 %285, -1
  store i32 %287, i32* %284, align 4
  br label %288

288:                                              ; preds = %286, %279
  %289 = phi i32 [ %287, %286 ], [ %285, %279 ]
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %355

291:                                              ; preds = %288
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %277) #10
  br label %355

292:                                              ; preds = %172
  %293 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %293) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %293, i8 -86, i64 56, i1 false)
  %294 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %294, align 8
  %295 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %295, align 8
  %296 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %296, align 2
  %297 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %298 = bitcast i8** %297 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0)>, <2 x i8*>* %298, align 8
  %299 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %299, align 8
  %300 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %178, %"class.v8::Isolate"** %300, align 8
  %301 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %301, align 8
  %302 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %303 = bitcast %"class.WTF::StringImpl"** %302 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %303, i8 0, i64 16, i1 false) #10
  %304 = icmp slt i32 %24, 2
  br i1 %304, label %305, label %325, !prof !4

305:                                              ; preds = %292
  %306 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %306) #10
  %307 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %24) #10
  %308 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %307, %"class.WTF::StringImpl"** %308, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %308, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %324, label %311

311:                                              ; preds = %305
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  br i1 %315, label %318, label %320

318:                                              ; preds = %311
  %319 = add i32 %317, -1
  store i32 %319, i32* %316, align 4
  br label %320

320:                                              ; preds = %318, %311
  %321 = phi i32 [ %319, %318 ], [ %317, %311 ]
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %320
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %309) #10
  br label %324

324:                                              ; preds = %305, %320, %323
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %306) #10
  br label %326

325:                                              ; preds = %292
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.60, i64 0, i64 0)) #10
  br label %326

326:                                              ; preds = %325, %324
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %294, align 8
  %327 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %328 = load i64*, i64** %327, align 8
  %329 = icmp eq i64* %328, null
  br i1 %329, label %339, label %330

330:                                              ; preds = %326
  %331 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %300, align 8
  %332 = bitcast %"class.v8::Isolate"* %331 to %"class.v8::internal::Isolate"*
  %333 = load i64, i64* %328, align 8
  %334 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %332, i64 %333) #10
  %335 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %331) #10
  br i1 %335, label %339, label %336

336:                                              ; preds = %330
  %337 = bitcast i64* %334 to %"class.v8::Value"*
  %338 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %331, %"class.v8::Value"* %337) #10
  br label %339

339:                                              ; preds = %336, %330, %326
  %340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8
  %341 = icmp eq %"class.WTF::StringImpl"* %340, null
  br i1 %341, label %355, label %342

342:                                              ; preds = %339
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load atomic i32, i32* %343 monotonic, align 4
  %345 = and i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 0
  %348 = load i32, i32* %347, align 4
  br i1 %346, label %349, label %351

349:                                              ; preds = %342
  %350 = add i32 %348, -1
  store i32 %350, i32* %347, align 4
  br label %351

351:                                              ; preds = %349, %342
  %352 = phi i32 [ %350, %349 ], [ %348, %342 ]
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %355

354:                                              ; preds = %351
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %340) #10
  br label %355

355:                                              ; preds = %354, %351, %339, %291, %288, %276, %171, %168, %156
  %356 = phi i8* [ %35, %156 ], [ %35, %168 ], [ %35, %171 ], [ %180, %276 ], [ %180, %288 ], [ %180, %291 ], [ %293, %339 ], [ %293, %351 ], [ %293, %354 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %356) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d28SetLineDashOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::Vector.288", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #10
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %24, label %44, !prof !4

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %22) #10
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #10
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  br label %101

44:                                               ; preds = %1
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 -1
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = and i64 %48, -4294967296
  %53 = zext i32 %51 to i64
  %54 = or i64 %52, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load i16, i16* %56, align 2
  switch i16 %57, label %63 [
    i16 1057, label %58
    i16 1056, label %58
    i16 1040, label %58
  ]

58:                                               ; preds = %44, %44, %44
  %59 = add i64 %48, 19
  %60 = inttoptr i64 %59 to i8**
  %61 = load i8*, i8** %60, align 1
  %62 = bitcast %"class.WTF::Vector.288"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #10
  br label %75

63:                                               ; preds = %44
  %64 = bitcast i64* %47 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #10
  %66 = load i32, i32* %21, align 8
  %67 = bitcast %"class.WTF::Vector.288"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #10
  %68 = icmp sgt i32 %66, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %63
  %70 = load i64*, i64** %5, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 1
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 160
  %74 = inttoptr i64 %73 to %"class.v8::Value"*
  br label %80

75:                                               ; preds = %58, %63
  %76 = phi i8* [ %62, %58 ], [ %67, %63 ]
  %77 = phi i8* [ %61, %58 ], [ %65, %63 ]
  %78 = bitcast i64** %45 to %"class.v8::Value"**
  %79 = load %"class.v8::Value"*, %"class.v8::Value"** %78, align 8
  br label %80

80:                                               ; preds = %69, %75
  %81 = phi i8* [ %67, %69 ], [ %76, %75 ]
  %82 = phi i8* [ %65, %69 ], [ %77, %75 ]
  %83 = phi %"class.v8::Value"* [ %74, %69 ], [ %79, %75 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.288"* nonnull sret %4, %"class.v8::Isolate"* %9, %"class.v8::Value"* %83, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %84 = load i32, i32* %18, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds i8, i8* %82, i64 16
  %88 = bitcast i8* %87 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D11setLineDashERKN3WTF6VectorIdLj0ENS1_18PartitionAllocatorEEE(%"class.blink::BaseRenderingContext2D"* %88, %"class.WTF::Vector.288"* nonnull dereferenceable(16) %4) #10
  br label %89

89:                                               ; preds = %80, %86
  %90 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %4, i64 0, i32 0, i32 0, i32 0
  %91 = load double*, double** %90, align 8
  %92 = icmp eq double* %91, null
  %93 = bitcast double* %91 to i8*
  br i1 %92, label %100, label %94, !prof !5

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %4, i64 0, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %99, label %98, !prof !4

98:                                               ; preds = %94
  store i32 0, i32* %95, align 4
  br label %99

99:                                               ; preds = %98, %94
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %93) #10
  store double* null, double** %90, align 8
  br label %100

100:                                              ; preds = %89, %99
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #10
  br label %101

101:                                              ; preds = %100, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %102 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %103 = load i64*, i64** %102, align 8
  %104 = icmp eq i64* %103, null
  br i1 %104, label %114, label %105

105:                                              ; preds = %101
  %106 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %107 = bitcast %"class.v8::Isolate"* %106 to %"class.v8::internal::Isolate"*
  %108 = load i64, i64* %103, align 8
  %109 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %107, i64 %108) #10
  %110 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %106) #10
  br i1 %110, label %114, label %111

111:                                              ; preds = %105
  %112 = bitcast i64* %109 to %"class.v8::Value"*
  %113 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %106, %"class.v8::Value"* %112) #10
  br label %114

114:                                              ; preds = %111, %105, %101
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #10
  br label %130

130:                                              ; preds = %114, %126, %129
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d29SetTransformOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #10
  %5 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %20

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %4, i64 0, i32 5
  %10 = load %"class.base::TickClock"*, %"class.base::TickClock"** %9, align 8
  %11 = bitcast %"class.base::TickClock"* %10 to i64 (%"class.base::TickClock"*)***
  %12 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %12, i64 2
  %14 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %13, align 8
  %15 = tail call i64 %14(%"class.base::TickClock"* %10) #10
  %16 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %4, i64 0, i32 4, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp slt i64 %15, %17
  br i1 %18, label %20, label %19

19:                                               ; preds = %8
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %4) #10
  br label %20

20:                                               ; preds = %1, %8, %19
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp sgt i32 %22, 5
  br i1 %23, label %24, label %242

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 1
  %28 = bitcast i64* %27 to %"class.v8::Isolate"**
  %29 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %30 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %30) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 56, i1 false) #10
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %33, align 2
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %35 = bitcast i8** %34 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0)>, <2 x i8*>* %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %29, %"class.v8::Isolate"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %40 = bitcast %"class.WTF::StringImpl"** %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #10
  %41 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 -1
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, -1
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = and i64 %44, -4294967296
  %49 = zext i32 %47 to i64
  %50 = or i64 %48, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load i16, i16* %52, align 2
  switch i16 %53, label %59 [
    i16 1057, label %54
    i16 1056, label %54
    i16 1040, label %54
  ]

54:                                               ; preds = %24, %24, %24
  %55 = bitcast i64* %42 to %"class.v8::Value"*
  %56 = add i64 %44, 19
  %57 = inttoptr i64 %56 to i8**
  %58 = load i8*, i8** %57, align 1
  br label %73

59:                                               ; preds = %24
  %60 = bitcast i64* %43 to %"class.v8::Object"*
  %61 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %60, i32 1) #10
  %62 = load i32, i32* %21, align 8
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = bitcast i64** %41 to %"class.v8::Value"**
  %66 = load %"class.v8::Value"*, %"class.v8::Value"** %65, align 8
  br label %73

67:                                               ; preds = %59
  %68 = load i64*, i64** %25, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 160
  %72 = inttoptr i64 %71 to %"class.v8::Value"*
  br label %73

73:                                               ; preds = %54, %64, %67
  %74 = phi i8* [ %61, %67 ], [ %58, %54 ], [ %61, %64 ]
  %75 = phi %"class.v8::Value"* [ %72, %67 ], [ %55, %54 ], [ %66, %64 ]
  %76 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %75) #10
  br i1 %76, label %77, label %80, !prof !5

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::Value"* %75 to %"class.v8::Number"*
  %79 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %78) #10
  br label %84

80:                                               ; preds = %73
  %81 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %29, %"class.v8::Value"* %75, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %82 = load i32, i32* %38, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %213

84:                                               ; preds = %80, %77
  %85 = phi double [ %79, %77 ], [ %81, %80 ]
  %86 = load i32, i32* %21, align 8
  %87 = icmp sgt i32 %86, 1
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = load i64*, i64** %25, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 160
  %93 = inttoptr i64 %92 to %"class.v8::Value"*
  br label %98

94:                                               ; preds = %84
  %95 = load i64*, i64** %41, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 1
  %97 = bitcast i64* %96 to %"class.v8::Value"*
  br label %98

98:                                               ; preds = %94, %88
  %99 = phi %"class.v8::Value"* [ %93, %88 ], [ %97, %94 ]
  %100 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %99) #10
  br i1 %100, label %101, label %104, !prof !5

101:                                              ; preds = %98
  %102 = bitcast %"class.v8::Value"* %99 to %"class.v8::Number"*
  %103 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %102) #10
  br label %106

104:                                              ; preds = %98
  %105 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %29, %"class.v8::Value"* %99, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %106

106:                                              ; preds = %104, %101
  %107 = phi double [ %103, %101 ], [ %105, %104 ]
  %108 = load i32, i32* %38, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %213

110:                                              ; preds = %106
  %111 = load i32, i32* %21, align 8
  %112 = icmp sgt i32 %111, 2
  br i1 %112, label %119, label %113

113:                                              ; preds = %110
  %114 = load i64*, i64** %25, align 8
  %115 = getelementptr inbounds i64, i64* %114, i64 1
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 160
  %118 = inttoptr i64 %117 to %"class.v8::Value"*
  br label %123

119:                                              ; preds = %110
  %120 = load i64*, i64** %41, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 2
  %122 = bitcast i64* %121 to %"class.v8::Value"*
  br label %123

123:                                              ; preds = %119, %113
  %124 = phi %"class.v8::Value"* [ %118, %113 ], [ %122, %119 ]
  %125 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %124) #10
  br i1 %125, label %126, label %129, !prof !5

126:                                              ; preds = %123
  %127 = bitcast %"class.v8::Value"* %124 to %"class.v8::Number"*
  %128 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %127) #10
  br label %131

129:                                              ; preds = %123
  %130 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %29, %"class.v8::Value"* %124, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %131

131:                                              ; preds = %129, %126
  %132 = phi double [ %128, %126 ], [ %130, %129 ]
  %133 = load i32, i32* %38, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %213

135:                                              ; preds = %131
  %136 = load i32, i32* %21, align 8
  %137 = icmp sgt i32 %136, 3
  br i1 %137, label %144, label %138

138:                                              ; preds = %135
  %139 = load i64*, i64** %25, align 8
  %140 = getelementptr inbounds i64, i64* %139, i64 1
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, 160
  %143 = inttoptr i64 %142 to %"class.v8::Value"*
  br label %148

144:                                              ; preds = %135
  %145 = load i64*, i64** %41, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 3
  %147 = bitcast i64* %146 to %"class.v8::Value"*
  br label %148

148:                                              ; preds = %144, %138
  %149 = phi %"class.v8::Value"* [ %143, %138 ], [ %147, %144 ]
  %150 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %149) #10
  br i1 %150, label %151, label %154, !prof !5

151:                                              ; preds = %148
  %152 = bitcast %"class.v8::Value"* %149 to %"class.v8::Number"*
  %153 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %152) #10
  br label %156

154:                                              ; preds = %148
  %155 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %29, %"class.v8::Value"* %149, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %156

156:                                              ; preds = %154, %151
  %157 = phi double [ %153, %151 ], [ %155, %154 ]
  %158 = load i32, i32* %38, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %213

160:                                              ; preds = %156
  %161 = load i32, i32* %21, align 8
  %162 = icmp sgt i32 %161, 4
  br i1 %162, label %169, label %163

163:                                              ; preds = %160
  %164 = load i64*, i64** %25, align 8
  %165 = getelementptr inbounds i64, i64* %164, i64 1
  %166 = load i64, i64* %165, align 8
  %167 = add i64 %166, 160
  %168 = inttoptr i64 %167 to %"class.v8::Value"*
  br label %173

169:                                              ; preds = %160
  %170 = load i64*, i64** %41, align 8
  %171 = getelementptr inbounds i64, i64* %170, i64 4
  %172 = bitcast i64* %171 to %"class.v8::Value"*
  br label %173

173:                                              ; preds = %169, %163
  %174 = phi %"class.v8::Value"* [ %168, %163 ], [ %172, %169 ]
  %175 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %174) #10
  br i1 %175, label %176, label %179, !prof !5

176:                                              ; preds = %173
  %177 = bitcast %"class.v8::Value"* %174 to %"class.v8::Number"*
  %178 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %177) #10
  br label %181

179:                                              ; preds = %173
  %180 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %29, %"class.v8::Value"* %174, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %181

181:                                              ; preds = %179, %176
  %182 = phi double [ %178, %176 ], [ %180, %179 ]
  %183 = load i32, i32* %38, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %213

185:                                              ; preds = %181
  %186 = load i32, i32* %21, align 8
  %187 = icmp sgt i32 %186, 5
  br i1 %187, label %194, label %188

188:                                              ; preds = %185
  %189 = load i64*, i64** %25, align 8
  %190 = getelementptr inbounds i64, i64* %189, i64 1
  %191 = load i64, i64* %190, align 8
  %192 = add i64 %191, 160
  %193 = inttoptr i64 %192 to %"class.v8::Value"*
  br label %198

194:                                              ; preds = %185
  %195 = load i64*, i64** %41, align 8
  %196 = getelementptr inbounds i64, i64* %195, i64 5
  %197 = bitcast i64* %196 to %"class.v8::Value"*
  br label %198

198:                                              ; preds = %194, %188
  %199 = phi %"class.v8::Value"* [ %193, %188 ], [ %197, %194 ]
  %200 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %199) #10
  br i1 %200, label %201, label %204, !prof !5

201:                                              ; preds = %198
  %202 = bitcast %"class.v8::Value"* %199 to %"class.v8::Number"*
  %203 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %202) #10
  br label %206

204:                                              ; preds = %198
  %205 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %29, %"class.v8::Value"* %199, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %206

206:                                              ; preds = %204, %201
  %207 = phi double [ %203, %201 ], [ %205, %204 ]
  %208 = load i32, i32* %38, align 8
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %206
  %211 = getelementptr inbounds i8, i8* %74, i64 16
  %212 = bitcast i8* %211 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D12setTransformEdddddd(%"class.blink::BaseRenderingContext2D"* %212, double %85, double %107, double %132, double %157, double %182, double %207) #10
  br label %213

213:                                              ; preds = %210, %206, %181, %156, %131, %106, %80
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %214 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  br i1 %216, label %226, label %217

217:                                              ; preds = %213
  %218 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %219 = bitcast %"class.v8::Isolate"* %218 to %"class.v8::internal::Isolate"*
  %220 = load i64, i64* %215, align 8
  %221 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %219, i64 %220) #10
  %222 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %218) #10
  br i1 %222, label %226, label %223

223:                                              ; preds = %217
  %224 = bitcast i64* %221 to %"class.v8::Value"*
  %225 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %218, %"class.v8::Value"* %224) #10
  br label %226

226:                                              ; preds = %223, %217, %213
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %367, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %367

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #10
  br label %367

242:                                              ; preds = %20
  %243 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %244 = load i64*, i64** %243, align 8
  %245 = getelementptr inbounds i64, i64* %244, i64 -1
  %246 = load i64, i64* %245, align 8
  %247 = add i64 %246, -1
  %248 = inttoptr i64 %247 to i32*
  %249 = load i32, i32* %248, align 4
  %250 = and i64 %246, -4294967296
  %251 = zext i32 %249 to i64
  %252 = or i64 %250, %251
  %253 = add i64 %252, 7
  %254 = inttoptr i64 %253 to i16*
  %255 = load i16, i16* %254, align 2
  switch i16 %255, label %260 [
    i16 1057, label %256
    i16 1056, label %256
    i16 1040, label %256
  ]

256:                                              ; preds = %242, %242, %242
  %257 = add i64 %246, 19
  %258 = inttoptr i64 %257 to i8**
  %259 = load i8*, i8** %258, align 1
  br label %264

260:                                              ; preds = %242
  %261 = bitcast i64* %245 to %"class.v8::Object"*
  %262 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %261, i32 1) #10
  %263 = load i32, i32* %21, align 8
  br label %264

264:                                              ; preds = %260, %256
  %265 = phi i32 [ %22, %256 ], [ %263, %260 ]
  %266 = phi i8* [ %259, %256 ], [ %262, %260 ]
  %267 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %268 = load i64*, i64** %267, align 8
  %269 = getelementptr inbounds i64, i64* %268, i64 1
  %270 = bitcast i64* %269 to %"class.v8::Isolate"**
  %271 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %270, align 8
  %272 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %272) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %272, i8 -86, i64 56, i1 false) #10
  %273 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %273, align 8
  %274 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %274, align 8
  %275 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %275, align 2
  %276 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %277 = bitcast i8** %276 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0)>, <2 x i8*>* %277, align 8
  %278 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %278, align 8
  %279 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %271, %"class.v8::Isolate"** %279, align 8
  %280 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %280, align 8
  %281 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %282 = bitcast %"class.WTF::StringImpl"** %281 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %282, i8 0, i64 16, i1 false) #10
  %283 = icmp sgt i32 %265, 0
  br i1 %283, label %288, label %284

284:                                              ; preds = %264
  %285 = load i64, i64* %269, align 8
  %286 = add i64 %285, 160
  %287 = inttoptr i64 %286 to %"class.v8::Value"*
  br label %291

288:                                              ; preds = %264
  %289 = bitcast i64** %243 to %"class.v8::Value"**
  %290 = load %"class.v8::Value"*, %"class.v8::Value"** %289, align 8
  br label %291

291:                                              ; preds = %288, %284
  %292 = phi %"class.v8::Value"* [ %287, %284 ], [ %290, %288 ]
  %293 = bitcast %"class.v8::Value"* %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = and i64 %294, 3
  %296 = icmp eq i64 %295, 1
  br i1 %296, label %297, label %321

297:                                              ; preds = %291
  %298 = add i64 %294, -1
  %299 = inttoptr i64 %298 to i32*
  %300 = load i32, i32* %299, align 4
  %301 = and i64 %294, -4294967296
  %302 = zext i32 %300 to i64
  %303 = or i64 %301, %302
  %304 = add i64 %303, 7
  %305 = inttoptr i64 %304 to i16*
  %306 = load i16, i16* %305, align 2
  %307 = icmp eq i16 %306, 67
  br i1 %307, label %308, label %321

308:                                              ; preds = %297
  %309 = add i64 %294, 23
  %310 = inttoptr i64 %309 to i32*
  %311 = load i32, i32* %310, align 4
  %312 = and i32 %311, -2
  %313 = icmp eq i32 %312, 10
  br i1 %313, label %314, label %321

314:                                              ; preds = %308
  %315 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 216) #10
  %316 = bitcast i8* %315 to %"class.blink::DOMMatrixInit"*
  tail call void @_ZN5blink13DOMMatrixInitC1Ev(%"class.blink::DOMMatrixInit"* %316) #10
  %317 = getelementptr inbounds i8, i8* %315, i64 -4
  %318 = bitcast i8* %317 to i16*
  %319 = load atomic i16, i16* %318 monotonic, align 2
  %320 = or i16 %319, 1
  store atomic i16 %320, i16* %318 release, align 2
  br label %334

321:                                              ; preds = %308, %297, %291
  br i1 %283, label %326, label %322

322:                                              ; preds = %321
  %323 = load i64, i64* %269, align 8
  %324 = add i64 %323, 160
  %325 = inttoptr i64 %324 to %"class.v8::Value"*
  br label %329

326:                                              ; preds = %321
  %327 = bitcast i64** %243 to %"class.v8::Value"**
  %328 = load %"class.v8::Value"*, %"class.v8::Value"** %327, align 8
  br label %329

329:                                              ; preds = %326, %322
  %330 = phi %"class.v8::Value"* [ %325, %322 ], [ %328, %326 ]
  %331 = call %"class.blink::DOMMatrixInit"* @_ZN5blink17NativeValueTraitsINS_13DOMMatrixInitEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %271, %"class.v8::Value"* %330, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  %332 = load i32, i32* %280, align 8
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %338

334:                                              ; preds = %329, %314
  %335 = phi %"class.blink::DOMMatrixInit"* [ %316, %314 ], [ %331, %329 ]
  %336 = getelementptr inbounds i8, i8* %266, i64 16
  %337 = bitcast i8* %336 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D12setTransformEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::BaseRenderingContext2D"* %337, %"class.blink::DOMMatrixInit"* %335, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %338

338:                                              ; preds = %334, %329
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %273, align 8
  %339 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %340 = load i64*, i64** %339, align 8
  %341 = icmp eq i64* %340, null
  br i1 %341, label %351, label %342

342:                                              ; preds = %338
  %343 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %279, align 8
  %344 = bitcast %"class.v8::Isolate"* %343 to %"class.v8::internal::Isolate"*
  %345 = load i64, i64* %340, align 8
  %346 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %344, i64 %345) #10
  %347 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %343) #10
  br i1 %347, label %351, label %348

348:                                              ; preds = %342
  %349 = bitcast i64* %346 to %"class.v8::Value"*
  %350 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %343, %"class.v8::Value"* %349) #10
  br label %351

351:                                              ; preds = %348, %342, %338
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %281, align 8
  %353 = icmp eq %"class.WTF::StringImpl"* %352, null
  br i1 %353, label %367, label %354

354:                                              ; preds = %351
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = and i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 0
  %360 = load i32, i32* %359, align 4
  br i1 %358, label %361, label %363

361:                                              ; preds = %354
  %362 = add i32 %360, -1
  store i32 %362, i32* %359, align 4
  br label %363

363:                                              ; preds = %361, %354
  %364 = phi i32 [ %362, %361 ], [ %360, %354 ]
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %367

366:                                              ; preds = %363
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %352) #10
  br label %367

367:                                              ; preds = %366, %363, %351, %241, %238, %226
  %368 = phi i8* [ %30, %226 ], [ %30, %238 ], [ %30, %241 ], [ %272, %351 ], [ %272, %363 ], [ %272, %366 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %368) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d23StrokeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #10
  %4 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %3, i64 0, i32 5
  %9 = load %"class.base::TickClock"*, %"class.base::TickClock"** %8, align 8
  %10 = bitcast %"class.base::TickClock"* %9 to i64 (%"class.base::TickClock"*)***
  %11 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %11, i64 2
  %13 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %12, align 8
  %14 = tail call i64 %13(%"class.base::TickClock"* %9) #10
  %15 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %3, i64 0, i32 4, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp slt i64 %14, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %7
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %3) #10
  br label %19

19:                                               ; preds = %1, %7, %18
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %140

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds i64, i64* %25, i64 1
  %27 = bitcast i64* %26 to %"class.v8::Isolate"**
  %28 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %27, align 8
  %29 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 56, i1 false) #10
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %32, align 2
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %34 = bitcast i8** %33 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0)>, <2 x i8*>* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %28, %"class.v8::Isolate"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %39 = bitcast %"class.WTF::StringImpl"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #10
  %40 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds i64, i64* %41, i64 -1
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = and i64 %43, -4294967296
  %48 = zext i32 %46 to i64
  %49 = or i64 %47, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load i16, i16* %51, align 2
  switch i16 %52, label %58 [
    i16 1057, label %53
    i16 1056, label %53
    i16 1040, label %53
  ]

53:                                               ; preds = %23, %23, %23
  %54 = bitcast i64* %41 to %"class.v8::Value"*
  %55 = add i64 %43, 19
  %56 = inttoptr i64 %55 to i8**
  %57 = load i8*, i8** %56, align 1
  br label %72

58:                                               ; preds = %23
  %59 = bitcast i64* %42 to %"class.v8::Object"*
  %60 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %59, i32 1) #10
  %61 = load i32, i32* %20, align 8
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = bitcast i64** %40 to %"class.v8::Value"**
  %65 = load %"class.v8::Value"*, %"class.v8::Value"** %64, align 8
  br label %72

66:                                               ; preds = %58
  %67 = load i64*, i64** %24, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %72

72:                                               ; preds = %53, %63, %66
  %73 = phi i8* [ %60, %66 ], [ %57, %53 ], [ %60, %63 ]
  %74 = phi %"class.v8::Value"* [ %71, %66 ], [ %54, %53 ], [ %65, %63 ]
  %75 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink6Path2D18wrapper_type_info_E, align 8
  %76 = ptrtoint %"class.v8::Isolate"* %28 to i64
  %77 = add i64 %76, 8
  %78 = inttoptr i64 %77 to %"class.blink::V8PerIsolateData"**
  %79 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %78, align 8
  %80 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %79, %"struct.blink::WrapperTypeInfo"* %75, %"class.v8::Value"* %74) #10
  br i1 %80, label %81, label %103

81:                                               ; preds = %72
  %82 = bitcast %"class.v8::Value"* %74 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, -1
  %85 = inttoptr i64 %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = and i64 %83, -4294967296
  %88 = zext i32 %86 to i64
  %89 = or i64 %87, %88
  %90 = add i64 %89, 7
  %91 = inttoptr i64 %90 to i16*
  %92 = load i16, i16* %91, align 2
  switch i16 %92, label %97 [
    i16 1057, label %93
    i16 1056, label %93
    i16 1040, label %93
  ]

93:                                               ; preds = %81, %81, %81
  %94 = add i64 %83, 19
  %95 = inttoptr i64 %94 to i8**
  %96 = load i8*, i8** %95, align 1
  br label %100

97:                                               ; preds = %81
  %98 = bitcast %"class.v8::Value"* %74 to %"class.v8::Object"*
  %99 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %98, i32 1) #10
  br label %100

100:                                              ; preds = %97, %93
  %101 = phi i8* [ %96, %93 ], [ %99, %97 ]
  %102 = bitcast i8* %101 to %"class.blink::Path2D"*
  br label %106

103:                                              ; preds = %72
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %75, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %104 = load i32, i32* %37, align 8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %103, %100
  %107 = phi %"class.blink::Path2D"* [ %102, %100 ], [ null, %103 ]
  %108 = getelementptr inbounds i8, i8* %73, i64 16
  %109 = bitcast i8* %108 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D6strokeEPNS_6Path2DE(%"class.blink::BaseRenderingContext2D"* %109, %"class.blink::Path2D"* %107) #10
  br label %110

110:                                              ; preds = %106, %103
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %111 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %112 = load i64*, i64** %111, align 8
  %113 = icmp eq i64* %112, null
  br i1 %113, label %123, label %114

114:                                              ; preds = %110
  %115 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  %116 = bitcast %"class.v8::Isolate"* %115 to %"class.v8::internal::Isolate"*
  %117 = load i64, i64* %112, align 8
  %118 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %116, i64 %117) #10
  %119 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %115) #10
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = bitcast i64* %118 to %"class.v8::Value"*
  %122 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %115, %"class.v8::Value"* %121) #10
  br label %123

123:                                              ; preds = %120, %114, %110
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #10
  br label %139

139:                                              ; preds = %123, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %29) #10
  br label %165

140:                                              ; preds = %19
  %141 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %142 = load i64*, i64** %141, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 -1
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, -1
  %146 = inttoptr i64 %145 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = and i64 %144, -4294967296
  %149 = zext i32 %147 to i64
  %150 = or i64 %148, %149
  %151 = add i64 %150, 7
  %152 = inttoptr i64 %151 to i16*
  %153 = load i16, i16* %152, align 2
  switch i16 %153, label %158 [
    i16 1057, label %154
    i16 1056, label %154
    i16 1040, label %154
  ]

154:                                              ; preds = %140, %140, %140
  %155 = add i64 %144, 19
  %156 = inttoptr i64 %155 to i8**
  %157 = load i8*, i8** %156, align 1
  br label %161

158:                                              ; preds = %140
  %159 = bitcast i64* %143 to %"class.v8::Object"*
  %160 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %159, i32 1) #10
  br label %161

161:                                              ; preds = %154, %158
  %162 = phi i8* [ %157, %154 ], [ %160, %158 ]
  %163 = getelementptr inbounds i8, i8* %162, i64 16
  %164 = bitcast i8* %163 to %"class.blink::BaseRenderingContext2D"*
  tail call void @_ZN5blink22BaseRenderingContext2D6strokeEv(%"class.blink::BaseRenderingContext2D"* %164) #10
  br label %165

165:                                              ; preds = %161, %139
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d27StrokeRectOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #10
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !4

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #10
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %166

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #10
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %78) #10
  br i1 %79, label %80, label %83, !prof !5

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Number"*
  %82 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %81) #10
  br label %87

83:                                               ; preds = %76
  %84 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %166

87:                                               ; preds = %80, %83
  %88 = phi double [ %82, %80 ], [ %84, %83 ]
  %89 = load i32, i32* %20, align 8
  %90 = icmp sgt i32 %89, 1
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = load i64*, i64** %4, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 1
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 160
  %96 = inttoptr i64 %95 to %"class.v8::Value"*
  br label %101

97:                                               ; preds = %87
  %98 = load i64*, i64** %44, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 1
  %100 = bitcast i64* %99 to %"class.v8::Value"*
  br label %101

101:                                              ; preds = %91, %97
  %102 = phi %"class.v8::Value"* [ %96, %91 ], [ %100, %97 ]
  %103 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %102) #10
  br i1 %103, label %104, label %107, !prof !5

104:                                              ; preds = %101
  %105 = bitcast %"class.v8::Value"* %102 to %"class.v8::Number"*
  %106 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %105) #10
  br label %109

107:                                              ; preds = %101
  %108 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %102, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %109

109:                                              ; preds = %104, %107
  %110 = phi double [ %106, %104 ], [ %108, %107 ]
  %111 = load i32, i32* %17, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %166

113:                                              ; preds = %109
  %114 = load i32, i32* %20, align 8
  %115 = icmp sgt i32 %114, 2
  br i1 %115, label %122, label %116

116:                                              ; preds = %113
  %117 = load i64*, i64** %4, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %126

122:                                              ; preds = %113
  %123 = load i64*, i64** %44, align 8
  %124 = getelementptr inbounds i64, i64* %123, i64 2
  %125 = bitcast i64* %124 to %"class.v8::Value"*
  br label %126

126:                                              ; preds = %116, %122
  %127 = phi %"class.v8::Value"* [ %121, %116 ], [ %125, %122 ]
  %128 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %127) #10
  br i1 %128, label %129, label %132, !prof !5

129:                                              ; preds = %126
  %130 = bitcast %"class.v8::Value"* %127 to %"class.v8::Number"*
  %131 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %130) #10
  br label %134

132:                                              ; preds = %126
  %133 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %127, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %134

134:                                              ; preds = %129, %132
  %135 = phi double [ %131, %129 ], [ %133, %132 ]
  %136 = load i32, i32* %17, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %166

138:                                              ; preds = %134
  %139 = load i32, i32* %20, align 8
  %140 = icmp sgt i32 %139, 3
  br i1 %140, label %147, label %141

141:                                              ; preds = %138
  %142 = load i64*, i64** %4, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 1
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, 160
  %146 = inttoptr i64 %145 to %"class.v8::Value"*
  br label %151

147:                                              ; preds = %138
  %148 = load i64*, i64** %44, align 8
  %149 = getelementptr inbounds i64, i64* %148, i64 3
  %150 = bitcast i64* %149 to %"class.v8::Value"*
  br label %151

151:                                              ; preds = %141, %147
  %152 = phi %"class.v8::Value"* [ %146, %141 ], [ %150, %147 ]
  %153 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %152) #10
  br i1 %153, label %154, label %157, !prof !5

154:                                              ; preds = %151
  %155 = bitcast %"class.v8::Value"* %152 to %"class.v8::Number"*
  %156 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %155) #10
  br label %159

157:                                              ; preds = %151
  %158 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %152, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %159

159:                                              ; preds = %154, %157
  %160 = phi double [ %156, %154 ], [ %158, %157 ]
  %161 = load i32, i32* %17, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %159
  %164 = getelementptr inbounds i8, i8* %77, i64 16
  %165 = bitcast i8* %164 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D10strokeRectEdddd(%"class.blink::BaseRenderingContext2D"* %165, double %88, double %110, double %135, double %160) #10
  br label %166

166:                                              ; preds = %159, %134, %109, %83, %163, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %168 = load i64*, i64** %167, align 8
  %169 = icmp eq i64* %168, null
  br i1 %169, label %179, label %170

170:                                              ; preds = %166
  %171 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %172 = bitcast %"class.v8::Isolate"* %171 to %"class.v8::internal::Isolate"*
  %173 = load i64, i64* %168, align 8
  %174 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %172, i64 %173) #10
  %175 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %171) #10
  br i1 %175, label %179, label %176

176:                                              ; preds = %170
  %177 = bitcast i64* %174 to %"class.v8::Value"*
  %178 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %171, %"class.v8::Value"* %177) #10
  br label %179

179:                                              ; preds = %176, %170, %166
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #10
  br label %195

195:                                              ; preds = %179, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26TransformOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #10
  %7 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %6, i64 0, i32 5
  %12 = load %"class.base::TickClock"*, %"class.base::TickClock"** %11, align 8
  %13 = bitcast %"class.base::TickClock"* %12 to i64 (%"class.base::TickClock"*)***
  %14 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %14, i64 2
  %16 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %15, align 8
  %17 = tail call i64 %16(%"class.base::TickClock"* %12) #10
  %18 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %6, i64 0, i32 4, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %22, label %21

21:                                               ; preds = %10
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %6) #10
  br label %22

22:                                               ; preds = %1, %10, %21
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_new_canvas_2d_api_enabled_E, align 1, !range !2
  %26 = icmp ne i8 %25, 0
  %27 = icmp sgt i32 %24, 15
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %497

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = bitcast i64* %32 to %"class.v8::Isolate"**
  %34 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %33, align 8
  %35 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 56, i1 false) #10
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %40 = bitcast i8** %39 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0)>, <2 x i8*>* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %34, %"class.v8::Isolate"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %45 = bitcast %"class.WTF::StringImpl"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #10
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %64 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %29, %29, %29
  %60 = bitcast i64* %47 to %"class.v8::Value"*
  %61 = add i64 %49, 19
  %62 = inttoptr i64 %61 to i8**
  %63 = load i8*, i8** %62, align 1
  br label %78

64:                                               ; preds = %29
  %65 = bitcast i64* %48 to %"class.v8::Object"*
  %66 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %65, i32 1) #10
  %67 = load i32, i32* %23, align 8
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = bitcast i64** %46 to %"class.v8::Value"**
  %71 = load %"class.v8::Value"*, %"class.v8::Value"** %70, align 8
  br label %78

72:                                               ; preds = %64
  %73 = load i64*, i64** %30, align 8
  %74 = getelementptr inbounds i64, i64* %73, i64 1
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, 160
  %77 = inttoptr i64 %76 to %"class.v8::Value"*
  br label %78

78:                                               ; preds = %59, %69, %72
  %79 = phi i8* [ %66, %72 ], [ %63, %59 ], [ %66, %69 ]
  %80 = phi %"class.v8::Value"* [ %77, %72 ], [ %60, %59 ], [ %71, %69 ]
  %81 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %80) #10
  br i1 %81, label %82, label %85, !prof !5

82:                                               ; preds = %78
  %83 = bitcast %"class.v8::Value"* %80 to %"class.v8::Number"*
  %84 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %83) #10
  br label %89

85:                                               ; preds = %78
  %86 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %80, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  %87 = load i32, i32* %43, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %468

89:                                               ; preds = %85, %82
  %90 = phi double [ %84, %82 ], [ %86, %85 ]
  %91 = load i32, i32* %23, align 8
  %92 = icmp sgt i32 %91, 1
  br i1 %92, label %99, label %93

93:                                               ; preds = %89
  %94 = load i64*, i64** %30, align 8
  %95 = getelementptr inbounds i64, i64* %94, i64 1
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 160
  %98 = inttoptr i64 %97 to %"class.v8::Value"*
  br label %103

99:                                               ; preds = %89
  %100 = load i64*, i64** %46, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = bitcast i64* %101 to %"class.v8::Value"*
  br label %103

103:                                              ; preds = %99, %93
  %104 = phi %"class.v8::Value"* [ %98, %93 ], [ %102, %99 ]
  %105 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %104) #10
  br i1 %105, label %106, label %109, !prof !5

106:                                              ; preds = %103
  %107 = bitcast %"class.v8::Value"* %104 to %"class.v8::Number"*
  %108 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %107) #10
  br label %111

109:                                              ; preds = %103
  %110 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %104, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %111

111:                                              ; preds = %109, %106
  %112 = phi double [ %108, %106 ], [ %110, %109 ]
  %113 = load i32, i32* %43, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %468

115:                                              ; preds = %111
  %116 = load i32, i32* %23, align 8
  %117 = icmp sgt i32 %116, 2
  br i1 %117, label %124, label %118

118:                                              ; preds = %115
  %119 = load i64*, i64** %30, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 160
  %123 = inttoptr i64 %122 to %"class.v8::Value"*
  br label %128

124:                                              ; preds = %115
  %125 = load i64*, i64** %46, align 8
  %126 = getelementptr inbounds i64, i64* %125, i64 2
  %127 = bitcast i64* %126 to %"class.v8::Value"*
  br label %128

128:                                              ; preds = %124, %118
  %129 = phi %"class.v8::Value"* [ %123, %118 ], [ %127, %124 ]
  %130 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %129) #10
  br i1 %130, label %131, label %134, !prof !5

131:                                              ; preds = %128
  %132 = bitcast %"class.v8::Value"* %129 to %"class.v8::Number"*
  %133 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %132) #10
  br label %136

134:                                              ; preds = %128
  %135 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %129, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %136

136:                                              ; preds = %134, %131
  %137 = phi double [ %133, %131 ], [ %135, %134 ]
  %138 = load i32, i32* %43, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %468

140:                                              ; preds = %136
  %141 = load i32, i32* %23, align 8
  %142 = icmp sgt i32 %141, 3
  br i1 %142, label %149, label %143

143:                                              ; preds = %140
  %144 = load i64*, i64** %30, align 8
  %145 = getelementptr inbounds i64, i64* %144, i64 1
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, 160
  %148 = inttoptr i64 %147 to %"class.v8::Value"*
  br label %153

149:                                              ; preds = %140
  %150 = load i64*, i64** %46, align 8
  %151 = getelementptr inbounds i64, i64* %150, i64 3
  %152 = bitcast i64* %151 to %"class.v8::Value"*
  br label %153

153:                                              ; preds = %149, %143
  %154 = phi %"class.v8::Value"* [ %148, %143 ], [ %152, %149 ]
  %155 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %154) #10
  br i1 %155, label %156, label %159, !prof !5

156:                                              ; preds = %153
  %157 = bitcast %"class.v8::Value"* %154 to %"class.v8::Number"*
  %158 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %157) #10
  br label %161

159:                                              ; preds = %153
  %160 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %154, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %161

161:                                              ; preds = %159, %156
  %162 = phi double [ %158, %156 ], [ %160, %159 ]
  %163 = load i32, i32* %43, align 8
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %468

165:                                              ; preds = %161
  %166 = load i32, i32* %23, align 8
  %167 = icmp sgt i32 %166, 4
  br i1 %167, label %174, label %168

168:                                              ; preds = %165
  %169 = load i64*, i64** %30, align 8
  %170 = getelementptr inbounds i64, i64* %169, i64 1
  %171 = load i64, i64* %170, align 8
  %172 = add i64 %171, 160
  %173 = inttoptr i64 %172 to %"class.v8::Value"*
  br label %178

174:                                              ; preds = %165
  %175 = load i64*, i64** %46, align 8
  %176 = getelementptr inbounds i64, i64* %175, i64 4
  %177 = bitcast i64* %176 to %"class.v8::Value"*
  br label %178

178:                                              ; preds = %174, %168
  %179 = phi %"class.v8::Value"* [ %173, %168 ], [ %177, %174 ]
  %180 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %179) #10
  br i1 %180, label %181, label %184, !prof !5

181:                                              ; preds = %178
  %182 = bitcast %"class.v8::Value"* %179 to %"class.v8::Number"*
  %183 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %182) #10
  br label %186

184:                                              ; preds = %178
  %185 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %179, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %186

186:                                              ; preds = %184, %181
  %187 = phi double [ %183, %181 ], [ %185, %184 ]
  %188 = load i32, i32* %43, align 8
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %468

190:                                              ; preds = %186
  %191 = load i32, i32* %23, align 8
  %192 = icmp sgt i32 %191, 5
  br i1 %192, label %199, label %193

193:                                              ; preds = %190
  %194 = load i64*, i64** %30, align 8
  %195 = getelementptr inbounds i64, i64* %194, i64 1
  %196 = load i64, i64* %195, align 8
  %197 = add i64 %196, 160
  %198 = inttoptr i64 %197 to %"class.v8::Value"*
  br label %203

199:                                              ; preds = %190
  %200 = load i64*, i64** %46, align 8
  %201 = getelementptr inbounds i64, i64* %200, i64 5
  %202 = bitcast i64* %201 to %"class.v8::Value"*
  br label %203

203:                                              ; preds = %199, %193
  %204 = phi %"class.v8::Value"* [ %198, %193 ], [ %202, %199 ]
  %205 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %204) #10
  br i1 %205, label %206, label %209, !prof !5

206:                                              ; preds = %203
  %207 = bitcast %"class.v8::Value"* %204 to %"class.v8::Number"*
  %208 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %207) #10
  br label %211

209:                                              ; preds = %203
  %210 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %204, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %211

211:                                              ; preds = %209, %206
  %212 = phi double [ %208, %206 ], [ %210, %209 ]
  %213 = load i32, i32* %43, align 8
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %468

215:                                              ; preds = %211
  %216 = load i32, i32* %23, align 8
  %217 = icmp sgt i32 %216, 6
  br i1 %217, label %224, label %218

218:                                              ; preds = %215
  %219 = load i64*, i64** %30, align 8
  %220 = getelementptr inbounds i64, i64* %219, i64 1
  %221 = load i64, i64* %220, align 8
  %222 = add i64 %221, 160
  %223 = inttoptr i64 %222 to %"class.v8::Value"*
  br label %228

224:                                              ; preds = %215
  %225 = load i64*, i64** %46, align 8
  %226 = getelementptr inbounds i64, i64* %225, i64 6
  %227 = bitcast i64* %226 to %"class.v8::Value"*
  br label %228

228:                                              ; preds = %224, %218
  %229 = phi %"class.v8::Value"* [ %223, %218 ], [ %227, %224 ]
  %230 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %229) #10
  br i1 %230, label %231, label %234, !prof !5

231:                                              ; preds = %228
  %232 = bitcast %"class.v8::Value"* %229 to %"class.v8::Number"*
  %233 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %232) #10
  br label %236

234:                                              ; preds = %228
  %235 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %229, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %236

236:                                              ; preds = %234, %231
  %237 = phi double [ %233, %231 ], [ %235, %234 ]
  %238 = load i32, i32* %43, align 8
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %468

240:                                              ; preds = %236
  %241 = load i32, i32* %23, align 8
  %242 = icmp sgt i32 %241, 7
  br i1 %242, label %249, label %243

243:                                              ; preds = %240
  %244 = load i64*, i64** %30, align 8
  %245 = getelementptr inbounds i64, i64* %244, i64 1
  %246 = load i64, i64* %245, align 8
  %247 = add i64 %246, 160
  %248 = inttoptr i64 %247 to %"class.v8::Value"*
  br label %253

249:                                              ; preds = %240
  %250 = load i64*, i64** %46, align 8
  %251 = getelementptr inbounds i64, i64* %250, i64 7
  %252 = bitcast i64* %251 to %"class.v8::Value"*
  br label %253

253:                                              ; preds = %249, %243
  %254 = phi %"class.v8::Value"* [ %248, %243 ], [ %252, %249 ]
  %255 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %254) #10
  br i1 %255, label %256, label %259, !prof !5

256:                                              ; preds = %253
  %257 = bitcast %"class.v8::Value"* %254 to %"class.v8::Number"*
  %258 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %257) #10
  br label %261

259:                                              ; preds = %253
  %260 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %254, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %261

261:                                              ; preds = %259, %256
  %262 = phi double [ %258, %256 ], [ %260, %259 ]
  %263 = load i32, i32* %43, align 8
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %468

265:                                              ; preds = %261
  %266 = load i32, i32* %23, align 8
  %267 = icmp sgt i32 %266, 8
  br i1 %267, label %274, label %268

268:                                              ; preds = %265
  %269 = load i64*, i64** %30, align 8
  %270 = getelementptr inbounds i64, i64* %269, i64 1
  %271 = load i64, i64* %270, align 8
  %272 = add i64 %271, 160
  %273 = inttoptr i64 %272 to %"class.v8::Value"*
  br label %278

274:                                              ; preds = %265
  %275 = load i64*, i64** %46, align 8
  %276 = getelementptr inbounds i64, i64* %275, i64 8
  %277 = bitcast i64* %276 to %"class.v8::Value"*
  br label %278

278:                                              ; preds = %274, %268
  %279 = phi %"class.v8::Value"* [ %273, %268 ], [ %277, %274 ]
  %280 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %279) #10
  br i1 %280, label %281, label %284, !prof !5

281:                                              ; preds = %278
  %282 = bitcast %"class.v8::Value"* %279 to %"class.v8::Number"*
  %283 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %282) #10
  br label %286

284:                                              ; preds = %278
  %285 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %279, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %286

286:                                              ; preds = %284, %281
  %287 = phi double [ %283, %281 ], [ %285, %284 ]
  %288 = load i32, i32* %43, align 8
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %468

290:                                              ; preds = %286
  %291 = load i32, i32* %23, align 8
  %292 = icmp sgt i32 %291, 9
  br i1 %292, label %299, label %293

293:                                              ; preds = %290
  %294 = load i64*, i64** %30, align 8
  %295 = getelementptr inbounds i64, i64* %294, i64 1
  %296 = load i64, i64* %295, align 8
  %297 = add i64 %296, 160
  %298 = inttoptr i64 %297 to %"class.v8::Value"*
  br label %303

299:                                              ; preds = %290
  %300 = load i64*, i64** %46, align 8
  %301 = getelementptr inbounds i64, i64* %300, i64 9
  %302 = bitcast i64* %301 to %"class.v8::Value"*
  br label %303

303:                                              ; preds = %299, %293
  %304 = phi %"class.v8::Value"* [ %298, %293 ], [ %302, %299 ]
  %305 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %304) #10
  br i1 %305, label %306, label %309, !prof !5

306:                                              ; preds = %303
  %307 = bitcast %"class.v8::Value"* %304 to %"class.v8::Number"*
  %308 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %307) #10
  br label %311

309:                                              ; preds = %303
  %310 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %304, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %311

311:                                              ; preds = %309, %306
  %312 = phi double [ %308, %306 ], [ %310, %309 ]
  %313 = load i32, i32* %43, align 8
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %468

315:                                              ; preds = %311
  %316 = load i32, i32* %23, align 8
  %317 = icmp sgt i32 %316, 10
  br i1 %317, label %324, label %318

318:                                              ; preds = %315
  %319 = load i64*, i64** %30, align 8
  %320 = getelementptr inbounds i64, i64* %319, i64 1
  %321 = load i64, i64* %320, align 8
  %322 = add i64 %321, 160
  %323 = inttoptr i64 %322 to %"class.v8::Value"*
  br label %328

324:                                              ; preds = %315
  %325 = load i64*, i64** %46, align 8
  %326 = getelementptr inbounds i64, i64* %325, i64 10
  %327 = bitcast i64* %326 to %"class.v8::Value"*
  br label %328

328:                                              ; preds = %324, %318
  %329 = phi %"class.v8::Value"* [ %323, %318 ], [ %327, %324 ]
  %330 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %329) #10
  br i1 %330, label %331, label %334, !prof !5

331:                                              ; preds = %328
  %332 = bitcast %"class.v8::Value"* %329 to %"class.v8::Number"*
  %333 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %332) #10
  br label %336

334:                                              ; preds = %328
  %335 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %329, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %336

336:                                              ; preds = %334, %331
  %337 = phi double [ %333, %331 ], [ %335, %334 ]
  %338 = load i32, i32* %43, align 8
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %468

340:                                              ; preds = %336
  %341 = load i32, i32* %23, align 8
  %342 = icmp sgt i32 %341, 11
  br i1 %342, label %349, label %343

343:                                              ; preds = %340
  %344 = load i64*, i64** %30, align 8
  %345 = getelementptr inbounds i64, i64* %344, i64 1
  %346 = load i64, i64* %345, align 8
  %347 = add i64 %346, 160
  %348 = inttoptr i64 %347 to %"class.v8::Value"*
  br label %353

349:                                              ; preds = %340
  %350 = load i64*, i64** %46, align 8
  %351 = getelementptr inbounds i64, i64* %350, i64 11
  %352 = bitcast i64* %351 to %"class.v8::Value"*
  br label %353

353:                                              ; preds = %349, %343
  %354 = phi %"class.v8::Value"* [ %348, %343 ], [ %352, %349 ]
  %355 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %354) #10
  br i1 %355, label %356, label %359, !prof !5

356:                                              ; preds = %353
  %357 = bitcast %"class.v8::Value"* %354 to %"class.v8::Number"*
  %358 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %357) #10
  br label %361

359:                                              ; preds = %353
  %360 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %354, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %361

361:                                              ; preds = %359, %356
  %362 = phi double [ %358, %356 ], [ %360, %359 ]
  %363 = load i32, i32* %43, align 8
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %468

365:                                              ; preds = %361
  %366 = load i32, i32* %23, align 8
  %367 = icmp sgt i32 %366, 12
  br i1 %367, label %374, label %368

368:                                              ; preds = %365
  %369 = load i64*, i64** %30, align 8
  %370 = getelementptr inbounds i64, i64* %369, i64 1
  %371 = load i64, i64* %370, align 8
  %372 = add i64 %371, 160
  %373 = inttoptr i64 %372 to %"class.v8::Value"*
  br label %378

374:                                              ; preds = %365
  %375 = load i64*, i64** %46, align 8
  %376 = getelementptr inbounds i64, i64* %375, i64 12
  %377 = bitcast i64* %376 to %"class.v8::Value"*
  br label %378

378:                                              ; preds = %374, %368
  %379 = phi %"class.v8::Value"* [ %373, %368 ], [ %377, %374 ]
  %380 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %379) #10
  br i1 %380, label %381, label %384, !prof !5

381:                                              ; preds = %378
  %382 = bitcast %"class.v8::Value"* %379 to %"class.v8::Number"*
  %383 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %382) #10
  br label %386

384:                                              ; preds = %378
  %385 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %379, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %386

386:                                              ; preds = %384, %381
  %387 = phi double [ %383, %381 ], [ %385, %384 ]
  %388 = load i32, i32* %43, align 8
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %468

390:                                              ; preds = %386
  %391 = load i32, i32* %23, align 8
  %392 = icmp sgt i32 %391, 13
  br i1 %392, label %399, label %393

393:                                              ; preds = %390
  %394 = load i64*, i64** %30, align 8
  %395 = getelementptr inbounds i64, i64* %394, i64 1
  %396 = load i64, i64* %395, align 8
  %397 = add i64 %396, 160
  %398 = inttoptr i64 %397 to %"class.v8::Value"*
  br label %403

399:                                              ; preds = %390
  %400 = load i64*, i64** %46, align 8
  %401 = getelementptr inbounds i64, i64* %400, i64 13
  %402 = bitcast i64* %401 to %"class.v8::Value"*
  br label %403

403:                                              ; preds = %399, %393
  %404 = phi %"class.v8::Value"* [ %398, %393 ], [ %402, %399 ]
  %405 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %404) #10
  br i1 %405, label %406, label %409, !prof !5

406:                                              ; preds = %403
  %407 = bitcast %"class.v8::Value"* %404 to %"class.v8::Number"*
  %408 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %407) #10
  br label %411

409:                                              ; preds = %403
  %410 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %404, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %411

411:                                              ; preds = %409, %406
  %412 = phi double [ %408, %406 ], [ %410, %409 ]
  %413 = load i32, i32* %43, align 8
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %415, label %468

415:                                              ; preds = %411
  %416 = load i32, i32* %23, align 8
  %417 = icmp sgt i32 %416, 14
  br i1 %417, label %424, label %418

418:                                              ; preds = %415
  %419 = load i64*, i64** %30, align 8
  %420 = getelementptr inbounds i64, i64* %419, i64 1
  %421 = load i64, i64* %420, align 8
  %422 = add i64 %421, 160
  %423 = inttoptr i64 %422 to %"class.v8::Value"*
  br label %428

424:                                              ; preds = %415
  %425 = load i64*, i64** %46, align 8
  %426 = getelementptr inbounds i64, i64* %425, i64 14
  %427 = bitcast i64* %426 to %"class.v8::Value"*
  br label %428

428:                                              ; preds = %424, %418
  %429 = phi %"class.v8::Value"* [ %423, %418 ], [ %427, %424 ]
  %430 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %429) #10
  br i1 %430, label %431, label %434, !prof !5

431:                                              ; preds = %428
  %432 = bitcast %"class.v8::Value"* %429 to %"class.v8::Number"*
  %433 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %432) #10
  br label %436

434:                                              ; preds = %428
  %435 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %429, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %436

436:                                              ; preds = %434, %431
  %437 = phi double [ %433, %431 ], [ %435, %434 ]
  %438 = load i32, i32* %43, align 8
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %440, label %468

440:                                              ; preds = %436
  %441 = load i32, i32* %23, align 8
  %442 = icmp sgt i32 %441, 15
  br i1 %442, label %449, label %443

443:                                              ; preds = %440
  %444 = load i64*, i64** %30, align 8
  %445 = getelementptr inbounds i64, i64* %444, i64 1
  %446 = load i64, i64* %445, align 8
  %447 = add i64 %446, 160
  %448 = inttoptr i64 %447 to %"class.v8::Value"*
  br label %453

449:                                              ; preds = %440
  %450 = load i64*, i64** %46, align 8
  %451 = getelementptr inbounds i64, i64* %450, i64 15
  %452 = bitcast i64* %451 to %"class.v8::Value"*
  br label %453

453:                                              ; preds = %449, %443
  %454 = phi %"class.v8::Value"* [ %448, %443 ], [ %452, %449 ]
  %455 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %454) #10
  br i1 %455, label %456, label %459, !prof !5

456:                                              ; preds = %453
  %457 = bitcast %"class.v8::Value"* %454 to %"class.v8::Number"*
  %458 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %457) #10
  br label %461

459:                                              ; preds = %453
  %460 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %454, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %461

461:                                              ; preds = %459, %456
  %462 = phi double [ %458, %456 ], [ %460, %459 ]
  %463 = load i32, i32* %43, align 8
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %465, label %468

465:                                              ; preds = %461
  %466 = getelementptr inbounds i8, i8* %79, i64 16
  %467 = bitcast i8* %466 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D9transformEdddddddddddddddd(%"class.blink::BaseRenderingContext2D"* %467, double %90, double %112, double %137, double %162, double %187, double %212, double %237, double %262, double %287, double %312, double %337, double %362, double %387, double %412, double %437, double %462) #10
  br label %468

468:                                              ; preds = %465, %461, %436, %411, %386, %361, %336, %311, %286, %261, %236, %211, %186, %161, %136, %111, %85
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %469 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %470 = load i64*, i64** %469, align 8
  %471 = icmp eq i64* %470, null
  br i1 %471, label %481, label %472

472:                                              ; preds = %468
  %473 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %42, align 8
  %474 = bitcast %"class.v8::Isolate"* %473 to %"class.v8::internal::Isolate"*
  %475 = load i64, i64* %470, align 8
  %476 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %474, i64 %475) #10
  %477 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %473) #10
  br i1 %477, label %481, label %478

478:                                              ; preds = %472
  %479 = bitcast i64* %476 to %"class.v8::Value"*
  %480 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %473, %"class.v8::Value"* %479) #10
  br label %481

481:                                              ; preds = %478, %472, %468
  %482 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %483 = icmp eq %"class.WTF::StringImpl"* %482, null
  br i1 %483, label %780, label %484

484:                                              ; preds = %481
  %485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %482, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %486 = load atomic i32, i32* %485 monotonic, align 4
  %487 = and i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %482, i64 0, i32 0
  %490 = load i32, i32* %489, align 4
  br i1 %488, label %491, label %493

491:                                              ; preds = %484
  %492 = add i32 %490, -1
  store i32 %492, i32* %489, align 4
  br label %493

493:                                              ; preds = %491, %484
  %494 = phi i32 [ %492, %491 ], [ %490, %484 ]
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %780

496:                                              ; preds = %493
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %482) #10
  br label %780

497:                                              ; preds = %22
  %498 = icmp eq i32 %24, 6
  %499 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %500 = load i64*, i64** %499, align 8
  %501 = getelementptr inbounds i64, i64* %500, i64 1
  %502 = bitcast i64* %501 to %"class.v8::Isolate"**
  %503 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %502, align 8
  br i1 %498, label %504, label %717

504:                                              ; preds = %497
  %505 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %505) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %505, i8 -86, i64 56, i1 false) #10
  %506 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %506, align 8
  %507 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %507, align 8
  %508 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %508, align 2
  %509 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %510 = bitcast i8** %509 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0)>, <2 x i8*>* %510, align 8
  %511 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %511, align 8
  %512 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %503, %"class.v8::Isolate"** %512, align 8
  %513 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %513, align 8
  %514 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %515 = bitcast %"class.WTF::StringImpl"** %514 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %515, i8 0, i64 16, i1 false) #10
  %516 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %517 = load i64*, i64** %516, align 8
  %518 = getelementptr inbounds i64, i64* %517, i64 -1
  %519 = load i64, i64* %518, align 8
  %520 = add i64 %519, -1
  %521 = inttoptr i64 %520 to i32*
  %522 = load i32, i32* %521, align 4
  %523 = and i64 %519, -4294967296
  %524 = zext i32 %522 to i64
  %525 = or i64 %523, %524
  %526 = add i64 %525, 7
  %527 = inttoptr i64 %526 to i16*
  %528 = load i16, i16* %527, align 2
  switch i16 %528, label %534 [
    i16 1057, label %529
    i16 1056, label %529
    i16 1040, label %529
  ]

529:                                              ; preds = %504, %504, %504
  %530 = bitcast i64* %517 to %"class.v8::Value"*
  %531 = add i64 %519, 19
  %532 = inttoptr i64 %531 to i8**
  %533 = load i8*, i8** %532, align 1
  br label %548

534:                                              ; preds = %504
  %535 = bitcast i64* %518 to %"class.v8::Object"*
  %536 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %535, i32 1) #10
  %537 = load i32, i32* %23, align 8
  %538 = icmp sgt i32 %537, 0
  br i1 %538, label %539, label %542

539:                                              ; preds = %534
  %540 = bitcast i64** %516 to %"class.v8::Value"**
  %541 = load %"class.v8::Value"*, %"class.v8::Value"** %540, align 8
  br label %548

542:                                              ; preds = %534
  %543 = load i64*, i64** %499, align 8
  %544 = getelementptr inbounds i64, i64* %543, i64 1
  %545 = load i64, i64* %544, align 8
  %546 = add i64 %545, 160
  %547 = inttoptr i64 %546 to %"class.v8::Value"*
  br label %548

548:                                              ; preds = %529, %539, %542
  %549 = phi i8* [ %536, %542 ], [ %533, %529 ], [ %536, %539 ]
  %550 = phi %"class.v8::Value"* [ %547, %542 ], [ %530, %529 ], [ %541, %539 ]
  %551 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %550) #10
  br i1 %551, label %552, label %555, !prof !5

552:                                              ; preds = %548
  %553 = bitcast %"class.v8::Value"* %550 to %"class.v8::Number"*
  %554 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %553) #10
  br label %559

555:                                              ; preds = %548
  %556 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %503, %"class.v8::Value"* %550, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %557 = load i32, i32* %513, align 8
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %559, label %688

559:                                              ; preds = %555, %552
  %560 = phi double [ %554, %552 ], [ %556, %555 ]
  %561 = load i32, i32* %23, align 8
  %562 = icmp sgt i32 %561, 1
  br i1 %562, label %569, label %563

563:                                              ; preds = %559
  %564 = load i64*, i64** %499, align 8
  %565 = getelementptr inbounds i64, i64* %564, i64 1
  %566 = load i64, i64* %565, align 8
  %567 = add i64 %566, 160
  %568 = inttoptr i64 %567 to %"class.v8::Value"*
  br label %573

569:                                              ; preds = %559
  %570 = load i64*, i64** %516, align 8
  %571 = getelementptr inbounds i64, i64* %570, i64 1
  %572 = bitcast i64* %571 to %"class.v8::Value"*
  br label %573

573:                                              ; preds = %569, %563
  %574 = phi %"class.v8::Value"* [ %568, %563 ], [ %572, %569 ]
  %575 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %574) #10
  br i1 %575, label %576, label %579, !prof !5

576:                                              ; preds = %573
  %577 = bitcast %"class.v8::Value"* %574 to %"class.v8::Number"*
  %578 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %577) #10
  br label %581

579:                                              ; preds = %573
  %580 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %503, %"class.v8::Value"* %574, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %581

581:                                              ; preds = %579, %576
  %582 = phi double [ %578, %576 ], [ %580, %579 ]
  %583 = load i32, i32* %513, align 8
  %584 = icmp eq i32 %583, 0
  br i1 %584, label %585, label %688

585:                                              ; preds = %581
  %586 = load i32, i32* %23, align 8
  %587 = icmp sgt i32 %586, 2
  br i1 %587, label %594, label %588

588:                                              ; preds = %585
  %589 = load i64*, i64** %499, align 8
  %590 = getelementptr inbounds i64, i64* %589, i64 1
  %591 = load i64, i64* %590, align 8
  %592 = add i64 %591, 160
  %593 = inttoptr i64 %592 to %"class.v8::Value"*
  br label %598

594:                                              ; preds = %585
  %595 = load i64*, i64** %516, align 8
  %596 = getelementptr inbounds i64, i64* %595, i64 2
  %597 = bitcast i64* %596 to %"class.v8::Value"*
  br label %598

598:                                              ; preds = %594, %588
  %599 = phi %"class.v8::Value"* [ %593, %588 ], [ %597, %594 ]
  %600 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %599) #10
  br i1 %600, label %601, label %604, !prof !5

601:                                              ; preds = %598
  %602 = bitcast %"class.v8::Value"* %599 to %"class.v8::Number"*
  %603 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %602) #10
  br label %606

604:                                              ; preds = %598
  %605 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %503, %"class.v8::Value"* %599, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %606

606:                                              ; preds = %604, %601
  %607 = phi double [ %603, %601 ], [ %605, %604 ]
  %608 = load i32, i32* %513, align 8
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %610, label %688

610:                                              ; preds = %606
  %611 = load i32, i32* %23, align 8
  %612 = icmp sgt i32 %611, 3
  br i1 %612, label %619, label %613

613:                                              ; preds = %610
  %614 = load i64*, i64** %499, align 8
  %615 = getelementptr inbounds i64, i64* %614, i64 1
  %616 = load i64, i64* %615, align 8
  %617 = add i64 %616, 160
  %618 = inttoptr i64 %617 to %"class.v8::Value"*
  br label %623

619:                                              ; preds = %610
  %620 = load i64*, i64** %516, align 8
  %621 = getelementptr inbounds i64, i64* %620, i64 3
  %622 = bitcast i64* %621 to %"class.v8::Value"*
  br label %623

623:                                              ; preds = %619, %613
  %624 = phi %"class.v8::Value"* [ %618, %613 ], [ %622, %619 ]
  %625 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %624) #10
  br i1 %625, label %626, label %629, !prof !5

626:                                              ; preds = %623
  %627 = bitcast %"class.v8::Value"* %624 to %"class.v8::Number"*
  %628 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %627) #10
  br label %631

629:                                              ; preds = %623
  %630 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %503, %"class.v8::Value"* %624, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %631

631:                                              ; preds = %629, %626
  %632 = phi double [ %628, %626 ], [ %630, %629 ]
  %633 = load i32, i32* %513, align 8
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %635, label %688

635:                                              ; preds = %631
  %636 = load i32, i32* %23, align 8
  %637 = icmp sgt i32 %636, 4
  br i1 %637, label %644, label %638

638:                                              ; preds = %635
  %639 = load i64*, i64** %499, align 8
  %640 = getelementptr inbounds i64, i64* %639, i64 1
  %641 = load i64, i64* %640, align 8
  %642 = add i64 %641, 160
  %643 = inttoptr i64 %642 to %"class.v8::Value"*
  br label %648

644:                                              ; preds = %635
  %645 = load i64*, i64** %516, align 8
  %646 = getelementptr inbounds i64, i64* %645, i64 4
  %647 = bitcast i64* %646 to %"class.v8::Value"*
  br label %648

648:                                              ; preds = %644, %638
  %649 = phi %"class.v8::Value"* [ %643, %638 ], [ %647, %644 ]
  %650 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %649) #10
  br i1 %650, label %651, label %654, !prof !5

651:                                              ; preds = %648
  %652 = bitcast %"class.v8::Value"* %649 to %"class.v8::Number"*
  %653 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %652) #10
  br label %656

654:                                              ; preds = %648
  %655 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %503, %"class.v8::Value"* %649, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %656

656:                                              ; preds = %654, %651
  %657 = phi double [ %653, %651 ], [ %655, %654 ]
  %658 = load i32, i32* %513, align 8
  %659 = icmp eq i32 %658, 0
  br i1 %659, label %660, label %688

660:                                              ; preds = %656
  %661 = load i32, i32* %23, align 8
  %662 = icmp sgt i32 %661, 5
  br i1 %662, label %669, label %663

663:                                              ; preds = %660
  %664 = load i64*, i64** %499, align 8
  %665 = getelementptr inbounds i64, i64* %664, i64 1
  %666 = load i64, i64* %665, align 8
  %667 = add i64 %666, 160
  %668 = inttoptr i64 %667 to %"class.v8::Value"*
  br label %673

669:                                              ; preds = %660
  %670 = load i64*, i64** %516, align 8
  %671 = getelementptr inbounds i64, i64* %670, i64 5
  %672 = bitcast i64* %671 to %"class.v8::Value"*
  br label %673

673:                                              ; preds = %669, %663
  %674 = phi %"class.v8::Value"* [ %668, %663 ], [ %672, %669 ]
  %675 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %674) #10
  br i1 %675, label %676, label %679, !prof !5

676:                                              ; preds = %673
  %677 = bitcast %"class.v8::Value"* %674 to %"class.v8::Number"*
  %678 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %677) #10
  br label %681

679:                                              ; preds = %673
  %680 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %503, %"class.v8::Value"* %674, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %681

681:                                              ; preds = %679, %676
  %682 = phi double [ %678, %676 ], [ %680, %679 ]
  %683 = load i32, i32* %513, align 8
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %685, label %688

685:                                              ; preds = %681
  %686 = getelementptr inbounds i8, i8* %549, i64 16
  %687 = bitcast i8* %686 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D9transformEdddddd(%"class.blink::BaseRenderingContext2D"* %687, double %560, double %582, double %607, double %632, double %657, double %682) #10
  br label %688

688:                                              ; preds = %685, %681, %656, %631, %606, %581, %555
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %506, align 8
  %689 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %690 = load i64*, i64** %689, align 8
  %691 = icmp eq i64* %690, null
  br i1 %691, label %701, label %692

692:                                              ; preds = %688
  %693 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %512, align 8
  %694 = bitcast %"class.v8::Isolate"* %693 to %"class.v8::internal::Isolate"*
  %695 = load i64, i64* %690, align 8
  %696 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %694, i64 %695) #10
  %697 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %693) #10
  br i1 %697, label %701, label %698

698:                                              ; preds = %692
  %699 = bitcast i64* %696 to %"class.v8::Value"*
  %700 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %693, %"class.v8::Value"* %699) #10
  br label %701

701:                                              ; preds = %698, %692, %688
  %702 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %514, align 8
  %703 = icmp eq %"class.WTF::StringImpl"* %702, null
  br i1 %703, label %780, label %704

704:                                              ; preds = %701
  %705 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %702, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %706 = load atomic i32, i32* %705 monotonic, align 4
  %707 = and i32 %706, 2
  %708 = icmp eq i32 %707, 0
  %709 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %702, i64 0, i32 0
  %710 = load i32, i32* %709, align 4
  br i1 %708, label %711, label %713

711:                                              ; preds = %704
  %712 = add i32 %710, -1
  store i32 %712, i32* %709, align 4
  br label %713

713:                                              ; preds = %711, %704
  %714 = phi i32 [ %712, %711 ], [ %710, %704 ]
  %715 = icmp eq i32 %714, 0
  br i1 %715, label %716, label %780

716:                                              ; preds = %713
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %702) #10
  br label %780

717:                                              ; preds = %497
  %718 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %718) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %718, i8 -86, i64 56, i1 false)
  %719 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %719, align 8
  %720 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %720, align 8
  %721 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %721, align 2
  %722 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %723 = bitcast i8** %722 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0)>, <2 x i8*>* %723, align 8
  %724 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %724, align 8
  %725 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %503, %"class.v8::Isolate"** %725, align 8
  %726 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %726, align 8
  %727 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %728 = bitcast %"class.WTF::StringImpl"** %727 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %728, i8 0, i64 16, i1 false) #10
  %729 = icmp slt i32 %24, 6
  br i1 %729, label %730, label %750, !prof !4

730:                                              ; preds = %717
  %731 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %731) #10
  %732 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 6, i32 %24) #10
  %733 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %732, %"class.WTF::StringImpl"** %733, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %734 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %733, align 8
  %735 = icmp eq %"class.WTF::StringImpl"* %734, null
  br i1 %735, label %749, label %736

736:                                              ; preds = %730
  %737 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %734, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %738 = load atomic i32, i32* %737 monotonic, align 4
  %739 = and i32 %738, 2
  %740 = icmp eq i32 %739, 0
  %741 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %734, i64 0, i32 0
  %742 = load i32, i32* %741, align 4
  br i1 %740, label %743, label %745

743:                                              ; preds = %736
  %744 = add i32 %742, -1
  store i32 %744, i32* %741, align 4
  br label %745

745:                                              ; preds = %743, %736
  %746 = phi i32 [ %744, %743 ], [ %742, %736 ]
  %747 = icmp eq i32 %746, 0
  br i1 %747, label %748, label %749

748:                                              ; preds = %745
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %734) #10
  br label %749

749:                                              ; preds = %730, %745, %748
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %731) #10
  br label %751

750:                                              ; preds = %717
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.60, i64 0, i64 0)) #10
  br label %751

751:                                              ; preds = %750, %749
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %719, align 8
  %752 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %753 = load i64*, i64** %752, align 8
  %754 = icmp eq i64* %753, null
  br i1 %754, label %764, label %755

755:                                              ; preds = %751
  %756 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %725, align 8
  %757 = bitcast %"class.v8::Isolate"* %756 to %"class.v8::internal::Isolate"*
  %758 = load i64, i64* %753, align 8
  %759 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %757, i64 %758) #10
  %760 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %756) #10
  br i1 %760, label %764, label %761

761:                                              ; preds = %755
  %762 = bitcast i64* %759 to %"class.v8::Value"*
  %763 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %756, %"class.v8::Value"* %762) #10
  br label %764

764:                                              ; preds = %761, %755, %751
  %765 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %727, align 8
  %766 = icmp eq %"class.WTF::StringImpl"* %765, null
  br i1 %766, label %780, label %767

767:                                              ; preds = %764
  %768 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %765, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %769 = load atomic i32, i32* %768 monotonic, align 4
  %770 = and i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %765, i64 0, i32 0
  %773 = load i32, i32* %772, align 4
  br i1 %771, label %774, label %776

774:                                              ; preds = %767
  %775 = add i32 %773, -1
  store i32 %775, i32* %772, align 4
  br label %776

776:                                              ; preds = %774, %767
  %777 = phi i32 [ %775, %774 ], [ %773, %767 ]
  %778 = icmp eq i32 %777, 0
  br i1 %778, label %779, label %780

779:                                              ; preds = %776
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %765) #10
  br label %780

780:                                              ; preds = %779, %776, %764, %716, %713, %701, %496, %493, %481
  %781 = phi i8* [ %35, %481 ], [ %35, %493 ], [ %35, %496 ], [ %505, %701 ], [ %505, %713 ], [ %505, %716 ], [ %718, %764 ], [ %718, %776 ], [ %718, %779 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %781) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26TranslateOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #10
  %7 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %6, i64 0, i32 5
  %12 = load %"class.base::TickClock"*, %"class.base::TickClock"** %11, align 8
  %13 = bitcast %"class.base::TickClock"* %12 to i64 (%"class.base::TickClock"*)***
  %14 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %14, i64 2
  %16 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %15, align 8
  %17 = tail call i64 %16(%"class.base::TickClock"* %12) #10
  %18 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %6, i64 0, i32 4, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %22, label %21

21:                                               ; preds = %10
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %6) #10
  br label %22

22:                                               ; preds = %1, %10, %21
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_new_canvas_2d_api_enabled_E, align 1, !range !2
  %26 = icmp ne i8 %25, 0
  %27 = icmp sgt i32 %24, 2
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %172

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = bitcast i64* %32 to %"class.v8::Isolate"**
  %34 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %33, align 8
  %35 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 56, i1 false) #10
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %40 = bitcast i8** %39 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i64 0, i64 0)>, <2 x i8*>* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %34, %"class.v8::Isolate"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %45 = bitcast %"class.WTF::StringImpl"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #10
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %64 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %29, %29, %29
  %60 = bitcast i64* %47 to %"class.v8::Value"*
  %61 = add i64 %49, 19
  %62 = inttoptr i64 %61 to i8**
  %63 = load i8*, i8** %62, align 1
  br label %78

64:                                               ; preds = %29
  %65 = bitcast i64* %48 to %"class.v8::Object"*
  %66 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %65, i32 1) #10
  %67 = load i32, i32* %23, align 8
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = bitcast i64** %46 to %"class.v8::Value"**
  %71 = load %"class.v8::Value"*, %"class.v8::Value"** %70, align 8
  br label %78

72:                                               ; preds = %64
  %73 = load i64*, i64** %30, align 8
  %74 = getelementptr inbounds i64, i64* %73, i64 1
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, 160
  %77 = inttoptr i64 %76 to %"class.v8::Value"*
  br label %78

78:                                               ; preds = %59, %69, %72
  %79 = phi i8* [ %66, %72 ], [ %63, %59 ], [ %66, %69 ]
  %80 = phi %"class.v8::Value"* [ %77, %72 ], [ %60, %59 ], [ %71, %69 ]
  %81 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %80) #10
  br i1 %81, label %82, label %85, !prof !5

82:                                               ; preds = %78
  %83 = bitcast %"class.v8::Value"* %80 to %"class.v8::Number"*
  %84 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %83) #10
  br label %89

85:                                               ; preds = %78
  %86 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %80, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  %87 = load i32, i32* %43, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %143

89:                                               ; preds = %85, %82
  %90 = phi double [ %84, %82 ], [ %86, %85 ]
  %91 = load i32, i32* %23, align 8
  %92 = icmp sgt i32 %91, 1
  br i1 %92, label %99, label %93

93:                                               ; preds = %89
  %94 = load i64*, i64** %30, align 8
  %95 = getelementptr inbounds i64, i64* %94, i64 1
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 160
  %98 = inttoptr i64 %97 to %"class.v8::Value"*
  br label %103

99:                                               ; preds = %89
  %100 = load i64*, i64** %46, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = bitcast i64* %101 to %"class.v8::Value"*
  br label %103

103:                                              ; preds = %99, %93
  %104 = phi %"class.v8::Value"* [ %98, %93 ], [ %102, %99 ]
  %105 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %104) #10
  br i1 %105, label %106, label %109, !prof !5

106:                                              ; preds = %103
  %107 = bitcast %"class.v8::Value"* %104 to %"class.v8::Number"*
  %108 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %107) #10
  br label %111

109:                                              ; preds = %103
  %110 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %104, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %111

111:                                              ; preds = %109, %106
  %112 = phi double [ %108, %106 ], [ %110, %109 ]
  %113 = load i32, i32* %43, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %143

115:                                              ; preds = %111
  %116 = load i32, i32* %23, align 8
  %117 = icmp sgt i32 %116, 2
  br i1 %117, label %124, label %118

118:                                              ; preds = %115
  %119 = load i64*, i64** %30, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 1
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 160
  %123 = inttoptr i64 %122 to %"class.v8::Value"*
  br label %128

124:                                              ; preds = %115
  %125 = load i64*, i64** %46, align 8
  %126 = getelementptr inbounds i64, i64* %125, i64 2
  %127 = bitcast i64* %126 to %"class.v8::Value"*
  br label %128

128:                                              ; preds = %124, %118
  %129 = phi %"class.v8::Value"* [ %123, %118 ], [ %127, %124 ]
  %130 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %129) #10
  br i1 %130, label %131, label %134, !prof !5

131:                                              ; preds = %128
  %132 = bitcast %"class.v8::Value"* %129 to %"class.v8::Number"*
  %133 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %132) #10
  br label %136

134:                                              ; preds = %128
  %135 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %34, %"class.v8::Value"* %129, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  br label %136

136:                                              ; preds = %134, %131
  %137 = phi double [ %133, %131 ], [ %135, %134 ]
  %138 = load i32, i32* %43, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %136
  %141 = getelementptr inbounds i8, i8* %79, i64 16
  %142 = bitcast i8* %141 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D9translateEddd(%"class.blink::BaseRenderingContext2D"* %142, double %90, double %112, double %137) #10
  br label %143

143:                                              ; preds = %140, %136, %111, %85
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %144 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %145 = load i64*, i64** %144, align 8
  %146 = icmp eq i64* %145, null
  br i1 %146, label %156, label %147

147:                                              ; preds = %143
  %148 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %42, align 8
  %149 = bitcast %"class.v8::Isolate"* %148 to %"class.v8::internal::Isolate"*
  %150 = load i64, i64* %145, align 8
  %151 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %149, i64 %150) #10
  %152 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %148) #10
  br i1 %152, label %156, label %153

153:                                              ; preds = %147
  %154 = bitcast i64* %151 to %"class.v8::Value"*
  %155 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %148, %"class.v8::Value"* %154) #10
  br label %156

156:                                              ; preds = %153, %147, %143
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %355, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %355

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #10
  br label %355

172:                                              ; preds = %22
  %173 = icmp eq i32 %24, 2
  %174 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %175 = load i64*, i64** %174, align 8
  %176 = getelementptr inbounds i64, i64* %175, i64 1
  %177 = bitcast i64* %176 to %"class.v8::Isolate"**
  %178 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %177, align 8
  br i1 %173, label %179, label %292

179:                                              ; preds = %172
  %180 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %180) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %180, i8 -86, i64 56, i1 false) #10
  %181 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %181, align 8
  %182 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %182, align 8
  %183 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %183, align 2
  %184 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %185 = bitcast i8** %184 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i64 0, i64 0)>, <2 x i8*>* %185, align 8
  %186 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %186, align 8
  %187 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %178, %"class.v8::Isolate"** %187, align 8
  %188 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %188, align 8
  %189 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %190 = bitcast %"class.WTF::StringImpl"** %189 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 16, i1 false) #10
  %191 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %192 = load i64*, i64** %191, align 8
  %193 = getelementptr inbounds i64, i64* %192, i64 -1
  %194 = load i64, i64* %193, align 8
  %195 = add i64 %194, -1
  %196 = inttoptr i64 %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = and i64 %194, -4294967296
  %199 = zext i32 %197 to i64
  %200 = or i64 %198, %199
  %201 = add i64 %200, 7
  %202 = inttoptr i64 %201 to i16*
  %203 = load i16, i16* %202, align 2
  switch i16 %203, label %209 [
    i16 1057, label %204
    i16 1056, label %204
    i16 1040, label %204
  ]

204:                                              ; preds = %179, %179, %179
  %205 = bitcast i64* %192 to %"class.v8::Value"*
  %206 = add i64 %194, 19
  %207 = inttoptr i64 %206 to i8**
  %208 = load i8*, i8** %207, align 1
  br label %223

209:                                              ; preds = %179
  %210 = bitcast i64* %193 to %"class.v8::Object"*
  %211 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %210, i32 1) #10
  %212 = load i32, i32* %23, align 8
  %213 = icmp sgt i32 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %209
  %215 = bitcast i64** %191 to %"class.v8::Value"**
  %216 = load %"class.v8::Value"*, %"class.v8::Value"** %215, align 8
  br label %223

217:                                              ; preds = %209
  %218 = load i64*, i64** %174, align 8
  %219 = getelementptr inbounds i64, i64* %218, i64 1
  %220 = load i64, i64* %219, align 8
  %221 = add i64 %220, 160
  %222 = inttoptr i64 %221 to %"class.v8::Value"*
  br label %223

223:                                              ; preds = %204, %214, %217
  %224 = phi i8* [ %211, %217 ], [ %208, %204 ], [ %211, %214 ]
  %225 = phi %"class.v8::Value"* [ %222, %217 ], [ %205, %204 ], [ %216, %214 ]
  %226 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %225) #10
  br i1 %226, label %227, label %230, !prof !5

227:                                              ; preds = %223
  %228 = bitcast %"class.v8::Value"* %225 to %"class.v8::Number"*
  %229 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %228) #10
  br label %234

230:                                              ; preds = %223
  %231 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %178, %"class.v8::Value"* %225, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %232 = load i32, i32* %188, align 8
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %263

234:                                              ; preds = %230, %227
  %235 = phi double [ %229, %227 ], [ %231, %230 ]
  %236 = load i32, i32* %23, align 8
  %237 = icmp sgt i32 %236, 1
  br i1 %237, label %244, label %238

238:                                              ; preds = %234
  %239 = load i64*, i64** %174, align 8
  %240 = getelementptr inbounds i64, i64* %239, i64 1
  %241 = load i64, i64* %240, align 8
  %242 = add i64 %241, 160
  %243 = inttoptr i64 %242 to %"class.v8::Value"*
  br label %248

244:                                              ; preds = %234
  %245 = load i64*, i64** %191, align 8
  %246 = getelementptr inbounds i64, i64* %245, i64 1
  %247 = bitcast i64* %246 to %"class.v8::Value"*
  br label %248

248:                                              ; preds = %244, %238
  %249 = phi %"class.v8::Value"* [ %243, %238 ], [ %247, %244 ]
  %250 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %249) #10
  br i1 %250, label %251, label %254, !prof !5

251:                                              ; preds = %248
  %252 = bitcast %"class.v8::Value"* %249 to %"class.v8::Number"*
  %253 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %252) #10
  br label %256

254:                                              ; preds = %248
  %255 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %178, %"class.v8::Value"* %249, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %256

256:                                              ; preds = %254, %251
  %257 = phi double [ %253, %251 ], [ %255, %254 ]
  %258 = load i32, i32* %188, align 8
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %263

260:                                              ; preds = %256
  %261 = getelementptr inbounds i8, i8* %224, i64 16
  %262 = bitcast i8* %261 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D9translateEdd(%"class.blink::BaseRenderingContext2D"* %262, double %235, double %257) #10
  br label %263

263:                                              ; preds = %260, %256, %230
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %181, align 8
  %264 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %265 = load i64*, i64** %264, align 8
  %266 = icmp eq i64* %265, null
  br i1 %266, label %276, label %267

267:                                              ; preds = %263
  %268 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %187, align 8
  %269 = bitcast %"class.v8::Isolate"* %268 to %"class.v8::internal::Isolate"*
  %270 = load i64, i64* %265, align 8
  %271 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %269, i64 %270) #10
  %272 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %268) #10
  br i1 %272, label %276, label %273

273:                                              ; preds = %267
  %274 = bitcast i64* %271 to %"class.v8::Value"*
  %275 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %268, %"class.v8::Value"* %274) #10
  br label %276

276:                                              ; preds = %273, %267, %263
  %277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %278 = icmp eq %"class.WTF::StringImpl"* %277, null
  br i1 %278, label %355, label %279

279:                                              ; preds = %276
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load atomic i32, i32* %280 monotonic, align 4
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  br i1 %283, label %286, label %288

286:                                              ; preds = %279
  %287 = add i32 %285, -1
  store i32 %287, i32* %284, align 4
  br label %288

288:                                              ; preds = %286, %279
  %289 = phi i32 [ %287, %286 ], [ %285, %279 ]
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %355

291:                                              ; preds = %288
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %277) #10
  br label %355

292:                                              ; preds = %172
  %293 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %293) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %293, i8 -86, i64 56, i1 false)
  %294 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %294, align 8
  %295 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %295, align 8
  %296 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %296, align 2
  %297 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %298 = bitcast i8** %297 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i64 0, i64 0)>, <2 x i8*>* %298, align 8
  %299 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %299, align 8
  %300 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %178, %"class.v8::Isolate"** %300, align 8
  %301 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %301, align 8
  %302 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %303 = bitcast %"class.WTF::StringImpl"** %302 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %303, i8 0, i64 16, i1 false) #10
  %304 = icmp slt i32 %24, 2
  br i1 %304, label %305, label %325, !prof !4

305:                                              ; preds = %292
  %306 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %306) #10
  %307 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %24) #10
  %308 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %307, %"class.WTF::StringImpl"** %308, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %308, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %324, label %311

311:                                              ; preds = %305
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  br i1 %315, label %318, label %320

318:                                              ; preds = %311
  %319 = add i32 %317, -1
  store i32 %319, i32* %316, align 4
  br label %320

320:                                              ; preds = %318, %311
  %321 = phi i32 [ %319, %318 ], [ %317, %311 ]
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %320
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %309) #10
  br label %324

324:                                              ; preds = %305, %320, %323
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %306) #10
  br label %326

325:                                              ; preds = %292
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.60, i64 0, i64 0)) #10
  br label %326

326:                                              ; preds = %325, %324
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %294, align 8
  %327 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %328 = load i64*, i64** %327, align 8
  %329 = icmp eq i64* %328, null
  br i1 %329, label %339, label %330

330:                                              ; preds = %326
  %331 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %300, align 8
  %332 = bitcast %"class.v8::Isolate"* %331 to %"class.v8::internal::Isolate"*
  %333 = load i64, i64* %328, align 8
  %334 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %332, i64 %333) #10
  %335 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %331) #10
  br i1 %335, label %339, label %336

336:                                              ; preds = %330
  %337 = bitcast i64* %334 to %"class.v8::Value"*
  %338 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %331, %"class.v8::Value"* %337) #10
  br label %339

339:                                              ; preds = %336, %330, %326
  %340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8
  %341 = icmp eq %"class.WTF::StringImpl"* %340, null
  br i1 %341, label %355, label %342

342:                                              ; preds = %339
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load atomic i32, i32* %343 monotonic, align 4
  %345 = and i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 0
  %348 = load i32, i32* %347, align 4
  br i1 %346, label %349, label %351

349:                                              ; preds = %342
  %350 = add i32 %348, -1
  store i32 %350, i32* %347, align 4
  br label %351

351:                                              ; preds = %349, %342
  %352 = phi i32 [ %350, %349 ], [ %348, %342 ]
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %355

354:                                              ; preds = %351
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %340) #10
  br label %355

355:                                              ; preds = %354, %351, %339, %291, %288, %276, %171, %168, %156
  %356 = phi i8* [ %35, %156 ], [ %35, %168 ], [ %35, %171 ], [ %180, %276 ], [ %180, %288 ], [ %180, %291 ], [ %293, %339 ], [ %293, %351 ], [ %293, %354 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %356) #10
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.181"* byval(%"class.base::span.181") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d20ArcOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 -1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %24

21:                                               ; preds = %1
  %22 = bitcast i64* %6 to %"class.v8::Object"*
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #10
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i8* [ %20, %17 ], [ %23, %21 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 44
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30, !prof !5

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %25, i64 32
  %32 = bitcast i8* %31 to %"class.blink::NoAllocDirectCallHost"*
  tail call void @_ZN5blink21NoAllocDirectCallHost20FlushDeferredActionsEv(%"class.blink::NoAllocDirectCallHost"* %32) #10
  br label %278

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %42, align 2
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %44 = bitcast i8** %43 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0)>, <2 x i8*>* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %38, %"class.v8::Isolate"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %49 = bitcast %"class.WTF::StringImpl"** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, 5
  br i1 %52, label %53, label %73, !prof !4

53:                                               ; preds = %33
  %54 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 5, i32 %51) #10
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #10
  br label %72

72:                                               ; preds = %53, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  br label %248

73:                                               ; preds = %33
  %74 = bitcast i64** %4 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  %76 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %75) #10
  br i1 %76, label %77, label %80, !prof !5

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::Value"* %75 to %"class.v8::Number"*
  %79 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %78) #10
  br label %84

80:                                               ; preds = %73
  %81 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %75, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %82 = load i32, i32* %47, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %248

84:                                               ; preds = %77, %80
  %85 = phi double [ %79, %77 ], [ %81, %80 ]
  %86 = load i32, i32* %50, align 8
  %87 = icmp sgt i32 %86, 1
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = load i64*, i64** %34, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 160
  %93 = inttoptr i64 %92 to %"class.v8::Value"*
  br label %98

94:                                               ; preds = %84
  %95 = load i64*, i64** %4, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 1
  %97 = bitcast i64* %96 to %"class.v8::Value"*
  br label %98

98:                                               ; preds = %88, %94
  %99 = phi %"class.v8::Value"* [ %93, %88 ], [ %97, %94 ]
  %100 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %99) #10
  br i1 %100, label %101, label %104, !prof !5

101:                                              ; preds = %98
  %102 = bitcast %"class.v8::Value"* %99 to %"class.v8::Number"*
  %103 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %102) #10
  br label %106

104:                                              ; preds = %98
  %105 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %99, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %106

106:                                              ; preds = %101, %104
  %107 = phi double [ %103, %101 ], [ %105, %104 ]
  %108 = load i32, i32* %47, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %248

110:                                              ; preds = %106
  %111 = load i32, i32* %50, align 8
  %112 = icmp sgt i32 %111, 2
  br i1 %112, label %119, label %113

113:                                              ; preds = %110
  %114 = load i64*, i64** %34, align 8
  %115 = getelementptr inbounds i64, i64* %114, i64 1
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 160
  %118 = inttoptr i64 %117 to %"class.v8::Value"*
  br label %123

119:                                              ; preds = %110
  %120 = load i64*, i64** %4, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 2
  %122 = bitcast i64* %121 to %"class.v8::Value"*
  br label %123

123:                                              ; preds = %113, %119
  %124 = phi %"class.v8::Value"* [ %118, %113 ], [ %122, %119 ]
  %125 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %124) #10
  br i1 %125, label %126, label %129, !prof !5

126:                                              ; preds = %123
  %127 = bitcast %"class.v8::Value"* %124 to %"class.v8::Number"*
  %128 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %127) #10
  br label %131

129:                                              ; preds = %123
  %130 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %124, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %131

131:                                              ; preds = %126, %129
  %132 = phi double [ %128, %126 ], [ %130, %129 ]
  %133 = load i32, i32* %47, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %248

135:                                              ; preds = %131
  %136 = load i32, i32* %50, align 8
  %137 = icmp sgt i32 %136, 3
  br i1 %137, label %144, label %138

138:                                              ; preds = %135
  %139 = load i64*, i64** %34, align 8
  %140 = getelementptr inbounds i64, i64* %139, i64 1
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, 160
  %143 = inttoptr i64 %142 to %"class.v8::Value"*
  br label %148

144:                                              ; preds = %135
  %145 = load i64*, i64** %4, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 3
  %147 = bitcast i64* %146 to %"class.v8::Value"*
  br label %148

148:                                              ; preds = %138, %144
  %149 = phi %"class.v8::Value"* [ %143, %138 ], [ %147, %144 ]
  %150 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %149) #10
  br i1 %150, label %151, label %154, !prof !5

151:                                              ; preds = %148
  %152 = bitcast %"class.v8::Value"* %149 to %"class.v8::Number"*
  %153 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %152) #10
  br label %156

154:                                              ; preds = %148
  %155 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %149, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %156

156:                                              ; preds = %151, %154
  %157 = phi double [ %153, %151 ], [ %155, %154 ]
  %158 = load i32, i32* %47, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %248

160:                                              ; preds = %156
  %161 = load i32, i32* %50, align 8
  %162 = icmp sgt i32 %161, 4
  br i1 %162, label %169, label %163

163:                                              ; preds = %160
  %164 = load i64*, i64** %34, align 8
  %165 = getelementptr inbounds i64, i64* %164, i64 1
  %166 = load i64, i64* %165, align 8
  %167 = add i64 %166, 160
  %168 = inttoptr i64 %167 to %"class.v8::Value"*
  br label %173

169:                                              ; preds = %160
  %170 = load i64*, i64** %4, align 8
  %171 = getelementptr inbounds i64, i64* %170, i64 4
  %172 = bitcast i64* %171 to %"class.v8::Value"*
  br label %173

173:                                              ; preds = %163, %169
  %174 = phi %"class.v8::Value"* [ %168, %163 ], [ %172, %169 ]
  %175 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %174) #10
  br i1 %175, label %176, label %179, !prof !5

176:                                              ; preds = %173
  %177 = bitcast %"class.v8::Value"* %174 to %"class.v8::Number"*
  %178 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %177) #10
  br label %181

179:                                              ; preds = %173
  %180 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %174, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %181

181:                                              ; preds = %176, %179
  %182 = phi double [ %178, %176 ], [ %180, %179 ]
  %183 = load i32, i32* %47, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %248

185:                                              ; preds = %181
  %186 = load i32, i32* %50, align 8
  %187 = icmp sgt i32 %186, 5
  br i1 %187, label %194, label %188

188:                                              ; preds = %185
  %189 = load i64*, i64** %34, align 8
  %190 = getelementptr inbounds i64, i64* %189, i64 1
  %191 = load i64, i64* %190, align 8
  %192 = add i64 %191, 160
  %193 = inttoptr i64 %192 to %"class.v8::Value"*
  br label %198

194:                                              ; preds = %185
  %195 = load i64*, i64** %4, align 8
  %196 = getelementptr inbounds i64, i64* %195, i64 5
  %197 = bitcast i64* %196 to %"class.v8::Value"*
  br label %198

198:                                              ; preds = %188, %194
  %199 = phi %"class.v8::Value"* [ %193, %188 ], [ %197, %194 ]
  %200 = bitcast %"class.v8::Value"* %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = and i64 %201, 3
  %203 = icmp eq i64 %202, 1
  br i1 %203, label %204, label %221

204:                                              ; preds = %198
  %205 = add i64 %201, -1
  %206 = inttoptr i64 %205 to i32*
  %207 = load i32, i32* %206, align 4
  %208 = and i64 %201, -4294967296
  %209 = zext i32 %207 to i64
  %210 = or i64 %208, %209
  %211 = add i64 %210, 7
  %212 = inttoptr i64 %211 to i16*
  %213 = load i16, i16* %212, align 2
  %214 = icmp eq i16 %213, 67
  br i1 %214, label %215, label %221

215:                                              ; preds = %204
  %216 = add i64 %201, 23
  %217 = inttoptr i64 %216 to i32*
  %218 = load i32, i32* %217, align 4
  %219 = and i32 %218, -2
  %220 = icmp eq i32 %219, 10
  br i1 %220, label %244, label %221

221:                                              ; preds = %204, %198, %215
  br i1 %187, label %228, label %222

222:                                              ; preds = %221
  %223 = load i64*, i64** %34, align 8
  %224 = getelementptr inbounds i64, i64* %223, i64 1
  %225 = load i64, i64* %224, align 8
  %226 = add i64 %225, 160
  %227 = inttoptr i64 %226 to %"class.v8::Value"*
  br label %232

228:                                              ; preds = %221
  %229 = load i64*, i64** %4, align 8
  %230 = getelementptr inbounds i64, i64* %229, i64 5
  %231 = bitcast i64* %230 to %"class.v8::Value"*
  br label %232

232:                                              ; preds = %222, %228
  %233 = phi %"class.v8::Value"* [ %227, %222 ], [ %231, %228 ]
  %234 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %233) #10
  br i1 %234, label %235, label %238, !prof !5

235:                                              ; preds = %232
  %236 = bitcast %"class.v8::Value"* %233 to %"class.v8::Boolean"*
  %237 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %236) #10
  br label %240

238:                                              ; preds = %232
  %239 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %233, %"class.v8::Isolate"* %38) #10
  br label %240

240:                                              ; preds = %235, %238
  %241 = phi i1 [ %237, %235 ], [ %239, %238 ]
  %242 = load i32, i32* %47, align 8
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %248

244:                                              ; preds = %240, %215
  %245 = phi i1 [ %241, %240 ], [ false, %215 ]
  %246 = getelementptr inbounds i8, i8* %25, i64 24
  %247 = bitcast i8* %246 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath3arcEdddddbRNS_14ExceptionStateE(%"class.blink::CanvasPath"* %247, double %85, double %107, double %132, double %157, double %182, i1 zeroext %245, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %248

248:                                              ; preds = %240, %181, %156, %131, %106, %80, %244, %72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %249 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %250 = load i64*, i64** %249, align 8
  %251 = icmp eq i64* %250, null
  br i1 %251, label %261, label %252

252:                                              ; preds = %248
  %253 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %254 = bitcast %"class.v8::Isolate"* %253 to %"class.v8::internal::Isolate"*
  %255 = load i64, i64* %250, align 8
  %256 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %254, i64 %255) #10
  %257 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %253) #10
  br i1 %257, label %261, label %258

258:                                              ; preds = %252
  %259 = bitcast i64* %256 to %"class.v8::Value"*
  %260 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %253, %"class.v8::Value"* %259) #10
  br label %261

261:                                              ; preds = %258, %252, %248
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %261
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #10
  br label %277

277:                                              ; preds = %261, %273, %276
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #10
  br label %278

278:                                              ; preds = %277, %30
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d37ArcOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEdddddbRNS2_22FastApiCallbackOptionsE(%"class.v8::Object"*, double, double, double, double, double, i1 zeroext, %"struct.v8::FastApiCallbackOptions"* dereferenceable(16)) #0 {
  %9 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %10 = alloca %"class.blink::NoAllocDirectCallExceptionState", align 8
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #10
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !4

15:                                               ; preds = %8
  %16 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #10
  br label %17

17:                                               ; preds = %8, %15
  %18 = phi i8* [ %16, %15 ], [ %13, %8 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 13
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %21, align 8
  %24 = tail call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %0) #10
  %25 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %26 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %9, %"class.v8::Isolate"* %24, i32 0) #10
  %27 = bitcast %"class.v8::Object"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i64 %28, -4294967296
  %33 = zext i32 %31 to i64
  %34 = or i64 %32, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load i16, i16* %36, align 2
  switch i16 %37, label %42 [
    i16 1057, label %38
    i16 1056, label %38
    i16 1040, label %38
  ]

38:                                               ; preds = %17, %17, %17
  %39 = add i64 %28, 19
  %40 = inttoptr i64 %39 to i8**
  %41 = load i8*, i8** %40, align 1
  br label %44

42:                                               ; preds = %17
  %43 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %0, i32 1) #10
  br label %44

44:                                               ; preds = %38, %42
  %45 = phi i8* [ %41, %38 ], [ %43, %42 ]
  %46 = icmp eq i8* %45, null
  %47 = getelementptr inbounds i8, i8* %45, i64 32
  %48 = bitcast i8* %47 to %"class.blink::NoAllocDirectCallHost"*
  %49 = select i1 %46, %"class.blink::NoAllocDirectCallHost"* null, %"class.blink::NoAllocDirectCallHost"* %48
  %50 = getelementptr inbounds %"class.blink::NoAllocDirectCallHost", %"class.blink::NoAllocDirectCallHost"* %49, i64 0, i32 1
  store %"struct.v8::FastApiCallbackOptions"* %7, %"struct.v8::FastApiCallbackOptions"** %50, align 8
  %51 = bitcast %"class.blink::NoAllocDirectCallExceptionState"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %51) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 56, i1 false)
  %52 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %10, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %10, i64 0, i32 0, i32 1, i32 0
  store i16 6, i16* %53, align 8
  %54 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %10, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %54, align 2
  %55 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %10, i64 0, i32 0, i32 1, i32 2
  %56 = bitcast i8** %55 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0)>, <2 x i8*>* %56, align 8
  %57 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %10, i64 0, i32 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %57, align 8
  %58 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %10, i64 0, i32 0, i32 3
  store %"class.v8::Isolate"* %24, %"class.v8::Isolate"** %58, align 8
  %59 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %10, i64 0, i32 0, i32 4
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %10, i64 0, i32 0, i32 5, i32 0, i32 0
  %61 = bitcast %"class.WTF::StringImpl"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink31NoAllocDirectCallExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %62 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %10, i64 0, i32 1
  store %"class.blink::NoAllocDirectCallHost"* %49, %"class.blink::NoAllocDirectCallHost"** %62, align 8
  %63 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %10, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %63, align 8
  %64 = getelementptr inbounds i8, i8* %45, i64 24
  %65 = bitcast i8* %64 to %"class.blink::CanvasPath"*
  %66 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %10, i64 0, i32 0
  call void @_ZN5blink10CanvasPath3arcEdddddbRNS_14ExceptionStateE(%"class.blink::CanvasPath"* %65, double %1, double %2, double %3, double %4, double %5, i1 zeroext %6, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %66) #10
  call void @_ZN5blink31NoAllocDirectCallExceptionStateD1Ev(%"class.blink::NoAllocDirectCallExceptionState"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %51) #10
  store %"struct.v8::FastApiCallbackOptions"* null, %"struct.v8::FastApiCallbackOptions"** %50, align 8
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  %67 = load i64, i64* %21, align 8
  %68 = add i64 %67, -1
  store i64 %68, i64* %21, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22ArcToOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 -1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %24

21:                                               ; preds = %1
  %22 = bitcast i64* %6 to %"class.v8::Object"*
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #10
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i8* [ %20, %17 ], [ %23, %21 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 44
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30, !prof !5

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %25, i64 32
  %32 = bitcast i8* %31 to %"class.blink::NoAllocDirectCallHost"*
  tail call void @_ZN5blink21NoAllocDirectCallHost20FlushDeferredActionsEv(%"class.blink::NoAllocDirectCallHost"* %32) #10
  br label %218

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %42, align 2
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %44 = bitcast i8** %43 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0)>, <2 x i8*>* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %38, %"class.v8::Isolate"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %49 = bitcast %"class.WTF::StringImpl"** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, 5
  br i1 %52, label %53, label %73, !prof !4

53:                                               ; preds = %33
  %54 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 5, i32 %51) #10
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #10
  br label %72

72:                                               ; preds = %53, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  br label %188

73:                                               ; preds = %33
  %74 = bitcast i64** %4 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  %76 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %75) #10
  br i1 %76, label %77, label %80, !prof !5

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::Value"* %75 to %"class.v8::Number"*
  %79 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %78) #10
  br label %84

80:                                               ; preds = %73
  %81 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %75, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %82 = load i32, i32* %47, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %188

84:                                               ; preds = %77, %80
  %85 = phi double [ %79, %77 ], [ %81, %80 ]
  %86 = load i32, i32* %50, align 8
  %87 = icmp sgt i32 %86, 1
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = load i64*, i64** %34, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 160
  %93 = inttoptr i64 %92 to %"class.v8::Value"*
  br label %98

94:                                               ; preds = %84
  %95 = load i64*, i64** %4, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 1
  %97 = bitcast i64* %96 to %"class.v8::Value"*
  br label %98

98:                                               ; preds = %88, %94
  %99 = phi %"class.v8::Value"* [ %93, %88 ], [ %97, %94 ]
  %100 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %99) #10
  br i1 %100, label %101, label %104, !prof !5

101:                                              ; preds = %98
  %102 = bitcast %"class.v8::Value"* %99 to %"class.v8::Number"*
  %103 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %102) #10
  br label %106

104:                                              ; preds = %98
  %105 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %99, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %106

106:                                              ; preds = %101, %104
  %107 = phi double [ %103, %101 ], [ %105, %104 ]
  %108 = load i32, i32* %47, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %188

110:                                              ; preds = %106
  %111 = load i32, i32* %50, align 8
  %112 = icmp sgt i32 %111, 2
  br i1 %112, label %119, label %113

113:                                              ; preds = %110
  %114 = load i64*, i64** %34, align 8
  %115 = getelementptr inbounds i64, i64* %114, i64 1
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 160
  %118 = inttoptr i64 %117 to %"class.v8::Value"*
  br label %123

119:                                              ; preds = %110
  %120 = load i64*, i64** %4, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 2
  %122 = bitcast i64* %121 to %"class.v8::Value"*
  br label %123

123:                                              ; preds = %113, %119
  %124 = phi %"class.v8::Value"* [ %118, %113 ], [ %122, %119 ]
  %125 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %124) #10
  br i1 %125, label %126, label %129, !prof !5

126:                                              ; preds = %123
  %127 = bitcast %"class.v8::Value"* %124 to %"class.v8::Number"*
  %128 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %127) #10
  br label %131

129:                                              ; preds = %123
  %130 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %124, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %131

131:                                              ; preds = %126, %129
  %132 = phi double [ %128, %126 ], [ %130, %129 ]
  %133 = load i32, i32* %47, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %188

135:                                              ; preds = %131
  %136 = load i32, i32* %50, align 8
  %137 = icmp sgt i32 %136, 3
  br i1 %137, label %144, label %138

138:                                              ; preds = %135
  %139 = load i64*, i64** %34, align 8
  %140 = getelementptr inbounds i64, i64* %139, i64 1
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, 160
  %143 = inttoptr i64 %142 to %"class.v8::Value"*
  br label %148

144:                                              ; preds = %135
  %145 = load i64*, i64** %4, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 3
  %147 = bitcast i64* %146 to %"class.v8::Value"*
  br label %148

148:                                              ; preds = %138, %144
  %149 = phi %"class.v8::Value"* [ %143, %138 ], [ %147, %144 ]
  %150 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %149) #10
  br i1 %150, label %151, label %154, !prof !5

151:                                              ; preds = %148
  %152 = bitcast %"class.v8::Value"* %149 to %"class.v8::Number"*
  %153 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %152) #10
  br label %156

154:                                              ; preds = %148
  %155 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %149, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %156

156:                                              ; preds = %151, %154
  %157 = phi double [ %153, %151 ], [ %155, %154 ]
  %158 = load i32, i32* %47, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %188

160:                                              ; preds = %156
  %161 = load i32, i32* %50, align 8
  %162 = icmp sgt i32 %161, 4
  br i1 %162, label %169, label %163

163:                                              ; preds = %160
  %164 = load i64*, i64** %34, align 8
  %165 = getelementptr inbounds i64, i64* %164, i64 1
  %166 = load i64, i64* %165, align 8
  %167 = add i64 %166, 160
  %168 = inttoptr i64 %167 to %"class.v8::Value"*
  br label %173

169:                                              ; preds = %160
  %170 = load i64*, i64** %4, align 8
  %171 = getelementptr inbounds i64, i64* %170, i64 4
  %172 = bitcast i64* %171 to %"class.v8::Value"*
  br label %173

173:                                              ; preds = %163, %169
  %174 = phi %"class.v8::Value"* [ %168, %163 ], [ %172, %169 ]
  %175 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %174) #10
  br i1 %175, label %176, label %179, !prof !5

176:                                              ; preds = %173
  %177 = bitcast %"class.v8::Value"* %174 to %"class.v8::Number"*
  %178 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %177) #10
  br label %181

179:                                              ; preds = %173
  %180 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %174, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %181

181:                                              ; preds = %176, %179
  %182 = phi double [ %178, %176 ], [ %180, %179 ]
  %183 = load i32, i32* %47, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %181
  %186 = getelementptr inbounds i8, i8* %25, i64 24
  %187 = bitcast i8* %186 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath5arcToEdddddRNS_14ExceptionStateE(%"class.blink::CanvasPath"* %187, double %85, double %107, double %132, double %157, double %182, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %188

188:                                              ; preds = %181, %156, %131, %106, %80, %185, %72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %189 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %190 = load i64*, i64** %189, align 8
  %191 = icmp eq i64* %190, null
  br i1 %191, label %201, label %192

192:                                              ; preds = %188
  %193 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %194 = bitcast %"class.v8::Isolate"* %193 to %"class.v8::internal::Isolate"*
  %195 = load i64, i64* %190, align 8
  %196 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %194, i64 %195) #10
  %197 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %193) #10
  br i1 %197, label %201, label %198

198:                                              ; preds = %192
  %199 = bitcast i64* %196 to %"class.v8::Value"*
  %200 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %193, %"class.v8::Value"* %199) #10
  br label %201

201:                                              ; preds = %198, %192, %188
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  br i1 %208, label %211, label %213

211:                                              ; preds = %204
  %212 = add i32 %210, -1
  store i32 %212, i32* %209, align 4
  br label %213

213:                                              ; preds = %211, %204
  %214 = phi i32 [ %212, %211 ], [ %210, %204 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %202) #10
  br label %217

217:                                              ; preds = %201, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #10
  br label %218

218:                                              ; preds = %217, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d39ArcToOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEdddddRNS2_22FastApiCallbackOptionsE(%"class.v8::Object"*, double, double, double, double, double, %"struct.v8::FastApiCallbackOptions"* dereferenceable(16)) #0 {
  %8 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %9 = alloca %"class.blink::NoAllocDirectCallExceptionState", align 8
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #10
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !4

14:                                               ; preds = %7
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #10
  br label %16

16:                                               ; preds = %7, %14
  %17 = phi i8* [ %15, %14 ], [ %12, %7 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 13
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  %23 = tail call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %0) #10
  %24 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  %25 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %8, %"class.v8::Isolate"* %23, i32 0) #10
  %26 = bitcast %"class.v8::Object"* %0 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %27, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  switch i16 %36, label %41 [
    i16 1057, label %37
    i16 1056, label %37
    i16 1040, label %37
  ]

37:                                               ; preds = %16, %16, %16
  %38 = add i64 %27, 19
  %39 = inttoptr i64 %38 to i8**
  %40 = load i8*, i8** %39, align 1
  br label %43

41:                                               ; preds = %16
  %42 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %0, i32 1) #10
  br label %43

43:                                               ; preds = %37, %41
  %44 = phi i8* [ %40, %37 ], [ %42, %41 ]
  %45 = icmp eq i8* %44, null
  %46 = getelementptr inbounds i8, i8* %44, i64 32
  %47 = bitcast i8* %46 to %"class.blink::NoAllocDirectCallHost"*
  %48 = select i1 %45, %"class.blink::NoAllocDirectCallHost"* null, %"class.blink::NoAllocDirectCallHost"* %47
  %49 = getelementptr inbounds %"class.blink::NoAllocDirectCallHost", %"class.blink::NoAllocDirectCallHost"* %48, i64 0, i32 1
  store %"struct.v8::FastApiCallbackOptions"* %6, %"struct.v8::FastApiCallbackOptions"** %49, align 8
  %50 = bitcast %"class.blink::NoAllocDirectCallExceptionState"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %50) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 56, i1 false)
  %51 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %9, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %9, i64 0, i32 0, i32 1, i32 0
  store i16 6, i16* %52, align 8
  %53 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %9, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %53, align 2
  %54 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %9, i64 0, i32 0, i32 1, i32 2
  %55 = bitcast i8** %54 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0)>, <2 x i8*>* %55, align 8
  %56 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %9, i64 0, i32 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %56, align 8
  %57 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %9, i64 0, i32 0, i32 3
  store %"class.v8::Isolate"* %23, %"class.v8::Isolate"** %57, align 8
  %58 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %9, i64 0, i32 0, i32 4
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %60 = bitcast %"class.WTF::StringImpl"** %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink31NoAllocDirectCallExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %61 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %9, i64 0, i32 1
  store %"class.blink::NoAllocDirectCallHost"* %48, %"class.blink::NoAllocDirectCallHost"** %61, align 8
  %62 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %62, align 8
  %63 = getelementptr inbounds i8, i8* %44, i64 24
  %64 = bitcast i8* %63 to %"class.blink::CanvasPath"*
  %65 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %9, i64 0, i32 0
  call void @_ZN5blink10CanvasPath5arcToEdddddRNS_14ExceptionStateE(%"class.blink::CanvasPath"* %64, double %1, double %2, double %3, double %4, double %5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %65) #10
  call void @_ZN5blink31NoAllocDirectCallExceptionStateD1Ev(%"class.blink::NoAllocDirectCallExceptionState"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %50) #10
  store %"struct.v8::FastApiCallbackOptions"* null, %"struct.v8::FastApiCallbackOptions"** %49, align 8
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  %66 = load i64, i64* %20, align 8
  %67 = add i64 %66, -1
  store i64 %67, i64* %20, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d30BezierCurveToOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 -1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %24

21:                                               ; preds = %1
  %22 = bitcast i64* %6 to %"class.v8::Object"*
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #10
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i8* [ %20, %17 ], [ %23, %21 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 44
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30, !prof !5

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %25, i64 32
  %32 = bitcast i8* %31 to %"class.blink::NoAllocDirectCallHost"*
  tail call void @_ZN5blink21NoAllocDirectCallHost20FlushDeferredActionsEv(%"class.blink::NoAllocDirectCallHost"* %32) #10
  br label %243

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %42, align 2
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %44 = bitcast i8** %43 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0)>, <2 x i8*>* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %38, %"class.v8::Isolate"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %49 = bitcast %"class.WTF::StringImpl"** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, 6
  br i1 %52, label %53, label %73, !prof !4

53:                                               ; preds = %33
  %54 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 6, i32 %51) #10
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #10
  br label %72

72:                                               ; preds = %53, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  br label %213

73:                                               ; preds = %33
  %74 = bitcast i64** %4 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  %76 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %75) #10
  br i1 %76, label %77, label %80, !prof !5

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::Value"* %75 to %"class.v8::Number"*
  %79 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %78) #10
  br label %84

80:                                               ; preds = %73
  %81 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %75, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %82 = load i32, i32* %47, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %213

84:                                               ; preds = %77, %80
  %85 = phi double [ %79, %77 ], [ %81, %80 ]
  %86 = load i32, i32* %50, align 8
  %87 = icmp sgt i32 %86, 1
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = load i64*, i64** %34, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 160
  %93 = inttoptr i64 %92 to %"class.v8::Value"*
  br label %98

94:                                               ; preds = %84
  %95 = load i64*, i64** %4, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 1
  %97 = bitcast i64* %96 to %"class.v8::Value"*
  br label %98

98:                                               ; preds = %88, %94
  %99 = phi %"class.v8::Value"* [ %93, %88 ], [ %97, %94 ]
  %100 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %99) #10
  br i1 %100, label %101, label %104, !prof !5

101:                                              ; preds = %98
  %102 = bitcast %"class.v8::Value"* %99 to %"class.v8::Number"*
  %103 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %102) #10
  br label %106

104:                                              ; preds = %98
  %105 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %99, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %106

106:                                              ; preds = %101, %104
  %107 = phi double [ %103, %101 ], [ %105, %104 ]
  %108 = load i32, i32* %47, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %213

110:                                              ; preds = %106
  %111 = load i32, i32* %50, align 8
  %112 = icmp sgt i32 %111, 2
  br i1 %112, label %119, label %113

113:                                              ; preds = %110
  %114 = load i64*, i64** %34, align 8
  %115 = getelementptr inbounds i64, i64* %114, i64 1
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 160
  %118 = inttoptr i64 %117 to %"class.v8::Value"*
  br label %123

119:                                              ; preds = %110
  %120 = load i64*, i64** %4, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 2
  %122 = bitcast i64* %121 to %"class.v8::Value"*
  br label %123

123:                                              ; preds = %113, %119
  %124 = phi %"class.v8::Value"* [ %118, %113 ], [ %122, %119 ]
  %125 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %124) #10
  br i1 %125, label %126, label %129, !prof !5

126:                                              ; preds = %123
  %127 = bitcast %"class.v8::Value"* %124 to %"class.v8::Number"*
  %128 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %127) #10
  br label %131

129:                                              ; preds = %123
  %130 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %124, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %131

131:                                              ; preds = %126, %129
  %132 = phi double [ %128, %126 ], [ %130, %129 ]
  %133 = load i32, i32* %47, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %213

135:                                              ; preds = %131
  %136 = load i32, i32* %50, align 8
  %137 = icmp sgt i32 %136, 3
  br i1 %137, label %144, label %138

138:                                              ; preds = %135
  %139 = load i64*, i64** %34, align 8
  %140 = getelementptr inbounds i64, i64* %139, i64 1
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, 160
  %143 = inttoptr i64 %142 to %"class.v8::Value"*
  br label %148

144:                                              ; preds = %135
  %145 = load i64*, i64** %4, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 3
  %147 = bitcast i64* %146 to %"class.v8::Value"*
  br label %148

148:                                              ; preds = %138, %144
  %149 = phi %"class.v8::Value"* [ %143, %138 ], [ %147, %144 ]
  %150 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %149) #10
  br i1 %150, label %151, label %154, !prof !5

151:                                              ; preds = %148
  %152 = bitcast %"class.v8::Value"* %149 to %"class.v8::Number"*
  %153 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %152) #10
  br label %156

154:                                              ; preds = %148
  %155 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %149, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %156

156:                                              ; preds = %151, %154
  %157 = phi double [ %153, %151 ], [ %155, %154 ]
  %158 = load i32, i32* %47, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %213

160:                                              ; preds = %156
  %161 = load i32, i32* %50, align 8
  %162 = icmp sgt i32 %161, 4
  br i1 %162, label %169, label %163

163:                                              ; preds = %160
  %164 = load i64*, i64** %34, align 8
  %165 = getelementptr inbounds i64, i64* %164, i64 1
  %166 = load i64, i64* %165, align 8
  %167 = add i64 %166, 160
  %168 = inttoptr i64 %167 to %"class.v8::Value"*
  br label %173

169:                                              ; preds = %160
  %170 = load i64*, i64** %4, align 8
  %171 = getelementptr inbounds i64, i64* %170, i64 4
  %172 = bitcast i64* %171 to %"class.v8::Value"*
  br label %173

173:                                              ; preds = %163, %169
  %174 = phi %"class.v8::Value"* [ %168, %163 ], [ %172, %169 ]
  %175 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %174) #10
  br i1 %175, label %176, label %179, !prof !5

176:                                              ; preds = %173
  %177 = bitcast %"class.v8::Value"* %174 to %"class.v8::Number"*
  %178 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %177) #10
  br label %181

179:                                              ; preds = %173
  %180 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %174, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %181

181:                                              ; preds = %176, %179
  %182 = phi double [ %178, %176 ], [ %180, %179 ]
  %183 = load i32, i32* %47, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %213

185:                                              ; preds = %181
  %186 = load i32, i32* %50, align 8
  %187 = icmp sgt i32 %186, 5
  br i1 %187, label %194, label %188

188:                                              ; preds = %185
  %189 = load i64*, i64** %34, align 8
  %190 = getelementptr inbounds i64, i64* %189, i64 1
  %191 = load i64, i64* %190, align 8
  %192 = add i64 %191, 160
  %193 = inttoptr i64 %192 to %"class.v8::Value"*
  br label %198

194:                                              ; preds = %185
  %195 = load i64*, i64** %4, align 8
  %196 = getelementptr inbounds i64, i64* %195, i64 5
  %197 = bitcast i64* %196 to %"class.v8::Value"*
  br label %198

198:                                              ; preds = %188, %194
  %199 = phi %"class.v8::Value"* [ %193, %188 ], [ %197, %194 ]
  %200 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %199) #10
  br i1 %200, label %201, label %204, !prof !5

201:                                              ; preds = %198
  %202 = bitcast %"class.v8::Value"* %199 to %"class.v8::Number"*
  %203 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %202) #10
  br label %206

204:                                              ; preds = %198
  %205 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %199, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %206

206:                                              ; preds = %201, %204
  %207 = phi double [ %203, %201 ], [ %205, %204 ]
  %208 = load i32, i32* %47, align 8
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %206
  %211 = getelementptr inbounds i8, i8* %25, i64 24
  %212 = bitcast i8* %211 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath13bezierCurveToEdddddd(%"class.blink::CanvasPath"* %212, double %85, double %107, double %132, double %157, double %182, double %207) #10
  br label %213

213:                                              ; preds = %206, %181, %156, %131, %106, %80, %210, %72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %214 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  br i1 %216, label %226, label %217

217:                                              ; preds = %213
  %218 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %219 = bitcast %"class.v8::Isolate"* %218 to %"class.v8::internal::Isolate"*
  %220 = load i64, i64* %215, align 8
  %221 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %219, i64 %220) #10
  %222 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %218) #10
  br i1 %222, label %226, label %223

223:                                              ; preds = %217
  %224 = bitcast i64* %221 to %"class.v8::Value"*
  %225 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %218, %"class.v8::Value"* %224) #10
  br label %226

226:                                              ; preds = %223, %217, %213
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #10
  br label %242

242:                                              ; preds = %226, %238, %241
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #10
  br label %243

243:                                              ; preds = %242, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d47BezierCurveToOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEddddddRNS2_22FastApiCallbackOptionsE(%"class.v8::Object"*, double, double, double, double, double, double, %"struct.v8::FastApiCallbackOptions"* dereferenceable(16)) #0 {
  %9 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #10
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !4

14:                                               ; preds = %8
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #10
  br label %16

16:                                               ; preds = %8, %14
  %17 = phi i8* [ %15, %14 ], [ %12, %8 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 13
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  %23 = tail call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %0) #10
  %24 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  %25 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %9, %"class.v8::Isolate"* %23, i32 0) #10
  %26 = bitcast %"class.v8::Object"* %0 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %27, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  switch i16 %36, label %41 [
    i16 1057, label %37
    i16 1056, label %37
    i16 1040, label %37
  ]

37:                                               ; preds = %16, %16, %16
  %38 = add i64 %27, 19
  %39 = inttoptr i64 %38 to i8**
  %40 = load i8*, i8** %39, align 1
  br label %43

41:                                               ; preds = %16
  %42 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %0, i32 1) #10
  br label %43

43:                                               ; preds = %37, %41
  %44 = phi i8* [ %40, %37 ], [ %42, %41 ]
  %45 = icmp eq i8* %44, null
  %46 = getelementptr inbounds i8, i8* %44, i64 32
  %47 = bitcast i8* %46 to %"class.blink::NoAllocDirectCallHost"*
  %48 = select i1 %45, %"class.blink::NoAllocDirectCallHost"* null, %"class.blink::NoAllocDirectCallHost"* %47
  %49 = getelementptr inbounds %"class.blink::NoAllocDirectCallHost", %"class.blink::NoAllocDirectCallHost"* %48, i64 0, i32 1
  store %"struct.v8::FastApiCallbackOptions"* %7, %"struct.v8::FastApiCallbackOptions"** %49, align 8
  %50 = getelementptr inbounds i8, i8* %44, i64 24
  %51 = bitcast i8* %50 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath13bezierCurveToEdddddd(%"class.blink::CanvasPath"* %51, double %1, double %2, double %3, double %4, double %5, double %6) #10
  store %"struct.v8::FastApiCallbackOptions"* null, %"struct.v8::FastApiCallbackOptions"** %49, align 8
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  %52 = load i64, i64* %20, align 8
  %53 = add i64 %52, -1
  store i64 %53, i64* %20, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26ClosePathOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 44
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28, !prof !5

28:                                               ; preds = %22
  %29 = getelementptr inbounds i8, i8* %23, i64 32
  %30 = bitcast i8* %29 to %"class.blink::NoAllocDirectCallHost"*
  tail call void @_ZN5blink21NoAllocDirectCallHost20FlushDeferredActionsEv(%"class.blink::NoAllocDirectCallHost"* %30) #10
  br label %34

31:                                               ; preds = %22
  %32 = getelementptr inbounds i8, i8* %23, i64 24
  %33 = bitcast i8* %32 to %"class.blink::CanvasPath"*
  tail call void @_ZN5blink10CanvasPath9closePathEv(%"class.blink::CanvasPath"* %33) #10
  br label %34

34:                                               ; preds = %31, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d43ClosePathOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEERNS2_22FastApiCallbackOptionsE(%"class.v8::Object"*, %"struct.v8::FastApiCallbackOptions"* dereferenceable(16)) #0 {
  %3 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #10
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10, !prof !4

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %9) #10
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %12 = bitcast i8* %11 to %"class.blink::ThreadState"**
  %13 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 13
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, 1
  store i64 %16, i64* %14, align 8
  %17 = tail call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %0) #10
  %18 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  %19 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %3, %"class.v8::Isolate"* %17, i32 0) #10
  %20 = bitcast %"class.v8::Object"* %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = and i64 %21, -4294967296
  %26 = zext i32 %24 to i64
  %27 = or i64 %25, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load i16, i16* %29, align 2
  switch i16 %30, label %35 [
    i16 1057, label %31
    i16 1056, label %31
    i16 1040, label %31
  ]

31:                                               ; preds = %10, %10, %10
  %32 = add i64 %21, 19
  %33 = inttoptr i64 %32 to i8**
  %34 = load i8*, i8** %33, align 1
  br label %37

35:                                               ; preds = %10
  %36 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %0, i32 1) #10
  br label %37

37:                                               ; preds = %31, %35
  %38 = phi i8* [ %34, %31 ], [ %36, %35 ]
  %39 = icmp eq i8* %38, null
  %40 = getelementptr inbounds i8, i8* %38, i64 32
  %41 = bitcast i8* %40 to %"class.blink::NoAllocDirectCallHost"*
  %42 = select i1 %39, %"class.blink::NoAllocDirectCallHost"* null, %"class.blink::NoAllocDirectCallHost"* %41
  %43 = getelementptr inbounds %"class.blink::NoAllocDirectCallHost", %"class.blink::NoAllocDirectCallHost"* %42, i64 0, i32 1
  store %"struct.v8::FastApiCallbackOptions"* %1, %"struct.v8::FastApiCallbackOptions"** %43, align 8
  %44 = getelementptr inbounds i8, i8* %38, i64 24
  %45 = bitcast i8* %44 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath9closePathEv(%"class.blink::CanvasPath"* %45) #10
  store %"struct.v8::FastApiCallbackOptions"* null, %"struct.v8::FastApiCallbackOptions"** %43, align 8
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  %46 = load i64, i64* %14, align 8
  %47 = add i64 %46, -1
  store i64 %47, i64* %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d24EllipseOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 -1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %24

21:                                               ; preds = %1
  %22 = bitcast i64* %6 to %"class.v8::Object"*
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #10
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i8* [ %20, %17 ], [ %23, %21 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 44
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30, !prof !5

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %25, i64 32
  %32 = bitcast i8* %31 to %"class.blink::NoAllocDirectCallHost"*
  tail call void @_ZN5blink21NoAllocDirectCallHost20FlushDeferredActionsEv(%"class.blink::NoAllocDirectCallHost"* %32) #10
  br label %328

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %42, align 2
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %44 = bitcast i8** %43 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0)>, <2 x i8*>* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %38, %"class.v8::Isolate"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %49 = bitcast %"class.WTF::StringImpl"** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, 7
  br i1 %52, label %53, label %73, !prof !4

53:                                               ; preds = %33
  %54 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 7, i32 %51) #10
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #10
  br label %72

72:                                               ; preds = %53, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  br label %298

73:                                               ; preds = %33
  %74 = bitcast i64** %4 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  %76 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %75) #10
  br i1 %76, label %77, label %80, !prof !5

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::Value"* %75 to %"class.v8::Number"*
  %79 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %78) #10
  br label %84

80:                                               ; preds = %73
  %81 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %75, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %82 = load i32, i32* %47, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %298

84:                                               ; preds = %77, %80
  %85 = phi double [ %79, %77 ], [ %81, %80 ]
  %86 = load i32, i32* %50, align 8
  %87 = icmp sgt i32 %86, 1
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = load i64*, i64** %34, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 160
  %93 = inttoptr i64 %92 to %"class.v8::Value"*
  br label %98

94:                                               ; preds = %84
  %95 = load i64*, i64** %4, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 1
  %97 = bitcast i64* %96 to %"class.v8::Value"*
  br label %98

98:                                               ; preds = %88, %94
  %99 = phi %"class.v8::Value"* [ %93, %88 ], [ %97, %94 ]
  %100 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %99) #10
  br i1 %100, label %101, label %104, !prof !5

101:                                              ; preds = %98
  %102 = bitcast %"class.v8::Value"* %99 to %"class.v8::Number"*
  %103 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %102) #10
  br label %106

104:                                              ; preds = %98
  %105 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %99, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %106

106:                                              ; preds = %101, %104
  %107 = phi double [ %103, %101 ], [ %105, %104 ]
  %108 = load i32, i32* %47, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %298

110:                                              ; preds = %106
  %111 = load i32, i32* %50, align 8
  %112 = icmp sgt i32 %111, 2
  br i1 %112, label %119, label %113

113:                                              ; preds = %110
  %114 = load i64*, i64** %34, align 8
  %115 = getelementptr inbounds i64, i64* %114, i64 1
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 160
  %118 = inttoptr i64 %117 to %"class.v8::Value"*
  br label %123

119:                                              ; preds = %110
  %120 = load i64*, i64** %4, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 2
  %122 = bitcast i64* %121 to %"class.v8::Value"*
  br label %123

123:                                              ; preds = %113, %119
  %124 = phi %"class.v8::Value"* [ %118, %113 ], [ %122, %119 ]
  %125 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %124) #10
  br i1 %125, label %126, label %129, !prof !5

126:                                              ; preds = %123
  %127 = bitcast %"class.v8::Value"* %124 to %"class.v8::Number"*
  %128 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %127) #10
  br label %131

129:                                              ; preds = %123
  %130 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %124, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %131

131:                                              ; preds = %126, %129
  %132 = phi double [ %128, %126 ], [ %130, %129 ]
  %133 = load i32, i32* %47, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %298

135:                                              ; preds = %131
  %136 = load i32, i32* %50, align 8
  %137 = icmp sgt i32 %136, 3
  br i1 %137, label %144, label %138

138:                                              ; preds = %135
  %139 = load i64*, i64** %34, align 8
  %140 = getelementptr inbounds i64, i64* %139, i64 1
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, 160
  %143 = inttoptr i64 %142 to %"class.v8::Value"*
  br label %148

144:                                              ; preds = %135
  %145 = load i64*, i64** %4, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 3
  %147 = bitcast i64* %146 to %"class.v8::Value"*
  br label %148

148:                                              ; preds = %138, %144
  %149 = phi %"class.v8::Value"* [ %143, %138 ], [ %147, %144 ]
  %150 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %149) #10
  br i1 %150, label %151, label %154, !prof !5

151:                                              ; preds = %148
  %152 = bitcast %"class.v8::Value"* %149 to %"class.v8::Number"*
  %153 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %152) #10
  br label %156

154:                                              ; preds = %148
  %155 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %149, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %156

156:                                              ; preds = %151, %154
  %157 = phi double [ %153, %151 ], [ %155, %154 ]
  %158 = load i32, i32* %47, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %298

160:                                              ; preds = %156
  %161 = load i32, i32* %50, align 8
  %162 = icmp sgt i32 %161, 4
  br i1 %162, label %169, label %163

163:                                              ; preds = %160
  %164 = load i64*, i64** %34, align 8
  %165 = getelementptr inbounds i64, i64* %164, i64 1
  %166 = load i64, i64* %165, align 8
  %167 = add i64 %166, 160
  %168 = inttoptr i64 %167 to %"class.v8::Value"*
  br label %173

169:                                              ; preds = %160
  %170 = load i64*, i64** %4, align 8
  %171 = getelementptr inbounds i64, i64* %170, i64 4
  %172 = bitcast i64* %171 to %"class.v8::Value"*
  br label %173

173:                                              ; preds = %163, %169
  %174 = phi %"class.v8::Value"* [ %168, %163 ], [ %172, %169 ]
  %175 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %174) #10
  br i1 %175, label %176, label %179, !prof !5

176:                                              ; preds = %173
  %177 = bitcast %"class.v8::Value"* %174 to %"class.v8::Number"*
  %178 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %177) #10
  br label %181

179:                                              ; preds = %173
  %180 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %174, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %181

181:                                              ; preds = %176, %179
  %182 = phi double [ %178, %176 ], [ %180, %179 ]
  %183 = load i32, i32* %47, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %298

185:                                              ; preds = %181
  %186 = load i32, i32* %50, align 8
  %187 = icmp sgt i32 %186, 5
  br i1 %187, label %194, label %188

188:                                              ; preds = %185
  %189 = load i64*, i64** %34, align 8
  %190 = getelementptr inbounds i64, i64* %189, i64 1
  %191 = load i64, i64* %190, align 8
  %192 = add i64 %191, 160
  %193 = inttoptr i64 %192 to %"class.v8::Value"*
  br label %198

194:                                              ; preds = %185
  %195 = load i64*, i64** %4, align 8
  %196 = getelementptr inbounds i64, i64* %195, i64 5
  %197 = bitcast i64* %196 to %"class.v8::Value"*
  br label %198

198:                                              ; preds = %188, %194
  %199 = phi %"class.v8::Value"* [ %193, %188 ], [ %197, %194 ]
  %200 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %199) #10
  br i1 %200, label %201, label %204, !prof !5

201:                                              ; preds = %198
  %202 = bitcast %"class.v8::Value"* %199 to %"class.v8::Number"*
  %203 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %202) #10
  br label %206

204:                                              ; preds = %198
  %205 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %199, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %206

206:                                              ; preds = %201, %204
  %207 = phi double [ %203, %201 ], [ %205, %204 ]
  %208 = load i32, i32* %47, align 8
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %298

210:                                              ; preds = %206
  %211 = load i32, i32* %50, align 8
  %212 = icmp sgt i32 %211, 6
  br i1 %212, label %219, label %213

213:                                              ; preds = %210
  %214 = load i64*, i64** %34, align 8
  %215 = getelementptr inbounds i64, i64* %214, i64 1
  %216 = load i64, i64* %215, align 8
  %217 = add i64 %216, 160
  %218 = inttoptr i64 %217 to %"class.v8::Value"*
  br label %223

219:                                              ; preds = %210
  %220 = load i64*, i64** %4, align 8
  %221 = getelementptr inbounds i64, i64* %220, i64 6
  %222 = bitcast i64* %221 to %"class.v8::Value"*
  br label %223

223:                                              ; preds = %213, %219
  %224 = phi %"class.v8::Value"* [ %218, %213 ], [ %222, %219 ]
  %225 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %224) #10
  br i1 %225, label %226, label %229, !prof !5

226:                                              ; preds = %223
  %227 = bitcast %"class.v8::Value"* %224 to %"class.v8::Number"*
  %228 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %227) #10
  br label %231

229:                                              ; preds = %223
  %230 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %224, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %231

231:                                              ; preds = %226, %229
  %232 = phi double [ %228, %226 ], [ %230, %229 ]
  %233 = load i32, i32* %47, align 8
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %298

235:                                              ; preds = %231
  %236 = load i32, i32* %50, align 8
  %237 = icmp sgt i32 %236, 7
  br i1 %237, label %244, label %238

238:                                              ; preds = %235
  %239 = load i64*, i64** %34, align 8
  %240 = getelementptr inbounds i64, i64* %239, i64 1
  %241 = load i64, i64* %240, align 8
  %242 = add i64 %241, 160
  %243 = inttoptr i64 %242 to %"class.v8::Value"*
  br label %248

244:                                              ; preds = %235
  %245 = load i64*, i64** %4, align 8
  %246 = getelementptr inbounds i64, i64* %245, i64 7
  %247 = bitcast i64* %246 to %"class.v8::Value"*
  br label %248

248:                                              ; preds = %238, %244
  %249 = phi %"class.v8::Value"* [ %243, %238 ], [ %247, %244 ]
  %250 = bitcast %"class.v8::Value"* %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = and i64 %251, 3
  %253 = icmp eq i64 %252, 1
  br i1 %253, label %254, label %271

254:                                              ; preds = %248
  %255 = add i64 %251, -1
  %256 = inttoptr i64 %255 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = and i64 %251, -4294967296
  %259 = zext i32 %257 to i64
  %260 = or i64 %258, %259
  %261 = add i64 %260, 7
  %262 = inttoptr i64 %261 to i16*
  %263 = load i16, i16* %262, align 2
  %264 = icmp eq i16 %263, 67
  br i1 %264, label %265, label %271

265:                                              ; preds = %254
  %266 = add i64 %251, 23
  %267 = inttoptr i64 %266 to i32*
  %268 = load i32, i32* %267, align 4
  %269 = and i32 %268, -2
  %270 = icmp eq i32 %269, 10
  br i1 %270, label %294, label %271

271:                                              ; preds = %254, %248, %265
  br i1 %237, label %278, label %272

272:                                              ; preds = %271
  %273 = load i64*, i64** %34, align 8
  %274 = getelementptr inbounds i64, i64* %273, i64 1
  %275 = load i64, i64* %274, align 8
  %276 = add i64 %275, 160
  %277 = inttoptr i64 %276 to %"class.v8::Value"*
  br label %282

278:                                              ; preds = %271
  %279 = load i64*, i64** %4, align 8
  %280 = getelementptr inbounds i64, i64* %279, i64 7
  %281 = bitcast i64* %280 to %"class.v8::Value"*
  br label %282

282:                                              ; preds = %272, %278
  %283 = phi %"class.v8::Value"* [ %277, %272 ], [ %281, %278 ]
  %284 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %283) #10
  br i1 %284, label %285, label %288, !prof !5

285:                                              ; preds = %282
  %286 = bitcast %"class.v8::Value"* %283 to %"class.v8::Boolean"*
  %287 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %286) #10
  br label %290

288:                                              ; preds = %282
  %289 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %283, %"class.v8::Isolate"* %38) #10
  br label %290

290:                                              ; preds = %285, %288
  %291 = phi i1 [ %287, %285 ], [ %289, %288 ]
  %292 = load i32, i32* %47, align 8
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %298

294:                                              ; preds = %290, %265
  %295 = phi i1 [ %291, %290 ], [ false, %265 ]
  %296 = getelementptr inbounds i8, i8* %25, i64 24
  %297 = bitcast i8* %296 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath7ellipseEdddddddbRNS_14ExceptionStateE(%"class.blink::CanvasPath"* %297, double %85, double %107, double %132, double %157, double %182, double %207, double %232, i1 zeroext %295, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %298

298:                                              ; preds = %290, %231, %206, %181, %156, %131, %106, %80, %294, %72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %299 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %300 = load i64*, i64** %299, align 8
  %301 = icmp eq i64* %300, null
  br i1 %301, label %311, label %302

302:                                              ; preds = %298
  %303 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %304 = bitcast %"class.v8::Isolate"* %303 to %"class.v8::internal::Isolate"*
  %305 = load i64, i64* %300, align 8
  %306 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %304, i64 %305) #10
  %307 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %303) #10
  br i1 %307, label %311, label %308

308:                                              ; preds = %302
  %309 = bitcast i64* %306 to %"class.v8::Value"*
  %310 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %303, %"class.v8::Value"* %309) #10
  br label %311

311:                                              ; preds = %308, %302, %298
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %312, null
  br i1 %313, label %327, label %314

314:                                              ; preds = %311
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load atomic i32, i32* %315 monotonic, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  br i1 %318, label %321, label %323

321:                                              ; preds = %314
  %322 = add i32 %320, -1
  store i32 %322, i32* %319, align 4
  br label %323

323:                                              ; preds = %321, %314
  %324 = phi i32 [ %322, %321 ], [ %320, %314 ]
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %323
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %312) #10
  br label %327

327:                                              ; preds = %311, %323, %326
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #10
  br label %328

328:                                              ; preds = %327, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d41EllipseOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEdddddddbRNS2_22FastApiCallbackOptionsE(%"class.v8::Object"*, double, double, double, double, double, double, double, i1 zeroext, %"struct.v8::FastApiCallbackOptions"* dereferenceable(16)) #0 {
  %11 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %12 = alloca %"class.blink::NoAllocDirectCallExceptionState", align 8
  %13 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %14 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %13, i64 0, i32 1
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #10
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %19, !prof !4

17:                                               ; preds = %10
  %18 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %14, i8* %18) #10
  br label %19

19:                                               ; preds = %10, %17
  %20 = phi i8* [ %18, %17 ], [ %15, %10 ]
  %21 = bitcast i8* %20 to %"class.blink::ThreadState"**
  %22 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %22, i64 0, i32 13
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 1
  store i64 %25, i64* %23, align 8
  %26 = tail call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %0) #10
  %27 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %11, %"class.v8::Isolate"* %26, i32 0) #10
  %29 = bitcast %"class.v8::Object"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i64 %30, -4294967296
  %35 = zext i32 %33 to i64
  %36 = or i64 %34, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %44 [
    i16 1057, label %40
    i16 1056, label %40
    i16 1040, label %40
  ]

40:                                               ; preds = %19, %19, %19
  %41 = add i64 %30, 19
  %42 = inttoptr i64 %41 to i8**
  %43 = load i8*, i8** %42, align 1
  br label %46

44:                                               ; preds = %19
  %45 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %0, i32 1) #10
  br label %46

46:                                               ; preds = %40, %44
  %47 = phi i8* [ %43, %40 ], [ %45, %44 ]
  %48 = icmp eq i8* %47, null
  %49 = getelementptr inbounds i8, i8* %47, i64 32
  %50 = bitcast i8* %49 to %"class.blink::NoAllocDirectCallHost"*
  %51 = select i1 %48, %"class.blink::NoAllocDirectCallHost"* null, %"class.blink::NoAllocDirectCallHost"* %50
  %52 = getelementptr inbounds %"class.blink::NoAllocDirectCallHost", %"class.blink::NoAllocDirectCallHost"* %51, i64 0, i32 1
  store %"struct.v8::FastApiCallbackOptions"* %9, %"struct.v8::FastApiCallbackOptions"** %52, align 8
  %53 = bitcast %"class.blink::NoAllocDirectCallExceptionState"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %53) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 56, i1 false)
  %54 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %12, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %12, i64 0, i32 0, i32 1, i32 0
  store i16 6, i16* %55, align 8
  %56 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %12, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %56, align 2
  %57 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %12, i64 0, i32 0, i32 1, i32 2
  %58 = bitcast i8** %57 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0)>, <2 x i8*>* %58, align 8
  %59 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %12, i64 0, i32 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %59, align 8
  %60 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %12, i64 0, i32 0, i32 3
  store %"class.v8::Isolate"* %26, %"class.v8::Isolate"** %60, align 8
  %61 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %12, i64 0, i32 0, i32 4
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %12, i64 0, i32 0, i32 5, i32 0, i32 0
  %63 = bitcast %"class.WTF::StringImpl"** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink31NoAllocDirectCallExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %64 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %12, i64 0, i32 1
  store %"class.blink::NoAllocDirectCallHost"* %51, %"class.blink::NoAllocDirectCallHost"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %66 = getelementptr inbounds i8, i8* %47, i64 24
  %67 = bitcast i8* %66 to %"class.blink::CanvasPath"*
  %68 = getelementptr inbounds %"class.blink::NoAllocDirectCallExceptionState", %"class.blink::NoAllocDirectCallExceptionState"* %12, i64 0, i32 0
  call void @_ZN5blink10CanvasPath7ellipseEdddddddbRNS_14ExceptionStateE(%"class.blink::CanvasPath"* %67, double %1, double %2, double %3, double %4, double %5, double %6, double %7, i1 zeroext %8, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %68) #10
  call void @_ZN5blink31NoAllocDirectCallExceptionStateD1Ev(%"class.blink::NoAllocDirectCallExceptionState"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %53) #10
  store %"struct.v8::FastApiCallbackOptions"* null, %"struct.v8::FastApiCallbackOptions"** %52, align 8
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  %69 = load i64, i64* %23, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d23LineToOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 -1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %24

21:                                               ; preds = %1
  %22 = bitcast i64* %6 to %"class.v8::Object"*
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #10
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i8* [ %20, %17 ], [ %23, %21 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 44
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30, !prof !5

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %25, i64 32
  %32 = bitcast i8* %31 to %"class.blink::NoAllocDirectCallHost"*
  tail call void @_ZN5blink21NoAllocDirectCallHost20FlushDeferredActionsEv(%"class.blink::NoAllocDirectCallHost"* %32) #10
  br label %143

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %42, align 2
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %44 = bitcast i8** %43 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0)>, <2 x i8*>* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %38, %"class.v8::Isolate"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %49 = bitcast %"class.WTF::StringImpl"** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, 2
  br i1 %52, label %53, label %73, !prof !4

53:                                               ; preds = %33
  %54 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %51) #10
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #10
  br label %72

72:                                               ; preds = %53, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  br label %113

73:                                               ; preds = %33
  %74 = bitcast i64** %4 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  %76 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %75) #10
  br i1 %76, label %77, label %80, !prof !5

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::Value"* %75 to %"class.v8::Number"*
  %79 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %78) #10
  br label %84

80:                                               ; preds = %73
  %81 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %75, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %82 = load i32, i32* %47, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %113

84:                                               ; preds = %77, %80
  %85 = phi double [ %79, %77 ], [ %81, %80 ]
  %86 = load i32, i32* %50, align 8
  %87 = icmp sgt i32 %86, 1
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = load i64*, i64** %34, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 160
  %93 = inttoptr i64 %92 to %"class.v8::Value"*
  br label %98

94:                                               ; preds = %84
  %95 = load i64*, i64** %4, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 1
  %97 = bitcast i64* %96 to %"class.v8::Value"*
  br label %98

98:                                               ; preds = %88, %94
  %99 = phi %"class.v8::Value"* [ %93, %88 ], [ %97, %94 ]
  %100 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %99) #10
  br i1 %100, label %101, label %104, !prof !5

101:                                              ; preds = %98
  %102 = bitcast %"class.v8::Value"* %99 to %"class.v8::Number"*
  %103 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %102) #10
  br label %106

104:                                              ; preds = %98
  %105 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %99, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %106

106:                                              ; preds = %101, %104
  %107 = phi double [ %103, %101 ], [ %105, %104 ]
  %108 = load i32, i32* %47, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %106
  %111 = getelementptr inbounds i8, i8* %25, i64 24
  %112 = bitcast i8* %111 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath6lineToEdd(%"class.blink::CanvasPath"* %112, double %85, double %107) #10
  br label %113

113:                                              ; preds = %106, %80, %110, %72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %114 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %115 = load i64*, i64** %114, align 8
  %116 = icmp eq i64* %115, null
  br i1 %116, label %126, label %117

117:                                              ; preds = %113
  %118 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %119 = bitcast %"class.v8::Isolate"* %118 to %"class.v8::internal::Isolate"*
  %120 = load i64, i64* %115, align 8
  %121 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %119, i64 %120) #10
  %122 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %118) #10
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = bitcast i64* %121 to %"class.v8::Value"*
  %125 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %118, %"class.v8::Value"* %124) #10
  br label %126

126:                                              ; preds = %123, %117, %113
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #10
  br label %142

142:                                              ; preds = %126, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #10
  br label %143

143:                                              ; preds = %142, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d40LineToOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEddRNS2_22FastApiCallbackOptionsE(%"class.v8::Object"*, double, double, %"struct.v8::FastApiCallbackOptions"* dereferenceable(16)) #0 {
  %5 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %4, %10
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %16, align 8
  %19 = tail call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %0) #10
  %20 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  %21 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %5, %"class.v8::Isolate"* %19, i32 0) #10
  %22 = bitcast %"class.v8::Object"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %12, %12, %12
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %39

37:                                               ; preds = %12
  %38 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %0, i32 1) #10
  br label %39

39:                                               ; preds = %33, %37
  %40 = phi i8* [ %36, %33 ], [ %38, %37 ]
  %41 = icmp eq i8* %40, null
  %42 = getelementptr inbounds i8, i8* %40, i64 32
  %43 = bitcast i8* %42 to %"class.blink::NoAllocDirectCallHost"*
  %44 = select i1 %41, %"class.blink::NoAllocDirectCallHost"* null, %"class.blink::NoAllocDirectCallHost"* %43
  %45 = getelementptr inbounds %"class.blink::NoAllocDirectCallHost", %"class.blink::NoAllocDirectCallHost"* %44, i64 0, i32 1
  store %"struct.v8::FastApiCallbackOptions"* %3, %"struct.v8::FastApiCallbackOptions"** %45, align 8
  %46 = getelementptr inbounds i8, i8* %40, i64 24
  %47 = bitcast i8* %46 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath6lineToEdd(%"class.blink::CanvasPath"* %47, double %1, double %2) #10
  store %"struct.v8::FastApiCallbackOptions"* null, %"struct.v8::FastApiCallbackOptions"** %45, align 8
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  %48 = load i64, i64* %16, align 8
  %49 = add i64 %48, -1
  store i64 %49, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d23MoveToOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 -1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %24

21:                                               ; preds = %1
  %22 = bitcast i64* %6 to %"class.v8::Object"*
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #10
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i8* [ %20, %17 ], [ %23, %21 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 44
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30, !prof !5

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %25, i64 32
  %32 = bitcast i8* %31 to %"class.blink::NoAllocDirectCallHost"*
  tail call void @_ZN5blink21NoAllocDirectCallHost20FlushDeferredActionsEv(%"class.blink::NoAllocDirectCallHost"* %32) #10
  br label %143

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %42, align 2
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %44 = bitcast i8** %43 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i64 0, i64 0)>, <2 x i8*>* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %38, %"class.v8::Isolate"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %49 = bitcast %"class.WTF::StringImpl"** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, 2
  br i1 %52, label %53, label %73, !prof !4

53:                                               ; preds = %33
  %54 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %51) #10
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #10
  br label %72

72:                                               ; preds = %53, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  br label %113

73:                                               ; preds = %33
  %74 = bitcast i64** %4 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  %76 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %75) #10
  br i1 %76, label %77, label %80, !prof !5

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::Value"* %75 to %"class.v8::Number"*
  %79 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %78) #10
  br label %84

80:                                               ; preds = %73
  %81 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %75, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %82 = load i32, i32* %47, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %113

84:                                               ; preds = %77, %80
  %85 = phi double [ %79, %77 ], [ %81, %80 ]
  %86 = load i32, i32* %50, align 8
  %87 = icmp sgt i32 %86, 1
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = load i64*, i64** %34, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 160
  %93 = inttoptr i64 %92 to %"class.v8::Value"*
  br label %98

94:                                               ; preds = %84
  %95 = load i64*, i64** %4, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 1
  %97 = bitcast i64* %96 to %"class.v8::Value"*
  br label %98

98:                                               ; preds = %88, %94
  %99 = phi %"class.v8::Value"* [ %93, %88 ], [ %97, %94 ]
  %100 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %99) #10
  br i1 %100, label %101, label %104, !prof !5

101:                                              ; preds = %98
  %102 = bitcast %"class.v8::Value"* %99 to %"class.v8::Number"*
  %103 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %102) #10
  br label %106

104:                                              ; preds = %98
  %105 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %99, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %106

106:                                              ; preds = %101, %104
  %107 = phi double [ %103, %101 ], [ %105, %104 ]
  %108 = load i32, i32* %47, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %106
  %111 = getelementptr inbounds i8, i8* %25, i64 24
  %112 = bitcast i8* %111 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath6moveToEdd(%"class.blink::CanvasPath"* %112, double %85, double %107) #10
  br label %113

113:                                              ; preds = %106, %80, %110, %72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %114 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %115 = load i64*, i64** %114, align 8
  %116 = icmp eq i64* %115, null
  br i1 %116, label %126, label %117

117:                                              ; preds = %113
  %118 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %119 = bitcast %"class.v8::Isolate"* %118 to %"class.v8::internal::Isolate"*
  %120 = load i64, i64* %115, align 8
  %121 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %119, i64 %120) #10
  %122 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %118) #10
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = bitcast i64* %121 to %"class.v8::Value"*
  %125 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %118, %"class.v8::Value"* %124) #10
  br label %126

126:                                              ; preds = %123, %117, %113
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #10
  br label %142

142:                                              ; preds = %126, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #10
  br label %143

143:                                              ; preds = %142, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d40MoveToOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEddRNS2_22FastApiCallbackOptionsE(%"class.v8::Object"*, double, double, %"struct.v8::FastApiCallbackOptions"* dereferenceable(16)) #0 {
  %5 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %4, %10
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 1
  store i64 %18, i64* %16, align 8
  %19 = tail call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %0) #10
  %20 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  %21 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %5, %"class.v8::Isolate"* %19, i32 0) #10
  %22 = bitcast %"class.v8::Object"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %12, %12, %12
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %39

37:                                               ; preds = %12
  %38 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %0, i32 1) #10
  br label %39

39:                                               ; preds = %33, %37
  %40 = phi i8* [ %36, %33 ], [ %38, %37 ]
  %41 = icmp eq i8* %40, null
  %42 = getelementptr inbounds i8, i8* %40, i64 32
  %43 = bitcast i8* %42 to %"class.blink::NoAllocDirectCallHost"*
  %44 = select i1 %41, %"class.blink::NoAllocDirectCallHost"* null, %"class.blink::NoAllocDirectCallHost"* %43
  %45 = getelementptr inbounds %"class.blink::NoAllocDirectCallHost", %"class.blink::NoAllocDirectCallHost"* %44, i64 0, i32 1
  store %"struct.v8::FastApiCallbackOptions"* %3, %"struct.v8::FastApiCallbackOptions"** %45, align 8
  %46 = getelementptr inbounds i8, i8* %40, i64 24
  %47 = bitcast i8* %46 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath6moveToEdd(%"class.blink::CanvasPath"* %47, double %1, double %2) #10
  store %"struct.v8::FastApiCallbackOptions"* null, %"struct.v8::FastApiCallbackOptions"** %45, align 8
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  %48 = load i64, i64* %16, align 8
  %49 = add i64 %48, -1
  store i64 %49, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d33QuadraticCurveToOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 -1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %24

21:                                               ; preds = %1
  %22 = bitcast i64* %6 to %"class.v8::Object"*
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #10
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i8* [ %20, %17 ], [ %23, %21 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 44
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30, !prof !5

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %25, i64 32
  %32 = bitcast i8* %31 to %"class.blink::NoAllocDirectCallHost"*
  tail call void @_ZN5blink21NoAllocDirectCallHost20FlushDeferredActionsEv(%"class.blink::NoAllocDirectCallHost"* %32) #10
  br label %193

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %42, align 2
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %44 = bitcast i8** %43 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47, i64 0, i64 0)>, <2 x i8*>* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %38, %"class.v8::Isolate"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %49 = bitcast %"class.WTF::StringImpl"** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, 4
  br i1 %52, label %53, label %73, !prof !4

53:                                               ; preds = %33
  %54 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %51) #10
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #10
  br label %72

72:                                               ; preds = %53, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  br label %163

73:                                               ; preds = %33
  %74 = bitcast i64** %4 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  %76 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %75) #10
  br i1 %76, label %77, label %80, !prof !5

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::Value"* %75 to %"class.v8::Number"*
  %79 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %78) #10
  br label %84

80:                                               ; preds = %73
  %81 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %75, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %82 = load i32, i32* %47, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %163

84:                                               ; preds = %77, %80
  %85 = phi double [ %79, %77 ], [ %81, %80 ]
  %86 = load i32, i32* %50, align 8
  %87 = icmp sgt i32 %86, 1
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = load i64*, i64** %34, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 160
  %93 = inttoptr i64 %92 to %"class.v8::Value"*
  br label %98

94:                                               ; preds = %84
  %95 = load i64*, i64** %4, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 1
  %97 = bitcast i64* %96 to %"class.v8::Value"*
  br label %98

98:                                               ; preds = %88, %94
  %99 = phi %"class.v8::Value"* [ %93, %88 ], [ %97, %94 ]
  %100 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %99) #10
  br i1 %100, label %101, label %104, !prof !5

101:                                              ; preds = %98
  %102 = bitcast %"class.v8::Value"* %99 to %"class.v8::Number"*
  %103 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %102) #10
  br label %106

104:                                              ; preds = %98
  %105 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %99, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %106

106:                                              ; preds = %101, %104
  %107 = phi double [ %103, %101 ], [ %105, %104 ]
  %108 = load i32, i32* %47, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %163

110:                                              ; preds = %106
  %111 = load i32, i32* %50, align 8
  %112 = icmp sgt i32 %111, 2
  br i1 %112, label %119, label %113

113:                                              ; preds = %110
  %114 = load i64*, i64** %34, align 8
  %115 = getelementptr inbounds i64, i64* %114, i64 1
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 160
  %118 = inttoptr i64 %117 to %"class.v8::Value"*
  br label %123

119:                                              ; preds = %110
  %120 = load i64*, i64** %4, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 2
  %122 = bitcast i64* %121 to %"class.v8::Value"*
  br label %123

123:                                              ; preds = %113, %119
  %124 = phi %"class.v8::Value"* [ %118, %113 ], [ %122, %119 ]
  %125 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %124) #10
  br i1 %125, label %126, label %129, !prof !5

126:                                              ; preds = %123
  %127 = bitcast %"class.v8::Value"* %124 to %"class.v8::Number"*
  %128 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %127) #10
  br label %131

129:                                              ; preds = %123
  %130 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %124, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %131

131:                                              ; preds = %126, %129
  %132 = phi double [ %128, %126 ], [ %130, %129 ]
  %133 = load i32, i32* %47, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %163

135:                                              ; preds = %131
  %136 = load i32, i32* %50, align 8
  %137 = icmp sgt i32 %136, 3
  br i1 %137, label %144, label %138

138:                                              ; preds = %135
  %139 = load i64*, i64** %34, align 8
  %140 = getelementptr inbounds i64, i64* %139, i64 1
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, 160
  %143 = inttoptr i64 %142 to %"class.v8::Value"*
  br label %148

144:                                              ; preds = %135
  %145 = load i64*, i64** %4, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 3
  %147 = bitcast i64* %146 to %"class.v8::Value"*
  br label %148

148:                                              ; preds = %138, %144
  %149 = phi %"class.v8::Value"* [ %143, %138 ], [ %147, %144 ]
  %150 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %149) #10
  br i1 %150, label %151, label %154, !prof !5

151:                                              ; preds = %148
  %152 = bitcast %"class.v8::Value"* %149 to %"class.v8::Number"*
  %153 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %152) #10
  br label %156

154:                                              ; preds = %148
  %155 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %149, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %156

156:                                              ; preds = %151, %154
  %157 = phi double [ %153, %151 ], [ %155, %154 ]
  %158 = load i32, i32* %47, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %156
  %161 = getelementptr inbounds i8, i8* %25, i64 24
  %162 = bitcast i8* %161 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath16quadraticCurveToEdddd(%"class.blink::CanvasPath"* %162, double %85, double %107, double %132, double %157) #10
  br label %163

163:                                              ; preds = %156, %131, %106, %80, %160, %72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %164 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %165 = load i64*, i64** %164, align 8
  %166 = icmp eq i64* %165, null
  br i1 %166, label %176, label %167

167:                                              ; preds = %163
  %168 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %169 = bitcast %"class.v8::Isolate"* %168 to %"class.v8::internal::Isolate"*
  %170 = load i64, i64* %165, align 8
  %171 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %169, i64 %170) #10
  %172 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %168) #10
  br i1 %172, label %176, label %173

173:                                              ; preds = %167
  %174 = bitcast i64* %171 to %"class.v8::Value"*
  %175 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %168, %"class.v8::Value"* %174) #10
  br label %176

176:                                              ; preds = %173, %167, %163
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %176
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #10
  br label %192

192:                                              ; preds = %176, %188, %191
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #10
  br label %193

193:                                              ; preds = %192, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d50QuadraticCurveToOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEddddRNS2_22FastApiCallbackOptionsE(%"class.v8::Object"*, double, double, double, double, %"struct.v8::FastApiCallbackOptions"* dereferenceable(16)) #0 {
  %7 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %8 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %9 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %8, i64 0, i32 1
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #10
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14, !prof !4

12:                                               ; preds = %6
  %13 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %9, i8* %13) #10
  br label %14

14:                                               ; preds = %6, %12
  %15 = phi i8* [ %13, %12 ], [ %10, %6 ]
  %16 = bitcast i8* %15 to %"class.blink::ThreadState"**
  %17 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 13
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %18, align 8
  %21 = tail call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %0) #10
  %22 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %23 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %7, %"class.v8::Isolate"* %21, i32 0) #10
  %24 = bitcast %"class.v8::Object"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i64 %25, -4294967296
  %30 = zext i32 %28 to i64
  %31 = or i64 %29, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load i16, i16* %33, align 2
  switch i16 %34, label %39 [
    i16 1057, label %35
    i16 1056, label %35
    i16 1040, label %35
  ]

35:                                               ; preds = %14, %14, %14
  %36 = add i64 %25, 19
  %37 = inttoptr i64 %36 to i8**
  %38 = load i8*, i8** %37, align 1
  br label %41

39:                                               ; preds = %14
  %40 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %0, i32 1) #10
  br label %41

41:                                               ; preds = %35, %39
  %42 = phi i8* [ %38, %35 ], [ %40, %39 ]
  %43 = icmp eq i8* %42, null
  %44 = getelementptr inbounds i8, i8* %42, i64 32
  %45 = bitcast i8* %44 to %"class.blink::NoAllocDirectCallHost"*
  %46 = select i1 %43, %"class.blink::NoAllocDirectCallHost"* null, %"class.blink::NoAllocDirectCallHost"* %45
  %47 = getelementptr inbounds %"class.blink::NoAllocDirectCallHost", %"class.blink::NoAllocDirectCallHost"* %46, i64 0, i32 1
  store %"struct.v8::FastApiCallbackOptions"* %5, %"struct.v8::FastApiCallbackOptions"** %47, align 8
  %48 = getelementptr inbounds i8, i8* %42, i64 24
  %49 = bitcast i8* %48 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath16quadraticCurveToEdddd(%"class.blink::CanvasPath"* %49, double %1, double %2, double %3, double %4) #10
  store %"struct.v8::FastApiCallbackOptions"* null, %"struct.v8::FastApiCallbackOptions"** %47, align 8
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  %50 = load i64, i64* %18, align 8
  %51 = add i64 %50, -1
  store i64 %51, i64* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d21RectOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 -1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %24

21:                                               ; preds = %1
  %22 = bitcast i64* %6 to %"class.v8::Object"*
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #10
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i8* [ %20, %17 ], [ %23, %21 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 44
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30, !prof !5

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %25, i64 32
  %32 = bitcast i8* %31 to %"class.blink::NoAllocDirectCallHost"*
  tail call void @_ZN5blink21NoAllocDirectCallHost20FlushDeferredActionsEv(%"class.blink::NoAllocDirectCallHost"* %32) #10
  br label %193

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 1
  %37 = bitcast i64* %36 to %"class.v8::Isolate"**
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %42, align 2
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %44 = bitcast i8** %43 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0)>, <2 x i8*>* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %38, %"class.v8::Isolate"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %49 = bitcast %"class.WTF::StringImpl"** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10
  %50 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, 4
  br i1 %52, label %53, label %73, !prof !4

53:                                               ; preds = %33
  %54 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %55 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %51) #10
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #10
  br label %72

72:                                               ; preds = %53, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  br label %163

73:                                               ; preds = %33
  %74 = bitcast i64** %4 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  %76 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %75) #10
  br i1 %76, label %77, label %80, !prof !5

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::Value"* %75 to %"class.v8::Number"*
  %79 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %78) #10
  br label %84

80:                                               ; preds = %73
  %81 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %75, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %82 = load i32, i32* %47, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %163

84:                                               ; preds = %77, %80
  %85 = phi double [ %79, %77 ], [ %81, %80 ]
  %86 = load i32, i32* %50, align 8
  %87 = icmp sgt i32 %86, 1
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = load i64*, i64** %34, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 160
  %93 = inttoptr i64 %92 to %"class.v8::Value"*
  br label %98

94:                                               ; preds = %84
  %95 = load i64*, i64** %4, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 1
  %97 = bitcast i64* %96 to %"class.v8::Value"*
  br label %98

98:                                               ; preds = %88, %94
  %99 = phi %"class.v8::Value"* [ %93, %88 ], [ %97, %94 ]
  %100 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %99) #10
  br i1 %100, label %101, label %104, !prof !5

101:                                              ; preds = %98
  %102 = bitcast %"class.v8::Value"* %99 to %"class.v8::Number"*
  %103 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %102) #10
  br label %106

104:                                              ; preds = %98
  %105 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %99, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %106

106:                                              ; preds = %101, %104
  %107 = phi double [ %103, %101 ], [ %105, %104 ]
  %108 = load i32, i32* %47, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %163

110:                                              ; preds = %106
  %111 = load i32, i32* %50, align 8
  %112 = icmp sgt i32 %111, 2
  br i1 %112, label %119, label %113

113:                                              ; preds = %110
  %114 = load i64*, i64** %34, align 8
  %115 = getelementptr inbounds i64, i64* %114, i64 1
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 160
  %118 = inttoptr i64 %117 to %"class.v8::Value"*
  br label %123

119:                                              ; preds = %110
  %120 = load i64*, i64** %4, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 2
  %122 = bitcast i64* %121 to %"class.v8::Value"*
  br label %123

123:                                              ; preds = %113, %119
  %124 = phi %"class.v8::Value"* [ %118, %113 ], [ %122, %119 ]
  %125 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %124) #10
  br i1 %125, label %126, label %129, !prof !5

126:                                              ; preds = %123
  %127 = bitcast %"class.v8::Value"* %124 to %"class.v8::Number"*
  %128 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %127) #10
  br label %131

129:                                              ; preds = %123
  %130 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %124, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %131

131:                                              ; preds = %126, %129
  %132 = phi double [ %128, %126 ], [ %130, %129 ]
  %133 = load i32, i32* %47, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %163

135:                                              ; preds = %131
  %136 = load i32, i32* %50, align 8
  %137 = icmp sgt i32 %136, 3
  br i1 %137, label %144, label %138

138:                                              ; preds = %135
  %139 = load i64*, i64** %34, align 8
  %140 = getelementptr inbounds i64, i64* %139, i64 1
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, 160
  %143 = inttoptr i64 %142 to %"class.v8::Value"*
  br label %148

144:                                              ; preds = %135
  %145 = load i64*, i64** %4, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 3
  %147 = bitcast i64* %146 to %"class.v8::Value"*
  br label %148

148:                                              ; preds = %138, %144
  %149 = phi %"class.v8::Value"* [ %143, %138 ], [ %147, %144 ]
  %150 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %149) #10
  br i1 %150, label %151, label %154, !prof !5

151:                                              ; preds = %148
  %152 = bitcast %"class.v8::Value"* %149 to %"class.v8::Number"*
  %153 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %152) #10
  br label %156

154:                                              ; preds = %148
  %155 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %38, %"class.v8::Value"* %149, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %156

156:                                              ; preds = %151, %154
  %157 = phi double [ %153, %151 ], [ %155, %154 ]
  %158 = load i32, i32* %47, align 8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %156
  %161 = getelementptr inbounds i8, i8* %25, i64 24
  %162 = bitcast i8* %161 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath4rectEdddd(%"class.blink::CanvasPath"* %162, double %85, double %107, double %132, double %157) #10
  br label %163

163:                                              ; preds = %156, %131, %106, %80, %160, %72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %164 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %165 = load i64*, i64** %164, align 8
  %166 = icmp eq i64* %165, null
  br i1 %166, label %176, label %167

167:                                              ; preds = %163
  %168 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %169 = bitcast %"class.v8::Isolate"* %168 to %"class.v8::internal::Isolate"*
  %170 = load i64, i64* %165, align 8
  %171 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %169, i64 %170) #10
  %172 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %168) #10
  br i1 %172, label %176, label %173

173:                                              ; preds = %167
  %174 = bitcast i64* %171 to %"class.v8::Value"*
  %175 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %168, %"class.v8::Value"* %174) #10
  br label %176

176:                                              ; preds = %173, %167, %163
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %176
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #10
  br label %192

192:                                              ; preds = %176, %188, %191
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #10
  br label %193

193:                                              ; preds = %192, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d38RectOperationNoAllocDirectCallCallbackEN2v85LocalINS2_6ObjectEEEddddRNS2_22FastApiCallbackOptionsE(%"class.v8::Object"*, double, double, double, double, %"struct.v8::FastApiCallbackOptions"* dereferenceable(16)) #0 {
  %7 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %8 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %9 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %8, i64 0, i32 1
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #10
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14, !prof !4

12:                                               ; preds = %6
  %13 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %9, i8* %13) #10
  br label %14

14:                                               ; preds = %6, %12
  %15 = phi i8* [ %13, %12 ], [ %10, %6 ]
  %16 = bitcast i8* %15 to %"class.blink::ThreadState"**
  %17 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 13
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %18, align 8
  %21 = tail call %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"* %0) #10
  %22 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %23 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %7, %"class.v8::Isolate"* %21, i32 0) #10
  %24 = bitcast %"class.v8::Object"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i64 %25, -4294967296
  %30 = zext i32 %28 to i64
  %31 = or i64 %29, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load i16, i16* %33, align 2
  switch i16 %34, label %39 [
    i16 1057, label %35
    i16 1056, label %35
    i16 1040, label %35
  ]

35:                                               ; preds = %14, %14, %14
  %36 = add i64 %25, 19
  %37 = inttoptr i64 %36 to i8**
  %38 = load i8*, i8** %37, align 1
  br label %41

39:                                               ; preds = %14
  %40 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %0, i32 1) #10
  br label %41

41:                                               ; preds = %35, %39
  %42 = phi i8* [ %38, %35 ], [ %40, %39 ]
  %43 = icmp eq i8* %42, null
  %44 = getelementptr inbounds i8, i8* %42, i64 32
  %45 = bitcast i8* %44 to %"class.blink::NoAllocDirectCallHost"*
  %46 = select i1 %43, %"class.blink::NoAllocDirectCallHost"* null, %"class.blink::NoAllocDirectCallHost"* %45
  %47 = getelementptr inbounds %"class.blink::NoAllocDirectCallHost", %"class.blink::NoAllocDirectCallHost"* %46, i64 0, i32 1
  store %"struct.v8::FastApiCallbackOptions"* %5, %"struct.v8::FastApiCallbackOptions"** %47, align 8
  %48 = getelementptr inbounds i8, i8* %42, i64 24
  %49 = bitcast i8* %48 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath4rectEdddd(%"class.blink::CanvasPath"* %49, double %1, double %2, double %3, double %4) #10
  store %"struct.v8::FastApiCallbackOptions"* null, %"struct.v8::FastApiCallbackOptions"** %47, align 8
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  %50 = load i64, i64* %18, align 8
  %51 = add i64 %50, -1
  store i64 %51, i64* %18, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_32NoAllocDirectCallOperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.182"* byval(%"class.base::span.182") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d41ImageSmoothingQualityAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to %"class.blink::BaseRenderingContext2D"*
  %26 = tail call %"class.WTF::StringImpl"* @_ZNK5blink22BaseRenderingContext2D21imageSmoothingQualityEv(%"class.blink::BaseRenderingContext2D"* %25) #10
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %22
  %32 = load i64, i64* %29, align 8
  %33 = add i64 %32, 8
  %34 = inttoptr i64 %33 to %"class.blink::V8PerIsolateData"**
  %35 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %35, i64 0, i32 5, i32 0, i32 0, i32 0
  %37 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %36, align 8
  %38 = getelementptr inbounds i64, i64* %28, i64 3
  %39 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %37, i64 0, i32 3, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, %26
  br i1 %41, label %42, label %49

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %37, i64 0, i32 1, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = inttoptr i64 %44 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %38, align 8
  br label %56

49:                                               ; preds = %31
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %37, i64* %38, %"class.WTF::StringImpl"* nonnull %26) #10
  br label %56

50:                                               ; preds = %22
  %51 = getelementptr inbounds i64, i64* %28, i64 3
  %52 = load i64, i64* %29, align 8
  %53 = add i64 %52, 200
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %51, align 8
  br label %69

56:                                               ; preds = %42, %46, %49
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #10
  br label %69

69:                                               ; preds = %50, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d41ImageSmoothingQualityAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds i64, i64* %10, i64 -1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %12, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  switch i16 %21, label %26 [
    i16 1057, label %22
    i16 1056, label %22
    i16 1040, label %22
  ]

22:                                               ; preds = %1, %1, %1
  %23 = add i64 %12, 19
  %24 = inttoptr i64 %23 to i8**
  %25 = load i8*, i8** %24, align 1
  br label %29

26:                                               ; preds = %1
  %27 = bitcast i64* %11 to %"class.v8::Object"*
  %28 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %27, i32 1) #10
  br label %29

29:                                               ; preds = %22, %26
  %30 = phi i8* [ %25, %22 ], [ %28, %26 ]
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 1
  %34 = bitcast i64* %33 to %"class.v8::Isolate"**
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %29
  %40 = ptrtoint %"class.v8::Isolate"* %35 to i64
  %41 = add i64 %40, 160
  %42 = inttoptr i64 %41 to %"class.v8::Value"*
  br label %46

43:                                               ; preds = %29
  %44 = bitcast i64** %9 to %"class.v8::Value"**
  %45 = load %"class.v8::Value"*, %"class.v8::Value"** %44, align 8
  br label %46

46:                                               ; preds = %39, %43
  %47 = phi %"class.v8::Value"* [ %42, %39 ], [ %45, %43 ]
  %48 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %48) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 56, i1 false)
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 3, i16* %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %51, align 2
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %53 = bitcast i8** %52 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.49, i64 0, i64 0)>, <2 x i8*>* %53, align 8
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %54, align 8
  %55 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %35, %"class.v8::Isolate"** %55, align 8
  %56 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %58 = bitcast %"class.WTF::StringImpl"** %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #10
  %59 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %59) #10
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %35, %"class.v8::Value"* %47, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3)
  %60 = load i32, i32* %56, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %214

62:                                               ; preds = %46
  %63 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #10
  %64 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %65 = load %"class.v8::String"*, %"class.v8::String"** %64, align 8
  %66 = icmp eq %"class.v8::String"* %65, null
  br i1 %66, label %69, label %67, !prof !4

67:                                               ; preds = %62
  %68 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %65, i32 0) #10
  br label %90

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %90, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #10
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !4

87:                                               ; preds = %78
  call void @llvm.trap() #10
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %90

90:                                               ; preds = %67, %69, %73, %88
  %91 = phi %"class.WTF::StringImpl"* [ %68, %67 ], [ null, %69 ], [ %71, %73 ], [ %71, %88 ]
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %92, align 8
  %93 = call { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableERKN3WTF6StringEN4base4spanIKPKcLm18446744073709551615EEE(%"class.WTF::String"* nonnull dereferenceable(8) %5, i64 3, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZN5blink23V8ImageSmoothingQuality13string_table_E, i64 0, i64 0)) #10, !noalias !6
  %94 = extractvalue { i8, i64 } %93, 0
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %90
  %97 = extractvalue { i8, i64 } %93, 1
  %98 = getelementptr inbounds [3 x i8*], [3 x i8*]* @_ZN5blink23V8ImageSmoothingQuality13string_table_E.const, i64 0, i64 %97
  %99 = load i8*, i8** %98, align 8, !noalias !6
  br label %100

100:                                              ; preds = %90, %96
  %101 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %90 ], [ %99, %96 ]
  %102 = phi i8 [ 0, %90 ], [ 1, %96 ]
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #10
  br label %118

118:                                              ; preds = %100, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #10
  %119 = icmp eq i8 %102, 0
  br i1 %119, label %120, label %183

120:                                              ; preds = %118
  %121 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #10
  %122 = load %"class.v8::String"*, %"class.v8::String"** %64, align 8
  %123 = icmp eq %"class.v8::String"* %122, null
  br i1 %123, label %126, label %124, !prof !4

124:                                              ; preds = %120
  %125 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %122, i32 0) #10
  br label %147

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %147, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %147

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = zext i32 %137 to i33
  %139 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %138, i33 1) #10
  %140 = extractvalue { i33, i1 } %139, 1
  %141 = extractvalue { i33, i1 } %139, 0
  %142 = icmp slt i33 %141, 0
  %143 = or i1 %140, %142
  br i1 %143, label %144, label %145, !prof !4

144:                                              ; preds = %135
  call void @llvm.trap() #10
  unreachable

145:                                              ; preds = %135
  %146 = trunc i33 %141 to i32
  store i32 %146, i32* %136, align 4
  br label %147

147:                                              ; preds = %124, %126, %130, %145
  %148 = phi %"class.WTF::StringImpl"* [ %125, %124 ], [ null, %126 ], [ %128, %130 ], [ %128, %145 ]
  %149 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %148, %"class.WTF::StringImpl"** %149, align 8
  %150 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0), i64 21) #10
  call void @_ZN5blink8bindings31ReportInvalidEnumSetToAttributeEPN2v87IsolateERKN3WTF6StringES7_RNS_14ExceptionStateE(%"class.v8::Isolate"* %35, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #10
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #10
  br label %167

167:                                              ; preds = %147, %163, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #10
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %212, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %212

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #10
  br label %212

183:                                              ; preds = %118
  %184 = getelementptr inbounds i8, i8* %30, i64 16
  %185 = bitcast i8* %184 to %"class.blink::BaseRenderingContext2D"*
  %186 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #10
  %187 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187)
  %188 = icmp eq i8* %101, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %183
  %190 = call i64 @strlen(i8* nonnull %101) #11
  br label %191

191:                                              ; preds = %183, %189
  %192 = phi i64 [ %190, %189 ], [ 0, %183 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %101, i64 %192) #10
  %193 = bitcast %"class.WTF::String"* %2 to i64*
  %194 = load i64, i64* %193, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187)
  %195 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %196 = bitcast %"class.WTF::String"* %8 to i64*
  store i64 %194, i64* %196, align 8
  call void @_ZN5blink22BaseRenderingContext2D24setImageSmoothingQualityERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %185, %"class.WTF::String"* nonnull dereferenceable(8) %8) #10
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %191
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #10
  br label %212

212:                                              ; preds = %211, %208, %191, %182, %179, %167
  %213 = phi i8* [ %121, %167 ], [ %121, %179 ], [ %121, %182 ], [ %186, %191 ], [ %186, %208 ], [ %186, %211 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #10
  br label %214

214:                                              ; preds = %212, %46
  %215 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  store i8* null, i8** %215, align 8
  %217 = icmp eq i8* %216, null
  br i1 %217, label %219, label %218

218:                                              ; preds = %214
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %216) #10
  br label %219

219:                                              ; preds = %218, %214
  %220 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #10
  br label %236

236:                                              ; preds = %219, %232, %235
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %59) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %237 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %238 = load i64*, i64** %237, align 8
  %239 = icmp eq i64* %238, null
  br i1 %239, label %249, label %240

240:                                              ; preds = %236
  %241 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %55, align 8
  %242 = bitcast %"class.v8::Isolate"* %241 to %"class.v8::internal::Isolate"*
  %243 = load i64, i64* %238, align 8
  %244 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %242, i64 %243) #10
  %245 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %241) #10
  br i1 %245, label %249, label %246

246:                                              ; preds = %240
  %247 = bitcast i64* %244 to %"class.v8::Value"*
  %248 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %241, %"class.v8::Value"* %247) #10
  br label %249

249:                                              ; preds = %246, %240, %236
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %251 = icmp eq %"class.WTF::StringImpl"* %250, null
  br i1 %251, label %265, label %252

252:                                              ; preds = %249
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  br i1 %256, label %259, label %261

259:                                              ; preds = %252
  %260 = add i32 %258, -1
  store i32 %260, i32* %257, align 4
  br label %261

261:                                              ; preds = %259, %252
  %262 = phi i32 [ %260, %259 ], [ %258, %252 ]
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %261
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %250) #10
  br label %265

265:                                              ; preds = %249, %261, %264
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %48) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d28PerspectiveOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.50, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #10
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !4

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #10
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %91

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #10
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %78) #10
  br i1 %79, label %80, label %83, !prof !5

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Number"*
  %82 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %81) #10
  br label %87

83:                                               ; preds = %76
  %84 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %80, %83
  %88 = phi double [ %82, %80 ], [ %84, %83 ]
  %89 = getelementptr inbounds i8, i8* %77, i64 16
  %90 = bitcast i8* %89 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D11perspectiveEd(%"class.blink::BaseRenderingContext2D"* %90, double %88) #10
  br label %91

91:                                               ; preds = %83, %87, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %92 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %97 = bitcast %"class.v8::Isolate"* %96 to %"class.v8::internal::Isolate"*
  %98 = load i64, i64* %93, align 8
  %99 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %97, i64 %98) #10
  %100 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %96) #10
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast i64* %99 to %"class.v8::Value"*
  %103 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %96, %"class.v8::Value"* %102) #10
  br label %104

104:                                              ; preds = %101, %95, %91
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #10
  br label %120

120:                                              ; preds = %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d25Rotate3dOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #10
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 3
  br i1 %22, label %23, label %43, !prof !4

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %21) #10
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %141

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #10
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %78) #10
  br i1 %79, label %80, label %83, !prof !5

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Number"*
  %82 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %81) #10
  br label %87

83:                                               ; preds = %76
  %84 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %141

87:                                               ; preds = %80, %83
  %88 = phi double [ %82, %80 ], [ %84, %83 ]
  %89 = load i32, i32* %20, align 8
  %90 = icmp sgt i32 %89, 1
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = load i64*, i64** %4, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 1
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 160
  %96 = inttoptr i64 %95 to %"class.v8::Value"*
  br label %101

97:                                               ; preds = %87
  %98 = load i64*, i64** %44, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 1
  %100 = bitcast i64* %99 to %"class.v8::Value"*
  br label %101

101:                                              ; preds = %91, %97
  %102 = phi %"class.v8::Value"* [ %96, %91 ], [ %100, %97 ]
  %103 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %102) #10
  br i1 %103, label %104, label %107, !prof !5

104:                                              ; preds = %101
  %105 = bitcast %"class.v8::Value"* %102 to %"class.v8::Number"*
  %106 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %105) #10
  br label %109

107:                                              ; preds = %101
  %108 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %102, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %109

109:                                              ; preds = %104, %107
  %110 = phi double [ %106, %104 ], [ %108, %107 ]
  %111 = load i32, i32* %17, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %141

113:                                              ; preds = %109
  %114 = load i32, i32* %20, align 8
  %115 = icmp sgt i32 %114, 2
  br i1 %115, label %122, label %116

116:                                              ; preds = %113
  %117 = load i64*, i64** %4, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %126

122:                                              ; preds = %113
  %123 = load i64*, i64** %44, align 8
  %124 = getelementptr inbounds i64, i64* %123, i64 2
  %125 = bitcast i64* %124 to %"class.v8::Value"*
  br label %126

126:                                              ; preds = %116, %122
  %127 = phi %"class.v8::Value"* [ %121, %116 ], [ %125, %122 ]
  %128 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %127) #10
  br i1 %128, label %129, label %132, !prof !5

129:                                              ; preds = %126
  %130 = bitcast %"class.v8::Value"* %127 to %"class.v8::Number"*
  %131 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %130) #10
  br label %134

132:                                              ; preds = %126
  %133 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %127, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %134

134:                                              ; preds = %129, %132
  %135 = phi double [ %131, %129 ], [ %133, %132 ]
  %136 = load i32, i32* %17, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %134
  %139 = getelementptr inbounds i8, i8* %77, i64 16
  %140 = bitcast i8* %139 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D8rotate3dEddd(%"class.blink::BaseRenderingContext2D"* %140, double %88, double %110, double %135) #10
  br label %141

141:                                              ; preds = %134, %109, %83, %138, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %142 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %143 = load i64*, i64** %142, align 8
  %144 = icmp eq i64* %143, null
  br i1 %144, label %154, label %145

145:                                              ; preds = %141
  %146 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %147 = bitcast %"class.v8::Isolate"* %146 to %"class.v8::internal::Isolate"*
  %148 = load i64, i64* %143, align 8
  %149 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %147, i64 %148) #10
  %150 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %146) #10
  br i1 %150, label %154, label %151

151:                                              ; preds = %145
  %152 = bitcast i64* %149 to %"class.v8::Value"*
  %153 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %146, %"class.v8::Value"* %152) #10
  br label %154

154:                                              ; preds = %151, %145, %141
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #10
  br label %170

170:                                              ; preds = %154, %166, %169
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d27RotateAxisOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #10
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %43, !prof !4

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %21) #10
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %166

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to i8**
  %60 = load i8*, i8** %59, align 1
  br label %72

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #10
  %64 = load i32, i32* %20, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = load i64*, i64** %4, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 160
  %71 = inttoptr i64 %70 to %"class.v8::Value"*
  br label %76

72:                                               ; preds = %57, %61
  %73 = phi i8* [ %60, %57 ], [ %63, %61 ]
  %74 = bitcast i64** %44 to %"class.v8::Value"**
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %74, align 8
  br label %76

76:                                               ; preds = %66, %72
  %77 = phi i8* [ %63, %66 ], [ %73, %72 ]
  %78 = phi %"class.v8::Value"* [ %71, %66 ], [ %75, %72 ]
  %79 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %78) #10
  br i1 %79, label %80, label %83, !prof !5

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::Value"* %78 to %"class.v8::Number"*
  %82 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %81) #10
  br label %87

83:                                               ; preds = %76
  %84 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %78, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %85 = load i32, i32* %17, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %166

87:                                               ; preds = %80, %83
  %88 = phi double [ %82, %80 ], [ %84, %83 ]
  %89 = load i32, i32* %20, align 8
  %90 = icmp sgt i32 %89, 1
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = load i64*, i64** %4, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 1
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 160
  %96 = inttoptr i64 %95 to %"class.v8::Value"*
  br label %101

97:                                               ; preds = %87
  %98 = load i64*, i64** %44, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 1
  %100 = bitcast i64* %99 to %"class.v8::Value"*
  br label %101

101:                                              ; preds = %91, %97
  %102 = phi %"class.v8::Value"* [ %96, %91 ], [ %100, %97 ]
  %103 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %102) #10
  br i1 %103, label %104, label %107, !prof !5

104:                                              ; preds = %101
  %105 = bitcast %"class.v8::Value"* %102 to %"class.v8::Number"*
  %106 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %105) #10
  br label %109

107:                                              ; preds = %101
  %108 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %102, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %109

109:                                              ; preds = %104, %107
  %110 = phi double [ %106, %104 ], [ %108, %107 ]
  %111 = load i32, i32* %17, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %166

113:                                              ; preds = %109
  %114 = load i32, i32* %20, align 8
  %115 = icmp sgt i32 %114, 2
  br i1 %115, label %122, label %116

116:                                              ; preds = %113
  %117 = load i64*, i64** %4, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %126

122:                                              ; preds = %113
  %123 = load i64*, i64** %44, align 8
  %124 = getelementptr inbounds i64, i64* %123, i64 2
  %125 = bitcast i64* %124 to %"class.v8::Value"*
  br label %126

126:                                              ; preds = %116, %122
  %127 = phi %"class.v8::Value"* [ %121, %116 ], [ %125, %122 ]
  %128 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %127) #10
  br i1 %128, label %129, label %132, !prof !5

129:                                              ; preds = %126
  %130 = bitcast %"class.v8::Value"* %127 to %"class.v8::Number"*
  %131 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %130) #10
  br label %134

132:                                              ; preds = %126
  %133 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %127, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %134

134:                                              ; preds = %129, %132
  %135 = phi double [ %131, %129 ], [ %133, %132 ]
  %136 = load i32, i32* %17, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %166

138:                                              ; preds = %134
  %139 = load i32, i32* %20, align 8
  %140 = icmp sgt i32 %139, 3
  br i1 %140, label %147, label %141

141:                                              ; preds = %138
  %142 = load i64*, i64** %4, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 1
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, 160
  %146 = inttoptr i64 %145 to %"class.v8::Value"*
  br label %151

147:                                              ; preds = %138
  %148 = load i64*, i64** %44, align 8
  %149 = getelementptr inbounds i64, i64* %148, i64 3
  %150 = bitcast i64* %149 to %"class.v8::Value"*
  br label %151

151:                                              ; preds = %141, %147
  %152 = phi %"class.v8::Value"* [ %146, %141 ], [ %150, %147 ]
  %153 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %152) #10
  br i1 %153, label %154, label %157, !prof !5

154:                                              ; preds = %151
  %155 = bitcast %"class.v8::Value"* %152 to %"class.v8::Number"*
  %156 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %155) #10
  br label %159

157:                                              ; preds = %151
  %158 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %152, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %159

159:                                              ; preds = %154, %157
  %160 = phi double [ %156, %154 ], [ %158, %157 ]
  %161 = load i32, i32* %17, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %159
  %164 = getelementptr inbounds i8, i8* %77, i64 16
  %165 = bitcast i8* %164 to %"class.blink::BaseRenderingContext2D"*
  call void @_ZN5blink22BaseRenderingContext2D10rotateAxisEdddd(%"class.blink::BaseRenderingContext2D"* %165, double %88, double %110, double %135, double %160) #10
  br label %166

166:                                              ; preds = %159, %134, %109, %83, %163, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %168 = load i64*, i64** %167, align 8
  %169 = icmp eq i64* %168, null
  br i1 %169, label %179, label %170

170:                                              ; preds = %166
  %171 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %172 = bitcast %"class.v8::Isolate"* %171 to %"class.v8::internal::Isolate"*
  %173 = load i64, i64* %168, align 8
  %174 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %172, i64 %173) #10
  %175 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %171) #10
  br i1 %175, label %179, label %176

176:                                              ; preds = %170
  %177 = bitcast i64* %174 to %"class.v8::Value"*
  %178 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %171, %"class.v8::Value"* %177) #10
  br label %179

179:                                              ; preds = %176, %170, %166
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #10
  br label %195

195:                                              ; preds = %179, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d26RoundRectOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::HeapVector.1822", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #10
  %21 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, 5
  br i1 %23, label %24, label %44, !prof !4

24:                                               ; preds = %1
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 5, i32 %22) #10
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #10
  br label %43

43:                                               ; preds = %24, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  br label %186

44:                                               ; preds = %1
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 -1
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = and i64 %48, -4294967296
  %53 = zext i32 %51 to i64
  %54 = or i64 %52, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load i16, i16* %56, align 2
  switch i16 %57, label %62 [
    i16 1057, label %58
    i16 1056, label %58
    i16 1040, label %58
  ]

58:                                               ; preds = %44, %44, %44
  %59 = add i64 %48, 19
  %60 = inttoptr i64 %59 to i8**
  %61 = load i8*, i8** %60, align 1
  br label %73

62:                                               ; preds = %44
  %63 = bitcast i64* %47 to %"class.v8::Object"*
  %64 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %63, i32 1) #10
  %65 = load i32, i32* %21, align 8
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %62
  %68 = load i64*, i64** %5, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 160
  %72 = inttoptr i64 %71 to %"class.v8::Value"*
  br label %77

73:                                               ; preds = %58, %62
  %74 = phi i8* [ %61, %58 ], [ %64, %62 ]
  %75 = bitcast i64** %45 to %"class.v8::Value"**
  %76 = load %"class.v8::Value"*, %"class.v8::Value"** %75, align 8
  br label %77

77:                                               ; preds = %67, %73
  %78 = phi i8* [ %64, %67 ], [ %74, %73 ]
  %79 = phi %"class.v8::Value"* [ %72, %67 ], [ %76, %73 ]
  %80 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %79) #10
  br i1 %80, label %81, label %84, !prof !5

81:                                               ; preds = %77
  %82 = bitcast %"class.v8::Value"* %79 to %"class.v8::Number"*
  %83 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %82) #10
  br label %88

84:                                               ; preds = %77
  %85 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %79, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %86 = load i32, i32* %18, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %186

88:                                               ; preds = %81, %84
  %89 = phi double [ %83, %81 ], [ %85, %84 ]
  %90 = load i32, i32* %21, align 8
  %91 = icmp sgt i32 %90, 1
  br i1 %91, label %98, label %92

92:                                               ; preds = %88
  %93 = load i64*, i64** %5, align 8
  %94 = getelementptr inbounds i64, i64* %93, i64 1
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, 160
  %97 = inttoptr i64 %96 to %"class.v8::Value"*
  br label %102

98:                                               ; preds = %88
  %99 = load i64*, i64** %45, align 8
  %100 = getelementptr inbounds i64, i64* %99, i64 1
  %101 = bitcast i64* %100 to %"class.v8::Value"*
  br label %102

102:                                              ; preds = %92, %98
  %103 = phi %"class.v8::Value"* [ %97, %92 ], [ %101, %98 ]
  %104 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %103) #10
  br i1 %104, label %105, label %108, !prof !5

105:                                              ; preds = %102
  %106 = bitcast %"class.v8::Value"* %103 to %"class.v8::Number"*
  %107 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %106) #10
  br label %110

108:                                              ; preds = %102
  %109 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %103, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %110

110:                                              ; preds = %105, %108
  %111 = phi double [ %107, %105 ], [ %109, %108 ]
  %112 = load i32, i32* %18, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %186

114:                                              ; preds = %110
  %115 = load i32, i32* %21, align 8
  %116 = icmp sgt i32 %115, 2
  br i1 %116, label %123, label %117

117:                                              ; preds = %114
  %118 = load i64*, i64** %5, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %127

123:                                              ; preds = %114
  %124 = load i64*, i64** %45, align 8
  %125 = getelementptr inbounds i64, i64* %124, i64 2
  %126 = bitcast i64* %125 to %"class.v8::Value"*
  br label %127

127:                                              ; preds = %117, %123
  %128 = phi %"class.v8::Value"* [ %122, %117 ], [ %126, %123 ]
  %129 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %128) #10
  br i1 %129, label %130, label %133, !prof !5

130:                                              ; preds = %127
  %131 = bitcast %"class.v8::Value"* %128 to %"class.v8::Number"*
  %132 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %131) #10
  br label %135

133:                                              ; preds = %127
  %134 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %128, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %135

135:                                              ; preds = %130, %133
  %136 = phi double [ %132, %130 ], [ %134, %133 ]
  %137 = load i32, i32* %18, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %186

139:                                              ; preds = %135
  %140 = load i32, i32* %21, align 8
  %141 = icmp sgt i32 %140, 3
  br i1 %141, label %148, label %142

142:                                              ; preds = %139
  %143 = load i64*, i64** %5, align 8
  %144 = getelementptr inbounds i64, i64* %143, i64 1
  %145 = load i64, i64* %144, align 8
  %146 = add i64 %145, 160
  %147 = inttoptr i64 %146 to %"class.v8::Value"*
  br label %152

148:                                              ; preds = %139
  %149 = load i64*, i64** %45, align 8
  %150 = getelementptr inbounds i64, i64* %149, i64 3
  %151 = bitcast i64* %150 to %"class.v8::Value"*
  br label %152

152:                                              ; preds = %142, %148
  %153 = phi %"class.v8::Value"* [ %147, %142 ], [ %151, %148 ]
  %154 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %153) #10
  br i1 %154, label %155, label %158, !prof !5

155:                                              ; preds = %152
  %156 = bitcast %"class.v8::Value"* %153 to %"class.v8::Number"*
  %157 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %156) #10
  br label %160

158:                                              ; preds = %152
  %159 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %9, %"class.v8::Value"* %153, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %160

160:                                              ; preds = %155, %158
  %161 = phi double [ %157, %155 ], [ %159, %158 ]
  %162 = load i32, i32* %18, align 8
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %186

164:                                              ; preds = %160
  %165 = bitcast %"class.blink::HeapVector.1822"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #10
  %166 = load i32, i32* %21, align 8
  %167 = icmp sgt i32 %166, 4
  br i1 %167, label %174, label %168

168:                                              ; preds = %164
  %169 = load i64*, i64** %5, align 8
  %170 = getelementptr inbounds i64, i64* %169, i64 1
  %171 = load i64, i64* %170, align 8
  %172 = add i64 %171, 160
  %173 = inttoptr i64 %172 to %"class.v8::Value"*
  br label %178

174:                                              ; preds = %164
  %175 = load i64*, i64** %45, align 8
  %176 = getelementptr inbounds i64, i64* %175, i64 4
  %177 = bitcast i64* %176 to %"class.v8::Value"*
  br label %178

178:                                              ; preds = %168, %174
  %179 = phi %"class.v8::Value"* [ %173, %168 ], [ %177, %174 ]
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector.1822"* nonnull sret %4, %"class.v8::Isolate"* %9, %"class.v8::Value"* %179, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  %180 = load i32, i32* %18, align 8
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %178
  %183 = getelementptr inbounds i8, i8* %78, i64 24
  %184 = bitcast i8* %183 to %"class.blink::CanvasPath"*
  call void @_ZN5blink10CanvasPath9roundRectEddddRKNS_10HeapVectorINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEELj0EEERNS_14ExceptionStateE(%"class.blink::CanvasPath"* %184, double %89, double %111, double %136, double %161, %"class.blink::HeapVector.1822"* nonnull dereferenceable(16) %4, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #10
  br label %185

185:                                              ; preds = %178, %182
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %165) #10
  br label %186

186:                                              ; preds = %160, %135, %110, %84, %185, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %187 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %188 = load i64*, i64** %187, align 8
  %189 = icmp eq i64* %188, null
  br i1 %189, label %199, label %190

190:                                              ; preds = %186
  %191 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %192 = bitcast %"class.v8::Isolate"* %191 to %"class.v8::internal::Isolate"*
  %193 = load i64, i64* %188, align 8
  %194 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %192, i64 %193) #10
  %195 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %191) #10
  br i1 %195, label %199, label %196

196:                                              ; preds = %190
  %197 = bitcast i64* %194 to %"class.v8::Value"*
  %198 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %191, %"class.v8::Value"* %197) #10
  br label %199

199:                                              ; preds = %196, %190, %186
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %211

209:                                              ; preds = %202
  %210 = add i32 %208, -1
  store i32 %210, i32* %207, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %210, %209 ], [ %208, %202 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %211
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %200) #10
  br label %215

215:                                              ; preds = %199, %211, %214
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #10
  ret void
}

declare double @_ZNK5blink22BaseRenderingContext2D11globalAlphaEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink22BaseRenderingContext2D14setGlobalAlphaEd(%"class.blink::BaseRenderingContext2D"*, double) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"*) local_unnamed_addr #2

declare double @_ZNK2v86Number5ValueEv(%"class.v8::Number"*) local_unnamed_addr #2

declare double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink22BaseRenderingContext2D24globalCompositeOperationEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.550"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #10
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #10
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #10
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.550"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #10
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #10
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #10
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #10
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.550"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #10
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare void @_ZN5blink22BaseRenderingContext2D27setGlobalCompositeOperationERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.54, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i64 0, i64 0)) #10
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.54, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.56, i64 0, i64 0)) #10
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.blink::V8UnionCanvasFilterOrString"* @_ZNK5blink22BaseRenderingContext2D6filterEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare %"class.v8::Value"* @_ZNK5blink27V8UnionCanvasFilterOrString9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionCanvasFilterOrString"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D9setFilterEPKNS_16ExecutionContextEPKNS_27V8UnionCanvasFilterOrStringE(%"class.blink::BaseRenderingContext2D"*, %"class.blink::ExecutionContext"*, %"class.blink::V8UnionCanvasFilterOrString"*) local_unnamed_addr #2

declare %"class.blink::V8UnionCanvasFilterOrString"* @_ZN5blink27V8UnionCanvasFilterOrString6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink22BaseRenderingContext2D21imageSmoothingEnabledEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D24setImageSmoothingEnabledEb(%"class.blink::BaseRenderingContext2D"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"* @_ZNK5blink22BaseRenderingContext2D11strokeStyleEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK5blink59V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D14setStrokeStyleEPKNS_59V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrStringE(%"class.blink::BaseRenderingContext2D"*, %"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"*) local_unnamed_addr #2

declare %"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"* @_ZN5blink59V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"* @_ZNK5blink22BaseRenderingContext2D9fillStyleEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D12setFillStyleEPKNS_59V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrStringE(%"class.blink::BaseRenderingContext2D"*, %"class.blink::V8UnionCSSColorValueOrCanvasGradientOrCanvasPatternOrString"*) local_unnamed_addr #2

declare double @_ZNK5blink23PaintRenderingContext2D13shadowOffsetXEv(%"class.blink::PaintRenderingContext2D"*) unnamed_addr #2

declare void @_ZN5blink23PaintRenderingContext2D16setShadowOffsetXEd(%"class.blink::PaintRenderingContext2D"*, double) unnamed_addr #2

declare double @_ZNK5blink23PaintRenderingContext2D13shadowOffsetYEv(%"class.blink::PaintRenderingContext2D"*) unnamed_addr #2

declare void @_ZN5blink23PaintRenderingContext2D16setShadowOffsetYEd(%"class.blink::PaintRenderingContext2D"*, double) unnamed_addr #2

declare double @_ZNK5blink23PaintRenderingContext2D10shadowBlurEv(%"class.blink::PaintRenderingContext2D"*) unnamed_addr #2

declare void @_ZN5blink23PaintRenderingContext2D13setShadowBlurEd(%"class.blink::PaintRenderingContext2D"*, double) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink22BaseRenderingContext2D11shadowColorEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D14setShadowColorERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare double @_ZNK5blink22BaseRenderingContext2D9lineWidthEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D12setLineWidthEd(%"class.blink::BaseRenderingContext2D"*, double) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink22BaseRenderingContext2D7lineCapEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D10setLineCapERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink22BaseRenderingContext2D8lineJoinEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D11setLineJoinERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare double @_ZNK5blink22BaseRenderingContext2D10miterLimitEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D13setMiterLimitEd(%"class.blink::BaseRenderingContext2D"*, double) local_unnamed_addr #2

declare double @_ZNK5blink22BaseRenderingContext2D14lineDashOffsetEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D17setLineDashOffsetEd(%"class.blink::BaseRenderingContext2D"*, double) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D9beginPathEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D9clearRectEdddd(%"class.blink::BaseRenderingContext2D"*, double, double, double, double) local_unnamed_addr #2

declare %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22ClipOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %76, !prof !4

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds i64, i64* %13, i64 1
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 56, i1 false)
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %19, align 2
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %21 = bitcast i8** %20 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)>, <2 x i8*>* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  %24 = bitcast %"class.v8::Isolate"** %23 to i64*
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringImpl"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #10
  %28 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %29 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %9) #10
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %11
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %46

46:                                               ; preds = %11, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = icmp eq i64* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %46
  %51 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %23, align 8
  %52 = bitcast %"class.v8::Isolate"* %51 to %"class.v8::internal::Isolate"*
  %53 = load i64, i64* %48, align 8
  %54 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %52, i64 %53) #10
  %55 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %51) #10
  br i1 %55, label %59, label %56

56:                                               ; preds = %50
  %57 = bitcast i64* %54 to %"class.v8::Value"*
  %58 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %51, %"class.v8::Value"* %57) #10
  br label %59

59:                                               ; preds = %56, %50, %46
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %75

75:                                               ; preds = %59, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %16) #10
  ret void

76:                                               ; preds = %1
  %77 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %78 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %79 = sext i32 %9 to i64
  br label %80

80:                                               ; preds = %113, %76
  %81 = phi i64 [ %82, %113 ], [ %79, %76 ]
  %82 = add nsw i64 %81, -1
  %83 = icmp sgt i64 %81, 0
  br i1 %83, label %84, label %125

84:                                               ; preds = %80
  %85 = icmp sgt i64 %81, %79
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  %87 = load i64*, i64** %78, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 1
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 160
  %91 = inttoptr i64 %90 to %"class.v8::Value"*
  br label %96

92:                                               ; preds = %84
  %93 = load i64*, i64** %77, align 8
  %94 = getelementptr inbounds i64, i64* %93, i64 %82
  %95 = bitcast i64* %94 to %"class.v8::Value"*
  br label %96

96:                                               ; preds = %92, %86
  %97 = phi %"class.v8::Value"* [ %91, %86 ], [ %95, %92 ]
  %98 = bitcast %"class.v8::Value"* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 3
  %101 = icmp eq i64 %100, 1
  br i1 %101, label %102, label %121

102:                                              ; preds = %96
  %103 = add i64 %99, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = and i64 %99, -4294967296
  %107 = zext i32 %105 to i64
  %108 = or i64 %106, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load i16, i16* %110, align 2
  %112 = icmp eq i16 %111, 67
  br i1 %112, label %113, label %119

113:                                              ; preds = %102
  %114 = add i64 %99, 23
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, -2
  %118 = icmp eq i32 %117, 10
  br i1 %118, label %80, label %123

119:                                              ; preds = %102
  %120 = trunc i64 %81 to i32
  br label %125

121:                                              ; preds = %96
  %122 = trunc i64 %81 to i32
  br label %125

123:                                              ; preds = %113
  %124 = trunc i64 %81 to i32
  br label %125

125:                                              ; preds = %80, %119, %121, %123
  %126 = phi i32 [ %120, %119 ], [ %122, %121 ], [ %124, %123 ], [ 0, %80 ]
  %127 = load i64*, i64** %77, align 8
  %128 = getelementptr inbounds i64, i64* %127, i64 -1
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, -1
  %131 = inttoptr i64 %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = and i64 %129, -4294967296
  %134 = zext i32 %132 to i64
  %135 = or i64 %133, %134
  %136 = add i64 %135, 7
  %137 = inttoptr i64 %136 to i16*
  %138 = load i16, i16* %137, align 2
  switch i16 %138, label %143 [
    i16 1057, label %139
    i16 1056, label %139
    i16 1040, label %139
  ]

139:                                              ; preds = %125, %125, %125
  %140 = add i64 %129, 19
  %141 = inttoptr i64 %140 to i8**
  %142 = load i8*, i8** %141, align 1
  br label %147

143:                                              ; preds = %125
  %144 = bitcast i64* %128 to %"class.v8::Object"*
  %145 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %144, i32 1) #10
  %146 = load i32, i32* %8, align 8
  br label %147

147:                                              ; preds = %139, %143
  %148 = phi i32 [ %9, %139 ], [ %146, %143 ]
  %149 = phi i8* [ %142, %139 ], [ %145, %143 ]
  %150 = load i64*, i64** %78, align 8
  %151 = getelementptr inbounds i64, i64* %150, i64 1
  %152 = bitcast i64* %151 to %"class.v8::Isolate"**
  %153 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %152, align 8
  %154 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %154) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 56, i1 false)
  %155 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %156 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %156, align 8
  %157 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %157, align 2
  %158 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %159 = bitcast i8** %158 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)>, <2 x i8*>* %159, align 8
  %160 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %160, align 8
  %161 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %153, %"class.v8::Isolate"** %161, align 8
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %162, align 8
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %164 = bitcast %"class.WTF::StringImpl"** %163 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 16, i1 false) #10
  %165 = icmp sgt i32 %148, 0
  br i1 %165, label %170, label %166

166:                                              ; preds = %147
  %167 = load i64, i64* %151, align 8
  %168 = add i64 %167, 160
  %169 = inttoptr i64 %168 to %"class.v8::Value"*
  br label %173

170:                                              ; preds = %147
  %171 = bitcast i64** %77 to %"class.v8::Value"**
  %172 = load %"class.v8::Value"*, %"class.v8::Value"** %171, align 8
  br label %173

173:                                              ; preds = %166, %170
  %174 = phi %"class.v8::Value"* [ %169, %166 ], [ %172, %170 ]
  %175 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink6Path2D18wrapper_type_info_E, align 8
  %176 = ptrtoint %"class.v8::Isolate"* %153 to i64
  %177 = add i64 %176, 8
  %178 = inttoptr i64 %177 to %"class.blink::V8PerIsolateData"**
  %179 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %178, align 8
  %180 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %179, %"struct.blink::WrapperTypeInfo"* %175, %"class.v8::Value"* %174) #10
  br i1 %180, label %181, label %203

181:                                              ; preds = %173
  %182 = bitcast %"class.v8::Value"* %174 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, -1
  %185 = inttoptr i64 %184 to i32*
  %186 = load i32, i32* %185, align 4
  %187 = and i64 %183, -4294967296
  %188 = zext i32 %186 to i64
  %189 = or i64 %187, %188
  %190 = add i64 %189, 7
  %191 = inttoptr i64 %190 to i16*
  %192 = load i16, i16* %191, align 2
  switch i16 %192, label %197 [
    i16 1057, label %193
    i16 1056, label %193
    i16 1040, label %193
  ]

193:                                              ; preds = %181, %181, %181
  %194 = add i64 %183, 19
  %195 = inttoptr i64 %194 to i8**
  %196 = load i8*, i8** %195, align 1
  br label %200

197:                                              ; preds = %181
  %198 = bitcast %"class.v8::Value"* %174 to %"class.v8::Object"*
  %199 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %198, i32 1) #10
  br label %200

200:                                              ; preds = %193, %197
  %201 = phi i8* [ %196, %193 ], [ %199, %197 ]
  %202 = bitcast i8* %201 to %"class.blink::Path2D"*
  br label %206

203:                                              ; preds = %173
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %175, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #10
  %204 = load i32, i32* %162, align 8
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %286

206:                                              ; preds = %200, %203
  %207 = phi %"class.blink::Path2D"* [ %202, %200 ], [ null, %203 ]
  %208 = icmp slt i32 %126, 2
  br i1 %208, label %209, label %230

209:                                              ; preds = %206
  %210 = getelementptr inbounds i8, i8* %149, i64 16
  %211 = bitcast i8* %210 to %"class.blink::BaseRenderingContext2D"*
  %212 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %212) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i64 0, i64 0), i64 7) #10
  call void @_ZN5blink22BaseRenderingContext2D4clipEPNS_6Path2DERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %211, %"class.blink::Path2D"* %207, %"class.WTF::String"* nonnull dereferenceable(8) %6) #10
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %229, label %216

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %222 = load i32, i32* %221, align 4
  br i1 %220, label %223, label %225

223:                                              ; preds = %216
  %224 = add i32 %222, -1
  store i32 %224, i32* %221, align 4
  br label %225

225:                                              ; preds = %223, %216
  %226 = phi i32 [ %224, %223 ], [ %222, %216 ]
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %225
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %214) #10
  br label %229

229:                                              ; preds = %209, %225, %228
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %212) #10
  br label %286

230:                                              ; preds = %206
  %231 = load i32, i32* %8, align 8
  %232 = icmp sgt i32 %231, 1
  br i1 %232, label %239, label %233

233:                                              ; preds = %230
  %234 = load i64*, i64** %78, align 8
  %235 = getelementptr inbounds i64, i64* %234, i64 1
  %236 = load i64, i64* %235, align 8
  %237 = add i64 %236, 160
  %238 = inttoptr i64 %237 to %"class.v8::Value"*
  br label %243

239:                                              ; preds = %230
  %240 = load i64*, i64** %77, align 8
  %241 = getelementptr inbounds i64, i64* %240, i64 1
  %242 = bitcast i64* %241 to %"class.v8::Value"*
  br label %243

243:                                              ; preds = %233, %239
  %244 = phi %"class.v8::Value"* [ %238, %233 ], [ %242, %239 ]
  %245 = call { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"* %153, %"class.v8::Value"* %244, i64 2, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZN5blink16V8CanvasFillRule13string_table_E, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i64 0, i64 0), %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #10
  %246 = extractvalue { i8, i64 } %245, 0
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %252, label %248

248:                                              ; preds = %243
  %249 = extractvalue { i8, i64 } %245, 1
  %250 = getelementptr inbounds [2 x i8*], [2 x i8*]* @_ZN5blink16V8CanvasFillRule13string_table_E.const, i64 0, i64 %249
  %251 = load i8*, i8** %250, align 8
  br label %252

252:                                              ; preds = %243, %248
  %253 = phi i8* [ %251, %248 ], [ null, %243 ]
  %254 = load i32, i32* %162, align 8
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %286

256:                                              ; preds = %252
  %257 = getelementptr inbounds i8, i8* %149, i64 16
  %258 = bitcast i8* %257 to %"class.blink::BaseRenderingContext2D"*
  %259 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %259) #10
  %260 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260)
  %261 = icmp eq i8* %253, null
  br i1 %261, label %264, label %262

262:                                              ; preds = %256
  %263 = call i64 @strlen(i8* nonnull %253) #11
  br label %264

264:                                              ; preds = %256, %262
  %265 = phi i64 [ %263, %262 ], [ 0, %256 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %253, i64 %265) #10
  %266 = bitcast %"class.WTF::String"* %2 to i64*
  %267 = load i64, i64* %266, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260)
  %268 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %269 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %267, i64* %269, align 8
  call void @_ZN5blink22BaseRenderingContext2D4clipEPNS_6Path2DERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %258, %"class.blink::Path2D"* %207, %"class.WTF::String"* nonnull dereferenceable(8) %7) #10
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %271 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %271, label %285, label %272

272:                                              ; preds = %264
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = and i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  br i1 %276, label %279, label %281

279:                                              ; preds = %272
  %280 = add i32 %278, -1
  store i32 %280, i32* %277, align 4
  br label %281

281:                                              ; preds = %279, %272
  %282 = phi i32 [ %280, %279 ], [ %278, %272 ]
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %270) #10
  br label %285

285:                                              ; preds = %264, %281, %284
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259) #10
  br label %286

286:                                              ; preds = %252, %203, %285, %229
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %287 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %288 = load i64*, i64** %287, align 8
  %289 = icmp eq i64* %288, null
  br i1 %289, label %299, label %290

290:                                              ; preds = %286
  %291 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %161, align 8
  %292 = bitcast %"class.v8::Isolate"* %291 to %"class.v8::internal::Isolate"*
  %293 = load i64, i64* %288, align 8
  %294 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %292, i64 %293) #10
  %295 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %291) #10
  br i1 %295, label %299, label %296

296:                                              ; preds = %290
  %297 = bitcast i64* %294 to %"class.v8::Value"*
  %298 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %291, %"class.v8::Value"* %297) #10
  br label %299

299:                                              ; preds = %296, %290, %286
  %300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %301 = icmp eq %"class.WTF::StringImpl"* %300, null
  br i1 %301, label %315, label %302

302:                                              ; preds = %299
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %300, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load atomic i32, i32* %303 monotonic, align 4
  %305 = and i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %300, i64 0, i32 0
  %308 = load i32, i32* %307, align 4
  br i1 %306, label %309, label %311

309:                                              ; preds = %302
  %310 = add i32 %308, -1
  store i32 %310, i32* %307, align 4
  br label %311

311:                                              ; preds = %309, %302
  %312 = phi i32 [ %310, %309 ], [ %308, %302 ]
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %315

314:                                              ; preds = %311
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %300) #10
  br label %315

315:                                              ; preds = %299, %311, %314
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %154) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22ClipOperationOverload1ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %10 = sext i32 %7 to i64
  br label %11

11:                                               ; preds = %44, %1
  %12 = phi i64 [ %13, %44 ], [ %10, %1 ]
  %13 = add nsw i64 %12, -1
  %14 = icmp sgt i64 %12, 0
  br i1 %14, label %15, label %56

15:                                               ; preds = %11
  %16 = icmp sgt i64 %12, %10
  br i1 %16, label %17, label %23

17:                                               ; preds = %15
  %18 = load i64*, i64** %9, align 8
  %19 = getelementptr inbounds i64, i64* %18, i64 1
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 160
  %22 = inttoptr i64 %21 to %"class.v8::Value"*
  br label %27

23:                                               ; preds = %15
  %24 = load i64*, i64** %8, align 8
  %25 = getelementptr inbounds i64, i64* %24, i64 %13
  %26 = bitcast i64* %25 to %"class.v8::Value"*
  br label %27

27:                                               ; preds = %23, %17
  %28 = phi %"class.v8::Value"* [ %22, %17 ], [ %26, %23 ]
  %29 = bitcast %"class.v8::Value"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 3
  %32 = icmp eq i64 %31, 1
  br i1 %32, label %33, label %52

33:                                               ; preds = %27
  %34 = add i64 %30, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = and i64 %30, -4294967296
  %38 = zext i32 %36 to i64
  %39 = or i64 %37, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load i16, i16* %41, align 2
  %43 = icmp eq i16 %42, 67
  br i1 %43, label %44, label %50

44:                                               ; preds = %33
  %45 = add i64 %30, 23
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, -2
  %49 = icmp eq i32 %48, 10
  br i1 %49, label %11, label %54

50:                                               ; preds = %33
  %51 = trunc i64 %12 to i32
  br label %56

52:                                               ; preds = %27
  %53 = trunc i64 %12 to i32
  br label %56

54:                                               ; preds = %44
  %55 = trunc i64 %12 to i32
  br label %56

56:                                               ; preds = %11, %50, %52, %54
  %57 = phi i32 [ %51, %50 ], [ %53, %52 ], [ %55, %54 ], [ 0, %11 ]
  %58 = load i64*, i64** %8, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 -1
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = and i64 %60, -4294967296
  %65 = zext i32 %63 to i64
  %66 = or i64 %64, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load i16, i16* %68, align 2
  switch i16 %69, label %74 [
    i16 1057, label %70
    i16 1056, label %70
    i16 1040, label %70
  ]

70:                                               ; preds = %56, %56, %56
  %71 = add i64 %60, 19
  %72 = inttoptr i64 %71 to i8**
  %73 = load i8*, i8** %72, align 1
  br label %77

74:                                               ; preds = %56
  %75 = bitcast i64* %59 to %"class.v8::Object"*
  %76 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %75, i32 1) #10
  br label %77

77:                                               ; preds = %70, %74
  %78 = phi i8* [ %73, %70 ], [ %76, %74 ]
  %79 = icmp slt i32 %57, 1
  br i1 %79, label %80, label %101

80:                                               ; preds = %77
  %81 = getelementptr inbounds i8, i8* %78, i64 16
  %82 = bitcast i8* %81 to %"class.blink::BaseRenderingContext2D"*
  %83 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i64 0, i64 0), i64 7) #10
  call void @_ZN5blink22BaseRenderingContext2D4clipERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %82, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #10
  br label %100

100:                                              ; preds = %80, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #10
  br label %199

101:                                              ; preds = %77
  %102 = load i64*, i64** %9, align 8
  %103 = getelementptr inbounds i64, i64* %102, i64 1
  %104 = bitcast i64* %103 to %"class.v8::Isolate"**
  %105 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %104, align 8
  %106 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %106) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 56, i1 false)
  %107 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %108, align 8
  %109 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %109, align 2
  %110 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %111 = bitcast i8** %110 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)>, <2 x i8*>* %111, align 8
  %112 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %112, align 8
  %113 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %105, %"class.v8::Isolate"** %113, align 8
  %114 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %114, align 8
  %115 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %116 = bitcast %"class.WTF::StringImpl"** %115 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 16, i1 false) #10
  %117 = load i32, i32* %6, align 8
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %101
  %120 = load i64, i64* %103, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %126

123:                                              ; preds = %101
  %124 = bitcast i64** %8 to %"class.v8::Value"**
  %125 = load %"class.v8::Value"*, %"class.v8::Value"** %124, align 8
  br label %126

126:                                              ; preds = %119, %123
  %127 = phi %"class.v8::Value"* [ %122, %119 ], [ %125, %123 ]
  %128 = call { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"* %105, %"class.v8::Value"* %127, i64 2, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZN5blink16V8CanvasFillRule13string_table_E, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i64 0, i64 0), %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #10
  %129 = extractvalue { i8, i64 } %128, 0
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %135, label %131

131:                                              ; preds = %126
  %132 = extractvalue { i8, i64 } %128, 1
  %133 = getelementptr inbounds [2 x i8*], [2 x i8*]* @_ZN5blink16V8CanvasFillRule13string_table_E.const, i64 0, i64 %132
  %134 = load i8*, i8** %133, align 8
  br label %135

135:                                              ; preds = %126, %131
  %136 = phi i8* [ %134, %131 ], [ null, %126 ]
  %137 = load i32, i32* %114, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %169

139:                                              ; preds = %135
  %140 = getelementptr inbounds i8, i8* %78, i64 16
  %141 = bitcast i8* %140 to %"class.blink::BaseRenderingContext2D"*
  %142 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #10
  %143 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143)
  %144 = icmp eq i8* %136, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  %146 = call i64 @strlen(i8* nonnull %136) #11
  br label %147

147:                                              ; preds = %139, %145
  %148 = phi i64 [ %146, %145 ], [ 0, %139 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %136, i64 %148) #10
  %149 = bitcast %"class.WTF::String"* %2 to i64*
  %150 = load i64, i64* %149, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143)
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %152 = bitcast %"class.WTF::String"* %5 to i64*
  store i64 %150, i64* %152, align 8
  call void @_ZN5blink22BaseRenderingContext2D4clipERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %141, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #10
  br label %168

168:                                              ; preds = %147, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #10
  br label %169

169:                                              ; preds = %135, %168
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %170 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %171 = load i64*, i64** %170, align 8
  %172 = icmp eq i64* %171, null
  br i1 %172, label %182, label %173

173:                                              ; preds = %169
  %174 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %113, align 8
  %175 = bitcast %"class.v8::Isolate"* %174 to %"class.v8::internal::Isolate"*
  %176 = load i64, i64* %171, align 8
  %177 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %175, i64 %176) #10
  %178 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %174) #10
  br i1 %178, label %182, label %179

179:                                              ; preds = %173
  %180 = bitcast i64* %177 to %"class.v8::Value"*
  %181 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %174, %"class.v8::Value"* %180) #10
  br label %182

182:                                              ; preds = %179, %173, %169
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %184 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  br i1 %189, label %192, label %194

192:                                              ; preds = %185
  %193 = add i32 %191, -1
  store i32 %193, i32* %190, align 4
  br label %194

194:                                              ; preds = %192, %185
  %195 = phi i32 [ %193, %192 ], [ %191, %185 ]
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %194
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %183) #10
  br label %198

198:                                              ; preds = %182, %194, %197
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %106) #10
  br label %199

199:                                              ; preds = %198, %100
  ret void
}

declare void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D4clipEPNS_6Path2DERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"*, %"class.blink::Path2D"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i64, i8**, i8*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D4clipERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::CanvasGradient"* @_ZN5blink22BaseRenderingContext2D20createLinearGradientEdddd(%"class.blink::BaseRenderingContext2D"*, double, double, double, double) local_unnamed_addr #2

declare double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !4
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #10
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #10
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !4
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #10
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !4

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare %"class.blink::CanvasPattern"* @_ZN5blink22BaseRenderingContext2D13createPatternEPNS_11ScriptStateEPKNS_134V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrameERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::BaseRenderingContext2D"*, %"class.blink::ScriptState"*, %"class.blink::V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame"* @_ZN5blink134V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE2EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.550"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %102

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #10
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #10
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #10
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.550"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %102

36:                                               ; preds = %26
  %37 = load i64, i64* %6, align 8
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %40, label %84

40:                                               ; preds = %36
  %41 = add i64 %37, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = and i64 %37, -4294967296
  %45 = zext i32 %43 to i64
  %46 = or i64 %44, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 67
  br i1 %50, label %51, label %84

51:                                               ; preds = %40
  %52 = add i64 %37, 23
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, -2
  %56 = icmp eq i32 %55, 6
  br i1 %56, label %57, label %84

57:                                               ; preds = %51
  %58 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %59 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %62, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #10
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !4

78:                                               ; preds = %69
  tail call void @llvm.trap() #10
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %57, %64, %79
  %82 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %83 = bitcast %"class.std::__1::unique_ptr.550"* %82 to i64*
  store i64 0, i64* %83, align 8
  br label %102

84:                                               ; preds = %40, %36, %51
  %85 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %85) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #10
  %86 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %87 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %86) #10
  %88 = icmp eq %"class.v8::String"* %87, null
  br i1 %88, label %89, label %96

89:                                               ; preds = %84
  %90 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #10
  %91 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %92 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %92, i64 5
  %94 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %93, align 8
  call void %94(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %90) #10
  %95 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 152, i1 false)
  br label %101

96:                                               ; preds = %84
  %97 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %87, %"class.v8::String"** %97, align 8
  %98 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %98, align 8
  %99 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %100 = bitcast %"class.std::__1::unique_ptr.550"* %99 to i64*
  store i64 0, i64* %100, align 8
  br label %101

101:                                              ; preds = %96, %89
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %85) #10
  br label %102

102:                                              ; preds = %101, %81, %28, %21
  ret void
}

declare %"class.blink::CanvasGradient"* @_ZN5blink22BaseRenderingContext2D20createRadialGradientEddddddRNS_14ExceptionStateE(%"class.blink::BaseRenderingContext2D"*, double, double, double, double, double, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D9drawImageEPNS_11ScriptStateEPKNS_134V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrameEddddddddRNS_14ExceptionStateE(%"class.blink::BaseRenderingContext2D"*, %"class.blink::ScriptState"*, %"class.blink::V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame"*, double, double, double, double, double, double, double, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D9drawImageEPNS_11ScriptStateEPKNS_134V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrameEddddRNS_14ExceptionStateE(%"class.blink::BaseRenderingContext2D"*, %"class.blink::ScriptState"*, %"class.blink::V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame"*, double, double, double, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D9drawImageEPNS_11ScriptStateEPKNS_134V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrameEddRNS_14ExceptionStateE(%"class.blink::BaseRenderingContext2D"*, %"class.blink::ScriptState"*, %"class.blink::V8UnionCSSImageValueOrHTMLCanvasElementOrHTMLImageElementOrHTMLVideoElementOrImageBitmapOrOffscreenCanvasOrSVGImageElementOrVideoFrame"*, double, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22FillOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %76, !prof !4

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds i64, i64* %13, i64 1
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 56, i1 false)
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %19, align 2
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %21 = bitcast i8** %20 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0)>, <2 x i8*>* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  %24 = bitcast %"class.v8::Isolate"** %23 to i64*
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringImpl"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #10
  %28 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %29 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %9) #10
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %11
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %46

46:                                               ; preds = %11, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = icmp eq i64* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %46
  %51 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %23, align 8
  %52 = bitcast %"class.v8::Isolate"* %51 to %"class.v8::internal::Isolate"*
  %53 = load i64, i64* %48, align 8
  %54 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %52, i64 %53) #10
  %55 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %51) #10
  br i1 %55, label %59, label %56

56:                                               ; preds = %50
  %57 = bitcast i64* %54 to %"class.v8::Value"*
  %58 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %51, %"class.v8::Value"* %57) #10
  br label %59

59:                                               ; preds = %56, %50, %46
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %75

75:                                               ; preds = %59, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %16) #10
  ret void

76:                                               ; preds = %1
  %77 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %78 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %79 = sext i32 %9 to i64
  br label %80

80:                                               ; preds = %113, %76
  %81 = phi i64 [ %82, %113 ], [ %79, %76 ]
  %82 = add nsw i64 %81, -1
  %83 = icmp sgt i64 %81, 0
  br i1 %83, label %84, label %125

84:                                               ; preds = %80
  %85 = icmp sgt i64 %81, %79
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  %87 = load i64*, i64** %78, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 1
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 160
  %91 = inttoptr i64 %90 to %"class.v8::Value"*
  br label %96

92:                                               ; preds = %84
  %93 = load i64*, i64** %77, align 8
  %94 = getelementptr inbounds i64, i64* %93, i64 %82
  %95 = bitcast i64* %94 to %"class.v8::Value"*
  br label %96

96:                                               ; preds = %92, %86
  %97 = phi %"class.v8::Value"* [ %91, %86 ], [ %95, %92 ]
  %98 = bitcast %"class.v8::Value"* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 3
  %101 = icmp eq i64 %100, 1
  br i1 %101, label %102, label %121

102:                                              ; preds = %96
  %103 = add i64 %99, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = and i64 %99, -4294967296
  %107 = zext i32 %105 to i64
  %108 = or i64 %106, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load i16, i16* %110, align 2
  %112 = icmp eq i16 %111, 67
  br i1 %112, label %113, label %119

113:                                              ; preds = %102
  %114 = add i64 %99, 23
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, -2
  %118 = icmp eq i32 %117, 10
  br i1 %118, label %80, label %123

119:                                              ; preds = %102
  %120 = trunc i64 %81 to i32
  br label %125

121:                                              ; preds = %96
  %122 = trunc i64 %81 to i32
  br label %125

123:                                              ; preds = %113
  %124 = trunc i64 %81 to i32
  br label %125

125:                                              ; preds = %80, %119, %121, %123
  %126 = phi i32 [ %120, %119 ], [ %122, %121 ], [ %124, %123 ], [ 0, %80 ]
  %127 = load i64*, i64** %77, align 8
  %128 = getelementptr inbounds i64, i64* %127, i64 -1
  %129 = load i64, i64* %128, align 8
  %130 = add i64 %129, -1
  %131 = inttoptr i64 %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = and i64 %129, -4294967296
  %134 = zext i32 %132 to i64
  %135 = or i64 %133, %134
  %136 = add i64 %135, 7
  %137 = inttoptr i64 %136 to i16*
  %138 = load i16, i16* %137, align 2
  switch i16 %138, label %143 [
    i16 1057, label %139
    i16 1056, label %139
    i16 1040, label %139
  ]

139:                                              ; preds = %125, %125, %125
  %140 = add i64 %129, 19
  %141 = inttoptr i64 %140 to i8**
  %142 = load i8*, i8** %141, align 1
  br label %147

143:                                              ; preds = %125
  %144 = bitcast i64* %128 to %"class.v8::Object"*
  %145 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %144, i32 1) #10
  %146 = load i32, i32* %8, align 8
  br label %147

147:                                              ; preds = %139, %143
  %148 = phi i32 [ %9, %139 ], [ %146, %143 ]
  %149 = phi i8* [ %142, %139 ], [ %145, %143 ]
  %150 = load i64*, i64** %78, align 8
  %151 = getelementptr inbounds i64, i64* %150, i64 1
  %152 = bitcast i64* %151 to %"class.v8::Isolate"**
  %153 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %152, align 8
  %154 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %154) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 56, i1 false)
  %155 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %156 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %156, align 8
  %157 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %157, align 2
  %158 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %159 = bitcast i8** %158 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0)>, <2 x i8*>* %159, align 8
  %160 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %160, align 8
  %161 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %153, %"class.v8::Isolate"** %161, align 8
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %162, align 8
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %164 = bitcast %"class.WTF::StringImpl"** %163 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 16, i1 false) #10
  %165 = icmp sgt i32 %148, 0
  br i1 %165, label %170, label %166

166:                                              ; preds = %147
  %167 = load i64, i64* %151, align 8
  %168 = add i64 %167, 160
  %169 = inttoptr i64 %168 to %"class.v8::Value"*
  br label %173

170:                                              ; preds = %147
  %171 = bitcast i64** %77 to %"class.v8::Value"**
  %172 = load %"class.v8::Value"*, %"class.v8::Value"** %171, align 8
  br label %173

173:                                              ; preds = %166, %170
  %174 = phi %"class.v8::Value"* [ %169, %166 ], [ %172, %170 ]
  %175 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink6Path2D18wrapper_type_info_E, align 8
  %176 = ptrtoint %"class.v8::Isolate"* %153 to i64
  %177 = add i64 %176, 8
  %178 = inttoptr i64 %177 to %"class.blink::V8PerIsolateData"**
  %179 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %178, align 8
  %180 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %179, %"struct.blink::WrapperTypeInfo"* %175, %"class.v8::Value"* %174) #10
  br i1 %180, label %181, label %203

181:                                              ; preds = %173
  %182 = bitcast %"class.v8::Value"* %174 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, -1
  %185 = inttoptr i64 %184 to i32*
  %186 = load i32, i32* %185, align 4
  %187 = and i64 %183, -4294967296
  %188 = zext i32 %186 to i64
  %189 = or i64 %187, %188
  %190 = add i64 %189, 7
  %191 = inttoptr i64 %190 to i16*
  %192 = load i16, i16* %191, align 2
  switch i16 %192, label %197 [
    i16 1057, label %193
    i16 1056, label %193
    i16 1040, label %193
  ]

193:                                              ; preds = %181, %181, %181
  %194 = add i64 %183, 19
  %195 = inttoptr i64 %194 to i8**
  %196 = load i8*, i8** %195, align 1
  br label %200

197:                                              ; preds = %181
  %198 = bitcast %"class.v8::Value"* %174 to %"class.v8::Object"*
  %199 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %198, i32 1) #10
  br label %200

200:                                              ; preds = %193, %197
  %201 = phi i8* [ %196, %193 ], [ %199, %197 ]
  %202 = bitcast i8* %201 to %"class.blink::Path2D"*
  br label %206

203:                                              ; preds = %173
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %175, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #10
  %204 = load i32, i32* %162, align 8
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %286

206:                                              ; preds = %200, %203
  %207 = phi %"class.blink::Path2D"* [ %202, %200 ], [ null, %203 ]
  %208 = icmp slt i32 %126, 2
  br i1 %208, label %209, label %230

209:                                              ; preds = %206
  %210 = getelementptr inbounds i8, i8* %149, i64 16
  %211 = bitcast i8* %210 to %"class.blink::BaseRenderingContext2D"*
  %212 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %212) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i64 0, i64 0), i64 7) #10
  call void @_ZN5blink22BaseRenderingContext2D4fillEPNS_6Path2DERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %211, %"class.blink::Path2D"* %207, %"class.WTF::String"* nonnull dereferenceable(8) %6) #10
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %229, label %216

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %222 = load i32, i32* %221, align 4
  br i1 %220, label %223, label %225

223:                                              ; preds = %216
  %224 = add i32 %222, -1
  store i32 %224, i32* %221, align 4
  br label %225

225:                                              ; preds = %223, %216
  %226 = phi i32 [ %224, %223 ], [ %222, %216 ]
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %225
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %214) #10
  br label %229

229:                                              ; preds = %209, %225, %228
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %212) #10
  br label %286

230:                                              ; preds = %206
  %231 = load i32, i32* %8, align 8
  %232 = icmp sgt i32 %231, 1
  br i1 %232, label %239, label %233

233:                                              ; preds = %230
  %234 = load i64*, i64** %78, align 8
  %235 = getelementptr inbounds i64, i64* %234, i64 1
  %236 = load i64, i64* %235, align 8
  %237 = add i64 %236, 160
  %238 = inttoptr i64 %237 to %"class.v8::Value"*
  br label %243

239:                                              ; preds = %230
  %240 = load i64*, i64** %77, align 8
  %241 = getelementptr inbounds i64, i64* %240, i64 1
  %242 = bitcast i64* %241 to %"class.v8::Value"*
  br label %243

243:                                              ; preds = %233, %239
  %244 = phi %"class.v8::Value"* [ %238, %233 ], [ %242, %239 ]
  %245 = call { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"* %153, %"class.v8::Value"* %244, i64 2, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZN5blink16V8CanvasFillRule13string_table_E, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i64 0, i64 0), %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #10
  %246 = extractvalue { i8, i64 } %245, 0
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %252, label %248

248:                                              ; preds = %243
  %249 = extractvalue { i8, i64 } %245, 1
  %250 = getelementptr inbounds [2 x i8*], [2 x i8*]* @_ZN5blink16V8CanvasFillRule13string_table_E.const, i64 0, i64 %249
  %251 = load i8*, i8** %250, align 8
  br label %252

252:                                              ; preds = %243, %248
  %253 = phi i8* [ %251, %248 ], [ null, %243 ]
  %254 = load i32, i32* %162, align 8
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %286

256:                                              ; preds = %252
  %257 = getelementptr inbounds i8, i8* %149, i64 16
  %258 = bitcast i8* %257 to %"class.blink::BaseRenderingContext2D"*
  %259 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %259) #10
  %260 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260)
  %261 = icmp eq i8* %253, null
  br i1 %261, label %264, label %262

262:                                              ; preds = %256
  %263 = call i64 @strlen(i8* nonnull %253) #11
  br label %264

264:                                              ; preds = %256, %262
  %265 = phi i64 [ %263, %262 ], [ 0, %256 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %253, i64 %265) #10
  %266 = bitcast %"class.WTF::String"* %2 to i64*
  %267 = load i64, i64* %266, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260)
  %268 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %269 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %267, i64* %269, align 8
  call void @_ZN5blink22BaseRenderingContext2D4fillEPNS_6Path2DERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %258, %"class.blink::Path2D"* %207, %"class.WTF::String"* nonnull dereferenceable(8) %7) #10
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %271 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %271, label %285, label %272

272:                                              ; preds = %264
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = and i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  br i1 %276, label %279, label %281

279:                                              ; preds = %272
  %280 = add i32 %278, -1
  store i32 %280, i32* %277, align 4
  br label %281

281:                                              ; preds = %279, %272
  %282 = phi i32 [ %280, %279 ], [ %278, %272 ]
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %270) #10
  br label %285

285:                                              ; preds = %264, %281, %284
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259) #10
  br label %286

286:                                              ; preds = %252, %203, %285, %229
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %287 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %288 = load i64*, i64** %287, align 8
  %289 = icmp eq i64* %288, null
  br i1 %289, label %299, label %290

290:                                              ; preds = %286
  %291 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %161, align 8
  %292 = bitcast %"class.v8::Isolate"* %291 to %"class.v8::internal::Isolate"*
  %293 = load i64, i64* %288, align 8
  %294 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %292, i64 %293) #10
  %295 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %291) #10
  br i1 %295, label %299, label %296

296:                                              ; preds = %290
  %297 = bitcast i64* %294 to %"class.v8::Value"*
  %298 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %291, %"class.v8::Value"* %297) #10
  br label %299

299:                                              ; preds = %296, %290, %286
  %300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %301 = icmp eq %"class.WTF::StringImpl"* %300, null
  br i1 %301, label %315, label %302

302:                                              ; preds = %299
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %300, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load atomic i32, i32* %303 monotonic, align 4
  %305 = and i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %300, i64 0, i32 0
  %308 = load i32, i32* %307, align 4
  br i1 %306, label %309, label %311

309:                                              ; preds = %302
  %310 = add i32 %308, -1
  store i32 %310, i32* %307, align 4
  br label %311

311:                                              ; preds = %309, %302
  %312 = phi i32 [ %310, %309 ], [ %308, %302 ]
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %315

314:                                              ; preds = %311
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %300) #10
  br label %315

315:                                              ; preds = %299, %311, %314
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %154) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d22FillOperationOverload1ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %10 = sext i32 %7 to i64
  br label %11

11:                                               ; preds = %44, %1
  %12 = phi i64 [ %13, %44 ], [ %10, %1 ]
  %13 = add nsw i64 %12, -1
  %14 = icmp sgt i64 %12, 0
  br i1 %14, label %15, label %56

15:                                               ; preds = %11
  %16 = icmp sgt i64 %12, %10
  br i1 %16, label %17, label %23

17:                                               ; preds = %15
  %18 = load i64*, i64** %9, align 8
  %19 = getelementptr inbounds i64, i64* %18, i64 1
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 160
  %22 = inttoptr i64 %21 to %"class.v8::Value"*
  br label %27

23:                                               ; preds = %15
  %24 = load i64*, i64** %8, align 8
  %25 = getelementptr inbounds i64, i64* %24, i64 %13
  %26 = bitcast i64* %25 to %"class.v8::Value"*
  br label %27

27:                                               ; preds = %23, %17
  %28 = phi %"class.v8::Value"* [ %22, %17 ], [ %26, %23 ]
  %29 = bitcast %"class.v8::Value"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 3
  %32 = icmp eq i64 %31, 1
  br i1 %32, label %33, label %52

33:                                               ; preds = %27
  %34 = add i64 %30, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = and i64 %30, -4294967296
  %38 = zext i32 %36 to i64
  %39 = or i64 %37, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load i16, i16* %41, align 2
  %43 = icmp eq i16 %42, 67
  br i1 %43, label %44, label %50

44:                                               ; preds = %33
  %45 = add i64 %30, 23
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, -2
  %49 = icmp eq i32 %48, 10
  br i1 %49, label %11, label %54

50:                                               ; preds = %33
  %51 = trunc i64 %12 to i32
  br label %56

52:                                               ; preds = %27
  %53 = trunc i64 %12 to i32
  br label %56

54:                                               ; preds = %44
  %55 = trunc i64 %12 to i32
  br label %56

56:                                               ; preds = %11, %50, %52, %54
  %57 = phi i32 [ %51, %50 ], [ %53, %52 ], [ %55, %54 ], [ 0, %11 ]
  %58 = load i64*, i64** %8, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 -1
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = and i64 %60, -4294967296
  %65 = zext i32 %63 to i64
  %66 = or i64 %64, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load i16, i16* %68, align 2
  switch i16 %69, label %74 [
    i16 1057, label %70
    i16 1056, label %70
    i16 1040, label %70
  ]

70:                                               ; preds = %56, %56, %56
  %71 = add i64 %60, 19
  %72 = inttoptr i64 %71 to i8**
  %73 = load i8*, i8** %72, align 1
  br label %77

74:                                               ; preds = %56
  %75 = bitcast i64* %59 to %"class.v8::Object"*
  %76 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %75, i32 1) #10
  br label %77

77:                                               ; preds = %70, %74
  %78 = phi i8* [ %73, %70 ], [ %76, %74 ]
  %79 = icmp slt i32 %57, 1
  br i1 %79, label %80, label %101

80:                                               ; preds = %77
  %81 = getelementptr inbounds i8, i8* %78, i64 16
  %82 = bitcast i8* %81 to %"class.blink::BaseRenderingContext2D"*
  %83 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i64 0, i64 0), i64 7) #10
  call void @_ZN5blink22BaseRenderingContext2D4fillERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %82, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #10
  br label %100

100:                                              ; preds = %80, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #10
  br label %199

101:                                              ; preds = %77
  %102 = load i64*, i64** %9, align 8
  %103 = getelementptr inbounds i64, i64* %102, i64 1
  %104 = bitcast i64* %103 to %"class.v8::Isolate"**
  %105 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %104, align 8
  %106 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %106) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 56, i1 false)
  %107 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %108, align 8
  %109 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %109, align 2
  %110 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %111 = bitcast i8** %110 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0)>, <2 x i8*>* %111, align 8
  %112 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %112, align 8
  %113 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %105, %"class.v8::Isolate"** %113, align 8
  %114 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %114, align 8
  %115 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %116 = bitcast %"class.WTF::StringImpl"** %115 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 16, i1 false) #10
  %117 = load i32, i32* %6, align 8
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %101
  %120 = load i64, i64* %103, align 8
  %121 = add i64 %120, 160
  %122 = inttoptr i64 %121 to %"class.v8::Value"*
  br label %126

123:                                              ; preds = %101
  %124 = bitcast i64** %8 to %"class.v8::Value"**
  %125 = load %"class.v8::Value"*, %"class.v8::Value"** %124, align 8
  br label %126

126:                                              ; preds = %119, %123
  %127 = phi %"class.v8::Value"* [ %122, %119 ], [ %125, %123 ]
  %128 = call { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"* %105, %"class.v8::Value"* %127, i64 2, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZN5blink16V8CanvasFillRule13string_table_E, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i64 0, i64 0), %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #10
  %129 = extractvalue { i8, i64 } %128, 0
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %135, label %131

131:                                              ; preds = %126
  %132 = extractvalue { i8, i64 } %128, 1
  %133 = getelementptr inbounds [2 x i8*], [2 x i8*]* @_ZN5blink16V8CanvasFillRule13string_table_E.const, i64 0, i64 %132
  %134 = load i8*, i8** %133, align 8
  br label %135

135:                                              ; preds = %126, %131
  %136 = phi i8* [ %134, %131 ], [ null, %126 ]
  %137 = load i32, i32* %114, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %169

139:                                              ; preds = %135
  %140 = getelementptr inbounds i8, i8* %78, i64 16
  %141 = bitcast i8* %140 to %"class.blink::BaseRenderingContext2D"*
  %142 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #10
  %143 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143)
  %144 = icmp eq i8* %136, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  %146 = call i64 @strlen(i8* nonnull %136) #11
  br label %147

147:                                              ; preds = %139, %145
  %148 = phi i64 [ %146, %145 ], [ 0, %139 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %136, i64 %148) #10
  %149 = bitcast %"class.WTF::String"* %2 to i64*
  %150 = load i64, i64* %149, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143)
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %152 = bitcast %"class.WTF::String"* %5 to i64*
  store i64 %150, i64* %152, align 8
  call void @_ZN5blink22BaseRenderingContext2D4fillERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %141, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #10
  br label %168

168:                                              ; preds = %147, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #10
  br label %169

169:                                              ; preds = %135, %168
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %170 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %171 = load i64*, i64** %170, align 8
  %172 = icmp eq i64* %171, null
  br i1 %172, label %182, label %173

173:                                              ; preds = %169
  %174 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %113, align 8
  %175 = bitcast %"class.v8::Isolate"* %174 to %"class.v8::internal::Isolate"*
  %176 = load i64, i64* %171, align 8
  %177 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %175, i64 %176) #10
  %178 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %174) #10
  br i1 %178, label %182, label %179

179:                                              ; preds = %173
  %180 = bitcast i64* %177 to %"class.v8::Value"*
  %181 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %174, %"class.v8::Value"* %180) #10
  br label %182

182:                                              ; preds = %179, %173, %169
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %184 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  br i1 %189, label %192, label %194

192:                                              ; preds = %185
  %193 = add i32 %191, -1
  store i32 %193, i32* %190, align 4
  br label %194

194:                                              ; preds = %192, %185
  %195 = phi i32 [ %193, %192 ], [ %191, %185 ]
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %194
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %183) #10
  br label %198

198:                                              ; preds = %182, %194, %197
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %106) #10
  br label %199

199:                                              ; preds = %198, %100
  ret void
}

declare void @_ZN5blink22BaseRenderingContext2D4fillEPNS_6Path2DERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"*, %"class.blink::Path2D"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D4fillERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D8fillRectEdddd(%"class.blink::BaseRenderingContext2D"*, double, double, double, double) local_unnamed_addr #2

declare dereferenceable(16) %"class.WTF::Vector.288"* @_ZNK5blink22BaseRenderingContext2D11getLineDashEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE1EEEN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEEEEN2v810MaybeLocalINS9_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"*, %"class.WTF::Vector.288"* dereferenceable(16)) local_unnamed_addr #8 comdat {
  %3 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.v8::Context"*, %"class.v8::Context"** %5, align 8
  %7 = icmp eq %"class.v8::Context"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::Isolate"* %4 to %"class.v8::internal::Isolate"*
  %10 = bitcast %"class.v8::Context"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %9, i64 %11) #10
  %13 = bitcast i64* %12 to %"class.v8::Context"*
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi %"class.v8::Context"* [ %13, %8 ], [ null, %2 ]
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %15) #10
  %16 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, -1
  br i1 %18, label %20, label %19, !prof !5

19:                                               ; preds = %14
  tail call void @llvm.trap() #10
  unreachable

20:                                               ; preds = %14
  %21 = tail call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %4, i32 %17) #10
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %15) #10
  %22 = load %"class.v8::Context"*, %"class.v8::Context"** %5, align 8
  %23 = icmp eq %"class.v8::Context"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %27 = bitcast %"class.v8::Context"* %22 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %26, i64 %28) #10
  %30 = bitcast i64* %29 to %"class.v8::Context"*
  br label %31

31:                                               ; preds = %20, %24
  %32 = phi %"class.v8::Context"* [ %30, %24 ], [ null, %20 ]
  %33 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %1, i64 0, i32 0, i32 0, i32 0
  %34 = load double*, double** %33, align 8
  %35 = load i32, i32* %16, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds double, double* %34, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %59, label %39

39:                                               ; preds = %31
  %40 = bitcast %"class.v8::Array"* %21 to %"class.v8::Object"*
  br label %41

41:                                               ; preds = %39, %55
  %42 = phi i32 [ 0, %39 ], [ %56, %55 ]
  %43 = phi double* [ %34, %39 ], [ %57, %55 ]
  %44 = load double, double* %43, align 8
  %45 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %46 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %45, double %44) #10
  %47 = icmp eq %"class.v8::Number"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.v8::Number"* %46 to %"class.v8::Value"*
  %50 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %40, %"class.v8::Context"* %32, i32 %42, %"class.v8::Value"* nonnull %49) #10
  %51 = trunc i16 %50 to i8
  %52 = icmp eq i8 %51, 0
  %53 = icmp ult i16 %50, 256
  %54 = or i1 %53, %52
  br i1 %54, label %61, label %55, !prof !9

55:                                               ; preds = %48
  %56 = add i32 %42, 1
  %57 = getelementptr inbounds double, double* %43, i64 1
  %58 = icmp eq double* %57, %37
  br i1 %58, label %59, label %41

59:                                               ; preds = %55, %31
  %60 = bitcast %"class.v8::Array"* %21 to %"class.v8::Value"*
  br label %61

61:                                               ; preds = %41, %48, %59
  %62 = phi %"class.v8::Value"* [ %60, %59 ], [ null, %48 ], [ null, %41 ]
  ret %"class.v8::Value"* %62
}

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

declare %"class.blink::DOMMatrix"* @_ZN5blink23PaintRenderingContext2D12getTransformEv(%"class.blink::PaintRenderingContext2D"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31IsPointInPathOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = bitcast i64* %10 to %"class.v8::Isolate"**
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %12) #10
  %14 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %13) #10
  %15 = icmp eq %"class.blink::ExecutionContext"* %14, null
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %14, i64 0, i32 3
  %17 = icmp eq %"class.blink::UseCounter"* %16, null
  %18 = or i1 %15, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::UseCounter"* %16 to void (%"class.blink::UseCounter"*, i32)***
  %21 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %21, i64 3
  %23 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %22, align 8
  tail call void %23(%"class.blink::UseCounter"* nonnull %16, i32 2683) #10
  br label %24

24:                                               ; preds = %1, %19
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %26, 3
  br i1 %27, label %28, label %88, !prof !4

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 56, i1 false)
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %32, align 2
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %34 = bitcast i8** %33 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)>, <2 x i8*>* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %39 = bitcast %"class.WTF::StringImpl"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #10
  %40 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %41 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %26) #10
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %28
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #10
  br label %58

58:                                               ; preds = %28, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = icmp eq i64* %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  %64 = bitcast %"class.v8::Isolate"* %63 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %60, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #10
  %67 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %63) #10
  br i1 %67, label %71, label %68

68:                                               ; preds = %62
  %69 = bitcast i64* %66 to %"class.v8::Value"*
  %70 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %63, %"class.v8::Value"* %69) #10
  br label %71

71:                                               ; preds = %68, %62, %58
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #10
  br label %87

87:                                               ; preds = %71, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %29) #10
  br label %388

88:                                               ; preds = %24
  %89 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %90 = sext i32 %26 to i64
  br label %91

91:                                               ; preds = %124, %88
  %92 = phi i64 [ %93, %124 ], [ %90, %88 ]
  %93 = add nsw i64 %92, -1
  %94 = icmp sgt i64 %92, 0
  br i1 %94, label %95, label %136

95:                                               ; preds = %91
  %96 = icmp sgt i64 %92, %90
  br i1 %96, label %97, label %103

97:                                               ; preds = %95
  %98 = load i64*, i64** %8, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 1
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 160
  %102 = inttoptr i64 %101 to %"class.v8::Value"*
  br label %107

103:                                              ; preds = %95
  %104 = load i64*, i64** %89, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 %93
  %106 = bitcast i64* %105 to %"class.v8::Value"*
  br label %107

107:                                              ; preds = %103, %97
  %108 = phi %"class.v8::Value"* [ %102, %97 ], [ %106, %103 ]
  %109 = bitcast %"class.v8::Value"* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = and i64 %110, 3
  %112 = icmp eq i64 %111, 1
  br i1 %112, label %113, label %132

113:                                              ; preds = %107
  %114 = add i64 %110, -1
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = and i64 %110, -4294967296
  %118 = zext i32 %116 to i64
  %119 = or i64 %117, %118
  %120 = add i64 %119, 7
  %121 = inttoptr i64 %120 to i16*
  %122 = load i16, i16* %121, align 2
  %123 = icmp eq i16 %122, 67
  br i1 %123, label %124, label %130

124:                                              ; preds = %113
  %125 = add i64 %110, 23
  %126 = inttoptr i64 %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, -2
  %129 = icmp eq i32 %128, 10
  br i1 %129, label %91, label %134

130:                                              ; preds = %113
  %131 = trunc i64 %92 to i32
  br label %136

132:                                              ; preds = %107
  %133 = trunc i64 %92 to i32
  br label %136

134:                                              ; preds = %124
  %135 = trunc i64 %92 to i32
  br label %136

136:                                              ; preds = %91, %130, %132, %134
  %137 = phi i32 [ %131, %130 ], [ %133, %132 ], [ %135, %134 ], [ 0, %91 ]
  %138 = load i64*, i64** %89, align 8
  %139 = getelementptr inbounds i64, i64* %138, i64 -1
  %140 = load i64, i64* %139, align 8
  %141 = add i64 %140, -1
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = and i64 %140, -4294967296
  %145 = zext i32 %143 to i64
  %146 = or i64 %144, %145
  %147 = add i64 %146, 7
  %148 = inttoptr i64 %147 to i16*
  %149 = load i16, i16* %148, align 2
  switch i16 %149, label %154 [
    i16 1057, label %150
    i16 1056, label %150
    i16 1040, label %150
  ]

150:                                              ; preds = %136, %136, %136
  %151 = add i64 %140, 19
  %152 = inttoptr i64 %151 to i8**
  %153 = load i8*, i8** %152, align 1
  br label %158

154:                                              ; preds = %136
  %155 = bitcast i64* %139 to %"class.v8::Object"*
  %156 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %155, i32 1) #10
  %157 = load i32, i32* %25, align 8
  br label %158

158:                                              ; preds = %150, %154
  %159 = phi i32 [ %26, %150 ], [ %157, %154 ]
  %160 = phi i8* [ %153, %150 ], [ %156, %154 ]
  %161 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %161) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %161, i8 -86, i64 56, i1 false)
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %163, align 8
  %164 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %164, align 2
  %165 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %166 = bitcast i8** %165 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)>, <2 x i8*>* %166, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %167, align 8
  %168 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %168, align 8
  %169 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %169, align 8
  %170 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %171 = bitcast %"class.WTF::StringImpl"** %170 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 16, i1 false) #10
  %172 = icmp sgt i32 %159, 0
  br i1 %172, label %179, label %173

173:                                              ; preds = %158
  %174 = load i64*, i64** %8, align 8
  %175 = getelementptr inbounds i64, i64* %174, i64 1
  %176 = load i64, i64* %175, align 8
  %177 = add i64 %176, 160
  %178 = inttoptr i64 %177 to %"class.v8::Value"*
  br label %182

179:                                              ; preds = %158
  %180 = bitcast i64** %89 to %"class.v8::Value"**
  %181 = load %"class.v8::Value"*, %"class.v8::Value"** %180, align 8
  br label %182

182:                                              ; preds = %173, %179
  %183 = phi %"class.v8::Value"* [ %178, %173 ], [ %181, %179 ]
  %184 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink6Path2D18wrapper_type_info_E, align 8
  %185 = ptrtoint %"class.v8::Isolate"* %12 to i64
  %186 = add i64 %185, 8
  %187 = inttoptr i64 %186 to %"class.blink::V8PerIsolateData"**
  %188 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %187, align 8
  %189 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %188, %"struct.blink::WrapperTypeInfo"* %184, %"class.v8::Value"* %183) #10
  br i1 %189, label %190, label %212

190:                                              ; preds = %182
  %191 = bitcast %"class.v8::Value"* %183 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = add i64 %192, -1
  %194 = inttoptr i64 %193 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = and i64 %192, -4294967296
  %197 = zext i32 %195 to i64
  %198 = or i64 %196, %197
  %199 = add i64 %198, 7
  %200 = inttoptr i64 %199 to i16*
  %201 = load i16, i16* %200, align 2
  switch i16 %201, label %206 [
    i16 1057, label %202
    i16 1056, label %202
    i16 1040, label %202
  ]

202:                                              ; preds = %190, %190, %190
  %203 = add i64 %192, 19
  %204 = inttoptr i64 %203 to i8**
  %205 = load i8*, i8** %204, align 1
  br label %209

206:                                              ; preds = %190
  %207 = bitcast %"class.v8::Value"* %183 to %"class.v8::Object"*
  %208 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %207, i32 1) #10
  br label %209

209:                                              ; preds = %202, %206
  %210 = phi i8* [ %205, %202 ], [ %208, %206 ]
  %211 = bitcast i8* %210 to %"class.blink::Path2D"*
  br label %215

212:                                              ; preds = %182
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %184, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #10
  %213 = load i32, i32* %169, align 8
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %347

215:                                              ; preds = %209, %212
  %216 = phi %"class.blink::Path2D"* [ %211, %209 ], [ null, %212 ]
  %217 = load i32, i32* %25, align 8
  %218 = icmp sgt i32 %217, 1
  br i1 %218, label %225, label %219

219:                                              ; preds = %215
  %220 = load i64*, i64** %8, align 8
  %221 = getelementptr inbounds i64, i64* %220, i64 1
  %222 = load i64, i64* %221, align 8
  %223 = add i64 %222, 160
  %224 = inttoptr i64 %223 to %"class.v8::Value"*
  br label %229

225:                                              ; preds = %215
  %226 = load i64*, i64** %89, align 8
  %227 = getelementptr inbounds i64, i64* %226, i64 1
  %228 = bitcast i64* %227 to %"class.v8::Value"*
  br label %229

229:                                              ; preds = %219, %225
  %230 = phi %"class.v8::Value"* [ %224, %219 ], [ %228, %225 ]
  %231 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %230) #10
  br i1 %231, label %232, label %235, !prof !5

232:                                              ; preds = %229
  %233 = bitcast %"class.v8::Value"* %230 to %"class.v8::Number"*
  %234 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %233) #10
  br label %237

235:                                              ; preds = %229
  %236 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %230, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #10
  br label %237

237:                                              ; preds = %232, %235
  %238 = phi double [ %234, %232 ], [ %236, %235 ]
  %239 = load i32, i32* %169, align 8
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %347

241:                                              ; preds = %237
  %242 = load i32, i32* %25, align 8
  %243 = icmp sgt i32 %242, 2
  br i1 %243, label %250, label %244

244:                                              ; preds = %241
  %245 = load i64*, i64** %8, align 8
  %246 = getelementptr inbounds i64, i64* %245, i64 1
  %247 = load i64, i64* %246, align 8
  %248 = add i64 %247, 160
  %249 = inttoptr i64 %248 to %"class.v8::Value"*
  br label %254

250:                                              ; preds = %241
  %251 = load i64*, i64** %89, align 8
  %252 = getelementptr inbounds i64, i64* %251, i64 2
  %253 = bitcast i64* %252 to %"class.v8::Value"*
  br label %254

254:                                              ; preds = %244, %250
  %255 = phi %"class.v8::Value"* [ %249, %244 ], [ %253, %250 ]
  %256 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %255) #10
  br i1 %256, label %257, label %260, !prof !5

257:                                              ; preds = %254
  %258 = bitcast %"class.v8::Value"* %255 to %"class.v8::Number"*
  %259 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %258) #10
  br label %262

260:                                              ; preds = %254
  %261 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %255, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #10
  br label %262

262:                                              ; preds = %257, %260
  %263 = phi double [ %259, %257 ], [ %261, %260 ]
  %264 = load i32, i32* %169, align 8
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %347

266:                                              ; preds = %262
  %267 = icmp slt i32 %137, 4
  br i1 %267, label %268, label %290

268:                                              ; preds = %266
  %269 = getelementptr inbounds i8, i8* %160, i64 16
  %270 = bitcast i8* %269 to %"class.blink::BaseRenderingContext2D"*
  %271 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %271) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i64 0, i64 0), i64 7) #10
  %272 = call zeroext i1 @_ZN5blink22BaseRenderingContext2D13isPointInPathEPNS_6Path2DEddRKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %270, %"class.blink::Path2D"* %216, double %238, double %263, %"class.WTF::String"* nonnull dereferenceable(8) %6) #10
  %273 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %289, label %276

276:                                              ; preds = %268
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %285

283:                                              ; preds = %276
  %284 = add i32 %282, -1
  store i32 %284, i32* %281, align 4
  br label %285

285:                                              ; preds = %283, %276
  %286 = phi i32 [ %284, %283 ], [ %282, %276 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #10
  br label %289

289:                                              ; preds = %268, %285, %288
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %271) #10
  br label %347

290:                                              ; preds = %266
  %291 = load i32, i32* %25, align 8
  %292 = icmp sgt i32 %291, 3
  br i1 %292, label %299, label %293

293:                                              ; preds = %290
  %294 = load i64*, i64** %8, align 8
  %295 = getelementptr inbounds i64, i64* %294, i64 1
  %296 = load i64, i64* %295, align 8
  %297 = add i64 %296, 160
  %298 = inttoptr i64 %297 to %"class.v8::Value"*
  br label %303

299:                                              ; preds = %290
  %300 = load i64*, i64** %89, align 8
  %301 = getelementptr inbounds i64, i64* %300, i64 3
  %302 = bitcast i64* %301 to %"class.v8::Value"*
  br label %303

303:                                              ; preds = %293, %299
  %304 = phi %"class.v8::Value"* [ %298, %293 ], [ %302, %299 ]
  %305 = call { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %304, i64 2, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZN5blink16V8CanvasFillRule13string_table_E, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i64 0, i64 0), %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #10
  %306 = extractvalue { i8, i64 } %305, 0
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %312, label %308

308:                                              ; preds = %303
  %309 = extractvalue { i8, i64 } %305, 1
  %310 = getelementptr inbounds [2 x i8*], [2 x i8*]* @_ZN5blink16V8CanvasFillRule13string_table_E.const, i64 0, i64 %309
  %311 = load i8*, i8** %310, align 8
  br label %312

312:                                              ; preds = %303, %308
  %313 = phi i8* [ %311, %308 ], [ null, %303 ]
  %314 = load i32, i32* %169, align 8
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %347

316:                                              ; preds = %312
  %317 = getelementptr inbounds i8, i8* %160, i64 16
  %318 = bitcast i8* %317 to %"class.blink::BaseRenderingContext2D"*
  %319 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %319) #10
  %320 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %320)
  %321 = icmp eq i8* %313, null
  br i1 %321, label %324, label %322

322:                                              ; preds = %316
  %323 = call i64 @strlen(i8* nonnull %313) #11
  br label %324

324:                                              ; preds = %316, %322
  %325 = phi i64 [ %323, %322 ], [ 0, %316 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %313, i64 %325) #10
  %326 = bitcast %"class.WTF::String"* %2 to i64*
  %327 = load i64, i64* %326, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %320)
  %328 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %329 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %327, i64* %329, align 8
  %330 = call zeroext i1 @_ZN5blink22BaseRenderingContext2D13isPointInPathEPNS_6Path2DEddRKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %318, %"class.blink::Path2D"* %216, double %238, double %263, %"class.WTF::String"* nonnull dereferenceable(8) %7) #10
  %331 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %328, align 8
  %332 = icmp eq %"class.WTF::StringImpl"* %331, null
  br i1 %332, label %346, label %333

333:                                              ; preds = %324
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  br i1 %337, label %340, label %342

340:                                              ; preds = %333
  %341 = add i32 %339, -1
  store i32 %341, i32* %338, align 4
  br label %342

342:                                              ; preds = %340, %333
  %343 = phi i32 [ %341, %340 ], [ %339, %333 ]
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %342
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %331) #10
  br label %346

346:                                              ; preds = %324, %342, %345
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319) #10
  br label %347

347:                                              ; preds = %312, %262, %237, %212, %346, %289
  %348 = phi i1 [ false, %212 ], [ false, %237 ], [ %272, %289 ], [ false, %262 ], [ %330, %346 ], [ false, %312 ]
  %349 = phi i32 [ 1, %212 ], [ 1, %237 ], [ 2, %289 ], [ 1, %262 ], [ 0, %346 ], [ 1, %312 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %350 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %351 = load i64*, i64** %350, align 8
  %352 = icmp eq i64* %351, null
  br i1 %352, label %362, label %353

353:                                              ; preds = %347
  %354 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %168, align 8
  %355 = bitcast %"class.v8::Isolate"* %354 to %"class.v8::internal::Isolate"*
  %356 = load i64, i64* %351, align 8
  %357 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %355, i64 %356) #10
  %358 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %354) #10
  br i1 %358, label %362, label %359

359:                                              ; preds = %353
  %360 = bitcast i64* %357 to %"class.v8::Value"*
  %361 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %354, %"class.v8::Value"* %360) #10
  br label %362

362:                                              ; preds = %359, %353, %347
  %363 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %364 = icmp eq %"class.WTF::StringImpl"* %363, null
  br i1 %364, label %378, label %365

365:                                              ; preds = %362
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %367 = load atomic i32, i32* %366 monotonic, align 4
  %368 = and i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 0
  %371 = load i32, i32* %370, align 4
  br i1 %369, label %372, label %374

372:                                              ; preds = %365
  %373 = add i32 %371, -1
  store i32 %373, i32* %370, align 4
  br label %374

374:                                              ; preds = %372, %365
  %375 = phi i32 [ %373, %372 ], [ %371, %365 ]
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %378

377:                                              ; preds = %374
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %363) #10
  br label %378

378:                                              ; preds = %362, %374, %377
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %161) #10
  switch i32 %349, label %388 [
    i32 0, label %379
    i32 2, label %379
  ]

379:                                              ; preds = %378, %378
  %380 = load i64*, i64** %8, align 8
  %381 = getelementptr inbounds i64, i64* %380, i64 3
  %382 = getelementptr inbounds i64, i64* %380, i64 1
  %383 = load i64, i64* %382, align 8
  %384 = select i1 %348, i64 184, i64 192
  %385 = add i64 %383, %384
  %386 = inttoptr i64 %385 to i64*
  %387 = load i64, i64* %386, align 8
  store i64 %387, i64* %381, align 8
  call void @_ZN5blink13Dactyloscoper6RecordEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %14, i32 2683) #10
  br label %388

388:                                              ; preds = %378, %379, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_129v8_paint_rendering_context_2d31IsPointInPathOperationOverload1ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = bitcast i64* %10 to %"class.v8::Isolate"**
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %12) #10
  %14 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %13) #10
  %15 = icmp eq %"class.blink::ExecutionContext"* %14, null
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %14, i64 0, i32 3
  %17 = icmp eq %"class.blink::UseCounter"* %16, null
  %18 = or i1 %15, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::UseCounter"* %16 to void (%"class.blink::UseCounter"*, i32)***
  %21 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %21, i64 3
  %23 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %22, align 8
  tail call void %23(%"class.blink::UseCounter"* nonnull %16, i32 2683) #10
  br label %24

24:                                               ; preds = %1, %19
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %26, 2
  br i1 %27, label %28, label %88, !prof !4

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 56, i1 false)
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %32, align 2
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %34 = bitcast i8** %33 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)>, <2 x i8*>* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %39 = bitcast %"class.WTF::StringImpl"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #10
  %40 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %41 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %26) #10
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %28
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #10
  br label %58

58:                                               ; preds = %28, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = icmp eq i64* %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  %64 = bitcast %"class.v8::Isolate"* %63 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %60, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #10
  %67 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %63) #10
  br i1 %67, label %71, label %68

68:                                               ; preds = %62
  %69 = bitcast i64* %66 to %"class.v8::Value"*
  %70 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %63, %"class.v8::Value"* %69) #10
  br label %71

71:                                               ; preds = %68, %62, %58
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #10
  br label %87

87:                                               ; preds = %71, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %29) #10
  br label %340

88:                                               ; preds = %24
  %89 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %90 = sext i32 %26 to i64
  br label %91

91:                                               ; preds = %124, %88
  %92 = phi i64 [ %93, %124 ], [ %90, %88 ]
  %93 = add nsw i64 %92, -1
  %94 = icmp sgt i64 %92, 0
  br i1 %94, label %95, label %136

95:                                               ; preds = %91
  %96 = icmp sgt i64 %92, %90
  br i1 %96, label %97, label %103

97:                                               ; preds = %95
  %98 = load i64*, i64** %8, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 1
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 160
  %102 = inttoptr i64 %101 to %"class.v8::Value"*
  br label %107

103:                                              ; preds = %95
  %104 = load i64*, i64** %89, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 %93
  %106 = bitcast i64* %105 to %"class.v8::Value"*
  br label %107

107:                                              ; preds = %103, %97
  %108 = phi %"class.v8::Value"* [ %102, %97 ], [ %106, %103 ]
  %109 = bitcast %"class.v8::Value"* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = and i64 %110, 3
  %112 = icmp eq i64 %111, 1
  br i1 %112, label %113, label %132

113:                                              ; preds = %107
  %114 = add i64 %110, -1
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = and i64 %110, -4294967296
  %118 = zext i32 %116 to i64
  %119 = or i64 %117, %118
  %120 = add i64 %119, 7
  %121 = inttoptr i64 %120 to i16*
  %122 = load i16, i16* %121, align 2
  %123 = icmp eq i16 %122, 67
  br i1 %123, label %124, label %130

124:                                              ; preds = %113
  %125 = add i64 %110, 23
  %126 = inttoptr i64 %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, -2
  %129 = icmp eq i32 %128, 10
  br i1 %129, label %91, label %134

130:                                              ; preds = %113
  %131 = trunc i64 %92 to i32
  br label %136

132:                                              ; preds = %107
  %133 = trunc i64 %92 to i32
  br label %136

134:                                              ; preds = %124
  %135 = trunc i64 %92 to i32
  br label %136

136:                                              ; preds = %91, %130, %132, %134
  %137 = phi i32 [ %131, %130 ], [ %133, %132 ], [ %135, %134 ], [ 0, %91 ]
  %138 = load i64*, i64** %89, align 8
  %139 = getelementptr inbounds i64, i64* %138, i64 -1
  %140 = load i64, i64* %139, align 8
  %141 = add i64 %140, -1
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = and i64 %140, -4294967296
  %145 = zext i32 %143 to i64
  %146 = or i64 %144, %145
  %147 = add i64 %146, 7
  %148 = inttoptr i64 %147 to i16*
  %149 = load i16, i16* %148, align 2
  switch i16 %149, label %154 [
    i16 1057, label %150
    i16 1056, label %150
    i16 1040, label %150
  ]

150:                                              ; preds = %136, %136, %136
  %151 = add i64 %140, 19
  %152 = inttoptr i64 %151 to i8**
  %153 = load i8*, i8** %152, align 1
  br label %158

154:                                              ; preds = %136
  %155 = bitcast i64* %139 to %"class.v8::Object"*
  %156 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %155, i32 1) #10
  %157 = load i32, i32* %25, align 8
  br label %158

158:                                              ; preds = %150, %154
  %159 = phi i32 [ %26, %150 ], [ %157, %154 ]
  %160 = phi i8* [ %153, %150 ], [ %156, %154 ]
  %161 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %161) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %161, i8 -86, i64 56, i1 false)
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 6, i16* %163, align 8
  %164 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %164, align 2
  %165 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  %166 = bitcast i8** %165 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)>, <2 x i8*>* %166, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %167, align 8
  %168 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %168, align 8
  %169 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %169, align 8
  %170 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %171 = bitcast %"class.WTF::StringImpl"** %170 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 16, i1 false) #10
  %172 = icmp sgt i32 %159, 0
  br i1 %172, label %179, label %173

173:                                              ; preds = %158
  %174 = load i64*, i64** %8, align 8
  %175 = getelementptr inbounds i64, i64* %174, i64 1
  %176 = load i64, i64* %175, align 8
  %177 = add i64 %176, 160
  %178 = inttoptr i64 %177 to %"class.v8::Value"*
  br label %182

179:                                              ; preds = %158
  %180 = bitcast i64** %89 to %"class.v8::Value"**
  %181 = load %"class.v8::Value"*, %"class.v8::Value"** %180, align 8
  br label %182

182:                                              ; preds = %173, %179
  %183 = phi %"class.v8::Value"* [ %178, %173 ], [ %181, %179 ]
  %184 = tail call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %183) #10
  br i1 %184, label %185, label %188, !prof !5

185:                                              ; preds = %182
  %186 = bitcast %"class.v8::Value"* %183 to %"class.v8::Number"*
  %187 = tail call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %186) #10
  br label %192

188:                                              ; preds = %182
  %189 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %183, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #10
  %190 = load i32, i32* %169, align 8
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %299

192:                                              ; preds = %185, %188
  %193 = phi double [ %187, %185 ], [ %189, %188 ]
  %194 = load i32, i32* %25, align 8
  %195 = icmp sgt i32 %194, 1
  br i1 %195, label %202, label %196

196:                                              ; preds = %192
  %197 = load i64*, i64** %8, align 8
  %198 = getelementptr inbounds i64, i64* %197, i64 1
  %199 = load i64, i64* %198, align 8
  %200 = add i64 %199, 160
  %201 = inttoptr i64 %200 to %"class.v8::Value"*
  br label %206

202:                                              ; preds = %192
  %203 = load i64*, i64** %89, align 8
  %204 = getelementptr inbounds i64, i64* %203, i64 1
  %205 = bitcast i64* %204 to %"class.v8::Value"*
  br label %206

206:                                              ; preds = %196, %202
  %207 = phi %"class.v8::Value"* [ %201, %196 ], [ %205, %202 ]
  %208 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %207) #10
  br i1 %208, label %209, label %212, !prof !5

209:                                              ; preds = %206
  %210 = bitcast %"class.v8::Value"* %207 to %"class.v8::Number"*
  %211 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %210) #10
  br label %214

212:                                              ; preds = %206
  %213 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %207, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #10
  br label %214

214:                                              ; preds = %209, %212
  %215 = phi double [ %211, %209 ], [ %213, %212 ]
  %216 = load i32, i32* %169, align 8
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %299

218:                                              ; preds = %214
  %219 = icmp slt i32 %137, 3
  br i1 %219, label %220, label %242

220:                                              ; preds = %218
  %221 = getelementptr inbounds i8, i8* %160, i64 16
  %222 = bitcast i8* %221 to %"class.blink::BaseRenderingContext2D"*
  %223 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %223) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i64 0, i64 0), i64 7) #10
  %224 = call zeroext i1 @_ZN5blink22BaseRenderingContext2D13isPointInPathEddRKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %222, double %193, double %215, %"class.WTF::String"* nonnull dereferenceable(8) %6) #10
  %225 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %220
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %237

235:                                              ; preds = %228
  %236 = add i32 %234, -1
  store i32 %236, i32* %233, align 4
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i32 [ %236, %235 ], [ %234, %228 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %226) #10
  br label %241

241:                                              ; preds = %220, %237, %240
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #10
  br label %299

242:                                              ; preds = %218
  %243 = load i32, i32* %25, align 8
  %244 = icmp sgt i32 %243, 2
  br i1 %244, label %251, label %245

245:                                              ; preds = %242
  %246 = load i64*, i64** %8, align 8
  %247 = getelementptr inbounds i64, i64* %246, i64 1
  %248 = load i64, i64* %247, align 8
  %249 = add i64 %248, 160
  %250 = inttoptr i64 %249 to %"class.v8::Value"*
  br label %255

251:                                              ; preds = %242
  %252 = load i64*, i64** %89, align 8
  %253 = getelementptr inbounds i64, i64* %252, i64 2
  %254 = bitcast i64* %253 to %"class.v8::Value"*
  br label %255

255:                                              ; preds = %245, %251
  %256 = phi %"class.v8::Value"* [ %250, %245 ], [ %254, %251 ]
  %257 = call { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableEPN2v87IsolateENS1_5LocalINS1_5ValueEEEN4base4spanIKPKcLm18446744073709551615EEESA_RNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %256, i64 2, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZN5blink16V8CanvasFillRule13string_table_E, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i64 0, i64 0), %"class.blink::ExceptionState"* nonnull dereferenceable(72) %5) #10
  %258 = extractvalue { i8, i64 } %257, 0
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %264, label %260

260:                                              ; preds = %255
  %261 = extractvalue { i8, i64 } %257, 1
  %262 = getelementptr inbounds [2 x i8*], [2 x i8*]* @_ZN5blink16V8CanvasFillRule13string_table_E.const, i64 0, i64 %261
  %263 = load i8*, i8** %262, align 8
  br label %264

264:                                              ; preds = %255, %260
  %265 = phi i8* [ %263, %260 ], [ null, %255 ]
  %266 = load i32, i32* %169, align 8
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %299

268:                                              ; preds = %264
  %269 = getelementptr inbounds i8, i8* %160, i64 16
  %270 = bitcast i8* %269 to %"class.blink::BaseRenderingContext2D"*
  %271 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %271) #10
  %272 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %272)
  %273 = icmp eq i8* %265, null
  br i1 %273, label %276, label %274

274:                                              ; preds = %268
  %275 = call i64 @strlen(i8* nonnull %265) #11
  br label %276

276:                                              ; preds = %268, %274
  %277 = phi i64 [ %275, %274 ], [ 0, %268 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %265, i64 %277) #10
  %278 = bitcast %"class.WTF::String"* %2 to i64*
  %279 = load i64, i64* %278, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %272)
  %280 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %281 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %279, i64* %281, align 8
  %282 = call zeroext i1 @_ZN5blink22BaseRenderingContext2D13isPointInPathEddRKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"* %270, double %193, double %215, %"class.WTF::String"* nonnull dereferenceable(8) %7) #10
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %283, null
  br i1 %284, label %298, label %285

285:                                              ; preds = %276
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  br i1 %289, label %292, label %294

292:                                              ; preds = %285
  %293 = add i32 %291, -1
  store i32 %293, i32* %290, align 4
  br label %294

294:                                              ; preds = %292, %285
  %295 = phi i32 [ %293, %292 ], [ %291, %285 ]
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %283) #10
  br label %298

298:                                              ; preds = %276, %294, %297
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %271) #10
  br label %299

299:                                              ; preds = %264, %214, %188, %298, %241
  %300 = phi i1 [ false, %188 ], [ %224, %241 ], [ false, %214 ], [ %282, %298 ], [ false, %264 ]
  %301 = phi i32 [ 1, %188 ], [ 2, %241 ], [ 1, %214 ], [ 0, %298 ], [ 1, %264 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %302 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %303 = load i64*, i64** %302, align 8
  %304 = icmp eq i64* %303, null
  br i1 %304, label %314, label %305

305:                                              ; preds = %299
  %306 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %168, align 8
  %307 = bitcast %"class.v8::Isolate"* %306 to %"class.v8::internal::Isolate"*
  %308 = load i64, i64* %303, align 8
  %309 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %307, i64 %308) #10
  %310 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %306) #10
  br i1 %310, label %314, label %311

311:                                              ; preds = %305
  %312 = bitcast i64* %309 to %"class.v8::Value"*
  %313 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %306, %"class.v8::Value"* %312) #10
  br label %314

314:                                              ; preds = %311, %305, %299
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %316 = icmp eq %"class.WTF::StringImpl"* %315, null
  br i1 %316, label %330, label %317

317:                                              ; preds = %314
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load atomic i32, i32* %318 monotonic, align 4
  %320 = and i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 0
  %323 = load i32, i32* %322, align 4
  br i1 %321, label %324, label %326

324:                                              ; preds = %317
  %325 = add i32 %323, -1
  store i32 %325, i32* %322, align 4
  br label %326

326:                                              ; preds = %324, %317
  %327 = phi i32 [ %325, %324 ], [ %323, %317 ]
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %326
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %315) #10
  br label %330

330:                                              ; preds = %314, %326, %329
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %161) #10
  switch i32 %301, label %340 [
    i32 0, label %331
    i32 2, label %331
  ]

331:                                              ; preds = %330, %330
  %332 = load i64*, i64** %8, align 8
  %333 = getelementptr inbounds i64, i64* %332, i64 3
  %334 = getelementptr inbounds i64, i64* %332, i64 1
  %335 = load i64, i64* %334, align 8
  %336 = select i1 %300, i64 184, i64 192
  %337 = add i64 %335, %336
  %338 = inttoptr i64 %337 to i64*
  %339 = load i64, i64* %338, align 8
  store i64 %339, i64* %333, align 8
  call void @_ZN5blink13Dactyloscoper6RecordEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %14, i32 2683) #10
  br label %340

340:                                              ; preds = %330, %331, %87
  ret void
}

declare zeroext i1 @_ZN5blink22BaseRenderingContext2D13isPointInPathEPNS_6Path2DEddRKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"*, %"class.blink::Path2D"*, double, double, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink13Dactyloscoper6RecordEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink22BaseRenderingContext2D13isPointInPathEddRKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"*, double, double, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink22BaseRenderingContext2D15isPointInStrokeEPNS_6Path2DEdd(%"class.blink::BaseRenderingContext2D"*, %"class.blink::Path2D"*, double, double) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink22BaseRenderingContext2D15isPointInStrokeEdd(%"class.blink::BaseRenderingContext2D"*, double, double) local_unnamed_addr #2

declare void @_ZN5blink23PaintRenderingContext2D14resetTransformEv(%"class.blink::PaintRenderingContext2D"*) unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D7restoreEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D6rotateEd(%"class.blink::BaseRenderingContext2D"*, double) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D4saveEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D5scaleEddd(%"class.blink::BaseRenderingContext2D"*, double, double, double) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D5scaleEdd(%"class.blink::BaseRenderingContext2D"*, double, double) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D11setLineDashERKN3WTF6VectorIdLj0ENS1_18PartitionAllocatorEEE(%"class.blink::BaseRenderingContext2D"*, %"class.WTF::Vector.288"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE1EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.288"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #10
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE1EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.288"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #10
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.61, i64 0, i64 0)) #10
  %12 = bitcast %"class.WTF::Vector.288"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #10
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.288"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #10
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.62, i64 0, i64 0)) #10
  %26 = bitcast %"class.WTF::Vector.288"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #10
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE1EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.288"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #10
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE1EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.288"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.288", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca double, align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #10
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 268173312
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.63, i64 0, i64 0)) #10
  %12 = bitcast %"class.WTF::Vector.288"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #10
  br label %102

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.288"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #10
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %9) #10
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #10
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.288"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #10
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #10
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector.288"* %5 to i64*
  br label %83

35:                                               ; preds = %26
  %36 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %37 = bitcast double* %7 to i8*
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %39

39:                                               ; preds = %35, %74
  %40 = phi i32 [ 0, %35 ], [ %75, %74 ]
  %41 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %36, %"class.v8::Context"* %29, i32 %40) #10
  %42 = icmp eq %"class.v8::Value"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #10
  %45 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %46, i64 5
  %48 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %47, align 8
  call void %48(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %44) #10
  %49 = bitcast %"class.WTF::Vector.288"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10
  br label %92

50:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  %51 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %41) #10
  br i1 %51, label %52, label %55, !prof !5

52:                                               ; preds = %50
  %53 = bitcast %"class.v8::Value"* %41 to %"class.v8::Number"*
  %54 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %53) #10
  br label %57

55:                                               ; preds = %50
  %56 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %41, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  br label %57

57:                                               ; preds = %52, %55
  %58 = phi double [ %54, %52 ], [ %56, %55 ]
  store double %58, double* %7, align 8
  %59 = load i32, i32* %38, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %72

61:                                               ; preds = %57
  %62 = load i32, i32* %17, align 4
  %63 = load i32, i32* %16, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %71, label %65, !prof !4

65:                                               ; preds = %61
  %66 = load double*, double** %15, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds double, double* %66, i64 %67
  store double %58, double* %68, align 8
  %69 = load i32, i32* %17, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %17, align 4
  br label %74

71:                                               ; preds = %61
  call void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.288"* nonnull %5, double* nonnull dereferenceable(8) %7) #10
  br label %74

72:                                               ; preds = %57
  %73 = bitcast %"class.WTF::Vector.288"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  br label %92

74:                                               ; preds = %65, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  %75 = add nuw i32 %40, 1
  %76 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #10
  %77 = icmp ult i32 %75, %76
  br i1 %77, label %39, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.WTF::Vector.288"* %5 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = load i32, i32* %16, align 8
  %82 = load i32, i32* %17, align 4
  br label %83

83:                                               ; preds = %33, %78
  %84 = phi i64* [ %34, %33 ], [ %79, %78 ]
  %85 = phi i32 [ 0, %33 ], [ %82, %78 ]
  %86 = phi i32 [ %27, %33 ], [ %81, %78 ]
  %87 = phi i64 [ %28, %33 ], [ %80, %78 ]
  %88 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %0, i64 0, i32 0, i32 0, i32 1
  %89 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %0, i64 0, i32 0, i32 0, i32 2
  %90 = bitcast %"class.WTF::Vector.288"* %0 to i64*
  store i64 0, i64* %90, align 8
  %91 = bitcast %"class.WTF::Vector.288"* %0 to i64*
  store atomic i64 0, i64* %84 monotonic, align 8
  store atomic i64 %87, i64* %91 monotonic, align 8
  store i32 %86, i32* %88, align 8
  store i32 0, i32* %16, align 8
  store i32 %85, i32* %89, align 4
  store i32 0, i32* %17, align 4
  br label %92

92:                                               ; preds = %43, %72, %83
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #10
  %93 = load double*, double** %15, align 8
  %94 = icmp eq double* %93, null
  %95 = bitcast double* %93 to i8*
  br i1 %94, label %101, label %96, !prof !5

96:                                               ; preds = %92
  %97 = load i32, i32* %17, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !4

99:                                               ; preds = %96
  store i32 0, i32* %17, align 4
  br label %100

100:                                              ; preds = %99, %96
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %95) #10
  store double* null, double** %15, align 8
  br label %101

101:                                              ; preds = %92, %100
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  br label %102

102:                                              ; preds = %101, %11
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIdLNS0_30IDLFloatingPointNumberConvModeE1EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.288"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.288", align 8
  %6 = alloca double, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #10
  %9 = bitcast %"class.WTF::Vector.288"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #10
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #10
  br i1 %13, label %14, label %48

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast double* %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %18

18:                                               ; preds = %14, %46
  %19 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %20 = icmp eq %"class.v8::Value"* %19, null
  br i1 %20, label %21, label %22, !prof !4

21:                                               ; preds = %18
  call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %22

22:                                               ; preds = %18, %21
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %23 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* %19) #10
  br i1 %23, label %24, label %27, !prof !5

24:                                               ; preds = %22
  %25 = bitcast %"class.v8::Value"* %19 to %"class.v8::Number"*
  %26 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* %25) #10
  br label %29

27:                                               ; preds = %22
  %28 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %19, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  br label %29

29:                                               ; preds = %24, %27
  %30 = phi double [ %26, %24 ], [ %28, %27 ]
  store double %30, double* %6, align 8
  %31 = load i32, i32* %17, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.WTF::Vector.288"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %63

35:                                               ; preds = %29
  %36 = load i32, i32* %12, align 4
  %37 = load i32, i32* %11, align 8
  %38 = icmp eq i32 %36, %37
  br i1 %38, label %45, label %39, !prof !4

39:                                               ; preds = %35
  %40 = load double*, double** %10, align 8
  %41 = zext i32 %36 to i64
  %42 = getelementptr inbounds double, double* %40, i64 %41
  store double %30, double* %42, align 8
  %43 = load i32, i32* %12, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %12, align 4
  br label %46

45:                                               ; preds = %35
  call void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.288"* nonnull %5, double* nonnull dereferenceable(8) %6) #10
  br label %46

46:                                               ; preds = %39, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  %47 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #10
  br i1 %47, label %18, label %48

48:                                               ; preds = %46, %4
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.WTF::Vector.288"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #10
  br label %63

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %0, i64 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %0, i64 0, i32 0, i32 0, i32 2
  %57 = bitcast %"class.WTF::Vector.288"* %5 to i64*
  %58 = bitcast %"class.WTF::Vector.288"* %0 to i64*
  store i64 0, i64* %58, align 8
  %59 = load i64, i64* %57, align 8
  %60 = bitcast %"class.WTF::Vector.288"* %0 to i64*
  store atomic i64 0, i64* %57 monotonic, align 8
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = load i32, i32* %11, align 8
  store i32 %61, i32* %55, align 8
  store i32 0, i32* %11, align 8
  %62 = load i32, i32* %12, align 4
  store i32 %62, i32* %56, align 4
  store i32 0, i32* %12, align 4
  br label %63

63:                                               ; preds = %33, %54, %52
  %64 = load double*, double** %10, align 8
  %65 = icmp eq double* %64, null
  %66 = bitcast double* %64 to i8*
  br i1 %65, label %72, label %67, !prof !5

67:                                               ; preds = %63
  %68 = load i32, i32* %12, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %71, label %70, !prof !4

70:                                               ; preds = %67
  store i32 0, i32* %12, align 4
  br label %71

71:                                               ; preds = %70, %67
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #10
  store double* null, double** %10, align 8
  br label %72

72:                                               ; preds = %63, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.64, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.65, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.288"*, double* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load double*, double** %6, align 8
  %8 = icmp ugt double* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds double, double* %7, i64 %10
  %12 = icmp ugt double* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq double* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.288"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to double*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load double*, double** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne double* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast double* %38 to i8*
  br i1 %41, label %43, label %49, !prof !5

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.288"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.288"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to double*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint double* %1 to i64
  %56 = ptrtoint double* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.288", %"class.WTF::Vector.288"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !5

69:                                               ; preds = %54
  %70 = icmp eq double* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.288"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load double*, double** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne double* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast double* %78 to i8*
  br i1 %81, label %83, label %89, !prof !5

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.288"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.288"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to double*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi double* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds double, double* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi double* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi double* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds double, double* %100, i64 %103
  %105 = bitcast double* %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast double* %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D12setTransformEdddddd(%"class.blink::BaseRenderingContext2D"*, double, double, double, double, double, double) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D12setTransformEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::BaseRenderingContext2D"*, %"class.blink::DOMMatrixInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink13DOMMatrixInitC1Ev(%"class.blink::DOMMatrixInit"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.211"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.211"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.68, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.69, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.211"*) local_unnamed_addr #2

declare %"class.blink::DOMMatrixInit"* @_ZN5blink17NativeValueTraitsINS_13DOMMatrixInitEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D6strokeEPNS_6Path2DE(%"class.blink::BaseRenderingContext2D"*, %"class.blink::Path2D"*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D6strokeEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D10strokeRectEdddd(%"class.blink::BaseRenderingContext2D"*, double, double, double, double) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D9transformEdddddddddddddddd(%"class.blink::BaseRenderingContext2D"*, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D9transformEdddddd(%"class.blink::BaseRenderingContext2D"*, double, double, double, double, double, double) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D9translateEddd(%"class.blink::BaseRenderingContext2D"*, double, double, double) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D9translateEdd(%"class.blink::BaseRenderingContext2D"*, double, double) local_unnamed_addr #2

declare void @_ZN5blink21NoAllocDirectCallHost20FlushDeferredActionsEv(%"class.blink::NoAllocDirectCallHost"*) local_unnamed_addr #2

declare void @_ZN5blink10CanvasPath3arcEdddddbRNS_14ExceptionStateE(%"class.blink::CanvasPath"*, double, double, double, double, double, i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v86Object10GetIsolateEv(%"class.v8::Object"*) local_unnamed_addr #2

declare void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink31NoAllocDirectCallExceptionStateD1Ev(%"class.blink::NoAllocDirectCallExceptionState"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"*) unnamed_addr #4

declare void @_ZN5blink10CanvasPath5arcToEdddddRNS_14ExceptionStateE(%"class.blink::CanvasPath"*, double, double, double, double, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink10CanvasPath13bezierCurveToEdddddd(%"class.blink::CanvasPath"*, double, double, double, double, double, double) local_unnamed_addr #2

declare void @_ZN5blink10CanvasPath9closePathEv(%"class.blink::CanvasPath"*) local_unnamed_addr #2

declare void @_ZN5blink10CanvasPath7ellipseEdddddddbRNS_14ExceptionStateE(%"class.blink::CanvasPath"*, double, double, double, double, double, double, double, i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink10CanvasPath6lineToEdd(%"class.blink::CanvasPath"*, double, double) local_unnamed_addr #2

declare void @_ZN5blink10CanvasPath6moveToEdd(%"class.blink::CanvasPath"*, double, double) local_unnamed_addr #2

declare void @_ZN5blink10CanvasPath16quadraticCurveToEdddd(%"class.blink::CanvasPath"*, double, double, double, double) local_unnamed_addr #2

declare void @_ZN5blink10CanvasPath4rectEdddd(%"class.blink::CanvasPath"*, double, double, double, double) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink22BaseRenderingContext2D21imageSmoothingQualityEv(%"class.blink::BaseRenderingContext2D"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings31ReportInvalidEnumSetToAttributeEPN2v87IsolateERKN3WTF6StringES7_RNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D24setImageSmoothingQualityERKN3WTF6StringE(%"class.blink::BaseRenderingContext2D"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare { i8, i64 } @_ZN5blink8bindings26FindIndexInEnumStringTableERKN3WTF6StringEN4base4spanIKPKcLm18446744073709551615EEE(%"class.WTF::String"* dereferenceable(8), i64, i8**) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D11perspectiveEd(%"class.blink::BaseRenderingContext2D"*, double) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D8rotate3dEddd(%"class.blink::BaseRenderingContext2D"*, double, double, double) local_unnamed_addr #2

declare void @_ZN5blink22BaseRenderingContext2D10rotateAxisEdddd(%"class.blink::BaseRenderingContext2D"*, double, double, double, double) local_unnamed_addr #2

declare void @_ZN5blink10CanvasPath9roundRectEddddRKNS_10HeapVectorINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEELj0EEERNS_14ExceptionStateE(%"class.blink::CanvasPath"*, double, double, double, double, %"class.blink::HeapVector.1822"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector.1822"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #10
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_35V8UnionDOMPointOrUnrestrictedDoubleEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector.1822"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #10
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.61, i64 0, i64 0)) #10
  %12 = bitcast %"class.blink::HeapVector.1822"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::HeapVector.1822"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.62, i64 0, i64 0)) #10
  %26 = bitcast %"class.blink::HeapVector.1822"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_35V8UnionDOMPointOrUnrestrictedDoubleEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector.1822"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #10
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_35V8UnionDOMPointOrUnrestrictedDoubleEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector.1822"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector.1822", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"*, align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #10
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 16777216
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.63, i64 0, i64 0)) #10
  %12 = bitcast %"class.blink::HeapVector.1822"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %112

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::HeapVector.1822"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.blink::HeapVector.1822", %"class.blink::HeapVector.1822"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapVector.1822", %"class.blink::HeapVector.1822"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::HeapVector.1822", %"class.blink::HeapVector.1822"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #10
  %18 = getelementptr inbounds %"class.blink::HeapVector.1822", %"class.blink::HeapVector.1822"* %5, i64 0, i32 0
  %19 = icmp eq i32 %8, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %13
  %21 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEEEmm(i64 %9) #10
  %22 = lshr i64 %21, 3
  %23 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %22) #10
  %24 = ptrtoint %"class.blink::HeapVectorBacking"* %23 to i64
  %25 = bitcast %"class.blink::HeapVector.1822"* %5 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = trunc i64 %22 to i32
  store i32 %26, i32* %16, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %23, i64 0, i32 0
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #10
  br label %32

32:                                               ; preds = %13, %20, %29
  %33 = phi i32 [ 0, %13 ], [ %26, %20 ], [ %26, %29 ]
  %34 = phi i64 [ 0, %13 ], [ %24, %20 ], [ %24, %29 ]
  %35 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %36 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #10
  %37 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::HeapVector.1822"* %5 to i64*
  br label %90

41:                                               ; preds = %32
  %42 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %43 = bitcast %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"** %7 to i8*
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %45

45:                                               ; preds = %41, %81
  %46 = phi i32 [ 0, %41 ], [ %82, %81 ]
  %47 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %42, %"class.v8::Context"* %35, i32 %46) #10
  %48 = icmp eq %"class.v8::Value"* %47, null
  br i1 %48, label %49, label %56

49:                                               ; preds = %45
  %50 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #10
  %51 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %52 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %52, i64 5
  %54 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %53, align 8
  call void %54(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %50) #10
  %55 = bitcast %"class.blink::HeapVector.1822"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  br label %111

56:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #10
  %57 = call %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"* @_ZN5blink35V8UnionDOMPointOrUnrestrictedDouble6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %47, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  store %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"* %57, %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"** %7, align 8
  %58 = load i32, i32* %44, align 8
  %59 = icmp eq i32 %58, 0
  %60 = ptrtoint %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"* %57 to i64
  br i1 %59, label %61, label %79

61:                                               ; preds = %56
  %62 = load i32, i32* %17, align 4
  %63 = load i32, i32* %16, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %78, label %65, !prof !4

65:                                               ; preds = %61
  %66 = load %"class.blink::Member.1828"*, %"class.blink::Member.1828"** %15, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds %"class.blink::Member.1828", %"class.blink::Member.1828"* %66, i64 %67
  %69 = bitcast %"class.blink::Member.1828"* %68 to i64*
  store atomic i64 %60, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"* %57 to i8*
  %74 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #10
  br label %75

75:                                               ; preds = %72, %65
  %76 = load i32, i32* %17, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %17, align 4
  br label %81

78:                                               ; preds = %61
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_35V8UnionDOMPointOrUnrestrictedDoubleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.1825"* nonnull %18, %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"** nonnull dereferenceable(8) %7) #10
  br label %81

79:                                               ; preds = %56
  %80 = bitcast %"class.blink::HeapVector.1822"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #10
  br label %111

81:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #10
  %82 = add nuw i32 %46, 1
  %83 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #10
  %84 = icmp ult i32 %82, %83
  br i1 %84, label %45, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.blink::HeapVector.1822"* %5 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load i32, i32* %16, align 8
  %89 = load i32, i32* %17, align 4
  br label %90

90:                                               ; preds = %39, %85
  %91 = phi i64* [ %40, %39 ], [ %86, %85 ]
  %92 = phi i32 [ 0, %39 ], [ %89, %85 ]
  %93 = phi i32 [ %33, %39 ], [ %88, %85 ]
  %94 = phi i64 [ %34, %39 ], [ %87, %85 ]
  %95 = getelementptr inbounds %"class.blink::HeapVector.1822", %"class.blink::HeapVector.1822"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.blink::HeapVector.1822", %"class.blink::HeapVector.1822"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %97 = bitcast %"class.blink::HeapVector.1822"* %0 to i64*
  store i64 0, i64* %97, align 8
  %98 = bitcast %"class.blink::HeapVector.1822"* %0 to i64*
  store atomic i64 0, i64* %91 monotonic, align 8
  store atomic i64 %94, i64* %98 monotonic, align 8
  store i32 %93, i32* %95, align 8
  store i32 0, i32* %16, align 8
  store i32 %92, i32* %96, align 4
  store i32 0, i32* %17, align 4
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %90
  %102 = inttoptr i64 %94 to i8*
  %103 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #10
  br label %104

104:                                              ; preds = %101, %90
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.blink::HeapVector.1822"* %5 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #10
  br label %111

111:                                              ; preds = %49, %79, %107, %104
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  br label %112

112:                                              ; preds = %111, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_35V8UnionDOMPointOrUnrestrictedDoubleEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector.1822"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector.1822", align 8
  %6 = alloca %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"*, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #10
  %9 = bitcast %"class.blink::HeapVector.1822"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.blink::HeapVector.1822", %"class.blink::HeapVector.1822"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector.1822", %"class.blink::HeapVector.1822"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector.1822", %"class.blink::HeapVector.1822"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #10
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #10
  br i1 %13, label %14, label %50

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"** %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::HeapVector.1822", %"class.blink::HeapVector.1822"* %5, i64 0, i32 0
  br label %19

19:                                               ; preds = %14, %48
  %20 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %21 = icmp eq %"class.v8::Value"* %20, null
  br i1 %21, label %22, label %23, !prof !4

22:                                               ; preds = %19
  call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %23

23:                                               ; preds = %19, %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %24 = call %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"* @_ZN5blink35V8UnionDOMPointOrUnrestrictedDouble6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %20, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  store %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"* %24, %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"** %6, align 8
  %25 = load i32, i32* %17, align 8
  %26 = icmp eq i32 %25, 0
  %27 = ptrtoint %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"* %24 to i64
  br i1 %26, label %30, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::HeapVector.1822"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %77

30:                                               ; preds = %23
  %31 = load i32, i32* %12, align 4
  %32 = load i32, i32* %11, align 8
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %47, label %34, !prof !4

34:                                               ; preds = %30
  %35 = load %"class.blink::Member.1828"*, %"class.blink::Member.1828"** %10, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"class.blink::Member.1828", %"class.blink::Member.1828"* %35, i64 %36
  %38 = bitcast %"class.blink::Member.1828"* %37 to i64*
  store atomic i64 %27, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"* %24 to i8*
  %43 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #10
  br label %44

44:                                               ; preds = %41, %34
  %45 = load i32, i32* %12, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %12, align 4
  br label %48

47:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_35V8UnionDOMPointOrUnrestrictedDoubleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.1825"* nonnull %18, %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"** nonnull dereferenceable(8) %6) #10
  br label %48

48:                                               ; preds = %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  %49 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #10
  br i1 %49, label %19, label %50

50:                                               ; preds = %48, %4
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::HeapVector.1822"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  br label %77

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::HeapVector.1822", %"class.blink::HeapVector.1822"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.blink::HeapVector.1822", %"class.blink::HeapVector.1822"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.blink::HeapVector.1822"* %5 to i64*
  %60 = bitcast %"class.blink::HeapVector.1822"* %0 to i64*
  store i64 0, i64* %60, align 8
  %61 = load i64, i64* %59, align 8
  %62 = bitcast %"class.blink::HeapVector.1822"* %0 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = load i32, i32* %11, align 8
  store i32 %63, i32* %57, align 8
  store i32 0, i32* %11, align 8
  %64 = load i32, i32* %12, align 4
  store i32 %64, i32* %58, align 4
  store i32 0, i32* %12, align 4
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %56
  %68 = inttoptr i64 %61 to i8*
  %69 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %68) #10
  br label %70

70:                                               ; preds = %67, %56
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.blink::HeapVector.1822"* %5 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #10
  br label %77

77:                                               ; preds = %73, %70, %28, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.64, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.75, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.76, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.77, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.211"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.211"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([211 x i8], [211 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_35V8UnionDOMPointOrUnrestrictedDoubleEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1828"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1828", %"class.blink::Member.1828"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1828"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_35V8UnionDOMPointOrUnrestrictedDoubleEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_35V8UnionDOMPointOrUnrestrictedDoubleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"*
  tail call void @_ZNK5blink35V8UnionDOMPointOrUnrestrictedDouble5TraceEPNS_7VisitorE(%"class.blink::V8UnionDOMPointOrUnrestrictedDouble"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink35V8UnionDOMPointOrUnrestrictedDouble5TraceEPNS_7VisitorE(%"class.blink::V8UnionDOMPointOrUnrestrictedDouble"*, %"class.blink::Visitor"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"* @_ZN5blink35V8UnionDOMPointOrUnrestrictedDouble6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_35V8UnionDOMPointOrUnrestrictedDoubleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.1825"*, %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_35V8UnionDOMPointOrUnrestrictedDoubleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1825"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.1828"*, %"class.blink::Member.1828"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.1828", %"class.blink::Member.1828"* %16, i64 %18
  %20 = bitcast %"class.blink::V8UnionDOMPointOrUnrestrictedDouble"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.1828"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_35V8UnionDOMPointOrUnrestrictedDoubleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1825"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1828"*, %"class.blink::Member.1828"** %8, align 8
  %10 = icmp eq %"class.blink::Member.1828"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1825"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.1828"*, %"class.blink::Member.1828"** %8, align 8
  %26 = icmp eq %"class.blink::Member.1828"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.1828"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !4

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.66, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.67, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_35V8UnionDOMPointOrUnrestrictedDoubleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1825"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_35V8UnionDOMPointOrUnrestrictedDoubleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1825"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1825"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1825"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_35V8UnionDOMPointOrUnrestrictedDoubleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.1828"*, %"class.blink::Member.1828"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.1828"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.1828"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1825"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.1825"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.1825"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1825", %"class.WTF::Vector.1825"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"class.v8::CFunctionInfo"* } @_ZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEv(%"class.v8::internal::CFunctionBuilderWithFunction"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i16, align 2
  %3 = alloca %"class.v8::CFunction", align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12, !prof !3

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = bitcast i16* %2 to %"class.v8::CTypeInfo"*
  %11 = bitcast i16* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %11) #10
  store i16 0, i16* %2, align 2
  call void @_ZN2v813CFunctionInfoC2ERKNS_9CTypeInfoEjPS2_(%"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl", %"class.v8::internal::CFunctionInfoImpl"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0), %"class.v8::CTypeInfo"* nonnull dereferenceable(2) %10, i32 8, %"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl", %"class.v8::internal::CFunctionInfoImpl"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0)) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %11) #10
  store <8 x i16> <i16 8, i16 7, i16 7, i16 7, i16 7, i16 7, i16 1, i16 255>, <8 x i16>* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl", %"class.v8::internal::CFunctionInfoImpl"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0) to <8 x i16>*), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  br label %12

12:                                               ; preds = %6, %9, %1
  %13 = getelementptr inbounds %"class.v8::internal::CFunctionBuilderWithFunction", %"class.v8::internal::CFunctionBuilderWithFunction"* %0, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZN2v89CFunctionC1EPKvPKNS_13CFunctionInfoE(%"class.v8::CFunction"* nonnull %3, i8* %14, %"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl", %"class.v8::internal::CFunctionInfoImpl"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IbJEEENS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0)) #10
  %15 = getelementptr inbounds %"class.v8::CFunction", %"class.v8::CFunction"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = insertvalue { i8*, %"class.v8::CFunctionInfo"* } undef, i8* %16, 0
  %18 = getelementptr inbounds %"class.v8::CFunction", %"class.v8::CFunction"* %3, i64 0, i32 1
  %19 = load %"class.v8::CFunctionInfo"*, %"class.v8::CFunctionInfo"** %18, align 8
  %20 = insertvalue { i8*, %"class.v8::CFunctionInfo"* } %17, %"class.v8::CFunctionInfo"* %19, 1
  ret { i8*, %"class.v8::CFunctionInfo"* } %20
}

declare void @_ZN2v89CFunctionC1EPKvPKNS_13CFunctionInfoE(%"class.v8::CFunction"*, i8*, %"class.v8::CFunctionInfo"*) unnamed_addr #2

declare void @_ZN2v813CFunctionInfoC2ERKNS_9CTypeInfoEjPS2_(%"class.v8::CFunctionInfo"*, %"class.v8::CTypeInfo"* dereferenceable(2), i32, %"class.v8::CTypeInfo"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"class.v8::CFunctionInfo"* } @_ZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEv(%"class.v8::internal::CFunctionBuilderWithFunction.1844"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i16, align 2
  %3 = alloca %"class.v8::CFunction", align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12, !prof !3

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = bitcast i16* %2 to %"class.v8::CTypeInfo"*
  %11 = bitcast i16* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %11) #10
  store i16 0, i16* %2, align 2
  call void @_ZN2v813CFunctionInfoC2ERKNS_9CTypeInfoEjPS2_(%"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1845", %"class.v8::internal::CFunctionInfoImpl.1845"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0), %"class.v8::CTypeInfo"* nonnull dereferenceable(2) %10, i32 7, %"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1845", %"class.v8::internal::CFunctionInfoImpl.1845"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0)) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %11) #10
  store i16 8, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1845", %"class.v8::internal::CFunctionInfoImpl.1845"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0) to i16*), align 8
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1845", %"class.v8::internal::CFunctionInfoImpl.1845"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 1) to i16*), align 2
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1845", %"class.v8::internal::CFunctionInfoImpl.1845"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 2) to i16*), align 4
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1845", %"class.v8::internal::CFunctionInfoImpl.1845"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 3) to i16*), align 2
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1845", %"class.v8::internal::CFunctionInfoImpl.1845"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 4) to i16*), align 8
  store i16 7, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1845", %"class.v8::internal::CFunctionInfoImpl.1845"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 5) to i16*), align 2
  store i16 255, i16* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1845", %"class.v8::internal::CFunctionInfoImpl.1845"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 6) to i16*), align 4
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  br label %12

12:                                               ; preds = %6, %9, %1
  %13 = getelementptr inbounds %"class.v8::internal::CFunctionBuilderWithFunction.1844", %"class.v8::internal::CFunctionBuilderWithFunction.1844"* %0, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZN2v89CFunctionC1EPKvPKNS_13CFunctionInfoE(%"class.v8::CFunction"* nonnull %3, i8* %14, %"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1845", %"class.v8::internal::CFunctionInfoImpl.1845"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0)) #10
  %15 = getelementptr inbounds %"class.v8::CFunction", %"class.v8::CFunction"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = insertvalue { i8*, %"class.v8::CFunctionInfo"* } undef, i8* %16, 0
  %18 = getelementptr inbounds %"class.v8::CFunction", %"class.v8::CFunction"* %3, i64 0, i32 1
  %19 = load %"class.v8::CFunctionInfo"*, %"class.v8::CFunctionInfo"** %18, align 8
  %20 = insertvalue { i8*, %"class.v8::CFunctionInfo"* } %17, %"class.v8::CFunctionInfo"* %19, 1
  ret { i8*, %"class.v8::CFunctionInfo"* } %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"class.v8::CFunctionInfo"* } @_ZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEv(%"class.v8::internal::CFunctionBuilderWithFunction.1846"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i16, align 2
  %3 = alloca %"class.v8::CFunction", align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12, !prof !3

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = bitcast i16* %2 to %"class.v8::CTypeInfo"*
  %11 = bitcast i16* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %11) #10
  store i16 0, i16* %2, align 2
  call void @_ZN2v813CFunctionInfoC2ERKNS_9CTypeInfoEjPS2_(%"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1847", %"class.v8::internal::CFunctionInfoImpl.1847"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0), %"class.v8::CTypeInfo"* nonnull dereferenceable(2) %10, i32 8, %"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1847", %"class.v8::internal::CFunctionInfoImpl.1847"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0)) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %11) #10
  store <8 x i16> <i16 8, i16 7, i16 7, i16 7, i16 7, i16 7, i16 7, i16 255>, <8 x i16>* bitcast (%"class.v8::CTypeInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1847", %"class.v8::internal::CFunctionInfoImpl.1847"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 1, i64 0) to <8 x i16>*), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance) #10
  br label %12

12:                                               ; preds = %6, %9, %1
  %13 = getelementptr inbounds %"class.v8::internal::CFunctionBuilderWithFunction.1846", %"class.v8::internal::CFunctionBuilderWithFunction.1846"* %0, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZN2v89CFunctionC1EPKvPKNS_13CFunctionInfoE(%"class.v8::CFunction"* nonnull %3, i8* %14, %"class.v8::CFunctionInfo"* getelementptr inbounds (%"class.v8::internal::CFunctionInfoImpl.1847", %"class.v8::internal::CFunctionInfoImpl.1847"* @_ZZN2v88internal28CFunctionBuilderWithFunctionINS0_16CTypeInfoBuilderIvJEEEJNS2_INS_5LocalINS_6ObjectEEEJEEENS2_IdJEEES8_S8_S8_S8_S8_NS2_IRNS_22FastApiCallbackOptionsEJEEEEE5BuildEvE8instance, i64 0, i32 0)) #10
  %15 = getelementptr inbounds %"class.v8::CFunction", %"class.v8::CFunction"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = insertvalue { i8*, %"class.v8::CFunctionInfo"* } undef, i8* %16, 0
  %18 = getelementptr inbounds %"class.v8::CFunction", %"class.v8::CFunction"* %3, i64 0, i32 1
  %19 = load %"class.v8::CFunctionInfo"*, %"class.v8::CFunctionInfo"** %18, align 8
  %20 = insertvalue { i8*, %"class.v8::CFunctionInfo"* } %17, %"class.v8::CFunctionInfo"* %19, 1
  ret { i8*, %"class.v8::CFunctionInfo"* } %20
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink23V8ImageSmoothingQuality6CreateERKN3WTF6StringE: argument 0"}
!8 = distinct !{!8, !"_ZN5blink23V8ImageSmoothingQuality6CreateERKN3WTF6StringE"}
!9 = !{!"branch_weights", i32 2002, i32 2000}
