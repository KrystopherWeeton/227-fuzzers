; ModuleID = '../../printing/printing_utils.cc'
source_filename = "../../printing/printing_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.3", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.7 }
%struct.anon.7 = type { i8 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZZN8printing31SimplifyDocumentTitleWithLengthERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmE15kCharsToReplace = internal constant [11 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [2 x i8] c"\5C\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.11 = private unnamed_addr constant [2 x i16] [i16 95, i16 0], align 2
@.str.13 = private unnamed_addr constant [33 x i8] c"../../printing/printing_utils.cc\00", align 1
@.str.14 = private unnamed_addr constant [58 x i8] c"ulocdata_getPaperSize failed, using ISO A4 Paper, error: \00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8printing31SimplifyDocumentTitleWithLengthERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i64) local_unnamed_addr #0 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = load i8, i8* %12, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %17, i64 24, i1 false) #11
  br label %191

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %29

24:                                               ; preds = %18
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %26 = trunc i64 %22 to i8
  %27 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  store i8 %26, i8* %28, align 1
  br label %44

29:                                               ; preds = %18
  %30 = icmp ugt i64 %22, 9223372036854775791
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %32) #12
  unreachable

33:                                               ; preds = %29
  %34 = add nuw nsw i64 %22, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #12
  unreachable

38:                                               ; preds = %33
  %39 = shl i64 %35, 1
  %40 = tail call i8* @_Znwm(i64 %39) #13
  %41 = bitcast i8* %40 to i16*
  %42 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  store i8* %40, i8** %42, align 8
  %43 = or i64 %35, -9223372036854775808
  store i64 %43, i64* %10, align 8
  store i64 %22, i64* %9, align 8
  br label %44

44:                                               ; preds = %38, %24
  %45 = phi i16* [ %25, %24 ], [ %41, %38 ]
  %46 = add nuw nsw i64 %22, 1
  %47 = add i64 %22, 1
  %48 = icmp ult i64 %47, 16
  br i1 %48, label %138, label %49

49:                                               ; preds = %44
  %50 = add i64 %22, 1
  %51 = getelementptr i16, i16* %45, i64 %50
  %52 = getelementptr i16, i16* %20, i64 %50
  %53 = icmp ult i16* %45, %52
  %54 = icmp ult i16* %20, %51
  %55 = and i1 %53, %54
  br i1 %55, label %138, label %56

56:                                               ; preds = %49
  %57 = and i64 %47, -16
  %58 = sub i64 %46, %57
  %59 = getelementptr i16, i16* %20, i64 %57
  %60 = getelementptr i16, i16* %45, i64 %57
  %61 = add i64 %57, -16
  %62 = lshr exact i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp ult i64 %61, 48
  br i1 %65, label %117, label %66

66:                                               ; preds = %56
  %67 = sub nsw i64 %63, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %114, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %115, %68 ]
  %71 = getelementptr i16, i16* %20, i64 %69
  %72 = getelementptr i16, i16* %45, i64 %69
  %73 = bitcast i16* %71 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !2
  %75 = getelementptr i16, i16* %71, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !2
  %78 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %78, align 2, !alias.scope !5, !noalias !2
  %79 = getelementptr i16, i16* %72, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %80, align 2, !alias.scope !5, !noalias !2
  %81 = or i64 %69, 16
  %82 = getelementptr i16, i16* %20, i64 %81
  %83 = getelementptr i16, i16* %45, i64 %81
  %84 = bitcast i16* %82 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !2
  %86 = getelementptr i16, i16* %82, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !2
  %89 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %89, align 2, !alias.scope !5, !noalias !2
  %90 = getelementptr i16, i16* %83, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %91, align 2, !alias.scope !5, !noalias !2
  %92 = or i64 %69, 32
  %93 = getelementptr i16, i16* %20, i64 %92
  %94 = getelementptr i16, i16* %45, i64 %92
  %95 = bitcast i16* %93 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !2
  %97 = getelementptr i16, i16* %93, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !2
  %100 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %100, align 2, !alias.scope !5, !noalias !2
  %101 = getelementptr i16, i16* %94, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %102, align 2, !alias.scope !5, !noalias !2
  %103 = or i64 %69, 48
  %104 = getelementptr i16, i16* %20, i64 %103
  %105 = getelementptr i16, i16* %45, i64 %103
  %106 = bitcast i16* %104 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !2
  %108 = getelementptr i16, i16* %104, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !2
  %111 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !5, !noalias !2
  %112 = getelementptr i16, i16* %105, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !5, !noalias !2
  %114 = add i64 %69, 64
  %115 = add i64 %70, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %68, !llvm.loop !7

117:                                              ; preds = %68, %56
  %118 = phi i64 [ 0, %56 ], [ %114, %68 ]
  %119 = icmp eq i64 %64, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %133, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %134, %120 ], [ %64, %117 ]
  %123 = getelementptr i16, i16* %20, i64 %121
  %124 = getelementptr i16, i16* %45, i64 %121
  %125 = bitcast i16* %123 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !2
  %127 = getelementptr i16, i16* %123, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !2
  %130 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %130, align 2, !alias.scope !5, !noalias !2
  %131 = getelementptr i16, i16* %124, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %132, align 2, !alias.scope !5, !noalias !2
  %133 = add i64 %121, 16
  %134 = add i64 %122, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %120, !llvm.loop !9

136:                                              ; preds = %120, %117
  %137 = icmp eq i64 %47, %57
  br i1 %137, label %191, label %138

138:                                              ; preds = %136, %49, %44
  %139 = phi i64 [ %46, %49 ], [ %46, %44 ], [ %58, %136 ]
  %140 = phi i16* [ %20, %49 ], [ %20, %44 ], [ %59, %136 ]
  %141 = phi i16* [ %45, %49 ], [ %45, %44 ], [ %60, %136 ]
  %142 = add i64 %139, -1
  %143 = and i64 %139, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %138, %145
  %146 = phi i64 [ %151, %145 ], [ %139, %138 ]
  %147 = phi i16* [ %153, %145 ], [ %140, %138 ]
  %148 = phi i16* [ %152, %145 ], [ %141, %138 ]
  %149 = phi i64 [ %154, %145 ], [ %143, %138 ]
  %150 = load i16, i16* %147, align 2
  store i16 %150, i16* %148, align 2
  %151 = add i64 %146, -1
  %152 = getelementptr inbounds i16, i16* %148, i64 1
  %153 = getelementptr inbounds i16, i16* %147, i64 1
  %154 = add i64 %149, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !11

156:                                              ; preds = %145, %138
  %157 = phi i64 [ %139, %138 ], [ %151, %145 ]
  %158 = phi i16* [ %140, %138 ], [ %153, %145 ]
  %159 = phi i16* [ %141, %138 ], [ %152, %145 ]
  %160 = icmp ult i64 %142, 7
  br i1 %160, label %191, label %161

161:                                              ; preds = %156, %161
  %162 = phi i64 [ %187, %161 ], [ %157, %156 ]
  %163 = phi i16* [ %189, %161 ], [ %158, %156 ]
  %164 = phi i16* [ %188, %161 ], [ %159, %156 ]
  %165 = load i16, i16* %163, align 2
  store i16 %165, i16* %164, align 2
  %166 = getelementptr inbounds i16, i16* %164, i64 1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %164, i64 2
  %170 = getelementptr inbounds i16, i16* %163, i64 2
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %164, i64 3
  %173 = getelementptr inbounds i16, i16* %163, i64 3
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %164, i64 4
  %176 = getelementptr inbounds i16, i16* %163, i64 4
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %164, i64 5
  %179 = getelementptr inbounds i16, i16* %163, i64 5
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %164, i64 6
  %182 = getelementptr inbounds i16, i16* %163, i64 6
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %164, i64 7
  %185 = getelementptr inbounds i16, i16* %163, i64 7
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %162, -8
  %188 = getelementptr inbounds i16, i16* %164, i64 8
  %189 = getelementptr inbounds i16, i16* %163, i64 8
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %191, label %161, !llvm.loop !12

191:                                              ; preds = %156, %161, %136, %16
  %192 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %192, i64 0, i32 1, i32 1
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  %196 = load i16*, i16** %8, align 8
  %197 = load i64, i64* %9, align 8
  %198 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %199 = zext i8 %194 to i64
  %200 = select i1 %195, i16* %196, i16* %198
  %201 = select i1 %195, i64 %197, i64 %199
  %202 = getelementptr inbounds i16, i16* %200, i64 %201
  %203 = icmp eq i64 %201, 0
  br i1 %203, label %215, label %204

204:                                              ; preds = %191, %210
  %205 = phi i16* [ %211, %210 ], [ %200, %191 ]
  %206 = load i16, i16* %205, align 2
  %207 = zext i16 %206 to i32
  %208 = call signext i8 @u_iscntrl_69(i32 %207) #11
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %215

210:                                              ; preds = %204
  %211 = getelementptr inbounds i16, i16* %205, i64 1
  %212 = icmp eq i16* %211, %202
  br i1 %212, label %213, label %204

213:                                              ; preds = %210
  %214 = ptrtoint i16* %202 to i64
  br label %238

215:                                              ; preds = %204, %191
  %216 = phi i16* [ %200, %191 ], [ %205, %204 ]
  %217 = ptrtoint i16* %216 to i64
  %218 = icmp eq i16* %216, %202
  br i1 %218, label %238, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds i16, i16* %216, i64 1
  %221 = icmp eq i16* %220, %202
  br i1 %221, label %238, label %222

222:                                              ; preds = %219, %234
  %223 = phi i16* [ %236, %234 ], [ %220, %219 ]
  %224 = phi i64 [ %235, %234 ], [ %217, %219 ]
  %225 = load i16, i16* %223, align 2
  %226 = zext i16 %225 to i32
  %227 = call signext i8 @u_iscntrl_69(i32 %226) #11
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %229, label %234

229:                                              ; preds = %222
  %230 = load i16, i16* %223, align 2
  %231 = inttoptr i64 %224 to i16*
  store i16 %230, i16* %231, align 2
  %232 = getelementptr inbounds i16, i16* %231, i64 1
  %233 = ptrtoint i16* %232 to i64
  br label %234

234:                                              ; preds = %229, %222
  %235 = phi i64 [ %233, %229 ], [ %224, %222 ]
  %236 = getelementptr inbounds i16, i16* %223, i64 1
  %237 = icmp eq i16* %236, %202
  br i1 %237, label %238, label %222

238:                                              ; preds = %234, %213, %215, %219
  %239 = phi i64 [ %217, %215 ], [ %214, %213 ], [ %217, %219 ], [ %235, %234 ]
  %240 = load i8, i8* %193, align 1
  %241 = icmp slt i8 %240, 0
  %242 = load i16*, i16** %8, align 8
  %243 = load i64, i64* %9, align 8
  %244 = getelementptr inbounds i16, i16* %242, i64 %243
  %245 = ptrtoint i16* %242 to i64
  %246 = zext i8 %240 to i64
  %247 = getelementptr inbounds i16, i16* %198, i64 %246
  %248 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  %249 = select i1 %241, i16* %244, i16* %247
  %250 = select i1 %241, i64 %245, i64 %248
  %251 = select i1 %241, i64 %243, i64 %246
  %252 = ptrtoint i16* %249 to i64
  %253 = sub i64 %239, %250
  %254 = sub i64 %252, %239
  %255 = ashr exact i64 %253, 1
  %256 = ashr exact i64 %254, 1
  %257 = icmp ult i64 %251, %255
  br i1 %257, label %258, label %260

258:                                              ; preds = %238
  %259 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %259) #12
  unreachable

260:                                              ; preds = %238
  switch i64 %256, label %267 [
    i64 -1, label %261
    i64 0, label %597
  ]

261:                                              ; preds = %260
  br i1 %241, label %262, label %264

262:                                              ; preds = %261
  %263 = getelementptr inbounds i16, i16* %242, i64 %255
  store i16 0, i16* %263, align 2
  store i64 %255, i64* %9, align 8
  br label %597

264:                                              ; preds = %261
  %265 = getelementptr inbounds i16, i16* %198, i64 %255
  store i16 0, i16* %265, align 2
  %266 = trunc i64 %255 to i8
  store i8 %266, i8* %193, align 1
  br label %597

267:                                              ; preds = %260
  %268 = select i1 %241, i16* %242, i16* %198
  %269 = sub i64 %251, %255
  %270 = icmp ult i64 %269, %256
  %271 = select i1 %270, i64 %269, i64 %256
  %272 = sub i64 %269, %271
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %588, label %274

274:                                              ; preds = %267
  %275 = getelementptr inbounds i16, i16* %268, i64 %255
  %276 = getelementptr inbounds i16, i16* %275, i64 %271
  %277 = icmp sgt i64 %271, 0
  br i1 %277, label %278, label %422

278:                                              ; preds = %274
  %279 = icmp ult i64 %272, 16
  br i1 %279, label %369, label %280

280:                                              ; preds = %278
  %281 = sub i64 %251, %271
  %282 = getelementptr i16, i16* %268, i64 %281
  %283 = getelementptr i16, i16* %268, i64 %251
  %284 = icmp ult i16* %275, %283
  %285 = icmp ult i16* %276, %282
  %286 = and i1 %284, %285
  br i1 %286, label %369, label %287

287:                                              ; preds = %280
  %288 = and i64 %272, -16
  %289 = sub i64 %272, %288
  %290 = getelementptr i16, i16* %276, i64 %288
  %291 = getelementptr i16, i16* %275, i64 %288
  %292 = add i64 %288, -16
  %293 = lshr exact i64 %292, 4
  %294 = add nuw nsw i64 %293, 1
  %295 = and i64 %294, 3
  %296 = icmp ult i64 %292, 48
  br i1 %296, label %348, label %297

297:                                              ; preds = %287
  %298 = sub nsw i64 %294, %295
  br label %299

299:                                              ; preds = %299, %297
  %300 = phi i64 [ 0, %297 ], [ %345, %299 ]
  %301 = phi i64 [ %298, %297 ], [ %346, %299 ]
  %302 = getelementptr i16, i16* %276, i64 %300
  %303 = getelementptr i16, i16* %275, i64 %300
  %304 = bitcast i16* %302 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !13
  %306 = getelementptr i16, i16* %302, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !13
  %309 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %309, align 2, !alias.scope !16, !noalias !13
  %310 = getelementptr i16, i16* %303, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %311, align 2, !alias.scope !16, !noalias !13
  %312 = or i64 %300, 16
  %313 = getelementptr i16, i16* %276, i64 %312
  %314 = getelementptr i16, i16* %275, i64 %312
  %315 = bitcast i16* %313 to <8 x i16>*
  %316 = load <8 x i16>, <8 x i16>* %315, align 2, !alias.scope !13
  %317 = getelementptr i16, i16* %313, i64 8
  %318 = bitcast i16* %317 to <8 x i16>*
  %319 = load <8 x i16>, <8 x i16>* %318, align 2, !alias.scope !13
  %320 = bitcast i16* %314 to <8 x i16>*
  store <8 x i16> %316, <8 x i16>* %320, align 2, !alias.scope !16, !noalias !13
  %321 = getelementptr i16, i16* %314, i64 8
  %322 = bitcast i16* %321 to <8 x i16>*
  store <8 x i16> %319, <8 x i16>* %322, align 2, !alias.scope !16, !noalias !13
  %323 = or i64 %300, 32
  %324 = getelementptr i16, i16* %276, i64 %323
  %325 = getelementptr i16, i16* %275, i64 %323
  %326 = bitcast i16* %324 to <8 x i16>*
  %327 = load <8 x i16>, <8 x i16>* %326, align 2, !alias.scope !13
  %328 = getelementptr i16, i16* %324, i64 8
  %329 = bitcast i16* %328 to <8 x i16>*
  %330 = load <8 x i16>, <8 x i16>* %329, align 2, !alias.scope !13
  %331 = bitcast i16* %325 to <8 x i16>*
  store <8 x i16> %327, <8 x i16>* %331, align 2, !alias.scope !16, !noalias !13
  %332 = getelementptr i16, i16* %325, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  store <8 x i16> %330, <8 x i16>* %333, align 2, !alias.scope !16, !noalias !13
  %334 = or i64 %300, 48
  %335 = getelementptr i16, i16* %276, i64 %334
  %336 = getelementptr i16, i16* %275, i64 %334
  %337 = bitcast i16* %335 to <8 x i16>*
  %338 = load <8 x i16>, <8 x i16>* %337, align 2, !alias.scope !13
  %339 = getelementptr i16, i16* %335, i64 8
  %340 = bitcast i16* %339 to <8 x i16>*
  %341 = load <8 x i16>, <8 x i16>* %340, align 2, !alias.scope !13
  %342 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %338, <8 x i16>* %342, align 2, !alias.scope !16, !noalias !13
  %343 = getelementptr i16, i16* %336, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  store <8 x i16> %341, <8 x i16>* %344, align 2, !alias.scope !16, !noalias !13
  %345 = add i64 %300, 64
  %346 = add i64 %301, -4
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %348, label %299, !llvm.loop !18

348:                                              ; preds = %299, %287
  %349 = phi i64 [ 0, %287 ], [ %345, %299 ]
  %350 = icmp eq i64 %295, 0
  br i1 %350, label %367, label %351

351:                                              ; preds = %348, %351
  %352 = phi i64 [ %364, %351 ], [ %349, %348 ]
  %353 = phi i64 [ %365, %351 ], [ %295, %348 ]
  %354 = getelementptr i16, i16* %276, i64 %352
  %355 = getelementptr i16, i16* %275, i64 %352
  %356 = bitcast i16* %354 to <8 x i16>*
  %357 = load <8 x i16>, <8 x i16>* %356, align 2, !alias.scope !13
  %358 = getelementptr i16, i16* %354, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  %360 = load <8 x i16>, <8 x i16>* %359, align 2, !alias.scope !13
  %361 = bitcast i16* %355 to <8 x i16>*
  store <8 x i16> %357, <8 x i16>* %361, align 2, !alias.scope !16, !noalias !13
  %362 = getelementptr i16, i16* %355, i64 8
  %363 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %360, <8 x i16>* %363, align 2, !alias.scope !16, !noalias !13
  %364 = add i64 %352, 16
  %365 = add i64 %353, -1
  %366 = icmp eq i64 %365, 0
  br i1 %366, label %367, label %351, !llvm.loop !19

367:                                              ; preds = %351, %348
  %368 = icmp eq i64 %272, %288
  br i1 %368, label %588, label %369

369:                                              ; preds = %367, %280, %278
  %370 = phi i64 [ %272, %280 ], [ %272, %278 ], [ %289, %367 ]
  %371 = phi i16* [ %276, %280 ], [ %276, %278 ], [ %290, %367 ]
  %372 = phi i16* [ %275, %280 ], [ %275, %278 ], [ %291, %367 ]
  %373 = add i64 %370, -1
  %374 = and i64 %370, 7
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %387, label %376

376:                                              ; preds = %369, %376
  %377 = phi i64 [ %382, %376 ], [ %370, %369 ]
  %378 = phi i16* [ %384, %376 ], [ %371, %369 ]
  %379 = phi i16* [ %383, %376 ], [ %372, %369 ]
  %380 = phi i64 [ %385, %376 ], [ %374, %369 ]
  %381 = load i16, i16* %378, align 2
  store i16 %381, i16* %379, align 2
  %382 = add i64 %377, -1
  %383 = getelementptr inbounds i16, i16* %379, i64 1
  %384 = getelementptr inbounds i16, i16* %378, i64 1
  %385 = add i64 %380, -1
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %387, label %376, !llvm.loop !20

387:                                              ; preds = %376, %369
  %388 = phi i64 [ %370, %369 ], [ %382, %376 ]
  %389 = phi i16* [ %371, %369 ], [ %384, %376 ]
  %390 = phi i16* [ %372, %369 ], [ %383, %376 ]
  %391 = icmp ult i64 %373, 7
  br i1 %391, label %588, label %392

392:                                              ; preds = %387, %392
  %393 = phi i64 [ %418, %392 ], [ %388, %387 ]
  %394 = phi i16* [ %420, %392 ], [ %389, %387 ]
  %395 = phi i16* [ %419, %392 ], [ %390, %387 ]
  %396 = load i16, i16* %394, align 2
  store i16 %396, i16* %395, align 2
  %397 = getelementptr inbounds i16, i16* %395, i64 1
  %398 = getelementptr inbounds i16, i16* %394, i64 1
  %399 = load i16, i16* %398, align 2
  store i16 %399, i16* %397, align 2
  %400 = getelementptr inbounds i16, i16* %395, i64 2
  %401 = getelementptr inbounds i16, i16* %394, i64 2
  %402 = load i16, i16* %401, align 2
  store i16 %402, i16* %400, align 2
  %403 = getelementptr inbounds i16, i16* %395, i64 3
  %404 = getelementptr inbounds i16, i16* %394, i64 3
  %405 = load i16, i16* %404, align 2
  store i16 %405, i16* %403, align 2
  %406 = getelementptr inbounds i16, i16* %395, i64 4
  %407 = getelementptr inbounds i16, i16* %394, i64 4
  %408 = load i16, i16* %407, align 2
  store i16 %408, i16* %406, align 2
  %409 = getelementptr inbounds i16, i16* %395, i64 5
  %410 = getelementptr inbounds i16, i16* %394, i64 5
  %411 = load i16, i16* %410, align 2
  store i16 %411, i16* %409, align 2
  %412 = getelementptr inbounds i16, i16* %395, i64 6
  %413 = getelementptr inbounds i16, i16* %394, i64 6
  %414 = load i16, i16* %413, align 2
  store i16 %414, i16* %412, align 2
  %415 = getelementptr inbounds i16, i16* %395, i64 7
  %416 = getelementptr inbounds i16, i16* %394, i64 7
  %417 = load i16, i16* %416, align 2
  store i16 %417, i16* %415, align 2
  %418 = add i64 %393, -8
  %419 = getelementptr inbounds i16, i16* %395, i64 8
  %420 = getelementptr inbounds i16, i16* %394, i64 8
  %421 = icmp eq i64 %418, 0
  br i1 %421, label %588, label %392, !llvm.loop !21

422:                                              ; preds = %274
  %423 = icmp slt i64 %271, 0
  br i1 %423, label %424, label %588

424:                                              ; preds = %422
  %425 = getelementptr inbounds i16, i16* %276, i64 %272
  %426 = getelementptr inbounds i16, i16* %275, i64 %272
  %427 = icmp ult i64 %272, 16
  br i1 %427, label %535, label %428

428:                                              ; preds = %424
  %429 = add i64 %251, -1
  %430 = sub i64 %429, %255
  %431 = sub i64 %430, %271
  %432 = sub i64 %429, %271
  %433 = getelementptr i16, i16* %268, i64 %432
  %434 = ptrtoint i16* %433 to i64
  %435 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %431, i64 2)
  %436 = extractvalue { i64, i1 } %435, 0
  %437 = extractvalue { i64, i1 } %435, 1
  %438 = icmp ugt i64 %436, %434
  %439 = or i1 %438, %437
  %440 = add i64 %251, -1
  %441 = getelementptr i16, i16* %268, i64 %440
  %442 = ptrtoint i16* %441 to i64
  %443 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %431, i64 2)
  %444 = extractvalue { i64, i1 } %443, 0
  %445 = extractvalue { i64, i1 } %443, 1
  %446 = icmp ugt i64 %444, %442
  %447 = or i1 %446, %445
  %448 = or i1 %439, %447
  br i1 %448, label %535, label %449

449:                                              ; preds = %428
  %450 = add i64 %255, %271
  %451 = getelementptr i16, i16* %268, i64 %450
  %452 = icmp ult i16* %275, %425
  %453 = icmp ult i16* %451, %426
  %454 = and i1 %452, %453
  br i1 %454, label %535, label %455

455:                                              ; preds = %449
  %456 = and i64 %272, -16
  %457 = sub i64 %272, %456
  %458 = sub i64 0, %456
  %459 = getelementptr i16, i16* %425, i64 %458
  %460 = sub i64 0, %456
  %461 = getelementptr i16, i16* %426, i64 %460
  %462 = add i64 %456, -16
  %463 = lshr exact i64 %462, 4
  %464 = add nuw nsw i64 %463, 1
  %465 = and i64 %464, 1
  %466 = icmp eq i64 %462, 0
  br i1 %466, label %513, label %467

467:                                              ; preds = %455
  %468 = sub nuw nsw i64 %464, %465
  %469 = getelementptr i16, i16* %425, i64 -1
  %470 = getelementptr i16, i16* %426, i64 -1
  %471 = getelementptr i16, i16* %425, i64 -1
  %472 = getelementptr i16, i16* %426, i64 -1
  br label %473

473:                                              ; preds = %473, %467
  %474 = phi i64 [ 0, %467 ], [ %508, %473 ]
  %475 = phi i64 [ %468, %467 ], [ %509, %473 ]
  %476 = sub i64 0, %474
  %477 = sub i64 0, %474
  %478 = getelementptr inbounds i16, i16* %470, i64 %477
  %479 = getelementptr inbounds i16, i16* %469, i64 %476
  %480 = getelementptr inbounds i16, i16* %479, i64 -7
  %481 = bitcast i16* %480 to <8 x i16>*
  %482 = load <8 x i16>, <8 x i16>* %481, align 2, !alias.scope !22
  %483 = getelementptr inbounds i16, i16* %479, i64 -8
  %484 = getelementptr inbounds i16, i16* %483, i64 -7
  %485 = bitcast i16* %484 to <8 x i16>*
  %486 = load <8 x i16>, <8 x i16>* %485, align 2, !alias.scope !22
  %487 = getelementptr inbounds i16, i16* %478, i64 -7
  %488 = bitcast i16* %487 to <8 x i16>*
  store <8 x i16> %482, <8 x i16>* %488, align 2, !alias.scope !25, !noalias !22
  %489 = getelementptr inbounds i16, i16* %478, i64 -8
  %490 = getelementptr inbounds i16, i16* %489, i64 -7
  %491 = bitcast i16* %490 to <8 x i16>*
  store <8 x i16> %486, <8 x i16>* %491, align 2, !alias.scope !25, !noalias !22
  %492 = sub nuw nsw i64 -16, %474
  %493 = sub nuw nsw i64 -16, %474
  %494 = getelementptr inbounds i16, i16* %472, i64 %493
  %495 = getelementptr inbounds i16, i16* %471, i64 %492
  %496 = getelementptr inbounds i16, i16* %495, i64 -7
  %497 = bitcast i16* %496 to <8 x i16>*
  %498 = load <8 x i16>, <8 x i16>* %497, align 2, !alias.scope !22
  %499 = getelementptr inbounds i16, i16* %495, i64 -8
  %500 = getelementptr inbounds i16, i16* %499, i64 -7
  %501 = bitcast i16* %500 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !22
  %503 = getelementptr inbounds i16, i16* %494, i64 -7
  %504 = bitcast i16* %503 to <8 x i16>*
  store <8 x i16> %498, <8 x i16>* %504, align 2, !alias.scope !25, !noalias !22
  %505 = getelementptr inbounds i16, i16* %494, i64 -8
  %506 = getelementptr inbounds i16, i16* %505, i64 -7
  %507 = bitcast i16* %506 to <8 x i16>*
  store <8 x i16> %502, <8 x i16>* %507, align 2, !alias.scope !25, !noalias !22
  %508 = add i64 %474, 32
  %509 = add i64 %475, -2
  %510 = icmp eq i64 %509, 0
  br i1 %510, label %511, label %473, !llvm.loop !27

511:                                              ; preds = %473
  %512 = sub nuw nsw i64 -32, %474
  br label %513

513:                                              ; preds = %511, %455
  %514 = phi i64 [ 0, %455 ], [ %512, %511 ]
  %515 = icmp eq i64 %465, 0
  br i1 %515, label %533, label %516

516:                                              ; preds = %513
  %517 = getelementptr i16, i16* %425, i64 -1
  %518 = getelementptr i16, i16* %426, i64 -1
  %519 = getelementptr inbounds i16, i16* %518, i64 %514
  %520 = getelementptr inbounds i16, i16* %517, i64 %514
  %521 = getelementptr inbounds i16, i16* %520, i64 -7
  %522 = bitcast i16* %521 to <8 x i16>*
  %523 = load <8 x i16>, <8 x i16>* %522, align 2, !alias.scope !22
  %524 = getelementptr inbounds i16, i16* %520, i64 -8
  %525 = getelementptr inbounds i16, i16* %524, i64 -7
  %526 = bitcast i16* %525 to <8 x i16>*
  %527 = load <8 x i16>, <8 x i16>* %526, align 2, !alias.scope !22
  %528 = getelementptr inbounds i16, i16* %519, i64 -7
  %529 = bitcast i16* %528 to <8 x i16>*
  store <8 x i16> %523, <8 x i16>* %529, align 2, !alias.scope !25, !noalias !22
  %530 = getelementptr inbounds i16, i16* %519, i64 -8
  %531 = getelementptr inbounds i16, i16* %530, i64 -7
  %532 = bitcast i16* %531 to <8 x i16>*
  store <8 x i16> %527, <8 x i16>* %532, align 2, !alias.scope !25, !noalias !22
  br label %533

533:                                              ; preds = %513, %516
  %534 = icmp eq i64 %272, %456
  br i1 %534, label %588, label %535

535:                                              ; preds = %533, %449, %428, %424
  %536 = phi i64 [ %272, %449 ], [ %272, %428 ], [ %272, %424 ], [ %457, %533 ]
  %537 = phi i16* [ %425, %449 ], [ %425, %428 ], [ %425, %424 ], [ %459, %533 ]
  %538 = phi i16* [ %426, %449 ], [ %426, %428 ], [ %426, %424 ], [ %461, %533 ]
  %539 = add i64 %536, -1
  %540 = and i64 %536, 7
  %541 = icmp eq i64 %540, 0
  br i1 %541, label %553, label %542

542:                                              ; preds = %535, %542
  %543 = phi i64 [ %550, %542 ], [ %536, %535 ]
  %544 = phi i16* [ %548, %542 ], [ %537, %535 ]
  %545 = phi i16* [ %547, %542 ], [ %538, %535 ]
  %546 = phi i64 [ %551, %542 ], [ %540, %535 ]
  %547 = getelementptr inbounds i16, i16* %545, i64 -1
  %548 = getelementptr inbounds i16, i16* %544, i64 -1
  %549 = load i16, i16* %548, align 2
  store i16 %549, i16* %547, align 2
  %550 = add i64 %543, -1
  %551 = add i64 %546, -1
  %552 = icmp eq i64 %551, 0
  br i1 %552, label %553, label %542, !llvm.loop !28

553:                                              ; preds = %542, %535
  %554 = phi i64 [ %536, %535 ], [ %550, %542 ]
  %555 = phi i16* [ %537, %535 ], [ %548, %542 ]
  %556 = phi i16* [ %538, %535 ], [ %547, %542 ]
  %557 = icmp ult i64 %539, 7
  br i1 %557, label %588, label %558

558:                                              ; preds = %553, %558
  %559 = phi i64 [ %586, %558 ], [ %554, %553 ]
  %560 = phi i16* [ %584, %558 ], [ %555, %553 ]
  %561 = phi i16* [ %583, %558 ], [ %556, %553 ]
  %562 = getelementptr inbounds i16, i16* %561, i64 -1
  %563 = getelementptr inbounds i16, i16* %560, i64 -1
  %564 = load i16, i16* %563, align 2
  store i16 %564, i16* %562, align 2
  %565 = getelementptr inbounds i16, i16* %561, i64 -2
  %566 = getelementptr inbounds i16, i16* %560, i64 -2
  %567 = load i16, i16* %566, align 2
  store i16 %567, i16* %565, align 2
  %568 = getelementptr inbounds i16, i16* %561, i64 -3
  %569 = getelementptr inbounds i16, i16* %560, i64 -3
  %570 = load i16, i16* %569, align 2
  store i16 %570, i16* %568, align 2
  %571 = getelementptr inbounds i16, i16* %561, i64 -4
  %572 = getelementptr inbounds i16, i16* %560, i64 -4
  %573 = load i16, i16* %572, align 2
  store i16 %573, i16* %571, align 2
  %574 = getelementptr inbounds i16, i16* %561, i64 -5
  %575 = getelementptr inbounds i16, i16* %560, i64 -5
  %576 = load i16, i16* %575, align 2
  store i16 %576, i16* %574, align 2
  %577 = getelementptr inbounds i16, i16* %561, i64 -6
  %578 = getelementptr inbounds i16, i16* %560, i64 -6
  %579 = load i16, i16* %578, align 2
  store i16 %579, i16* %577, align 2
  %580 = getelementptr inbounds i16, i16* %561, i64 -7
  %581 = getelementptr inbounds i16, i16* %560, i64 -7
  %582 = load i16, i16* %581, align 2
  store i16 %582, i16* %580, align 2
  %583 = getelementptr inbounds i16, i16* %561, i64 -8
  %584 = getelementptr inbounds i16, i16* %560, i64 -8
  %585 = load i16, i16* %584, align 2
  store i16 %585, i16* %583, align 2
  %586 = add i64 %559, -8
  %587 = icmp eq i64 %586, 0
  br i1 %587, label %588, label %558, !llvm.loop !29

588:                                              ; preds = %553, %558, %387, %392, %533, %367, %422, %267
  %589 = sub i64 %251, %271
  %590 = load i8, i8* %193, align 1
  %591 = icmp slt i8 %590, 0
  br i1 %591, label %592, label %593

592:                                              ; preds = %588
  store i64 %589, i64* %9, align 8
  br label %595

593:                                              ; preds = %588
  %594 = trunc i64 %589 to i8
  store i8 %594, i8* %193, align 1
  br label %595

595:                                              ; preds = %593, %592
  %596 = getelementptr inbounds i16, i16* %268, i64 %589
  store i16 0, i16* %596, align 2
  br label %597

597:                                              ; preds = %260, %262, %264, %595
  %598 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %599 = bitcast %"class.logging::CheckError"* %4 to i8*
  %600 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %601 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %600, i64 0, i32 1, i32 1
  %602 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %603 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %604 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %605 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  br label %615

606:                                              ; preds = %644
  %607 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %607, i8 0, i64 24, i1 false) #11
  %608 = call zeroext i1 @_ZN3gfx11ElideStringERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmPS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i64 %2, %"class.std::__1::basic_string"* %0) #11
  %609 = load i8, i8* %193, align 1
  %610 = icmp slt i8 %609, 0
  br i1 %610, label %611, label %614

611:                                              ; preds = %606
  %612 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %613 = load i8*, i8** %612, align 8
  call void @_ZdlPv(i8* %613) #13
  br label %614

614:                                              ; preds = %606, %611
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret void

615:                                              ; preds = %597, %644
  %616 = phi i8** [ getelementptr inbounds ([11 x i8*], [11 x i8*]* @_ZZN8printing31SimplifyDocumentTitleWithLengthERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmE15kCharsToReplace, i64 0, i64 0), %597 ], [ %645, %644 ]
  %617 = load i8*, i8** %616, align 8
  %618 = load i8, i8* %193, align 1
  %619 = icmp slt i8 %618, 0
  %620 = load i16*, i16** %8, align 8
  %621 = select i1 %619, i16* %620, i16* %198
  %622 = load i64, i64* %9, align 8
  %623 = zext i8 %618 to i64
  %624 = select i1 %619, i64 %622, i64 %623
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %598) #11
  %625 = icmp eq i8* %617, null
  br i1 %625, label %628, label %626

626:                                              ; preds = %615
  %627 = call i64 @strlen(i8* nonnull %617) #11
  br label %630

628:                                              ; preds = %615
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %599) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #11
  %629 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %599) #11
  br label %630

630:                                              ; preds = %626, %628
  %631 = phi i64 [ 0, %628 ], [ %627, %626 ]
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i8* %617, i64 %631) #11
  %632 = load i8, i8* %601, align 1
  %633 = load i16*, i16** %602, align 8
  %634 = load i64, i64* %604, align 8
  %635 = zext i8 %632 to i64
  %636 = icmp slt i8 %632, 0
  %637 = select i1 %636, i16* %633, i16* %603
  %638 = select i1 %636, i64 %634, i64 %635
  %639 = call zeroext i1 @_ZN4base12ReplaceCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_S4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %621, i64 %624, i16* %637, i64 %638, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.11, i64 0, i64 0), i64 1, %"class.std::__1::basic_string"* nonnull %5) #11
  %640 = load i8, i8* %601, align 1
  %641 = icmp slt i8 %640, 0
  br i1 %641, label %642, label %644

642:                                              ; preds = %630
  %643 = load i8*, i8** %605, align 8
  call void @_ZdlPv(i8* %643) #13
  br label %644

644:                                              ; preds = %630, %642
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %598) #11
  %645 = getelementptr inbounds i8*, i8** %616, i64 1
  %646 = icmp eq i8** %645, getelementptr inbounds ([11 x i8*], [11 x i8*]* @_ZZN8printing31SimplifyDocumentTitleWithLengthERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmE15kCharsToReplace, i64 1, i64 0)
  br i1 %646, label %606, label %615
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare signext i8 @u_iscntrl_69(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base12ReplaceCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_S4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i16*, i64, i16*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3gfx11ElideStringERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmPS6_(%"class.std::__1::basic_string"* dereferenceable(24), i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8printing37FormatDocumentTitleWithOwnerAndLengthERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_m(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i64) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  store i8 2, i8* %12, align 1
  %13 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  store i16 58, i16* %13, align 8
  %14 = getelementptr inbounds i16, i16* %13, i64 1
  store i16 32, i16* %14, align 2
  %15 = getelementptr inbounds i16, i16* %13, i64 2
  store i16 0, i16* %15, align 4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 -86, i64 24, i1 false)
  %21 = load i8, i8* %19, align 1
  %22 = icmp slt i8 %21, 0
  %23 = load i64, i64* %9, align 8
  %24 = zext i8 %21 to i64
  %25 = select i1 %22, i64 %23, i64 %24
  %26 = sub i64 %3, %25
  tail call void @_ZN8printing31SimplifyDocumentTitleWithLengthERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %26)
  %27 = load i16*, i16** %8, align 8
  %28 = select i1 %22, i16* %27, i16* %13
  %29 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %4
  %34 = load i64, i64* %18, align 8
  %35 = and i64 %34, 9223372036854775807
  %36 = add nsw i64 %35, -1
  %37 = load i64, i64* %17, align 8
  br label %40

38:                                               ; preds = %4
  %39 = zext i8 %31 to i64
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i64 [ %36, %33 ], [ 10, %38 ]
  %42 = phi i64 [ %37, %33 ], [ %39, %38 ]
  %43 = sub i64 %41, %42
  %44 = icmp ult i64 %43, %25
  br i1 %44, label %204, label %45

45:                                               ; preds = %40
  %46 = icmp eq i64 %25, 0
  br i1 %46, label %207, label %47

47:                                               ; preds = %45
  %48 = load i16*, i16** %16, align 8
  %49 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %50 = select i1 %32, i16* %48, i16* %49
  %51 = getelementptr inbounds i16, i16* %50, i64 %42
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %47
  %54 = add i64 %25, %42
  %55 = getelementptr i16, i16* %50, i64 %54
  %56 = getelementptr i16, i16* %28, i64 %25
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %28, %55
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %28, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %28, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !30
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !30
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !33, !noalias !30
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !33, !noalias !30
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %28, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !30
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !30
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !33, !noalias !30
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !33, !noalias !30
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %28, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !30
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !30
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !33, !noalias !30
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !33, !noalias !30
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %28, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !30
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !30
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !33, !noalias !30
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !33, !noalias !30
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !35

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %28, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !30
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !30
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !33, !noalias !30
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !33, !noalias !30
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !36

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %47
  %143 = phi i64 [ %25, %53 ], [ %25, %47 ], [ %62, %140 ]
  %144 = phi i16* [ %28, %53 ], [ %28, %47 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %47 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !37

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !38

195:                                              ; preds = %160, %165, %140
  %196 = add i64 %42, %25
  %197 = load i8, i8* %30, align 1
  %198 = icmp slt i8 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %195
  store i64 %196, i64* %17, align 8
  br label %202

200:                                              ; preds = %195
  %201 = trunc i64 %196 to i8
  store i8 %201, i8* %30, align 1
  br label %202

202:                                              ; preds = %200, %199
  %203 = getelementptr inbounds i16, i16* %50, i64 %196
  store i16 0, i16* %203, align 2
  br label %207

204:                                              ; preds = %40
  %205 = add i64 %42, %25
  %206 = sub i64 %205, %41
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %41, i64 %206, i64 %42, i64 %42, i64 0, i64 %25, i16* %28) #11
  br label %207

207:                                              ; preds = %45, %202, %204
  %208 = load i8, i8* %30, align 1
  %209 = icmp slt i8 %208, 0
  %210 = load i64, i64* %17, align 8
  %211 = zext i8 %208 to i64
  %212 = select i1 %209, i64 %210, i64 %211
  %213 = icmp ult i64 %212, %3
  br i1 %213, label %214, label %412

214:                                              ; preds = %207
  %215 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #11
  %216 = sub i64 %3, %212
  call void @_ZN8printing31SimplifyDocumentTitleWithLengthERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %216)
  %217 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %218 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %217, i64 0, i32 1, i32 1
  %219 = load i8, i8* %218, align 1
  %220 = icmp slt i8 %219, 0
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load i16*, i16** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %224 = load i64, i64* %223, align 8
  %225 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %226 = zext i8 %219 to i64
  %227 = select i1 %220, i16* %222, i16* %225
  %228 = select i1 %220, i64 %224, i64 %226
  %229 = load i8, i8* %30, align 1
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %231, label %236

231:                                              ; preds = %214
  %232 = load i64, i64* %18, align 8
  %233 = and i64 %232, 9223372036854775807
  %234 = add nsw i64 %233, -1
  %235 = load i64, i64* %17, align 8
  br label %238

236:                                              ; preds = %214
  %237 = zext i8 %229 to i64
  br label %238

238:                                              ; preds = %236, %231
  %239 = phi i64 [ %234, %231 ], [ 10, %236 ]
  %240 = phi i64 [ %235, %231 ], [ %237, %236 ]
  %241 = sub i64 %239, %240
  %242 = icmp ult i64 %241, %228
  br i1 %242, label %402, label %243

243:                                              ; preds = %238
  %244 = icmp eq i64 %228, 0
  br i1 %244, label %405, label %245

245:                                              ; preds = %243
  %246 = load i16*, i16** %16, align 8
  %247 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %248 = select i1 %230, i16* %246, i16* %247
  %249 = getelementptr inbounds i16, i16* %248, i64 %240
  %250 = icmp ult i64 %228, 16
  br i1 %250, label %340, label %251

251:                                              ; preds = %245
  %252 = add i64 %228, %240
  %253 = getelementptr i16, i16* %248, i64 %252
  %254 = getelementptr i16, i16* %227, i64 %228
  %255 = icmp ult i16* %249, %254
  %256 = icmp ult i16* %227, %253
  %257 = and i1 %255, %256
  br i1 %257, label %340, label %258

258:                                              ; preds = %251
  %259 = and i64 %228, -16
  %260 = sub i64 %228, %259
  %261 = getelementptr i16, i16* %227, i64 %259
  %262 = getelementptr i16, i16* %249, i64 %259
  %263 = add i64 %259, -16
  %264 = lshr exact i64 %263, 4
  %265 = add nuw nsw i64 %264, 1
  %266 = and i64 %265, 3
  %267 = icmp ult i64 %263, 48
  br i1 %267, label %319, label %268

268:                                              ; preds = %258
  %269 = sub nsw i64 %265, %266
  br label %270

270:                                              ; preds = %270, %268
  %271 = phi i64 [ 0, %268 ], [ %316, %270 ]
  %272 = phi i64 [ %269, %268 ], [ %317, %270 ]
  %273 = getelementptr i16, i16* %227, i64 %271
  %274 = getelementptr i16, i16* %249, i64 %271
  %275 = bitcast i16* %273 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !39
  %277 = getelementptr i16, i16* %273, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  %279 = load <8 x i16>, <8 x i16>* %278, align 2, !alias.scope !39
  %280 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %280, align 2, !alias.scope !42, !noalias !39
  %281 = getelementptr i16, i16* %274, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %282, align 2, !alias.scope !42, !noalias !39
  %283 = or i64 %271, 16
  %284 = getelementptr i16, i16* %227, i64 %283
  %285 = getelementptr i16, i16* %249, i64 %283
  %286 = bitcast i16* %284 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !39
  %288 = getelementptr i16, i16* %284, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !39
  %291 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %291, align 2, !alias.scope !42, !noalias !39
  %292 = getelementptr i16, i16* %285, i64 8
  %293 = bitcast i16* %292 to <8 x i16>*
  store <8 x i16> %290, <8 x i16>* %293, align 2, !alias.scope !42, !noalias !39
  %294 = or i64 %271, 32
  %295 = getelementptr i16, i16* %227, i64 %294
  %296 = getelementptr i16, i16* %249, i64 %294
  %297 = bitcast i16* %295 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !39
  %299 = getelementptr i16, i16* %295, i64 8
  %300 = bitcast i16* %299 to <8 x i16>*
  %301 = load <8 x i16>, <8 x i16>* %300, align 2, !alias.scope !39
  %302 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %302, align 2, !alias.scope !42, !noalias !39
  %303 = getelementptr i16, i16* %296, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %301, <8 x i16>* %304, align 2, !alias.scope !42, !noalias !39
  %305 = or i64 %271, 48
  %306 = getelementptr i16, i16* %227, i64 %305
  %307 = getelementptr i16, i16* %249, i64 %305
  %308 = bitcast i16* %306 to <8 x i16>*
  %309 = load <8 x i16>, <8 x i16>* %308, align 2, !alias.scope !39
  %310 = getelementptr i16, i16* %306, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  %312 = load <8 x i16>, <8 x i16>* %311, align 2, !alias.scope !39
  %313 = bitcast i16* %307 to <8 x i16>*
  store <8 x i16> %309, <8 x i16>* %313, align 2, !alias.scope !42, !noalias !39
  %314 = getelementptr i16, i16* %307, i64 8
  %315 = bitcast i16* %314 to <8 x i16>*
  store <8 x i16> %312, <8 x i16>* %315, align 2, !alias.scope !42, !noalias !39
  %316 = add i64 %271, 64
  %317 = add i64 %272, -4
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %319, label %270, !llvm.loop !44

319:                                              ; preds = %270, %258
  %320 = phi i64 [ 0, %258 ], [ %316, %270 ]
  %321 = icmp eq i64 %266, 0
  br i1 %321, label %338, label %322

322:                                              ; preds = %319, %322
  %323 = phi i64 [ %335, %322 ], [ %320, %319 ]
  %324 = phi i64 [ %336, %322 ], [ %266, %319 ]
  %325 = getelementptr i16, i16* %227, i64 %323
  %326 = getelementptr i16, i16* %249, i64 %323
  %327 = bitcast i16* %325 to <8 x i16>*
  %328 = load <8 x i16>, <8 x i16>* %327, align 2, !alias.scope !39
  %329 = getelementptr i16, i16* %325, i64 8
  %330 = bitcast i16* %329 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !39
  %332 = bitcast i16* %326 to <8 x i16>*
  store <8 x i16> %328, <8 x i16>* %332, align 2, !alias.scope !42, !noalias !39
  %333 = getelementptr i16, i16* %326, i64 8
  %334 = bitcast i16* %333 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %334, align 2, !alias.scope !42, !noalias !39
  %335 = add i64 %323, 16
  %336 = add i64 %324, -1
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %322, !llvm.loop !45

338:                                              ; preds = %322, %319
  %339 = icmp eq i64 %228, %259
  br i1 %339, label %393, label %340

340:                                              ; preds = %338, %251, %245
  %341 = phi i64 [ %228, %251 ], [ %228, %245 ], [ %260, %338 ]
  %342 = phi i16* [ %227, %251 ], [ %227, %245 ], [ %261, %338 ]
  %343 = phi i16* [ %249, %251 ], [ %249, %245 ], [ %262, %338 ]
  %344 = add i64 %341, -1
  %345 = and i64 %341, 7
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %358, label %347

347:                                              ; preds = %340, %347
  %348 = phi i64 [ %353, %347 ], [ %341, %340 ]
  %349 = phi i16* [ %355, %347 ], [ %342, %340 ]
  %350 = phi i16* [ %354, %347 ], [ %343, %340 ]
  %351 = phi i64 [ %356, %347 ], [ %345, %340 ]
  %352 = load i16, i16* %349, align 2
  store i16 %352, i16* %350, align 2
  %353 = add i64 %348, -1
  %354 = getelementptr inbounds i16, i16* %350, i64 1
  %355 = getelementptr inbounds i16, i16* %349, i64 1
  %356 = add i64 %351, -1
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %358, label %347, !llvm.loop !46

358:                                              ; preds = %347, %340
  %359 = phi i64 [ %341, %340 ], [ %353, %347 ]
  %360 = phi i16* [ %342, %340 ], [ %355, %347 ]
  %361 = phi i16* [ %343, %340 ], [ %354, %347 ]
  %362 = icmp ult i64 %344, 7
  br i1 %362, label %393, label %363

363:                                              ; preds = %358, %363
  %364 = phi i64 [ %389, %363 ], [ %359, %358 ]
  %365 = phi i16* [ %391, %363 ], [ %360, %358 ]
  %366 = phi i16* [ %390, %363 ], [ %361, %358 ]
  %367 = load i16, i16* %365, align 2
  store i16 %367, i16* %366, align 2
  %368 = getelementptr inbounds i16, i16* %366, i64 1
  %369 = getelementptr inbounds i16, i16* %365, i64 1
  %370 = load i16, i16* %369, align 2
  store i16 %370, i16* %368, align 2
  %371 = getelementptr inbounds i16, i16* %366, i64 2
  %372 = getelementptr inbounds i16, i16* %365, i64 2
  %373 = load i16, i16* %372, align 2
  store i16 %373, i16* %371, align 2
  %374 = getelementptr inbounds i16, i16* %366, i64 3
  %375 = getelementptr inbounds i16, i16* %365, i64 3
  %376 = load i16, i16* %375, align 2
  store i16 %376, i16* %374, align 2
  %377 = getelementptr inbounds i16, i16* %366, i64 4
  %378 = getelementptr inbounds i16, i16* %365, i64 4
  %379 = load i16, i16* %378, align 2
  store i16 %379, i16* %377, align 2
  %380 = getelementptr inbounds i16, i16* %366, i64 5
  %381 = getelementptr inbounds i16, i16* %365, i64 5
  %382 = load i16, i16* %381, align 2
  store i16 %382, i16* %380, align 2
  %383 = getelementptr inbounds i16, i16* %366, i64 6
  %384 = getelementptr inbounds i16, i16* %365, i64 6
  %385 = load i16, i16* %384, align 2
  store i16 %385, i16* %383, align 2
  %386 = getelementptr inbounds i16, i16* %366, i64 7
  %387 = getelementptr inbounds i16, i16* %365, i64 7
  %388 = load i16, i16* %387, align 2
  store i16 %388, i16* %386, align 2
  %389 = add i64 %364, -8
  %390 = getelementptr inbounds i16, i16* %366, i64 8
  %391 = getelementptr inbounds i16, i16* %365, i64 8
  %392 = icmp eq i64 %389, 0
  br i1 %392, label %393, label %363, !llvm.loop !47

393:                                              ; preds = %358, %363, %338
  %394 = add i64 %240, %228
  %395 = load i8, i8* %30, align 1
  %396 = icmp slt i8 %395, 0
  br i1 %396, label %397, label %398

397:                                              ; preds = %393
  store i64 %394, i64* %17, align 8
  br label %400

398:                                              ; preds = %393
  %399 = trunc i64 %394 to i8
  store i8 %399, i8* %30, align 1
  br label %400

400:                                              ; preds = %398, %397
  %401 = getelementptr inbounds i16, i16* %248, i64 %394
  store i16 0, i16* %401, align 2
  br label %405

402:                                              ; preds = %238
  %403 = add i64 %240, %228
  %404 = sub i64 %403, %239
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %239, i64 %404, i64 %240, i64 %240, i64 0, i64 %228, i16* %227) #11
  br label %405

405:                                              ; preds = %243, %400, %402
  %406 = load i8, i8* %218, align 1
  %407 = icmp slt i8 %406, 0
  br i1 %407, label %408, label %411

408:                                              ; preds = %405
  %409 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %410 = load i8*, i8** %409, align 8
  call void @_ZdlPv(i8* %410) #13
  br label %411

411:                                              ; preds = %405, %408
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #11
  br label %412

412:                                              ; preds = %207, %411
  %413 = load i8, i8* %19, align 1
  %414 = icmp slt i8 %413, 0
  br i1 %414, label %415, label %418

415:                                              ; preds = %412
  %416 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %417 = load i8*, i8** %416, align 8
  call void @_ZdlPv(i8* %417) #13
  br label %418

418:                                              ; preds = %412, %415
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8printing21SimplifyDocumentTitleERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  tail call void @_ZN8printing31SimplifyDocumentTitleWithLengthERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 80)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8printing28FormatDocumentTitleWithOwnerERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  tail call void @_ZN8printing37FormatDocumentTitleWithOwnerAndLengthERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_m(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 80)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8printing36GetDefaultPaperSizeFromLocaleMicronsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::basic_string.3", align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = icmp eq i64 %1, 0
  br i1 %8, label %70, label %9

9:                                                ; preds = %2
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 0, i32* %3, align 4
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  store i32 0, i32* %4, align 4
  %12 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #11
  store i32 0, i32* %5, align 4
  %13 = bitcast %"class.std::__1::basic_string.3"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = icmp ugt i64 %1, -17
  br i1 %14, label %15, label %17

15:                                               ; preds = %9
  %16 = bitcast %"class.std::__1::basic_string.3"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %16) #12
  unreachable

17:                                               ; preds = %9
  %18 = icmp ult i64 %1, 23
  br i1 %18, label %28, label %19

19:                                               ; preds = %17
  %20 = add nuw i64 %1, 16
  %21 = and i64 %20, -16
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8, !alias.scope !48
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8, !alias.scope !48
  %26 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1, i64* %26, align 8, !alias.scope !48
  %27 = bitcast %"class.std::__1::basic_string.3"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %32

28:                                               ; preds = %17
  %29 = trunc i64 %1 to i8
  %30 = bitcast %"class.std::__1::basic_string.3"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1, !alias.scope !48
  br label %32

32:                                               ; preds = %19, %28
  %33 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %27, %19 ], [ %30, %28 ]
  %34 = phi i8* [ %22, %19 ], [ %13, %28 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 %0, i64 %1, i1 false) #11
  %35 = getelementptr inbounds i8, i8* %34, i64 %1
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = select i1 %38, i8* %40, i8* %13
  call void @ulocdata_getPaperSize_69(i8* %41, i32* nonnull %4, i32* nonnull %3, i32* nonnull %5) #11
  %42 = load i8, i8* %36, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %32
  %45 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %45) #13
  br label %46

46:                                               ; preds = %32, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  %47 = load i32, i32* %5, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %58

49:                                               ; preds = %46
  %50 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #11
  br i1 %50, label %51, label %67

51:                                               ; preds = %49
  %52 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %52) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i32 88, i32 1) #11
  %53 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %54 = bitcast %"class.std::__1::basic_ostringstream"* %53 to %"class.std::__1::basic_ostream"*
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %54, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.14, i64 0, i64 0), i64 57) #11
  %56 = load i32, i32* %5, align 4
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %55, i32 %56) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %52) #11
  br label %67

58:                                               ; preds = %46
  %59 = load i32, i32* %3, align 4
  %60 = mul nsw i32 %59, 1000
  %61 = load i32, i32* %4, align 4
  %62 = mul nsw i32 %61, 1000
  %63 = icmp sgt i32 %60, 0
  %64 = select i1 %63, i32 %60, i32 0
  %65 = icmp sgt i32 %62, 0
  %66 = select i1 %65, i32 %62, i32 0
  br label %67

67:                                               ; preds = %51, %49, %58
  %68 = phi i32 [ %64, %58 ], [ 210000, %49 ], [ 210000, %51 ]
  %69 = phi i32 [ %66, %58 ], [ 297000, %49 ], [ 297000, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  br label %70

70:                                               ; preds = %2, %67
  %71 = phi i32 [ %68, %67 ], [ 210000, %2 ]
  %72 = phi i32 [ %69, %67 ], [ 297000, %2 ]
  %73 = zext i32 %72 to i64
  %74 = shl nuw i64 %73, 32
  %75 = zext i32 %71 to i64
  %76 = or i64 %74, %75
  ret i64 %76
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @ulocdata_getPaperSize_69(i8*, i32*, i32*, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN8printing23SizesEqualWithinEpsilonERKN3gfx4SizeES3_i(%"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br label %22

14:                                               ; preds = %3, %7
  %15 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %39, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %11, %18
  %23 = phi i32 [ %13, %11 ], [ %16, %18 ]
  %24 = sub nsw i32 %5, %23
  %25 = icmp slt i32 %24, 0
  %26 = sub nsw i32 0, %24
  %27 = select i1 %25, i32 %26, i32 %24
  %28 = icmp sgt i32 %27, %2
  br i1 %28, label %39, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = sub nsw i32 %31, %33
  %35 = icmp slt i32 %34, 0
  %36 = sub nsw i32 0, %34
  %37 = select i1 %35, i32 %36, i32 %34
  %38 = icmp sle i32 %37, %2
  br label %39

39:                                               ; preds = %14, %29, %22, %18
  %40 = phi i1 [ true, %18 ], [ false, %22 ], [ %38, %29 ], [ true, %14 ]
  ret i1 %40
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #12
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #12
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #13
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !51
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !51
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !54, !noalias !51
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !54, !noalias !51
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !51
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !51
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !54, !noalias !51
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !54, !noalias !51
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !51
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !51
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !54, !noalias !51
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !54, !noalias !51
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !51
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !51
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !54, !noalias !51
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !54, !noalias !51
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !56

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !51
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !51
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !54, !noalias !51
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !54, !noalias !51
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !57

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !58

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !59

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !60

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !61

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !62

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !64
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !64
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !67, !noalias !64
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !67, !noalias !64
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !64
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !64
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !67, !noalias !64
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !67, !noalias !64
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !64
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !64
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !67, !noalias !64
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !67, !noalias !64
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !64
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !64
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !67, !noalias !64
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !67, !noalias !64
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !69

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !64
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !64
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !67, !noalias !64
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !67, !noalias !64
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !70

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !71

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !72

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #13
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !73
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string.3", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string.3"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string.3"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string.3"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string.3"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !8}
!30 = !{!31}
!31 = distinct !{!31, !32}
!32 = distinct !{!32, !"LVerDomain"}
!33 = !{!34}
!34 = distinct !{!34, !32}
!35 = distinct !{!35, !8}
!36 = distinct !{!36, !10}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !8}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !8}
!45 = distinct !{!45, !10}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !8}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!50 = distinct !{!50, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !8}
!57 = distinct !{!57, !10}
!58 = distinct !{!58, !10}
!59 = distinct !{!59, !8}
!60 = distinct !{!60, !8}
!61 = distinct !{!61, !10}
!62 = distinct !{!62, !63, !8}
!63 = !{!"llvm.loop.unroll.runtime.disable"}
!64 = !{!65}
!65 = distinct !{!65, !66}
!66 = distinct !{!66, !"LVerDomain"}
!67 = !{!68}
!68 = distinct !{!68, !66}
!69 = distinct !{!69, !8}
!70 = distinct !{!70, !10}
!71 = distinct !{!71, !10}
!72 = distinct !{!72, !8}
!73 = !{i8 0, i8 2}
