; ModuleID = '../../v8/src/base/utils/random-number-generator.cc'
source_filename = "../../v8/src/base/utils/random-number-generator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::aligned_storage<40, 8>::type" = type { [40 x i8] }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.18", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { float }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, i64 }

$_ZN2v84base16LazyInstanceImplINS0_5MutexENS0_32StaticallyAllocatedInstanceTraitIS2_EENS0_21DefaultConstructTraitIS2_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS2_EEE12InitInstanceEPv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE = comdat any

$_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE25__emplace_unique_key_argsImJRKmEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeImPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE8__rehashEm = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@_ZN2v84baseL14entropy_sourceE = internal unnamed_addr global i1 (i8*, i64)* null, align 8
@.str = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"n <= max\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"x < max\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"max - excluded.size() >= n\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"x < result.size()\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"state0_ != 0 || state1_ != 0\00", align 1
@_ZN2v84baseL13entropy_mutexE = internal global { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" } { { { i8 } } zeroinitializer, [7 x i8] undef, %"struct.std::__1::aligned_storage<40, 8>::type" zeroinitializer }, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8

@_ZN2v84base21RandomNumberGeneratorC1Ev = hidden unnamed_addr alias void (%"class.v8::base::RandomNumberGenerator"*), void (%"class.v8::base::RandomNumberGenerator"*)* @_ZN2v84base21RandomNumberGeneratorC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v84base21RandomNumberGenerator16SetEntropySourceEPFbPhmE(i1 (i8*, i64)*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function", align 8
  %3 = bitcast %"class.std::__1::function"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #12
  %4 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v84baseL13entropy_mutexE, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %5 = icmp eq i8 %4, 2
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %7, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %8, align 8
  %9 = bitcast %"class.std::__1::function"* %2 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS0_5MutexENS0_32StaticallyAllocatedInstanceTraitIS2_EENS0_21DefaultConstructTraitIS2_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS2_EEE12InitInstanceEPv, void (i8*)** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast [8 x i8]* %10 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v84baseL13entropy_mutexE, i64 0, i32 2, i32 0, i64 0), i8** %11, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v84baseL13entropy_mutexE to %"struct.std::__1::atomic"*), %"class.std::__1::function"* nonnull %2) #12
  %12 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 1
  %14 = load void (i8*)*, void (i8*)** %13, align 8
  %15 = icmp eq void (i8*)* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void %14(i8* %18) #12
  br label %19

19:                                               ; preds = %1, %6, %16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #12
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* bitcast (%"struct.std::__1::aligned_storage<40, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v84baseL13entropy_mutexE, i64 0, i32 2) to %"class.v8::base::Mutex"*)) #12
  store i1 (i8*, i64)* %0, i1 (i8*, i64)** @_ZN2v84baseL14entropy_sourceE, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* bitcast (%"struct.std::__1::aligned_storage<40, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v84baseL13entropy_mutexE, i64 0, i32 2) to %"class.v8::base::Mutex"*)) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v84base21RandomNumberGeneratorC2Ev(%"class.v8::base::RandomNumberGenerator"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function", align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = bitcast %"class.std::__1::function"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #12
  %6 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v84baseL13entropy_mutexE, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %7 = icmp eq i8 %6, 2
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %9, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %10, align 8
  %11 = bitcast %"class.std::__1::function"* %2 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS0_5MutexENS0_32StaticallyAllocatedInstanceTraitIS2_EENS0_21DefaultConstructTraitIS2_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS2_EEE12InitInstanceEPv, void (i8*)** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast [8 x i8]* %12 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v84baseL13entropy_mutexE, i64 0, i32 2, i32 0, i64 0), i8** %13, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v84baseL13entropy_mutexE to %"struct.std::__1::atomic"*), %"class.std::__1::function"* nonnull %2) #12
  %14 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %10, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %14, i64 0, i32 1
  %16 = load void (i8*)*, void (i8*)** %15, align 8
  %17 = icmp eq void (i8*)* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void %16(i8* %20) #12
  br label %21

21:                                               ; preds = %1, %8, %18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #12
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* bitcast (%"struct.std::__1::aligned_storage<40, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v84baseL13entropy_mutexE, i64 0, i32 2) to %"class.v8::base::Mutex"*)) #12
  %22 = load i1 (i8*, i64)*, i1 (i8*, i64)** @_ZN2v84baseL14entropy_sourceE, align 8
  %23 = icmp eq i1 (i8*, i64)* %22, null
  br i1 %23, label %54, label %24

24:                                               ; preds = %21
  %25 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  %26 = call zeroext i1 %22(i8* nonnull %25, i64 8) #12
  br i1 %26, label %28, label %27

27:                                               ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  br label %54

28:                                               ; preds = %24
  %29 = load i64, i64* %3, align 8
  %30 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 0
  store i64 %29, i64* %30, align 8
  %31 = lshr i64 %29, 33
  %32 = xor i64 %31, %29
  %33 = mul i64 %32, -49064778989728563
  %34 = lshr i64 %33, 33
  %35 = xor i64 %34, %33
  %36 = mul i64 %35, -4265267296055464877
  %37 = lshr i64 %36, 33
  %38 = xor i64 %37, %36
  %39 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 1
  store i64 %38, i64* %39, align 8
  %40 = xor i64 %38, -1
  %41 = lshr i64 %40, 33
  %42 = xor i64 %41, %40
  %43 = mul i64 %42, -49064778989728563
  %44 = lshr i64 %43, 33
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -4265267296055464877
  %47 = lshr i64 %46, 33
  %48 = xor i64 %47, %46
  %49 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 2
  store i64 %48, i64* %49, align 8
  %50 = or i64 %48, %38
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %28
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0)) #13
  unreachable

53:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* bitcast (%"struct.std::__1::aligned_storage<40, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v84baseL13entropy_mutexE, i64 0, i32 2) to %"class.v8::base::Mutex"*)) #12
  br label %121

54:                                               ; preds = %27, %21
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* bitcast (%"struct.std::__1::aligned_storage<40, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v84baseL13entropy_mutexE, i64 0, i32 2) to %"class.v8::base::Mutex"*)) #12
  %55 = call %struct._IO_FILE* @fopen64(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #12
  %56 = icmp eq %struct._IO_FILE* %55, null
  br i1 %56, label %89, label %57

57:                                               ; preds = %54
  %58 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  %59 = call i64 @fread(i8* nonnull %58, i64 8, i64 1, %struct._IO_FILE* nonnull %55)
  %60 = call i32 @fclose(%struct._IO_FILE* nonnull %55) #12
  %61 = icmp eq i64 %59, 1
  br i1 %61, label %62, label %88

62:                                               ; preds = %57
  %63 = load i64, i64* %4, align 8
  %64 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 0
  store i64 %63, i64* %64, align 8
  %65 = lshr i64 %63, 33
  %66 = xor i64 %65, %63
  %67 = mul i64 %66, -49064778989728563
  %68 = lshr i64 %67, 33
  %69 = xor i64 %68, %67
  %70 = mul i64 %69, -4265267296055464877
  %71 = lshr i64 %70, 33
  %72 = xor i64 %71, %70
  %73 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 1
  store i64 %72, i64* %73, align 8
  %74 = xor i64 %72, -1
  %75 = lshr i64 %74, 33
  %76 = xor i64 %75, %74
  %77 = mul i64 %76, -49064778989728563
  %78 = lshr i64 %77, 33
  %79 = xor i64 %78, %77
  %80 = mul i64 %79, -4265267296055464877
  %81 = lshr i64 %80, 33
  %82 = xor i64 %81, %80
  %83 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 2
  store i64 %82, i64* %83, align 8
  %84 = or i64 %82, %72
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %62
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0)) #13
  unreachable

87:                                               ; preds = %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #12
  br label %121

88:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #12
  br label %89

89:                                               ; preds = %88, %54
  %90 = call i64 @_ZN2v84base4Time17NowFromSystemTimeEv() #12
  %91 = shl i64 %90, 24
  %92 = call i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() #12
  %93 = shl i64 %92, 16
  %94 = xor i64 %93, %91
  %95 = call i64 @_ZN2v84base9TimeTicks3NowEv() #12
  %96 = shl i64 %95, 8
  %97 = xor i64 %94, %96
  %98 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 0
  store i64 %97, i64* %98, align 8
  %99 = lshr i64 %97, 33
  %100 = xor i64 %99, %97
  %101 = mul i64 %100, -49064778989728563
  %102 = lshr i64 %101, 33
  %103 = xor i64 %102, %101
  %104 = mul i64 %103, -4265267296055464877
  %105 = lshr i64 %104, 33
  %106 = xor i64 %105, %104
  %107 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 1
  store i64 %106, i64* %107, align 8
  %108 = xor i64 %106, -1
  %109 = lshr i64 %108, 33
  %110 = xor i64 %109, %108
  %111 = mul i64 %110, -49064778989728563
  %112 = lshr i64 %111, 33
  %113 = xor i64 %112, %111
  %114 = mul i64 %113, -4265267296055464877
  %115 = lshr i64 %114, 33
  %116 = xor i64 %115, %114
  %117 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 2
  store i64 %116, i64* %117, align 8
  %118 = or i64 %116, %106
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %121, !prof !2

120:                                              ; preds = %89
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0)) #13
  unreachable

121:                                              ; preds = %89, %53, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v84base21RandomNumberGenerator7SetSeedEl(%"class.v8::base::RandomNumberGenerator"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = lshr i64 %1, 33
  %5 = xor i64 %4, %1
  %6 = mul i64 %5, -49064778989728563
  %7 = lshr i64 %6, 33
  %8 = xor i64 %7, %6
  %9 = mul i64 %8, -4265267296055464877
  %10 = lshr i64 %9, 33
  %11 = xor i64 %10, %9
  %12 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 1
  store i64 %11, i64* %12, align 8
  %13 = xor i64 %11, -1
  %14 = lshr i64 %13, 33
  %15 = xor i64 %14, %13
  %16 = mul i64 %15, -49064778989728563
  %17 = lshr i64 %16, 33
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -4265267296055464877
  %20 = lshr i64 %19, 33
  %21 = xor i64 %20, %19
  %22 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 2
  store i64 %21, i64* %22, align 8
  %23 = or i64 %21, %11
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0)) #13
  unreachable

26:                                               ; preds = %2
  ret void
}

; Function Attrs: nofree nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #2

declare i64 @_ZN2v84base4Time17NowFromSystemTimeEv() local_unnamed_addr #3

declare i64 @_ZN2v84base9TimeTicks17HighResolutionNowEv() local_unnamed_addr #3

declare i64 @_ZN2v84base9TimeTicks3NowEv() local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @_ZN2v84base21RandomNumberGenerator7NextIntEi(%"class.v8::base::RandomNumberGenerator"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = icmp sgt i32 %1, 0
  %4 = tail call i32 @llvm.ctpop.i32(i32 %1) #12, !range !3
  %5 = icmp ult i32 %4, 2
  %6 = and i1 %3, %5
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 2
  %10 = add nsw i32 %1, -1
  %11 = load i64, i64* %8, align 8
  %12 = load i64, i64* %9, align 8
  br label %31

13:                                               ; preds = %2
  %14 = sext i32 %1 to i64
  %15 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 2
  %17 = load i64, i64* %15, align 8
  %18 = load i64, i64* %16, align 8
  store i64 %18, i64* %15, align 8
  %19 = shl i64 %17, 23
  %20 = xor i64 %19, %17
  %21 = lshr i64 %20, 17
  %22 = lshr i64 %18, 26
  %23 = xor i64 %20, %18
  %24 = xor i64 %23, %22
  %25 = xor i64 %24, %21
  store i64 %25, i64* %16, align 8
  %26 = add i64 %25, %18
  %27 = lshr i64 %26, 33
  %28 = mul nsw i64 %27, %14
  %29 = lshr i64 %28, 31
  %30 = trunc i64 %29 to i32
  br label %49

31:                                               ; preds = %7, %31
  %32 = phi i64 [ %40, %31 ], [ %12, %7 ]
  %33 = phi i64 [ %32, %31 ], [ %11, %7 ]
  %34 = shl i64 %33, 23
  %35 = xor i64 %34, %33
  %36 = lshr i64 %35, 17
  %37 = lshr i64 %32, 26
  %38 = xor i64 %35, %32
  %39 = xor i64 %38, %37
  %40 = xor i64 %39, %36
  %41 = add i64 %40, %32
  %42 = lshr i64 %41, 33
  %43 = trunc i64 %42 to i32
  %44 = srem i32 %43, %1
  %45 = add nuw i32 %44, 2147483647
  %46 = sub nuw i32 %45, %43
  %47 = icmp slt i32 %46, %10
  br i1 %47, label %31, label %48

48:                                               ; preds = %31
  store i64 %32, i64* %8, align 8
  store i64 %40, i64* %9, align 8
  br label %49

49:                                               ; preds = %48, %13
  %50 = phi i32 [ %30, %13 ], [ %44, %48 ]
  ret i32 %50
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2v84base21RandomNumberGenerator4NextEi(%"class.v8::base::RandomNumberGenerator"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 2
  %5 = load i64, i64* %3, align 8
  %6 = load i64, i64* %4, align 8
  store i64 %6, i64* %3, align 8
  %7 = shl i64 %5, 23
  %8 = xor i64 %7, %5
  %9 = lshr i64 %8, 17
  %10 = lshr i64 %6, 26
  %11 = xor i64 %8, %6
  %12 = xor i64 %11, %10
  %13 = xor i64 %12, %9
  store i64 %13, i64* %4, align 8
  %14 = add i64 %13, %6
  %15 = sub nsw i32 64, %1
  %16 = zext i32 %15 to i64
  %17 = lshr i64 %14, %16
  %18 = trunc i64 %17 to i32
  ret i32 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden double @_ZN2v84base21RandomNumberGenerator10NextDoubleEv(%"class.v8::base::RandomNumberGenerator"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 2
  %4 = load i64, i64* %2, align 8
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %2, align 8
  %6 = shl i64 %4, 23
  %7 = xor i64 %6, %4
  %8 = lshr i64 %7, 17
  %9 = lshr i64 %5, 26
  %10 = xor i64 %7, %5
  %11 = xor i64 %10, %9
  %12 = xor i64 %11, %8
  store i64 %12, i64* %3, align 8
  %13 = lshr i64 %5, 12
  %14 = or i64 %13, 4607182418800017408
  %15 = bitcast i64 %14 to double
  %16 = fadd double %15, -1.000000e+00
  ret double %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v84base21RandomNumberGenerator9NextInt64Ev(%"class.v8::base::RandomNumberGenerator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 2
  %4 = load i64, i64* %2, align 8
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %2, align 8
  %6 = shl i64 %4, 23
  %7 = xor i64 %6, %4
  %8 = lshr i64 %7, 17
  %9 = lshr i64 %5, 26
  %10 = xor i64 %7, %5
  %11 = xor i64 %10, %9
  %12 = xor i64 %11, %8
  store i64 %12, i64* %3, align 8
  %13 = add i64 %12, %5
  ret i64 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v84base21RandomNumberGenerator9NextBytesEPvm(%"class.v8::base::RandomNumberGenerator"* nocapture, i8* nocapture, i64) local_unnamed_addr #5 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %0, i64 0, i32 2
  br label %9

8:                                                ; preds = %9, %3
  ret void

9:                                                ; preds = %9, %5
  %10 = phi i64 [ 0, %5 ], [ %24, %9 ]
  %11 = load i64, i64* %6, align 8
  %12 = load i64, i64* %7, align 8
  store i64 %12, i64* %6, align 8
  %13 = shl i64 %11, 23
  %14 = xor i64 %13, %11
  %15 = lshr i64 %14, 17
  %16 = lshr i64 %12, 26
  %17 = xor i64 %14, %12
  %18 = xor i64 %17, %16
  %19 = xor i64 %18, %15
  store i64 %19, i64* %7, align 8
  %20 = add i64 %19, %12
  %21 = lshr i64 %20, 56
  %22 = trunc i64 %21 to i8
  %23 = getelementptr inbounds i8, i8* %1, i64 %10
  store i8 %22, i8* %23, align 1
  %24 = add nuw i64 %10, 1
  %25 = icmp eq i64 %24, %2
  br i1 %25, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v84base21RandomNumberGenerator10NextSampleEmm(%"class.std::__1::vector"* noalias sret, %"class.v8::base::RandomNumberGenerator"* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unordered_set", align 8
  %6 = alloca i64, align 8
  %7 = icmp ult i64 %2, %3
  br i1 %7, label %8, label %9, !prof !2

8:                                                ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

9:                                                ; preds = %4
  %10 = icmp eq i64 %3, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #12
  br label %265

13:                                               ; preds = %9
  %14 = sub i64 %2, %3
  %15 = icmp ugt i64 %14, %3
  %16 = select i1 %15, i64 %3, i64 %14
  %17 = bitcast %"class.std::__1::unordered_set"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %5, i64 0, i32 0, i32 3
  %19 = bitcast %"class.std::__1::__compressed_pair.18"* %18 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = icmp eq i64 %16, 0
  br i1 %21, label %55, label %22

22:                                               ; preds = %13
  %23 = bitcast i64* %6 to i8*
  %24 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %1, i64 0, i32 1
  %25 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %1, i64 0, i32 2
  %26 = uitofp i64 %2 to double
  %27 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %5, i64 0, i32 0
  br label %28

28:                                               ; preds = %22, %47
  %29 = phi i64 [ 0, %22 ], [ %49, %47 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  %30 = load i64, i64* %24, align 8
  %31 = load i64, i64* %25, align 8
  store i64 %31, i64* %24, align 8
  %32 = shl i64 %30, 23
  %33 = xor i64 %32, %30
  %34 = lshr i64 %33, 17
  %35 = lshr i64 %31, 26
  %36 = xor i64 %33, %31
  %37 = xor i64 %36, %35
  %38 = xor i64 %37, %34
  store i64 %38, i64* %25, align 8
  %39 = lshr i64 %31, 12
  %40 = or i64 %39, 4607182418800017408
  %41 = bitcast i64 %40 to double
  %42 = fadd double %41, -1.000000e+00
  %43 = fmul double %42, %26
  %44 = fptoui double %43 to i64
  store i64 %44, i64* %6, align 8
  %45 = icmp ult i64 %44, %2
  br i1 %45, label %47, label %46, !prof !4

46:                                               ; preds = %28
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)) #13
  unreachable

47:                                               ; preds = %28
  %48 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE25__emplace_unique_key_argsImJRKmEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeImPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* nonnull %27, i64* nonnull dereferenceable(8) %6, i64* nonnull dereferenceable(8) %6) #12
  %49 = add i64 %29, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  %50 = load i64, i64* %20, align 8
  %51 = icmp ne i64 %50, %16
  %52 = udiv i64 %49, 3
  %53 = icmp ult i64 %52, %16
  %54 = and i1 %51, %53
  br i1 %54, label %28, label %55

55:                                               ; preds = %47, %13
  %56 = phi i64 [ 0, %13 ], [ %50, %47 ]
  %57 = icmp eq i64 %56, %16
  br i1 %57, label %58, label %247

58:                                               ; preds = %55
  %59 = icmp ult i64 %14, %3
  br i1 %59, label %60, label %207

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #12, !alias.scope !5
  %62 = sub i64 %2, %16
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast i64** %63 to i64*
  %65 = bitcast %"class.std::__1::vector"* %0 to i64*
  %66 = icmp eq i64 %62, 0
  br i1 %66, label %80, label %67

67:                                               ; preds = %60
  %68 = icmp ugt i64 %62, 2305843009213693951
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  call void @abort() #13
  unreachable

70:                                               ; preds = %67
  %71 = shl i64 %62, 3
  %72 = call i8* @_Znwm(i64 %71) #14
  %73 = bitcast i8* %72 to i64*
  %74 = getelementptr inbounds i64, i64* %73, i64 %62
  %75 = ptrtoint i64* %74 to i64
  %76 = insertelement <2 x i8*> undef, i8* %72, i32 0
  %77 = shufflevector <2 x i8*> %76, <2 x i8*> undef, <2 x i32> zeroinitializer
  %78 = ptrtoint <2 x i8*> %77 to <2 x i64>
  %79 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %79, align 8
  store i64 %75, i64* %64, align 8
  br label %80

80:                                               ; preds = %70, %60
  %81 = icmp eq i64 %2, 0
  br i1 %81, label %248, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %86 = bitcast i64** %85 to i64*
  br label %87

87:                                               ; preds = %204, %82
  %88 = phi i64 [ %205, %204 ], [ 0, %82 ]
  %89 = load i64, i64* %83, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %153, label %91

91:                                               ; preds = %87
  %92 = call i64 @llvm.ctpop.i64(i64 %89) #12, !range !8
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %91
  %95 = add i64 %89, -1
  %96 = and i64 %95, %88
  br label %101

97:                                               ; preds = %91
  %98 = icmp ult i64 %88, %89
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %88, %89
  br label %101

101:                                              ; preds = %99, %97, %94
  %102 = phi i64 [ %96, %94 ], [ %100, %99 ], [ %88, %97 ]
  %103 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %84, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %103, i64 %102
  %105 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base"* %105, null
  br i1 %106, label %153, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %153, label %111

111:                                              ; preds = %107
  %112 = add i64 %89, -1
  br i1 %93, label %113, label %135

113:                                              ; preds = %111, %131
  %114 = phi %"struct.std::__1::__hash_node_base"* [ %133, %131 ], [ %109, %111 ]
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 1
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = icmp eq i64 %88, %117
  br i1 %118, label %126, label %119

119:                                              ; preds = %113
  %120 = icmp ult i64 %117, %89
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = urem i64 %117, %89
  br label %123

123:                                              ; preds = %121, %119
  %124 = phi i64 [ %122, %121 ], [ %117, %119 ]
  %125 = icmp eq i64 %124, %102
  br i1 %125, label %131, label %153

126:                                              ; preds = %113
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 2
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %129, %88
  br i1 %130, label %204, label %131

131:                                              ; preds = %126, %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base"* %133, null
  br i1 %134, label %153, label %113

135:                                              ; preds = %111, %149
  %136 = phi %"struct.std::__1::__hash_node_base"* [ %151, %149 ], [ %109, %111 ]
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %136, i64 1
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = icmp eq i64 %88, %139
  br i1 %140, label %144, label %141

141:                                              ; preds = %135
  %142 = and i64 %139, %112
  %143 = icmp eq i64 %142, %102
  br i1 %143, label %149, label %153

144:                                              ; preds = %135
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %136, i64 2
  %146 = bitcast %"struct.std::__1::__hash_node_base"* %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = icmp eq i64 %147, %88
  br i1 %148, label %204, label %149

149:                                              ; preds = %144, %141
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %136, i64 0, i32 0
  %151 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %150, align 8
  %152 = icmp eq %"struct.std::__1::__hash_node_base"* %151, null
  br i1 %152, label %153, label %135

153:                                              ; preds = %149, %141, %131, %123, %101, %87, %107
  %154 = load i64*, i64** %85, align 8
  %155 = load i64*, i64** %63, align 8
  %156 = icmp eq i64* %154, %155
  %157 = ptrtoint i64* %155 to i64
  br i1 %156, label %161, label %158

158:                                              ; preds = %153
  store i64 %88, i64* %154, align 8
  %159 = getelementptr inbounds i64, i64* %154, i64 1
  %160 = ptrtoint i64* %159 to i64
  store i64 %160, i64* %86, align 8
  br label %204

161:                                              ; preds = %153
  %162 = ptrtoint i64* %154 to i64
  %163 = load i64, i64* %65, align 8
  %164 = sub i64 %162, %163
  %165 = ashr exact i64 %164, 3
  %166 = add nsw i64 %165, 1
  %167 = icmp ugt i64 %166, 2305843009213693951
  br i1 %167, label %168, label %170

168:                                              ; preds = %161
  %169 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %169) #13
  unreachable

170:                                              ; preds = %161
  %171 = sub i64 %157, %163
  %172 = ashr exact i64 %171, 3
  %173 = icmp ult i64 %172, 1152921504606846975
  br i1 %173, label %174, label %182

174:                                              ; preds = %170
  %175 = ashr exact i64 %171, 2
  %176 = icmp ult i64 %175, %166
  %177 = select i1 %176, i64 %166, i64 %175
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %187, label %179

179:                                              ; preds = %174
  %180 = icmp ugt i64 %177, 2305843009213693951
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  call void @abort() #13
  unreachable

182:                                              ; preds = %179, %170
  %183 = phi i64 [ %177, %179 ], [ 2305843009213693951, %170 ]
  %184 = shl i64 %183, 3
  %185 = call i8* @_Znwm(i64 %184) #14
  %186 = bitcast i8* %185 to i64*
  br label %187

187:                                              ; preds = %182, %174
  %188 = phi i64 [ %183, %182 ], [ 0, %174 ]
  %189 = phi i8* [ %185, %182 ], [ null, %174 ]
  %190 = phi i64* [ %186, %182 ], [ null, %174 ]
  %191 = getelementptr inbounds i64, i64* %190, i64 %165
  %192 = getelementptr inbounds i64, i64* %190, i64 %188
  %193 = ptrtoint i64* %192 to i64
  store i64 %88, i64* %191, align 8
  %194 = getelementptr inbounds i64, i64* %191, i64 1
  %195 = ptrtoint i64* %194 to i64
  %196 = ptrtoint i64* %190 to i64
  %197 = icmp sgt i64 %164, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %187
  %199 = inttoptr i64 %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* align 8 %199, i64 %164, i1 false) #12
  br label %200

200:                                              ; preds = %198, %187
  store i64 %196, i64* %65, align 8
  store i64 %195, i64* %86, align 8
  store i64 %193, i64* %64, align 8
  %201 = icmp eq i64 %163, 0
  br i1 %201, label %204, label %202

202:                                              ; preds = %200
  %203 = inttoptr i64 %163 to i8*
  call void @_ZdlPv(i8* %203) #14
  br label %204

204:                                              ; preds = %144, %126, %202, %200, %158
  %205 = add nuw i64 %88, 1
  %206 = icmp eq i64 %205, %2
  br i1 %206, label %248, label %87

207:                                              ; preds = %58
  %208 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %209 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %208, align 8
  %210 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 0, i64 24, i1 false) #12
  %211 = icmp eq %"struct.std::__1::__hash_node_base"* %209, null
  br i1 %211, label %248, label %212

212:                                              ; preds = %207
  %213 = ptrtoint %"struct.std::__1::__hash_node_base"* %209 to i64
  br label %214

214:                                              ; preds = %214, %212
  %215 = phi i64 [ %217, %214 ], [ 0, %212 ]
  %216 = phi i64 [ %219, %214 ], [ %213, %212 ]
  %217 = add nuw nsw i64 %215, 1
  %218 = inttoptr i64 %216 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %221, label %214

221:                                              ; preds = %214
  %222 = icmp ugt i64 %215, 2305843009213693950
  br i1 %222, label %223, label %225

223:                                              ; preds = %221
  %224 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %224) #13
  unreachable

225:                                              ; preds = %221
  %226 = shl i64 %217, 3
  %227 = call i8* @_Znwm(i64 %226) #14
  %228 = bitcast i8* %227 to i64*
  %229 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %230 = bitcast i64** %229 to i8**
  store i8* %227, i8** %230, align 8
  %231 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %227, i8** %231, align 8
  %232 = getelementptr inbounds i64, i64* %228, i64 %217
  %233 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %232, i64** %233, align 8
  br label %234

234:                                              ; preds = %234, %225
  %235 = phi i64* [ %242, %234 ], [ %228, %225 ]
  %236 = phi i64 [ %241, %234 ], [ %213, %225 ]
  %237 = inttoptr i64 %236 to %"struct.std::__1::__hash_node"*
  %238 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %237, i64 0, i32 2
  %239 = load i64, i64* %238, align 8
  store i64 %239, i64* %235, align 8
  %240 = inttoptr i64 %236 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = getelementptr inbounds i64, i64* %235, i64 1
  %243 = icmp eq i64 %241, 0
  br i1 %243, label %244, label %234

244:                                              ; preds = %234
  %245 = bitcast i64** %229 to i64*
  %246 = ptrtoint i64* %242 to i64
  store i64 %246, i64* %245, align 8
  br label %248

247:                                              ; preds = %55
  call void @_ZN2v84base21RandomNumberGenerator14NextSampleSlowEmmRKNSt3__113unordered_setImNS2_4hashImEENS2_8equal_toImEENS2_9allocatorImEEEE(%"class.std::__1::vector"* sret %0, %"class.v8::base::RandomNumberGenerator"* %1, i64 %2, i64 %3, %"class.std::__1::unordered_set"* nonnull dereferenceable(40) %5)
  br label %248

248:                                              ; preds = %204, %244, %207, %80, %247
  %249 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %250 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %249, align 8
  %251 = icmp eq %"struct.std::__1::__hash_node_base"* %250, null
  br i1 %251, label %258, label %252

252:                                              ; preds = %248, %252
  %253 = phi %"struct.std::__1::__hash_node_base"* [ %255, %252 ], [ %250, %248 ]
  %254 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %253, i64 0, i32 0
  %255 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %254, align 8
  %256 = bitcast %"struct.std::__1::__hash_node_base"* %253 to i8*
  call void @_ZdlPv(i8* %256) #14
  %257 = icmp eq %"struct.std::__1::__hash_node_base"* %255, null
  br i1 %257, label %258, label %252

258:                                              ; preds = %252, %248
  %259 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %259, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %259, align 8
  %261 = icmp eq %"struct.std::__1::__hash_node_base"** %260, null
  br i1 %261, label %264, label %262

262:                                              ; preds = %258
  %263 = bitcast %"struct.std::__1::__hash_node_base"** %260 to i8*
  call void @_ZdlPv(i8* %263) #14
  br label %264

264:                                              ; preds = %258, %262
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #12
  br label %265

265:                                              ; preds = %264, %11
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v84base21RandomNumberGenerator14NextSampleSlowEmmRKNSt3__113unordered_setImNS2_4hashImEENS2_8equal_toImEENS2_9allocatorImEEEE(%"class.std::__1::vector"* noalias sret, %"class.v8::base::RandomNumberGenerator"* nocapture, i64, i64, %"class.std::__1::unordered_set"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::unordered_set", align 8
  %8 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %2, %9
  %11 = icmp ult i64 %10, %3
  br i1 %11, label %12, label %13, !prof !2

12:                                               ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #13
  unreachable

13:                                               ; preds = %5
  %14 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #12
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i64** %15 to i64*
  %17 = bitcast %"class.std::__1::vector"* %6 to i64*
  %18 = icmp eq i64 %10, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %13
  %20 = icmp ugt i64 %10, 2305843009213693951
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void @abort() #13
  unreachable

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %24 = bitcast i64** %23 to i64*
  %25 = shl i64 %10, 3
  %26 = tail call i8* @_Znwm(i64 %25) #14
  %27 = bitcast i8* %26 to i64*
  %28 = ptrtoint i8* %26 to i64
  %29 = getelementptr inbounds i64, i64* %27, i64 %10
  %30 = ptrtoint i64* %29 to i64
  %31 = ptrtoint i8* %26 to i64
  store i64 %31, i64* %17, align 8
  store i64 %28, i64* %24, align 8
  store i64 %30, i64* %16, align 8
  %32 = bitcast i8* %26 to i64*
  br label %33

33:                                               ; preds = %22, %13
  %34 = phi i64* [ null, %13 ], [ %27, %22 ]
  %35 = phi i64* [ null, %13 ], [ %32, %22 ]
  %36 = phi i64 [ 0, %13 ], [ %31, %22 ]
  %37 = phi i64 [ 0, %13 ], [ %28, %22 ]
  %38 = icmp eq i64 %2, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %43 = bitcast i64** %42 to i64*
  br label %65

44:                                               ; preds = %186
  %45 = inttoptr i64 %187 to i64*
  br label %46

46:                                               ; preds = %33, %44
  %47 = phi i64* [ %188, %44 ], [ %34, %33 ]
  %48 = phi i64* [ %45, %44 ], [ %35, %33 ]
  %49 = phi i64* [ %189, %44 ], [ %34, %33 ]
  %50 = phi i64 [ %187, %44 ], [ %36, %33 ]
  %51 = phi i64 [ %190, %44 ], [ %37, %33 ]
  %52 = sub i64 %2, %3
  %53 = icmp ult i64 %52, %3
  %54 = select i1 %53, i64 %3, i64 %52
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %56 = bitcast i64** %55 to i64*
  %57 = sub i64 %51, %50
  %58 = ashr exact i64 %57, 3
  %59 = icmp ne i64 %58, %54
  %60 = icmp ugt i64 %58, %3
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %234

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %1, i64 0, i32 1
  %64 = getelementptr inbounds %"class.v8::base::RandomNumberGenerator", %"class.v8::base::RandomNumberGenerator"* %1, i64 0, i32 2
  br label %194

65:                                               ; preds = %186, %39
  %66 = phi i64 [ %36, %39 ], [ %187, %186 ]
  %67 = phi i64* [ %34, %39 ], [ %188, %186 ]
  %68 = phi i64* [ %34, %39 ], [ %189, %186 ]
  %69 = phi i64 [ %37, %39 ], [ %190, %186 ]
  %70 = phi i64* [ %34, %39 ], [ %191, %186 ]
  %71 = phi i64 [ 0, %39 ], [ %192, %186 ]
  %72 = load i64, i64* %40, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %136, label %74

74:                                               ; preds = %65
  %75 = tail call i64 @llvm.ctpop.i64(i64 %72) #12, !range !8
  %76 = icmp ugt i64 %75, 1
  br i1 %76, label %80, label %77

77:                                               ; preds = %74
  %78 = add i64 %72, -1
  %79 = and i64 %78, %71
  br label %84

80:                                               ; preds = %74
  %81 = icmp ult i64 %71, %72
  br i1 %81, label %84, label %82

82:                                               ; preds = %80
  %83 = urem i64 %71, %72
  br label %84

84:                                               ; preds = %82, %80, %77
  %85 = phi i64 [ %79, %77 ], [ %83, %82 ], [ %71, %80 ]
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %41, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %85
  %88 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %87, align 8
  %89 = icmp eq %"struct.std::__1::__hash_node_base"* %88, null
  br i1 %89, label %136, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %88, i64 0, i32 0
  %92 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %91, align 8
  %93 = icmp eq %"struct.std::__1::__hash_node_base"* %92, null
  br i1 %93, label %136, label %94

94:                                               ; preds = %90
  %95 = add i64 %72, -1
  br i1 %76, label %96, label %118

96:                                               ; preds = %94, %114
  %97 = phi %"struct.std::__1::__hash_node_base"* [ %116, %114 ], [ %92, %94 ]
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %97, i64 1
  %99 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %71, %100
  br i1 %101, label %109, label %102

102:                                              ; preds = %96
  %103 = icmp ult i64 %100, %72
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  %105 = urem i64 %100, %72
  br label %106

106:                                              ; preds = %104, %102
  %107 = phi i64 [ %105, %104 ], [ %100, %102 ]
  %108 = icmp eq i64 %107, %85
  br i1 %108, label %114, label %136

109:                                              ; preds = %96
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %97, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, %71
  br i1 %113, label %186, label %114

114:                                              ; preds = %109, %106
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %97, i64 0, i32 0
  %116 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %115, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base"* %116, null
  br i1 %117, label %136, label %96

118:                                              ; preds = %94, %132
  %119 = phi %"struct.std::__1::__hash_node_base"* [ %134, %132 ], [ %92, %94 ]
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 1
  %121 = bitcast %"struct.std::__1::__hash_node_base"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = icmp eq i64 %71, %122
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = and i64 %122, %95
  %126 = icmp eq i64 %125, %85
  br i1 %126, label %132, label %136

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 2
  %129 = bitcast %"struct.std::__1::__hash_node_base"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %130, %71
  br i1 %131, label %186, label %132

132:                                              ; preds = %127, %124
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 0, i32 0
  %134 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %133, align 8
  %135 = icmp eq %"struct.std::__1::__hash_node_base"* %134, null
  br i1 %135, label %136, label %118

136:                                              ; preds = %132, %124, %114, %106, %84, %65, %90
  %137 = load i64*, i64** %15, align 8
  %138 = icmp eq i64* %70, %137
  br i1 %138, label %142, label %139

139:                                              ; preds = %136
  store i64 %71, i64* %70, align 8
  %140 = getelementptr inbounds i64, i64* %70, i64 1
  %141 = ptrtoint i64* %140 to i64
  store i64 %141, i64* %43, align 8
  br label %186

142:                                              ; preds = %136
  %143 = ptrtoint i64* %137 to i64
  %144 = sub i64 %143, %66
  %145 = ashr exact i64 %144, 3
  %146 = add nsw i64 %145, 1
  %147 = icmp ugt i64 %146, 2305843009213693951
  br i1 %147, label %148, label %150

148:                                              ; preds = %142
  %149 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %149) #13
  unreachable

150:                                              ; preds = %142
  %151 = icmp ult i64 %145, 1152921504606846975
  br i1 %151, label %152, label %160

152:                                              ; preds = %150
  %153 = ashr exact i64 %144, 2
  %154 = icmp ult i64 %153, %146
  %155 = select i1 %154, i64 %146, i64 %153
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %165, label %157

157:                                              ; preds = %152
  %158 = icmp ugt i64 %155, 2305843009213693951
  br i1 %158, label %159, label %160

159:                                              ; preds = %157
  tail call void @abort() #13
  unreachable

160:                                              ; preds = %157, %150
  %161 = phi i64 [ %155, %157 ], [ 2305843009213693951, %150 ]
  %162 = shl i64 %161, 3
  %163 = tail call i8* @_Znwm(i64 %162) #14
  %164 = bitcast i8* %163 to i64*
  br label %165

165:                                              ; preds = %160, %152
  %166 = phi i64 [ %161, %160 ], [ 0, %152 ]
  %167 = phi i64* [ %164, %160 ], [ null, %152 ]
  %168 = getelementptr inbounds i64, i64* %167, i64 %145
  %169 = getelementptr inbounds i64, i64* %167, i64 %166
  %170 = ptrtoint i64* %169 to i64
  store i64 %71, i64* %168, align 8
  %171 = getelementptr inbounds i64, i64* %168, i64 1
  %172 = ptrtoint i64* %171 to i64
  %173 = sub i64 %69, %66
  %174 = ashr exact i64 %173, 3
  %175 = sub nsw i64 0, %174
  %176 = getelementptr inbounds i64, i64* %168, i64 %175
  %177 = ptrtoint i64* %176 to i64
  %178 = icmp sgt i64 %173, 0
  br i1 %178, label %179, label %182

179:                                              ; preds = %165
  %180 = bitcast i64* %176 to i8*
  %181 = inttoptr i64 %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %181, i64 %173, i1 false) #12
  br label %182

182:                                              ; preds = %179, %165
  store i64 %177, i64* %17, align 8
  store i64 %172, i64* %43, align 8
  store i64 %170, i64* %16, align 8
  %183 = icmp eq i64 %66, 0
  br i1 %183, label %186, label %184

184:                                              ; preds = %182
  %185 = inttoptr i64 %66 to i8*
  tail call void @_ZdlPv(i8* %185) #14
  br label %186

186:                                              ; preds = %127, %109, %184, %182, %139
  %187 = phi i64 [ %177, %184 ], [ %177, %182 ], [ %66, %139 ], [ %66, %109 ], [ %66, %127 ]
  %188 = phi i64* [ %171, %184 ], [ %171, %182 ], [ %140, %139 ], [ %67, %109 ], [ %67, %127 ]
  %189 = phi i64* [ %171, %184 ], [ %171, %182 ], [ %140, %139 ], [ %68, %109 ], [ %68, %127 ]
  %190 = phi i64 [ %172, %184 ], [ %172, %182 ], [ %141, %139 ], [ %69, %109 ], [ %69, %127 ]
  %191 = phi i64* [ %171, %184 ], [ %171, %182 ], [ %140, %139 ], [ %70, %109 ], [ %70, %127 ]
  %192 = add nuw i64 %71, 1
  %193 = icmp eq i64 %192, %2
  br i1 %193, label %44, label %65

194:                                              ; preds = %62, %216
  %195 = phi i64* [ %49, %62 ], [ %222, %216 ]
  %196 = phi i64* [ %48, %62 ], [ %230, %216 ]
  %197 = phi i64 [ %58, %62 ], [ %226, %216 ]
  %198 = load i64, i64* %63, align 8
  %199 = load i64, i64* %64, align 8
  store i64 %199, i64* %63, align 8
  %200 = shl i64 %198, 23
  %201 = xor i64 %200, %198
  %202 = lshr i64 %201, 17
  %203 = lshr i64 %199, 26
  %204 = xor i64 %201, %199
  %205 = xor i64 %204, %203
  %206 = xor i64 %205, %202
  store i64 %206, i64* %64, align 8
  %207 = lshr i64 %199, 12
  %208 = or i64 %207, 4607182418800017408
  %209 = bitcast i64 %208 to double
  %210 = fadd double %209, -1.000000e+00
  %211 = uitofp i64 %197 to double
  %212 = fmul double %210, %211
  %213 = fptoui double %212 to i64
  %214 = icmp ugt i64 %197, %213
  br i1 %214, label %216, label %215, !prof !4

215:                                              ; preds = %194
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0)) #13
  unreachable

216:                                              ; preds = %194
  %217 = getelementptr inbounds i64, i64* %196, i64 %213
  %218 = getelementptr inbounds i64, i64* %195, i64 -1
  %219 = load i64, i64* %217, align 8
  %220 = load i64, i64* %218, align 8
  store i64 %220, i64* %217, align 8
  store i64 %219, i64* %218, align 8
  %221 = load i64*, i64** %55, align 8
  %222 = getelementptr inbounds i64, i64* %221, i64 -1
  store i64* %222, i64** %55, align 8
  %223 = ptrtoint i64* %222 to i64
  %224 = load i64, i64* %17, align 8
  %225 = sub i64 %223, %224
  %226 = ashr exact i64 %225, 3
  %227 = icmp ne i64 %226, %54
  %228 = icmp ugt i64 %226, %3
  %229 = and i1 %227, %228
  %230 = inttoptr i64 %224 to i64*
  br i1 %229, label %194, label %231

231:                                              ; preds = %216
  %232 = ptrtoint i64* %222 to i64
  %233 = inttoptr i64 %224 to i64*
  br label %234

234:                                              ; preds = %231, %46
  %235 = phi i64* [ %47, %46 ], [ %222, %231 ]
  %236 = phi i64* [ %48, %46 ], [ %233, %231 ]
  %237 = phi i64 [ %51, %46 ], [ %232, %231 ]
  %238 = phi i64 [ %50, %46 ], [ %224, %231 ]
  %239 = phi i64 [ %58, %46 ], [ %226, %231 ]
  %240 = icmp eq i64 %239, %3
  br i1 %240, label %419, label %241

241:                                              ; preds = %234
  %242 = bitcast %"class.std::__1::unordered_set"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %242) #12
  %243 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %244 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %7, i64 0, i32 0
  %245 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %7, i64 0, i32 0, i32 3
  %246 = bitcast %"class.std::__1::__compressed_pair.18"* %245 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %242, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %246, align 8
  %247 = icmp eq i64* %236, %235
  br i1 %247, label %256, label %248

248:                                              ; preds = %241, %248
  %249 = phi i64* [ %251, %248 ], [ %236, %241 ]
  %250 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE25__emplace_unique_key_argsImJRKmEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeImPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* nonnull %244, i64* dereferenceable(8) %249, i64* dereferenceable(8) %249) #12
  %251 = getelementptr inbounds i64, i64* %249, i64 1
  %252 = icmp eq i64* %251, %235
  br i1 %252, label %253, label %248

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %255 = load i64, i64* %254, align 8, !noalias !9
  br label %256

256:                                              ; preds = %253, %241
  %257 = phi i64 [ %255, %253 ], [ 0, %241 ]
  %258 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %258, i8 0, i64 24, i1 false) #12, !alias.scope !9
  %259 = sub i64 %2, %257
  %260 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %261 = bitcast i64** %260 to i64*
  %262 = bitcast %"class.std::__1::vector"* %0 to i64*
  %263 = icmp eq i64 %259, 0
  br i1 %263, label %277, label %264

264:                                              ; preds = %256
  %265 = icmp ugt i64 %259, 2305843009213693951
  br i1 %265, label %266, label %267

266:                                              ; preds = %264
  call void @abort() #13
  unreachable

267:                                              ; preds = %264
  %268 = shl i64 %259, 3
  %269 = call i8* @_Znwm(i64 %268) #14
  %270 = bitcast i8* %269 to i64*
  %271 = getelementptr inbounds i64, i64* %270, i64 %259
  %272 = ptrtoint i64* %271 to i64
  %273 = insertelement <2 x i8*> undef, i8* %269, i32 0
  %274 = shufflevector <2 x i8*> %273, <2 x i8*> undef, <2 x i32> zeroinitializer
  %275 = ptrtoint <2 x i8*> %274 to <2 x i64>
  %276 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  store <2 x i64> %275, <2 x i64>* %276, align 8
  store i64 %272, i64* %261, align 8
  br label %277

277:                                              ; preds = %267, %256
  br i1 %38, label %403, label %278

278:                                              ; preds = %277
  %279 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %280 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %282 = bitcast i64** %281 to i64*
  br label %283

283:                                              ; preds = %400, %278
  %284 = phi i64 [ %401, %400 ], [ 0, %278 ]
  %285 = load i64, i64* %279, align 8
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %349, label %287

287:                                              ; preds = %283
  %288 = call i64 @llvm.ctpop.i64(i64 %285) #12, !range !8
  %289 = icmp ugt i64 %288, 1
  br i1 %289, label %293, label %290

290:                                              ; preds = %287
  %291 = add i64 %285, -1
  %292 = and i64 %291, %284
  br label %297

293:                                              ; preds = %287
  %294 = icmp ult i64 %284, %285
  br i1 %294, label %297, label %295

295:                                              ; preds = %293
  %296 = urem i64 %284, %285
  br label %297

297:                                              ; preds = %295, %293, %290
  %298 = phi i64 [ %292, %290 ], [ %296, %295 ], [ %284, %293 ]
  %299 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %280, align 8
  %300 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %299, i64 %298
  %301 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %300, align 8
  %302 = icmp eq %"struct.std::__1::__hash_node_base"* %301, null
  br i1 %302, label %349, label %303

303:                                              ; preds = %297
  %304 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %301, i64 0, i32 0
  %305 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %304, align 8
  %306 = icmp eq %"struct.std::__1::__hash_node_base"* %305, null
  br i1 %306, label %349, label %307

307:                                              ; preds = %303
  %308 = add i64 %285, -1
  br i1 %289, label %309, label %331

309:                                              ; preds = %307, %327
  %310 = phi %"struct.std::__1::__hash_node_base"* [ %329, %327 ], [ %305, %307 ]
  %311 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %310, i64 1
  %312 = bitcast %"struct.std::__1::__hash_node_base"* %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = icmp eq i64 %284, %313
  br i1 %314, label %322, label %315

315:                                              ; preds = %309
  %316 = icmp ult i64 %313, %285
  br i1 %316, label %319, label %317

317:                                              ; preds = %315
  %318 = urem i64 %313, %285
  br label %319

319:                                              ; preds = %317, %315
  %320 = phi i64 [ %318, %317 ], [ %313, %315 ]
  %321 = icmp eq i64 %320, %298
  br i1 %321, label %327, label %349

322:                                              ; preds = %309
  %323 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %310, i64 2
  %324 = bitcast %"struct.std::__1::__hash_node_base"* %323 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = icmp eq i64 %325, %284
  br i1 %326, label %400, label %327

327:                                              ; preds = %322, %319
  %328 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %310, i64 0, i32 0
  %329 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %328, align 8
  %330 = icmp eq %"struct.std::__1::__hash_node_base"* %329, null
  br i1 %330, label %349, label %309

331:                                              ; preds = %307, %345
  %332 = phi %"struct.std::__1::__hash_node_base"* [ %347, %345 ], [ %305, %307 ]
  %333 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %332, i64 1
  %334 = bitcast %"struct.std::__1::__hash_node_base"* %333 to i64*
  %335 = load i64, i64* %334, align 8
  %336 = icmp eq i64 %284, %335
  br i1 %336, label %340, label %337

337:                                              ; preds = %331
  %338 = and i64 %335, %308
  %339 = icmp eq i64 %338, %298
  br i1 %339, label %345, label %349

340:                                              ; preds = %331
  %341 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %332, i64 2
  %342 = bitcast %"struct.std::__1::__hash_node_base"* %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = icmp eq i64 %343, %284
  br i1 %344, label %400, label %345

345:                                              ; preds = %340, %337
  %346 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %332, i64 0, i32 0
  %347 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %346, align 8
  %348 = icmp eq %"struct.std::__1::__hash_node_base"* %347, null
  br i1 %348, label %349, label %331

349:                                              ; preds = %345, %337, %327, %319, %297, %283, %303
  %350 = load i64*, i64** %281, align 8
  %351 = load i64*, i64** %260, align 8
  %352 = icmp eq i64* %350, %351
  %353 = ptrtoint i64* %351 to i64
  br i1 %352, label %357, label %354

354:                                              ; preds = %349
  store i64 %284, i64* %350, align 8
  %355 = getelementptr inbounds i64, i64* %350, i64 1
  %356 = ptrtoint i64* %355 to i64
  store i64 %356, i64* %282, align 8
  br label %400

357:                                              ; preds = %349
  %358 = ptrtoint i64* %350 to i64
  %359 = load i64, i64* %262, align 8
  %360 = sub i64 %358, %359
  %361 = ashr exact i64 %360, 3
  %362 = add nsw i64 %361, 1
  %363 = icmp ugt i64 %362, 2305843009213693951
  br i1 %363, label %364, label %366

364:                                              ; preds = %357
  %365 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %365) #13
  unreachable

366:                                              ; preds = %357
  %367 = sub i64 %353, %359
  %368 = ashr exact i64 %367, 3
  %369 = icmp ult i64 %368, 1152921504606846975
  br i1 %369, label %370, label %378

370:                                              ; preds = %366
  %371 = ashr exact i64 %367, 2
  %372 = icmp ult i64 %371, %362
  %373 = select i1 %372, i64 %362, i64 %371
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %383, label %375

375:                                              ; preds = %370
  %376 = icmp ugt i64 %373, 2305843009213693951
  br i1 %376, label %377, label %378

377:                                              ; preds = %375
  call void @abort() #13
  unreachable

378:                                              ; preds = %375, %366
  %379 = phi i64 [ %373, %375 ], [ 2305843009213693951, %366 ]
  %380 = shl i64 %379, 3
  %381 = call i8* @_Znwm(i64 %380) #14
  %382 = bitcast i8* %381 to i64*
  br label %383

383:                                              ; preds = %378, %370
  %384 = phi i64 [ %379, %378 ], [ 0, %370 ]
  %385 = phi i8* [ %381, %378 ], [ null, %370 ]
  %386 = phi i64* [ %382, %378 ], [ null, %370 ]
  %387 = getelementptr inbounds i64, i64* %386, i64 %361
  %388 = getelementptr inbounds i64, i64* %386, i64 %384
  %389 = ptrtoint i64* %388 to i64
  store i64 %284, i64* %387, align 8
  %390 = getelementptr inbounds i64, i64* %387, i64 1
  %391 = ptrtoint i64* %390 to i64
  %392 = ptrtoint i64* %386 to i64
  %393 = icmp sgt i64 %360, 0
  br i1 %393, label %394, label %396

394:                                              ; preds = %383
  %395 = inttoptr i64 %359 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %385, i8* align 8 %395, i64 %360, i1 false) #12
  br label %396

396:                                              ; preds = %394, %383
  store i64 %392, i64* %262, align 8
  store i64 %391, i64* %282, align 8
  store i64 %389, i64* %261, align 8
  %397 = icmp eq i64 %359, 0
  br i1 %397, label %400, label %398

398:                                              ; preds = %396
  %399 = inttoptr i64 %359 to i8*
  call void @_ZdlPv(i8* %399) #14
  br label %400

400:                                              ; preds = %340, %322, %398, %396, %354
  %401 = add nuw i64 %284, 1
  %402 = icmp eq i64 %401, %2
  br i1 %402, label %403, label %283

403:                                              ; preds = %400, %277
  %404 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %405 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %404, align 8
  %406 = icmp eq %"struct.std::__1::__hash_node_base"* %405, null
  br i1 %406, label %413, label %407

407:                                              ; preds = %403, %407
  %408 = phi %"struct.std::__1::__hash_node_base"* [ %410, %407 ], [ %405, %403 ]
  %409 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %408, i64 0, i32 0
  %410 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %409, align 8
  %411 = bitcast %"struct.std::__1::__hash_node_base"* %408 to i8*
  call void @_ZdlPv(i8* %411) #14
  %412 = icmp eq %"struct.std::__1::__hash_node_base"* %410, null
  br i1 %412, label %413, label %407

413:                                              ; preds = %407, %403
  %414 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %414, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %414, align 8
  %416 = icmp eq %"struct.std::__1::__hash_node_base"** %415, null
  br i1 %416, label %426, label %417

417:                                              ; preds = %413
  %418 = bitcast %"struct.std::__1::__hash_node_base"** %415 to i8*
  call void @_ZdlPv(i8* %418) #14
  br label %426

419:                                              ; preds = %234
  %420 = bitcast %"class.std::__1::vector"* %0 to i64*
  store i64 %238, i64* %420, align 8
  %421 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %422 = bitcast i64** %421 to i64*
  store i64 %237, i64* %422, align 8
  %423 = load i64, i64* %16, align 8
  %424 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %425 = bitcast i64** %424 to i64*
  store i64 %423, i64* %425, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #12
  br label %432

426:                                              ; preds = %417, %413
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %242) #12
  %427 = load i64*, i64** %243, align 8
  %428 = icmp eq i64* %427, null
  br i1 %428, label %432, label %429

429:                                              ; preds = %426
  %430 = bitcast i64* %427 to i8*
  %431 = ptrtoint i64* %427 to i64
  store i64 %431, i64* %56, align 8
  call void @_ZdlPv(i8* %430) #14
  br label %432

432:                                              ; preds = %419, %426, %429
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v84base21RandomNumberGenerator11MurmurHash3Em(i64) local_unnamed_addr #7 align 2 {
  %2 = lshr i64 %0, 33
  %3 = xor i64 %2, %0
  %4 = mul i64 %3, -49064778989728563
  %5 = lshr i64 %4, 33
  %6 = xor i64 %5, %4
  %7 = mul i64 %6, -4265267296055464877
  %8 = lshr i64 %7, 33
  %9 = xor i64 %8, %7
  ret i64 %9
}

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base16LazyInstanceImplINS0_5MutexENS0_32StaticallyAllocatedInstanceTraitIS2_EENS0_21DefaultConstructTraitIS2_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS2_EEE12InitInstanceEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.v8::base::Mutex"*
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %2) #12
  ret void
}

declare void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic"*, %"class.std::__1::function"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to void (i8*)**
  %3 = load void (i8*)*, void (i8*)** %2, align 8
  %4 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %5 = bitcast [8 x i8]* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void %3(i8* %6) #12
  ret void
}

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #3

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE25__emplace_unique_key_argsImJRKmEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeImPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i64* dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %67, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #12, !range !8
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, -1
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ult i64 %4, %6
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %23, null
  br i1 %24, label %67, label %25

25:                                               ; preds = %18
  %26 = add i64 %6, -1
  br i1 %10, label %27, label %49

27:                                               ; preds = %25, %44
  %28 = phi %"struct.std::__1::__hash_node_base"* [ %30, %44 ], [ %23, %25 ]
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %28, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %67, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %44, label %37

37:                                               ; preds = %32
  %38 = icmp ult i64 %35, %6
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = urem i64 %35, %6
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %40, %39 ], [ %35, %37 ]
  %43 = icmp eq i64 %42, %19
  br i1 %43, label %44, label %67

44:                                               ; preds = %41, %32
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 2
  %46 = bitcast %"struct.std::__1::__hash_node_base"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %4
  br i1 %48, label %154, label %27

49:                                               ; preds = %25, %62
  %50 = phi %"struct.std::__1::__hash_node_base"* [ %52, %62 ], [ %23, %25 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %52, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %4
  %59 = and i64 %57, %26
  %60 = icmp eq i64 %59, %19
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %52, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, %4
  br i1 %66, label %154, label %49

67:                                               ; preds = %54, %49, %41, %27, %18, %3
  %68 = phi i64 [ %19, %18 ], [ undef, %3 ], [ %19, %27 ], [ %19, %41 ], [ %19, %49 ], [ %19, %54 ]
  %69 = tail call i8* @_Znwm(i64 24) #14, !noalias !12
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %2, align 8, !noalias !12
  store i64 %72, i64* %71, align 8, !noalias !12
  %73 = getelementptr inbounds i8, i8* %69, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %4, i64* %74, align 8, !noalias !12
  %75 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %75, align 8, !noalias !12
  %76 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %6 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %7, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %67
  %87 = shl i64 %6, 1
  %88 = icmp ult i64 %6, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %6) #12, !range !8
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #12
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %98)
  %99 = load i64, i64* %5, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #12, !range !8
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %4
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %4, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %4, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %67
  %110 = phi i64 [ %6, %67 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %68, %67 ], [ %104, %102 ], [ %4, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %69 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i8**
  store i8* %69, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base"* %118, %"struct.std::__1::__hash_node_base"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #12, !range !8
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %69 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %69, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %62, %44, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %44 ], [ 0, %62 ]
  %156 = phi %"struct.std::__1::__hash_node_base"* [ %151, %150 ], [ %30, %44 ], [ %52, %62 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !15

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %103 to i64*
  %105 = load i64, i64* %130, align 8
  %106 = load i64, i64* %104, align 8
  %107 = icmp eq i64 %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i64*
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %146 to i64*
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base"* %134, %"struct.std::__1::__hash_node_base"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %155 to i64*
  %157 = load i64, i64* %147, align 8
  %158 = load i64, i64* %156, align 8
  %159 = icmp eq i64 %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %132, %"struct.std::__1::__hash_node_base"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %180, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #14
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #11

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i32 0, i32 33}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN2v84baseL16ComplementSampleERKNSt3__113unordered_setImNS1_4hashImEENS1_8equal_toImEENS1_9allocatorImEEEEm: argument 0"}
!7 = distinct !{!7, !"_ZN2v84baseL16ComplementSampleERKNSt3__113unordered_setImNS1_4hashImEENS1_8equal_toImEENS1_9allocatorImEEEEm"}
!8 = !{i64 0, i64 65}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN2v84baseL16ComplementSampleERKNSt3__113unordered_setImNS1_4hashImEENS1_8equal_toImEENS1_9allocatorImEEEEm: argument 0"}
!11 = distinct !{!11, !"_ZN2v84baseL16ComplementSampleERKNSt3__113unordered_setImNS1_4hashImEENS1_8equal_toImEENS1_9allocatorImEEEEm"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE21__construct_node_hashIRKmJEEENS_10unique_ptrINS_11__hash_nodeImPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__112__hash_tableImNS_4hashImEENS_8equal_toImEENS_9allocatorImEEE21__construct_node_hashIRKmJEEENS_10unique_ptrINS_11__hash_nodeImPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
