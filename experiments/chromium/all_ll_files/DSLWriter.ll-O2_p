; ModuleID = '../../third_party/skia/src/sksl/dsl/priv/DSLWriter.cpp'
source_filename = "../../third_party/skia/src/sksl/dsl/priv/DSLWriter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::dsl::DSLWriter" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.SkSL::Compiler"*, %"class.std::__1::unique_ptr.178", %"struct.SkSL::ProgramConfig"*, %"class.SkSL::ModifiersPool"*, %"class.std::__1::vector.142", %"class.std::__1::vector.155", %"class.SkSL::dsl::ErrorHandler"*, %"struct.SkSL::ProgramSettings", %"class.SkSL::Mangler", %"class.std::__1::stack" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkSL::ProgramConfig"* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.SkSL::ModifiersPool"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.49", %"class.std::__1::shared_ptr.49", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.75", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.171" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector.32", i32, i32, %"class.std::__1::vector.38", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.40" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.SkSL::Type::Field"* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.49" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.49", %"class.std::__1::vector.194", i8, %"class.std::__1::vector.202", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"class.std::__1::unique_ptr.196"*, %"class.std::__1::unique_ptr.196"*, %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.std::__1::unique_ptr.196"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"class.std::__1::unique_ptr.204"*, %"class.std::__1::unique_ptr.204"*, %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.std::__1::unique_ptr.204"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.215" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.49", %"class.std::__1::shared_ptr.50" }
%"class.std::__1::shared_ptr.50" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type { %"class.std::__1::unordered_map", %"class.SkSL::IRIntrinsicMap"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.51" }
%"class.std::__1::__hash_table.51" = type <{ %"class.std::__1::unique_ptr.52", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.70", [4 x i8] }>
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54", %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::__hash_node_base.55"** }
%"struct.std::__1::__hash_node_base.55" = type { %"struct.std::__1::__hash_node_base.55"* }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.std::__1::__bucket_list_deallocator.57" }
%"class.std::__1::__bucket_list_deallocator.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::__hash_node_base.55" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { float }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.4", %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.18", [4 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type <{ %"class.SkSL::Context"*, %"struct.SkSL::Program::Inputs", [6 x i8], %"class.std::__1::unique_ptr.78", %"class.std::__1::shared_ptr.49", %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::unordered_set.91", i32, [4 x i8], %"class.std::__1::unordered_set.116", %"class.std::__1::vector.142"*, %"class.std::__1::vector.155"*, %"class.SkSL::Variable"*, %"class.SkSL::Variable"*, i32, i8, [3 x i8] }>
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.SkSL::ASTFile"* }
%"struct.SkSL::ASTFile" = type <{ %"class.std::__1::vector.81", %"class.SkSL::ASTNode::ID", [4 x i8] }>
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.83" }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector.81"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.SkSL::ASTNode"* }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"class.std::__1::unordered_set.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.111", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_set.116" = type { %"class.std::__1::__hash_table.117" }
%"class.std::__1::__hash_table.117" = type <{ %"class.std::__1::unique_ptr.118", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", %"class.std::__1::__compressed_pair.137", [4 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120", %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::__hash_node_base.121"** }
%"struct.std::__1::__hash_node_base.121" = type { %"struct.std::__1::__hash_node_base.121"* }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.std::__1::__bucket_list_deallocator.123" }
%"class.std::__1::__bucket_list_deallocator.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.121" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr.162" }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { i64*, i64*, %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { i64* }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.SkSL::Pool"* }
%"class.SkSL::Pool" = type { %"class.std::__1::unique_ptr.181" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %class.GrMemoryPool* }
%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"class.std::__1::unique_ptr.144"*, %"class.std::__1::unique_ptr.144"*, %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.SkSL::ProgramElement"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.std::__1::unique_ptr.144"* }
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.156" }
%"class.std::__1::__vector_base.156" = type { %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.SkSL::ProgramElement"** }
%"class.SkSL::dsl::ErrorHandler" = type { i32 (...)** }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector"* }
%"class.std::__1::vector" = type opaque
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::stack" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.190" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.SkSL::IRGenerator::IRBundle" = type <{ %"class.std::__1::vector.142", %"class.std::__1::vector.155", %"class.std::__1::shared_ptr.49", %"struct.SkSL::Program::Inputs", [6 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.221 }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTArray.221 = type { %"class.std::__1::unique_ptr.222"*, i64 }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %class.GrGLSLFragmentProcessor* }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.228, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.237], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [120 x i8] }
%class.SkSTArray.228 = type { %class.SkAlignedSTStorage.229, %class.SkTArray.230 }
%class.SkAlignedSTStorage.229 = type { [16 x i8] }
%class.SkTArray.230 = type { %"class.std::__1::unique_ptr.231"*, i64 }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.SkSL::Statement"* }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.237 = type { %class.SkAlignedSTStorage.238, %class.SkTArray }
%class.SkAlignedSTStorage.238 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.239, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.239 = type { %class.SkAlignedSTStorage.240, %class.SkTArray.241 }
%class.SkAlignedSTStorage.240 = type { [8 x i8] }
%class.SkTArray.241 = type { %"class.std::__1::unique_ptr.242"*, i64 }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%"struct.SkSL::dsl::DSLWriter::StackFrame" = type { %class.GrGLSLFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*, %class.SkSTArray.228 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.SkSL::dsl::DSLWriter::StackFrame" }
%"class.SkSL::dsl::DSLVar" = type <{ %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLType", i32, [4 x i8], %"class.std::__1::unique_ptr.231", %"class.SkSL::Variable"*, i8*, i8*, %"class.SkSL::dsl::DSLExpression", i8, i8, [6 x i8] }>
%"class.SkSL::dsl::DSLModifiers" = type { %"struct.SkSL::Modifiers" }
%"class.SkSL::dsl::DSLType" = type <{ %"class.SkSL::Type"*, i8, [7 x i8] }>
%"class.SkSL::dsl::DSLExpression" = type { %"class.std::__1::unique_ptr.162" }
%"class.SkSL::FunctionDeclaration" = type { %"class.SkSL::Symbol", %"class.SkSL::FunctionDefinition"*, %"struct.SkSL::Modifiers"*, %"class.std::__1::vector.248", %"class.SkSL::Type"*, i8, i8, i32 }
%"class.SkSL::FunctionDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, %"class.std::__1::unique_ptr.231", %"class.std::__1::unordered_set.91", %"struct.SkSL::ASTNode"* }
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { %"class.SkSL::Variable"**, %"class.SkSL::Variable"**, %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.SkSL::Variable"** }
%class.SkSTArray.255 = type { %class.SkAlignedSTStorage.256, %class.SkTArray.257 }
%class.SkAlignedSTStorage.256 = type { [16 x i8] }
%class.SkTArray.257 = type { %"class.std::__1::unique_ptr.162"*, i64 }
%"class.SkSL::dsl::PositionInfo" = type <{ i8*, i32, [4 x i8] }>
%"class.SkSL::dsl::DSLPossibleExpression" = type { %"class.std::__1::unique_ptr.162" }
%class.SkTArray.258 = type { %"class.SkSL::dsl::DSLExpression"*, i64 }
%"class.SkSL::dsl::DSLPossibleStatement" = type { %"class.std::__1::unique_ptr.231" }
%class.SkTArray.259 = type { %class.SkSTArray.228*, i64 }
%"struct.SkSL::Program" = type { %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.49", %"class.std::__1::unique_ptr.178", %"struct.SkSL::Program::Inputs", %"class.std::__1::vector.142", %"class.std::__1::vector.155", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.281" }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.SkSL::String"* }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.SkSL::ProgramUsage"* }
%"class.SkSL::ProgramUsage" = type { %class.SkTHashMap.284, %class.SkTHashMap.293 }
%class.SkTHashMap.284 = type { %class.SkTHashTable.285 }
%class.SkTHashTable.285 = type { i32, i32, %class.SkAutoTArray.286 }
%class.SkAutoTArray.286 = type { %"class.std::__1::unique_ptr.287" }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base", [4 x i8] }
%"struct.std::__1::pair.base" = type <{ %"class.SkSL::Variable"*, %"struct.SkSL::ProgramUsage::VariableCounts" }>
%"struct.SkSL::ProgramUsage::VariableCounts" = type { i32, i32, i32 }
%class.SkTHashMap.293 = type { %class.SkTHashTable.294 }
%class.SkTHashTable.294 = type { i32, i32, %class.SkAutoTArray.295 }
%class.SkAutoTArray.295 = type { %"class.std::__1::unique_ptr.296" }
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.326", [4 x i8] }
%"struct.std::__1::pair.base.326" = type <{ %"class.SkSL::FunctionDeclaration"*, i32 }>

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE4swapERS7_ = comdat any

$_ZNSt3__111make_uniqueIN4SkSL7ProgramEJDnNS_10unique_ptrINS1_13ProgramConfigENS_14default_deleteIS4_EEEERNS_10shared_ptrINS1_7ContextEEENS_6vectorINS3_INS1_14ProgramElementENS5_ISD_EEEENS_9allocatorISF_EEEENSC_IPKSD_NSG_ISK_EEEENS3_INS1_13ModifiersPoolENS5_ISN_EEEENS8_INS1_11SymbolTableEEENS3_INS1_4PoolENS5_ISS_EEEERNS2_6InputsEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__110__list_impIN4SkSL3dsl9DSLWriter10StackFrameENS_9allocatorIS4_EEE5clearEv = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNK4SkSL6LayouteqERKS0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEC2EOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE11resize_backEi = comdat any

$_ZN4SkSL7ProgramC2ENSt3__110unique_ptrINS_6StringENS1_14default_deleteIS3_EEEENS2_INS_13ProgramConfigENS4_IS7_EEEENS1_10shared_ptrINS_7ContextEEENS1_6vectorINS2_INS_14ProgramElementENS4_ISE_EEEENS1_9allocatorISG_EEEENSD_IPKSE_NSH_ISL_EEEENS2_INS_13ModifiersPoolENS4_ISO_EEEENSA_INS_11SymbolTableEEENS2_INS_4PoolENS4_IST_EEEENS0_6InputsE = comdat any

@.str = private unnamed_addr constant [55 x i8] c"../../third_party/skia/src/sksl/dsl/priv/DSLWriter.cpp\00", align 1
@.str.1 = private unnamed_addr constant [80 x i8] c"%s: %d: %sNo SkSL DSL error handler configured, treating this as a fatal error\0A\00", align 1
@.str.2 = private unnamed_addr constant [72 x i8] c"%sNo SkSL DSL error handler configured, treating this as a fatal error\0A\00", align 1
@_ZN4SkSL3dsl8instanceE = hidden thread_local global %"class.SkSL::dsl::DSLWriter"* null, align 8
@_ZTVN4SkSL5BlockE = external unnamed_addr constant { [7 x i8*] }, align 8

@_ZN4SkSL3dsl9DSLWriterC1EPNS_8CompilerENS_11ProgramKindERKNS_15ProgramSettingsENS_12ParsedModuleEb = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::Compiler"*, i8, %"struct.SkSL::ProgramSettings"*, %"struct.SkSL::ParsedModule"*, i1), void (%"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::Compiler"*, i8, %"struct.SkSL::ProgramSettings"*, %"struct.SkSL::ParsedModule"*, i1)* @_ZN4SkSL3dsl9DSLWriterC2EPNS_8CompilerENS_11ProgramKindERKNS_15ProgramSettingsENS_12ParsedModuleEb
@_ZN4SkSL3dsl9DSLWriterD1Ev = hidden unnamed_addr alias void (%"class.SkSL::dsl::DSLWriter"*), void (%"class.SkSL::dsl::DSLWriter"*)* @_ZN4SkSL3dsl9DSLWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl9DSLWriterC2EPNS_8CompilerENS_11ProgramKindERKNS_15ProgramSettingsENS_12ParsedModuleEb(%"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::Compiler"*, i8 signext, %"struct.SkSL::ProgramSettings"* nocapture readonly dereferenceable(56), %"struct.SkSL::ParsedModule"* byval(%"struct.SkSL::ParsedModule") align 8, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = bitcast %"class.SkSL::dsl::DSLWriter"* %0 to i64*
  %8 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.1"* %8 to i64*
  %10 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 2
  %11 = bitcast %"class.SkSL::dsl::DSLWriter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  store %"class.SkSL::Compiler"* %1, %"class.SkSL::Compiler"** %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 3
  %13 = bitcast %"class.std::__1::unique_ptr.178"* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 7
  %16 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 9, i32 0
  %17 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %3, i64 0, i32 0
  %18 = bitcast %"class.std::__1::vector.142"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 56, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 56, i1 false)
  %19 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 10, i32 0
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 11
  %21 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %21, %"struct.std::__1::__list_node_base"** %22, align 8
  %23 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %21, %"struct.std::__1::__list_node_base"** %23, align 8
  %24 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %1, i64 0, i32 1, i32 0
  %26 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %25, align 8
  %27 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %26, i64 0, i32 3
  %28 = bitcast %"class.SkSL::ModifiersPool"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 5
  %31 = bitcast %"class.SkSL::ModifiersPool"** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %25, align 8
  %33 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %32, i64 0, i32 4
  %34 = bitcast %"struct.SkSL::ProgramConfig"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 4
  %37 = bitcast %"struct.SkSL::ProgramConfig"** %36 to i64*
  store i64 %35, i64* %37, align 8
  br i1 %5, label %92, label %38

38:                                               ; preds = %6
  %39 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %25, align 8
  %40 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %39, i64 0, i32 2
  %41 = load %class.GrShaderCaps*, %class.GrShaderCaps** %40, align 8
  %42 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %41, i64 0, i32 2
  %43 = bitcast i56* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 281474976710656
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %58, label %47

47:                                               ; preds = %38
  %48 = tail call %"class.SkSL::Pool"* @_ZN4SkSL4Pool6CreateEv() #16
  %49 = ptrtoint %"class.SkSL::Pool"* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %12, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.SkSL::Pool"*, %"class.SkSL::Pool"** %50, align 8
  store i64 %49, i64* %13, align 8
  %52 = icmp eq %"class.SkSL::Pool"* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %47
  tail call void @_ZN4SkSL4PoolD1Ev(%"class.SkSL::Pool"* nonnull %51) #16
  %54 = bitcast %"class.SkSL::Pool"* %51 to i8*
  tail call void @_ZdlPv(i8* %54) #17
  %55 = load %"class.SkSL::Pool"*, %"class.SkSL::Pool"** %50, align 8
  br label %56

56:                                               ; preds = %53, %47
  %57 = phi %"class.SkSL::Pool"* [ %55, %53 ], [ %48, %47 ]
  tail call void @_ZN4SkSL4Pool14attachToThreadEv(%"class.SkSL::Pool"* %57) #16
  br label %58

58:                                               ; preds = %38, %56
  %59 = tail call i8* @_Znwm(i64 40) #17
  %60 = getelementptr inbounds i8, i8* %59, i64 32
  %61 = bitcast i8* %60 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 40, i1 false) #16
  store i32 1065353216, i32* %61, align 4
  %62 = ptrtoint i8* %59 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %8, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %63, align 8
  store i64 %62, i64* %9, align 8
  %65 = icmp eq %"class.SkSL::ModifiersPool"* %64, null
  br i1 %65, label %85, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %64, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %66, %70
  %71 = phi %"struct.std::__1::__hash_node_base"* [ %73, %70 ], [ %68, %66 ]
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %71, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, align 8
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #17
  %75 = icmp eq %"struct.std::__1::__hash_node_base"* %73, null
  br i1 %75, label %76, label %70

76:                                               ; preds = %70, %66
  %77 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %77, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %77, align 8
  %79 = icmp eq %"struct.std::__1::__hash_node_base"** %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = bitcast %"struct.std::__1::__hash_node_base"** %78 to i8*
  tail call void @_ZdlPv(i8* %81) #17
  br label %82

82:                                               ; preds = %80, %76
  %83 = bitcast %"class.SkSL::ModifiersPool"* %64 to i8*
  tail call void @_ZdlPv(i8* %83) #17
  %84 = load i64, i64* %9, align 8
  br label %85

85:                                               ; preds = %82, %58
  %86 = phi i64 [ %84, %82 ], [ %62, %58 ]
  %87 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %10, align 8
  %88 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %87, i64 0, i32 1, i32 0
  %89 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %88, align 8
  %90 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %89, i64 0, i32 3
  %91 = bitcast %"class.SkSL::ModifiersPool"** %90 to i64*
  store i64 %86, i64* %91, align 8
  br label %92

92:                                               ; preds = %85, %6
  %93 = tail call i8* @_Znwm(i64 64) #17
  %94 = getelementptr inbounds i8, i8* %93, i64 10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %93, i8 0, i64 64, i1 false) #16
  store i8 1, i8* %94, align 2
  %95 = getelementptr inbounds i8, i8* %93, i64 11
  store i8 0, i8* %95, align 1
  %96 = getelementptr inbounds i8, i8* %93, i64 12
  store i8 0, i8* %96, align 4
  %97 = getelementptr inbounds i8, i8* %93, i64 16
  %98 = bitcast i8* %97 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, <4 x i32>* %98, align 8
  %99 = getelementptr inbounds i8, i8* %93, i64 32
  %100 = bitcast i8* %99 to i32*
  store i32 0, i32* %100, align 8
  %101 = getelementptr inbounds i8, i8* %93, i64 36
  store i8 1, i8* %101, align 4
  %102 = getelementptr inbounds i8, i8* %93, i64 37
  store i8 1, i8* %102, align 1
  %103 = getelementptr inbounds i8, i8* %93, i64 38
  store i8 1, i8* %103, align 2
  %104 = getelementptr inbounds i8, i8* %93, i64 40
  %105 = bitcast i8* %104 to i32*
  store i32 50, i32* %105, align 8
  %106 = getelementptr inbounds i8, i8* %93, i64 44
  store i8 0, i8* %106, align 4
  %107 = getelementptr inbounds i8, i8* %93, i64 45
  store i8 0, i8* %107, align 1
  %108 = getelementptr inbounds i8, i8* %93, i64 46
  store i8 1, i8* %108, align 2
  %109 = getelementptr inbounds i8, i8* %93, i64 47
  store i8 0, i8* %109, align 1
  %110 = getelementptr inbounds i8, i8* %93, i64 48
  store i8 0, i8* %110, align 8
  %111 = getelementptr inbounds i8, i8* %93, i64 49
  store i8 1, i8* %111, align 1
  %112 = getelementptr inbounds i8, i8* %93, i64 50
  store i8 1, i8* %112, align 2
  %113 = getelementptr inbounds i8, i8* %93, i64 51
  store i8 0, i8* %113, align 1
  %114 = getelementptr inbounds i8, i8* %93, i64 56
  %115 = bitcast i8* %114 to %"class.std::__1::vector"**
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %115, align 8
  %116 = ptrtoint i8* %93 to i64
  %117 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %117, align 8
  store i64 %116, i64* %7, align 8
  %119 = icmp eq %"struct.SkSL::ProgramConfig"* %118, null
  %120 = bitcast i8* %93 to %"struct.SkSL::ProgramConfig"*
  br i1 %119, label %124, label %121

121:                                              ; preds = %92
  %122 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %118, i64 0, i32 0
  tail call void @_ZdlPv(i8* %122) #17
  %123 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %117, align 8
  br label %124

124:                                              ; preds = %121, %92
  %125 = phi %"struct.SkSL::ProgramConfig"* [ %123, %121 ], [ %120, %92 ]
  %126 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %125, i64 0, i32 0
  store i8 %2, i8* %126, align 8
  %127 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %117, align 8
  %128 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %127, i64 0, i32 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %17, i64 56, i1 false)
  %129 = load i64, i64* %7, align 8
  %130 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %10, align 8
  %131 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %130, i64 0, i32 1, i32 0
  %132 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %131, align 8
  %133 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %132, i64 0, i32 4
  %134 = bitcast %"struct.SkSL::ProgramConfig"** %133 to i64*
  store i64 %129, i64* %134, align 8
  %135 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %10, align 8
  %136 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %135, i64 0, i32 16, i32 0, i32 0, i32 0
  %137 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %136, align 8
  call void @_ZN4SkSL11IRGenerator5startERKNS_12ParsedModuleEbPNSt3__16vectorINS4_10unique_ptrINS_14ProgramElementENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEPNS5_IPKS7_NSB_ISG_EEEE(%"class.SkSL::IRGenerator"* %137, %"struct.SkSL::ParsedModule"* nonnull dereferenceable(32) %4, i1 zeroext %5, %"class.std::__1::vector.142"* %14, %"class.std::__1::vector.155"* %15) #16
  %138 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 1, i32 1
  %139 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %138, align 8
  %140 = icmp eq %"class.std::__1::__shared_weak_count"* %139, null
  br i1 %140, label %151, label %141

141:                                              ; preds = %124
  %142 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %139, i64 0, i32 0, i32 1
  %143 = atomicrmw add i64* %142, i64 -1 acq_rel
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %151

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %139, i64 0, i32 0
  %147 = bitcast %"class.std::__1::__shared_weak_count"* %139 to void (%"class.std::__1::__shared_count"*)***
  %148 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %148, i64 2
  %150 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %149, align 8
  call void %150(%"class.std::__1::__shared_count"* %146) #16
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %139) #16
  br label %151

151:                                              ; preds = %145, %141, %124
  %152 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 0, i32 1
  %153 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %152, align 8
  %154 = icmp eq %"class.std::__1::__shared_weak_count"* %153, null
  br i1 %154, label %165, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %153, i64 0, i32 0, i32 1
  %157 = atomicrmw add i64* %156, i64 -1 acq_rel
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %165

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %153, i64 0, i32 0
  %161 = bitcast %"class.std::__1::__shared_weak_count"* %153 to void (%"class.std::__1::__shared_count"*)***
  %162 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %161, align 8
  %163 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %162, i64 2
  %164 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %163, align 8
  call void %164(%"class.std::__1::__shared_count"* %160) #16
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %153) #16
  br label %165

165:                                              ; preds = %151, %155, %159
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.SkSL::Pool"* @_ZN4SkSL4Pool6CreateEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4SkSL4Pool14attachToThreadEv(%"class.SkSL::Pool"*) local_unnamed_addr #2

declare void @_ZN4SkSL11IRGenerator5startERKNS_12ParsedModuleEbPNSt3__16vectorINS4_10unique_ptrINS_14ProgramElementENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEPNS5_IPKS7_NSB_ISG_EEEE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ParsedModule"* dereferenceable(32), i1 zeroext, %"class.std::__1::vector.142"*, %"class.std::__1::vector.155"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl9DSLWriterD2Ev(%"class.SkSL::dsl::DSLWriter"*) unnamed_addr #3 align 2 {
  %2 = alloca %"struct.SkSL::IRGenerator::IRBundle", align 8
  %3 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %3, i64 0, i32 2
  %5 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %5, i64 0, i32 16, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %7, i64 0, i32 4, i32 0
  %9 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %8, align 8
  %10 = icmp eq %"class.SkSL::SymbolTable"* %9, null
  br i1 %10, label %85, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 2
  %13 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %13, i64 0, i32 16, i32 0, i32 0, i32 0
  %15 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %14, align 8
  call void @_ZN4SkSL11IRGenerator6finishEv(%"struct.SkSL::IRGenerator::IRBundle"* nonnull sret %2, %"class.SkSL::IRGenerator"* %15) #16
  %16 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %2, i64 0, i32 2, i32 1
  %17 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  %18 = icmp eq %"class.std::__1::__shared_weak_count"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0, i32 1
  %21 = atomicrmw add i64* %20, i64 -1 acq_rel
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0
  %25 = bitcast %"class.std::__1::__shared_weak_count"* %17 to void (%"class.std::__1::__shared_count"*)***
  %26 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %26, i64 2
  %28 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, align 8
  call void %28(%"class.std::__1::__shared_count"* %24) #16
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %17) #16
  br label %29

29:                                               ; preds = %23, %19, %11
  %30 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %2, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %30, align 8
  %32 = icmp eq %"class.SkSL::ProgramElement"** %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"class.SkSL::ProgramElement"** %31 to i64
  %35 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %2, i64 0, i32 1, i32 0, i32 1
  %36 = bitcast %"class.SkSL::ProgramElement"*** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"class.SkSL::ProgramElement"** %31 to i8*
  call void @_ZdlPv(i8* %37) #17
  br label %38

38:                                               ; preds = %33, %29
  %39 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %2, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.std::__1::unique_ptr.144"*, %"class.std::__1::unique_ptr.144"** %39, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr.144"* %40, null
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.std::__1::unique_ptr.144"* %40 to i8*
  %44 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %2, i64 0, i32 0, i32 0, i32 1
  %45 = load %"class.std::__1::unique_ptr.144"*, %"class.std::__1::unique_ptr.144"** %44, align 8
  %46 = icmp eq %"class.std::__1::unique_ptr.144"* %45, %40
  br i1 %46, label %63, label %47

47:                                               ; preds = %42, %58
  %48 = phi %"class.std::__1::unique_ptr.144"* [ %49, %58 ], [ %45, %42 ]
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144"* %48, i64 -1
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %50, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %50, align 8
  %52 = icmp eq %"class.SkSL::ProgramElement"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.SkSL::ProgramElement"* %51 to void (%"class.SkSL::ProgramElement"*)***
  %55 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %55, i64 1
  %57 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %56, align 8
  call void %57(%"class.SkSL::ProgramElement"* nonnull %51) #16
  br label %58

58:                                               ; preds = %53, %47
  %59 = icmp eq %"class.std::__1::unique_ptr.144"* %49, %40
  br i1 %59, label %60, label %47

60:                                               ; preds = %58
  %61 = bitcast %"struct.SkSL::IRGenerator::IRBundle"* %2 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %42
  %64 = phi i8* [ %62, %60 ], [ %43, %42 ]
  store %"class.std::__1::unique_ptr.144"* %40, %"class.std::__1::unique_ptr.144"** %44, align 8
  call void @_ZdlPv(i8* %64) #17
  br label %65

65:                                               ; preds = %38, %63
  %66 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 6, i32 0, i32 0
  %67 = load %"class.std::__1::unique_ptr.144"*, %"class.std::__1::unique_ptr.144"** %66, align 8
  %68 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 6, i32 0, i32 1
  %69 = load %"class.std::__1::unique_ptr.144"*, %"class.std::__1::unique_ptr.144"** %68, align 8
  %70 = icmp eq %"class.std::__1::unique_ptr.144"* %69, %67
  br i1 %70, label %84, label %71

71:                                               ; preds = %65, %82
  %72 = phi %"class.std::__1::unique_ptr.144"* [ %73, %82 ], [ %69, %65 ]
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144"* %72, i64 -1
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %74, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %74, align 8
  %76 = icmp eq %"class.SkSL::ProgramElement"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %71
  %78 = bitcast %"class.SkSL::ProgramElement"* %75 to void (%"class.SkSL::ProgramElement"*)***
  %79 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %79, i64 1
  %81 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %80, align 8
  call void %81(%"class.SkSL::ProgramElement"* nonnull %75) #16
  br label %82

82:                                               ; preds = %77, %71
  %83 = icmp eq %"class.std::__1::unique_ptr.144"* %73, %67
  br i1 %83, label %84, label %71

84:                                               ; preds = %82, %65
  store %"class.std::__1::unique_ptr.144"* %67, %"class.std::__1::unique_ptr.144"** %68, align 8
  br label %85

85:                                               ; preds = %1, %84
  %86 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 4
  %87 = bitcast %"struct.SkSL::ProgramConfig"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 2
  %90 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %89, align 8
  %91 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %90, i64 0, i32 1, i32 0
  %92 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %91, align 8
  %93 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %92, i64 0, i32 4
  %94 = bitcast %"struct.SkSL::ProgramConfig"** %93 to i64*
  store i64 %88, i64* %94, align 8
  %95 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 5
  %96 = bitcast %"class.SkSL::ModifiersPool"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %89, align 8
  %99 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %98, i64 0, i32 1, i32 0
  %100 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %99, align 8
  %101 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %100, i64 0, i32 3
  %102 = bitcast %"class.SkSL::ModifiersPool"** %101 to i64*
  store i64 %97, i64* %102, align 8
  %103 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %104 = load %"class.SkSL::Pool"*, %"class.SkSL::Pool"** %103, align 8
  %105 = icmp eq %"class.SkSL::Pool"* %104, null
  br i1 %105, label %107, label %106

106:                                              ; preds = %85
  call void @_ZN4SkSL4Pool16detachFromThreadEv(%"class.SkSL::Pool"* nonnull %104) #16
  br label %107

107:                                              ; preds = %85, %106
  %108 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 11, i32 0, i32 0
  call void @_ZNSt3__110__list_impIN4SkSL3dsl9DSLWriter10StackFrameENS_9allocatorIS4_EEE5clearEv(%"class.std::__1::__list_imp"* %108) #16
  %109 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 7, i32 0, i32 0
  %110 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %109, align 8
  %111 = icmp eq %"class.SkSL::ProgramElement"** %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %107
  %113 = ptrtoint %"class.SkSL::ProgramElement"** %110 to i64
  %114 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 7, i32 0, i32 1
  %115 = bitcast %"class.SkSL::ProgramElement"*** %114 to i64*
  store i64 %113, i64* %115, align 8
  %116 = bitcast %"class.SkSL::ProgramElement"** %110 to i8*
  call void @_ZdlPv(i8* %116) #17
  br label %117

117:                                              ; preds = %107, %112
  %118 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 6
  %119 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %118, i64 0, i32 0, i32 0
  %120 = load %"class.std::__1::unique_ptr.144"*, %"class.std::__1::unique_ptr.144"** %119, align 8
  %121 = icmp eq %"class.std::__1::unique_ptr.144"* %120, null
  br i1 %121, label %145, label %122

122:                                              ; preds = %117
  %123 = bitcast %"class.std::__1::unique_ptr.144"* %120 to i8*
  %124 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 6, i32 0, i32 1
  %125 = load %"class.std::__1::unique_ptr.144"*, %"class.std::__1::unique_ptr.144"** %124, align 8
  %126 = icmp eq %"class.std::__1::unique_ptr.144"* %125, %120
  br i1 %126, label %143, label %127

127:                                              ; preds = %122, %138
  %128 = phi %"class.std::__1::unique_ptr.144"* [ %129, %138 ], [ %125, %122 ]
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144"* %128, i64 -1
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144"* %129, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %130, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %130, align 8
  %132 = icmp eq %"class.SkSL::ProgramElement"* %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %127
  %134 = bitcast %"class.SkSL::ProgramElement"* %131 to void (%"class.SkSL::ProgramElement"*)***
  %135 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %135, i64 1
  %137 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %136, align 8
  call void %137(%"class.SkSL::ProgramElement"* nonnull %131) #16
  br label %138

138:                                              ; preds = %133, %127
  %139 = icmp eq %"class.std::__1::unique_ptr.144"* %129, %120
  br i1 %139, label %140, label %127

140:                                              ; preds = %138
  %141 = bitcast %"class.std::__1::vector.142"* %118 to i8**
  %142 = load i8*, i8** %141, align 8
  br label %143

143:                                              ; preds = %140, %122
  %144 = phi i8* [ %142, %140 ], [ %123, %122 ]
  store %"class.std::__1::unique_ptr.144"* %120, %"class.std::__1::unique_ptr.144"** %124, align 8
  call void @_ZdlPv(i8* %144) #17
  br label %145

145:                                              ; preds = %117, %143
  %146 = load %"class.SkSL::Pool"*, %"class.SkSL::Pool"** %103, align 8
  store %"class.SkSL::Pool"* null, %"class.SkSL::Pool"** %103, align 8
  %147 = icmp eq %"class.SkSL::Pool"* %146, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %145
  call void @_ZN4SkSL4PoolD1Ev(%"class.SkSL::Pool"* nonnull %146) #16
  %149 = bitcast %"class.SkSL::Pool"* %146 to i8*
  call void @_ZdlPv(i8* %149) #17
  br label %150

150:                                              ; preds = %145, %148
  %151 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %152 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %151, align 8
  store %"class.SkSL::ModifiersPool"* null, %"class.SkSL::ModifiersPool"** %151, align 8
  %153 = icmp eq %"class.SkSL::ModifiersPool"* %152, null
  br i1 %153, label %172, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %152, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %156 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %155, align 8
  %157 = icmp eq %"struct.std::__1::__hash_node_base"* %156, null
  br i1 %157, label %164, label %158

158:                                              ; preds = %154, %158
  %159 = phi %"struct.std::__1::__hash_node_base"* [ %161, %158 ], [ %156, %154 ]
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %159, i64 0, i32 0
  %161 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %160, align 8
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %159 to i8*
  call void @_ZdlPv(i8* %162) #17
  %163 = icmp eq %"struct.std::__1::__hash_node_base"* %161, null
  br i1 %163, label %164, label %158

164:                                              ; preds = %158, %154
  %165 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %165, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %165, align 8
  %167 = icmp eq %"struct.std::__1::__hash_node_base"** %166, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %164
  %169 = bitcast %"struct.std::__1::__hash_node_base"** %166 to i8*
  call void @_ZdlPv(i8* %169) #17
  br label %170

170:                                              ; preds = %168, %164
  %171 = bitcast %"class.SkSL::ModifiersPool"* %152 to i8*
  call void @_ZdlPv(i8* %171) #17
  br label %172

172:                                              ; preds = %150, %170
  %173 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %174 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %173, align 8
  store %"struct.SkSL::ProgramConfig"* null, %"struct.SkSL::ProgramConfig"** %173, align 8
  %175 = icmp eq %"struct.SkSL::ProgramConfig"* %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %174, i64 0, i32 0
  call void @_ZdlPv(i8* %177) #17
  br label %178

178:                                              ; preds = %172, %176
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(16) %"class.std::__1::shared_ptr.49"* @_ZN4SkSL3dsl9DSLWriter11SymbolTableEv() local_unnamed_addr #4 align 2 {
  %1 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %2 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %1, i64 0, i32 2
  %3 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %2, align 8
  %4 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %3, i64 0, i32 16, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %5, i64 0, i32 4
  ret %"class.std::__1::shared_ptr.49"* %6
}

declare void @_ZN4SkSL11IRGenerator6finishEv(%"struct.SkSL::IRGenerator::IRBundle"* sret, %"class.SkSL::IRGenerator"*) local_unnamed_addr #2

declare void @_ZN4SkSL4Pool16detachFromThreadEv(%"class.SkSL::Pool"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(176) %"class.SkSL::IRGenerator"* @_ZN4SkSL3dsl9DSLWriter11IRGeneratorEv() local_unnamed_addr #4 align 2 {
  %1 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %2 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %1, i64 0, i32 2
  %3 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %2, align 8
  %4 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %3, i64 0, i32 16, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %4, align 8
  ret %"class.SkSL::IRGenerator"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() local_unnamed_addr #4 align 2 {
  %1 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %2 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %1, i64 0, i32 2
  %3 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %2, align 8
  %4 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %3, i64 0, i32 16, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %5, i64 0, i32 0
  %7 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %6, align 8
  ret %"class.SkSL::Context"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl9DSLWriter5ResetEv() local_unnamed_addr #3 align 2 {
  %1 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %2 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %1, i64 0, i32 2
  %3 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %2, align 8
  %4 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %3, i64 0, i32 16, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %4, align 8
  tail call void @_ZN4SkSL11IRGenerator14popSymbolTableEv(%"class.SkSL::IRGenerator"* %5) #16
  %6 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %6, i64 0, i32 2
  %8 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %8, i64 0, i32 16, i32 0, i32 0, i32 0
  %10 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %9, align 8
  tail call void @_ZN4SkSL11IRGenerator15pushSymbolTableEv(%"class.SkSL::IRGenerator"* %10) #16
  %11 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %12 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %11, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.144"*, %"class.std::__1::unique_ptr.144"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %11, i64 0, i32 6, i32 0, i32 1
  %15 = load %"class.std::__1::unique_ptr.144"*, %"class.std::__1::unique_ptr.144"** %14, align 8
  %16 = icmp eq %"class.std::__1::unique_ptr.144"* %15, %13
  br i1 %16, label %32, label %17

17:                                               ; preds = %0, %28
  %18 = phi %"class.std::__1::unique_ptr.144"* [ %19, %28 ], [ %15, %0 ]
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144"* %18, i64 -1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %20, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %20, align 8
  %22 = icmp eq %"class.SkSL::ProgramElement"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.SkSL::ProgramElement"* %21 to void (%"class.SkSL::ProgramElement"*)***
  %25 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %25, i64 1
  %27 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %26, align 8
  tail call void %27(%"class.SkSL::ProgramElement"* nonnull %21) #16
  br label %28

28:                                               ; preds = %23, %17
  %29 = icmp eq %"class.std::__1::unique_ptr.144"* %19, %13
  br i1 %29, label %30, label %17

30:                                               ; preds = %28
  %31 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  br label %32

32:                                               ; preds = %30, %0
  %33 = phi %"class.SkSL::dsl::DSLWriter"* [ %31, %30 ], [ %11, %0 ]
  store %"class.std::__1::unique_ptr.144"* %13, %"class.std::__1::unique_ptr.144"** %14, align 8
  %34 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %34, align 8
  %36 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %35, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %89, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %39, %43
  %44 = phi %"struct.std::__1::__hash_node_base"* [ %46, %43 ], [ %41, %39 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, align 8
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %44 to i8*
  tail call void @_ZdlPv(i8* %47) #17
  %48 = icmp eq %"struct.std::__1::__hash_node_base"* %46, null
  br i1 %48, label %49, label %43

49:                                               ; preds = %43, %39
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %40, align 8
  %50 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %71, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = add i64 %51, -1
  %56 = and i64 %51, 3
  %57 = icmp ult i64 %55, 3
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = sub i64 %51, %56
  br label %72

60:                                               ; preds = %72, %53
  %61 = phi i64 [ 0, %53 ], [ %86, %72 ]
  %62 = icmp eq i64 %56, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %60, %63
  %64 = phi i64 [ %68, %63 ], [ %61, %60 ]
  %65 = phi i64 [ %69, %63 ], [ %56, %60 ]
  %66 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %54, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %66, i64 %64
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %68 = add nuw i64 %64, 1
  %69 = add i64 %65, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %63, !llvm.loop !2

71:                                               ; preds = %60, %63, %49
  store i64 0, i64* %36, align 8
  br label %89

72:                                               ; preds = %72, %58
  %73 = phi i64 [ 0, %58 ], [ %86, %72 ]
  %74 = phi i64 [ %59, %58 ], [ %87, %72 ]
  %75 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %54, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, i64 %73
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %76, align 8
  %77 = or i64 %73, 1
  %78 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %54, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %78, i64 %77
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %79, align 8
  %80 = or i64 %73, 2
  %81 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %54, align 8
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %81, i64 %80
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %82, align 8
  %83 = or i64 %73, 3
  %84 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %54, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %84, i64 %83
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %85, align 8
  %86 = add nuw i64 %73, 4
  %87 = add i64 %74, -4
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %60, label %72

89:                                               ; preds = %32, %71
  ret void
}

declare void @_ZN4SkSL11IRGenerator14popSymbolTableEv(%"class.SkSL::IRGenerator"*) local_unnamed_addr #2

declare void @_ZN4SkSL11IRGenerator15pushSymbolTableEv(%"class.SkSL::IRGenerator"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() local_unnamed_addr #4 align 2 {
  %1 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  ret %"class.SkSL::dsl::DSLWriter"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.SkSL::Modifiers"* @_ZN4SkSL3dsl9DSLWriter9ModifiersERKNS_9ModifiersE(%"struct.SkSL::Modifiers"* dereferenceable(80)) local_unnamed_addr #3 align 2 {
  %2 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %2, i64 0, i32 2
  %4 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %4, i64 0, i32 16, i32 0, i32 0, i32 0
  %6 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %6, i64 0, i32 0
  %8 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %8, i64 0, i32 3
  %10 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %10, i64 0, i32 0, i32 0
  %12 = tail call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %11, %"struct.SkSL::Modifiers"* dereferenceable(80) %0, %"struct.SkSL::Modifiers"* dereferenceable(80) %0) #16
  %13 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %12, 0
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %13, i64 2
  %15 = bitcast %"struct.std::__1::__hash_node_base"* %14 to %"struct.SkSL::Modifiers"*
  ret %"struct.SkSL::Modifiers"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4SkSL3dsl9DSLWriter4NameEPKc(i8* readonly) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %5 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %4, i64 0, i32 9, i32 20
  %6 = load i8, i8* %5, align 2, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %72, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %4, i64 0, i32 2
  %10 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %10, i64 0, i32 16, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %12, i64 0, i32 4, i32 0
  %14 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %4, i64 0, i32 10
  %16 = tail call i64 @strlen(i8* %0) #16
  %17 = icmp ugt i64 %16, -17
  br i1 %17, label %18, label %20

18:                                               ; preds = %8
  %19 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %19) #18
  unreachable

20:                                               ; preds = %8
  %21 = icmp ult i64 %16, 23
  br i1 %21, label %30, label %22

22:                                               ; preds = %20
  %23 = add nuw i64 %16, 16
  %24 = and i64 %23, -16
  %25 = tail call i8* @_Znwm(i64 %24) #17
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %25, i8** %26, align 8
  %27 = or i64 %24, -9223372036854775808
  %28 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %16, i64* %29, align 8
  br label %36

30:                                               ; preds = %20
  %31 = trunc i64 %16 to i8
  %32 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 %31, i8* %33, align 1
  %34 = bitcast %"class.SkSL::String"* %3 to i8*
  %35 = icmp eq i64 %16, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %30, %22
  %37 = phi i8* [ %25, %22 ], [ %34, %30 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %37, i8* align 1 %0, i64 %16, i1 false) #16
  br label %38

38:                                               ; preds = %30, %36
  %39 = phi i8* [ %34, %30 ], [ %37, %36 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %16
  store i8 0, i8* %40, align 1
  %41 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %9, align 8
  %42 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %41, i64 0, i32 16, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %42, align 8
  %44 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %43, i64 0, i32 4, i32 0
  %45 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %44, align 8
  call void @_ZN4SkSL7Mangler10uniqueNameENS_6StringEPNS_11SymbolTableE(%"class.SkSL::String"* nonnull sret %2, %"class.SkSL::Mangler"* %15, %"class.SkSL::String"* nonnull %3, %"class.SkSL::SymbolTable"* %45) #16
  %46 = call %"class.SkSL::String"* @_ZN4SkSL11SymbolTable21takeOwnershipOfStringENS_6StringE(%"class.SkSL::SymbolTable"* %14, %"class.SkSL::String"* nonnull %2) #16
  %47 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #17
  br label %54

54:                                               ; preds = %38, %51
  %55 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #17
  br label %62

62:                                               ; preds = %54, %59
  %63 = bitcast %"class.SkSL::String"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  br label %72

70:                                               ; preds = %62
  %71 = bitcast %"class.SkSL::String"* %46 to i8*
  br label %72

72:                                               ; preds = %1, %70, %67
  %73 = phi i8* [ %0, %1 ], [ %69, %67 ], [ %71, %70 ]
  ret i8* %73
}

declare %"class.SkSL::String"* @_ZN4SkSL11SymbolTable21takeOwnershipOfStringENS_6StringE(%"class.SkSL::SymbolTable"*, %"class.SkSL::String"*) local_unnamed_addr #2

declare void @_ZN4SkSL7Mangler10uniqueNameENS_6StringEPNS_11SymbolTableE(%"class.SkSL::String"* sret, %"class.SkSL::Mangler"*, %"class.SkSL::String"*, %"class.SkSL::SymbolTable"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl9DSLWriter22StartFragmentProcessorEP23GrGLSLFragmentProcessorPNS2_8EmitArgsE(%class.GrGLSLFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"struct.SkSL::dsl::DSLWriter::StackFrame", align 8
  %4 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %5 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %4, i64 0, i32 11
  %6 = bitcast %"struct.SkSL::dsl::DSLWriter::StackFrame"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"struct.SkSL::dsl::DSLWriter::StackFrame", %"struct.SkSL::dsl::DSLWriter::StackFrame"* %3, i64 0, i32 0
  store %class.GrGLSLFragmentProcessor* %0, %class.GrGLSLFragmentProcessor** %7, align 8
  %8 = getelementptr inbounds %"struct.SkSL::dsl::DSLWriter::StackFrame", %"struct.SkSL::dsl::DSLWriter::StackFrame"* %3, i64 0, i32 1
  store %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, %"struct.GrGLSLFragmentProcessor::EmitArgs"** %8, align 8
  %9 = getelementptr inbounds %"struct.SkSL::dsl::DSLWriter::StackFrame", %"struct.SkSL::dsl::DSLWriter::StackFrame"* %3, i64 0, i32 2, i32 0, i32 0, i64 16
  %10 = getelementptr inbounds %"struct.SkSL::dsl::DSLWriter::StackFrame", %"struct.SkSL::dsl::DSLWriter::StackFrame"* %3, i64 0, i32 2, i32 0, i32 0, i64 0
  %11 = getelementptr inbounds %"struct.SkSL::dsl::DSLWriter::StackFrame", %"struct.SkSL::dsl::DSLWriter::StackFrame"* %3, i64 0, i32 2, i32 0, i32 0, i64 24
  %12 = bitcast i8* %11 to i64*
  %13 = bitcast i8* %9 to i8**
  store i8* %10, i8** %13, align 8
  store i64 17179869184, i64* %12, align 8
  %14 = call i8* @_Znwm(i64 64) #17, !noalias !5
  %15 = bitcast i8* %14 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %15, align 8, !noalias !5
  %16 = getelementptr inbounds i8, i8* %14, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %6, i64 16, i1 false) #16
  %17 = getelementptr inbounds i8, i8* %14, i64 48
  %18 = getelementptr inbounds i8, i8* %14, i64 32
  %19 = getelementptr inbounds i8, i8* %14, i64 56
  %20 = bitcast i8* %19 to i64*
  %21 = bitcast i8* %17 to i8**
  store i8* %18, i8** %21, align 8
  store i64 17179869184, i64* %20, align 8
  %22 = bitcast i8* %17 to %class.SkTArray.230*
  %23 = bitcast i8* %9 to %class.SkTArray.230*
  %24 = call dereferenceable(16) %class.SkTArray.230* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.230* %22, %class.SkTArray.230* dereferenceable(16) %23) #16
  %25 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %5, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds i8, i8* %14, i64 8
  %27 = bitcast i8* %26 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %25, %"struct.std::__1::__list_node_base"** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %28, align 8
  store %"struct.std::__1::__list_node_base"* %29, %"struct.std::__1::__list_node_base"** %15, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %29, i64 0, i32 1
  %31 = bitcast %"struct.std::__1::__list_node_base"** %30 to i8**
  store i8* %14, i8** %31, align 8
  %32 = bitcast %"class.std::__1::stack"* %5 to i8**
  store i8* %14, i8** %32, align 8
  %33 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %4, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %33, align 8
  %36 = load i64, i64* %12, align 8
  %37 = and i64 %36, 4294967294
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %2
  %40 = bitcast i8* %9 to %"class.std::__1::unique_ptr.231"**
  br label %45

41:                                               ; preds = %56, %2
  %42 = phi i64 [ %36, %2 ], [ %58, %56 ]
  %43 = and i64 %42, 1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %64, label %62

45:                                               ; preds = %56, %39
  %46 = phi i64 [ 0, %39 ], [ %57, %56 ]
  %47 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %40, align 8
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %47, i64 %46, i32 0, i32 0, i32 0
  %49 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %48, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %48, align 8
  %50 = icmp eq %"class.SkSL::Statement"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.SkSL::Statement"* %49 to void (%"class.SkSL::Statement"*)***
  %53 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %53, i64 1
  %55 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %54, align 8
  call void %55(%"class.SkSL::Statement"* nonnull %49) #16
  br label %56

56:                                               ; preds = %51, %45
  %57 = add nuw nsw i64 %46, 1
  %58 = load i64, i64* %12, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = icmp ult i64 %57, %60
  br i1 %61, label %45, label %41

62:                                               ; preds = %41
  %63 = load i8*, i8** %13, align 8
  call void @_Z7sk_freePv(i8* %63) #16
  br label %64

64:                                               ; preds = %41, %62
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #16
  %65 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %66 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %65, i64 0, i32 11
  %67 = bitcast %"class.std::__1::stack"* %66 to %"struct.std::__1::__list_node"**
  %68 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %68, i64 0, i32 1, i32 1
  %70 = load %"struct.GrGLSLFragmentProcessor::EmitArgs"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"** %69, align 8
  %71 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %70, i64 0, i32 0
  %72 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %71, align 8
  %73 = bitcast %class.GrGLSLFPFragmentBuilder* %72 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr i8, i8* %74, i64 -24
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %class.GrGLSLFPFragmentBuilder* %72 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 %77
  %80 = getelementptr inbounds i8, i8* %79, i64 200
  %81 = getelementptr inbounds i8, i8* %80, i64 16
  %82 = bitcast i8* %81 to %class.SkTArray.230*
  %83 = bitcast %"class.std::__1::stack"* %5 to %"struct.std::__1::__list_node"**
  %84 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %83, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %84, i64 0, i32 1, i32 2, i32 0, i32 0, i64 16
  %86 = bitcast i8* %85 to %class.SkTArray.230*
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE4swapERS7_(%class.SkTArray.230* %82, %class.SkTArray.230* dereferenceable(16) %86)
  %87 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %88 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %87, i64 0, i32 2
  %89 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %88, align 8
  %90 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %89, i64 0, i32 16, i32 0, i32 0, i32 0
  %91 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %90, align 8
  call void @_ZN4SkSL11IRGenerator15pushSymbolTableEv(%"class.SkSL::IRGenerator"* %91) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE4swapERS7_(%class.SkTArray.230*, %class.SkTArray.230* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.SkTArray.230, align 8
  %4 = icmp eq %class.SkTArray.230* %0, %1
  br i1 %4, label %72, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %37, label %15

15:                                               ; preds = %10
  %16 = bitcast %class.SkTArray.230* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %class.SkTArray.230* %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i64, i64* %6, align 8
  %21 = and i64 %20, 4294967294
  %22 = load i64, i64* %11, align 8
  %23 = and i64 %22, 4294967294
  %24 = and i64 %20, -4294967295
  %25 = or i64 %23, %24
  store i64 %25, i64* %6, align 8
  %26 = load i64, i64* %11, align 8
  %27 = and i64 %26, -4294967295
  %28 = or i64 %27, %21
  store i64 %28, i64* %11, align 8
  %29 = load i64, i64* %6, align 8
  %30 = and i64 %29, -8589934592
  %31 = and i64 %26, -8589934592
  %32 = and i64 %29, 8589934591
  %33 = or i64 %32, %31
  store i64 %33, i64* %6, align 8
  %34 = load i64, i64* %11, align 8
  %35 = and i64 %34, 8589934591
  %36 = or i64 %35, %30
  store i64 %36, i64* %11, align 8
  br label %72

37:                                               ; preds = %10, %5
  %38 = bitcast %class.SkTArray.230* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #16
  %39 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %3, i64 0, i32 0
  %40 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %3, i64 0, i32 1
  %41 = bitcast %class.SkTArray.230* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEC2EOS7_(%class.SkTArray.230* nonnull %3, %class.SkTArray.230* dereferenceable(16) %1)
  %42 = call dereferenceable(16) %class.SkTArray.230* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.230* %1, %class.SkTArray.230* dereferenceable(16) %0)
  %43 = call dereferenceable(16) %class.SkTArray.230* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.230* %0, %class.SkTArray.230* nonnull dereferenceable(16) %3)
  %44 = load i64, i64* %40, align 8
  %45 = and i64 %44, 4294967294
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %62, %37
  %48 = phi i64 [ %44, %37 ], [ %64, %62 ]
  %49 = and i64 %48, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %71, label %68

51:                                               ; preds = %37, %62
  %52 = phi i64 [ %63, %62 ], [ 0, %37 ]
  %53 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %39, align 8
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %53, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %54, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %54, align 8
  %56 = icmp eq %"class.SkSL::Statement"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.SkSL::Statement"* %55 to void (%"class.SkSL::Statement"*)***
  %59 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %59, i64 1
  %61 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %60, align 8
  call void %61(%"class.SkSL::Statement"* nonnull %55) #16
  br label %62

62:                                               ; preds = %57, %51
  %63 = add nuw nsw i64 %52, 1
  %64 = load i64, i64* %40, align 8
  %65 = lshr i64 %64, 1
  %66 = and i64 %65, 2147483647
  %67 = icmp ult i64 %63, %66
  br i1 %67, label %51, label %47

68:                                               ; preds = %47
  %69 = bitcast %class.SkTArray.230* %3 to i8**
  %70 = load i8*, i8** %69, align 8
  call void @_Z7sk_freePv(i8* %70) #16
  br label %71

71:                                               ; preds = %47, %68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #16
  br label %72

72:                                               ; preds = %2, %71, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl9DSLWriter20EndFragmentProcessorEv() local_unnamed_addr #3 align 2 {
  %1 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %2 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %1, i64 0, i32 11
  %3 = bitcast %"class.std::__1::stack"* %2 to %"struct.std::__1::__list_node"**
  %4 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %4, i64 0, i32 1, i32 1
  %6 = load %"struct.GrGLSLFragmentProcessor::EmitArgs"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"** %5, align 8
  %7 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %6, i64 0, i32 0
  %8 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %7, align 8
  %9 = bitcast %class.GrGLSLFPFragmentBuilder* %8 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr i8, i8* %10, i64 -24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.GrGLSLFPFragmentBuilder* %8 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = getelementptr inbounds i8, i8* %15, i64 200
  %17 = getelementptr inbounds i8, i8* %16, i64 16
  %18 = bitcast i8* %17 to %class.SkTArray.230*
  %19 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %4, i64 0, i32 1, i32 2, i32 0, i32 0, i64 16
  %20 = bitcast i8* %19 to %class.SkTArray.230*
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE4swapERS7_(%class.SkTArray.230* %18, %class.SkTArray.230* dereferenceable(16) %20)
  %21 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__list_node_base"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 0, i32 0
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %27, i64 0, i32 1
  %29 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = bitcast %"struct.std::__1::__list_node_base"* %22 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"struct.std::__1::__list_node_base"** %23 to i64**
  %33 = load i64*, i64** %32, align 8
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %1, i64 0, i32 11, i32 0, i32 0, i32 1, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, -1
  store i64 %36, i64* %34, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 3
  %38 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 3, i32 1
  %39 = bitcast %"struct.std::__1::__list_node_base"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 4294967294
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %0
  %44 = bitcast %"struct.std::__1::__list_node_base"* %37 to %"class.std::__1::unique_ptr.231"**
  br label %49

45:                                               ; preds = %60, %0
  %46 = phi i64 [ %40, %0 ], [ %62, %60 ]
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %69, label %66

49:                                               ; preds = %60, %43
  %50 = phi i64 [ 0, %43 ], [ %61, %60 ]
  %51 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %44, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %51, i64 %50, i32 0, i32 0, i32 0
  %53 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %52, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %52, align 8
  %54 = icmp eq %"class.SkSL::Statement"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %49
  %56 = bitcast %"class.SkSL::Statement"* %53 to void (%"class.SkSL::Statement"*)***
  %57 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %57, i64 1
  %59 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %58, align 8
  tail call void %59(%"class.SkSL::Statement"* nonnull %53) #16
  br label %60

60:                                               ; preds = %55, %49
  %61 = add nuw nsw i64 %50, 1
  %62 = load i64, i64* %39, align 8
  %63 = lshr i64 %62, 1
  %64 = and i64 %63, 2147483647
  %65 = icmp ult i64 %61, %64
  br i1 %65, label %49, label %45

66:                                               ; preds = %45
  %67 = bitcast %"struct.std::__1::__list_node_base"* %37 to i8**
  %68 = load i8*, i8** %67, align 8
  tail call void @_Z7sk_freePv(i8* %68) #16
  br label %69

69:                                               ; preds = %45, %66
  %70 = bitcast %"struct.std::__1::__list_node_base"* %22 to i8*
  tail call void @_ZdlPv(i8* %70) #17
  %71 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %72 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %71, i64 0, i32 2
  %73 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %72, align 8
  %74 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %73, i64 0, i32 16, i32 0, i32 0, i32 0
  %75 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %74, align 8
  tail call void @_ZN4SkSL11IRGenerator14popSymbolTableEv(%"class.SkSL::IRGenerator"* %75) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN4SkSL3dsl9DSLWriter16VarUniformHandleERKNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* nocapture readonly dereferenceable(152)) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter4CallERKNS_19FunctionDeclarationE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS6_14default_deleteIS8_EEEELb0EE(%"class.SkSL::FunctionDeclaration"* dereferenceable(96), %class.SkSTArray.255*) local_unnamed_addr #3 align 2 {
  %3 = alloca %class.SkSTArray.255, align 8
  %4 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %5 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %4, i64 0, i32 2
  %6 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %6, i64 0, i32 16, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %7, align 8
  %9 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %3, i64 0, i32 0, i32 0, i64 16
  %10 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %3, i64 0, i32 0, i32 0, i64 0
  %11 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %3, i64 0, i32 0, i32 0, i64 24
  %12 = bitcast i8* %11 to i64*
  %13 = bitcast i8* %9 to i8**
  store i8* %10, i8** %13, align 8
  store i64 17179869184, i64* %12, align 8
  %14 = bitcast i8* %9 to %class.SkTArray.257*
  %15 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %1, i64 0, i32 0, i32 0, i64 16
  %16 = bitcast i8* %15 to %class.SkTArray.257*
  %17 = call dereferenceable(16) %class.SkTArray.257* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.257* %14, %class.SkTArray.257* dereferenceable(16) %16) #16
  %18 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator4callEiRKNS_19FunctionDeclarationE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE(%"class.SkSL::IRGenerator"* %8, i32 -1, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %0, %class.SkSTArray.255* nonnull %3) #16
  %19 = load i64, i64* %12, align 8
  %20 = and i64 %19, 4294967294
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %2
  %23 = bitcast i8* %9 to %"class.std::__1::unique_ptr.162"**
  br label %28

24:                                               ; preds = %39, %2
  %25 = phi i64 [ %19, %2 ], [ %41, %39 ]
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %47, label %45

28:                                               ; preds = %39, %22
  %29 = phi i64 [ 0, %22 ], [ %40, %39 ]
  %30 = load %"class.std::__1::unique_ptr.162"*, %"class.std::__1::unique_ptr.162"** %23, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %30, i64 %29, i32 0, i32 0, i32 0
  %32 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %31, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %31, align 8
  %33 = icmp eq %"class.SkSL::Expression"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.SkSL::Expression"* %32 to void (%"class.SkSL::Expression"*)***
  %36 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %36, i64 1
  %38 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %37, align 8
  call void %38(%"class.SkSL::Expression"* nonnull %32) #16
  br label %39

39:                                               ; preds = %34, %28
  %40 = add nuw nsw i64 %29, 1
  %41 = load i64, i64* %12, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = icmp ult i64 %40, %43
  br i1 %44, label %28, label %24

45:                                               ; preds = %24
  %46 = load i8*, i8** %13, align 8
  call void @_Z7sk_freePv(i8* %46) #16
  br label %47

47:                                               ; preds = %24, %45
  ret %"class.SkSL::Expression"* %18
}

declare %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator4callEiRKNS_19FunctionDeclarationE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE(%"class.SkSL::IRGenerator"*, i32, %"class.SkSL::FunctionDeclaration"* dereferenceable(96), %class.SkSTArray.255*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter4CallENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE9SkSTArrayILi2ES7_Lb0EE(%"class.SkSL::Expression"*, %class.SkSTArray.255*) local_unnamed_addr #3 align 2 {
  %3 = alloca %class.SkSTArray.255, align 8
  %4 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %5 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %4, i64 0, i32 2
  %6 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %6, i64 0, i32 16, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %7, align 8
  %9 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %3, i64 0, i32 0, i32 0, i64 16
  %10 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %3, i64 0, i32 0, i32 0, i64 0
  %11 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %3, i64 0, i32 0, i32 0, i64 24
  %12 = bitcast i8* %11 to i64*
  %13 = bitcast i8* %9 to i8**
  store i8* %10, i8** %13, align 8
  store i64 17179869184, i64* %12, align 8
  %14 = bitcast i8* %9 to %class.SkTArray.257*
  %15 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %1, i64 0, i32 0, i32 0, i64 16
  %16 = bitcast i8* %15 to %class.SkTArray.257*
  %17 = call dereferenceable(16) %class.SkTArray.257* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.257* %14, %class.SkTArray.257* dereferenceable(16) %16) #16
  %18 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator4callEiNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE9SkSTArrayILi2ES6_Lb0EE(%"class.SkSL::IRGenerator"* %8, i32 -1, %"class.SkSL::Expression"* %0, %class.SkSTArray.255* nonnull %3) #16
  %19 = load i64, i64* %12, align 8
  %20 = and i64 %19, 4294967294
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %2
  %23 = bitcast i8* %9 to %"class.std::__1::unique_ptr.162"**
  br label %28

24:                                               ; preds = %39, %2
  %25 = phi i64 [ %19, %2 ], [ %41, %39 ]
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %47, label %45

28:                                               ; preds = %39, %22
  %29 = phi i64 [ 0, %22 ], [ %40, %39 ]
  %30 = load %"class.std::__1::unique_ptr.162"*, %"class.std::__1::unique_ptr.162"** %23, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %30, i64 %29, i32 0, i32 0, i32 0
  %32 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %31, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %31, align 8
  %33 = icmp eq %"class.SkSL::Expression"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.SkSL::Expression"* %32 to void (%"class.SkSL::Expression"*)***
  %36 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %36, i64 1
  %38 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %37, align 8
  call void %38(%"class.SkSL::Expression"* nonnull %32) #16
  br label %39

39:                                               ; preds = %34, %28
  %40 = add nuw nsw i64 %29, 1
  %41 = load i64, i64* %12, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = icmp ult i64 %40, %43
  br i1 %44, label %28, label %24

45:                                               ; preds = %24
  %46 = load i8*, i8** %13, align 8
  call void @_Z7sk_freePv(i8* %46) #16
  br label %47

47:                                               ; preds = %45, %24
  ret %"class.SkSL::Expression"* %18
}

declare %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator4callEiNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE9SkSTArrayILi2ES6_Lb0EE(%"class.SkSL::IRGenerator"*, i32, %"class.SkSL::Expression"*, %class.SkSTArray.255*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter5CheckENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::Expression"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %3, i64 0, i32 2
  %5 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %4, align 8
  %6 = bitcast %"class.SkSL::Compiler"* %5 to i32 (%"class.SkSL::Compiler"*)***
  %7 = load i32 (%"class.SkSL::Compiler"*)**, i32 (%"class.SkSL::Compiler"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.SkSL::Compiler"*)*, i32 (%"class.SkSL::Compiler"*)** %7, i64 3
  %9 = load i32 (%"class.SkSL::Compiler"*)*, i32 (%"class.SkSL::Compiler"*)** %8, align 8
  %10 = tail call i32 %9(%"class.SkSL::Compiler"* %5) #16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %46, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #16
  %14 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %15 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %14, i64 0, i32 2
  %16 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %15, align 8
  call void @_ZN4SkSL8Compiler9errorTextEb(%"class.SkSL::String"* nonnull sret %2, %"class.SkSL::Compiler"* %16, i1 zeroext false) #16
  %17 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = select i1 %20, i8* %22, i8* %13
  %24 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %25 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %24, i64 0, i32 8
  %26 = load %"class.SkSL::dsl::ErrorHandler"*, %"class.SkSL::dsl::ErrorHandler"** %25, align 8
  %27 = icmp eq %"class.SkSL::dsl::ErrorHandler"* %26, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %12
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 220, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.2, i64 0, i64 0), i8* %23) #18
  unreachable

29:                                               ; preds = %12
  %30 = bitcast %"class.SkSL::dsl::ErrorHandler"* %26 to void (%"class.SkSL::dsl::ErrorHandler"*, i8*, %"class.SkSL::dsl::PositionInfo"*)***
  %31 = load void (%"class.SkSL::dsl::ErrorHandler"*, i8*, %"class.SkSL::dsl::PositionInfo"*)**, void (%"class.SkSL::dsl::ErrorHandler"*, i8*, %"class.SkSL::dsl::PositionInfo"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.SkSL::dsl::ErrorHandler"*, i8*, %"class.SkSL::dsl::PositionInfo"*)*, void (%"class.SkSL::dsl::ErrorHandler"*, i8*, %"class.SkSL::dsl::PositionInfo"*)** %31, i64 2
  %33 = load void (%"class.SkSL::dsl::ErrorHandler"*, i8*, %"class.SkSL::dsl::PositionInfo"*)*, void (%"class.SkSL::dsl::ErrorHandler"*, i8*, %"class.SkSL::dsl::PositionInfo"*)** %32, align 8
  call void %33(%"class.SkSL::dsl::ErrorHandler"* nonnull %26, i8* %23, %"class.SkSL::dsl::PositionInfo"* null) #16
  %34 = load i8, i8* %18, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %37) #17
  br label %38

38:                                               ; preds = %29, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #16
  %39 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %40 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %39, i64 0, i32 2
  %41 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %40, align 8
  %42 = bitcast %"class.SkSL::Compiler"* %41 to void (%"class.SkSL::Compiler"*, i32)***
  %43 = load void (%"class.SkSL::Compiler"*, i32)**, void (%"class.SkSL::Compiler"*, i32)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.SkSL::Compiler"*, i32)*, void (%"class.SkSL::Compiler"*, i32)** %43, i64 4
  %45 = load void (%"class.SkSL::Compiler"*, i32)*, void (%"class.SkSL::Compiler"*, i32)** %44, align 8
  call void %45(%"class.SkSL::Compiler"* %41, i32 0) #16
  br label %46

46:                                               ; preds = %38, %1
  ret %"class.SkSL::Expression"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8*, %"class.SkSL::dsl::PositionInfo"*) local_unnamed_addr #3 align 2 {
  %3 = icmp eq %"class.SkSL::dsl::PositionInfo"* %1, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = select i1 %7, %"class.SkSL::dsl::PositionInfo"* null, %"class.SkSL::dsl::PositionInfo"* %1
  br label %9

9:                                                ; preds = %4, %2
  %10 = phi %"class.SkSL::dsl::PositionInfo"* [ null, %2 ], [ %8, %4 ]
  %11 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %12 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %11, i64 0, i32 8
  %13 = load %"class.SkSL::dsl::ErrorHandler"*, %"class.SkSL::dsl::ErrorHandler"** %12, align 8
  %14 = icmp eq %"class.SkSL::dsl::ErrorHandler"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.SkSL::dsl::ErrorHandler"* %13 to void (%"class.SkSL::dsl::ErrorHandler"*, i8*, %"class.SkSL::dsl::PositionInfo"*)***
  %17 = load void (%"class.SkSL::dsl::ErrorHandler"*, i8*, %"class.SkSL::dsl::PositionInfo"*)**, void (%"class.SkSL::dsl::ErrorHandler"*, i8*, %"class.SkSL::dsl::PositionInfo"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.SkSL::dsl::ErrorHandler"*, i8*, %"class.SkSL::dsl::PositionInfo"*)*, void (%"class.SkSL::dsl::ErrorHandler"*, i8*, %"class.SkSL::dsl::PositionInfo"*)** %17, i64 2
  %19 = load void (%"class.SkSL::dsl::ErrorHandler"*, i8*, %"class.SkSL::dsl::PositionInfo"*)*, void (%"class.SkSL::dsl::ErrorHandler"*, i8*, %"class.SkSL::dsl::PositionInfo"*)** %18, align 8
  tail call void %19(%"class.SkSL::dsl::ErrorHandler"* nonnull %13, i8* %0, %"class.SkSL::dsl::PositionInfo"* %10) #16
  ret void

20:                                               ; preds = %9
  %21 = icmp eq %"class.SkSL::dsl::PositionInfo"* %10, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %10, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %10, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 218, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0), i8* %24, i32 %26, i8* %0) #18
  unreachable

27:                                               ; preds = %20
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 220, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.2, i64 0, i64 0), i8* %0) #18
  unreachable
}

declare void @_ZN4SkSL8Compiler9errorTextEb(%"class.SkSL::String"* sret, %"class.SkSL::Compiler"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl9DSLWriter6CoerceENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEERKNS_4TypeE(%"class.SkSL::dsl::DSLPossibleExpression"* noalias sret, %"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #3 align 2 {
  %4 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %5 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %4, i64 0, i32 2
  %6 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %6, i64 0, i32 16, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %7, align 8
  %9 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator6coerceENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEERKNS_4TypeE(%"class.SkSL::IRGenerator"* %8, %"class.SkSL::Expression"* %1, %"class.SkSL::Type"* dereferenceable(184) %2) #16
  tail call void @_ZN4SkSL3dsl21DSLPossibleExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleExpression"* %0, %"class.SkSL::Expression"* %9) #16
  ret void
}

declare %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator6coerceENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEERKNS_4TypeE(%"class.SkSL::IRGenerator"*, %"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl21DSLPossibleExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleExpression"*, %"class.SkSL::Expression"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl9DSLWriter9ConstructERKNS_4TypeE8SkTArrayINS0_13DSLExpressionELb0EE(%"class.SkSL::dsl::DSLPossibleExpression"* noalias sret, %"class.SkSL::Type"* dereferenceable(184), %class.SkTArray.258* nocapture readonly) local_unnamed_addr #3 align 2 {
  %4 = alloca %class.SkSTArray.255, align 8
  %5 = alloca %class.SkSTArray.255, align 8
  %6 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #16
  %7 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %4, i64 0, i32 0, i32 0, i64 16
  %8 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %4, i64 0, i32 0, i32 0, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = bitcast i8* %7 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  store i8* %6, i8** %10, align 8
  store i64 17179869184, i64* %9, align 8
  %11 = bitcast i8* %7 to %class.SkTArray.257*
  %12 = getelementptr inbounds %class.SkTArray.258, %class.SkTArray.258* %2, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 1
  %15 = trunc i64 %14 to i32
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %3
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.257* %11, i32 %16, i32 0) #16
  %19 = load i64, i64* %9, align 8
  %20 = shl i64 %19, 32
  %21 = and i64 %20, 4294967296
  %22 = and i64 %19, -4294967297
  %23 = or i64 %21, %22
  br label %24

24:                                               ; preds = %3, %18
  %25 = phi i64 [ %23, %18 ], [ 17179869184, %3 ]
  store i64 %25, i64* %9, align 8
  %26 = getelementptr inbounds %class.SkTArray.258, %class.SkTArray.258* %2, i64 0, i32 0
  %27 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %26, align 8
  %28 = icmp eq %"class.SkSL::dsl::DSLExpression"* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %24
  %30 = load i64, i64* %12, align 8
  %31 = lshr i64 %30, 1
  %32 = and i64 %31, 2147483647
  %33 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %27, i64 %32
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = bitcast i8* %7 to %"class.std::__1::unique_ptr.162"**
  br label %111

37:                                               ; preds = %111, %24, %29
  %38 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %39 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %38, i64 0, i32 2
  %40 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %39, align 8
  %41 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %40, i64 0, i32 16, i32 0, i32 0, i32 0
  %42 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %41, align 8
  %43 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %42, i64 0, i32 0
  %44 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %43, align 8
  %45 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %5, i64 0, i32 0, i32 0, i64 16
  %46 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %5, i64 0, i32 0, i32 0, i64 0
  %47 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %5, i64 0, i32 0, i32 0, i64 24
  %48 = bitcast i8* %47 to i64*
  %49 = bitcast i8* %45 to i8**
  store i8* %46, i8** %49, align 8
  store i64 17179869184, i64* %48, align 8
  %50 = bitcast i8* %45 to %class.SkTArray.257*
  %51 = call dereferenceable(16) %class.SkTArray.257* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.257* %50, %class.SkTArray.257* dereferenceable(16) %11) #16
  %52 = call %"class.SkSL::Expression"* @_ZN4SkSL11Constructor7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %44, i32 -1, %"class.SkSL::Type"* dereferenceable(184) %1, %class.SkSTArray.255* nonnull %5) #16
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleExpression"* %0, %"class.SkSL::Expression"* %52) #16
  %53 = load i64, i64* %48, align 8
  %54 = and i64 %53, 4294967294
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %37
  %57 = bitcast i8* %45 to %"class.std::__1::unique_ptr.162"**
  br label %62

58:                                               ; preds = %73, %37
  %59 = phi i64 [ %53, %37 ], [ %75, %73 ]
  %60 = and i64 %59, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %81, label %79

62:                                               ; preds = %73, %56
  %63 = phi i64 [ 0, %56 ], [ %74, %73 ]
  %64 = load %"class.std::__1::unique_ptr.162"*, %"class.std::__1::unique_ptr.162"** %57, align 8
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %64, i64 %63, i32 0, i32 0, i32 0
  %66 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %65, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %65, align 8
  %67 = icmp eq %"class.SkSL::Expression"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %62
  %69 = bitcast %"class.SkSL::Expression"* %66 to void (%"class.SkSL::Expression"*)***
  %70 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %70, i64 1
  %72 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %71, align 8
  call void %72(%"class.SkSL::Expression"* nonnull %66) #16
  br label %73

73:                                               ; preds = %68, %62
  %74 = add nuw nsw i64 %63, 1
  %75 = load i64, i64* %48, align 8
  %76 = lshr i64 %75, 1
  %77 = and i64 %76, 2147483647
  %78 = icmp ult i64 %74, %77
  br i1 %78, label %62, label %58

79:                                               ; preds = %58
  %80 = load i8*, i8** %49, align 8
  call void @_Z7sk_freePv(i8* %80) #16
  br label %81

81:                                               ; preds = %58, %79
  %82 = load i64, i64* %9, align 8
  %83 = and i64 %82, 4294967294
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast i8* %7 to %"class.std::__1::unique_ptr.162"**
  br label %91

87:                                               ; preds = %102, %81
  %88 = phi i64 [ %82, %81 ], [ %104, %102 ]
  %89 = and i64 %88, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %110, label %108

91:                                               ; preds = %102, %85
  %92 = phi i64 [ 0, %85 ], [ %103, %102 ]
  %93 = load %"class.std::__1::unique_ptr.162"*, %"class.std::__1::unique_ptr.162"** %86, align 8
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %93, i64 %92, i32 0, i32 0, i32 0
  %95 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %94, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %94, align 8
  %96 = icmp eq %"class.SkSL::Expression"* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %91
  %98 = bitcast %"class.SkSL::Expression"* %95 to void (%"class.SkSL::Expression"*)***
  %99 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %99, i64 1
  %101 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %100, align 8
  call void %101(%"class.SkSL::Expression"* nonnull %95) #16
  br label %102

102:                                              ; preds = %97, %91
  %103 = add nuw nsw i64 %92, 1
  %104 = load i64, i64* %9, align 8
  %105 = lshr i64 %104, 1
  %106 = and i64 %105, 2147483647
  %107 = icmp ult i64 %103, %106
  br i1 %107, label %91, label %87

108:                                              ; preds = %87
  %109 = load i8*, i8** %10, align 8
  call void @_Z7sk_freePv(i8* %109) #16
  br label %110

110:                                              ; preds = %87, %108
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #16
  ret void

111:                                              ; preds = %35, %111
  %112 = phi %"class.SkSL::dsl::DSLExpression"* [ %27, %35 ], [ %125, %111 ]
  %113 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %112) #16
  %114 = ptrtoint %"class.SkSL::Expression"* %113 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.257* %11, i32 1, i32 1) #16
  %115 = load %"class.std::__1::unique_ptr.162"*, %"class.std::__1::unique_ptr.162"** %36, align 8
  %116 = load i64, i64* %9, align 8
  %117 = lshr i64 %116, 1
  %118 = and i64 %117, 2147483647
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %115, i64 %118
  %120 = add i64 %116, 2
  %121 = and i64 %120, 4294967294
  %122 = and i64 %116, -4294967295
  %123 = or i64 %121, %122
  store i64 %123, i64* %9, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.162"* %119 to i64*
  store i64 %114, i64* %124, align 8
  %125 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %112, i64 1
  %126 = icmp eq %"class.SkSL::dsl::DSLExpression"* %125, %33
  br i1 %126, label %37, label %111
}

declare %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL11Constructor7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray.255*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertBinaryENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorES7_(%"class.SkSL::Expression"*, i32, %"class.SkSL::Expression"*) local_unnamed_addr #3 align 2 {
  %4 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %5 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %4, i64 0, i32 2
  %6 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %6, i64 0, i32 16, i32 0, i32 0, i32 0
  %8 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %8, i64 0, i32 0
  %10 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %9, align 8
  %11 = tail call %"class.SkSL::Expression"* @_ZN4SkSL16BinaryExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorES9_(%"class.SkSL::Context"* dereferenceable(744) %10, %"class.SkSL::Expression"* %0, i32 %1, %"class.SkSL::Expression"* %2) #16
  ret %"class.SkSL::Expression"* %11
}

declare %"class.SkSL::Expression"* @_ZN4SkSL16BinaryExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorES9_(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, i32, %"class.SkSL::Expression"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter12ConvertFieldENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEEPKc(%"class.SkSL::Expression"*, i8*) local_unnamed_addr #3 align 2 {
  %3 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %3, i64 0, i32 2
  %5 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %5, i64 0, i32 16, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %7, i64 0, i32 0
  %9 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %8, align 8
  %10 = tail call i64 @strlen(i8* %1) #19
  %11 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_14StringFragmentE(%"class.SkSL::Context"* dereferenceable(744) %9, %"class.SkSL::Expression"* %0, i8* %1, i64 %10) #16
  ret %"class.SkSL::Expression"* %11
}

declare %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_14StringFragmentE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter12ConvertIndexENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEES7_(%"class.SkSL::Expression"*, %"class.SkSL::Expression"*) local_unnamed_addr #3 align 2 {
  %3 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %3, i64 0, i32 2
  %5 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %5, i64 0, i32 16, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %7, i64 0, i32 0
  %9 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %8, align 8
  %10 = tail call %"class.SkSL::Expression"* @_ZN4SkSL15IndexExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_(%"class.SkSL::Context"* dereferenceable(744) %9, %"class.SkSL::Expression"* %0, %"class.SkSL::Expression"* %1) #16
  ret %"class.SkSL::Expression"* %10
}

declare %"class.SkSL::Expression"* @_ZN4SkSL15IndexExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %"class.SkSL::Expression"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter14ConvertPostfixENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEENS_8OperatorE(%"class.SkSL::Expression"*, i32) local_unnamed_addr #3 align 2 {
  %3 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %3, i64 0, i32 2
  %5 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %5, i64 0, i32 16, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %7, i64 0, i32 0
  %9 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %8, align 8
  %10 = tail call %"class.SkSL::Expression"* @_ZN4SkSL17PostfixExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorE(%"class.SkSL::Context"* dereferenceable(744) %9, %"class.SkSL::Expression"* %0, i32 %1) #16
  ret %"class.SkSL::Expression"* %10
}

declare %"class.SkSL::Expression"* @_ZN4SkSL17PostfixExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter13ConvertPrefixENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS3_14default_deleteIS5_EEEE(i32, %"class.SkSL::Expression"*) local_unnamed_addr #3 align 2 {
  %3 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %3, i64 0, i32 2
  %5 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %5, i64 0, i32 16, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %7, i64 0, i32 0
  %9 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %8, align 8
  %10 = tail call %"class.SkSL::Expression"* @_ZN4SkSL16PrefixExpression7ConvertERKNS_7ContextENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEE(%"class.SkSL::Context"* dereferenceable(744) %9, i32 %0, %"class.SkSL::Expression"* %1) #16
  ret %"class.SkSL::Expression"* %10
}

declare %"class.SkSL::Expression"* @_ZN4SkSL16PrefixExpression7ConvertERKNS_7ContextENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Expression"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl9DSLWriter13ConvertSwitchENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE9SkSTArrayILi2ES7_Lb0EE8SkTArrayIS8_ILi2ENS3_INS_9StatementENS5_ISB_EEEELb0EELb0EEb(%"class.SkSL::dsl::DSLPossibleStatement"* noalias sret, %"class.SkSL::Expression"*, %class.SkSTArray.255*, %class.SkTArray.259* nocapture readonly, i1 zeroext) local_unnamed_addr #3 align 2 {
  %6 = alloca %class.SkSTArray.228, align 8
  %7 = alloca %class.SkSTArray.228, align 8
  %8 = alloca %class.SkSTArray.255, align 8
  %9 = alloca %class.SkSTArray.228, align 8
  %10 = alloca %"class.std::__1::shared_ptr.49", align 8
  %11 = getelementptr inbounds %class.SkSTArray.228, %class.SkSTArray.228* %7, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #16
  %12 = getelementptr inbounds %class.SkSTArray.228, %class.SkSTArray.228* %7, i64 0, i32 0, i32 0, i64 16
  %13 = getelementptr inbounds %class.SkSTArray.228, %class.SkSTArray.228* %7, i64 0, i32 0, i32 0, i64 24
  %14 = bitcast i8* %13 to i64*
  %15 = bitcast i8* %12 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  store i8* %11, i8** %15, align 8
  store i64 17179869184, i64* %14, align 8
  %16 = bitcast i8* %12 to %class.SkTArray.230*
  %17 = getelementptr inbounds %class.SkTArray.259, %class.SkTArray.259* %3, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = lshr i64 %18, 1
  %20 = trunc i64 %19 to i32
  %21 = and i32 %20, 2147483647
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE11resize_backEi(%class.SkTArray.230* %16, i32 %21) #16
  %22 = load i64, i64* %17, align 8
  %23 = and i64 %22, 4294967294
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %5
  %26 = getelementptr inbounds %class.SkTArray.259, %class.SkTArray.259* %3, i64 0, i32 0
  %27 = getelementptr inbounds %class.SkSTArray.228, %class.SkSTArray.228* %6, i64 0, i32 0, i32 0, i64 0
  %28 = getelementptr inbounds %class.SkSTArray.228, %class.SkSTArray.228* %6, i64 0, i32 0, i32 0, i64 16
  %29 = getelementptr inbounds %class.SkSTArray.228, %class.SkSTArray.228* %6, i64 0, i32 0, i32 0, i64 24
  %30 = bitcast i8* %29 to i64*
  %31 = bitcast i8* %28 to i8**
  %32 = bitcast i8* %28 to %class.SkTArray.230*
  %33 = bitcast i8* %28 to %"class.std::__1::unique_ptr.231"**
  %34 = bitcast i8* %12 to %"class.std::__1::unique_ptr.231"**
  br label %164

35:                                               ; preds = %221, %5
  %36 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %37 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %36, i64 0, i32 2
  %38 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %37, align 8
  %39 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %38, i64 0, i32 16, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %39, align 8
  %41 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %40, i64 0, i32 0
  %42 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %41, align 8
  %43 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %8, i64 0, i32 0, i32 0, i64 16
  %44 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %8, i64 0, i32 0, i32 0, i64 0
  %45 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %8, i64 0, i32 0, i32 0, i64 24
  %46 = bitcast i8* %45 to i64*
  %47 = bitcast i8* %43 to i8**
  store i8* %44, i8** %47, align 8
  store i64 17179869184, i64* %46, align 8
  %48 = bitcast i8* %43 to %class.SkTArray.257*
  %49 = getelementptr inbounds %class.SkSTArray.255, %class.SkSTArray.255* %2, i64 0, i32 0, i32 0, i64 16
  %50 = bitcast i8* %49 to %class.SkTArray.257*
  %51 = call dereferenceable(16) %class.SkTArray.257* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.257* %48, %class.SkTArray.257* dereferenceable(16) %50) #16
  %52 = getelementptr inbounds %class.SkSTArray.228, %class.SkSTArray.228* %9, i64 0, i32 0, i32 0, i64 16
  %53 = getelementptr inbounds %class.SkSTArray.228, %class.SkSTArray.228* %9, i64 0, i32 0, i32 0, i64 0
  %54 = getelementptr inbounds %class.SkSTArray.228, %class.SkSTArray.228* %9, i64 0, i32 0, i32 0, i64 24
  %55 = bitcast i8* %54 to i64*
  %56 = bitcast i8* %52 to i8**
  store i8* %53, i8** %56, align 8
  store i64 17179869184, i64* %55, align 8
  %57 = bitcast i8* %52 to %class.SkTArray.230*
  %58 = call dereferenceable(16) %class.SkTArray.230* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.230* %57, %class.SkTArray.230* dereferenceable(16) %16) #16
  %59 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %60 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %59, i64 0, i32 2
  %61 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %60, align 8
  %62 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %61, i64 0, i32 16, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %62, align 8
  %64 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %63, i64 0, i32 4
  %65 = bitcast %"class.std::__1::shared_ptr.49"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::shared_ptr.49"* %10 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::shared_ptr.49", %"class.std::__1::shared_ptr.49"* %10, i64 0, i32 1
  %69 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %63, i64 0, i32 4, i32 1
  %70 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %69, align 8
  store %"class.std::__1::__shared_weak_count"* %70, %"class.std::__1::__shared_weak_count"** %68, align 8
  %71 = icmp eq %"class.std::__1::__shared_weak_count"* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %35
  %73 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %70, i64 0, i32 0, i32 1
  %74 = atomicrmw add i64* %73, i64 1 monotonic
  br label %75

75:                                               ; preds = %35, %72
  %76 = call %"class.SkSL::Statement"* @_ZN4SkSL15SwitchStatement7ConvertERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi2ES9_Lb0EESA_ILi2ENS5_INS_9StatementENS7_ISC_EEEELb0EENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744) %42, i32 -1, i1 zeroext %4, %"class.SkSL::Expression"* %1, %class.SkSTArray.255* nonnull %8, %class.SkSTArray.228* nonnull %9, %"class.std::__1::shared_ptr.49"* nonnull byval(%"class.std::__1::shared_ptr.49") align 8 %10) #16
  call void @_ZN4SkSL3dsl20DSLPossibleStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleStatement"* %0, %"class.SkSL::Statement"* %76) #16
  %77 = load i64, i64* %55, align 8
  %78 = and i64 %77, 4294967294
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = bitcast i8* %52 to %"class.std::__1::unique_ptr.231"**
  br label %86

82:                                               ; preds = %97, %75
  %83 = phi i64 [ %77, %75 ], [ %99, %97 ]
  %84 = and i64 %83, 1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %105, label %103

86:                                               ; preds = %97, %80
  %87 = phi i64 [ 0, %80 ], [ %98, %97 ]
  %88 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %81, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %88, i64 %87, i32 0, i32 0, i32 0
  %90 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %89, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %89, align 8
  %91 = icmp eq %"class.SkSL::Statement"* %90, null
  br i1 %91, label %97, label %92

92:                                               ; preds = %86
  %93 = bitcast %"class.SkSL::Statement"* %90 to void (%"class.SkSL::Statement"*)***
  %94 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %94, i64 1
  %96 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %95, align 8
  call void %96(%"class.SkSL::Statement"* nonnull %90) #16
  br label %97

97:                                               ; preds = %92, %86
  %98 = add nuw nsw i64 %87, 1
  %99 = load i64, i64* %55, align 8
  %100 = lshr i64 %99, 1
  %101 = and i64 %100, 2147483647
  %102 = icmp ult i64 %98, %101
  br i1 %102, label %86, label %82

103:                                              ; preds = %82
  %104 = load i8*, i8** %56, align 8
  call void @_Z7sk_freePv(i8* %104) #16
  br label %105

105:                                              ; preds = %82, %103
  %106 = load i64, i64* %46, align 8
  %107 = and i64 %106, 4294967294
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %105
  %110 = bitcast i8* %43 to %"class.std::__1::unique_ptr.162"**
  br label %115

111:                                              ; preds = %126, %105
  %112 = phi i64 [ %106, %105 ], [ %128, %126 ]
  %113 = and i64 %112, 1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %134, label %132

115:                                              ; preds = %126, %109
  %116 = phi i64 [ 0, %109 ], [ %127, %126 ]
  %117 = load %"class.std::__1::unique_ptr.162"*, %"class.std::__1::unique_ptr.162"** %110, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %117, i64 %116, i32 0, i32 0, i32 0
  %119 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %118, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %118, align 8
  %120 = icmp eq %"class.SkSL::Expression"* %119, null
  br i1 %120, label %126, label %121

121:                                              ; preds = %115
  %122 = bitcast %"class.SkSL::Expression"* %119 to void (%"class.SkSL::Expression"*)***
  %123 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %123, i64 1
  %125 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %124, align 8
  call void %125(%"class.SkSL::Expression"* nonnull %119) #16
  br label %126

126:                                              ; preds = %121, %115
  %127 = add nuw nsw i64 %116, 1
  %128 = load i64, i64* %46, align 8
  %129 = lshr i64 %128, 1
  %130 = and i64 %129, 2147483647
  %131 = icmp ult i64 %127, %130
  br i1 %131, label %115, label %111

132:                                              ; preds = %111
  %133 = load i8*, i8** %47, align 8
  call void @_Z7sk_freePv(i8* %133) #16
  br label %134

134:                                              ; preds = %111, %132
  %135 = load i64, i64* %14, align 8
  %136 = and i64 %135, 4294967294
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast i8* %12 to %"class.std::__1::unique_ptr.231"**
  br label %144

140:                                              ; preds = %155, %134
  %141 = phi i64 [ %135, %134 ], [ %157, %155 ]
  %142 = and i64 %141, 1
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %163, label %161

144:                                              ; preds = %155, %138
  %145 = phi i64 [ 0, %138 ], [ %156, %155 ]
  %146 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %139, align 8
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %146, i64 %145, i32 0, i32 0, i32 0
  %148 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %147, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %147, align 8
  %149 = icmp eq %"class.SkSL::Statement"* %148, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %144
  %151 = bitcast %"class.SkSL::Statement"* %148 to void (%"class.SkSL::Statement"*)***
  %152 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %152, i64 1
  %154 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %153, align 8
  call void %154(%"class.SkSL::Statement"* nonnull %148) #16
  br label %155

155:                                              ; preds = %150, %144
  %156 = add nuw nsw i64 %145, 1
  %157 = load i64, i64* %14, align 8
  %158 = lshr i64 %157, 1
  %159 = and i64 %158, 2147483647
  %160 = icmp ult i64 %156, %159
  br i1 %160, label %144, label %140

161:                                              ; preds = %140
  %162 = load i8*, i8** %15, align 8
  call void @_Z7sk_freePv(i8* %162) #16
  br label %163

163:                                              ; preds = %161, %140
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #16
  ret void

164:                                              ; preds = %25, %221
  %165 = phi i64 [ 0, %25 ], [ %222, %221 ]
  %166 = load %class.SkSTArray.228*, %class.SkSTArray.228** %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27)
  %167 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 72) #16
  store i8* %27, i8** %31, align 8
  store i64 17179869184, i64* %30, align 8
  %168 = getelementptr inbounds %class.SkSTArray.228, %class.SkSTArray.228* %166, i64 %165, i32 0, i32 0, i64 16
  %169 = bitcast i8* %168 to %class.SkTArray.230*
  %170 = call dereferenceable(16) %class.SkTArray.230* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.230* %32, %class.SkTArray.230* dereferenceable(16) %169) #16
  %171 = getelementptr inbounds i8, i8* %167, i64 8
  %172 = bitcast i8* %171 to i32*
  store i32 -1, i32* %172, align 8
  %173 = getelementptr inbounds i8, i8* %167, i64 12
  %174 = bitcast i8* %173 to i32*
  store i32 16, i32* %174, align 4
  %175 = bitcast i8* %167 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL5BlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %175, align 8
  %176 = getelementptr inbounds i8, i8* %167, i64 32
  %177 = getelementptr inbounds i8, i8* %167, i64 16
  %178 = getelementptr inbounds i8, i8* %167, i64 40
  %179 = bitcast i8* %178 to i64*
  %180 = bitcast i8* %176 to i8**
  store i8* %177, i8** %180, align 8
  store i64 17179869184, i64* %179, align 8
  %181 = bitcast i8* %176 to %class.SkTArray.230*
  %182 = call dereferenceable(16) %class.SkTArray.230* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.230* %181, %class.SkTArray.230* dereferenceable(16) %32) #16
  %183 = getelementptr inbounds i8, i8* %167, i64 48
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 17, i1 false)
  %184 = load i64, i64* %30, align 8
  %185 = and i64 %184, 4294967294
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %191

187:                                              ; preds = %202, %164
  %188 = phi i64 [ %184, %164 ], [ %204, %202 ]
  %189 = and i64 %188, 1
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %210, label %208

191:                                              ; preds = %164, %202
  %192 = phi i64 [ %203, %202 ], [ 0, %164 ]
  %193 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %33, align 8
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %193, i64 %192, i32 0, i32 0, i32 0
  %195 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %194, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %194, align 8
  %196 = icmp eq %"class.SkSL::Statement"* %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %191
  %198 = bitcast %"class.SkSL::Statement"* %195 to void (%"class.SkSL::Statement"*)***
  %199 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %198, align 8
  %200 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %199, i64 1
  %201 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %200, align 8
  call void %201(%"class.SkSL::Statement"* nonnull %195) #16
  br label %202

202:                                              ; preds = %197, %191
  %203 = add nuw nsw i64 %192, 1
  %204 = load i64, i64* %30, align 8
  %205 = lshr i64 %204, 1
  %206 = and i64 %205, 2147483647
  %207 = icmp ult i64 %203, %206
  br i1 %207, label %191, label %187

208:                                              ; preds = %187
  %209 = load i8*, i8** %31, align 8
  call void @_Z7sk_freePv(i8* %209) #16
  br label %210

210:                                              ; preds = %187, %208
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27)
  %211 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %34, align 8
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %211, i64 %165, i32 0, i32 0, i32 0
  %213 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %212, align 8
  %214 = bitcast %"class.SkSL::Statement"** %212 to i8**
  store i8* %167, i8** %214, align 8
  %215 = icmp eq %"class.SkSL::Statement"* %213, null
  br i1 %215, label %221, label %216

216:                                              ; preds = %210
  %217 = bitcast %"class.SkSL::Statement"* %213 to void (%"class.SkSL::Statement"*)***
  %218 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %218, i64 1
  %220 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %219, align 8
  call void %220(%"class.SkSL::Statement"* nonnull %213) #16
  br label %221

221:                                              ; preds = %216, %210
  %222 = add nuw nsw i64 %165, 1
  %223 = load i64, i64* %17, align 8
  %224 = lshr i64 %223, 1
  %225 = and i64 %224, 2147483647
  %226 = icmp ult i64 %222, %225
  br i1 %226, label %164, label %35
}

declare %"class.SkSL::Statement"* @_ZN4SkSL15SwitchStatement7ConvertERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi2ES9_Lb0EESA_ILi2ENS5_INS_9StatementENS7_ISC_EEEELb0EENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744), i32, i1 zeroext, %"class.SkSL::Expression"*, %class.SkSTArray.255*, %class.SkSTArray.228*, %"class.std::__1::shared_ptr.49"* byval(%"class.std::__1::shared_ptr.49") align 8) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl20DSLPossibleStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleStatement"*, %"class.SkSL::Statement"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.SkSL::Variable"* @_ZN4SkSL3dsl9DSLWriter3VarERNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152)) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 5
  %3 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %2, align 8
  %4 = icmp eq %"class.SkSL::Variable"* %3, null
  br i1 %4, label %5, label %52

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 3
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  %10 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %10, i64 0, i32 2
  %12 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %12, i64 0, i32 16, i32 0, i32 0, i32 0
  %14 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 1
  %17 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %16) #16
  %18 = load i8, i8* %6, align 8
  tail call void @_ZN4SkSL11IRGenerator19checkVarDeclarationEiRKNS_9ModifiersEPKNS_4TypeENS_15VariableStorageE(%"class.SkSL::IRGenerator"* %14, i32 -1, %"struct.SkSL::Modifiers"* dereferenceable(80) %15, %"class.SkSL::Type"* %17, i8 signext %18) #16
  br label %19

19:                                               ; preds = %5, %9
  %20 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %21 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %20, i64 0, i32 2
  %22 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %21, align 8
  %23 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %22, i64 0, i32 16, i32 0, i32 0, i32 0
  %24 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %23, align 8
  %25 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 1
  %27 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %26) #16
  %28 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 7
  %29 = load i8*, i8** %28, align 8
  %30 = tail call i64 @strlen(i8* %29) #19
  %31 = load i8, i8* %6, align 8
  %32 = tail call %"class.SkSL::Variable"* @_ZN4SkSL11IRGenerator10convertVarEiRKNS_9ModifiersEPKNS_4TypeENS_14StringFragmentEbNSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEENS_15VariableStorageE(%"class.SkSL::IRGenerator"* %24, i32 -1, %"struct.SkSL::Modifiers"* dereferenceable(80) %25, %"class.SkSL::Type"* %27, i8* %29, i64 %30, i1 zeroext false, i64 0, i8 signext %31) #16
  store %"class.SkSL::Variable"* %32, %"class.SkSL::Variable"** %2, align 8
  %33 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %34 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %33, i64 0, i32 2
  %35 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %34, align 8
  %36 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %35, i64 0, i32 16, i32 0, i32 0, i32 0
  %37 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 8
  %39 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %38) #16
  %40 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator21convertVarDeclarationENSt3__110unique_ptrINS_8VariableENS1_14default_deleteIS3_EEEENS2_INS_10ExpressionENS4_IS7_EEEE(%"class.SkSL::IRGenerator"* %37, %"class.SkSL::Variable"* %32, %"class.SkSL::Expression"* %39) #16
  %41 = ptrtoint %"class.SkSL::Statement"* %40 to i64
  %42 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 4
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %43, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.231"* %42 to i64*
  store i64 %41, i64* %45, align 8
  %46 = icmp eq %"class.SkSL::Statement"* %44, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %19
  %48 = bitcast %"class.SkSL::Statement"* %44 to void (%"class.SkSL::Statement"*)***
  %49 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %49, i64 1
  %51 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %50, align 8
  tail call void %51(%"class.SkSL::Statement"* nonnull %44) #16
  br label %52

52:                                               ; preds = %47, %19, %1
  %53 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %2, align 8
  ret %"class.SkSL::Variable"* %53
}

declare void @_ZN4SkSL11IRGenerator19checkVarDeclarationEiRKNS_9ModifiersEPKNS_4TypeENS_15VariableStorageE(%"class.SkSL::IRGenerator"*, i32, %"struct.SkSL::Modifiers"* dereferenceable(80), %"class.SkSL::Type"*, i8 signext) local_unnamed_addr #2

declare dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"*) local_unnamed_addr #2

declare %"class.SkSL::Variable"* @_ZN4SkSL11IRGenerator10convertVarEiRKNS_9ModifiersEPKNS_4TypeENS_14StringFragmentEbNSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEENS_15VariableStorageE(%"class.SkSL::IRGenerator"*, i32, %"struct.SkSL::Modifiers"* dereferenceable(80), %"class.SkSL::Type"*, i8*, i64, i1 zeroext, i64, i8 signext) local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator21convertVarDeclarationENSt3__110unique_ptrINS_8VariableENS1_14default_deleteIS3_EEEENS2_INS_10ExpressionENS4_IS7_EEEE(%"class.SkSL::IRGenerator"*, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Variable"* @_ZN4SkSL3dsl9DSLWriter12ParameterVarERNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152)) local_unnamed_addr #3 align 2 {
  %2 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %2, i64 0, i32 2
  %4 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %4, i64 0, i32 16, i32 0, i32 0, i32 0
  %6 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 1
  %9 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %8) #16
  %10 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 7
  %11 = load i8*, i8** %10, align 8
  %12 = tail call i64 @strlen(i8* %11) #19
  %13 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 9
  %14 = load i8, i8* %13, align 8
  %15 = tail call %"class.SkSL::Variable"* @_ZN4SkSL11IRGenerator10convertVarEiRKNS_9ModifiersEPKNS_4TypeENS_14StringFragmentEbNSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEENS_15VariableStorageE(%"class.SkSL::IRGenerator"* %6, i32 -1, %"struct.SkSL::Modifiers"* dereferenceable(80) %7, %"class.SkSL::Type"* %9, i8* %11, i64 %12, i1 zeroext false, i64 0, i8 signext %14) #16
  ret %"class.SkSL::Variable"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL3dsl9DSLWriter11DeclarationERNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152)) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(64) %"class.SkSL::Variable"* @_ZN4SkSL3dsl9DSLWriter3VarERNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152) %0)
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %3, align 8
  ret %"class.SkSL::Statement"* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4SkSL3dsl9DSLWriter12MarkDeclaredERNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* nocapture dereferenceable(152)) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 10
  store i8 1, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.SkSL::Program"* @_ZN4SkSL3dsl9DSLWriter14ReleaseProgramEv() local_unnamed_addr #3 align 2 {
  %1 = alloca %"struct.SkSL::IRGenerator::IRBundle", align 8
  %2 = alloca i8*, align 8
  %3 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %4 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %3, i64 0, i32 2
  %5 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %5, i64 0, i32 16, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %6, align 8
  %8 = bitcast %"struct.SkSL::IRGenerator::IRBundle"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 72, i1 false)
  call void @_ZN4SkSL11IRGenerator6finishEv(%"struct.SkSL::IRGenerator::IRBundle"* nonnull sret %1, %"class.SkSL::IRGenerator"* %7) #16
  %9 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %10 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::Pool"*, %"class.SkSL::Pool"** %10, align 8
  %12 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #16
  store i8* null, i8** %2, align 8
  %13 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %9, i64 0, i32 2
  %15 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %15, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %1, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %1, i64 0, i32 1
  %19 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %3, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %1, i64 0, i32 2
  %21 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %3, i64 0, i32 3
  %22 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %1, i64 0, i32 3
  %23 = call %"struct.SkSL::Program"* @_ZNSt3__111make_uniqueIN4SkSL7ProgramEJDnNS_10unique_ptrINS1_13ProgramConfigENS_14default_deleteIS4_EEEERNS_10shared_ptrINS1_7ContextEEENS_6vectorINS3_INS1_14ProgramElementENS5_ISD_EEEENS_9allocatorISF_EEEENSC_IPKSD_NSG_ISK_EEEENS3_INS1_13ModifiersPoolENS5_ISN_EEEENS8_INS1_11SymbolTableEEENS3_INS1_4PoolENS5_ISS_EEEERNS2_6InputsEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i8** nonnull dereferenceable(8) %2, %"class.std::__1::unique_ptr"* dereferenceable(8) %13, %"class.std::__1::shared_ptr"* dereferenceable(16) %16, %"class.std::__1::vector.142"* nonnull dereferenceable(24) %17, %"class.std::__1::vector.155"* dereferenceable(24) %18, %"class.std::__1::unique_ptr.1"* dereferenceable(8) %19, %"class.std::__1::shared_ptr.49"* dereferenceable(16) %20, %"class.std::__1::unique_ptr.178"* dereferenceable(8) %21, %"struct.SkSL::Program::Inputs"* dereferenceable(2) %22)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  %24 = icmp eq %"class.SkSL::Pool"* %11, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %0
  call void @_ZN4SkSL4Pool16detachFromThreadEv(%"class.SkSL::Pool"* nonnull %11) #16
  br label %26

26:                                               ; preds = %25, %0
  %27 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %1, i64 0, i32 2, i32 1
  %28 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %27, align 8
  %29 = icmp eq %"class.std::__1::__shared_weak_count"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %28, i64 0, i32 0, i32 1
  %32 = atomicrmw add i64* %31, i64 -1 acq_rel
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %28, i64 0, i32 0
  %36 = bitcast %"class.std::__1::__shared_weak_count"* %28 to void (%"class.std::__1::__shared_count"*)***
  %37 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %37, i64 2
  %39 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %38, align 8
  call void %39(%"class.std::__1::__shared_count"* %35) #16
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %28) #16
  br label %40

40:                                               ; preds = %34, %30, %26
  %41 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %1, i64 0, i32 1, i32 0, i32 0
  %42 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %41, align 8
  %43 = icmp eq %"class.SkSL::ProgramElement"** %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = ptrtoint %"class.SkSL::ProgramElement"** %42 to i64
  %46 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %1, i64 0, i32 1, i32 0, i32 1
  %47 = bitcast %"class.SkSL::ProgramElement"*** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = bitcast %"class.SkSL::ProgramElement"** %42 to i8*
  call void @_ZdlPv(i8* %48) #17
  br label %49

49:                                               ; preds = %44, %40
  %50 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.std::__1::unique_ptr.144"*, %"class.std::__1::unique_ptr.144"** %50, align 8
  %52 = icmp eq %"class.std::__1::unique_ptr.144"* %51, null
  br i1 %52, label %76, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.std::__1::unique_ptr.144"* %51 to i8*
  %55 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %1, i64 0, i32 0, i32 0, i32 1
  %56 = load %"class.std::__1::unique_ptr.144"*, %"class.std::__1::unique_ptr.144"** %55, align 8
  %57 = icmp eq %"class.std::__1::unique_ptr.144"* %56, %51
  br i1 %57, label %74, label %58

58:                                               ; preds = %53, %69
  %59 = phi %"class.std::__1::unique_ptr.144"* [ %60, %69 ], [ %56, %53 ]
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144"* %59, i64 -1
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %61, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %61, align 8
  %63 = icmp eq %"class.SkSL::ProgramElement"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %58
  %65 = bitcast %"class.SkSL::ProgramElement"* %62 to void (%"class.SkSL::ProgramElement"*)***
  %66 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %66, i64 1
  %68 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %67, align 8
  call void %68(%"class.SkSL::ProgramElement"* nonnull %62) #16
  br label %69

69:                                               ; preds = %64, %58
  %70 = icmp eq %"class.std::__1::unique_ptr.144"* %60, %51
  br i1 %70, label %71, label %58

71:                                               ; preds = %69
  %72 = bitcast %"struct.SkSL::IRGenerator::IRBundle"* %1 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %71, %53
  %75 = phi i8* [ %73, %71 ], [ %54, %53 ]
  store %"class.std::__1::unique_ptr.144"* %51, %"class.std::__1::unique_ptr.144"** %55, align 8
  call void @_ZdlPv(i8* %75) #17
  br label %76

76:                                               ; preds = %49, %74
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #16
  ret %"struct.SkSL::Program"* %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.SkSL::Program"* @_ZNSt3__111make_uniqueIN4SkSL7ProgramEJDnNS_10unique_ptrINS1_13ProgramConfigENS_14default_deleteIS4_EEEERNS_10shared_ptrINS1_7ContextEEENS_6vectorINS3_INS1_14ProgramElementENS5_ISD_EEEENS_9allocatorISF_EEEENSC_IPKSD_NSG_ISK_EEEENS3_INS1_13ModifiersPoolENS5_ISN_EEEENS8_INS1_11SymbolTableEEENS3_INS1_4PoolENS5_ISS_EEEERNS2_6InputsEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i8** dereferenceable(8), %"class.std::__1::unique_ptr"* dereferenceable(8), %"class.std::__1::shared_ptr"* dereferenceable(16), %"class.std::__1::vector.142"* dereferenceable(24), %"class.std::__1::vector.155"* dereferenceable(24), %"class.std::__1::unique_ptr.1"* dereferenceable(8), %"class.std::__1::shared_ptr.49"* dereferenceable(16), %"class.std::__1::unique_ptr.178"* dereferenceable(8), %"struct.SkSL::Program::Inputs"* dereferenceable(2)) local_unnamed_addr #8 comdat {
  %10 = alloca %"class.std::__1::vector.142", align 16
  %11 = alloca %"class.std::__1::vector.155", align 16
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"class.std::__1::shared_ptr.49"*
  %14 = tail call i8* @_Znwm(i64 128) #17
  %15 = bitcast i8* %14 to %"struct.SkSL::Program"*
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %16, align 8
  store %"struct.SkSL::ProgramConfig"* null, %"struct.SkSL::ProgramConfig"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %2, i64 0, i32 0
  %19 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %2, i64 0, i32 1
  %21 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %20, align 8
  %22 = icmp eq %"class.std::__1::__shared_weak_count"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %9
  %24 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %21, i64 0, i32 0, i32 1
  %25 = atomicrmw add i64* %24, i64 1 monotonic
  br label %26

26:                                               ; preds = %9, %23
  %27 = bitcast %"class.std::__1::vector.142"* %3 to <2 x i64>*
  %28 = load <2 x i64>, <2 x i64>* %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %10, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::vector.142"* %10 to <2 x i64>*
  store <2 x i64> %28, <2 x i64>* %30, align 16
  %31 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = bitcast %"class.std::__1::unique_ptr.144"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.std::__1::unique_ptr.144"** %34 to i64*
  store i64 %33, i64* %35, align 16
  %36 = bitcast %"class.std::__1::vector.142"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #16
  %37 = bitcast %"class.std::__1::vector.155"* %4 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  %39 = bitcast %"class.std::__1::vector.155"* %11 to <2 x i64>*
  store <2 x i64> %38, <2 x i64>* %39, align 16
  %40 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.SkSL::ProgramElement"*** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.SkSL::ProgramElement"*** %43 to i64*
  store i64 %42, i64* %44, align 16
  %45 = bitcast %"class.std::__1::vector.155"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #16
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %5, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr.1"* %5 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.SkSL::ModifiersPool"* null, %"class.SkSL::ModifiersPool"** %46, align 8
  %49 = bitcast %"class.std::__1::shared_ptr.49"* %6 to <2 x i64>*
  %50 = load <2 x i64>, <2 x i64>* %49, align 8
  store <2 x i64> %50, <2 x i64>* %12, align 16
  %51 = bitcast %"class.std::__1::shared_ptr.49"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #16
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %7, i64 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.std::__1::unique_ptr.178"* %7 to i64*
  %54 = load i64, i64* %53, align 8
  store %"class.SkSL::Pool"* null, %"class.SkSL::Pool"** %52, align 8
  %55 = bitcast %"struct.SkSL::Program::Inputs"* %8 to i16*
  %56 = load i16, i16* %55, align 1
  call void @_ZN4SkSL7ProgramC2ENSt3__110unique_ptrINS_6StringENS1_14default_deleteIS3_EEEENS2_INS_13ProgramConfigENS4_IS7_EEEENS1_10shared_ptrINS_7ContextEEENS1_6vectorINS2_INS_14ProgramElementENS4_ISE_EEEENS1_9allocatorISG_EEEENSD_IPKSE_NSH_ISL_EEEENS2_INS_13ModifiersPoolENS4_ISO_EEEENSA_INS_11SymbolTableEEENS2_INS_4PoolENS4_IST_EEEENS0_6InputsE(%"struct.SkSL::Program"* nonnull %15, %"class.SkSL::String"* null, %"struct.SkSL::ProgramConfig"* %17, %"class.SkSL::Context"* %19, %"class.std::__1::__shared_weak_count"* %21, %"class.std::__1::vector.142"* nonnull %10, %"class.std::__1::vector.155"* nonnull %11, i64 %48, %"class.std::__1::shared_ptr.49"* nonnull byval(%"class.std::__1::shared_ptr.49") align 8 %13, i64 %54, i16 %56)
  %57 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %11, i64 0, i32 0, i32 0
  %58 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %57, align 16
  %59 = icmp eq %"class.SkSL::ProgramElement"** %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %26
  %61 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %11, i64 0, i32 0, i32 1
  %62 = bitcast %"class.SkSL::ProgramElement"*** %61 to i64*
  %63 = ptrtoint %"class.SkSL::ProgramElement"** %58 to i64
  store i64 %63, i64* %62, align 8
  %64 = bitcast %"class.SkSL::ProgramElement"** %58 to i8*
  call void @_ZdlPv(i8* %64) #17
  br label %65

65:                                               ; preds = %26, %60
  %66 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %10, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::unique_ptr.144"*, %"class.std::__1::unique_ptr.144"** %66, align 16
  %68 = icmp eq %"class.std::__1::unique_ptr.144"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %65
  %70 = bitcast %"class.std::__1::unique_ptr.144"* %67 to i8*
  %71 = load %"class.std::__1::unique_ptr.144"*, %"class.std::__1::unique_ptr.144"** %29, align 8
  %72 = icmp eq %"class.std::__1::unique_ptr.144"* %71, %67
  br i1 %72, label %89, label %73

73:                                               ; preds = %69, %84
  %74 = phi %"class.std::__1::unique_ptr.144"* [ %75, %84 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144"* %74, i64 -1
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %76, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %76, align 8
  %78 = icmp eq %"class.SkSL::ProgramElement"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %73
  %80 = bitcast %"class.SkSL::ProgramElement"* %77 to void (%"class.SkSL::ProgramElement"*)***
  %81 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %81, i64 1
  %83 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %82, align 8
  call void %83(%"class.SkSL::ProgramElement"* nonnull %77) #16
  br label %84

84:                                               ; preds = %79, %73
  %85 = icmp eq %"class.std::__1::unique_ptr.144"* %75, %67
  br i1 %85, label %86, label %73

86:                                               ; preds = %84
  %87 = bitcast %"class.std::__1::vector.142"* %10 to i8**
  %88 = load i8*, i8** %87, align 16
  br label %89

89:                                               ; preds = %86, %69
  %90 = phi i8* [ %88, %86 ], [ %70, %69 ]
  store %"class.std::__1::unique_ptr.144"* %67, %"class.std::__1::unique_ptr.144"** %29, align 8
  call void @_ZdlPv(i8* %90) #17
  br label %91

91:                                               ; preds = %65, %89
  ret %"struct.SkSL::Program"* %15
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.SkSL::dsl::DSLWriter"** @_ZTWN4SkSL3dsl8instanceE() local_unnamed_addr #9 {
  ret %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl9DSLWriter11SetInstanceENSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.SkSL::dsl::DSLWriter"*) local_unnamed_addr #3 align 2 {
  %2 = load %"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  %3 = icmp eq %"class.SkSL::dsl::DSLWriter"* %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  tail call void @_ZN4SkSL3dsl9DSLWriterD2Ev(%"class.SkSL::dsl::DSLWriter"* nonnull %2) #16
  %5 = bitcast %"class.SkSL::dsl::DSLWriter"* %2 to i8*
  tail call void @_ZdlPv(i8* %5) #17
  br label %6

6:                                                ; preds = %1, %4
  store %"class.SkSL::dsl::DSLWriter"* %0, %"class.SkSL::dsl::DSLWriter"** @_ZN4SkSL3dsl8instanceE, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__list_impIN4SkSL3dsl9DSLWriter10StackFrameENS_9allocatorIS4_EEE5clearEv(%"class.std::__1::__list_imp"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %62, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0, i32 1
  %7 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %10, i64 0, i32 1
  %12 = bitcast %"struct.std::__1::__list_node_base"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 0, i32 0
  %15 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %15, i64 0, i32 1
  %17 = bitcast %"struct.std::__1::__list_node_base"** %16 to i64*
  store i64 %13, i64* %17, align 8
  %18 = bitcast %"struct.std::__1::__list_node_base"* %7 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.std::__1::__list_node_base"** %11 to i64**
  %21 = load i64*, i64** %20, align 8
  store i64 %19, i64* %21, align 8
  store i64 0, i64* %2, align 8
  %22 = icmp eq %"struct.std::__1::__list_node_base"* %7, %8
  br i1 %22, label %62, label %23

23:                                               ; preds = %5, %59
  %24 = phi %"struct.std::__1::__list_node_base"* [ %26, %59 ], [ %7, %5 ]
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %26 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 3
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 3, i32 1
  %29 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 4294967294
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %23
  %34 = bitcast %"struct.std::__1::__list_node_base"* %27 to %"class.std::__1::unique_ptr.231"**
  br label %39

35:                                               ; preds = %50, %23
  %36 = phi i64 [ %30, %23 ], [ %52, %50 ]
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %59, label %56

39:                                               ; preds = %50, %33
  %40 = phi i64 [ 0, %33 ], [ %51, %50 ]
  %41 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %34, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %41, i64 %40, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %42, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %42, align 8
  %44 = icmp eq %"class.SkSL::Statement"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.SkSL::Statement"* %43 to void (%"class.SkSL::Statement"*)***
  %47 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %48, align 8
  tail call void %49(%"class.SkSL::Statement"* nonnull %43) #16
  br label %50

50:                                               ; preds = %45, %39
  %51 = add nuw nsw i64 %40, 1
  %52 = load i64, i64* %29, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %39, label %35

56:                                               ; preds = %35
  %57 = bitcast %"struct.std::__1::__list_node_base"* %27 to i8**
  %58 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %58) #16
  br label %59

59:                                               ; preds = %35, %56
  %60 = bitcast %"struct.std::__1::__list_node_base"* %24 to i8*
  tail call void @_ZdlPv(i8* %60) #17
  %61 = icmp eq %"struct.std::__1::__list_node_base"* %26, %8
  br i1 %61, label %62, label %23

62:                                               ; preds = %59, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"struct.SkSL::Modifiers"* dereferenceable(80), %"struct.SkSL::Modifiers"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = shl nsw i64 %9, 8
  %11 = xor i64 %10, %6
  %12 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = shl nsw i64 %14, 16
  %16 = xor i64 %11, %15
  %17 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %74, label %20

20:                                               ; preds = %3
  %21 = tail call i64 @llvm.ctpop.i64(i64 %18) #16, !range !8
  %22 = icmp ugt i64 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = add i64 %18, -1
  %25 = and i64 %16, %24
  br label %30

26:                                               ; preds = %20
  %27 = icmp ult i64 %16, %18
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = urem i64 %16, %18
  br label %30

30:                                               ; preds = %23, %26, %28
  %31 = phi i64 [ %25, %23 ], [ %29, %28 ], [ %16, %26 ]
  %32 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, i64 %31
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %74, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %74, label %41

41:                                               ; preds = %37
  %42 = add i64 %18, -1
  %43 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0
  br label %44

44:                                               ; preds = %41, %70
  %45 = phi %"struct.std::__1::__hash_node_base"* [ %39, %41 ], [ %72, %70 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %16
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %22, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %42
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %18
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %18
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %31
  br i1 %59, label %60, label %74

60:                                               ; preds = %44, %57
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to %"struct.SkSL::Layout"*
  %63 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %62, %"struct.SkSL::Layout"* dereferenceable(72) %43) #16
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 11
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = load i32, i32* %4, align 8
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %160, label %70

70:                                               ; preds = %64, %60
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base"* %72, null
  br i1 %73, label %74, label %44

74:                                               ; preds = %57, %70, %37, %30, %3
  %75 = phi i64 [ %31, %30 ], [ -6148914691236517206, %3 ], [ %31, %37 ], [ %31, %70 ], [ %31, %57 ]
  %76 = tail call i8* @_Znwm(i64 96) #17, !noalias !9
  %77 = getelementptr inbounds i8, i8* %76, i64 16
  %78 = bitcast %"struct.SkSL::Modifiers"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 80, i1 false) #16, !noalias !9
  %79 = getelementptr inbounds i8, i8* %76, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %16, i64* %80, align 8, !noalias !9
  %81 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %81, align 8, !noalias !9
  %82 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %18 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %19, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %74
  %93 = shl i64 %18, 1
  %94 = icmp ult i64 %18, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %18) #16, !range !8
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #16
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %104)
  %105 = load i64, i64* %17, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #16, !range !8
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %16
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %16, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %16, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %74
  %116 = phi i64 [ %18, %74 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %75, %74 ], [ %110, %108 ], [ %16, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %76 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i8**
  store i8* %76, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base"* %124, %"struct.std::__1::__hash_node_base"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #16, !range !8
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %76 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %76, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base"* [ %157, %156 ], [ %45, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"*, %"struct.SkSL::Layout"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %81

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %81

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %81

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %81

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %81

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %81

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %81

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 7
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %81

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 8
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 8
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %81

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 9
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 9
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %81

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 10
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 10
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %68, label %81

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12
  %70 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = tail call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* %69, i8* %71, i64 %73) #16
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 13
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 13
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %77, %79
  br label %81

81:                                               ; preds = %75, %68, %62, %56, %50, %44, %38, %32, %26, %20, %14, %8, %2
  %82 = phi i1 [ false, %68 ], [ false, %62 ], [ false, %56 ], [ false, %50 ], [ false, %44 ], [ false, %38 ], [ false, %32 ], [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %80, %75 ]
  ret i1 %82
}

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %151, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #18
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !12

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %159, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %159, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %145
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %149, %145 ]
  %81 = phi i64 [ %71, %77 ], [ %147, %145 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %146, %145 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %145, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 11
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base"* %104, null
  br i1 %105, label %131, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %107 to %"struct.SkSL::Layout"*
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %104, i64 2
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to %"struct.SkSL::Layout"*
  %111 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %108, %"struct.SkSL::Layout"* dereferenceable(72) %110) #16
  br i1 %111, label %117, label %131

112:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %145

113:                                              ; preds = %126
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 2
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %114 to %"struct.SkSL::Layout"*
  %116 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %108, %"struct.SkSL::Layout"* dereferenceable(72) %115) #16
  br i1 %116, label %117, label %131

117:                                              ; preds = %106, %113
  %118 = phi %"struct.std::__1::__hash_node_base"* [ %127, %113 ], [ %80, %106 ]
  %119 = phi %"struct.std::__1::__hash_node_base"** [ %128, %113 ], [ %103, %106 ]
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %129, %113 ], [ %104, %106 ]
  %121 = load i32, i32* %102, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 11
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i32*
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %121, %124
  br i1 %125, label %126, label %131

126:                                              ; preds = %117
  %127 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %127, i64 0, i32 0
  %129 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base"* %129, null
  br i1 %130, label %131, label %113

131:                                              ; preds = %113, %126, %117, %106, %100
  %132 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %80, %106 ], [ %118, %117 ], [ %127, %126 ], [ %127, %113 ]
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %134, i64* %135, align 8
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %136, i64 %93
  %138 = bitcast %"struct.std::__1::__hash_node_base"** %137 to i64**
  %139 = load i64*, i64** %138, align 8
  %140 = load i64, i64* %139, align 8
  store i64 %140, i64* %133, align 8
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %93
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %143, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %144, align 8
  br label %145

145:                                              ; preds = %92, %131, %112
  %146 = phi %"struct.std::__1::__hash_node_base"* [ %80, %112 ], [ %82, %131 ], [ %80, %92 ]
  %147 = phi i64 [ %93, %112 ], [ %81, %131 ], [ %81, %92 ]
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %146, i64 0, i32 0
  %149 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %148, align 8
  %150 = icmp eq %"struct.std::__1::__hash_node_base"* %149, null
  br i1 %150, label %159, label %79

151:                                              ; preds = %2
  %152 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %152, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %152, align 8
  %154 = icmp eq %"struct.std::__1::__hash_node_base"** %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %151
  %156 = bitcast %"struct.std::__1::__hash_node_base"** %153 to i8*
  tail call void @_ZdlPv(i8* %156) #17
  br label %157

157:                                              ; preds = %151, %155
  %158 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %158, align 8
  br label %159

159:                                              ; preds = %145, %70, %35, %157
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #15

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL4PoolD1Ev(%"class.SkSL::Pool"*) unnamed_addr #11

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray.230* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.230*, %class.SkTArray.230* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray.230* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.230* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray.230* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.231"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %42, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %42, align 8
  %44 = icmp eq %"class.SkSL::Statement"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Statement"* %43 to void (%"class.SkSL::Statement"*)***
  %47 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %48, align 8
  tail call void %49(%"class.SkSL::Statement"* nonnull %43) #16
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %62, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %62, align 8
  %64 = icmp eq %"class.SkSL::Statement"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Statement"* %63 to void (%"class.SkSL::Statement"*)***
  %67 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %68, align 8
  tail call void %69(%"class.SkSL::Statement"* nonnull %63) #16
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray.230* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.230*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #16
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.231"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %61, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %61, align 8
  %63 = icmp eq %"class.SkSL::Statement"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Statement"* %62 to void (%"class.SkSL::Statement"*)***
  %66 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, align 8
  tail call void %68(%"class.SkSL::Statement"* nonnull %62) #16
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.230* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #16
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray.257* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.257*, %class.SkTArray.257* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray.257* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray.257, %class.SkTArray.257* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray.257, %class.SkTArray.257* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray.257, %class.SkTArray.257* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.257* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray.257* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray.257, %class.SkTArray.257* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr.162"*, %"class.std::__1::unique_ptr.162"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.162"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr.162"*, %"class.std::__1::unique_ptr.162"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %42, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %42, align 8
  %44 = icmp eq %"class.SkSL::Expression"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Expression"* %43 to void (%"class.SkSL::Expression"*)***
  %47 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %48, align 8
  tail call void %49(%"class.SkSL::Expression"* nonnull %43) #16
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr.162"*, %"class.std::__1::unique_ptr.162"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %62, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %62, align 8
  %64 = icmp eq %"class.SkSL::Expression"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Expression"* %63 to void (%"class.SkSL::Expression"*)***
  %67 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %68, align 8
  tail call void %69(%"class.SkSL::Expression"* nonnull %63) #16
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray.257* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.257*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.257, %class.SkTArray.257* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #16
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.257, %class.SkTArray.257* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.162"*, %"class.std::__1::unique_ptr.162"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.162"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.162"*, %"class.std::__1::unique_ptr.162"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.162"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %61, align 8
  %63 = icmp eq %"class.SkSL::Expression"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Expression"* %62 to void (%"class.SkSL::Expression"*)***
  %66 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, align 8
  tail call void %68(%"class.SkSL::Expression"* nonnull %62) #16
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.257* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #16
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEC2EOS7_(%class.SkTArray.230*, %class.SkTArray.230* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %1, i64 0, i32 0
  %9 = bitcast %class.SkTArray.230* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.SkTArray.230* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* %3, align 8
  %13 = and i64 %12, 4294967294
  %14 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967295
  %17 = or i64 %16, %13
  store i64 %17, i64* %14, align 8
  %18 = load i64, i64* %3, align 8
  %19 = and i64 %18, -8589934592
  %20 = and i64 %17, 8589934590
  %21 = or i64 %19, %20
  %22 = or i64 %21, 1
  store i64 %22, i64* %14, align 8
  %23 = load i64, i64* %3, align 8
  %24 = and i64 %23, 4294967296
  %25 = and i64 %22, -4294967297
  %26 = or i64 %25, %24
  store i64 %26, i64* %14, align 8
  store %"class.std::__1::unique_ptr.231"* null, %"class.std::__1::unique_ptr.231"** %8, align 8
  br label %88

27:                                               ; preds = %2
  %28 = lshr i64 %4, 1
  %29 = trunc i64 %28 to i32
  %30 = and i32 %29, 2147483647
  %31 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %0, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %4, 4294967294
  %34 = and i64 %32, -4294967295
  %35 = or i64 %34, %33
  store i64 %35, i64* %31, align 8
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %27
  %38 = and i64 %35, 8589934591
  store i64 %38, i64* %31, align 8
  %39 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %0, i64 0, i32 0
  store %"class.std::__1::unique_ptr.231"* null, %"class.std::__1::unique_ptr.231"** %39, align 8
  br label %50

40:                                               ; preds = %27
  %41 = icmp ugt i32 %30, 8
  %42 = select i1 %41, i32 %30, i32 8
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 33
  %45 = and i64 %35, 8589934591
  %46 = or i64 %45, %44
  store i64 %46, i64* %31, align 8
  %47 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #16
  %48 = bitcast %class.SkTArray.230* %0 to i8**
  store i8* %47, i8** %48, align 8
  %49 = load i64, i64* %31, align 8
  br label %50

50:                                               ; preds = %37, %40
  %51 = phi i8* [ %47, %40 ], [ null, %37 ]
  %52 = phi i64 [ %49, %40 ], [ %38, %37 ]
  %53 = and i64 %52, -4294967298
  %54 = or i64 %53, 1
  store i64 %54, i64* %31, align 8
  %55 = load i64, i64* %3, align 8
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %85, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %1, i64 0, i32 0
  br label %60

60:                                               ; preds = %79, %58
  %61 = phi i64 [ 0, %58 ], [ %80, %79 ]
  %62 = shl nuw nsw i64 %61, 3
  %63 = getelementptr inbounds i8, i8* %51, i64 %62
  %64 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %59, align 8
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %64, i64 %61
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr.231"* %65 to i64*
  %68 = load i64, i64* %67, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %66, align 8
  %69 = bitcast i8* %63 to i64*
  store i64 %68, i64* %69, align 8
  %70 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %59, align 8
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %70, i64 %61, i32 0, i32 0, i32 0
  %72 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %71, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %71, align 8
  %73 = icmp eq %"class.SkSL::Statement"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %60
  %75 = bitcast %"class.SkSL::Statement"* %72 to void (%"class.SkSL::Statement"*)***
  %76 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %76, i64 1
  %78 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %77, align 8
  tail call void %78(%"class.SkSL::Statement"* nonnull %72) #16
  br label %79

79:                                               ; preds = %74, %60
  %80 = add nuw nsw i64 %61, 1
  %81 = load i64, i64* %3, align 8
  %82 = lshr i64 %81, 1
  %83 = and i64 %82, 2147483647
  %84 = icmp ult i64 %80, %83
  br i1 %84, label %60, label %85

85:                                               ; preds = %79, %50
  %86 = phi i64 [ %55, %50 ], [ %81, %79 ]
  %87 = and i64 %86, -4294967295
  br label %88

88:                                               ; preds = %85, %7
  %89 = phi i64 [ %87, %85 ], [ 1, %7 ]
  store i64 %89, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE11resize_backEi(%class.SkTArray.230*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 2147483647
  %8 = icmp slt i32 %7, %1
  br i1 %8, label %9, label %28

9:                                                ; preds = %2
  %10 = sub nsw i32 %1, %7
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.230* %0, i32 %10, i32 1) #16
  %11 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %0, i64 0, i32 0
  %12 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %11, align 8
  %13 = load i64, i64* %3, align 8
  %14 = lshr i64 %13, 1
  %15 = trunc i64 %14 to i32
  %16 = add i32 %10, %15
  %17 = shl i32 %16, 1
  %18 = zext i32 %17 to i64
  %19 = and i64 %13, -4294967295
  %20 = or i64 %19, %18
  store i64 %20, i64* %3, align 8
  %21 = icmp sgt i32 %10, 0
  br i1 %21, label %22, label %63

22:                                               ; preds = %9
  %23 = and i64 %14, 2147483647
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %12, i64 %23
  %25 = bitcast %"class.std::__1::unique_ptr.231"* %24 to i8*
  %26 = zext i32 %10 to i64
  %27 = shl nuw nsw i64 %26, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 %27, i1 false) #16
  br label %63

28:                                               ; preds = %2
  %29 = icmp sgt i32 %7, %1
  br i1 %29, label %30, label %63

30:                                               ; preds = %28
  %31 = sub nsw i32 %7, %1
  %32 = sub i32 %6, %31
  %33 = shl i32 %32, 1
  %34 = zext i32 %33 to i64
  %35 = and i64 %4, -4294967295
  %36 = or i64 %35, %34
  store i64 %36, i64* %3, align 8
  %37 = icmp sgt i32 %31, 0
  br i1 %37, label %38, label %62

38:                                               ; preds = %30
  %39 = getelementptr inbounds %class.SkTArray.230, %class.SkTArray.230* %0, i64 0, i32 0
  br label %40

40:                                               ; preds = %60, %38
  %41 = phi i64 [ %36, %38 ], [ %61, %60 ]
  %42 = phi i32 [ 0, %38 ], [ %58, %60 ]
  %43 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %39, align 8
  %44 = lshr i64 %41, 1
  %45 = trunc i64 %44 to i32
  %46 = and i32 %45, 2147483647
  %47 = add nuw nsw i32 %46, %42
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %43, i64 %48, i32 0, i32 0, i32 0
  %50 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %49, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %49, align 8
  %51 = icmp eq %"class.SkSL::Statement"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %40
  %53 = bitcast %"class.SkSL::Statement"* %50 to void (%"class.SkSL::Statement"*)***
  %54 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %54, i64 1
  %56 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %55, align 8
  tail call void %56(%"class.SkSL::Statement"* nonnull %50) #16
  br label %57

57:                                               ; preds = %52, %40
  %58 = add nuw nsw i32 %42, 1
  %59 = icmp eq i32 %58, %31
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = load i64, i64* %3, align 8
  br label %40

62:                                               ; preds = %57, %30
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.230* %0, i32 0, i32 2) #16
  br label %63

63:                                               ; preds = %22, %9, %28, %62
  ret void
}

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7ProgramC2ENSt3__110unique_ptrINS_6StringENS1_14default_deleteIS3_EEEENS2_INS_13ProgramConfigENS4_IS7_EEEENS1_10shared_ptrINS_7ContextEEENS1_6vectorINS2_INS_14ProgramElementENS4_ISE_EEEENS1_9allocatorISG_EEEENSD_IPKSE_NSH_ISL_EEEENS2_INS_13ModifiersPoolENS4_ISO_EEEENSA_INS_11SymbolTableEEENS2_INS_4PoolENS4_IST_EEEENS0_6InputsE(%"struct.SkSL::Program"*, %"class.SkSL::String"*, %"struct.SkSL::ProgramConfig"*, %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"*, %"class.std::__1::vector.142"*, %"class.std::__1::vector.155"*, i64, %"class.std::__1::shared_ptr.49"* byval(%"class.std::__1::shared_ptr.49") align 8, i64, i16) unnamed_addr #0 comdat align 2 {
  %12 = ptrtoint %"class.SkSL::String"* %1 to i64
  %13 = ptrtoint %"struct.SkSL::ProgramConfig"* %2 to i64
  %14 = ptrtoint %"class.SkSL::Context"* %3 to i64
  %15 = bitcast %"struct.SkSL::Program"* %0 to i64*
  store i64 %12, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 1
  %17 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %13, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 2
  %19 = bitcast %"class.std::__1::shared_ptr"* %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 2, i32 1
  store %"class.std::__1::__shared_weak_count"* %4, %"class.std::__1::__shared_weak_count"** %20, align 8
  %21 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %24 = atomicrmw add i64* %23, i64 1 monotonic
  br label %25

25:                                               ; preds = %11, %22
  %26 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 3
  %27 = bitcast %"class.std::__1::shared_ptr.49"* %8 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::shared_ptr.49"* %26 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 3, i32 1
  %31 = getelementptr inbounds %"class.std::__1::shared_ptr.49", %"class.std::__1::shared_ptr.49"* %8, i64 0, i32 1
  %32 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %31, align 8
  store %"class.std::__1::__shared_weak_count"* %32, %"class.std::__1::__shared_weak_count"** %30, align 8
  %33 = icmp eq %"class.std::__1::__shared_weak_count"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %32, i64 0, i32 0, i32 1
  %36 = atomicrmw add i64* %35, i64 1 monotonic
  br label %37

37:                                               ; preds = %25, %34
  %38 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 4
  %39 = bitcast %"class.std::__1::unique_ptr.178"* %38 to i64*
  store i64 %9, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 5
  %41 = bitcast %"struct.SkSL::Program::Inputs"* %40 to i16*
  store i16 %10, i16* %41, align 8
  %42 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 6
  %43 = bitcast %"class.std::__1::vector.142"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #16
  %44 = bitcast %"class.std::__1::vector.142"* %5 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.142"* %42 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %5, i64 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::unique_ptr.144"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 6, i32 0, i32 1
  %51 = bitcast %"class.std::__1::unique_ptr.144"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::vector.142", %"class.std::__1::vector.142"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast %"class.std::__1::unique_ptr.144"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast %"class.std::__1::unique_ptr.144"** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast %"class.std::__1::vector.142"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #16
  %58 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 7
  %59 = bitcast %"class.std::__1::vector.155"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #16
  %60 = bitcast %"class.std::__1::vector.155"* %6 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.std::__1::vector.155"* %58 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %6, i64 0, i32 0, i32 1
  %64 = bitcast %"class.SkSL::ProgramElement"*** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 7, i32 0, i32 1
  %67 = bitcast %"class.SkSL::ProgramElement"*** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %69 = bitcast %"class.SkSL::ProgramElement"*** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %72 = bitcast %"class.SkSL::ProgramElement"*** %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = bitcast %"class.std::__1::vector.155"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #16
  %74 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 8
  %75 = bitcast %"class.std::__1::unique_ptr.1"* %74 to i64*
  store i64 %7, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 9
  %77 = bitcast %"class.std::__1::unique_ptr.281"* %76 to i64*
  store i64 0, i64* %77, align 8
  %78 = tail call %"class.SkSL::ProgramUsage"* @_ZN4SkSL8Analysis8GetUsageERKNS_7ProgramE(%"struct.SkSL::Program"* dereferenceable(128) %0) #16
  %79 = ptrtoint %"class.SkSL::ProgramUsage"* %78 to i64
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.281"* %76, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.SkSL::ProgramUsage"*, %"class.SkSL::ProgramUsage"** %80, align 8
  store i64 %79, i64* %77, align 8
  %82 = icmp eq %"class.SkSL::ProgramUsage"* %81, null
  br i1 %82, label %97, label %83

83:                                               ; preds = %37
  %84 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %81, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %85 = load %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"** %84, align 8
  store %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"** %84, align 8
  %86 = icmp eq %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = bitcast %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* %85 to i8*
  tail call void @_ZdaPv(i8* %88) #17
  br label %89

89:                                               ; preds = %87, %83
  %90 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %81, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %91 = load %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"** %90, align 8
  store %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"** %90, align 8
  %92 = icmp eq %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %89
  %94 = bitcast %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %91 to i8*
  tail call void @_ZdaPv(i8* %94) #17
  br label %95

95:                                               ; preds = %93, %89
  %96 = bitcast %"class.SkSL::ProgramUsage"* %81 to i8*
  tail call void @_ZdlPv(i8* %96) #17
  br label %97

97:                                               ; preds = %37, %95
  br i1 %33, label %108, label %98

98:                                               ; preds = %97
  %99 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %32, i64 0, i32 0, i32 1
  %100 = atomicrmw add i64* %99, i64 -1 acq_rel
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %108

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %32, i64 0, i32 0
  %104 = bitcast %"class.std::__1::__shared_weak_count"* %32 to void (%"class.std::__1::__shared_count"*)***
  %105 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %105, i64 2
  %107 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %106, align 8
  tail call void %107(%"class.std::__1::__shared_count"* %103) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %32) #16
  br label %108

108:                                              ; preds = %102, %98, %97
  br i1 %21, label %119, label %109

109:                                              ; preds = %108
  %110 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %111 = atomicrmw add i64* %110, i64 -1 acq_rel
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %119

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %115 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %116 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %116, i64 2
  %118 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %117, align 8
  tail call void %118(%"class.std::__1::__shared_count"* %114) #16
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #16
  br label %119

119:                                              ; preds = %108, %109, %113
  ret void
}

declare %"class.SkSL::ProgramUsage"* @_ZN4SkSL8Analysis8GetUsageERKNS_7ProgramE(%"struct.SkSL::Program"* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__14listIN4SkSL3dsl9DSLWriter10StackFrameENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__14listIN4SkSL3dsl9DSLWriter10StackFrameENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!8 = !{i64 0, i64 65}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_"}
!12 = distinct !{!12, !3}
