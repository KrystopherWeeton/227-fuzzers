; ModuleID = '../../third_party/skia/src/gpu/vk/GrVkRenderTarget.cpp'
source_filename = "../../third_party/skia/src/gpu/vk/GrVkRenderTarget.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrVkRenderTarget = type { %class.GrRenderTarget.base, %class.sk_sp.194, %class.sk_sp.194, %class.sk_sp.194, [32 x %class.sk_sp.472], %class.GrVkDescriptorSet*, %class.sk_sp.475, %class.GrSurface }
%class.GrRenderTarget.base = type <{ i32 (...)**, %class.sk_sp, %class.sk_sp, i32 }>
%class.sk_sp = type { %class.GrAttachment* }
%class.GrAttachment = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%class.sk_sp.194 = type { %class.GrVkAttachment* }
%class.GrVkAttachment = type { %class.GrAttachment.base, %class.GrVkImage, %class.sk_sp.470, %class.sk_sp.470, %class.gr_sp.471, %class.gr_sp.471 }
%class.GrAttachment.base = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8 }>
%class.GrVkImage = type { i32 (...)**, %struct.GrVkImageInfo, i32, %class.sk_sp.195, i8, %"class.GrVkImage::Resource"* }
%struct.GrVkImageInfo = type <{ %struct.VkImage_T*, %struct.GrVkAlloc, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>
%struct.VkImage_T = type opaque
%struct.GrVkAlloc = type <{ %struct.VkDeviceMemory_T*, i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%struct.VkDeviceMemory_T = type opaque
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.sk_sp.195 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type { %class.SkRefCnt.base, %class.GrBackendSurfaceMutableState, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrBackendSurfaceMutableState = type <{ %union.anon.196, i32, i8, [3 x i8] }>
%union.anon.196 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.197", %"struct.std::__1::atomic.201" }
%"struct.std::__1::atomic.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i32 }
%"struct.std::__1::atomic.201" = type { %"struct.std::__1::__atomic_base.202" }
%"struct.std::__1::__atomic_base.202" = type { %"struct.std::__1::__atomic_base.203" }
%"struct.std::__1::__atomic_base.203" = type { %"struct.std::__1::__cxx_atomic_impl.204" }
%"struct.std::__1::__cxx_atomic_impl.204" = type { %"struct.std::__1::__cxx_atomic_base_impl.205" }
%"struct.std::__1::__cxx_atomic_base_impl.205" = type { i32 }
%"class.GrVkImage::Resource" = type <{ %class.GrTextureResource, %class.GrVkGpu*, %struct.VkImage_T*, %struct.GrVkAlloc, i32, [4 x i8] }>
%class.GrTextureResource = type { %class.GrManagedResource.base, %class.sk_sp.192 }
%class.GrManagedResource.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.192 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.193, void (i8*)*, i8* }
%class.SkNVRefCnt.193 = type { %"struct.std::__1::atomic" }
%class.sk_sp.470 = type { %class.GrVkImageView* }
%class.GrVkImageView = type { %class.GrVkManagedResource, %struct.VkImageView_T*, %class.GrVkSamplerYcbcrConversion* }
%class.GrVkManagedResource = type { %class.GrManagedResource.base, %class.GrVkGpu* }
%struct.VkImageView_T = type opaque
%class.GrVkSamplerYcbcrConversion = type { %class.GrVkManagedResource, %struct.VkSamplerYcbcrConversion_T*, %"struct.GrVkSamplerYcbcrConversion::Key" }
%struct.VkSamplerYcbcrConversion_T = type opaque
%"struct.GrVkSamplerYcbcrConversion::Key" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%class.gr_sp.471 = type { %class.GrVkDescriptorSet* }
%class.sk_sp.472 = type { %class.GrVkFramebuffer* }
%class.GrVkFramebuffer = type { %class.GrVkManagedResource, %struct.VkFramebuffer_T*, %class.sk_sp.194, %class.sk_sp.194, %class.sk_sp.194, %class.sk_sp.473, %class.GrResourceHandle.474, %class.sk_sp.473, %"class.std::__1::unique_ptr.447" }
%struct.VkFramebuffer_T = type opaque
%class.GrResourceHandle.474 = type { i32 }
%class.sk_sp.473 = type { %class.GrVkRenderPass* }
%class.GrVkRenderPass = type <{ %class.GrVkManagedResource, %struct.VkRenderPass_T*, i32, %"struct.GrVkRenderPass::AttachmentsDescriptor", i32, i32, %struct.VkExtent2D, i32, i32, i32, [4 x i8] }>
%struct.VkRenderPass_T = type opaque
%"struct.GrVkRenderPass::AttachmentsDescriptor" = type { %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", i32 }
%"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc" = type { i32, i32, %"struct.GrVkRenderPass::LoadStoreOps" }
%"struct.GrVkRenderPass::LoadStoreOps" = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %class.GrVkSecondaryCommandBuffer* }
%class.GrVkSecondaryCommandBuffer = type { %class.GrVkCommandBuffer.base, [3 x i8] }
%class.GrVkCommandBuffer.base = type <{ i32 (...)**, %class.SkSTArray.425, %class.SkSTArray.429, %class.SkSTArray.432, %class.SkSTArray.436, i8, i8, [6 x i8], %class.GrVkRenderPass*, %struct.VkCommandBuffer_T*, [2 x %struct.VkBuffer_T*], %struct.VkBuffer_T*, %struct.VkViewport, %struct.VkRect2D, [4 x float], %class.SkSTArray.440, %class.SkSTArray.443, i8, [3 x i8], i32, i32, i8 }>
%class.SkSTArray.425 = type { %class.SkAlignedSTStorage.426, %class.SkTArray.427 }
%class.SkAlignedSTStorage.426 = type { [256 x i8] }
%class.SkTArray.427 = type { %class.sk_sp.428*, i64 }
%class.sk_sp.428 = type { %class.GrManagedResource* }
%class.GrManagedResource = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkSTArray.429 = type { %class.SkAlignedSTStorage.430, %class.SkTArray.431 }
%class.SkAlignedSTStorage.430 = type { [256 x i8] }
%class.SkTArray.431 = type { %class.gr_sp*, i64 }
%class.gr_sp = type { %class.GrRecycledResource* }
%class.GrRecycledResource = type { %class.GrManagedResource.base, [4 x i8] }
%class.SkSTArray.432 = type { %class.SkAlignedSTStorage.433, %class.SkTArray.434 }
%class.SkAlignedSTStorage.433 = type { [128 x i8] }
%class.SkTArray.434 = type { %class.sk_sp.435*, i64 }
%class.sk_sp.435 = type { %class.GrBuffer* }
%class.GrBuffer = type { i32 (...)** }
%class.SkSTArray.436 = type { %class.SkAlignedSTStorage.437, %class.SkTArray.438 }
%class.SkAlignedSTStorage.437 = type { [128 x i8] }
%class.SkTArray.438 = type { %class.gr_sp.439*, i64 }
%class.gr_sp.439 = type { %class.GrSurface* }
%struct.VkCommandBuffer_T = type opaque
%struct.VkBuffer_T = type opaque
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%class.SkSTArray.440 = type { %class.SkAlignedSTStorage.441, %class.SkTArray.442 }
%class.SkAlignedSTStorage.441 = type { [56 x i8] }
%class.SkTArray.442 = type { %struct.VkBufferMemoryBarrier*, i64 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%class.SkSTArray.443 = type { %class.SkAlignedSTStorage.444, %class.SkTArray.445 }
%class.SkAlignedSTStorage.444 = type { [144 x i8] }
%class.SkTArray.445 = type { %struct.VkImageMemoryBarrier*, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%class.GrVkDescriptorSet = type <{ %class.GrVkRecycledResource, %struct.VkDescriptorSet_T*, %class.GrVkDescriptorPool*, %class.GrResourceHandle, [4 x i8] }>
%class.GrVkRecycledResource = type { %class.GrRecycledResource.base, %class.GrVkGpu* }
%class.GrRecycledResource.base = type { %class.GrManagedResource.base }
%struct.VkDescriptorSet_T = type opaque
%class.GrVkDescriptorPool = type { %class.GrVkManagedResource, i32, i32, %struct.VkDescriptorPool_T* }
%struct.VkDescriptorPool_T = type opaque
%class.GrResourceHandle = type { i32 }
%class.sk_sp.475 = type { %class.GrVkFramebuffer* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.192 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.1, i8* }
%class.sk_sp.1 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.2, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.2 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.3, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.3 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.44", %"class.std::__1::shared_ptr.44", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.46", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.52" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.16", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.18" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.43"* }
%"class.std::__1::vector.43" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.44" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.44", %"class.std::__1::vector.476", i8, %"class.std::__1::vector.484", %"class.std::__1::forward_list", %class.SkTHashMap.497, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.476" = type { %"class.std::__1::__vector_base.477" }
%"class.std::__1::__vector_base.477" = type { %"class.std::__1::unique_ptr.478"*, %"class.std::__1::unique_ptr.478"*, %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.std::__1::unique_ptr.478"* }
%"class.std::__1::vector.484" = type { %"class.std::__1::__vector_base.485" }
%"class.std::__1::__vector_base.485" = type { %"class.std::__1::unique_ptr.486"*, %"class.std::__1::unique_ptr.486"*, %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.std::__1::unique_ptr.486"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.497 = type { %class.SkTHashTable.498 }
%class.SkTHashTable.498 = type { i32, i32, %class.SkAutoTArray.499 }
%class.SkAutoTArray.499 = type { %"class.std::__1::unique_ptr.500" }
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.562" }
%"struct.std::__1::pair.562" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.44", %"class.std::__1::shared_ptr.45" }
%"class.std::__1::shared_ptr.45" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.24", %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.40", [4 x i8] }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i64 }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { i64*, i64*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { i64* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.120", %class.sk_sp.126, %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.166", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.63", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.108" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.62 }
%class.sk_sp.62 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.73, %class.SkTArray.82, %class.SkTArray.84, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.66"*, i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.84, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.85 }
%class.sk_sp.85 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.544" }
%"struct.std::__1::pair.544" = type { i32, i32 }
%class.SkTHashMap.73 = type { %class.SkTHashTable.74 }
%class.SkTHashTable.74 = type { i32, i32, %class.SkAutoTArray.75 }
%class.SkAutoTArray.75 = type { %"class.std::__1::unique_ptr.76" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.545" }
%"struct.std::__1::pair.545" = type { i32, %class.SkTArray.546* }
%class.SkTArray.546 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.82 = type { %"class.std::__1::unique_ptr.83"*, i64 }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.546, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.84 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.98 }
%class.SkFibBlockSizes.98 = type { i32 }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.126 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.138, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.154, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.130 }
%class.SkTHashTable.130 = type { i32, i32, %class.SkAutoTArray.131 }
%class.SkAutoTArray.131 = type { %"class.std::__1::unique_ptr.132" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.138 = type { %class.SkTHashTable.139 }
%class.SkTHashTable.139 = type { i32, i32, %class.SkAutoTArray.140 }
%class.SkAutoTArray.140 = type { %"class.std::__1::unique_ptr.141" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.147, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.147 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.148" }
%"struct.std::__1::atomic.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__atomic_base.150" }
%"struct.std::__1::__atomic_base.150" = type { %"struct.std::__1::__cxx_atomic_impl.151" }
%"struct.std::__1::__cxx_atomic_impl.151" = type { %"struct.std::__1::__cxx_atomic_base_impl.152" }
%"struct.std::__1::__cxx_atomic_base_impl.152" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.153, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.153 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.154 = type { %class.SkTHashTable.155 }
%class.SkTHashTable.155 = type { i32, i32, %class.SkAutoTArray.156 }
%class.SkAutoTArray.156 = type { %"class.std::__1::unique_ptr.157" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.2, %class.sk_sp.169, %class.sk_sp.169 }
%class.sk_sp.169 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.191 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.191 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%struct.SkISize = type { i32, i32 }
%class.GrVkGpu = type { %class.GrGpu, %class.sk_sp.206, %class.sk_sp.350, %class.sk_sp.351, i8, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %class.GrVkResourceProvider, %class.GrStagingBufferManager, %class.GrVkMSAALoadManager, %class.GrVkCommandPool*, %class.GrVkPrimaryCommandBuffer*, %class.SkSTArray.454, %class.SkSTArray.454, %class.SkTArray.457, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceMemoryProperties, i8, i8, %"class.std::__1::unique_ptr.464" }
%class.sk_sp.206 = type { %struct.GrVkInterface* }
%struct.GrVkInterface = type { %class.SkRefCnt.base, %"struct.GrVkInterface::Functions" }
%"struct.GrVkInterface::Functions" = type { %"class.GrVkInterface::VkPtr", %"class.GrVkInterface::VkPtr.207", %"class.GrVkInterface::VkPtr.208", %"class.GrVkInterface::VkPtr.209", %"class.GrVkInterface::VkPtr.210", %"class.GrVkInterface::VkPtr.211", %"class.GrVkInterface::VkPtr.212", %"class.GrVkInterface::VkPtr.213", %"class.GrVkInterface::VkPtr.214", %"class.GrVkInterface::VkPtr.215", %"class.GrVkInterface::VkPtr.216", %"class.GrVkInterface::VkPtr.217", %"class.GrVkInterface::VkPtr.218", %"class.GrVkInterface::VkPtr.219", %"class.GrVkInterface::VkPtr.220", %"class.GrVkInterface::VkPtr.221", %"class.GrVkInterface::VkPtr.222", %"class.GrVkInterface::VkPtr.223", %"class.GrVkInterface::VkPtr.224", %"class.GrVkInterface::VkPtr.225", %"class.GrVkInterface::VkPtr.226", %"class.GrVkInterface::VkPtr.227", %"class.GrVkInterface::VkPtr.228", %"class.GrVkInterface::VkPtr.229", %"class.GrVkInterface::VkPtr.229", %"class.GrVkInterface::VkPtr.230", %"class.GrVkInterface::VkPtr.231", %"class.GrVkInterface::VkPtr.232", %"class.GrVkInterface::VkPtr.233", %"class.GrVkInterface::VkPtr.234", %"class.GrVkInterface::VkPtr.235", %"class.GrVkInterface::VkPtr.236", %"class.GrVkInterface::VkPtr.237", %"class.GrVkInterface::VkPtr.238", %"class.GrVkInterface::VkPtr.239", %"class.GrVkInterface::VkPtr.240", %"class.GrVkInterface::VkPtr.241", %"class.GrVkInterface::VkPtr.242", %"class.GrVkInterface::VkPtr.243", %"class.GrVkInterface::VkPtr.244", %"class.GrVkInterface::VkPtr.245", %"class.GrVkInterface::VkPtr.246", %"class.GrVkInterface::VkPtr.247", %"class.GrVkInterface::VkPtr.247", %"class.GrVkInterface::VkPtr.247", %"class.GrVkInterface::VkPtr.248", %"class.GrVkInterface::VkPtr.249", %"class.GrVkInterface::VkPtr.250", %"class.GrVkInterface::VkPtr.251", %"class.GrVkInterface::VkPtr.252", %"class.GrVkInterface::VkPtr.253", %"class.GrVkInterface::VkPtr.254", %"class.GrVkInterface::VkPtr.255", %"class.GrVkInterface::VkPtr.256", %"class.GrVkInterface::VkPtr.257", %"class.GrVkInterface::VkPtr.258", %"class.GrVkInterface::VkPtr.259", %"class.GrVkInterface::VkPtr.260", %"class.GrVkInterface::VkPtr.261", %"class.GrVkInterface::VkPtr.262", %"class.GrVkInterface::VkPtr.263", %"class.GrVkInterface::VkPtr.264", %"class.GrVkInterface::VkPtr.265", %"class.GrVkInterface::VkPtr.266", %"class.GrVkInterface::VkPtr.267", %"class.GrVkInterface::VkPtr.268", %"class.GrVkInterface::VkPtr.269", %"class.GrVkInterface::VkPtr.270", %"class.GrVkInterface::VkPtr.271", %"class.GrVkInterface::VkPtr.272", %"class.GrVkInterface::VkPtr.273", %"class.GrVkInterface::VkPtr.274", %"class.GrVkInterface::VkPtr.275", %"class.GrVkInterface::VkPtr.276", %"class.GrVkInterface::VkPtr.277", %"class.GrVkInterface::VkPtr.278", %"class.GrVkInterface::VkPtr.279", %"class.GrVkInterface::VkPtr.280", %"class.GrVkInterface::VkPtr.281", %"class.GrVkInterface::VkPtr.282", %"class.GrVkInterface::VkPtr.283", %"class.GrVkInterface::VkPtr.284", %"class.GrVkInterface::VkPtr.285", %"class.GrVkInterface::VkPtr.286", %"class.GrVkInterface::VkPtr.287", %"class.GrVkInterface::VkPtr.288", %"class.GrVkInterface::VkPtr.289", %"class.GrVkInterface::VkPtr.290", %"class.GrVkInterface::VkPtr.291", %"class.GrVkInterface::VkPtr.292", %"class.GrVkInterface::VkPtr.293", %"class.GrVkInterface::VkPtr.294", %"class.GrVkInterface::VkPtr.295", %"class.GrVkInterface::VkPtr.296", %"class.GrVkInterface::VkPtr.297", %"class.GrVkInterface::VkPtr.298", %"class.GrVkInterface::VkPtr.299", %"class.GrVkInterface::VkPtr.300", %"class.GrVkInterface::VkPtr.301", %"class.GrVkInterface::VkPtr.301", %"class.GrVkInterface::VkPtr.301", %"class.GrVkInterface::VkPtr.302", %"class.GrVkInterface::VkPtr.303", %"class.GrVkInterface::VkPtr.304", %"class.GrVkInterface::VkPtr.305", %"class.GrVkInterface::VkPtr.306", %"class.GrVkInterface::VkPtr.307", %"class.GrVkInterface::VkPtr.307", %"class.GrVkInterface::VkPtr.308", %"class.GrVkInterface::VkPtr.309", %"class.GrVkInterface::VkPtr.310", %"class.GrVkInterface::VkPtr.311", %"class.GrVkInterface::VkPtr.312", %"class.GrVkInterface::VkPtr.313", %"class.GrVkInterface::VkPtr.314", %"class.GrVkInterface::VkPtr.315", %"class.GrVkInterface::VkPtr.316", %"class.GrVkInterface::VkPtr.317", %"class.GrVkInterface::VkPtr.318", %"class.GrVkInterface::VkPtr.319", %"class.GrVkInterface::VkPtr.320", %"class.GrVkInterface::VkPtr.321", %"class.GrVkInterface::VkPtr.321", %"class.GrVkInterface::VkPtr.322", %"class.GrVkInterface::VkPtr.323", %"class.GrVkInterface::VkPtr.324", %"class.GrVkInterface::VkPtr.325", %"class.GrVkInterface::VkPtr.324", %"class.GrVkInterface::VkPtr.326", %"class.GrVkInterface::VkPtr.327", %"class.GrVkInterface::VkPtr.328", %"class.GrVkInterface::VkPtr.329", %"class.GrVkInterface::VkPtr.330", %"class.GrVkInterface::VkPtr.331", %"class.GrVkInterface::VkPtr.332", %"class.GrVkInterface::VkPtr.333", %"class.GrVkInterface::VkPtr.334", %"class.GrVkInterface::VkPtr.335", %"class.GrVkInterface::VkPtr.336", %"class.GrVkInterface::VkPtr.337", %"class.GrVkInterface::VkPtr.338", %"class.GrVkInterface::VkPtr.339", %"class.GrVkInterface::VkPtr.340", %"class.GrVkInterface::VkPtr.341", %"class.GrVkInterface::VkPtr.342", %"class.GrVkInterface::VkPtr.343", %"class.GrVkInterface::VkPtr.344", %"class.GrVkInterface::VkPtr.345", %"class.GrVkInterface::VkPtr.346", %"class.GrVkInterface::VkPtr.347", %"class.GrVkInterface::VkPtr.348", %"class.GrVkInterface::VkPtr.349" }
%"class.GrVkInterface::VkPtr" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkInstance_T = type opaque
%"class.GrVkInterface::VkPtr.207" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.208" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.GrVkInterface::VkPtr.209" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.210" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.211" = type { i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.212" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.GrVkInterface::VkPtr.213" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.214" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%"class.GrVkInterface::VkPtr.215" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.GrVkInterface::VkPtr.216" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.217" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.GrVkInterface::VkPtr.218" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.GrVkInterface::VkPtr.219" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.GrVkInterface::VkPtr.220" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.GrVkInterface::VkPtr.221" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.GrVkInterface::VkPtr.222" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkSemaphore_T = type opaque
%struct.VkFence_T = type opaque
%"class.GrVkInterface::VkPtr.223" = type { i32 (%struct.VkQueue_T*)* }
%"class.GrVkInterface::VkPtr.224" = type { i32 (%struct.VkDevice_T*)* }
%"class.GrVkInterface::VkPtr.225" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%"class.GrVkInterface::VkPtr.226" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.227" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.GrVkInterface::VkPtr.228" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.GrVkInterface::VkPtr.229" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.GrVkInterface::VkPtr.230" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)* }
%"class.GrVkInterface::VkPtr.231" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.GrVkInterface::VkPtr.232" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.GrVkInterface::VkPtr.233" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.GrVkInterface::VkPtr.234" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.GrVkInterface::VkPtr.235" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)* }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%"class.GrVkInterface::VkPtr.236" = type { void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)* }
%"class.GrVkInterface::VkPtr.237" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)* }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.238" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.239" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.240" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.GrVkInterface::VkPtr.241" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.GrVkInterface::VkPtr.242" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.GrVkInterface::VkPtr.243" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.244" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.245" = type { i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)* }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkEvent_T = type opaque
%"class.GrVkInterface::VkPtr.246" = type { void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.247" = type { i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)* }
%"class.GrVkInterface::VkPtr.248" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)* }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkQueryPool_T = type opaque
%"class.GrVkInterface::VkPtr.249" = type { void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.250" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)* }
%"class.GrVkInterface::VkPtr.251" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.252" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.253" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%"class.GrVkInterface::VkPtr.254" = type { void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.255" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.GrVkInterface::VkPtr.256" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.257" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.GrVkInterface::VkPtr.258" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.259" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.260" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkShaderModule_T = type opaque
%"class.GrVkInterface::VkPtr.261" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.262" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)* }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineCache_T = type opaque
%"class.GrVkInterface::VkPtr.263" = type { void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.264" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)* }
%"class.GrVkInterface::VkPtr.265" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)* }
%"class.GrVkInterface::VkPtr.266" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.GrVkInterface::VkPtr.267" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%"class.GrVkInterface::VkPtr.268" = type { void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.269" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkPushConstantRange = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.270" = type { void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.271" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSampler_T = type opaque
%"class.GrVkInterface::VkPtr.272" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.273" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%"class.GrVkInterface::VkPtr.274" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.275" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.GrVkInterface::VkPtr.276" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.277" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.278" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%"class.GrVkInterface::VkPtr.279" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.GrVkInterface::VkPtr.280" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.281" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.282" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.283" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.284" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.285" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)* }
%"class.GrVkInterface::VkPtr.286" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%"class.GrVkInterface::VkPtr.287" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.288" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.289" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%"class.GrVkInterface::VkPtr.290" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.291" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.292" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.293" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.294" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)* }
%"class.GrVkInterface::VkPtr.295" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)* }
%"class.GrVkInterface::VkPtr.296" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)* }
%"class.GrVkInterface::VkPtr.297" = type { void (%struct.VkCommandBuffer_T*, float)* }
%"class.GrVkInterface::VkPtr.298" = type { void (%struct.VkCommandBuffer_T*, float, float, float)* }
%"class.GrVkInterface::VkPtr.299" = type { void (%struct.VkCommandBuffer_T*, float*)* }
%"class.GrVkInterface::VkPtr.300" = type { void (%struct.VkCommandBuffer_T*, float, float)* }
%"class.GrVkInterface::VkPtr.301" = type { void (%struct.VkCommandBuffer_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.302" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)* }
%"class.GrVkInterface::VkPtr.303" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)* }
%"class.GrVkInterface::VkPtr.304" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)* }
%"class.GrVkInterface::VkPtr.305" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.306" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.307" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)* }
%"class.GrVkInterface::VkPtr.308" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.309" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)* }
%"class.GrVkInterface::VkPtr.310" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.GrVkInterface::VkPtr.311" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)* }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.312" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)* }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%"class.GrVkInterface::VkPtr.313" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.314" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)* }
%"class.GrVkInterface::VkPtr.315" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)* }
%"class.GrVkInterface::VkPtr.316" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.317" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)* }
%union.VkClearColorValue = type { [4 x float] }
%"class.GrVkInterface::VkPtr.318" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)* }
%struct.VkClearDepthStencilValue = type { float, i32 }
%"class.GrVkInterface::VkPtr.319" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)* }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%"class.GrVkInterface::VkPtr.320" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)* }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.321" = type { void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)* }
%"class.GrVkInterface::VkPtr.322" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%"class.GrVkInterface::VkPtr.323" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%"class.GrVkInterface::VkPtr.325" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.324" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.326" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.327" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.328" = type { void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)* }
%"class.GrVkInterface::VkPtr.329" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%"class.GrVkInterface::VkPtr.330" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.331" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.332" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.333" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.GrVkInterface::VkPtr.334" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.GrVkInterface::VkPtr.335" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.GrVkInterface::VkPtr.336" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%"class.GrVkInterface::VkPtr.337" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%"class.GrVkInterface::VkPtr.338" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.GrVkInterface::VkPtr.339" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%"class.GrVkInterface::VkPtr.340" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.GrVkInterface::VkPtr.341" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%"class.GrVkInterface::VkPtr.342" = type { void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)* }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%"class.GrVkInterface::VkPtr.343" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.344" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.345" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.346" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)* }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.347" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.348" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)* }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.349" = type { void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)* }
%class.sk_sp.350 = type { %class.GrVkMemoryAllocator* }
%class.GrVkMemoryAllocator = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.351 = type { %class.GrVkCaps* }
%class.GrVkCaps = type <{ %class.GrCaps.base, i8, [22 x %"struct.GrVkCaps::FormatInfo"], [31 x i32], i32, %class.SkSTArray.359, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.3, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%"struct.GrVkCaps::FormatInfo" = type <{ i16, i16, [4 x i8], %class.SkTDArray.352, %"class.std::__1::unique_ptr.353", i32, [4 x i8] }>
%class.SkTDArray.352 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"struct.GrVkCaps::ColorTypeInfo"* }
%"struct.GrVkCaps::ColorTypeInfo" = type { i32, i32, i32, %class.GrSwizzle, %class.GrSwizzle }
%class.GrSwizzle = type { i16 }
%class.SkSTArray.359 = type { %class.SkAlignedSTStorage.360, %class.SkTArray.361 }
%class.SkAlignedSTStorage.360 = type { [48 x i8] }
%class.SkTArray.361 = type { %struct.GrVkYcbcrConversionInfo*, i64 }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.GrVkResourceProvider = type { %class.GrVkGpu*, %struct.VkPipelineCache_T*, %class.SkTArray.362, %class.SkSTArray.364, %class.SkTArray.370, %class.SkSTArray.371, %class.SkMutex, %class.SkSTArray.371, %class.SkTDynamicHash.374, %class.SkTDynamicHash.383, %class.sk_sp.392, %class.SkSTArray.401, %class.GrResourceHandle, %class.GrResourceHandle }
%class.SkTArray.362 = type { %"struct.GrVkResourceProvider::MSAALoadPipeline"*, i64 }
%"struct.GrVkResourceProvider::MSAALoadPipeline" = type { %class.sk_sp.363, %class.GrVkRenderPass* }
%class.sk_sp.363 = type { %class.GrVkPipeline* }
%class.GrVkPipeline = type opaque
%class.SkSTArray.364 = type { %class.SkAlignedSTStorage.365, %class.SkTArray.366 }
%class.SkAlignedSTStorage.365 = type { [224 x i8] }
%class.SkTArray.366 = type { %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, i64 }
%"class.GrVkResourceProvider::CompatibleRenderPassSet" = type <{ %class.SkSTArray.367, i32, [4 x i8] }>
%class.SkSTArray.367 = type { %class.SkAlignedSTStorage.368, %class.SkTArray.369 }
%class.SkAlignedSTStorage.368 = type { [32 x i8] }
%class.SkTArray.369 = type { %class.GrVkRenderPass**, i64 }
%class.SkTArray.370 = type { %class.GrVkRenderPass**, i64 }
%class.SkSTArray.371 = type { %class.SkAlignedSTStorage.372, %class.SkTArray.373 }
%class.SkAlignedSTStorage.372 = type { [32 x i8] }
%class.SkTArray.373 = type { %class.GrVkCommandPool**, i64 }
%class.SkTDynamicHash.374 = type { %class.SkTHashTable.375 }
%class.SkTHashTable.375 = type { i32, i32, %class.SkAutoTArray.376 }
%class.SkAutoTArray.376 = type { %"class.std::__1::unique_ptr.377" }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.383 = type { %class.SkTHashTable.384 }
%class.SkTHashTable.384 = type { i32, i32, %class.SkAutoTArray.385 }
%class.SkAutoTArray.385 = type { %"class.std::__1::unique_ptr.386" }
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot" = type opaque
%class.sk_sp.392 = type { %"class.GrVkResourceProvider::PipelineStateCache"* }
%"class.GrVkResourceProvider::PipelineStateCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache, %class.GrVkGpu* }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.393, %class.SkTInternalLList }
%class.SkTHashTable.393 = type { i32, i32, %class.SkAutoTArray.394 }
%class.SkAutoTArray.394 = type { %"class.std::__1::unique_ptr.395" }
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"*, %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"* }
%"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry" = type opaque
%class.SkSTArray.401 = type { %class.SkAlignedSTStorage.402, %class.SkTArray.403 }
%class.SkAlignedSTStorage.402 = type { [32 x i8] }
%class.SkTArray.403 = type { %"class.std::__1::unique_ptr.404"*, i64 }
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %class.GrVkDescriptorSetManager* }
%class.GrVkDescriptorSetManager = type { %"struct.GrVkDescriptorSetManager::DescriptorPoolManager", %class.SkTArray.407, %class.SkSTArray.408, %class.SkSTArray.411 }
%"struct.GrVkDescriptorSetManager::DescriptorPoolManager" = type { %struct.VkDescriptorSetLayout_T*, i32, i32, i32, i32, %class.GrVkDescriptorPool* }
%class.SkTArray.407 = type { %class.GrVkDescriptorSet**, i64 }
%class.SkSTArray.408 = type { %class.SkAlignedSTStorage.409, %class.SkTArray.410 }
%class.SkAlignedSTStorage.409 = type { [16 x i8] }
%class.SkTArray.410 = type { i32*, i64 }
%class.SkSTArray.411 = type { %class.SkAlignedSTStorage.412, %class.SkTArray.413 }
%class.SkAlignedSTStorage.412 = type { [32 x i8] }
%class.SkTArray.413 = type { %class.GrVkSampler**, i64 }
%class.GrVkSampler = type <{ %class.GrVkManagedResource, %struct.VkSampler_T*, %class.GrVkSamplerYcbcrConversion*, %"struct.GrVkSampler::Key", i32, [4 x i8] }>
%"struct.GrVkSampler::Key" = type { i8, [7 x i8], %"struct.GrVkSamplerYcbcrConversion::Key" }
%class.GrStagingBufferManager = type { %"class.std::__1::vector.417", %class.GrGpu* }
%"class.std::__1::vector.417" = type { %"class.std::__1::__vector_base.418" }
%"class.std::__1::__vector_base.418" = type { %"struct.GrStagingBufferManager::StagingBuffer"*, %"struct.GrStagingBufferManager::StagingBuffer"*, %"class.std::__1::__compressed_pair.420" }
%"struct.GrStagingBufferManager::StagingBuffer" = type { %class.sk_sp.419, i8*, i64 }
%class.sk_sp.419 = type { %class.GrGpuBuffer* }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"struct.GrStagingBufferManager::StagingBuffer"* }
%class.GrVkMSAALoadManager = type { %struct.VkShaderModule_T*, %struct.VkShaderModule_T*, [2 x %struct.VkPipelineShaderStageCreateInfo], %struct.VkPipelineLayout_T* }
%class.GrVkCommandPool = type opaque
%class.GrVkPrimaryCommandBuffer = type { %class.GrVkCommandBuffer.base, %class.SkTArray.446, %struct.VkFence_T*, %class.SkTArray.453 }
%class.SkTArray.446 = type { %"class.std::__1::unique_ptr.447"*, i64 }
%class.SkTArray.453 = type { %class.sk_sp.192*, i64 }
%class.SkSTArray.454 = type { %class.SkAlignedSTStorage.455, %class.SkTArray.456 }
%class.SkAlignedSTStorage.455 = type { [8 x i8] }
%class.SkTArray.456 = type { %"class.GrVkSemaphore::Resource"**, i64 }
%"class.GrVkSemaphore::Resource" = type <{ %class.GrVkManagedResource, %struct.VkSemaphore_T*, i8, i8, i8, [5 x i8] }>
%class.SkTArray.457 = type { %"class.std::__1::unique_ptr.458"*, i64 }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.SkDrawable::GpuDrawHandler"* }
%"class.SkDrawable::GpuDrawHandler" = type { i32 (...)** }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %class.GrVkOpsRenderPass* }
%class.GrVkOpsRenderPass = type opaque
%class.GrRenderTarget = type <{ i32 (...)**, %class.sk_sp, %class.sk_sp, i32, [4 x i8], %class.GrSurface }>
%class.sk_sp.506 = type { %class.GrVkRenderTarget* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.GrVkDrawableInfo = type { %struct.VkCommandBuffer_T*, i32, %struct.VkRenderPass_T*, i32, %struct.VkRect2D*, %struct.VkImage_T* }
%class.GrBackendFormat = type { i32, i8, %union.anon.507, i32, [4 x i8] }
%union.anon.507 = type { %struct.anon.508 }
%struct.anon.508 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.520, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.510, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.510 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.511, %class.sk_sp.512, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.514" }
%class.SkNVRefCnt.511 = type { %"struct.std::__1::atomic" }
%class.sk_sp.512 = type { %class.GrSurface* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.512, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.514" = type { %"struct.std::__1::__atomic_base.515" }
%"struct.std::__1::__atomic_base.515" = type { %"struct.std::__1::__atomic_base.516" }
%"struct.std::__1::__atomic_base.516" = type { %"struct.std::__1::__cxx_atomic_impl.517" }
%"struct.std::__1::__cxx_atomic_impl.517" = type { %"struct.std::__1::__cxx_atomic_base_impl.518" }
%"struct.std::__1::__cxx_atomic_base_impl.518" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.519 }
%union.anon.519 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.520 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.521, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef.521 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.522"*, [24 x i8] }
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.525, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.525 = type { %class.SkAlignedSTStorage.526, %class.SkTArray.527 }
%class.SkAlignedSTStorage.526 = type { [8 x i8] }
%class.SkTArray.527 = type { %"class.std::__1::unique_ptr.528"*, i64 }
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.537, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.537 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.GrBackendRenderTarget = type { i8, i8, i32, i32, i32, i32, i32, %union.anon.538, %class.sk_sp.195 }
%union.anon.538 = type { %struct.GrGLFramebufferInfo, [136 x i8] }
%struct.GrGLFramebufferInfo = type { i32, i32 }
%class.SkTraceMemoryDump = type opaque

$_ZNK14GrRenderTarget18alwaysClearStencilEv = comdat any

$_ZN14GrRenderTarget14asRenderTargetEv = comdat any

$_ZNK14GrRenderTarget14asRenderTargetEv = comdat any

$_ZNK9GrSurface15getResourceTypeEv = comdat any

$_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString = comdat any

$_ZNK13GrGpuResource17computeScratchKeyEP12GrScratchKey = comdat any

$_ZN9GrSurface9asTextureEv = comdat any

$_ZNK9GrSurface9asTextureEv = comdat any

$_ZTv0_n112_N14GrRenderTarget14asRenderTargetEv = comdat any

$_ZTv0_n120_NK14GrRenderTarget14asRenderTargetEv = comdat any

$_ZN9GrSurface12onSetReleaseE5sk_spI18GrRefCntedCallbackE = comdat any

$_ZNK16GrVkRenderTarget27canAttemptStencilAttachmentEb = comdat any

$_ZNK16GrVkRenderTarget15onGpuMemorySizeEv = comdat any

$_ZN16GrVkRenderTarget12onSetReleaseE5sk_spI18GrRefCntedCallbackE = comdat any

$_ZTv0_n80_NK16GrVkRenderTarget15onGpuMemorySizeEv = comdat any

$_ZTv0_n128_N16GrVkRenderTarget12onSetReleaseE5sk_spI18GrRefCntedCallbackE = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN32GrBackendSurfaceMutableStateImplD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZTV32GrBackendSurfaceMutableStateImpl = comdat any

@_ZTV16GrVkRenderTarget = hidden unnamed_addr constant { [16 x i8*], [31 x i8*] } { [16 x i8*] [i8* inttoptr (i64 328 to i8*), i8* null, i8* null, i8* bitcast (i1 (%class.GrRenderTarget*)* @_ZNK14GrRenderTarget18alwaysClearStencilEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZN14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZNK14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (void (%class.GrBackendRenderTarget*, %class.GrVkRenderTarget*)* @_ZNK16GrVkRenderTarget22getBackendRenderTargetEv to i8*), i8* bitcast (i1 (%class.GrVkRenderTarget*, i1)* @_ZNK16GrVkRenderTarget27canAttemptStencilAttachmentEb to i8*), i8* bitcast (void (%class.GrVkRenderTarget*)* @_ZN16GrVkRenderTargetD1Ev to i8*), i8* bitcast (void (%class.GrVkRenderTarget*)* @_ZN16GrVkRenderTargetD0Ev to i8*), i8* bitcast (void (%class.GrVkRenderTarget*)* @_ZN16GrVkRenderTarget9onAbandonEv to i8*), i8* bitcast (void (%class.GrVkRenderTarget*)* @_ZN16GrVkRenderTarget9onReleaseEv to i8*), i8* bitcast (i1 (%class.GrVkRenderTarget*, %class.GrAttachment*, i1)* @_ZN16GrVkRenderTarget25completeStencilAttachmentEP12GrAttachmentb to i8*), i8* bitcast (void (%class.GrBackendFormat*, %class.GrVkRenderTarget*)* @_ZNK16GrVkRenderTarget13backendFormatEv to i8*), i8* bitcast (i64 (%class.GrVkRenderTarget*)* @_ZNK16GrVkRenderTarget15onGpuMemorySizeEv to i8*), i8* bitcast (void (%class.GrVkRenderTarget*, %class.sk_sp.192*)* @_ZN16GrVkRenderTarget12onSetReleaseE5sk_spI18GrRefCntedCallbackE to i8*)], [31 x i8*] [i8* inttoptr (i64 -328 to i8*), i8* inttoptr (i64 -328 to i8*), i8* inttoptr (i64 -328 to i8*), i8* null, i8* null, i8* inttoptr (i64 -328 to i8*), i8* inttoptr (i64 -328 to i8*), i8* null, i8* null, i8* inttoptr (i64 -328 to i8*), i8* inttoptr (i64 -328 to i8*), i8* inttoptr (i64 -328 to i8*), i8* null, i8* null, i8* inttoptr (i64 -328 to i8*), i8* null, i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*)* @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump to i8*), i8* bitcast (i8* (%class.GrSurface*)* @_ZNK9GrSurface15getResourceTypeEv to i8*), i8* bitcast (void (%class.GrVkRenderTarget*)* @_ZTv0_n40_N16GrVkRenderTargetD1Ev to i8*), i8* bitcast (void (%class.GrVkRenderTarget*)* @_ZTv0_n40_N16GrVkRenderTargetD0Ev to i8*), i8* bitcast (void (%class.GrVkRenderTarget*)* @_ZTv0_n48_N16GrVkRenderTarget9onReleaseEv to i8*), i8* bitcast (void (%class.GrVkRenderTarget*)* @_ZTv0_n56_N16GrVkRenderTarget9onAbandonEv to i8*), i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)* @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString to i8*), i8* bitcast (void (%class.GrGpuResource*, %class.GrScratchKey*)* @_ZNK13GrGpuResource17computeScratchKeyEP12GrScratchKey to i8*), i8* bitcast (i64 (%class.GrVkRenderTarget*)* @_ZTv0_n80_NK16GrVkRenderTarget15onGpuMemorySizeEv to i8*), i8* bitcast (void (%class.GrBackendFormat*, %class.GrVkRenderTarget*)* @_ZTv0_n88_NK16GrVkRenderTarget13backendFormatEv to i8*), i8* bitcast (%class.GrTexture* (%class.GrSurface*)* @_ZN9GrSurface9asTextureEv to i8*), i8* bitcast (%class.GrTexture* (%class.GrSurface*)* @_ZNK9GrSurface9asTextureEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZTv0_n112_N14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZTv0_n120_NK14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (void (%class.GrVkRenderTarget*, %class.sk_sp.192*)* @_ZTv0_n128_N16GrVkRenderTarget12onSetReleaseE5sk_spI18GrRefCntedCallbackE to i8*)] }, align 8
@_ZTT16GrVkRenderTarget = hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrVkRenderTarget, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [13 x i8*], [31 x i8*] }, { [13 x i8*], [31 x i8*] }* @_ZTC16GrVkRenderTarget0_14GrRenderTarget, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [13 x i8*], [31 x i8*] }, { [13 x i8*], [31 x i8*] }* @_ZTC16GrVkRenderTarget0_14GrRenderTarget, i32 0, inrange i32 1, i32 16) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrVkRenderTarget, i32 0, inrange i32 1, i32 16) to i8*)], align 8
@_ZTC16GrVkRenderTarget0_14GrRenderTarget = hidden unnamed_addr constant { [13 x i8*], [31 x i8*] } { [13 x i8*] [i8* inttoptr (i64 328 to i8*), i8* null, i8* null, i8* bitcast (i1 (%class.GrRenderTarget*)* @_ZNK14GrRenderTarget18alwaysClearStencilEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZN14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZNK14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZN14GrRenderTargetD1Ev to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZN14GrRenderTargetD0Ev to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZN14GrRenderTarget9onAbandonEv to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZN14GrRenderTarget9onReleaseEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [31 x i8*] [i8* null, i8* inttoptr (i64 -328 to i8*), i8* inttoptr (i64 -328 to i8*), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* inttoptr (i64 -328 to i8*), i8* inttoptr (i64 -328 to i8*), i8* inttoptr (i64 -328 to i8*), i8* null, i8* null, i8* inttoptr (i64 -328 to i8*), i8* null, i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*)* @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump to i8*), i8* bitcast (i8* (%class.GrSurface*)* @_ZNK9GrSurface15getResourceTypeEv to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZTv0_n40_N14GrRenderTargetD1Ev to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZTv0_n40_N14GrRenderTargetD0Ev to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZTv0_n48_N14GrRenderTarget9onReleaseEv to i8*), i8* bitcast (void (%class.GrRenderTarget*)* @_ZTv0_n56_N14GrRenderTarget9onAbandonEv to i8*), i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)* @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString to i8*), i8* bitcast (void (%class.GrGpuResource*, %class.GrScratchKey*)* @_ZNK13GrGpuResource17computeScratchKeyEP12GrScratchKey to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%class.GrTexture* (%class.GrSurface*)* @_ZN9GrSurface9asTextureEv to i8*), i8* bitcast (%class.GrTexture* (%class.GrSurface*)* @_ZNK9GrSurface9asTextureEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZTv0_n112_N14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (%class.GrRenderTarget* (%class.GrRenderTarget*)* @_ZTv0_n120_NK14GrRenderTarget14asRenderTargetEv to i8*), i8* bitcast (void (%class.GrSurface*, %class.sk_sp.192*)* @_ZN9GrSurface12onSetReleaseE5sk_spI18GrRefCntedCallbackE to i8*)] }, align 8
@_ZTV9GrSurface = external unnamed_addr constant { [17 x i8*] }, align 8
@_ZTV32GrBackendSurfaceMutableStateImpl = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.GrBackendSurfaceMutableStateImpl*)* @_ZN32GrBackendSurfaceMutableStateImplD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [8 x i8] c"Surface\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTargetC2EP7GrVkGpu7SkISize5sk_spI14GrVkAttachmentES5_NS_10CreateTypeE(%class.GrVkRenderTarget*, i8**, %class.GrVkGpu*, i64, %class.sk_sp.194* nocapture, %class.sk_sp.194* nocapture, i32) unnamed_addr #0 align 2 {
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %struct.SkISize*
  store i64 %3, i64* %8, align 8
  %10 = bitcast %class.GrVkRenderTarget* %0 to %class.GrRenderTarget*
  %11 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %2, i64 0, i32 0
  %12 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %4, i64 0, i32 0
  %13 = load %class.GrVkAttachment*, %class.GrVkAttachment** %12, align 8
  %14 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %13, i64 0, i32 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %13, i64 0, i32 0, i32 0, i32 3
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = icmp ne i8 %17, 0
  %19 = getelementptr inbounds i8*, i8** %1, i64 1
  call void @_ZN14GrRenderTargetC2EP5GrGpuRK7SkISizei11GrProtectedP12GrAttachment(%class.GrRenderTarget* %10, i8** %19, %class.GrGpu* %11, %struct.SkISize* nonnull dereferenceable(8) %9, i32 %15, i1 zeroext %18, %class.GrAttachment* null) #10
  %20 = bitcast i8** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %class.GrVkRenderTarget* %0 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds i8*, i8** %1, i64 3
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = inttoptr i64 %21 to i8*
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 %29
  %32 = bitcast i8* %31 to i64*
  store i64 %25, i64* %32, align 8
  %33 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1
  %34 = bitcast %class.sk_sp.194* %4 to i64*
  %35 = load i64, i64* %34, align 8
  store %class.GrVkAttachment* null, %class.GrVkAttachment** %12, align 8
  %36 = bitcast %class.sk_sp.194* %33 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 2
  %38 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %5, i64 0, i32 0
  %39 = bitcast %class.sk_sp.194* %5 to i64*
  %40 = load i64, i64* %39, align 8
  store %class.GrVkAttachment* null, %class.GrVkAttachment** %38, align 8
  %41 = bitcast %class.sk_sp.194* %37 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 3, i32 0
  %43 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %44 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1, i32 0
  %45 = bitcast %class.GrVkAttachment** %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 280, i1 false)
  %46 = load %class.GrVkAttachment*, %class.GrVkAttachment** %44, align 8
  %47 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %46, i64 0, i32 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 1
  %50 = inttoptr i64 %40 to %class.GrVkAttachment*
  %51 = select i1 %49, %class.GrVkAttachment* %46, %class.GrVkAttachment* %50
  %52 = icmp eq %class.GrVkAttachment* %51, null
  br i1 %52, label %68, label %53

53:                                               ; preds = %7
  %54 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %51, i64 0, i32 1, i32 1, i32 5
  %55 = load i32, i32* %54, align 4
  %56 = trunc i32 %55 to i8
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %68

58:                                               ; preds = %53
  %59 = load i8*, i8** %43, align 8
  %60 = getelementptr i8, i8* %59, i64 -24
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds i8, i8* %30, i64 %62
  %64 = getelementptr inbounds i8, i8* %63, i64 160
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = or i32 %66, 16
  store i32 %67, i32* %65, align 4
  br label %68

68:                                               ; preds = %7, %53, %58
  %69 = icmp eq i32 %6, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %68
  %71 = load i8*, i8** %43, align 8
  %72 = getelementptr i8, i8* %71, i64 -24
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds i8, i8* %30, i64 %74
  %76 = bitcast i8* %75 to %class.GrGpuResource*
  call void @_ZN13GrGpuResource24registerWithCacheWrappedE15GrWrapCacheable(%class.GrGpuResource* %76, i1 zeroext false) #10
  br label %77

77:                                               ; preds = %70, %68
  ret void
}

declare void @_ZN14GrRenderTargetC2EP5GrGpuRK7SkISizei11GrProtectedP12GrAttachment(%class.GrRenderTarget*, i8**, %class.GrGpu*, %struct.SkISize* dereferenceable(8), i32, i1 zeroext, %class.GrAttachment*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTarget8setFlagsEv(%class.GrVkRenderTarget* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 6, i32 0
  %3 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %2, align 8
  %4 = icmp eq %class.GrVkFramebuffer* %3, null
  br i1 %4, label %5, label %34

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1, i32 0
  %7 = load %class.GrVkAttachment*, %class.GrVkAttachment** %6, align 8
  %8 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %7, i64 0, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 2, i32 0
  %13 = load %class.GrVkAttachment*, %class.GrVkAttachment** %12, align 8
  br label %14

14:                                               ; preds = %5, %11
  %15 = phi %class.GrVkAttachment* [ %13, %11 ], [ %7, %5 ]
  %16 = icmp eq %class.GrVkAttachment* %15, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %15, i64 0, i32 1, i32 1, i32 5
  %19 = load i32, i32* %18, align 4
  %20 = trunc i32 %19 to i8
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 160
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = or i32 %32, 16
  store i32 %33, i32* %31, align 4
  br label %34

34:                                               ; preds = %1, %17, %22, %14
  ret void
}

declare void @_ZN13GrGpuResource24registerWithCacheWrappedE15GrWrapCacheable(%class.GrGpuResource*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTargetC1EP7GrVkGpu7SkISize5sk_spI14GrVkAttachmentES5_NS_10CreateTypeE(%class.GrVkRenderTarget*, %class.GrVkGpu*, i64, %class.sk_sp.194* nocapture, %class.sk_sp.194* nocapture, i32) unnamed_addr #0 align 2 {
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %struct.SkISize*
  store i64 %2, i64* %7, align 8
  %9 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 7
  %10 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 0
  %11 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %3, i64 0, i32 0
  %12 = load %class.GrVkAttachment*, %class.GrVkAttachment** %11, align 8
  %13 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %12, i64 0, i32 0, i32 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %9, i64 0, i32 0
  tail call void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource* %15, %class.GrGpu* %10) #10
  %16 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV9GrSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 7, i32 1
  %18 = bitcast %struct.SkISize* %17 to i64*
  store i64 %2, i64* %18, align 8
  %19 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 7, i32 2
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 7, i32 3
  store i8 %14, i8* %20, align 4
  %21 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 7, i32 4, i32 0
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %21, align 8
  %22 = bitcast %class.GrVkRenderTarget* %0 to %class.GrRenderTarget*
  %23 = load %class.GrVkAttachment*, %class.GrVkAttachment** %11, align 8
  %24 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %23, i64 0, i32 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %23, i64 0, i32 0, i32 0, i32 3
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp ne i8 %27, 0
  call void @_ZN14GrRenderTargetC2EP5GrGpuRK7SkISizei11GrProtectedP12GrAttachment(%class.GrRenderTarget* %22, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTT16GrVkRenderTarget, i64 0, i64 1), %class.GrGpu* %10, %struct.SkISize* nonnull dereferenceable(8) %8, i32 %25, i1 zeroext %28, %class.GrAttachment* null) #10
  %29 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrVkRenderTarget, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrVkRenderTarget, i64 0, inrange i32 1, i64 16) to i32 (...)**), i32 (...)*** %16, align 8
  %30 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1
  %31 = bitcast %class.sk_sp.194* %3 to i64*
  %32 = load i64, i64* %31, align 8
  store %class.GrVkAttachment* null, %class.GrVkAttachment** %11, align 8
  %33 = bitcast %class.sk_sp.194* %30 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 2
  %35 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %4, i64 0, i32 0
  %36 = bitcast %class.sk_sp.194* %4 to i64*
  %37 = load i64, i64* %36, align 8
  store %class.GrVkAttachment* null, %class.GrVkAttachment** %35, align 8
  %38 = bitcast %class.sk_sp.194* %34 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 3, i32 0
  %40 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %41 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1, i32 0
  %42 = bitcast %class.GrVkAttachment** %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 280, i1 false)
  %43 = load %class.GrVkAttachment*, %class.GrVkAttachment** %41, align 8
  %44 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %43, i64 0, i32 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 1
  %47 = inttoptr i64 %37 to %class.GrVkAttachment*
  %48 = select i1 %46, %class.GrVkAttachment* %43, %class.GrVkAttachment* %47
  %49 = icmp eq %class.GrVkAttachment* %48, null
  br i1 %49, label %66, label %50

50:                                               ; preds = %6
  %51 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %48, i64 0, i32 1, i32 1, i32 5
  %52 = load i32, i32* %51, align 4
  %53 = trunc i32 %52 to i8
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %66

55:                                               ; preds = %50
  %56 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr i8, i8* %57, i64 -24
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i8, i8* %40, i64 %60
  %62 = getelementptr inbounds i8, i8* %61, i64 160
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = or i32 %64, 16
  store i32 %65, i32* %63, align 4
  br label %66

66:                                               ; preds = %6, %50, %55
  %67 = icmp eq i32 %5, 0
  br i1 %67, label %68, label %76

68:                                               ; preds = %66
  %69 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr i8, i8* %70, i64 -24
  %72 = bitcast i8* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds i8, i8* %40, i64 %73
  %75 = bitcast i8* %74 to %class.GrGpuResource*
  call void @_ZN13GrGpuResource24registerWithCacheWrappedE15GrWrapCacheable(%class.GrGpuResource* %75, i1 zeroext false) #10
  br label %76

76:                                               ; preds = %68, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTargetC2EP7GrVkGpu7SkISize5sk_spI15GrVkFramebufferE(%class.GrVkRenderTarget*, i8**, %class.GrVkGpu*, i64, %class.sk_sp.475* nocapture readonly) unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.SkISize*
  store i64 %3, i64* %6, align 8
  %8 = bitcast %class.GrVkRenderTarget* %0 to %class.GrRenderTarget*
  %9 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %2, i64 0, i32 0
  %10 = getelementptr inbounds %class.sk_sp.475, %class.sk_sp.475* %4, i64 0, i32 0
  %11 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %10, align 8
  %12 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %11, i64 0, i32 2, i32 0
  %13 = load %class.GrVkAttachment*, %class.GrVkAttachment** %12, align 8
  %14 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %13, i64 0, i32 0, i32 0, i32 3
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp ne i8 %15, 0
  %17 = getelementptr inbounds i8*, i8** %1, i64 1
  call void @_ZN14GrRenderTargetC2EP5GrGpuRK7SkISizei11GrProtectedP12GrAttachment(%class.GrRenderTarget* %8, i8** %17, %class.GrGpu* %9, %struct.SkISize* nonnull dereferenceable(8) %7, i32 1, i1 zeroext %16, %class.GrAttachment* null) #10
  %18 = bitcast i8** %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %class.GrVkRenderTarget* %0 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds i8*, i8** %1, i64 3
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = inttoptr i64 %19 to i8*
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = bitcast i8* %29 to i64*
  store i64 %23, i64* %30, align 8
  %31 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 2, i32 0
  %33 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %34 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 6, i32 0
  %35 = bitcast %class.GrVkAttachment** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 288, i1 false)
  %36 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %10, align 8
  %37 = icmp eq %class.GrVkFramebuffer* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %5
  %39 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 1 monotonic
  store %class.GrVkFramebuffer* %36, %class.GrVkFramebuffer** %34, align 8
  br label %66

41:                                               ; preds = %5
  store %class.GrVkFramebuffer* %36, %class.GrVkFramebuffer** %34, align 8
  %42 = load %class.GrVkAttachment*, %class.GrVkAttachment** %31, align 8
  %43 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %42, i64 0, i32 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = load %class.GrVkAttachment*, %class.GrVkAttachment** %32, align 8
  br label %48

48:                                               ; preds = %46, %41
  %49 = phi %class.GrVkAttachment* [ %47, %46 ], [ %42, %41 ]
  %50 = icmp eq %class.GrVkAttachment* %49, null
  br i1 %50, label %66, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %49, i64 0, i32 1, i32 1, i32 5
  %53 = load i32, i32* %52, align 4
  %54 = trunc i32 %53 to i8
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %66

56:                                               ; preds = %51
  %57 = load i8*, i8** %33, align 8
  %58 = getelementptr i8, i8* %57, i64 -24
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i8, i8* %28, i64 %60
  %62 = getelementptr inbounds i8, i8* %61, i64 160
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = or i32 %64, 16
  store i32 %65, i32* %63, align 4
  br label %66

66:                                               ; preds = %38, %48, %51, %56
  %67 = load i8*, i8** %33, align 8
  %68 = getelementptr i8, i8* %67, i64 -24
  %69 = bitcast i8* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds i8, i8* %28, i64 %70
  %72 = bitcast i8* %71 to %class.GrGpuResource*
  call void @_ZN13GrGpuResource24registerWithCacheWrappedE15GrWrapCacheable(%class.GrGpuResource* %72, i1 zeroext false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTargetC1EP7GrVkGpu7SkISize5sk_spI15GrVkFramebufferE(%class.GrVkRenderTarget*, %class.GrVkGpu*, i64, %class.sk_sp.475* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %struct.SkISize*
  store i64 %2, i64* %5, align 8
  %7 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 7
  %8 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 0
  %9 = getelementptr inbounds %class.sk_sp.475, %class.sk_sp.475* %3, i64 0, i32 0
  %10 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %9, align 8
  %11 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %10, i64 0, i32 2, i32 0
  %12 = load %class.GrVkAttachment*, %class.GrVkAttachment** %11, align 8
  %13 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %12, i64 0, i32 0, i32 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %7, i64 0, i32 0
  tail call void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource* %15, %class.GrGpu* %8) #10
  %16 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV9GrSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 7, i32 1
  %18 = bitcast %struct.SkISize* %17 to i64*
  store i64 %2, i64* %18, align 8
  %19 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 7, i32 2
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 7, i32 3
  store i8 %14, i8* %20, align 4
  %21 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 7, i32 4, i32 0
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %21, align 8
  %22 = bitcast %class.GrVkRenderTarget* %0 to %class.GrRenderTarget*
  %23 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %9, align 8
  %24 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %23, i64 0, i32 2, i32 0
  %25 = load %class.GrVkAttachment*, %class.GrVkAttachment** %24, align 8
  %26 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %25, i64 0, i32 0, i32 0, i32 3
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp ne i8 %27, 0
  call void @_ZN14GrRenderTargetC2EP5GrGpuRK7SkISizei11GrProtectedP12GrAttachment(%class.GrRenderTarget* %22, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTT16GrVkRenderTarget, i64 0, i64 1), %class.GrGpu* %8, %struct.SkISize* nonnull dereferenceable(8) %6, i32 1, i1 zeroext %28, %class.GrAttachment* null) #10
  %29 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrVkRenderTarget, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [31 x i8*] }, { [16 x i8*], [31 x i8*] }* @_ZTV16GrVkRenderTarget, i64 0, inrange i32 1, i64 16) to i32 (...)**), i32 (...)*** %16, align 8
  %30 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 2, i32 0
  %32 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %33 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 6, i32 0
  %34 = bitcast %class.GrVkAttachment** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 288, i1 false)
  %35 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %9, align 8
  %36 = icmp eq %class.GrVkFramebuffer* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %4
  %38 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic
  store %class.GrVkFramebuffer* %35, %class.GrVkFramebuffer** %33, align 8
  br label %66

40:                                               ; preds = %4
  store %class.GrVkFramebuffer* %35, %class.GrVkFramebuffer** %33, align 8
  %41 = load %class.GrVkAttachment*, %class.GrVkAttachment** %30, align 8
  %42 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %41, i64 0, i32 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  %46 = load %class.GrVkAttachment*, %class.GrVkAttachment** %31, align 8
  br label %47

47:                                               ; preds = %45, %40
  %48 = phi %class.GrVkAttachment* [ %46, %45 ], [ %41, %40 ]
  %49 = icmp eq %class.GrVkAttachment* %48, null
  br i1 %49, label %66, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %48, i64 0, i32 1, i32 1, i32 5
  %52 = load i32, i32* %51, align 4
  %53 = trunc i32 %52 to i8
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %66

55:                                               ; preds = %50
  %56 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr i8, i8* %57, i64 -24
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i8, i8* %32, i64 %60
  %62 = getelementptr inbounds i8, i8* %61, i64 160
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = or i32 %64, 16
  store i32 %65, i32* %63, align 4
  br label %66

66:                                               ; preds = %37, %47, %50, %55
  %67 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr i8, i8* %68, i64 -24
  %70 = bitcast i8* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds i8, i8* %32, i64 %71
  %73 = bitcast i8* %72 to %class.GrGpuResource*
  call void @_ZN13GrGpuResource24registerWithCacheWrappedE15GrWrapCacheable(%class.GrGpuResource* %73, i1 zeroext false) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrVkAttachment* @_ZNK16GrVkRenderTarget17nonMSAAAttachmentEv(%class.GrVkRenderTarget* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1, i32 0
  %3 = load %class.GrVkAttachment*, %class.GrVkAttachment** %2, align 8
  %4 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %3, i64 0, i32 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 2, i32 0
  %9 = load %class.GrVkAttachment*, %class.GrVkAttachment** %8, align 8
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi %class.GrVkAttachment* [ %9, %7 ], [ %3, %1 ]
  ret %class.GrVkAttachment* %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTarget23MakeWrappedRenderTargetEP7GrVkGpu7SkISizeiRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE(%class.sk_sp.506* noalias nocapture sret, %class.GrVkGpu*, i64, i32, %struct.GrVkImageInfo* dereferenceable(144), %class.sk_sp.195* nocapture) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.194, align 8
  %8 = alloca %class.sk_sp.195, align 8
  %9 = alloca %class.sk_sp.194, align 8
  %10 = alloca %class.sk_sp.194, align 8
  %11 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = icmp ne i32 %12, %3
  %14 = icmp ne i32 %12, 1
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %6
  %17 = getelementptr inbounds %class.sk_sp.506, %class.sk_sp.506* %0, i64 0, i32 0
  store %class.GrVkRenderTarget* null, %class.GrVkRenderTarget** %17, align 8
  br label %84

18:                                               ; preds = %6
  %19 = bitcast %class.sk_sp.194* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %7, i64 0, i32 0
  store %class.GrVkAttachment* inttoptr (i64 -6148914691236517206 to %class.GrVkAttachment*), %class.GrVkAttachment** %20, align 8
  %21 = getelementptr inbounds %class.sk_sp.195, %class.sk_sp.195* %5, i64 0, i32 0
  %22 = bitcast %class.sk_sp.195* %5 to i64*
  %23 = load i64, i64* %22, align 8
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %21, align 8
  %24 = bitcast %class.sk_sp.195* %8 to i64*
  store i64 %23, i64* %24, align 8
  call void @_ZN14GrVkAttachment11MakeWrappedEP7GrVkGpu7SkISizeRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplEN12GrAttachment10UsageFlagsE15GrWrapOwnership15GrWrapCacheableb(%class.sk_sp.194* nonnull sret %7, %class.GrVkGpu* %1, i64 %2, %struct.GrVkImageInfo* dereferenceable(144) %4, %class.sk_sp.195* nonnull %8, i8 zeroext 2, i32 0, i1 zeroext false, i1 zeroext false) #10
  %25 = getelementptr inbounds %class.sk_sp.195, %class.sk_sp.195* %8, i64 0, i32 0
  %26 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %25, align 8
  %27 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %26, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = bitcast %class.GrBackendSurfaceMutableStateImpl* %26 to %class.SkRefCntBase*
  %34 = bitcast %class.GrBackendSurfaceMutableStateImpl* %26 to void (%class.SkRefCntBase*)***
  %35 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, i64 2
  %37 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, align 8
  call void %37(%class.SkRefCntBase* nonnull %33) #10
  br label %38

38:                                               ; preds = %18, %28, %32
  %39 = load %class.GrVkAttachment*, %class.GrVkAttachment** %20, align 8
  %40 = icmp eq %class.GrVkAttachment* %39, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %38
  %42 = getelementptr inbounds %class.sk_sp.506, %class.sk_sp.506* %0, i64 0, i32 0
  store %class.GrVkRenderTarget* null, %class.GrVkRenderTarget** %42, align 8
  br label %83

43:                                               ; preds = %38
  %44 = ptrtoint %class.GrVkAttachment* %39 to i64
  store %class.GrVkAttachment* null, %class.GrVkAttachment** %20, align 8
  %45 = call i8* @_Znwm(i64 504) #11
  %46 = bitcast i8* %45 to %class.GrVkRenderTarget*
  %47 = bitcast %class.sk_sp.194* %9 to i64*
  store i64 %44, i64* %47, align 8
  %48 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %10, i64 0, i32 0
  store %class.GrVkAttachment* null, %class.GrVkAttachment** %48, align 8
  call void @_ZN16GrVkRenderTargetC1EP7GrVkGpu7SkISize5sk_spI14GrVkAttachmentES5_NS_10CreateTypeE(%class.GrVkRenderTarget* nonnull %46, %class.GrVkGpu* %1, i64 %2, %class.sk_sp.194* nonnull %9, %class.sk_sp.194* nonnull %10, i32 0)
  %49 = load %class.GrVkAttachment*, %class.GrVkAttachment** %48, align 8
  %50 = icmp eq %class.GrVkAttachment* %49, null
  br i1 %50, label %59, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %49, i64 0, i32 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %52, i64 -1
  %58 = bitcast %class.GrIORef* %57 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %58, i32 0) #10
  br label %59

59:                                               ; preds = %43, %51, %56
  %60 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %9, i64 0, i32 0
  %61 = load %class.GrVkAttachment*, %class.GrVkAttachment** %60, align 8
  %62 = icmp eq %class.GrVkAttachment* %61, null
  br i1 %62, label %71, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %61, i64 0, i32 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %71

68:                                               ; preds = %63
  %69 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %64, i64 -1
  %70 = bitcast %class.GrIORef* %69 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %70, i32 0) #10
  br label %71

71:                                               ; preds = %59, %63, %68
  %72 = bitcast %class.sk_sp.506* %0 to i8**
  store i8* %45, i8** %72, align 8
  %73 = load %class.GrVkAttachment*, %class.GrVkAttachment** %20, align 8
  %74 = icmp eq %class.GrVkAttachment* %73, null
  br i1 %74, label %83, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %73, i64 0, i32 0, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %76, i64 -1
  %82 = bitcast %class.GrIORef* %81 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %82, i32 0) #10
  br label %83

83:                                               ; preds = %41, %71, %75, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  br label %84

84:                                               ; preds = %83, %16
  ret void
}

declare void @_ZN14GrVkAttachment11MakeWrappedEP7GrVkGpu7SkISizeRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplEN12GrAttachment10UsageFlagsE15GrWrapOwnership15GrWrapCacheableb(%class.sk_sp.194* sret, %class.GrVkGpu*, i64, %struct.GrVkImageInfo* dereferenceable(144), %class.sk_sp.195*, i8 zeroext, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTarget27MakeSecondaryCBRenderTargetEP7GrVkGpu7SkISizeRK16GrVkDrawableInfo(%class.sk_sp.506* noalias nocapture sret, %class.GrVkGpu*, i64, %struct.GrVkDrawableInfo* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.GrVkImageInfo, align 8
  %6 = alloca %class.sk_sp.194, align 8
  %7 = alloca %class.sk_sp.195, align 8
  %8 = alloca %class.sk_sp.194, align 8
  %9 = alloca %class.sk_sp.473, align 8
  %10 = alloca %class.sk_sp.475, align 8
  %11 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 9
  %12 = getelementptr inbounds %struct.GrVkDrawableInfo, %struct.GrVkDrawableInfo* %3, i64 0, i32 2
  %13 = load %struct.VkRenderPass_T*, %struct.VkRenderPass_T** %12, align 8
  %14 = getelementptr inbounds %struct.GrVkDrawableInfo, %struct.GrVkDrawableInfo* %3, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = tail call %class.GrVkRenderPass* @_ZN20GrVkResourceProvider32findCompatibleExternalRenderPassEP14VkRenderPass_Tj(%class.GrVkResourceProvider* %11, %struct.VkRenderPass_T* %13, i32 %15) #10
  %17 = icmp eq %class.GrVkRenderPass* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %4
  %19 = getelementptr inbounds %class.sk_sp.506, %class.sk_sp.506* %0, i64 0, i32 0
  store %class.GrVkRenderTarget* null, %class.GrVkRenderTarget** %19, align 8
  br label %139

20:                                               ; preds = %4
  %21 = getelementptr inbounds %struct.GrVkDrawableInfo, %struct.GrVkDrawableInfo* %3, i64 0, i32 0
  %22 = load %struct.VkCommandBuffer_T*, %struct.VkCommandBuffer_T** %21, align 8
  %23 = icmp eq %struct.VkCommandBuffer_T* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.sk_sp.506, %class.sk_sp.506* %0, i64 0, i32 0
  store %class.GrVkRenderTarget* null, %class.GrVkRenderTarget** %25, align 8
  br label %139

26:                                               ; preds = %20
  %27 = bitcast %struct.GrVkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %27) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 144, i1 false)
  %28 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 1, i32 5
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 1, i32 6
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 2
  %31 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 36, i1 false) #10
  %32 = bitcast i32* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #10
  store i32 1, i32* %31, align 8
  %33 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 7
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 8
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 9
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 11, i32 0
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 11, i32 2
  %38 = bitcast i64* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 36, i1 false) #10
  %39 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 12
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 3
  store i32 2, i32* %40, align 4
  %41 = getelementptr inbounds %struct.GrVkDrawableInfo, %struct.GrVkDrawableInfo* %3, i64 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 4
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %5, i64 0, i32 5
  store i32 19, i32* %44, align 4
  %45 = tail call i8* @_Znwm(i64 32) #11
  %46 = getelementptr inbounds i8, i8* %45, i64 8
  %47 = bitcast i8* %45 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV32GrBackendSurfaceMutableStateImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = bitcast i8* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 2, i32 -1, i32 1>, <4 x i32>* %48, align 4
  %49 = getelementptr inbounds i8, i8* %45, i64 24
  store i8 1, i8* %49, align 4
  %50 = ptrtoint i8* %45 to i64
  %51 = bitcast %class.sk_sp.194* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  %52 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %6, i64 0, i32 0
  store %class.GrVkAttachment* inttoptr (i64 -6148914691236517206 to %class.GrVkAttachment*), %class.GrVkAttachment** %52, align 8
  %53 = bitcast %class.sk_sp.195* %7 to i64*
  store i64 %50, i64* %53, align 8
  call void @_ZN14GrVkAttachment11MakeWrappedEP7GrVkGpu7SkISizeRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplEN12GrAttachment10UsageFlagsE15GrWrapOwnership15GrWrapCacheableb(%class.sk_sp.194* nonnull sret %6, %class.GrVkGpu* %1, i64 %2, %struct.GrVkImageInfo* nonnull dereferenceable(144) %5, %class.sk_sp.195* nonnull %7, i8 zeroext 2, i32 0, i1 zeroext false, i1 zeroext true) #10
  %54 = getelementptr inbounds %class.sk_sp.195, %class.sk_sp.195* %7, i64 0, i32 0
  %55 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %54, align 8
  %56 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %55, null
  br i1 %56, label %67, label %57

57:                                               ; preds = %26
  %58 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %55, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %67

61:                                               ; preds = %57
  %62 = bitcast %class.GrBackendSurfaceMutableStateImpl* %55 to %class.SkRefCntBase*
  %63 = bitcast %class.GrBackendSurfaceMutableStateImpl* %55 to void (%class.SkRefCntBase*)***
  %64 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, i64 2
  %66 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, align 8
  call void %66(%class.SkRefCntBase* nonnull %62) #10
  br label %67

67:                                               ; preds = %26, %57, %61
  %68 = load %struct.VkCommandBuffer_T*, %struct.VkCommandBuffer_T** %21, align 8
  %69 = call %class.GrVkSecondaryCommandBuffer* @_ZN26GrVkSecondaryCommandBuffer6CreateEP17VkCommandBuffer_TPK14GrVkRenderPass(%struct.VkCommandBuffer_T* %68, %class.GrVkRenderPass* nonnull %16) #10
  %70 = icmp eq %class.GrVkSecondaryCommandBuffer* %69, null
  br i1 %70, label %125, label %71

71:                                               ; preds = %67
  %72 = call i8* @_Znwm(i64 88) #11
  %73 = bitcast i8* %72 to %class.GrVkFramebuffer*
  %74 = bitcast %class.sk_sp.194* %6 to i64*
  %75 = load i64, i64* %74, align 8
  store %class.GrVkAttachment* null, %class.GrVkAttachment** %52, align 8
  %76 = bitcast %class.sk_sp.194* %8 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %class.sk_sp.473, %class.sk_sp.473* %9, i64 0, i32 0
  store %class.GrVkRenderPass* %16, %class.GrVkRenderPass** %77, align 8
  call void @_ZN15GrVkFramebufferC1EPK7GrVkGpu5sk_spI14GrVkAttachmentES3_IK14GrVkRenderPassENSt3__110unique_ptrI26GrVkSecondaryCommandBufferNS9_14default_deleteISB_EEEE(%class.GrVkFramebuffer* nonnull %73, %class.GrVkGpu* %1, %class.sk_sp.194* nonnull %8, %class.sk_sp.473* nonnull %9, %class.GrVkSecondaryCommandBuffer* nonnull %69) #10
  %78 = ptrtoint i8* %72 to i64
  %79 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %77, align 8
  %80 = icmp eq %class.GrVkRenderPass* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %71
  %82 = bitcast %class.GrVkRenderPass* %79 to %class.GrManagedResource*
  %83 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %79, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %94

86:                                               ; preds = %81
  %87 = bitcast %class.GrVkRenderPass* %79 to void (%class.GrManagedResource*)***
  %88 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %87, align 8
  %89 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %88, i64 4
  %90 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %89, align 8
  call void %90(%class.GrManagedResource* nonnull %82) #10
  %91 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %87, align 8
  %92 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %91, i64 1
  %93 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %92, align 8
  call void %93(%class.GrManagedResource* nonnull %82) #10
  br label %94

94:                                               ; preds = %71, %81, %86
  %95 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %8, i64 0, i32 0
  %96 = load %class.GrVkAttachment*, %class.GrVkAttachment** %95, align 8
  %97 = icmp eq %class.GrVkAttachment* %96, null
  br i1 %97, label %106, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %96, i64 0, i32 0, i32 0, i32 0, i32 1
  %100 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %99, i64 -1
  %105 = bitcast %class.GrIORef* %104 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %105, i32 0) #10
  br label %106

106:                                              ; preds = %94, %98, %103
  %107 = call i8* @_Znwm(i64 504) #11
  %108 = bitcast i8* %107 to %class.GrVkRenderTarget*
  %109 = bitcast %class.sk_sp.475* %10 to i64*
  store i64 %78, i64* %109, align 8
  call void @_ZN16GrVkRenderTargetC1EP7GrVkGpu7SkISize5sk_spI15GrVkFramebufferE(%class.GrVkRenderTarget* nonnull %108, %class.GrVkGpu* %1, i64 %2, %class.sk_sp.475* nonnull %10)
  %110 = bitcast i8* %72 to %class.GrManagedResource*
  %111 = getelementptr inbounds i8, i8* %72, i64 8
  %112 = bitcast i8* %111 to i32*
  %113 = atomicrmw add i32* %112, i32 -1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %123

115:                                              ; preds = %106
  %116 = bitcast i8* %72 to void (%class.GrManagedResource*)***
  %117 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %116, align 8
  %118 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %117, i64 4
  %119 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %118, align 8
  call void %119(%class.GrManagedResource* nonnull %110) #10
  %120 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %116, align 8
  %121 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %120, i64 1
  %122 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %121, align 8
  call void %122(%class.GrManagedResource* nonnull %110) #10
  br label %123

123:                                              ; preds = %106, %115
  %124 = bitcast %class.sk_sp.506* %0 to i8**
  store i8* %107, i8** %124, align 8
  br label %127

125:                                              ; preds = %67
  %126 = getelementptr inbounds %class.sk_sp.506, %class.sk_sp.506* %0, i64 0, i32 0
  store %class.GrVkRenderTarget* null, %class.GrVkRenderTarget** %126, align 8
  br label %127

127:                                              ; preds = %125, %123
  %128 = load %class.GrVkAttachment*, %class.GrVkAttachment** %52, align 8
  %129 = icmp eq %class.GrVkAttachment* %128, null
  br i1 %129, label %138, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %128, i64 0, i32 0, i32 0, i32 0, i32 1
  %132 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i32* %132, i32 -1 acq_rel
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %138

135:                                              ; preds = %130
  %136 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %131, i64 -1
  %137 = bitcast %class.GrIORef* %136 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %137, i32 0) #10
  br label %138

138:                                              ; preds = %135, %130, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %27) #10
  br label %139

139:                                              ; preds = %138, %24, %18
  ret void
}

declare %class.GrVkRenderPass* @_ZN20GrVkResourceProvider32findCompatibleExternalRenderPassEP14VkRenderPass_Tj(%class.GrVkResourceProvider*, %struct.VkRenderPass_T*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare %class.GrVkSecondaryCommandBuffer* @_ZN26GrVkSecondaryCommandBuffer6CreateEP17VkCommandBuffer_TPK14GrVkRenderPass(%struct.VkCommandBuffer_T*, %class.GrVkRenderPass*) local_unnamed_addr #1

declare void @_ZN15GrVkFramebufferC1EPK7GrVkGpu5sk_spI14GrVkAttachmentES3_IK14GrVkRenderPassENSt3__110unique_ptrI26GrVkSecondaryCommandBufferNS9_14default_deleteISB_EEEE(%class.GrVkFramebuffer*, %class.GrVkGpu*, %class.sk_sp.194*, %class.sk_sp.473*, %class.GrVkSecondaryCommandBuffer*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16GrVkRenderTarget13backendFormatEv(%class.GrBackendFormat* noalias sret, %class.GrVkRenderTarget* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %struct.GrVkYcbcrConversionInfo, align 8
  %4 = alloca %struct.GrVkYcbcrConversionInfo, align 8
  %5 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %1, i64 0, i32 6, i32 0
  %6 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %5, align 8
  %7 = icmp eq %class.GrVkFramebuffer* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %6, i64 0, i32 2, i32 0
  %10 = load %class.GrVkAttachment*, %class.GrVkAttachment** %9, align 8
  %11 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %10, i64 0, i32 1, i32 5
  %12 = load %"class.GrVkImage::Resource"*, %"class.GrVkImage::Resource"** %11, align 8, !noalias !3
  %13 = icmp eq %"class.GrVkImage::Resource"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %10, i64 0, i32 1, i32 1, i32 11, i32 3
  %16 = load i32, i32* %15, align 8, !noalias !3
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %10, i64 0, i32 1, i32 1, i32 11
  tail call void @_ZN15GrBackendFormat6MakeVkERK23GrVkYcbcrConversionInfo(%class.GrBackendFormat* sret %0, %struct.GrVkYcbcrConversionInfo* dereferenceable(48) %19) #10
  br label %40

20:                                               ; preds = %14, %8
  %21 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %10, i64 0, i32 1, i32 1, i32 4
  %22 = load i32, i32* %21, align 8, !noalias !3
  %23 = bitcast %struct.GrVkYcbcrConversionInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #10, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 48, i1 false) #10, !noalias !6
  call void @_ZN15GrBackendFormatC1E8VkFormatRK23GrVkYcbcrConversionInfo(%class.GrBackendFormat* %0, i32 %22, %struct.GrVkYcbcrConversionInfo* nonnull dereferenceable(48) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #10, !noalias !6
  br label %40

24:                                               ; preds = %2
  %25 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %1, i64 0, i32 1, i32 0
  %26 = load %class.GrVkAttachment*, %class.GrVkAttachment** %25, align 8
  %27 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %26, i64 0, i32 1, i32 5
  %28 = load %"class.GrVkImage::Resource"*, %"class.GrVkImage::Resource"** %27, align 8, !noalias !9
  %29 = icmp eq %"class.GrVkImage::Resource"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %26, i64 0, i32 1, i32 1, i32 11, i32 3
  %32 = load i32, i32* %31, align 8, !noalias !9
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %26, i64 0, i32 1, i32 1, i32 11
  tail call void @_ZN15GrBackendFormat6MakeVkERK23GrVkYcbcrConversionInfo(%class.GrBackendFormat* sret %0, %struct.GrVkYcbcrConversionInfo* dereferenceable(48) %35) #10
  br label %40

36:                                               ; preds = %30, %24
  %37 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %26, i64 0, i32 1, i32 1, i32 4
  %38 = load i32, i32* %37, align 8, !noalias !9
  %39 = bitcast %struct.GrVkYcbcrConversionInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %39) #10, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 48, i1 false) #10, !noalias !12
  call void @_ZN15GrBackendFormatC1E8VkFormatRK23GrVkYcbcrConversionInfo(%class.GrBackendFormat* %0, i32 %38, %struct.GrVkYcbcrConversionInfo* nonnull dereferenceable(48) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %39) #10, !noalias !12
  br label %40

40:                                               ; preds = %36, %34, %20, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n88_NK16GrVkRenderTarget13backendFormatEv(%class.GrBackendFormat* noalias sret, %class.GrVkRenderTarget* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrVkRenderTarget* %1 to i8*
  %4 = bitcast %class.GrVkRenderTarget* %1 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 -88
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 %8
  %10 = bitcast i8* %9 to %class.GrVkRenderTarget*
  tail call void @_ZNK16GrVkRenderTarget13backendFormatEv(%class.GrBackendFormat* sret %0, %class.GrVkRenderTarget* %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkAttachment* @_ZN16GrVkRenderTarget21dynamicMSAAAttachmentEv(%class.GrVkRenderTarget* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.GrBackendFormat, align 8
  %3 = alloca %class.sk_sp, align 8
  %4 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 3
  %5 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %4, i64 0, i32 0
  %6 = load %class.GrVkAttachment*, %class.GrVkAttachment** %5, align 8
  %7 = icmp eq %class.GrVkAttachment* %6, null
  br i1 %7, label %8, label %78

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1, i32 0
  %10 = load %class.GrVkAttachment*, %class.GrVkAttachment** %9, align 8
  %11 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr i8, i8* %12, i64 -24
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = getelementptr inbounds i8, i8* %17, i64 128
  %19 = bitcast i8* %18 to %class.GrVkGpu**
  %20 = load %class.GrVkGpu*, %class.GrVkGpu** %19, align 8
  %21 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %20, i64 0, i32 0, i32 5
  %22 = load %class.GrDirectContext*, %class.GrDirectContext** %21, align 8
  %23 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %22, i64 0, i32 6, i32 0, i32 0, i32 0
  %24 = load %class.GrResourceProvider*, %class.GrResourceProvider** %23, align 8
  %25 = bitcast %class.GrBackendFormat* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %25) #10
  %26 = bitcast %class.GrVkAttachment* %10 to void (%class.GrBackendFormat*, %class.GrVkAttachment*)***
  %27 = load void (%class.GrBackendFormat*, %class.GrVkAttachment*)**, void (%class.GrBackendFormat*, %class.GrVkAttachment*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.GrBackendFormat*, %class.GrVkAttachment*)*, void (%class.GrBackendFormat*, %class.GrVkAttachment*)** %27, i64 9
  %29 = load void (%class.GrBackendFormat*, %class.GrVkAttachment*)*, void (%class.GrBackendFormat*, %class.GrVkAttachment*)** %28, align 8
  call void %29(%class.GrBackendFormat* nonnull sret %2, %class.GrVkAttachment* %10) #10
  %30 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %31 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  store %class.GrAttachment* inttoptr (i64 -6148914691236517206 to %class.GrAttachment*), %class.GrAttachment** %31, align 8
  %32 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %10, i64 0, i32 0, i32 0, i32 1
  %33 = bitcast %struct.SkISize* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %20, i64 0, i32 0, i32 2, i32 0
  %36 = load %class.GrCaps*, %class.GrCaps** %35, align 8
  %37 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %36, i64 0, i32 13
  %38 = bitcast %class.GrCaps* %36 to i32 (%class.GrCaps*, %class.GrBackendFormat*)***
  %39 = load i32 (%class.GrCaps*, %class.GrBackendFormat*)**, i32 (%class.GrCaps*, %class.GrBackendFormat*)*** %38, align 8
  %40 = getelementptr inbounds i32 (%class.GrCaps*, %class.GrBackendFormat*)*, i32 (%class.GrCaps*, %class.GrBackendFormat*)** %39, i64 6
  %41 = load i32 (%class.GrCaps*, %class.GrBackendFormat*)*, i32 (%class.GrCaps*, %class.GrBackendFormat*)** %40, align 8
  %42 = call i32 %41(%class.GrCaps* %36, %class.GrBackendFormat* nonnull dereferenceable(72) %2) #10
  %43 = load i32, i32* %37, align 4
  %44 = icmp slt i32 %42, %43
  %45 = select i1 %44, i32 %42, i32 %43
  %46 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %10, i64 0, i32 0, i32 0, i32 3
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp ne i8 %47, 0
  call void @_ZN18GrResourceProvider28getDiscardableMSAAAttachmentE7SkISizeRK15GrBackendFormati11GrProtected(%class.sk_sp* nonnull sret %3, %class.GrResourceProvider* %24, i64 %34, %class.GrBackendFormat* nonnull dereferenceable(72) %2, i32 %45, i1 zeroext %48) #10
  %49 = load %class.GrAttachment*, %class.GrAttachment** %31, align 8
  %50 = icmp eq %class.GrAttachment* %49, null
  br i1 %50, label %76, label %51

51:                                               ; preds = %8
  store %class.GrAttachment* null, %class.GrAttachment** %31, align 8
  %52 = ptrtoint %class.GrAttachment* %49 to i64
  %53 = load %class.GrVkAttachment*, %class.GrVkAttachment** %5, align 8
  %54 = bitcast %class.sk_sp.194* %4 to i64*
  store i64 %52, i64* %54, align 8
  %55 = icmp eq %class.GrVkAttachment* %53, null
  br i1 %55, label %64, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %53, i64 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %64

61:                                               ; preds = %56
  %62 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %57, i64 -1
  %63 = bitcast %class.GrIORef* %62 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %63, i32 0) #10
  br label %64

64:                                               ; preds = %51, %56, %61
  %65 = load %class.GrVkAttachment*, %class.GrVkAttachment** %5, align 8
  %66 = load %class.GrAttachment*, %class.GrAttachment** %31, align 8
  %67 = icmp eq %class.GrAttachment* %66, null
  br i1 %67, label %76, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %class.GrAttachment, %class.GrAttachment* %66, i64 0, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %76

73:                                               ; preds = %68
  %74 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %69, i64 -1
  %75 = bitcast %class.GrIORef* %74 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %75, i32 0) #10
  br label %76

76:                                               ; preds = %8, %64, %68, %73
  %77 = phi %class.GrVkAttachment* [ %65, %64 ], [ %65, %68 ], [ %65, %73 ], [ null, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %25) #10
  br label %78

78:                                               ; preds = %1, %76
  %79 = phi %class.GrVkAttachment* [ %77, %76 ], [ %6, %1 ]
  ret %class.GrVkAttachment* %79
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrVkGpu* @_ZNK16GrVkRenderTarget8getVkGpuEv(%class.GrVkRenderTarget* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr i8, i8* %3, i64 -24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 %6
  %9 = getelementptr inbounds i8, i8* %8, i64 128
  %10 = bitcast i8* %9 to %class.GrVkGpu**
  %11 = load %class.GrVkGpu*, %class.GrVkGpu** %10, align 8
  ret %class.GrVkGpu* %11
}

declare void @_ZN18GrResourceProvider28getDiscardableMSAAAttachmentE7SkISizeRK15GrBackendFormati11GrProtected(%class.sk_sp* sret, %class.GrResourceProvider*, i64, %class.GrBackendFormat* dereferenceable(72), i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkAttachment* @_ZN16GrVkRenderTarget14msaaAttachmentEv(%class.GrVkRenderTarget* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1, i32 0
  %3 = load %class.GrVkAttachment*, %class.GrVkAttachment** %2, align 8
  %4 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %3, i64 0, i32 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = tail call %class.GrVkAttachment* @_ZN16GrVkRenderTarget21dynamicMSAAAttachmentEv(%class.GrVkRenderTarget* %0)
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %class.GrVkAttachment* [ %8, %7 ], [ %3, %1 ]
  ret %class.GrVkAttachment* %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN16GrVkRenderTarget25completeStencilAttachmentEP12GrAttachmentb(%class.GrVkRenderTarget* nocapture readnone, %class.GrAttachment* nocapture readnone, i1 zeroext) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK16GrVkRenderTarget19externalFramebufferEv(%class.sk_sp.475* noalias nocapture sret, %class.GrVkRenderTarget* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.475, %class.sk_sp.475* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %1, i64 0, i32 6, i32 0
  %5 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %4, align 8
  %6 = icmp eq %class.GrVkFramebuffer* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.GrVkFramebuffer* %5, %class.GrVkFramebuffer** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN16GrVkRenderTarget26compatibleRenderPassHandleEbbN14GrVkRenderPass19SelfDependencyFlagsENS0_15LoadFromResolveE(%class.GrVkRenderTarget*, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = zext i1 %1 to i32
  %7 = or i32 %6, 2
  %8 = select i1 %2, i32 %7, i32 %6
  %9 = shl i32 %3, 2
  %10 = and i32 %9, 4
  %11 = or i32 %10, %8
  %12 = and i32 %9, 8
  %13 = or i32 %11, %12
  %14 = icmp eq i32 %4, 1
  %15 = or i32 %13, 16
  %16 = select i1 %14, i32 %15, i32 %13
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 4, i64 %17, i32 0
  %19 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %18, align 8
  %20 = icmp eq %class.GrVkFramebuffer* %19, null
  br i1 %20, label %35, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  %24 = bitcast %class.GrVkFramebuffer* %19 to %class.GrManagedResource*
  %25 = atomicrmw add i32* %22, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %38

27:                                               ; preds = %21
  %28 = bitcast %class.GrVkFramebuffer* %19 to void (%class.GrManagedResource*)***
  %29 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %29, i64 4
  %31 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %30, align 8
  tail call void %31(%class.GrManagedResource* nonnull %24) #10
  %32 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %28, align 8
  %33 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %32, i64 1
  %34 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %33, align 8
  tail call void %34(%class.GrManagedResource* nonnull %24) #10
  br label %38

35:                                               ; preds = %5
  tail call void @_ZN16GrVkRenderTarget17createFramebufferEbbN14GrVkRenderPass19SelfDependencyFlagsENS0_15LoadFromResolveE(%class.GrVkRenderTarget* %0, i1 zeroext %1, i1 zeroext %2, i32 %3, i32 %4) #10
  %36 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %18, align 8
  %37 = icmp eq %class.GrVkFramebuffer* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %27, %21, %35
  %39 = phi %class.GrVkFramebuffer* [ %36, %35 ], [ %19, %21 ], [ %19, %27 ]
  %40 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %39, i64 0, i32 6, i32 0
  %41 = load i32, i32* %40, align 8
  br label %42

42:                                               ; preds = %35, %38
  %43 = phi i32 [ %41, %38 ], [ -1, %35 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkFramebuffer* @_ZN16GrVkRenderTarget14getFramebufferEbbN14GrVkRenderPass19SelfDependencyFlagsENS0_15LoadFromResolveE(%class.GrVkRenderTarget*, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = zext i1 %1 to i32
  %7 = or i32 %6, 2
  %8 = select i1 %2, i32 %7, i32 %6
  %9 = shl i32 %3, 2
  %10 = and i32 %9, 4
  %11 = or i32 %10, %8
  %12 = and i32 %9, 8
  %13 = or i32 %11, %12
  %14 = icmp eq i32 %4, 1
  %15 = or i32 %13, 16
  %16 = select i1 %14, i32 %15, i32 %13
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 4, i64 %17, i32 0
  %19 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %18, align 8
  %20 = icmp eq %class.GrVkFramebuffer* %19, null
  br i1 %20, label %35, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  %24 = bitcast %class.GrVkFramebuffer* %19 to %class.GrManagedResource*
  %25 = atomicrmw add i32* %22, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %37

27:                                               ; preds = %21
  %28 = bitcast %class.GrVkFramebuffer* %19 to void (%class.GrManagedResource*)***
  %29 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %29, i64 4
  %31 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %30, align 8
  tail call void %31(%class.GrManagedResource* nonnull %24) #10
  %32 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %28, align 8
  %33 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %32, i64 1
  %34 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %33, align 8
  tail call void %34(%class.GrManagedResource* nonnull %24) #10
  br label %37

35:                                               ; preds = %5
  tail call void @_ZN16GrVkRenderTarget17createFramebufferEbbN14GrVkRenderPass19SelfDependencyFlagsENS0_15LoadFromResolveE(%class.GrVkRenderTarget* %0, i1 zeroext %1, i1 zeroext %2, i32 %3, i32 %4)
  %36 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %18, align 8
  br label %37

37:                                               ; preds = %27, %21, %35
  %38 = phi %class.GrVkFramebuffer* [ %36, %35 ], [ %19, %21 ], [ %19, %27 ]
  ret %class.GrVkFramebuffer* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrVkRenderPass* @_ZN16GrVkRenderTarget19getSimpleRenderPassEbbN14GrVkRenderPass19SelfDependencyFlagsENS0_15LoadFromResolveE(%class.GrVkRenderTarget*, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 6, i32 0
  %7 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %6, align 8
  %8 = icmp eq %class.GrVkFramebuffer* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %7, i64 0, i32 7, i32 0
  br label %47

11:                                               ; preds = %5
  %12 = zext i1 %1 to i32
  %13 = or i32 %12, 2
  %14 = select i1 %2, i32 %13, i32 %12
  %15 = shl i32 %3, 2
  %16 = and i32 %15, 4
  %17 = or i32 %16, %14
  %18 = and i32 %15, 8
  %19 = or i32 %17, %18
  %20 = icmp eq i32 %4, 1
  %21 = or i32 %19, 16
  %22 = select i1 %20, i32 %21, i32 %19
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 4, i64 %23, i32 0
  %25 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %24, align 8
  %26 = icmp eq %class.GrVkFramebuffer* %25, null
  br i1 %26, label %41, label %27

27:                                               ; preds = %11
  %28 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %25, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic
  %30 = bitcast %class.GrVkFramebuffer* %25 to %class.GrManagedResource*
  %31 = atomicrmw add i32* %28, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %44

33:                                               ; preds = %27
  %34 = bitcast %class.GrVkFramebuffer* %25 to void (%class.GrManagedResource*)***
  %35 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %35, i64 4
  %37 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %36, align 8
  tail call void %37(%class.GrManagedResource* nonnull %30) #10
  %38 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %34, align 8
  %39 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %38, i64 1
  %40 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %39, align 8
  tail call void %40(%class.GrManagedResource* nonnull %30) #10
  br label %44

41:                                               ; preds = %11
  tail call void @_ZN16GrVkRenderTarget17createFramebufferEbbN14GrVkRenderPass19SelfDependencyFlagsENS0_15LoadFromResolveE(%class.GrVkRenderTarget* %0, i1 zeroext %1, i1 zeroext %2, i32 %3, i32 %4) #10
  %42 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %24, align 8
  %43 = icmp eq %class.GrVkFramebuffer* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %33, %27, %41
  %45 = phi %class.GrVkFramebuffer* [ %42, %41 ], [ %25, %27 ], [ %25, %33 ]
  %46 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %45, i64 0, i32 5, i32 0
  br label %47

47:                                               ; preds = %9, %44
  %48 = phi %class.GrVkRenderPass** [ %46, %44 ], [ %10, %9 ]
  %49 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %48, align 8
  br label %50

50:                                               ; preds = %47, %41
  %51 = phi %class.GrVkRenderPass* [ null, %41 ], [ %49, %47 ]
  ret %class.GrVkRenderPass* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden { %class.GrVkRenderPass*, i32 } @_ZN16GrVkRenderTarget22createSimpleRenderPassEbbN14GrVkRenderPass19SelfDependencyFlagsENS0_15LoadFromResolveE(%class.GrVkRenderTarget*, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.GrResourceHandle.474, align 4
  %7 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr i8, i8* %8, i64 -24
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 %11
  %14 = getelementptr inbounds i8, i8* %13, i64 128
  %15 = bitcast i8* %14 to %class.GrVkGpu**
  %16 = load %class.GrVkGpu*, %class.GrVkGpu** %15, align 8
  %17 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %16, i64 0, i32 9
  %18 = bitcast %class.GrResourceHandle.474* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #10
  %19 = getelementptr inbounds %class.GrResourceHandle.474, %class.GrResourceHandle.474* %6, i64 0, i32 0
  store i32 -1, i32* %19, align 4
  %20 = call %class.GrVkRenderPass* @_ZN20GrVkResourceProvider24findCompatibleRenderPassEP16GrVkRenderTargetP16GrResourceHandleINS_22CompatibleRPHandleKindEEbbN14GrVkRenderPass19SelfDependencyFlagsENS6_15LoadFromResolveE(%class.GrVkResourceProvider* %17, %class.GrVkRenderTarget* %0, %class.GrResourceHandle.474* nonnull %6, i1 zeroext %1, i1 zeroext %2, i32 %3, i32 %4) #10
  %21 = load i32, i32* %19, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #10
  %22 = insertvalue { %class.GrVkRenderPass*, i32 } undef, %class.GrVkRenderPass* %20, 0
  %23 = insertvalue { %class.GrVkRenderPass*, i32 } %22, i32 %21, 1
  ret { %class.GrVkRenderPass*, i32 } %23
}

declare %class.GrVkRenderPass* @_ZN20GrVkResourceProvider24findCompatibleRenderPassEP16GrVkRenderTargetP16GrResourceHandleINS_22CompatibleRPHandleKindEEbbN14GrVkRenderPass19SelfDependencyFlagsENS6_15LoadFromResolveE(%class.GrVkResourceProvider*, %class.GrVkRenderTarget*, %class.GrResourceHandle.474*, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTarget17createFramebufferEbbN14GrVkRenderPass19SelfDependencyFlagsENS0_15LoadFromResolveE(%class.GrVkRenderTarget*, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.GrResourceHandle.474, align 4
  %7 = alloca %class.sk_sp.472, align 8
  %8 = alloca %class.sk_sp.473, align 8
  %9 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr i8, i8* %10, i64 -24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = getelementptr inbounds i8, i8* %15, i64 128
  %17 = bitcast i8* %16 to %class.GrVkGpu**
  %18 = load %class.GrVkGpu*, %class.GrVkGpu** %17, align 8
  %19 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %18, i64 0, i32 9
  %20 = bitcast %class.GrResourceHandle.474* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #10
  %21 = getelementptr inbounds %class.GrResourceHandle.474, %class.GrResourceHandle.474* %6, i64 0, i32 0
  store i32 -1, i32* %21, align 4
  %22 = call %class.GrVkRenderPass* @_ZN20GrVkResourceProvider24findCompatibleRenderPassEP16GrVkRenderTargetP16GrResourceHandleINS_22CompatibleRPHandleKindEEbbN14GrVkRenderPass19SelfDependencyFlagsENS6_15LoadFromResolveE(%class.GrVkResourceProvider* %19, %class.GrVkRenderTarget* %0, %class.GrResourceHandle.474* nonnull %6, i1 zeroext %1, i1 zeroext %2, i32 %3, i32 %4) #10
  %23 = load i32, i32* %21, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #10
  %24 = icmp eq %class.GrVkRenderPass* %22, null
  br i1 %24, label %129, label %25

25:                                               ; preds = %5
  %26 = zext i1 %1 to i32
  %27 = or i32 %26, 2
  %28 = select i1 %2, i32 %27, i32 %26
  %29 = shl i32 %3, 2
  %30 = and i32 %29, 4
  %31 = or i32 %30, %28
  %32 = and i32 %29, 8
  %33 = or i32 %31, %32
  %34 = icmp eq i32 %4, 1
  %35 = or i32 %33, 16
  %36 = select i1 %34, i32 %35, i32 %33
  br i1 %1, label %37, label %47

37:                                               ; preds = %25
  %38 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 2, i32 0
  %39 = load %class.GrVkAttachment*, %class.GrVkAttachment** %38, align 8
  %40 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1, i32 0
  %41 = load %class.GrVkAttachment*, %class.GrVkAttachment** %40, align 8
  %42 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %41, i64 0, i32 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %50

45:                                               ; preds = %37
  %46 = call %class.GrVkAttachment* @_ZN16GrVkRenderTarget21dynamicMSAAAttachmentEv(%class.GrVkRenderTarget* %0) #10
  br label %50

47:                                               ; preds = %25
  %48 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1, i32 0
  %49 = load %class.GrVkAttachment*, %class.GrVkAttachment** %48, align 8
  br label %50

50:                                               ; preds = %45, %37, %47
  %51 = phi %class.GrVkAttachment* [ null, %47 ], [ %39, %37 ], [ %39, %45 ]
  %52 = phi %class.GrVkAttachment* [ %49, %47 ], [ %41, %37 ], [ %46, %45 ]
  br i1 %2, label %53, label %62

53:                                               ; preds = %50
  %54 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = icmp sgt i32 %55, 1
  %57 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 0, i32 2, i32 0
  %58 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 0, i32 1, i32 0
  %59 = select i1 %56, %class.GrAttachment** %57, %class.GrAttachment** %58
  %60 = bitcast %class.GrAttachment** %59 to %class.GrVkAttachment**
  %61 = load %class.GrVkAttachment*, %class.GrVkAttachment** %60, align 8
  br label %62

62:                                               ; preds = %50, %53
  %63 = phi %class.GrVkAttachment* [ %61, %53 ], [ null, %50 ]
  %64 = bitcast %class.sk_sp.472* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #10
  %65 = load i8*, i8** %9, align 8
  %66 = getelementptr i8, i8* %65, i64 -24
  %67 = bitcast i8* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds i8, i8* %14, i64 %68
  %70 = getelementptr inbounds i8, i8* %69, i64 152
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %class.sk_sp.473, %class.sk_sp.473* %8, i64 0, i32 0
  store %class.GrVkRenderPass* %22, %class.GrVkRenderPass** %73, align 8
  call void @_ZN15GrVkFramebuffer4MakeEP7GrVkGpu7SkISize5sk_spIK14GrVkRenderPassEP14GrVkAttachmentS8_S8_16GrResourceHandleIN20GrVkResourceProvider22CompatibleRPHandleKindEE(%class.sk_sp.472* nonnull sret %7, %class.GrVkGpu* %18, i64 %72, %class.sk_sp.473* nonnull %8, %class.GrVkAttachment* %52, %class.GrVkAttachment* %51, %class.GrVkAttachment* %63, i32 %23) #10
  %74 = sext i32 %36 to i64
  %75 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 4, i64 %74
  %76 = getelementptr inbounds %class.sk_sp.472, %class.sk_sp.472* %7, i64 0, i32 0
  %77 = bitcast %class.sk_sp.472* %7 to i64*
  %78 = load i64, i64* %77, align 8
  store %class.GrVkFramebuffer* null, %class.GrVkFramebuffer** %76, align 8
  %79 = getelementptr inbounds %class.sk_sp.472, %class.sk_sp.472* %75, i64 0, i32 0
  %80 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %79, align 8
  %81 = bitcast %class.sk_sp.472* %75 to i64*
  store i64 %78, i64* %81, align 8
  %82 = icmp eq %class.GrVkFramebuffer* %80, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %62
  %84 = bitcast %class.GrVkFramebuffer* %80 to %class.GrManagedResource*
  %85 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %80, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 -1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %96

88:                                               ; preds = %83
  %89 = bitcast %class.GrVkFramebuffer* %80 to void (%class.GrManagedResource*)***
  %90 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %90, i64 4
  %92 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %91, align 8
  call void %92(%class.GrManagedResource* nonnull %84) #10
  %93 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %89, align 8
  %94 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %93, i64 1
  %95 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %94, align 8
  call void %95(%class.GrManagedResource* nonnull %84) #10
  br label %96

96:                                               ; preds = %62, %83, %88
  %97 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %76, align 8
  %98 = icmp eq %class.GrVkFramebuffer* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = bitcast %class.GrVkFramebuffer* %97 to %class.GrManagedResource*
  %101 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %97, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %112

104:                                              ; preds = %99
  %105 = bitcast %class.GrVkFramebuffer* %97 to void (%class.GrManagedResource*)***
  %106 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %105, align 8
  %107 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %106, i64 4
  %108 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %107, align 8
  call void %108(%class.GrManagedResource* nonnull %100) #10
  %109 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %105, align 8
  %110 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %109, i64 1
  %111 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %110, align 8
  call void %111(%class.GrManagedResource* nonnull %100) #10
  br label %112

112:                                              ; preds = %96, %99, %104
  %113 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %73, align 8
  %114 = icmp eq %class.GrVkRenderPass* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %112
  %116 = bitcast %class.GrVkRenderPass* %113 to %class.GrManagedResource*
  %117 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %113, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 -1 acq_rel
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %128

120:                                              ; preds = %115
  %121 = bitcast %class.GrVkRenderPass* %113 to void (%class.GrManagedResource*)***
  %122 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %121, align 8
  %123 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %122, i64 4
  %124 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %123, align 8
  call void %124(%class.GrManagedResource* nonnull %116) #10
  %125 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %121, align 8
  %126 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %125, i64 1
  %127 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %126, align 8
  call void %127(%class.GrManagedResource* nonnull %116) #10
  br label %128

128:                                              ; preds = %112, %115, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #10
  br label %129

129:                                              ; preds = %5, %128
  ret void
}

declare void @_ZN15GrVkFramebuffer4MakeEP7GrVkGpu7SkISize5sk_spIK14GrVkRenderPassEP14GrVkAttachmentS8_S8_16GrResourceHandleIN20GrVkResourceProvider22CompatibleRPHandleKindEE(%class.sk_sp.472* sret, %class.GrVkGpu*, i64, %class.sk_sp.473*, %class.GrVkAttachment*, %class.GrVkAttachment*, %class.GrVkAttachment*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTarget24getAttachmentsDescriptorEPN14GrVkRenderPass21AttachmentsDescriptorEPNS0_15AttachmentFlagsEbb(%class.GrVkRenderTarget* nocapture, %"struct.GrVkRenderPass::AttachmentsDescriptor"* nocapture, i32* nocapture, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1, i32 0
  %7 = load %class.GrVkAttachment*, %class.GrVkAttachment** %6, align 8
  br i1 %3, label %8, label %14

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %7, i64 0, i32 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = tail call %class.GrVkAttachment* @_ZN16GrVkRenderTarget21dynamicMSAAAttachmentEv(%class.GrVkRenderTarget* %0) #10
  br label %14

14:                                               ; preds = %5, %12, %8
  %15 = phi %class.GrVkAttachment* [ %13, %12 ], [ %7, %8 ], [ %7, %5 ]
  %16 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %15, i64 0, i32 1, i32 1, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %1, i64 0, i32 0, i32 0
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %15, i64 0, i32 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %1, i64 0, i32 0, i32 1
  store i32 %20, i32* %21, align 4
  store i32 1, i32* %2, align 4
  br i1 %3, label %22, label %28

22:                                               ; preds = %14
  %23 = load i32, i32* %18, align 4
  %24 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %1, i64 0, i32 1, i32 0
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %1, i64 0, i32 1, i32 1
  store i32 1, i32* %25, align 4
  %26 = load i32, i32* %2, align 4
  %27 = or i32 %26, 4
  store i32 %27, i32* %2, align 4
  br label %28

28:                                               ; preds = %22, %14
  %29 = phi i32 [ 2, %22 ], [ 1, %14 ]
  br i1 %4, label %30, label %48

30:                                               ; preds = %28
  %31 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, 1
  %34 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 0, i32 2, i32 0
  %35 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 0, i32 1, i32 0
  %36 = select i1 %33, %class.GrAttachment** %34, %class.GrAttachment** %35
  %37 = load %class.GrAttachment*, %class.GrAttachment** %36, align 8
  %38 = getelementptr inbounds %class.GrAttachment, %class.GrAttachment* %37, i64 1, i32 0, i32 0, i32 6
  %39 = bitcast %class.GrUniqueKey* %38 to i32*
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %1, i64 0, i32 2, i32 0
  store i32 %40, i32* %41, align 4
  %42 = getelementptr inbounds %class.GrAttachment, %class.GrAttachment* %37, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %1, i64 0, i32 2, i32 1
  store i32 %43, i32* %44, align 4
  %45 = load i32, i32* %2, align 4
  %46 = or i32 %45, 2
  store i32 %46, i32* %2, align 4
  %47 = add nuw nsw i32 %29, 1
  br label %48

48:                                               ; preds = %30, %28
  %49 = phi i32 [ %47, %30 ], [ %29, %28 ]
  %50 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %1, i64 0, i32 3
  store i32 %49, i32* %50, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTarget32ReconstructAttachmentsDescriptorERK8GrVkCapsRK13GrProgramInfoPN14GrVkRenderPass21AttachmentsDescriptorEPNS6_15AttachmentFlagsE(%class.GrVkCaps* nocapture readonly dereferenceable(1344), %class.GrProgramInfo* dereferenceable(128), %"struct.GrVkRenderPass::AttachmentsDescriptor"* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #10
  store i32 -1431655766, i32* %5, align 4
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %1, i64 0, i32 2
  %8 = call zeroext i1 @_ZNK15GrBackendFormat10asVkFormatEP8VkFormat(%class.GrBackendFormat* %7, i32* nonnull %5) #10
  %9 = load i32, i32* %5, align 4
  %10 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %2, i64 0, i32 0, i32 0
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %2, i64 0, i32 0, i32 1
  store i32 %12, i32* %13, align 4
  store i32 1, i32* %3, align 4
  %14 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %1, i64 0, i32 4
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %0, i64 0, i32 28
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = load i32, i32* %10, align 4
  %23 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %2, i64 0, i32 1, i32 0
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %2, i64 0, i32 1, i32 1
  store i32 1, i32* %24, align 4
  %25 = load i32, i32* %3, align 4
  %26 = or i32 %25, 4
  store i32 %26, i32* %3, align 4
  br label %27

27:                                               ; preds = %17, %4, %21
  %28 = phi i32 [ 2, %21 ], [ 1, %17 ], [ 1, %4 ]
  %29 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %1, i64 0, i32 1
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %0, i64 0, i32 4
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %2, i64 0, i32 2, i32 0
  store i32 %34, i32* %35, align 4
  %36 = load i32, i32* %11, align 8
  %37 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %2, i64 0, i32 2, i32 1
  store i32 %36, i32* %37, align 4
  %38 = load i32, i32* %3, align 4
  %39 = or i32 %38, 2
  store i32 %39, i32* %3, align 4
  %40 = add nuw nsw i32 %28, 1
  br label %41

41:                                               ; preds = %27, %32
  %42 = phi i32 [ %40, %32 ], [ %28, %27 ]
  %43 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %2, i64 0, i32 3
  store i32 %42, i32* %43, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #10
  ret void
}

declare zeroext i1 @_ZNK15GrBackendFormat10asVkFormatEP8VkFormat(%class.GrBackendFormat*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTargetD2Ev(%class.GrVkRenderTarget*, i8**) unnamed_addr #0 align 2 {
  %3 = bitcast i8** %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %class.GrVkRenderTarget* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds i8*, i8** %1, i64 3
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = inttoptr i64 %4 to i8*
  %10 = getelementptr i8, i8* %9, i64 -24
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %12
  %15 = bitcast i8* %14 to i64*
  store i64 %8, i64* %15, align 8
  %16 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 6, i32 0
  %17 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %16, align 8
  %18 = icmp eq %class.GrVkFramebuffer* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %2
  %20 = bitcast %class.GrVkFramebuffer* %17 to %class.GrManagedResource*
  %21 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %32

24:                                               ; preds = %19
  %25 = bitcast %class.GrVkFramebuffer* %17 to void (%class.GrManagedResource*)***
  %26 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %26, i64 4
  %28 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %27, align 8
  tail call void %28(%class.GrManagedResource* nonnull %20) #10
  %29 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %25, align 8
  %30 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %29, i64 1
  %31 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %30, align 8
  tail call void %31(%class.GrManagedResource* nonnull %20) #10
  br label %32

32:                                               ; preds = %2, %19, %24
  %33 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 4, i64 0
  %34 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 4, i64 32
  br label %35

35:                                               ; preds = %54, %32
  %36 = phi %class.sk_sp.472* [ %34, %32 ], [ %37, %54 ]
  %37 = getelementptr inbounds %class.sk_sp.472, %class.sk_sp.472* %36, i64 -1
  %38 = getelementptr inbounds %class.sk_sp.472, %class.sk_sp.472* %37, i64 0, i32 0
  %39 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %38, align 8
  %40 = icmp eq %class.GrVkFramebuffer* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = bitcast %class.GrVkFramebuffer* %39 to %class.GrManagedResource*
  %43 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = bitcast %class.GrVkFramebuffer* %39 to void (%class.GrManagedResource*)***
  %48 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %48, i64 4
  %50 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %49, align 8
  tail call void %50(%class.GrManagedResource* nonnull %42) #10
  %51 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %47, align 8
  %52 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %51, i64 1
  %53 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %52, align 8
  tail call void %53(%class.GrManagedResource* nonnull %42) #10
  br label %54

54:                                               ; preds = %35, %41, %46
  %55 = icmp eq %class.sk_sp.472* %37, %33
  br i1 %55, label %56, label %35

56:                                               ; preds = %54
  %57 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 3, i32 0
  %58 = load %class.GrVkAttachment*, %class.GrVkAttachment** %57, align 8
  %59 = icmp eq %class.GrVkAttachment* %58, null
  br i1 %59, label %68, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %58, i64 0, i32 0, i32 0, i32 0, i32 1
  %62 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %61, i64 -1
  %67 = bitcast %class.GrIORef* %66 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %67, i32 0) #10
  br label %68

68:                                               ; preds = %56, %60, %65
  %69 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 2, i32 0
  %70 = load %class.GrVkAttachment*, %class.GrVkAttachment** %69, align 8
  %71 = icmp eq %class.GrVkAttachment* %70, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %70, i64 0, i32 0, i32 0, i32 0, i32 1
  %74 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %73, i64 -1
  %79 = bitcast %class.GrIORef* %78 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %79, i32 0) #10
  br label %80

80:                                               ; preds = %68, %72, %77
  %81 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1, i32 0
  %82 = load %class.GrVkAttachment*, %class.GrVkAttachment** %81, align 8
  %83 = icmp eq %class.GrVkAttachment* %82, null
  br i1 %83, label %92, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %82, i64 0, i32 0, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %85, i64 -1
  %91 = bitcast %class.GrIORef* %90 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %91, i32 0) #10
  br label %92

92:                                               ; preds = %80, %84, %89
  %93 = bitcast %class.GrVkRenderTarget* %0 to %class.GrRenderTarget*
  %94 = getelementptr inbounds i8*, i8** %1, i64 1
  tail call void @_ZN14GrRenderTargetD2Ev(%class.GrRenderTarget* %93, i8** %94) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN14GrRenderTargetD2Ev(%class.GrRenderTarget*, i8**) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTargetD1Ev(%class.GrVkRenderTarget*) unnamed_addr #0 align 2 {
  tail call void @_ZN16GrVkRenderTargetD2Ev(%class.GrVkRenderTarget* %0, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTT16GrVkRenderTarget, i64 0, i64 0)) #10
  %2 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 7
  %3 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV9GrSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 7, i32 4, i32 0
  %5 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %4, align 8
  %6 = icmp eq %class.GrRefCntedCallback* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %5, i64 0, i32 0
  %9 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 -1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %20

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.SkNVRefCnt.193, %class.SkNVRefCnt.193* %8, i64 2
  %14 = bitcast %class.SkNVRefCnt.193* %13 to void (i8*)**
  %15 = load void (i8*)*, void (i8*)** %14, align 8
  %16 = getelementptr inbounds %class.SkNVRefCnt.193, %class.SkNVRefCnt.193* %8, i64 4
  %17 = bitcast %class.SkNVRefCnt.193* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void %15(i8* %18) #10
  %19 = bitcast %class.GrRefCntedCallback* %5 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %1, %7, %12
  %21 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 0, i32 0
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %21) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n40_N16GrVkRenderTargetD1Ev(%class.GrVkRenderTarget*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %3 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -40
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to %class.GrVkRenderTarget*
  tail call void @_ZN16GrVkRenderTargetD2Ev(%class.GrVkRenderTarget* %9, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTT16GrVkRenderTarget, i64 0, i64 0)) #10
  %10 = getelementptr inbounds i8, i8* %8, i64 328
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV9GrSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 496
  %13 = bitcast i8* %12 to %class.GrRefCntedCallback**
  %14 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %13, align 8
  %15 = icmp eq %class.GrRefCntedCallback* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %14, i64 0, i32 0
  %18 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %29

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.SkNVRefCnt.193, %class.SkNVRefCnt.193* %17, i64 2
  %23 = bitcast %class.SkNVRefCnt.193* %22 to void (i8*)**
  %24 = load void (i8*)*, void (i8*)** %23, align 8
  %25 = getelementptr inbounds %class.SkNVRefCnt.193, %class.SkNVRefCnt.193* %17, i64 4
  %26 = bitcast %class.SkNVRefCnt.193* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void %24(i8* %27) #10
  %28 = bitcast %class.GrRefCntedCallback* %14 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %1, %16, %21
  %30 = bitcast i8* %10 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %30) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTargetD0Ev(%class.GrVkRenderTarget*) unnamed_addr #0 align 2 {
  tail call void @_ZN16GrVkRenderTargetD2Ev(%class.GrVkRenderTarget* %0, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTT16GrVkRenderTarget, i64 0, i64 0)) #10
  %2 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 7
  %3 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV9GrSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 7, i32 4, i32 0
  %5 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %4, align 8
  %6 = icmp eq %class.GrRefCntedCallback* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %5, i64 0, i32 0
  %9 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 -1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %20

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.SkNVRefCnt.193, %class.SkNVRefCnt.193* %8, i64 2
  %14 = bitcast %class.SkNVRefCnt.193* %13 to void (i8*)**
  %15 = load void (i8*)*, void (i8*)** %14, align 8
  %16 = getelementptr inbounds %class.SkNVRefCnt.193, %class.SkNVRefCnt.193* %8, i64 4
  %17 = bitcast %class.SkNVRefCnt.193* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void %15(i8* %18) #10
  %19 = bitcast %class.GrRefCntedCallback* %5 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %1, %7, %12
  %21 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 0, i32 0
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %21) #10
  %22 = bitcast %class.GrVkRenderTarget* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n40_N16GrVkRenderTargetD0Ev(%class.GrVkRenderTarget*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %3 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -40
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to %class.GrVkRenderTarget*
  tail call void @_ZN16GrVkRenderTargetD2Ev(%class.GrVkRenderTarget* %9, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTT16GrVkRenderTarget, i64 0, i64 0)) #10
  %10 = getelementptr inbounds i8, i8* %8, i64 328
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV9GrSurface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 496
  %13 = bitcast i8* %12 to %class.GrRefCntedCallback**
  %14 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %13, align 8
  %15 = icmp eq %class.GrRefCntedCallback* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %14, i64 0, i32 0
  %18 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %29

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.SkNVRefCnt.193, %class.SkNVRefCnt.193* %17, i64 2
  %23 = bitcast %class.SkNVRefCnt.193* %22 to void (i8*)**
  %24 = load void (i8*)*, void (i8*)** %23, align 8
  %25 = getelementptr inbounds %class.SkNVRefCnt.193, %class.SkNVRefCnt.193* %17, i64 4
  %26 = bitcast %class.SkNVRefCnt.193* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void %24(i8* %27) #10
  %28 = bitcast %class.GrRefCntedCallback* %14 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %1, %16, %21
  %30 = bitcast i8* %10 to %class.GrGpuResource*
  tail call void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource* %30) #10
  tail call void @_ZdlPv(i8* %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTarget22releaseInternalObjectsEv(%class.GrVkRenderTarget* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1, i32 0
  %3 = load %class.GrVkAttachment*, %class.GrVkAttachment** %2, align 8
  store %class.GrVkAttachment* null, %class.GrVkAttachment** %2, align 8
  %4 = icmp eq %class.GrVkAttachment* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %6, i64 -1
  %12 = bitcast %class.GrIORef* %11 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %12, i32 0) #10
  br label %13

13:                                               ; preds = %1, %5, %10
  %14 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 2, i32 0
  %15 = load %class.GrVkAttachment*, %class.GrVkAttachment** %14, align 8
  store %class.GrVkAttachment* null, %class.GrVkAttachment** %14, align 8
  %16 = icmp eq %class.GrVkAttachment* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %15, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %18, i64 -1
  %24 = bitcast %class.GrIORef* %23 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %24, i32 0) #10
  br label %25

25:                                               ; preds = %13, %17, %22
  %26 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 3, i32 0
  %27 = load %class.GrVkAttachment*, %class.GrVkAttachment** %26, align 8
  store %class.GrVkAttachment* null, %class.GrVkAttachment** %26, align 8
  %28 = icmp eq %class.GrVkAttachment* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %27, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %30, i64 -1
  %36 = bitcast %class.GrIORef* %35 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %36, i32 0) #10
  br label %37

37:                                               ; preds = %25, %29, %34
  br label %42

38:                                               ; preds = %60
  %39 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 5
  %40 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %39, align 8
  %41 = icmp eq %class.GrVkDescriptorSet* %40, null
  br i1 %41, label %86, label %63

42:                                               ; preds = %37, %60
  %43 = phi i64 [ %61, %60 ], [ 0, %37 ]
  %44 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 4, i64 %43, i32 0
  %45 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %44, align 8
  %46 = icmp eq %class.GrVkFramebuffer* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %42
  store %class.GrVkFramebuffer* null, %class.GrVkFramebuffer** %44, align 8
  %48 = bitcast %class.GrVkFramebuffer* %45 to %class.GrManagedResource*
  %49 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %60

52:                                               ; preds = %47
  %53 = bitcast %class.GrVkFramebuffer* %45 to void (%class.GrManagedResource*)***
  %54 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %54, i64 4
  %56 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %55, align 8
  tail call void %56(%class.GrManagedResource* nonnull %48) #10
  %57 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %53, align 8
  %58 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %57, i64 1
  %59 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %58, align 8
  tail call void %59(%class.GrManagedResource* nonnull %48) #10
  br label %60

60:                                               ; preds = %42, %52, %47
  %61 = add nuw nsw i64 %43, 1
  %62 = icmp eq i64 %61, 32
  br i1 %62, label %38, label %42

63:                                               ; preds = %38
  %64 = bitcast %class.GrVkDescriptorSet* %40 to %class.GrManagedResource*
  %65 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 acquire, align 4
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %63
  %69 = bitcast %class.GrVkDescriptorSet* %40 to %class.GrRecycledResource*
  %70 = bitcast %class.GrVkDescriptorSet* %40 to void (%class.GrRecycledResource*)***
  %71 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %71, i64 5
  %73 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %72, align 8
  tail call void %73(%class.GrRecycledResource* nonnull %69) #10
  br label %85

74:                                               ; preds = %63
  %75 = atomicrmw add i32* %65, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %85

77:                                               ; preds = %74
  %78 = bitcast %class.GrVkDescriptorSet* %40 to void (%class.GrManagedResource*)***
  %79 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %79, i64 4
  %81 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %80, align 8
  tail call void %81(%class.GrManagedResource* nonnull %64) #10
  %82 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %78, align 8
  %83 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %82, i64 1
  %84 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %83, align 8
  tail call void %84(%class.GrManagedResource* nonnull %64) #10
  br label %85

85:                                               ; preds = %68, %74, %77
  store %class.GrVkDescriptorSet* null, %class.GrVkDescriptorSet** %39, align 8
  br label %86

86:                                               ; preds = %38, %85
  %87 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 6, i32 0
  %88 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %87, align 8
  store %class.GrVkFramebuffer* null, %class.GrVkFramebuffer** %87, align 8
  %89 = icmp eq %class.GrVkFramebuffer* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %86
  %91 = bitcast %class.GrVkFramebuffer* %88 to %class.GrManagedResource*
  %92 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %88, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %103

95:                                               ; preds = %90
  %96 = bitcast %class.GrVkFramebuffer* %88 to void (%class.GrManagedResource*)***
  %97 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %96, align 8
  %98 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %97, i64 4
  %99 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %98, align 8
  tail call void %99(%class.GrManagedResource* nonnull %91) #10
  %100 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %96, align 8
  %101 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %100, i64 1
  %102 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %101, align 8
  tail call void %102(%class.GrManagedResource* nonnull %91) #10
  br label %103

103:                                              ; preds = %86, %90, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTarget9onReleaseEv(%class.GrVkRenderTarget*) unnamed_addr #0 align 2 {
  tail call void @_ZN16GrVkRenderTarget22releaseInternalObjectsEv(%class.GrVkRenderTarget* %0)
  %2 = bitcast %class.GrVkRenderTarget* %0 to %class.GrRenderTarget*
  tail call void @_ZN14GrRenderTarget9onReleaseEv(%class.GrRenderTarget* %2) #10
  ret void
}

declare void @_ZN14GrRenderTarget9onReleaseEv(%class.GrRenderTarget*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n48_N16GrVkRenderTarget9onReleaseEv(%class.GrVkRenderTarget*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %3 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -48
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to %class.GrVkRenderTarget*
  tail call void @_ZN16GrVkRenderTarget22releaseInternalObjectsEv(%class.GrVkRenderTarget* %9) #10
  %10 = bitcast i8* %8 to %class.GrRenderTarget*
  tail call void @_ZN14GrRenderTarget9onReleaseEv(%class.GrRenderTarget* %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrVkRenderTarget9onAbandonEv(%class.GrVkRenderTarget*) unnamed_addr #0 align 2 {
  tail call void @_ZN16GrVkRenderTarget22releaseInternalObjectsEv(%class.GrVkRenderTarget* %0)
  %2 = bitcast %class.GrVkRenderTarget* %0 to %class.GrRenderTarget*
  tail call void @_ZN14GrRenderTarget9onAbandonEv(%class.GrRenderTarget* %2) #10
  ret void
}

declare void @_ZN14GrRenderTarget9onAbandonEv(%class.GrRenderTarget*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n56_N16GrVkRenderTarget9onAbandonEv(%class.GrVkRenderTarget*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %3 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -56
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to %class.GrVkRenderTarget*
  tail call void @_ZN16GrVkRenderTarget22releaseInternalObjectsEv(%class.GrVkRenderTarget* %9) #10
  %10 = bitcast i8* %8 to %class.GrRenderTarget*
  tail call void @_ZN14GrRenderTarget9onAbandonEv(%class.GrRenderTarget* %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16GrVkRenderTarget22getBackendRenderTargetEv(%class.GrBackendRenderTarget* noalias sret, %class.GrVkRenderTarget* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.195, align 8
  %4 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %1, i64 0, i32 2, i32 0
  %5 = load %class.GrVkAttachment*, %class.GrVkAttachment** %4, align 8
  %6 = icmp eq %class.GrVkAttachment* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %1, i64 0, i32 1, i32 0
  %9 = load %class.GrVkAttachment*, %class.GrVkAttachment** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %class.GrVkAttachment* [ %9, %7 ], [ %5, %2 ]
  %12 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %11, i64 0, i32 0, i32 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %11, i64 0, i32 0, i32 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %11, i64 0, i32 1, i32 1
  %17 = getelementptr inbounds %class.sk_sp.195, %class.sk_sp.195* %3, i64 0, i32 0
  %18 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %11, i64 0, i32 1, i32 3, i32 0
  %19 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %18, align 8, !noalias !15
  %20 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic, !noalias !15
  br label %24

24:                                               ; preds = %10, %21
  store %class.GrBackendSurfaceMutableStateImpl* %19, %class.GrBackendSurfaceMutableStateImpl** %17, align 8, !alias.scope !15
  call void @_ZN21GrBackendRenderTargetC1EiiRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE(%class.GrBackendRenderTarget* %0, i32 %13, i32 %15, %struct.GrVkImageInfo* dereferenceable(144) %16, %class.sk_sp.195* nonnull %3) #10
  %25 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %17, align 8
  %26 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %25, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %25, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = bitcast %class.GrBackendSurfaceMutableStateImpl* %25 to %class.SkRefCntBase*
  %33 = bitcast %class.GrBackendSurfaceMutableStateImpl* %25 to void (%class.SkRefCntBase*)***
  %34 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %33, align 8
  %35 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, i64 2
  %36 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, align 8
  call void %36(%class.SkRefCntBase* nonnull %32) #10
  br label %37

37:                                               ; preds = %24, %27, %31
  ret void
}

declare void @_ZN21GrBackendRenderTargetC1EiiRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE(%class.GrBackendRenderTarget*, i32, i32, %struct.GrVkImageInfo* dereferenceable(144), %class.sk_sp.195*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrManagedResource* @_ZNK16GrVkRenderTarget20stencilImageResourceEv(%class.GrVkRenderTarget* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 1
  %5 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 0, i32 2, i32 0
  %6 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 0, i32 1, i32 0
  %7 = select i1 %4, %class.GrAttachment** %5, %class.GrAttachment** %6
  %8 = load %class.GrAttachment*, %class.GrAttachment** %7, align 8
  %9 = icmp eq %class.GrAttachment* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.GrAttachment, %class.GrAttachment* %8, i64 1, i32 1
  %12 = bitcast i8* %11 to %class.GrManagedResource**
  %13 = load %class.GrManagedResource*, %class.GrManagedResource** %12, align 8
  br label %14

14:                                               ; preds = %1, %10
  %15 = phi %class.GrManagedResource* [ %13, %10 ], [ null, %1 ]
  ret %class.GrManagedResource* %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrVkImageView* @_ZNK16GrVkRenderTarget21stencilAttachmentViewEv(%class.GrVkRenderTarget* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 1
  %5 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 0, i32 2, i32 0
  %6 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 0, i32 1, i32 0
  %7 = select i1 %4, %class.GrAttachment** %5, %class.GrAttachment** %6
  %8 = load %class.GrAttachment*, %class.GrAttachment** %7, align 8
  %9 = icmp eq %class.GrAttachment* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.GrAttachment, %class.GrAttachment* %8, i64 1, i32 4
  %12 = bitcast i8* %11 to %class.GrVkImageView**
  %13 = load %class.GrVkImageView*, %class.GrVkImageView** %12, align 8
  br label %14

14:                                               ; preds = %1, %10
  %15 = phi %class.GrVkImageView* [ %13, %10 ], [ null, %1 ]
  ret %class.GrVkImageView* %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK14GrRenderTarget18alwaysClearStencilEv(%class.GrRenderTarget*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRenderTarget* @_ZN14GrRenderTarget14asRenderTargetEv(%class.GrRenderTarget*) unnamed_addr #0 comdat align 2 {
  ret %class.GrRenderTarget* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRenderTarget* @_ZNK14GrRenderTarget14asRenderTargetEv(%class.GrRenderTarget*) unnamed_addr #0 comdat align 2 {
  ret %class.GrRenderTarget* %0
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN14GrRenderTargetD1Ev(%class.GrRenderTarget*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN14GrRenderTargetD0Ev(%class.GrRenderTarget*) unnamed_addr #7

declare void @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump(%class.GrGpuResource*, %class.SkTraceMemoryDump*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK9GrSurface15getResourceTypeEv(%class.GrSurface*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n40_N14GrRenderTargetD1Ev(%class.GrRenderTarget*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n40_N14GrRenderTargetD0Ev(%class.GrRenderTarget*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n48_N14GrRenderTarget9onReleaseEv(%class.GrRenderTarget*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n56_N14GrRenderTarget9onAbandonEv(%class.GrRenderTarget*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString(%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13GrGpuResource17computeScratchKeyEP12GrScratchKey(%class.GrGpuResource*, %class.GrScratchKey*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrTexture* @_ZN9GrSurface9asTextureEv(%class.GrSurface*) unnamed_addr #0 comdat align 2 {
  ret %class.GrTexture* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrTexture* @_ZNK9GrSurface9asTextureEv(%class.GrSurface*) unnamed_addr #0 comdat align 2 {
  ret %class.GrTexture* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRenderTarget* @_ZTv0_n112_N14GrRenderTarget14asRenderTargetEv(%class.GrRenderTarget*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrRenderTarget* %0 to i8*
  %3 = bitcast %class.GrRenderTarget* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -112
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to %class.GrRenderTarget*
  ret %class.GrRenderTarget* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRenderTarget* @_ZTv0_n120_NK14GrRenderTarget14asRenderTargetEv(%class.GrRenderTarget*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrRenderTarget* %0 to i8*
  %3 = bitcast %class.GrRenderTarget* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -120
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to %class.GrRenderTarget*
  ret %class.GrRenderTarget* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSurface12onSetReleaseE5sk_spI18GrRefCntedCallbackE(%class.GrSurface*, %class.sk_sp.192*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16GrVkRenderTarget27canAttemptStencilAttachmentEb(%class.GrVkRenderTarget*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 6, i32 0
  %4 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %3, align 8
  %5 = icmp eq %class.GrVkFramebuffer* %4, null
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK16GrVkRenderTarget15onGpuMemorySizeEv(%class.GrVkRenderTarget*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16GrVkRenderTarget12onSetReleaseE5sk_spI18GrRefCntedCallbackE(%class.GrVkRenderTarget*, %class.sk_sp.192*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.sk_sp.192, align 8
  %4 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 2, i32 0
  %5 = load %class.GrVkAttachment*, %class.GrVkAttachment** %4, align 8
  %6 = icmp eq %class.GrVkAttachment* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %0, i64 0, i32 1, i32 0
  %9 = load %class.GrVkAttachment*, %class.GrVkAttachment** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %class.GrVkAttachment* [ %9, %7 ], [ %5, %2 ]
  %12 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %11, i64 0, i32 1
  %13 = getelementptr inbounds %class.sk_sp.192, %class.sk_sp.192* %1, i64 0, i32 0
  %14 = bitcast %class.sk_sp.192* %1 to i64*
  %15 = load i64, i64* %14, align 8
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %13, align 8
  %16 = bitcast %class.sk_sp.192* %3 to i64*
  store i64 %15, i64* %16, align 8
  call void @_ZN9GrVkImage18setResourceReleaseE5sk_spI18GrRefCntedCallbackE(%class.GrVkImage* %12, %class.sk_sp.192* nonnull %3) #10
  %17 = getelementptr inbounds %class.sk_sp.192, %class.sk_sp.192* %3, i64 0, i32 0
  %18 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %17, align 8
  %19 = icmp eq %class.GrRefCntedCallback* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %18, i64 0, i32 0
  %22 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %33

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.SkNVRefCnt.193, %class.SkNVRefCnt.193* %21, i64 2
  %27 = bitcast %class.SkNVRefCnt.193* %26 to void (i8*)**
  %28 = load void (i8*)*, void (i8*)** %27, align 8
  %29 = getelementptr inbounds %class.SkNVRefCnt.193, %class.SkNVRefCnt.193* %21, i64 4
  %30 = bitcast %class.SkNVRefCnt.193* %29 to i8**
  %31 = load i8*, i8** %30, align 8
  call void %28(i8* %31) #10
  %32 = bitcast %class.GrRefCntedCallback* %18 to i8*
  call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %10, %20, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZTv0_n80_NK16GrVkRenderTarget15onGpuMemorySizeEv(%class.GrVkRenderTarget*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n128_N16GrVkRenderTarget12onSetReleaseE5sk_spI18GrRefCntedCallbackE(%class.GrVkRenderTarget*, %class.sk_sp.192*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.sk_sp.192, align 8
  %4 = bitcast %class.GrVkRenderTarget* %0 to i8*
  %5 = bitcast %class.GrVkRenderTarget* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 -128
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 %9
  %11 = bitcast %class.sk_sp.192* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds i8, i8* %10, i64 40
  %13 = bitcast i8* %12 to %class.GrVkAttachment**
  %14 = load %class.GrVkAttachment*, %class.GrVkAttachment** %13, align 8
  %15 = icmp eq %class.GrVkAttachment* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %10, i64 32
  %18 = bitcast i8* %17 to %class.GrVkAttachment**
  %19 = load %class.GrVkAttachment*, %class.GrVkAttachment** %18, align 8
  br label %20

20:                                               ; preds = %16, %2
  %21 = phi %class.GrVkAttachment* [ %19, %16 ], [ %14, %2 ]
  %22 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %21, i64 0, i32 1
  %23 = getelementptr inbounds %class.sk_sp.192, %class.sk_sp.192* %1, i64 0, i32 0
  %24 = bitcast %class.sk_sp.192* %1 to i64*
  %25 = load i64, i64* %24, align 8
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %23, align 8
  %26 = bitcast %class.sk_sp.192* %3 to i64*
  store i64 %25, i64* %26, align 8
  call void @_ZN9GrVkImage18setResourceReleaseE5sk_spI18GrRefCntedCallbackE(%class.GrVkImage* %22, %class.sk_sp.192* nonnull %3) #10
  %27 = getelementptr inbounds %class.sk_sp.192, %class.sk_sp.192* %3, i64 0, i32 0
  %28 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %27, align 8
  %29 = icmp eq %class.GrRefCntedCallback* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %28, i64 0, i32 0
  %32 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %43

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.SkNVRefCnt.193, %class.SkNVRefCnt.193* %31, i64 2
  %37 = bitcast %class.SkNVRefCnt.193* %36 to void (i8*)**
  %38 = load void (i8*)*, void (i8*)** %37, align 8
  %39 = getelementptr inbounds %class.SkNVRefCnt.193, %class.SkNVRefCnt.193* %31, i64 4
  %40 = bitcast %class.SkNVRefCnt.193* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  call void %38(i8* %41) #10
  %42 = bitcast %class.GrRefCntedCallback* %28 to i8*
  call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %20, %30, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  ret void
}

declare void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource*, %class.GrGpu*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN32GrBackendSurfaceMutableStateImplD0Ev(%class.GrBackendSurfaceMutableStateImpl*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %class.GrBackendSurfaceMutableStateImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #10
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN15GrBackendFormat6MakeVkERK23GrVkYcbcrConversionInfo(%class.GrBackendFormat* sret, %struct.GrVkYcbcrConversionInfo* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZN15GrBackendFormatC1E8VkFormatRK23GrVkYcbcrConversionInfo(%class.GrBackendFormat*, i32, %struct.GrVkYcbcrConversionInfo* dereferenceable(48)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource*) unnamed_addr #7

declare void @_ZN9GrVkImage18setResourceReleaseE5sk_spI18GrRefCntedCallbackE(%class.GrVkImage*, %class.sk_sp.192*) local_unnamed_addr #1

declare void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK9GrVkImage16getBackendFormatEv: argument 0"}
!5 = distinct !{!5, !"_ZNK9GrVkImage16getBackendFormatEv"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZN15GrBackendFormat6MakeVkE8VkFormat: argument 0"}
!8 = distinct !{!8, !"_ZN15GrBackendFormat6MakeVkE8VkFormat"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK9GrVkImage16getBackendFormatEv: argument 0"}
!11 = distinct !{!11, !"_ZNK9GrVkImage16getBackendFormatEv"}
!12 = !{!13, !10}
!13 = distinct !{!13, !14, !"_ZN15GrBackendFormat6MakeVkE8VkFormat: argument 0"}
!14 = distinct !{!14, !"_ZN15GrBackendFormat6MakeVkE8VkFormat"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK9GrVkImage15getMutableStateEv: argument 0"}
!17 = distinct !{!17, !"_ZNK9GrVkImage15getMutableStateEv"}
