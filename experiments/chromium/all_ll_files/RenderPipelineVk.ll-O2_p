; ModuleID = '../../third_party/dawn/src/dawn_native/vulkan/RenderPipelineVk.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/vulkan/RenderPipelineVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.dawn_native::vulkan::RenderPipeline" = type { %"class.dawn_native::RenderPipelineBase.base", %"class.dawn_native::vulkan::detail::VkHandle.447" }
%"class.dawn_native::RenderPipelineBase.base" = type <{ %"class.dawn_native::PipelineBase", i32, [4 x i8], %"class.ityp::bitset.431", %"class.ityp::array.432", %"class.ityp::bitset.434", %"class.ityp::array.437", %class.Ref.439, %"class.ityp::array.443", %"class.ityp::array.445", %"struct.dawn_native::PrimitiveState", %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::MultisampleState", i8 }>
%"class.dawn_native::PipelineBase" = type { %"class.dawn_native::CachedObject.base", i32, %"class.dawn_native::PerStage", %class.Ref.420, %"class.ityp::array.422" }
%"class.dawn_native::CachedObject.base" = type <{ %"class.dawn_native::ObjectBase", i8, [7 x i8], i64, i8 }>
%"class.dawn_native::ObjectBase" = type { %class.RefCounted, %"class.dawn_native::DeviceBase"* }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr", %class.Ref, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.2", %class.Ref.8, %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %class.Ref.22, %"class.std::__1::unique_ptr.24", i32, %"struct.std::__1::array", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::InstanceBase"* }
%"class.dawn_native::InstanceBase" = type opaque
%"class.dawn_native::AdapterBase" = type opaque
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.8 = type { %class.RefBase.9 }
%class.RefBase.9 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.22 = type { %class.RefBase.23 }
%class.RefBase.23 = type { %"class.dawn_native::QueueBase"* }
%"class.dawn_native::QueueBase" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.30" }
%"struct.std::__1::array.30" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset.31" }
%"class.std::__1::bitset.31" = type { %"class.std::__1::__bitset.32" }
%"class.std::__1::__bitset.32" = type { i64 }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_native::PersistentCache" = type opaque
%"class.dawn_native::PerStage" = type { %"struct.std::__1::array.402" }
%"struct.std::__1::array.402" = type { [3 x %"struct.dawn_native::ProgrammableStage"] }
%"struct.dawn_native::ProgrammableStage" = type { %class.Ref.403, %"class.std::__1::basic_string", %"struct.dawn_native::EntryPointMetadata"* }
%class.Ref.403 = type { %class.RefBase.404 }
%class.RefBase.404 = type { %"class.dawn_native::ShaderModuleBase"* }
%"class.dawn_native::ShaderModuleBase" = type { %"class.dawn_native::CachedObject.base", i32, %"class.std::__1::vector.332", %"class.std::__1::basic_string", %"class.std::__1::unordered_map.344", %"class.std::__1::vector.332", %"class.std::__1::unique_ptr.368", %"class.std::__1::unique_ptr.374", %"class.std::__1::unique_ptr.380" }
%"class.std::__1::unordered_map.344" = type { %"class.std::__1::__hash_table.345" }
%"class.std::__1::__hash_table.345" = type <{ %"class.std::__1::unique_ptr.346", %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.361", %"class.std::__1::__compressed_pair.364", [4 x i8] }>
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348", %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"struct.std::__1::__hash_node_base.349"** }
%"struct.std::__1::__hash_node_base.349" = type { %"struct.std::__1::__hash_node_base.349"* }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.std::__1::__bucket_list_deallocator.351" }
%"class.std::__1::__bucket_list_deallocator.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { i64 }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"struct.std::__1::__hash_node_base.349" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { float }
%"class.std::__1::vector.332" = type { %"class.std::__1::__vector_base.333" }
%"class.std::__1::__vector_base.333" = type { i32*, i32*, %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { i32* }
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.tint::Program"* }
%"class.tint::Program" = type opaque
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.dawn_native::TintSource"* }
%"class.dawn_native::TintSource" = type opaque
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.dawn_native::OwnedCompilationMessages"* }
%"class.dawn_native::OwnedCompilationMessages" = type { %struct.WGPUCompilationInfo, %"class.std::__1::vector.383", %"class.std::__1::vector.390" }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%"class.std::__1::vector.383" = type { %"class.std::__1::__vector_base.384" }
%"class.std::__1::__vector_base.384" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.390" = type { %"class.std::__1::__vector_base.391" }
%"class.std::__1::__vector_base.391" = type { %struct.WGPUCompilationMessage*, %struct.WGPUCompilationMessage*, %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %struct.WGPUCompilationMessage* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.dawn_native::EntryPointMetadata" = type { %"class.ityp::array.405", %"class.std::__1::bitset.415", %"class.ityp::array.417", %"class.ityp::bitset.419", %"struct.dawn_native::Origin3D", i32 }
%"class.ityp::array.405" = type { %"struct.std::__1::array.406" }
%"struct.std::__1::array.406" = type { [4 x %"class.std::__1::map"] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.407", %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::bitset.415" = type { %"class.std::__1::__bitset.416" }
%"class.std::__1::__bitset.416" = type { i64 }
%"class.ityp::array.417" = type { %"struct.std::__1::array.418" }
%"struct.std::__1::array.418" = type { [4 x i32] }
%"class.ityp::bitset.419" = type { %"class.std::__1::bitset.330" }
%"class.std::__1::bitset.330" = type { %"class.std::__1::__bitset.331" }
%"class.std::__1::__bitset.331" = type { i64 }
%"struct.dawn_native::Origin3D" = type { i32, i32, i32 }
%class.Ref.420 = type { %class.RefBase.421 }
%class.RefBase.421 = type { %"class.dawn_native::PipelineLayoutBase"* }
%"class.dawn_native::PipelineLayoutBase" = type { %"class.dawn_native::CachedObject.base", %"class.ityp::array", %"class.ityp::bitset.329" }
%"class.ityp::array" = type { %"struct.std::__1::array.328" }
%"struct.std::__1::array.328" = type { [4 x %class.Ref.8] }
%"class.ityp::bitset.329" = type { %"class.std::__1::bitset.330" }
%"class.ityp::array.422" = type { %"struct.std::__1::array.423" }
%"struct.std::__1::array.423" = type { [4 x %"class.std::__1::vector.424"] }
%"class.std::__1::vector.424" = type { %"class.std::__1::__vector_base.425" }
%"class.std::__1::__vector_base.425" = type { i64*, i64*, %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { i64* }
%"class.ityp::bitset.431" = type { %"class.std::__1::bitset.415" }
%"class.ityp::array.432" = type { %"struct.std::__1::array.433" }
%"struct.std::__1::array.433" = type { [16 x %"struct.dawn_native::VertexAttributeInfo"] }
%"struct.dawn_native::VertexAttributeInfo" = type { i32, i64, i8, i8 }
%"class.ityp::bitset.434" = type { %"class.std::__1::bitset.435" }
%"class.std::__1::bitset.435" = type { %"class.std::__1::__bitset.436" }
%"class.std::__1::__bitset.436" = type { i64 }
%"class.ityp::array.437" = type { %"struct.std::__1::array.438" }
%"struct.std::__1::array.438" = type { [8 x %"struct.dawn_native::VertexBufferInfo"] }
%"struct.dawn_native::VertexBufferInfo" = type { i64, i32 }
%class.Ref.439 = type { %class.RefBase.440 }
%class.RefBase.440 = type { %"class.dawn_native::AttachmentState"* }
%"class.dawn_native::AttachmentState" = type { %"class.dawn_native::CachedObject.base", %"class.dawn_native::AttachmentStateBlueprint" }
%"class.dawn_native::AttachmentStateBlueprint" = type { %"class.ityp::bitset.419", %"class.ityp::array.441", i32, i32 }
%"class.ityp::array.441" = type { %"struct.std::__1::array.442" }
%"struct.std::__1::array.442" = type { [4 x i32] }
%"class.ityp::array.443" = type { %"struct.std::__1::array.444" }
%"struct.std::__1::array.444" = type { [4 x %"struct.dawn_native::ColorTargetState"] }
%"struct.dawn_native::ColorTargetState" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8], %"struct.dawn_native::BlendState"*, i32, [4 x i8] }>
%"struct.dawn_native::ChainedStruct" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::BlendState" = type { %"struct.dawn_native::BlendComponent", %"struct.dawn_native::BlendComponent" }
%"struct.dawn_native::BlendComponent" = type { i32, i32, i32 }
%"class.ityp::array.445" = type { %"struct.std::__1::array.446" }
%"struct.std::__1::array.446" = type { [4 x %"struct.dawn_native::BlendState"] }
%"struct.dawn_native::PrimitiveState" = type { %"struct.dawn_native::ChainedStruct"*, i32, i32, i32, i32 }
%"struct.dawn_native::DepthStencilState" = type { %"struct.dawn_native::ChainedStruct"*, i32, i8, i32, %"struct.dawn_native::StencilFaceState", %"struct.dawn_native::StencilFaceState", i32, i32, i32, float, float }
%"struct.dawn_native::StencilFaceState" = type { i32, i32, i32, i32 }
%"struct.dawn_native::MultisampleState" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i8, [7 x i8] }>
%"class.dawn_native::vulkan::detail::VkHandle.447" = type { %struct.VkPipeline_T* }
%struct.VkPipeline_T = type opaque
%class.Result = type { i64 }
%"class.dawn_native::vulkan::Device" = type { %"class.dawn_native::DeviceBase", %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanDeviceInfo", %struct.VkDevice_T*, i32, %struct.VkQueue_T*, i32, %class.SerialQueue, %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.271", %"class.std::__1::queue", %"class.std::__1::vector.287", %class.SerialQueue.294, %"class.std::__1::vector.304", %"struct.dawn_native::vulkan::CommandRecordingContext" }
%"struct.dawn_native::vulkan::VulkanFunctions" = type { void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i32*, %struct.VkLayerProperties*)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, i32 (i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, void ()* (%struct.VkDevice_T*, i8*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, i32 (%struct.VkInstance_T*, %struct.VkXlibSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct._XDisplay*, i64)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)*, void (%struct.VkCommandBuffer_T*, float*)*, void (%struct.VkCommandBuffer_T*, float, float, float)*, void (%struct.VkCommandBuffer_T*, float, float)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, float)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*)*, i32 (%struct.VkCommandBuffer_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)*, void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkFence_T*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)*, i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*)*, i32 (%struct.VkCommandBuffer_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)*, i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkInstance_T = type opaque
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkFormatProperties = type { i32, i32, i32 }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%struct.VkCommandBuffer_T = type opaque
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkDebugUtilsMessengerCreateInfoEXT = type { i32, i8*, i32, i32, i32, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)*, i8* }
%struct.VkDebugUtilsMessengerCallbackDataEXT = type { i32, i8*, i32, i8*, i32, i8*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsObjectNameInfoEXT* }
%struct.VkDebugUtilsObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugUtilsObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%struct.VkXlibSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct._XDisplay*, i64 }
%struct._XDisplay = type opaque
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%struct.VkBuffer_T = type opaque
%struct.VkImage_T = type opaque
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkPipelineLayout_T = type opaque
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkClearDepthStencilValue = type { float, i32 }
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkQueryPool_T = type opaque
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkEvent_T = type opaque
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineCache_T = type opaque
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkPushConstantRange = type { i32, i32, i32 }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"struct.dawn_native::vulkan::VulkanDeviceInfo" = type { %"struct.dawn_native::vulkan::VulkanDeviceKnobs", %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT, %"class.std::__1::vector", %"class.std::__1::vector.50", %"class.std::__1::vector.57", %"class.std::__1::vector.64" }
%"struct.dawn_native::vulkan::VulkanDeviceKnobs" = type { %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDevice16BitStorageFeatures, %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT, %"class.ityp::bitset" }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDevice16BitStorageFeatures = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT = type { i32, i8*, i32, i32 }
%"class.ityp::bitset" = type { %"class.std::__1::bitset.45" }
%"class.std::__1::bitset.45" = type { %"class.std::__1::__bitset.46" }
%"class.std::__1::__bitset.46" = type { i64 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT = type { i32, i8*, i32, i32, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %struct.VkMemoryType*, %struct.VkMemoryType*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %struct.VkMemoryType* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %struct.VkMemoryHeap*, %struct.VkMemoryHeap*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %struct.VkMemoryHeap* }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %struct.VkLayerProperties* }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.SerialQueue = type { %class.SerialStorage }
%class.SerialStorage = type { %"class.std::__1::vector.71" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.73" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.dawn_native::vulkan::FencedDeleter"* }
%"class.dawn_native::vulkan::FencedDeleter" = type { %"class.dawn_native::vulkan::Device"*, %class.SerialQueue.81, %class.SerialQueue.91, %class.SerialQueue.101, %class.SerialQueue.111, %class.SerialQueue.121, %class.SerialQueue.131, %class.SerialQueue.141, %class.SerialQueue.151, %class.SerialQueue.161, %class.SerialQueue.171, %class.SerialQueue.181, %class.SerialQueue.191, %class.SerialQueue.201, %class.SerialQueue.211, %class.SerialQueue.221 }
%class.SerialQueue.81 = type { %class.SerialStorage.82 }
%class.SerialStorage.82 = type { %"class.std::__1::vector.83" }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"struct.std::__1::pair.85"*, %"struct.std::__1::pair.85"*, %"class.std::__1::__compressed_pair.86" }
%"struct.std::__1::pair.85" = type opaque
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.std::__1::pair.85"* }
%class.SerialQueue.91 = type { %class.SerialStorage.92 }
%class.SerialStorage.92 = type { %"class.std::__1::vector.93" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"struct.std::__1::pair.95"*, %"struct.std::__1::pair.95"*, %"class.std::__1::__compressed_pair.96" }
%"struct.std::__1::pair.95" = type opaque
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::pair.95"* }
%class.SerialQueue.101 = type { %class.SerialStorage.102 }
%class.SerialStorage.102 = type { %"class.std::__1::vector.103" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type opaque
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%class.SerialQueue.111 = type { %class.SerialStorage.112 }
%class.SerialStorage.112 = type { %"class.std::__1::vector.113" }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"struct.std::__1::pair.115"*, %"struct.std::__1::pair.115"*, %"class.std::__1::__compressed_pair.116" }
%"struct.std::__1::pair.115" = type opaque
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::pair.115"* }
%class.SerialQueue.121 = type { %class.SerialStorage.122 }
%class.SerialStorage.122 = type { %"class.std::__1::vector.123" }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"struct.std::__1::pair.125"*, %"struct.std::__1::pair.125"*, %"class.std::__1::__compressed_pair.126" }
%"struct.std::__1::pair.125" = type opaque
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::pair.125"* }
%class.SerialQueue.131 = type { %class.SerialStorage.132 }
%class.SerialStorage.132 = type { %"class.std::__1::vector.133" }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"struct.std::__1::pair.135"*, %"struct.std::__1::pair.135"*, %"class.std::__1::__compressed_pair.136" }
%"struct.std::__1::pair.135" = type opaque
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::pair.135"* }
%class.SerialQueue.141 = type { %class.SerialStorage.142 }
%class.SerialStorage.142 = type { %"class.std::__1::vector.143" }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"struct.std::__1::pair.145"*, %"struct.std::__1::pair.145"*, %"class.std::__1::__compressed_pair.146" }
%"struct.std::__1::pair.145" = type opaque
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.std::__1::pair.145"* }
%class.SerialQueue.151 = type { %class.SerialStorage.152 }
%class.SerialStorage.152 = type { %"class.std::__1::vector.153" }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"struct.std::__1::pair.155"*, %"struct.std::__1::pair.155"*, %"class.std::__1::__compressed_pair.156" }
%"struct.std::__1::pair.155" = type opaque
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::pair.155"* }
%class.SerialQueue.161 = type { %class.SerialStorage.162 }
%class.SerialStorage.162 = type { %"class.std::__1::vector.163" }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"struct.std::__1::pair.165"*, %"struct.std::__1::pair.165"*, %"class.std::__1::__compressed_pair.166" }
%"struct.std::__1::pair.165" = type opaque
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::pair.165"* }
%class.SerialQueue.171 = type { %class.SerialStorage.172 }
%class.SerialStorage.172 = type { %"class.std::__1::vector.173" }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.std::__1::pair.175"*, %"struct.std::__1::pair.175"*, %"class.std::__1::__compressed_pair.176" }
%"struct.std::__1::pair.175" = type opaque
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::pair.175"* }
%class.SerialQueue.181 = type { %class.SerialStorage.182 }
%class.SerialStorage.182 = type { %"class.std::__1::vector.183" }
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.std::__1::pair.185"*, %"struct.std::__1::pair.185"*, %"class.std::__1::__compressed_pair.186" }
%"struct.std::__1::pair.185" = type opaque
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::pair.185"* }
%class.SerialQueue.191 = type { %class.SerialStorage.192 }
%class.SerialStorage.192 = type { %"class.std::__1::vector.193" }
%"class.std::__1::vector.193" = type { %"class.std::__1::__vector_base.194" }
%"class.std::__1::__vector_base.194" = type { %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"*, %"class.std::__1::__compressed_pair.196" }
%"struct.std::__1::pair.195" = type opaque
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.std::__1::pair.195"* }
%class.SerialQueue.201 = type { %class.SerialStorage.202 }
%class.SerialStorage.202 = type { %"class.std::__1::vector.203" }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"struct.std::__1::pair.205"*, %"struct.std::__1::pair.205"*, %"class.std::__1::__compressed_pair.206" }
%"struct.std::__1::pair.205" = type opaque
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.std::__1::pair.205"* }
%class.SerialQueue.211 = type { %class.SerialStorage.212 }
%class.SerialStorage.212 = type { %"class.std::__1::vector.213" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.std::__1::pair.215"*, %"struct.std::__1::pair.215"*, %"class.std::__1::__compressed_pair.216" }
%"struct.std::__1::pair.215" = type opaque
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.std::__1::pair.215"* }
%class.SerialQueue.221 = type { %class.SerialStorage.222 }
%class.SerialStorage.222 = type { %"class.std::__1::vector.223" }
%"class.std::__1::vector.223" = type { %"class.std::__1::__vector_base.224" }
%"class.std::__1::__vector_base.224" = type { %"struct.std::__1::pair.225"*, %"struct.std::__1::pair.225"*, %"class.std::__1::__compressed_pair.226" }
%"struct.std::__1::pair.225" = type opaque
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.std::__1::pair.225"* }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.dawn_native::vulkan::ResourceMemoryAllocator"* }
%"class.dawn_native::vulkan::ResourceMemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.dawn_native::vulkan::RenderPassCache"* }
%"class.dawn_native::vulkan::RenderPassCache" = type { %"class.dawn_native::vulkan::Device"*, %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.243", %"class.std::__1::__compressed_pair.252", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.259", [4 x i8] }>
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245", %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.dawn_native::vulkan::external_memory::Service"* }
%"class.dawn_native::vulkan::external_memory::Service" = type <{ %"class.dawn_native::vulkan::Device"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.dawn_native::vulkan::external_semaphore::Service"* }
%"class.dawn_native::vulkan::external_semaphore::Service" = type <{ %"class.dawn_native::vulkan::Device"*, i8, [7 x i8] }>
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.283" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.277"**, %"struct.std::__1::pair.277"**, %"struct.std::__1::pair.277"**, %"class.std::__1::__compressed_pair.278" }
%"struct.std::__1::pair.277" = type opaque
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.std::__1::pair.277"** }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"class.dawn_native::vulkan::detail::VkHandle"*, %"class.dawn_native::vulkan::detail::VkHandle"*, %"class.std::__1::__compressed_pair.289" }
%"class.dawn_native::vulkan::detail::VkHandle" = type { %struct.VkFence_T* }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.dawn_native::vulkan::detail::VkHandle"* }
%class.SerialQueue.294 = type { %class.SerialStorage.295 }
%class.SerialStorage.295 = type { %"class.std::__1::vector.296" }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"struct.std::__1::pair.298"*, %"struct.std::__1::pair.298"*, %"class.std::__1::__compressed_pair.299" }
%"struct.std::__1::pair.298" = type opaque
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.std::__1::pair.298"* }
%"class.std::__1::vector.304" = type { %"class.std::__1::__vector_base.305" }
%"class.std::__1::__vector_base.305" = type { %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"*, %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"*, %"class.std::__1::__compressed_pair.307" }
%"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer" = type { %"class.dawn_native::vulkan::detail::VkHandle.306", %struct.VkCommandBuffer_T* }
%"class.dawn_native::vulkan::detail::VkHandle.306" = type { %struct.VkCommandPool_T* }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"* }
%"struct.dawn_native::vulkan::CommandRecordingContext" = type <{ %struct.VkCommandBuffer_T*, %"class.std::__1::vector.312", %"class.std::__1::vector.312", %"class.std::__1::vector.320", %"class.dawn_native::vulkan::detail::VkHandle.306", i8, [7 x i8] }>
%"class.std::__1::vector.312" = type { %"class.std::__1::__vector_base.313" }
%"class.std::__1::__vector_base.313" = type { %"class.dawn_native::vulkan::detail::VkHandle.314"*, %"class.dawn_native::vulkan::detail::VkHandle.314"*, %"class.std::__1::__compressed_pair.315" }
%"class.dawn_native::vulkan::detail::VkHandle.314" = type { %struct.VkSemaphore_T* }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.dawn_native::vulkan::detail::VkHandle.314"* }
%"class.std::__1::vector.320" = type { %"class.std::__1::__vector_base.321" }
%"class.std::__1::__vector_base.321" = type { %class.Ref.322*, %class.Ref.322*, %"class.std::__1::__compressed_pair.323" }
%class.Ref.322 = type opaque
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %class.Ref.322* }
%"struct.dawn_native::RenderPipelineDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, %"class.dawn_native::PipelineLayoutBase"*, %"struct.dawn_native::VertexState", %"struct.dawn_native::PrimitiveState", %"struct.dawn_native::DepthStencilState"*, %"struct.dawn_native::MultisampleState", %"struct.dawn_native::FragmentState"* }
%"struct.dawn_native::VertexState" = type { %"struct.dawn_native::ChainedStruct"*, %"class.dawn_native::ShaderModuleBase"*, i8*, i32, %"struct.dawn_native::VertexBufferLayout"* }
%"struct.dawn_native::VertexBufferLayout" = type { i64, i32, i32, %"struct.dawn_native::VertexAttribute"* }
%"struct.dawn_native::VertexAttribute" = type { i32, i64, i32 }
%"struct.dawn_native::FragmentState" = type { %"struct.dawn_native::ChainedStruct"*, %"class.dawn_native::ShaderModuleBase"*, i8*, i32, %"struct.dawn_native::ColorTargetState"* }
%class.Result.448 = type { %"class.std::__1::unique_ptr.449" }
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.452" }
%"class.std::__1::vector.452" = type { %"class.std::__1::__vector_base.453" }
%"class.std::__1::__vector_base.453" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.454" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"class.dawn_native::RenderPipelineBase" = type <{ %"class.dawn_native::PipelineBase", i32, [4 x i8], %"class.ityp::bitset.431", %"class.ityp::array.432", %"class.ityp::bitset.434", %"class.ityp::array.437", %class.Ref.439, %"class.ityp::array.443", %"class.ityp::array.445", %"struct.dawn_native::PrimitiveState", %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::MultisampleState", i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%class.Result.462 = type { i32, %"class.std::__1::unique_ptr.449", %"class.dawn_native::vulkan::detail::VkHandle.463" }
%"class.dawn_native::vulkan::detail::VkHandle.463" = type { %struct.VkShaderModule_T* }
%"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations" = type { %"struct.std::__1::array.491", %"struct.std::__1::array.492" }
%"struct.std::__1::array.491" = type { [8 x %struct.VkVertexInputBindingDescription] }
%"struct.std::__1::array.492" = type { [16 x %struct.VkVertexInputAttributeDescription] }
%"class.ityp::array.493" = type { %"struct.std::__1::array.494" }
%"struct.std::__1::array.494" = type { [4 x %struct.VkPipelineColorBlendAttachmentState] }
%"class.BitSetIterator<4, unsigned char>::Iterator" = type { %"class.std::__1::bitset.330", i64, i64 }
%"struct.dawn_native::vulkan::RenderPassCacheQuery" = type <{ %"class.ityp::bitset.419", %"class.ityp::bitset.419", %"class.ityp::array.441", %"class.ityp::array.496", i8, [3 x i8], i32, i32, i32, i32, [4 x i8] }>
%"class.ityp::array.496" = type { %"struct.std::__1::array.497" }
%"struct.std::__1::array.497" = type { [4 x i32] }
%class.Result.498 = type { i32, %"class.std::__1::unique_ptr.449", %"class.dawn_native::vulkan::detail::VkHandle.495" }
%"class.dawn_native::vulkan::detail::VkHandle.495" = type { %struct.VkRenderPass_T* }
%"class.dawn_native::vulkan::ShaderModule" = type { %"class.dawn_native::ShaderModuleBase", %"class.dawn_native::vulkan::detail::VkHandle.463", %"class.std::__1::unordered_map.464" }
%"class.std::__1::unordered_map.464" = type { %"class.std::__1::__hash_table.465" }
%"class.std::__1::__hash_table.465" = type <{ %"class.std::__1::unique_ptr.466", %"class.std::__1::__compressed_pair.476", %"class.std::__1::__compressed_pair.481", %"class.std::__1::__compressed_pair.484", [4 x i8] }>
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468", %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"struct.std::__1::__hash_node_base.469"** }
%"struct.std::__1::__hash_node_base.469" = type { %"struct.std::__1::__hash_node_base.469"* }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.std::__1::__bucket_list_deallocator.471" }
%"class.std::__1::__bucket_list_deallocator.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"struct.std::__1::__hash_node_base.469" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"class.dawn_native::vulkan::PipelineLayout" = type { %"class.dawn_native::PipelineLayoutBase", %"class.dawn_native::vulkan::detail::VkHandle.490" }
%"class.dawn_native::vulkan::detail::VkHandle.490" = type { %struct.VkPipelineLayout_T* }
%"class.std::__1::__bit_iterator.505" = type <{ i64*, i32, [4 x i8] }>
%"class.std::__1::__bit_iterator.510" = type <{ i64*, i32, [4 x i8] }>
%"class.BitSetIterator<8, unsigned char>::Iterator" = type { %"class.std::__1::bitset.435", i64, i64 }
%"class.BitSetIterator<16, unsigned char>::Iterator" = type { %"class.std::__1::bitset.415", i64, i64 }

$_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_ = comdat any

$_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_ = comdat any

$_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_ = comdat any

$_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask = comdat any

$_ZZN14BitSetIteratorILm8EhE8Iterator10getNextBitEvE8wordMask = comdat any

$_ZZN14BitSetIteratorILm16EhE8Iterator10getNextBitEvE8wordMask = comdat any

@.str = private unnamed_addr constant [67 x i8] c"../../third_party/dawn/src/dawn_native/vulkan/RenderPipelineVk.cpp\00", align 1
@__func__._ZN11dawn_native6vulkan14RenderPipeline6CreateEPNS0_6DeviceEPKNS_24RenderPipelineDescriptorE = private unnamed_addr constant [7 x i8] c"Create\00", align 1
@__func__._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE = private unnamed_addr constant [11 x i8] c"Initialize\00", align 1
@__const._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.rasterization = private unnamed_addr constant { i32, [4 x i8], i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, [4 x i8] } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }, align 8
@__const._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.colorBlend = private unnamed_addr constant { i32, [4 x i8], i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %struct.VkPipelineColorBlendAttachmentState* inttoptr (i64 -6148914691236517206 to %struct.VkPipelineColorBlendAttachmentState*), [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, align 8
@__const._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.dynamicStates = private unnamed_addr constant [6 x i32] [i32 0, i32 1, i32 2, i32 4, i32 5, i32 8], align 16
@.str.1 = private unnamed_addr constant [23 x i8] c"CreateGraphicsPipeline\00", align 1
@_ZTVN11dawn_native6vulkan14RenderPipelineE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::vulkan::RenderPipeline"*)* @_ZN11dawn_native6vulkan14RenderPipelineD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::vulkan::RenderPipeline"*)* @_ZN11dawn_native6vulkan14RenderPipelineD0Ev to i8*), i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCounted10DeleteThisEv to i8*), i8* bitcast (i64 (%"class.dawn_native::RenderPipelineBase"*)* @_ZN11dawn_native18RenderPipelineBase18ComputeContentHashEv to i8*)] }, align 8
@__const._ZN11dawn_native6vulkan12_GLOBAL__N_123ComputeDepthStencilDescEPKNS_17DepthStencilStateE.depthStencilState = private unnamed_addr constant { i32, [4 x i8], i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %struct.VkStencilOpState { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.VkStencilOpState { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, align 8
@_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 15 }, comdat, align 8
@_ZZN14BitSetIteratorILm8EhE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 255 }, comdat, align 8
@_ZZN14BitSetIteratorILm16EhE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 65535 }, comdat, align 8
@switch.table._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.7 = private unnamed_addr constant [5 x i32] [i32 0, i32 0, i32 1, i32 0, i32 1], align 4
@switch.table._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.11 = private unnamed_addr constant [13 x i32] [i32 0, i32 1, i32 2, i32 3, i32 6, i32 7, i32 4, i32 5, i32 8, i32 9, i32 14, i32 10, i32 11], align 4
@switch.table._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.12 = private unnamed_addr constant [8 x i32] [i32 0, i32 1, i32 2, i32 5, i32 3, i32 4, i32 6, i32 7], align 4
@switch.table._ZN11dawn_native6vulkan14RenderPipeline22ComputeVertexInputDescEPNS1_54PipelineVertexInputStateCreateInfoTemporaryAllocationsE = private unnamed_addr constant [30 x i32] [i32 20, i32 41, i32 21, i32 42, i32 16, i32 37, i32 17, i32 38, i32 81, i32 95, i32 82, i32 96, i32 77, i32 91, i32 78, i32 92, i32 83, i32 97, i32 100, i32 103, i32 106, i32 109, i32 98, i32 101, i32 104, i32 107, i32 99, i32 102, i32 105, i32 108], align 4

@_ZN11dawn_native6vulkan14RenderPipelineD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::RenderPipeline"*), void (%"class.dawn_native::vulkan::RenderPipeline"*)* @_ZN11dawn_native6vulkan14RenderPipelineD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan14RenderPipeline6CreateEPNS0_6DeviceEPKNS_24RenderPipelineDescriptorE(%class.Result* noalias nocapture sret, %"class.dawn_native::vulkan::Device"*, %"struct.dawn_native::RenderPipelineDescriptor"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.Result.448, align 8
  %5 = tail call i8* @_Znwm(i64 1176) #9
  %6 = bitcast i8* %5 to %"class.dawn_native::vulkan::RenderPipeline"*
  %7 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %1, i64 0, i32 0
  %8 = bitcast i8* %5 to %"class.dawn_native::RenderPipelineBase"*
  tail call void @_ZN11dawn_native18RenderPipelineBaseC2EPNS_10DeviceBaseEPKNS_24RenderPipelineDescriptorE(%"class.dawn_native::RenderPipelineBase"* nonnull %8, %"class.dawn_native::DeviceBase"* %7, %"struct.dawn_native::RenderPipelineDescriptor"* %2) #10
  %9 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan14RenderPipelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 1168
  %11 = bitcast i8* %10 to %struct.VkPipeline_T**
  store %struct.VkPipeline_T* null, %struct.VkPipeline_T** %11, align 8
  %12 = bitcast %class.Result.448* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  %13 = getelementptr inbounds %class.Result.448, %class.Result.448* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %13, align 8
  call void @_ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE(%class.Result.448* nonnull sret %4, %"class.dawn_native::vulkan::RenderPipeline"* nonnull %6, %"struct.dawn_native::RenderPipelineDescriptor"* %2)
  %14 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %13, align 8
  %15 = icmp eq %"class.dawn_native::ErrorData"* %14, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %13, align 8
  br i1 %15, label %42, label %16, !prof !2

16:                                               ; preds = %3
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %14, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__func__._ZN11dawn_native6vulkan14RenderPipeline6CreateEPNS0_6DeviceEPKNS_24RenderPipelineDescriptorE, i64 0, i64 0), i32 335) #10
  %17 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  %18 = bitcast %"class.dawn_native::ErrorData"* %14 to i8*
  %19 = call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %18, i32 1) #10
  store i64 %19, i64* %17, align 8
  %20 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %13, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %13, align 8
  %21 = icmp eq %"class.dawn_native::ErrorData"* %20, null
  br i1 %21, label %45, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %20, i64 0, i32 2, i32 0, i32 0
  %24 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %23, align 8
  %25 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %24 to i64
  %28 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %20, i64 0, i32 2, i32 0, i32 1
  %29 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %24 to i8*
  call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %26, %22
  %32 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %20, i64 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #9
  br label %40

40:                                               ; preds = %37, %31
  %41 = bitcast %"class.dawn_native::ErrorData"* %20 to i8*
  call void @_ZdlPv(i8* %41) #9
  br label %45

42:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  %43 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  %44 = call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %5, i32 0) #10
  store i64 %44, i64* %43, align 8
  br label %47

45:                                               ; preds = %16, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  %46 = bitcast i8* %5 to %class.RefCounted*
  call void @_ZN10RefCounted7ReleaseEv(%class.RefCounted* nonnull %46) #10
  br label %47

47:                                               ; preds = %42, %45
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE(%class.Result.448* noalias sret, %"class.dawn_native::vulkan::RenderPipeline"*, %"struct.dawn_native::RenderPipelineDescriptor"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = alloca %"class.std::__1::__bit_iterator", align 8
  %9 = alloca %"class.std::__1::__bit_iterator", align 8
  %10 = alloca %"class.std::__1::__bit_iterator", align 8
  %11 = alloca %"class.std::__1::__bit_iterator", align 8
  %12 = alloca %"class.std::__1::__bit_iterator", align 8
  %13 = alloca %"class.std::__1::__bit_iterator", align 8
  %14 = alloca %"class.std::__1::__bit_iterator", align 8
  %15 = alloca %"class.std::__1::__bit_iterator", align 8
  %16 = alloca %"class.std::__1::__bit_iterator", align 8
  %17 = alloca %"class.std::__1::__bit_iterator", align 8
  %18 = alloca %"class.std::__1::__bit_iterator", align 8
  %19 = alloca %"class.std::__1::__bit_iterator", align 8
  %20 = alloca [2 x %struct.VkPipelineShaderStageCreateInfo], align 16
  %21 = alloca %class.Result.462, align 8
  %22 = alloca %class.Result.462, align 8
  %23 = alloca %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations", align 4
  %24 = alloca %struct.VkPipelineVertexInputStateCreateInfo, align 8
  %25 = alloca %struct.VkPipelineInputAssemblyStateCreateInfo, align 8
  %26 = alloca %struct.VkViewport, align 16
  %27 = alloca <4 x i32>, align 16
  %28 = alloca %struct.VkPipelineViewportStateCreateInfo, align 8
  %29 = alloca %struct.VkPipelineRasterizationStateCreateInfo, align 8
  %30 = alloca %struct.VkPipelineMultisampleStateCreateInfo, align 8
  %31 = alloca i32, align 4
  %32 = alloca %struct.VkPipelineDepthStencilStateCreateInfo, align 8
  %33 = alloca %"class.ityp::array.493", align 4
  %34 = alloca %"class.BitSetIterator<4, unsigned char>::Iterator", align 8
  %35 = alloca %struct.VkPipelineColorBlendStateCreateInfo, align 8
  %36 = alloca [6 x i32], align 16
  %37 = alloca %struct.VkPipelineDynamicStateCreateInfo, align 8
  %38 = alloca %"struct.dawn_native::vulkan::RenderPassCacheQuery", align 8
  %39 = alloca %"class.BitSetIterator<4, unsigned char>::Iterator", align 8
  %40 = alloca %class.Result.498, align 8
  %41 = alloca %struct.VkGraphicsPipelineCreateInfo, align 8
  %42 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPipeline", %"class.dawn_native::vulkan::RenderPipeline"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %42) #10
  %44 = bitcast %"class.dawn_native::DeviceBase"* %43 to %"class.dawn_native::vulkan::Device"*
  %45 = bitcast [2 x %struct.VkPipelineShaderStageCreateInfo]* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %45) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %45, i8 -86, i64 96, i1 false)
  %46 = tail call zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"* %43, i32 24) #10
  br i1 %46, label %47, label %189

47:                                               ; preds = %3
  %48 = bitcast %class.Result.462* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false)
  %49 = getelementptr inbounds %"struct.dawn_native::RenderPipelineDescriptor", %"struct.dawn_native::RenderPipelineDescriptor"* %2, i64 0, i32 3, i32 1
  %50 = bitcast %"class.dawn_native::ShaderModuleBase"** %49 to %"class.dawn_native::vulkan::ShaderModule"**
  %51 = load %"class.dawn_native::vulkan::ShaderModule"*, %"class.dawn_native::vulkan::ShaderModule"** %50, align 8
  %52 = getelementptr inbounds %"struct.dawn_native::RenderPipelineDescriptor", %"struct.dawn_native::RenderPipelineDescriptor"* %2, i64 0, i32 3, i32 2
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPipeline", %"class.dawn_native::vulkan::RenderPipeline"* %1, i64 0, i32 0, i32 0
  %55 = tail call %"class.dawn_native::PipelineLayoutBase"* @_ZN11dawn_native12PipelineBase9GetLayoutEv(%"class.dawn_native::PipelineBase"* %54) #10
  %56 = bitcast %"class.dawn_native::PipelineLayoutBase"* %55 to %"class.dawn_native::vulkan::PipelineLayout"*
  call void @_ZN11dawn_native6vulkan12ShaderModule26GetTransformedModuleHandleEPKcPNS0_14PipelineLayoutE(%class.Result.462* nonnull sret %21, %"class.dawn_native::vulkan::ShaderModule"* %51, i8* %53, %"class.dawn_native::vulkan::PipelineLayout"* %56) #10
  %57 = getelementptr inbounds %class.Result.462, %class.Result.462* %21, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 1
  store i32 2, i32* %57, align 8
  br i1 %59, label %60, label %88, !prof !3

60:                                               ; preds = %47
  %61 = getelementptr inbounds %class.Result.462, %class.Result.462* %21, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %61, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %61, align 8
  %63 = ptrtoint %"class.dawn_native::ErrorData"* %62 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %62, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE, i64 0, i64 0), i32 350) #10
  %64 = bitcast %class.Result.448* %0 to i64*
  store i64 %63, i64* %64, align 8
  %65 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %61, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %61, align 8
  %66 = icmp eq %"class.dawn_native::ErrorData"* %65, null
  br i1 %66, label %87, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %65, i64 0, i32 2, i32 0, i32 0
  %69 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %68, align 8
  %70 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %69 to i64
  %73 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %65, i64 0, i32 2, i32 0, i32 1
  %74 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %69 to i8*
  call void @_ZdlPv(i8* %75) #9
  br label %76

76:                                               ; preds = %71, %67
  %77 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %65, i64 0, i32 1
  %78 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #9
  br label %85

85:                                               ; preds = %82, %76
  %86 = bitcast %"class.dawn_native::ErrorData"* %65 to i8*
  call void @_ZdlPv(i8* %86) #9
  br label %87

87:                                               ; preds = %60, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #10
  br label %731

88:                                               ; preds = %47
  %89 = getelementptr inbounds %class.Result.462, %class.Result.462* %21, i64 0, i32 2, i32 0
  %90 = bitcast %struct.VkShaderModule_T** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 0, i32 4
  %93 = bitcast %struct.VkShaderModule_T** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = getelementptr inbounds %class.Result.462, %class.Result.462* %21, i64 0, i32 1, i32 0, i32 0, i32 0
  %95 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %94, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %94, align 8
  %96 = icmp eq %"class.dawn_native::ErrorData"* %95, null
  br i1 %96, label %117, label %97

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %95, i64 0, i32 2, i32 0, i32 0
  %99 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %98, align 8
  %100 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %99, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %97
  %102 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %99 to i64
  %103 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %95, i64 0, i32 2, i32 0, i32 1
  %104 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %103 to i64*
  store i64 %102, i64* %104, align 8
  %105 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %99 to i8*
  call void @_ZdlPv(i8* %105) #9
  br label %106

106:                                              ; preds = %101, %97
  %107 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %95, i64 0, i32 1
  %108 = bitcast %"class.std::__1::basic_string"* %107 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #9
  br label %115

115:                                              ; preds = %112, %106
  %116 = bitcast %"class.dawn_native::ErrorData"* %95 to i8*
  call void @_ZdlPv(i8* %116) #9
  br label %117

117:                                              ; preds = %88, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #10
  %118 = bitcast %class.Result.462* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 24, i1 false)
  %119 = getelementptr inbounds %"struct.dawn_native::RenderPipelineDescriptor", %"struct.dawn_native::RenderPipelineDescriptor"* %2, i64 0, i32 7
  %120 = load %"struct.dawn_native::FragmentState"*, %"struct.dawn_native::FragmentState"** %119, align 8
  %121 = getelementptr inbounds %"struct.dawn_native::FragmentState", %"struct.dawn_native::FragmentState"* %120, i64 0, i32 1
  %122 = bitcast %"class.dawn_native::ShaderModuleBase"** %121 to %"class.dawn_native::vulkan::ShaderModule"**
  %123 = load %"class.dawn_native::vulkan::ShaderModule"*, %"class.dawn_native::vulkan::ShaderModule"** %122, align 8
  %124 = getelementptr inbounds %"struct.dawn_native::FragmentState", %"struct.dawn_native::FragmentState"* %120, i64 0, i32 2
  %125 = load i8*, i8** %124, align 8
  %126 = call %"class.dawn_native::PipelineLayoutBase"* @_ZN11dawn_native12PipelineBase9GetLayoutEv(%"class.dawn_native::PipelineBase"* %54) #10
  %127 = bitcast %"class.dawn_native::PipelineLayoutBase"* %126 to %"class.dawn_native::vulkan::PipelineLayout"*
  call void @_ZN11dawn_native6vulkan12ShaderModule26GetTransformedModuleHandleEPKcPNS0_14PipelineLayoutE(%class.Result.462* nonnull sret %22, %"class.dawn_native::vulkan::ShaderModule"* %123, i8* %125, %"class.dawn_native::vulkan::PipelineLayout"* %127) #10
  %128 = getelementptr inbounds %class.Result.462, %class.Result.462* %22, i64 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 1
  store i32 2, i32* %128, align 8
  br i1 %130, label %131, label %159, !prof !3

131:                                              ; preds = %117
  %132 = getelementptr inbounds %class.Result.462, %class.Result.462* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %133 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %132, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %132, align 8
  %134 = ptrtoint %"class.dawn_native::ErrorData"* %133 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %133, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE, i64 0, i64 0), i32 354) #10
  %135 = bitcast %class.Result.448* %0 to i64*
  store i64 %134, i64* %135, align 8
  %136 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %132, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %132, align 8
  %137 = icmp eq %"class.dawn_native::ErrorData"* %136, null
  br i1 %137, label %158, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %136, i64 0, i32 2, i32 0, i32 0
  %140 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %139, align 8
  %141 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %140, null
  br i1 %141, label %147, label %142

142:                                              ; preds = %138
  %143 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %140 to i64
  %144 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %136, i64 0, i32 2, i32 0, i32 1
  %145 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %140 to i8*
  call void @_ZdlPv(i8* %146) #9
  br label %147

147:                                              ; preds = %142, %138
  %148 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %136, i64 0, i32 1
  %149 = bitcast %"class.std::__1::basic_string"* %148 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %148, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  call void @_ZdlPv(i8* %155) #9
  br label %156

156:                                              ; preds = %153, %147
  %157 = bitcast %"class.dawn_native::ErrorData"* %136 to i8*
  call void @_ZdlPv(i8* %157) #9
  br label %158

158:                                              ; preds = %131, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #10
  br label %731

159:                                              ; preds = %117
  %160 = getelementptr inbounds %class.Result.462, %class.Result.462* %22, i64 0, i32 2, i32 0
  %161 = bitcast %struct.VkShaderModule_T** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 1, i32 4
  %164 = bitcast %struct.VkShaderModule_T** %163 to i64*
  store i64 %162, i64* %164, align 8
  %165 = getelementptr inbounds %class.Result.462, %class.Result.462* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %166 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %165, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %165, align 8
  %167 = icmp eq %"class.dawn_native::ErrorData"* %166, null
  br i1 %167, label %188, label %168

168:                                              ; preds = %159
  %169 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %166, i64 0, i32 2, i32 0, i32 0
  %170 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %169, align 8
  %171 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %170, null
  br i1 %171, label %177, label %172

172:                                              ; preds = %168
  %173 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %170 to i64
  %174 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %166, i64 0, i32 2, i32 0, i32 1
  %175 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %174 to i64*
  store i64 %173, i64* %175, align 8
  %176 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %170 to i8*
  call void @_ZdlPv(i8* %176) #9
  br label %177

177:                                              ; preds = %172, %168
  %178 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %166, i64 0, i32 1
  %179 = bitcast %"class.std::__1::basic_string"* %178 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %179, i64 0, i32 1, i32 0
  %181 = load i8, i8* %180, align 1
  %182 = icmp slt i8 %181, 0
  br i1 %182, label %183, label %186

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  call void @_ZdlPv(i8* %185) #9
  br label %186

186:                                              ; preds = %183, %177
  %187 = bitcast %"class.dawn_native::ErrorData"* %166 to i8*
  call void @_ZdlPv(i8* %187) #9
  br label %188

188:                                              ; preds = %159, %186
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #10
  br label %202

189:                                              ; preds = %3
  %190 = getelementptr inbounds %"struct.dawn_native::RenderPipelineDescriptor", %"struct.dawn_native::RenderPipelineDescriptor"* %2, i64 0, i32 3, i32 1
  %191 = bitcast %"class.dawn_native::ShaderModuleBase"** %190 to %"class.dawn_native::vulkan::ShaderModule"**
  %192 = load %"class.dawn_native::vulkan::ShaderModule"*, %"class.dawn_native::vulkan::ShaderModule"** %191, align 8
  %193 = tail call %struct.VkShaderModule_T* @_ZNK11dawn_native6vulkan12ShaderModule9GetHandleEv(%"class.dawn_native::vulkan::ShaderModule"* %192) #10
  %194 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 0, i32 4
  store %struct.VkShaderModule_T* %193, %struct.VkShaderModule_T** %194, align 8
  %195 = getelementptr inbounds %"struct.dawn_native::RenderPipelineDescriptor", %"struct.dawn_native::RenderPipelineDescriptor"* %2, i64 0, i32 7
  %196 = load %"struct.dawn_native::FragmentState"*, %"struct.dawn_native::FragmentState"** %195, align 8
  %197 = getelementptr inbounds %"struct.dawn_native::FragmentState", %"struct.dawn_native::FragmentState"* %196, i64 0, i32 1
  %198 = bitcast %"class.dawn_native::ShaderModuleBase"** %197 to %"class.dawn_native::vulkan::ShaderModule"**
  %199 = load %"class.dawn_native::vulkan::ShaderModule"*, %"class.dawn_native::vulkan::ShaderModule"** %198, align 8
  %200 = tail call %struct.VkShaderModule_T* @_ZNK11dawn_native6vulkan12ShaderModule9GetHandleEv(%"class.dawn_native::vulkan::ShaderModule"* %199) #10
  %201 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 1, i32 4
  store %struct.VkShaderModule_T* %200, %struct.VkShaderModule_T** %201, align 8
  br label %202

202:                                              ; preds = %188, %189
  %203 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 0
  %204 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 0, i32 0
  store i32 18, i32* %204, align 16
  %205 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 0, i32 1
  store i8* null, i8** %205, align 8
  %206 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 0, i32 2
  store i32 0, i32* %206, align 16
  %207 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 0, i32 3
  store i32 1, i32* %207, align 4
  %208 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 0, i32 6
  store %struct.VkSpecializationInfo* null, %struct.VkSpecializationInfo** %208, align 8
  %209 = getelementptr inbounds %"struct.dawn_native::RenderPipelineDescriptor", %"struct.dawn_native::RenderPipelineDescriptor"* %2, i64 0, i32 3, i32 2
  %210 = bitcast i8** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 0, i32 5
  %213 = bitcast i8** %212 to i64*
  store i64 %211, i64* %213, align 16
  %214 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 1, i32 0
  store i32 18, i32* %214, align 16
  %215 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 1, i32 1
  store i8* null, i8** %215, align 8
  %216 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 1, i32 2
  store i32 0, i32* %216, align 16
  %217 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 1, i32 3
  store i32 16, i32* %217, align 4
  %218 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 1, i32 6
  store %struct.VkSpecializationInfo* null, %struct.VkSpecializationInfo** %218, align 8
  %219 = getelementptr inbounds %"struct.dawn_native::RenderPipelineDescriptor", %"struct.dawn_native::RenderPipelineDescriptor"* %2, i64 0, i32 7
  %220 = load %"struct.dawn_native::FragmentState"*, %"struct.dawn_native::FragmentState"** %219, align 8
  %221 = getelementptr inbounds %"struct.dawn_native::FragmentState", %"struct.dawn_native::FragmentState"* %220, i64 0, i32 2
  %222 = bitcast i8** %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = getelementptr inbounds [2 x %struct.VkPipelineShaderStageCreateInfo], [2 x %struct.VkPipelineShaderStageCreateInfo]* %20, i64 0, i64 1, i32 5
  %225 = bitcast i8** %224 to i64*
  store i64 %223, i64* %225, align 16
  %226 = bitcast %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %226) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %226, i8 -86, i64 352, i1 false)
  %227 = bitcast %struct.VkPipelineVertexInputStateCreateInfo* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %227) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %227, i8 -86, i64 48, i1 false)
  call void @_ZN11dawn_native6vulkan14RenderPipeline22ComputeVertexInputDescEPNS1_54PipelineVertexInputStateCreateInfoTemporaryAllocationsE(%struct.VkPipelineVertexInputStateCreateInfo* nonnull sret %24, %"class.dawn_native::vulkan::RenderPipeline"* %1, %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations"* nonnull %23)
  %228 = bitcast %struct.VkPipelineInputAssemblyStateCreateInfo* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %228) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 -86, i64 32, i1 false)
  %229 = getelementptr inbounds %struct.VkPipelineInputAssemblyStateCreateInfo, %struct.VkPipelineInputAssemblyStateCreateInfo* %25, i64 0, i32 0
  store i32 20, i32* %229, align 8
  %230 = getelementptr inbounds %struct.VkPipelineInputAssemblyStateCreateInfo, %struct.VkPipelineInputAssemblyStateCreateInfo* %25, i64 0, i32 1
  store i8* null, i8** %230, align 8
  %231 = getelementptr inbounds %struct.VkPipelineInputAssemblyStateCreateInfo, %struct.VkPipelineInputAssemblyStateCreateInfo* %25, i64 0, i32 2
  store i32 0, i32* %231, align 8
  %232 = bitcast %"class.dawn_native::vulkan::RenderPipeline"* %1 to %"class.dawn_native::RenderPipelineBase"*
  %233 = call i32 @_ZNK11dawn_native18RenderPipelineBase20GetPrimitiveTopologyEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  %234 = getelementptr inbounds %struct.VkPipelineInputAssemblyStateCreateInfo, %struct.VkPipelineInputAssemblyStateCreateInfo* %25, i64 0, i32 3
  store i32 %233, i32* %234, align 4
  %235 = call i32 @_ZNK11dawn_native18RenderPipelineBase20GetPrimitiveTopologyEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.7, i64 0, i64 %236
  %238 = load i32, i32* %237, align 4
  %239 = getelementptr inbounds %struct.VkPipelineInputAssemblyStateCreateInfo, %struct.VkPipelineInputAssemblyStateCreateInfo* %25, i64 0, i32 4
  store i32 %238, i32* %239, align 8
  %240 = bitcast %struct.VkViewport* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %240) #10
  %241 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %26, i64 0, i32 4
  %242 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %26, i64 0, i32 5
  %243 = bitcast %struct.VkViewport* %26 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %243, align 16
  store float 0.000000e+00, float* %241, align 16
  store float 1.000000e+00, float* %242, align 4
  %244 = bitcast <4 x i32>* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %244) #10
  store <4 x i32> <i32 0, i32 0, i32 1, i32 1>, <4 x i32>* %27, align 16
  %245 = bitcast %struct.VkPipelineViewportStateCreateInfo* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %245) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %245, i8 -86, i64 40, i1 false)
  %246 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %28, i64 0, i32 0
  store i32 22, i32* %246, align 8
  %247 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %28, i64 0, i32 1
  store i8* null, i8** %247, align 8
  %248 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %28, i64 0, i32 2
  store i32 0, i32* %248, align 8
  %249 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %28, i64 0, i32 3
  store i32 1, i32* %249, align 4
  %250 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %28, i64 0, i32 4
  store %struct.VkViewport* %26, %struct.VkViewport** %250, align 8
  %251 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %28, i64 0, i32 5
  store i32 1, i32* %251, align 8
  %252 = getelementptr inbounds %struct.VkPipelineViewportStateCreateInfo, %struct.VkPipelineViewportStateCreateInfo* %28, i64 0, i32 6
  %253 = bitcast %struct.VkRect2D** %252 to <4 x i32>**
  store <4 x i32>* %27, <4 x i32>** %253, align 8
  %254 = bitcast %struct.VkPipelineRasterizationStateCreateInfo* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %254) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %254, i8* align 8 bitcast ({ i32, [4 x i8], i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, [4 x i8] }* @__const._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.rasterization to i8*), i64 64, i1 false)
  %255 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %29, i64 0, i32 0
  store i32 23, i32* %255, align 8
  %256 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %29, i64 0, i32 1
  %257 = bitcast i8** %256 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %257, i8 0, i64 24, i1 false)
  %258 = call i32 @_ZNK11dawn_native18RenderPipelineBase11GetCullModeEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  %259 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %29, i64 0, i32 6
  store i32 %258, i32* %259, align 8
  %260 = call i32 @_ZNK11dawn_native18RenderPipelineBase12GetFrontFaceEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  %261 = icmp ne i32 %260, 0
  %262 = zext i1 %261 to i32
  %263 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %29, i64 0, i32 7
  store i32 %262, i32* %263, align 4
  %264 = call zeroext i1 @_ZNK11dawn_native18RenderPipelineBase18IsDepthBiasEnabledEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  %265 = zext i1 %264 to i32
  %266 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %29, i64 0, i32 8
  store i32 %265, i32* %266, align 8
  %267 = call i32 @_ZNK11dawn_native18RenderPipelineBase12GetDepthBiasEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  %268 = sitofp i32 %267 to float
  %269 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %29, i64 0, i32 9
  store float %268, float* %269, align 4
  %270 = call float @_ZNK11dawn_native18RenderPipelineBase17GetDepthBiasClampEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  %271 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %29, i64 0, i32 10
  store float %270, float* %271, align 8
  %272 = call float @_ZNK11dawn_native18RenderPipelineBase22GetDepthBiasSlopeScaleEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  %273 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %29, i64 0, i32 11
  store float %272, float* %273, align 4
  %274 = getelementptr inbounds %struct.VkPipelineRasterizationStateCreateInfo, %struct.VkPipelineRasterizationStateCreateInfo* %29, i64 0, i32 12
  store float 1.000000e+00, float* %274, align 8
  %275 = bitcast %struct.VkPipelineMultisampleStateCreateInfo* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %275) #10
  %276 = bitcast %struct.VkPipelineMultisampleStateCreateInfo* %30 to i64*
  store i64 -6148914691236517206, i64* %276, align 8
  %277 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %30, i64 0, i32 0
  store i32 24, i32* %277, align 8
  %278 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %30, i64 0, i32 1
  store i8* null, i8** %278, align 8
  %279 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %30, i64 0, i32 2
  store i32 0, i32* %279, align 8
  %280 = call i32 @_ZNK11dawn_native18RenderPipelineBase14GetSampleCountEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  %281 = call i32 @_ZN11dawn_native6vulkan17VulkanSampleCountEj(i32 %280) #10
  %282 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %30, i64 0, i32 3
  store i32 %281, i32* %282, align 4
  %283 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %30, i64 0, i32 4
  store i32 0, i32* %283, align 8
  %284 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %30, i64 0, i32 5
  store float 0.000000e+00, float* %284, align 4
  %285 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %285) #10
  store i32 -1431655766, i32* %31, align 4
  %286 = call i32 @_ZNK11dawn_native18RenderPipelineBase13GetSampleMaskEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  store i32 %286, i32* %31, align 4
  %287 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %30, i64 0, i32 6
  store i32* %31, i32** %287, align 8
  %288 = call zeroext i1 @_ZNK11dawn_native18RenderPipelineBase24IsAlphaToCoverageEnabledEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  %289 = zext i1 %288 to i32
  %290 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %30, i64 0, i32 7
  store i32 %289, i32* %290, align 8
  %291 = getelementptr inbounds %struct.VkPipelineMultisampleStateCreateInfo, %struct.VkPipelineMultisampleStateCreateInfo* %30, i64 0, i32 8
  store i32 0, i32* %291, align 4
  %292 = bitcast %struct.VkPipelineDepthStencilStateCreateInfo* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %292) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %292, i8* align 8 bitcast ({ i32, [4 x i8], i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }* @__const._ZN11dawn_native6vulkan12_GLOBAL__N_123ComputeDepthStencilDescEPKNS_17DepthStencilStateE.depthStencilState to i8*), i64 104, i1 false)
  %293 = call %"struct.dawn_native::DepthStencilState"* @_ZNK11dawn_native18RenderPipelineBase20GetDepthStencilStateEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %292, i8* align 8 bitcast ({ i32, [4 x i8], i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }* @__const._ZN11dawn_native6vulkan12_GLOBAL__N_123ComputeDepthStencilDescEPKNS_17DepthStencilStateE.depthStencilState to i8*), i64 104, i1 false) #10
  %294 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 0
  store i32 25, i32* %294, align 8, !alias.scope !4
  %295 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 1
  store i8* null, i8** %295, align 8, !alias.scope !4
  %296 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 2
  store i32 0, i32* %296, align 8, !alias.scope !4
  %297 = getelementptr inbounds %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::DepthStencilState"* %293, i64 0, i32 3
  %298 = load i32, i32* %297, align 8, !noalias !4
  %299 = icmp eq i32 %298, 8
  %300 = getelementptr inbounds %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::DepthStencilState"* %293, i64 0, i32 2
  %301 = load i8, i8* %300, align 4, !range !7, !noalias !4
  %302 = zext i8 %301 to i32
  %303 = select i1 %299, i32 %302, i32 1
  %304 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 3
  store i32 %303, i32* %304, align 4, !alias.scope !4
  %305 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 4
  store i32 %302, i32* %305, align 8, !alias.scope !4
  %306 = call i32 @_ZN11dawn_native6vulkan17ToVulkanCompareOpEN4wgpu15CompareFunctionE(i32 %298) #10
  %307 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 5
  store i32 %306, i32* %307, align 4, !alias.scope !4
  %308 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 6
  store i32 0, i32* %308, align 8, !alias.scope !4
  %309 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 10
  store float 0.000000e+00, float* %309, align 8, !alias.scope !4
  %310 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 11
  store float 1.000000e+00, float* %310, align 4, !alias.scope !4
  %311 = call zeroext i1 @_ZN11dawn_native18StencilTestEnabledEPKNS_17DepthStencilStateE(%"struct.dawn_native::DepthStencilState"* %293) #10
  %312 = zext i1 %311 to i32
  %313 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 7
  store i32 %312, i32* %313, align 4, !alias.scope !4
  %314 = getelementptr inbounds %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::DepthStencilState"* %293, i64 0, i32 4, i32 1
  %315 = load i32, i32* %314, align 4, !noalias !4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.12, i64 0, i64 %316
  %318 = load i32, i32* %317, align 4
  %319 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 8, i32 0
  store i32 %318, i32* %319, align 8, !alias.scope !4
  %320 = getelementptr inbounds %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::DepthStencilState"* %293, i64 0, i32 4, i32 3
  %321 = load i32, i32* %320, align 4, !noalias !4
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.12, i64 0, i64 %322
  %324 = load i32, i32* %323, align 4
  %325 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 8, i32 1
  store i32 %324, i32* %325, align 4, !alias.scope !4
  %326 = getelementptr inbounds %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::DepthStencilState"* %293, i64 0, i32 4, i32 2
  %327 = load i32, i32* %326, align 4, !noalias !4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.12, i64 0, i64 %328
  %330 = load i32, i32* %329, align 4
  %331 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 8, i32 2
  store i32 %330, i32* %331, align 8, !alias.scope !4
  %332 = getelementptr inbounds %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::DepthStencilState"* %293, i64 0, i32 4, i32 0
  %333 = load i32, i32* %332, align 4, !noalias !4
  %334 = call i32 @_ZN11dawn_native6vulkan17ToVulkanCompareOpEN4wgpu15CompareFunctionE(i32 %333) #10
  %335 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 8, i32 3
  store i32 %334, i32* %335, align 4, !alias.scope !4
  %336 = getelementptr inbounds %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::DepthStencilState"* %293, i64 0, i32 5, i32 1
  %337 = load i32, i32* %336, align 4, !noalias !4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.12, i64 0, i64 %338
  %340 = load i32, i32* %339, align 4
  %341 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 9, i32 0
  store i32 %340, i32* %341, align 4, !alias.scope !4
  %342 = getelementptr inbounds %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::DepthStencilState"* %293, i64 0, i32 5, i32 3
  %343 = load i32, i32* %342, align 4, !noalias !4
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.12, i64 0, i64 %344
  %346 = load i32, i32* %345, align 4
  %347 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 9, i32 1
  store i32 %346, i32* %347, align 4, !alias.scope !4
  %348 = getelementptr inbounds %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::DepthStencilState"* %293, i64 0, i32 5, i32 2
  %349 = load i32, i32* %348, align 4, !noalias !4
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.12, i64 0, i64 %350
  %352 = load i32, i32* %351, align 4
  %353 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 9, i32 2
  store i32 %352, i32* %353, align 4, !alias.scope !4
  %354 = getelementptr inbounds %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::DepthStencilState"* %293, i64 0, i32 5, i32 0
  %355 = load i32, i32* %354, align 4, !noalias !4
  %356 = call i32 @_ZN11dawn_native6vulkan17ToVulkanCompareOpEN4wgpu15CompareFunctionE(i32 %355) #10
  %357 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 9, i32 3
  store i32 %356, i32* %357, align 4, !alias.scope !4
  %358 = getelementptr inbounds %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::DepthStencilState"* %293, i64 0, i32 6
  %359 = load i32, i32* %358, align 4, !noalias !4
  %360 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 8, i32 4
  store i32 %359, i32* %360, align 8, !alias.scope !4
  %361 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 9, i32 4
  store i32 %359, i32* %361, align 4, !alias.scope !4
  %362 = getelementptr inbounds %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::DepthStencilState"* %293, i64 0, i32 7
  %363 = load i32, i32* %362, align 8, !noalias !4
  %364 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 8, i32 5
  store i32 %363, i32* %364, align 4, !alias.scope !4
  %365 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 9, i32 5
  store i32 %363, i32* %365, align 4, !alias.scope !4
  %366 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 8, i32 6
  store i32 0, i32* %366, align 8, !alias.scope !4
  %367 = getelementptr inbounds %struct.VkPipelineDepthStencilStateCreateInfo, %struct.VkPipelineDepthStencilStateCreateInfo* %32, i64 0, i32 9, i32 6
  store i32 0, i32* %367, align 4, !alias.scope !4
  %368 = bitcast %"class.ityp::array.493"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %368) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %368, i8 -86, i64 128, i1 false)
  %369 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPipeline", %"class.dawn_native::vulkan::RenderPipeline"* %1, i64 0, i32 0, i32 0
  %370 = call dereferenceable(40) %"struct.dawn_native::ProgrammableStage"* @_ZNK11dawn_native12PipelineBase8GetStageENS_17SingleShaderStageE(%"class.dawn_native::PipelineBase"* %369, i32 1) #10
  %371 = getelementptr inbounds %"struct.dawn_native::ProgrammableStage", %"struct.dawn_native::ProgrammableStage"* %370, i64 0, i32 2
  %372 = load %"struct.dawn_native::EntryPointMetadata"*, %"struct.dawn_native::EntryPointMetadata"** %371, align 8
  %373 = call i64 @_ZNK11dawn_native18RenderPipelineBase23GetColorAttachmentsMaskEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  %374 = bitcast %"class.BitSetIterator<4, unsigned char>::Iterator"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %374) #10
  %375 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %34, i64 0, i32 0, i32 0, i32 0
  %376 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %34, i64 0, i32 1
  %377 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %34, i64 0, i32 2
  store i64 %373, i64* %375, align 8, !alias.scope !8
  %378 = bitcast i64* %376 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %378, i8 0, i64 16, i1 false) #10, !alias.scope !8
  %379 = and i64 %373, 15
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %414, label %381

381:                                              ; preds = %202
  %382 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %34 to i64
  %383 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  %384 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  %385 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  %386 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  %387 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  %388 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  %389 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  %390 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  %391 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  %392 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  br label %393

393:                                              ; preds = %405, %381
  %394 = phi i64 [ %373, %381 ], [ %407, %405 ]
  %395 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %396 = and i64 %395, %394
  %397 = and i64 %396, 4294967295
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %405, label %399

399:                                              ; preds = %393
  %400 = trunc i64 %396 to i32
  %401 = call i32 @_Z11ScanForwardj(i32 %400) #10
  %402 = zext i32 %401 to i64
  %403 = load i64, i64* %377, align 8, !alias.scope !8
  %404 = add i64 %403, %402
  br label %411

405:                                              ; preds = %393
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %383) #10, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %384) #10, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %385) #10, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %386) #10, !noalias !8
  store i64 %382, i64* %387, align 8, !noalias !11
  store i32 4, i32* %388, align 8, !noalias !11
  store i64 %382, i64* %389, align 8, !noalias !11
  store i32 4, i32* %390, align 8, !noalias !11
  store i64 %382, i64* %391, align 8, !noalias !11
  store i32 0, i32* %392, align 8, !noalias !11
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %384) #10, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %385) #10, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %386) #10, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %383) #10, !noalias !8
  %406 = load i64, i64* %375, align 8, !alias.scope !8
  %407 = and i64 %406, -16
  store i64 %407, i64* %375, align 8, !alias.scope !8
  %408 = load i64, i64* %377, align 8, !alias.scope !8
  %409 = add i64 %408, 32
  store i64 %409, i64* %377, align 8, !alias.scope !8
  %410 = icmp ult i64 %409, 4
  br i1 %410, label %393, label %411

411:                                              ; preds = %405, %399
  %412 = phi i64 [ %403, %399 ], [ %409, %405 ]
  %413 = phi i64 [ %404, %399 ], [ 0, %405 ]
  store i64 %413, i64* %376, align 8, !alias.scope !8
  br label %416

414:                                              ; preds = %202
  store i64 32, i64* %377, align 8, !alias.scope !8
  %415 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %34 to i64
  br label %416

416:                                              ; preds = %411, %414
  %417 = phi i64 [ %382, %411 ], [ %415, %414 ]
  %418 = phi i64 [ %413, %411 ], [ 0, %414 ]
  %419 = phi i64 [ %412, %411 ], [ 32, %414 ]
  %420 = getelementptr inbounds %"struct.dawn_native::EntryPointMetadata", %"struct.dawn_native::EntryPointMetadata"* %372, i64 0, i32 3, i32 0, i32 0, i32 0
  %421 = bitcast %"class.std::__1::__bit_iterator"* %15 to i8*
  %422 = bitcast %"class.std::__1::__bit_iterator"* %12 to i8*
  %423 = bitcast %"class.std::__1::__bit_iterator"* %13 to i8*
  %424 = bitcast %"class.std::__1::__bit_iterator"* %14 to i8*
  %425 = bitcast %"class.std::__1::__bit_iterator"* %12 to i64*
  %426 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %12, i64 0, i32 1
  %427 = bitcast %"class.std::__1::__bit_iterator"* %13 to i64*
  %428 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %13, i64 0, i32 1
  %429 = bitcast %"class.std::__1::__bit_iterator"* %14 to i64*
  %430 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %14, i64 0, i32 1
  br label %431

431:                                              ; preds = %607, %416
  %432 = phi i64 [ %609, %607 ], [ %418, %416 ]
  %433 = phi i64 [ %608, %607 ], [ %419, %416 ]
  %434 = icmp eq i64 %433, 32
  br i1 %434, label %435, label %523

435:                                              ; preds = %431
  %436 = load i64, i64* %375, align 8
  %437 = and i64 %436, 15
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %439, label %523

439:                                              ; preds = %435
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %374) #10
  %440 = bitcast %struct.VkPipelineColorBlendStateCreateInfo* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %440) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %440, i8* align 8 bitcast ({ i32, [4 x i8], i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }* @__const._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.colorBlend to i8*), i64 56, i1 false)
  %441 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %35, i64 0, i32 0
  store i32 26, i32* %441, align 8
  %442 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %35, i64 0, i32 1
  %443 = bitcast i8** %442 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %443, i8 0, i64 20, i1 false)
  %444 = call i64 @_ZNK11dawn_native18RenderPipelineBase23GetColorAttachmentsMaskEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  %445 = and i64 %444, 15
  %446 = call i64 @llvm.ctpop.i64(i64 %445) #10, !range !14
  %447 = trunc i64 %446 to i32
  %448 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %35, i64 0, i32 5
  store i32 %447, i32* %448, align 4
  %449 = getelementptr inbounds %"class.ityp::array.493", %"class.ityp::array.493"* %33, i64 0, i32 0, i32 0, i64 0
  %450 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %35, i64 0, i32 6
  store %struct.VkPipelineColorBlendAttachmentState* %449, %struct.VkPipelineColorBlendAttachmentState** %450, align 8
  %451 = getelementptr inbounds %struct.VkPipelineColorBlendStateCreateInfo, %struct.VkPipelineColorBlendStateCreateInfo* %35, i64 0, i32 7, i64 0
  %452 = bitcast [6 x i32]* %36 to i8*
  %453 = bitcast float* %451 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %453, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %452) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %452, i8* align 16 bitcast ([6 x i32]* @__const._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.dynamicStates to i8*), i64 24, i1 false)
  %454 = bitcast %struct.VkPipelineDynamicStateCreateInfo* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %454) #10
  %455 = bitcast %struct.VkPipelineDynamicStateCreateInfo* %37 to i64*
  store i64 -6148914691236517206, i64* %455, align 8
  %456 = getelementptr inbounds %struct.VkPipelineDynamicStateCreateInfo, %struct.VkPipelineDynamicStateCreateInfo* %37, i64 0, i32 0
  store i32 27, i32* %456, align 8
  %457 = getelementptr inbounds %struct.VkPipelineDynamicStateCreateInfo, %struct.VkPipelineDynamicStateCreateInfo* %37, i64 0, i32 1
  store i8* null, i8** %457, align 8
  %458 = getelementptr inbounds %struct.VkPipelineDynamicStateCreateInfo, %struct.VkPipelineDynamicStateCreateInfo* %37, i64 0, i32 2
  store i32 0, i32* %458, align 8
  %459 = getelementptr inbounds %struct.VkPipelineDynamicStateCreateInfo, %struct.VkPipelineDynamicStateCreateInfo* %37, i64 0, i32 3
  store i32 6, i32* %459, align 4
  %460 = getelementptr inbounds [6 x i32], [6 x i32]* %36, i64 0, i64 0
  %461 = getelementptr inbounds %struct.VkPipelineDynamicStateCreateInfo, %struct.VkPipelineDynamicStateCreateInfo* %37, i64 0, i32 4
  store i32* %460, i32** %461, align 8
  %462 = bitcast %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %462) #10
  %463 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %38, i64 0, i32 2
  %464 = bitcast %"class.ityp::array.441"* %463 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %464, i8 -86, i64 56, i1 false)
  %465 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %38, i64 0, i32 4
  store i8 0, i8* %465, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %462, i8 0, i64 16, i1 false) #10
  %466 = call i64 @_ZNK11dawn_native18RenderPipelineBase23GetColorAttachmentsMaskEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  %467 = bitcast %"class.BitSetIterator<4, unsigned char>::Iterator"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %467) #10
  %468 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %39, i64 0, i32 0, i32 0, i32 0
  %469 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %39, i64 0, i32 1
  %470 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %39, i64 0, i32 2
  store i64 %466, i64* %468, align 8, !alias.scope !15
  %471 = bitcast i64* %469 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %471, i8 0, i64 16, i1 false) #10, !alias.scope !15
  %472 = and i64 %466, 15
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %507, label %474

474:                                              ; preds = %439
  %475 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %39 to i64
  %476 = bitcast %"class.std::__1::__bit_iterator"* %11 to i8*
  %477 = bitcast %"class.std::__1::__bit_iterator"* %8 to i8*
  %478 = bitcast %"class.std::__1::__bit_iterator"* %9 to i8*
  %479 = bitcast %"class.std::__1::__bit_iterator"* %10 to i8*
  %480 = bitcast %"class.std::__1::__bit_iterator"* %8 to i64*
  %481 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %8, i64 0, i32 1
  %482 = bitcast %"class.std::__1::__bit_iterator"* %9 to i64*
  %483 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %9, i64 0, i32 1
  %484 = bitcast %"class.std::__1::__bit_iterator"* %10 to i64*
  %485 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %10, i64 0, i32 1
  br label %486

486:                                              ; preds = %498, %474
  %487 = phi i64 [ %466, %474 ], [ %500, %498 ]
  %488 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %489 = and i64 %488, %487
  %490 = and i64 %489, 4294967295
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %498, label %492

492:                                              ; preds = %486
  %493 = trunc i64 %489 to i32
  %494 = call i32 @_Z11ScanForwardj(i32 %493) #10
  %495 = zext i32 %494 to i64
  %496 = load i64, i64* %470, align 8, !alias.scope !15
  %497 = add i64 %496, %495
  br label %504

498:                                              ; preds = %486
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %476) #10, !noalias !15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %477) #10, !noalias !15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %478) #10, !noalias !15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %479) #10, !noalias !15
  store i64 %475, i64* %480, align 8, !noalias !18
  store i32 4, i32* %481, align 8, !noalias !18
  store i64 %475, i64* %482, align 8, !noalias !18
  store i32 4, i32* %483, align 8, !noalias !18
  store i64 %475, i64* %484, align 8, !noalias !18
  store i32 0, i32* %485, align 8, !noalias !18
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %11, %"class.std::__1::__bit_iterator"* nonnull %8, %"class.std::__1::__bit_iterator"* nonnull %9, %"class.std::__1::__bit_iterator"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %477) #10, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %478) #10, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %479) #10, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %476) #10, !noalias !15
  %499 = load i64, i64* %468, align 8, !alias.scope !15
  %500 = and i64 %499, -16
  store i64 %500, i64* %468, align 8, !alias.scope !15
  %501 = load i64, i64* %470, align 8, !alias.scope !15
  %502 = add i64 %501, 32
  store i64 %502, i64* %470, align 8, !alias.scope !15
  %503 = icmp ult i64 %502, 4
  br i1 %503, label %486, label %504

504:                                              ; preds = %498, %492
  %505 = phi i64 [ %496, %492 ], [ %502, %498 ]
  %506 = phi i64 [ %497, %492 ], [ 0, %498 ]
  store i64 %506, i64* %469, align 8, !alias.scope !15
  br label %509

507:                                              ; preds = %439
  store i64 32, i64* %470, align 8, !alias.scope !15
  %508 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %39 to i64
  br label %509

509:                                              ; preds = %504, %507
  %510 = phi i64 [ %475, %504 ], [ %508, %507 ]
  %511 = phi i64 [ %506, %504 ], [ 0, %507 ]
  %512 = phi i64 [ %505, %504 ], [ 32, %507 ]
  %513 = bitcast %"class.std::__1::__bit_iterator"* %19 to i8*
  %514 = bitcast %"class.std::__1::__bit_iterator"* %16 to i8*
  %515 = bitcast %"class.std::__1::__bit_iterator"* %17 to i8*
  %516 = bitcast %"class.std::__1::__bit_iterator"* %18 to i8*
  %517 = bitcast %"class.std::__1::__bit_iterator"* %16 to i64*
  %518 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %16, i64 0, i32 1
  %519 = bitcast %"class.std::__1::__bit_iterator"* %17 to i64*
  %520 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %17, i64 0, i32 1
  %521 = bitcast %"class.std::__1::__bit_iterator"* %18 to i64*
  %522 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %18, i64 0, i32 1
  br label %610

523:                                              ; preds = %435, %431
  %524 = trunc i64 %432 to i8
  %525 = call %"struct.dawn_native::ColorTargetState"* @_ZNK11dawn_native18RenderPipelineBase19GetColorTargetStateEh(%"class.dawn_native::RenderPipelineBase"* %232, i8 zeroext %524) #10
  %526 = and i64 %432, 255
  %527 = shl i64 1, %526
  %528 = load i64, i64* %420, align 8
  %529 = and i64 %528, %527
  %530 = icmp eq i64 %529, 0
  %531 = getelementptr inbounds %"struct.dawn_native::ColorTargetState", %"struct.dawn_native::ColorTargetState"* %525, i64 0, i32 3
  %532 = load %"struct.dawn_native::BlendState"*, %"struct.dawn_native::BlendState"** %531, align 8, !noalias !21
  %533 = icmp ne %"struct.dawn_native::BlendState"* %532, null
  %534 = zext i1 %533 to i32
  br i1 %533, label %535, label %560

535:                                              ; preds = %523
  %536 = getelementptr inbounds %"struct.dawn_native::BlendState", %"struct.dawn_native::BlendState"* %532, i64 0, i32 0, i32 1
  %537 = load i32, i32* %536, align 4, !noalias !21
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds [13 x i32], [13 x i32]* @switch.table._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.11, i64 0, i64 %538
  %540 = load i32, i32* %539, align 4
  %541 = getelementptr inbounds %"struct.dawn_native::BlendState", %"struct.dawn_native::BlendState"* %532, i64 0, i32 0, i32 2
  %542 = load i32, i32* %541, align 4, !noalias !21
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds [13 x i32], [13 x i32]* @switch.table._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.11, i64 0, i64 %543
  %545 = load i32, i32* %544, align 4
  %546 = getelementptr inbounds %"struct.dawn_native::BlendState", %"struct.dawn_native::BlendState"* %532, i64 0, i32 0, i32 0
  %547 = load i32, i32* %546, align 4, !noalias !21
  %548 = getelementptr inbounds %"struct.dawn_native::BlendState", %"struct.dawn_native::BlendState"* %532, i64 0, i32 1, i32 1
  %549 = load i32, i32* %548, align 4, !noalias !21
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds [13 x i32], [13 x i32]* @switch.table._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.11, i64 0, i64 %550
  %552 = load i32, i32* %551, align 4
  %553 = getelementptr inbounds %"struct.dawn_native::BlendState", %"struct.dawn_native::BlendState"* %532, i64 0, i32 1, i32 2
  %554 = load i32, i32* %553, align 4, !noalias !21
  %555 = sext i32 %554 to i64
  %556 = getelementptr inbounds [13 x i32], [13 x i32]* @switch.table._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE.11, i64 0, i64 %555
  %557 = load i32, i32* %556, align 4
  %558 = getelementptr inbounds %"struct.dawn_native::BlendState", %"struct.dawn_native::BlendState"* %532, i64 0, i32 1, i32 0
  %559 = load i32, i32* %558, align 4, !noalias !21
  br label %560

560:                                              ; preds = %535, %523
  %561 = phi i32 [ 0, %523 ], [ %557, %535 ]
  %562 = phi i32 [ 1, %523 ], [ %552, %535 ]
  %563 = phi i32 [ 0, %523 ], [ %547, %535 ]
  %564 = phi i32 [ 0, %523 ], [ %545, %535 ]
  %565 = phi i32 [ 1, %523 ], [ %540, %535 ]
  %566 = phi i32 [ 0, %523 ], [ %559, %535 ]
  %567 = getelementptr inbounds %"struct.dawn_native::ColorTargetState", %"struct.dawn_native::ColorTargetState"* %525, i64 0, i32 4
  %568 = load i32, i32* %567, align 8, !noalias !21
  %569 = select i1 %530, i32 0, i32 %568
  %570 = getelementptr inbounds %"class.ityp::array.493", %"class.ityp::array.493"* %33, i64 0, i32 0, i32 0, i64 %526, i32 0
  store i32 %534, i32* %570, align 4
  %571 = getelementptr inbounds %"class.ityp::array.493", %"class.ityp::array.493"* %33, i64 0, i32 0, i32 0, i64 %526, i32 1
  store i32 %565, i32* %571, align 4
  %572 = getelementptr inbounds %"class.ityp::array.493", %"class.ityp::array.493"* %33, i64 0, i32 0, i32 0, i64 %526, i32 2
  store i32 %564, i32* %572, align 4
  %573 = getelementptr inbounds %"class.ityp::array.493", %"class.ityp::array.493"* %33, i64 0, i32 0, i32 0, i64 %526, i32 3
  store i32 %563, i32* %573, align 4
  %574 = getelementptr inbounds %"class.ityp::array.493", %"class.ityp::array.493"* %33, i64 0, i32 0, i32 0, i64 %526, i32 4
  store i32 %562, i32* %574, align 4
  %575 = getelementptr inbounds %"class.ityp::array.493", %"class.ityp::array.493"* %33, i64 0, i32 0, i32 0, i64 %526, i32 5
  store i32 %561, i32* %575, align 4
  %576 = getelementptr inbounds %"class.ityp::array.493", %"class.ityp::array.493"* %33, i64 0, i32 0, i32 0, i64 %526, i32 6
  store i32 %566, i32* %576, align 4
  %577 = getelementptr inbounds %"class.ityp::array.493", %"class.ityp::array.493"* %33, i64 0, i32 0, i32 0, i64 %526, i32 7
  store i32 %569, i32* %577, align 4
  %578 = load i64, i64* %376, align 8
  %579 = load i64, i64* %377, align 8
  %580 = sub i64 %578, %579
  %581 = icmp ugt i64 %580, 3
  br i1 %581, label %582, label %583

582:                                              ; preds = %560
  call void @abort() #11
  unreachable

583:                                              ; preds = %560
  %584 = shl i64 1, %580
  %585 = xor i64 %584, -1
  %586 = load i64, i64* %375, align 8
  %587 = and i64 %586, %585
  store i64 %587, i64* %375, align 8
  %588 = icmp ult i64 %579, 4
  br i1 %588, label %589, label %607

589:                                              ; preds = %583, %601
  %590 = phi i64 [ %603, %601 ], [ %587, %583 ]
  %591 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %592 = and i64 %591, %590
  %593 = and i64 %592, 4294967295
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %601, label %595

595:                                              ; preds = %589
  %596 = trunc i64 %592 to i32
  %597 = call i32 @_Z11ScanForwardj(i32 %596) #10
  %598 = zext i32 %597 to i64
  %599 = load i64, i64* %377, align 8
  %600 = add i64 %599, %598
  br label %607

601:                                              ; preds = %589
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %421) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %422) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %423) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %424) #10
  store i64 %417, i64* %425, align 8, !noalias !24
  store i32 4, i32* %426, align 8, !noalias !24
  store i64 %417, i64* %427, align 8, !noalias !24
  store i32 4, i32* %428, align 8, !noalias !24
  store i64 %417, i64* %429, align 8, !noalias !24
  store i32 0, i32* %430, align 8, !noalias !24
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %15, %"class.std::__1::__bit_iterator"* nonnull %12, %"class.std::__1::__bit_iterator"* nonnull %13, %"class.std::__1::__bit_iterator"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %422) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %423) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %424) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %421) #10
  %602 = load i64, i64* %375, align 8
  %603 = and i64 %602, -16
  store i64 %603, i64* %375, align 8
  %604 = load i64, i64* %377, align 8
  %605 = add i64 %604, 32
  store i64 %605, i64* %377, align 8
  %606 = icmp ult i64 %605, 4
  br i1 %606, label %589, label %607

607:                                              ; preds = %601, %583, %595
  %608 = phi i64 [ %599, %595 ], [ %579, %583 ], [ %605, %601 ]
  %609 = phi i64 [ %600, %595 ], [ 0, %583 ], [ 0, %601 ]
  store i64 %609, i64* %376, align 8
  br label %431

610:                                              ; preds = %652, %509
  %611 = phi i64 [ %654, %652 ], [ %511, %509 ]
  %612 = phi i64 [ %653, %652 ], [ %512, %509 ]
  %613 = icmp eq i64 %612, 32
  br i1 %613, label %614, label %620

614:                                              ; preds = %610
  %615 = load i64, i64* %468, align 8
  %616 = and i64 %615, 15
  %617 = icmp eq i64 %616, 0
  br i1 %617, label %618, label %620

618:                                              ; preds = %614
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %467) #10
  %619 = call zeroext i1 @_ZNK11dawn_native18RenderPipelineBase25HasDepthStencilAttachmentEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  br i1 %619, label %655, label %657

620:                                              ; preds = %614, %610
  %621 = trunc i64 %611 to i8
  %622 = call i32 @_ZNK11dawn_native18RenderPipelineBase24GetColorAttachmentFormatEh(%"class.dawn_native::RenderPipelineBase"* %232, i8 zeroext %621) #10
  call void @_ZN11dawn_native6vulkan20RenderPassCacheQuery8SetColorEhN4wgpu13TextureFormatENS2_6LoadOpEb(%"struct.dawn_native::vulkan::RenderPassCacheQuery"* nonnull %38, i8 zeroext %621, i32 %622, i32 1, i1 zeroext false) #10
  %623 = load i64, i64* %469, align 8
  %624 = load i64, i64* %470, align 8
  %625 = sub i64 %623, %624
  %626 = icmp ugt i64 %625, 3
  br i1 %626, label %627, label %628

627:                                              ; preds = %620
  call void @abort() #11
  unreachable

628:                                              ; preds = %620
  %629 = shl i64 1, %625
  %630 = xor i64 %629, -1
  %631 = load i64, i64* %468, align 8
  %632 = and i64 %631, %630
  store i64 %632, i64* %468, align 8
  %633 = icmp ult i64 %624, 4
  br i1 %633, label %634, label %652

634:                                              ; preds = %628, %646
  %635 = phi i64 [ %648, %646 ], [ %632, %628 ]
  %636 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %637 = and i64 %636, %635
  %638 = and i64 %637, 4294967295
  %639 = icmp eq i64 %638, 0
  br i1 %639, label %646, label %640

640:                                              ; preds = %634
  %641 = trunc i64 %637 to i32
  %642 = call i32 @_Z11ScanForwardj(i32 %641) #10
  %643 = zext i32 %642 to i64
  %644 = load i64, i64* %470, align 8
  %645 = add i64 %644, %643
  br label %652

646:                                              ; preds = %634
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %513) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %514) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %515) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %516) #10
  store i64 %510, i64* %517, align 8, !noalias !27
  store i32 4, i32* %518, align 8, !noalias !27
  store i64 %510, i64* %519, align 8, !noalias !27
  store i32 4, i32* %520, align 8, !noalias !27
  store i64 %510, i64* %521, align 8, !noalias !27
  store i32 0, i32* %522, align 8, !noalias !27
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %19, %"class.std::__1::__bit_iterator"* nonnull %16, %"class.std::__1::__bit_iterator"* nonnull %17, %"class.std::__1::__bit_iterator"* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %514) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %515) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %516) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %513) #10
  %647 = load i64, i64* %468, align 8
  %648 = and i64 %647, -16
  store i64 %648, i64* %468, align 8
  %649 = load i64, i64* %470, align 8
  %650 = add i64 %649, 32
  store i64 %650, i64* %470, align 8
  %651 = icmp ult i64 %650, 4
  br i1 %651, label %634, label %652

652:                                              ; preds = %646, %628, %640
  %653 = phi i64 [ %644, %640 ], [ %624, %628 ], [ %650, %646 ]
  %654 = phi i64 [ %645, %640 ], [ 0, %628 ], [ 0, %646 ]
  store i64 %654, i64* %469, align 8
  br label %610

655:                                              ; preds = %618
  %656 = call i32 @_ZNK11dawn_native18RenderPipelineBase21GetDepthStencilFormatEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  call void @_ZN11dawn_native6vulkan20RenderPassCacheQuery15SetDepthStencilEN4wgpu13TextureFormatENS2_6LoadOpES4_(%"struct.dawn_native::vulkan::RenderPassCacheQuery"* nonnull %38, i32 %656, i32 1, i32 1) #10
  br label %657

657:                                              ; preds = %655, %618
  %658 = call i32 @_ZNK11dawn_native18RenderPipelineBase14GetSampleCountEv(%"class.dawn_native::RenderPipelineBase"* %232) #10
  call void @_ZN11dawn_native6vulkan20RenderPassCacheQuery14SetSampleCountEj(%"struct.dawn_native::vulkan::RenderPassCacheQuery"* nonnull %38, i32 %658) #10
  %659 = bitcast %class.Result.498* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %659) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %659, i8 -86, i64 24, i1 false)
  %660 = call %"class.dawn_native::vulkan::RenderPassCache"* @_ZNK11dawn_native6vulkan6Device18GetRenderPassCacheEv(%"class.dawn_native::vulkan::Device"* %44) #10
  call void @_ZN11dawn_native6vulkan15RenderPassCache13GetRenderPassERKNS0_20RenderPassCacheQueryE(%class.Result.498* nonnull sret %40, %"class.dawn_native::vulkan::RenderPassCache"* %660, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* nonnull dereferenceable(72) %38) #10
  %661 = getelementptr inbounds %class.Result.498, %class.Result.498* %40, i64 0, i32 0
  %662 = load i32, i32* %661, align 8
  %663 = icmp eq i32 %662, 1
  store i32 2, i32* %661, align 8
  br i1 %663, label %664, label %669, !prof !3

664:                                              ; preds = %657
  %665 = getelementptr inbounds %class.Result.498, %class.Result.498* %40, i64 0, i32 1, i32 0, i32 0, i32 0
  %666 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %665, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %665, align 8
  %667 = ptrtoint %"class.dawn_native::ErrorData"* %666 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %666, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan14RenderPipeline10InitializeEPKNS_24RenderPipelineDescriptorE, i64 0, i64 0), i32 499) #10
  %668 = bitcast %class.Result.448* %0 to i64*
  store i64 %667, i64* %668, align 8
  br label %672

669:                                              ; preds = %657
  %670 = getelementptr inbounds %class.Result.498, %class.Result.498* %40, i64 0, i32 2, i32 0
  %671 = load %struct.VkRenderPass_T*, %struct.VkRenderPass_T** %670, align 8
  br label %672

672:                                              ; preds = %669, %664
  %673 = phi %struct.VkRenderPass_T* [ null, %664 ], [ %671, %669 ]
  %674 = phi i32 [ 1, %664 ], [ 0, %669 ]
  %675 = getelementptr inbounds %class.Result.498, %class.Result.498* %40, i64 0, i32 1, i32 0, i32 0, i32 0
  %676 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %675, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %675, align 8
  %677 = icmp eq %"class.dawn_native::ErrorData"* %676, null
  br i1 %677, label %698, label %678

678:                                              ; preds = %672
  %679 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %676, i64 0, i32 2, i32 0, i32 0
  %680 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %679, align 8
  %681 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %680, null
  br i1 %681, label %687, label %682

682:                                              ; preds = %678
  %683 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %680 to i64
  %684 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %676, i64 0, i32 2, i32 0, i32 1
  %685 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %684 to i64*
  store i64 %683, i64* %685, align 8
  %686 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %680 to i8*
  call void @_ZdlPv(i8* %686) #9
  br label %687

687:                                              ; preds = %682, %678
  %688 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %676, i64 0, i32 1
  %689 = bitcast %"class.std::__1::basic_string"* %688 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %690 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %689, i64 0, i32 1, i32 0
  %691 = load i8, i8* %690, align 1
  %692 = icmp slt i8 %691, 0
  br i1 %692, label %693, label %696

693:                                              ; preds = %687
  %694 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %688, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %695 = load i8*, i8** %694, align 8
  call void @_ZdlPv(i8* %695) #9
  br label %696

696:                                              ; preds = %693, %687
  %697 = bitcast %"class.dawn_native::ErrorData"* %676 to i8*
  call void @_ZdlPv(i8* %697) #9
  br label %698

698:                                              ; preds = %672, %696
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %659) #10
  %699 = icmp eq i32 %674, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %462) #10
  br i1 %699, label %700, label %730

700:                                              ; preds = %698
  %701 = bitcast %struct.VkGraphicsPipelineCreateInfo* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %701) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %701, i8 -86, i64 144, i1 false)
  %702 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 0
  store i32 28, i32* %702, align 8
  %703 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 1
  store i8* null, i8** %703, align 8
  %704 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 2
  store i32 0, i32* %704, align 8
  %705 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 3
  store i32 2, i32* %705, align 4
  %706 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 4
  store %struct.VkPipelineShaderStageCreateInfo* %203, %struct.VkPipelineShaderStageCreateInfo** %706, align 8
  %707 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 5
  store %struct.VkPipelineVertexInputStateCreateInfo* %24, %struct.VkPipelineVertexInputStateCreateInfo** %707, align 8
  %708 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 6
  store %struct.VkPipelineInputAssemblyStateCreateInfo* %25, %struct.VkPipelineInputAssemblyStateCreateInfo** %708, align 8
  %709 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 7
  store %struct.VkPipelineTessellationStateCreateInfo* null, %struct.VkPipelineTessellationStateCreateInfo** %709, align 8
  %710 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 8
  store %struct.VkPipelineViewportStateCreateInfo* %28, %struct.VkPipelineViewportStateCreateInfo** %710, align 8
  %711 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 9
  store %struct.VkPipelineRasterizationStateCreateInfo* %29, %struct.VkPipelineRasterizationStateCreateInfo** %711, align 8
  %712 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 10
  store %struct.VkPipelineMultisampleStateCreateInfo* %30, %struct.VkPipelineMultisampleStateCreateInfo** %712, align 8
  %713 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 11
  store %struct.VkPipelineDepthStencilStateCreateInfo* %32, %struct.VkPipelineDepthStencilStateCreateInfo** %713, align 8
  %714 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 12
  store %struct.VkPipelineColorBlendStateCreateInfo* %35, %struct.VkPipelineColorBlendStateCreateInfo** %714, align 8
  %715 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 13
  store %struct.VkPipelineDynamicStateCreateInfo* %37, %struct.VkPipelineDynamicStateCreateInfo** %715, align 8
  %716 = call %"class.dawn_native::PipelineLayoutBase"* @_ZN11dawn_native12PipelineBase9GetLayoutEv(%"class.dawn_native::PipelineBase"* %369) #10
  %717 = bitcast %"class.dawn_native::PipelineLayoutBase"* %716 to %"class.dawn_native::vulkan::PipelineLayout"*
  %718 = call %struct.VkPipelineLayout_T* @_ZNK11dawn_native6vulkan14PipelineLayout9GetHandleEv(%"class.dawn_native::vulkan::PipelineLayout"* %717) #10
  %719 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 14
  store %struct.VkPipelineLayout_T* %718, %struct.VkPipelineLayout_T** %719, align 8
  %720 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 15
  store %struct.VkRenderPass_T* %673, %struct.VkRenderPass_T** %720, align 8
  %721 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 16
  store i32 0, i32* %721, align 8
  %722 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 17
  store %struct.VkPipeline_T* null, %struct.VkPipeline_T** %722, align 8
  %723 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %41, i64 0, i32 18
  store i32 -1, i32* %723, align 8
  %724 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %43, i64 1, i32 18, i32 0, i64 8, i32 6, i32 0, i64 1
  %725 = bitcast %"struct.dawn_native::AspectInfo"* %724 to i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)**
  %726 = load i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)** %725, align 8
  %727 = call %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"* %44) #10
  %728 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPipeline", %"class.dawn_native::vulkan::RenderPipeline"* %1, i64 0, i32 1, i32 0
  %729 = call i32 %726(%struct.VkDevice_T* %727, %struct.VkPipelineCache_T* null, i32 1, %struct.VkGraphicsPipelineCreateInfo* nonnull %41, %struct.VkAllocationCallbacks* null, %struct.VkPipeline_T** %728) #10
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.448* sret %0, i32 %729, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #10
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %701) #10
  br label %730

730:                                              ; preds = %698, %700
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %454) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %452) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %440) #10
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %368) #10
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %292) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %285) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %275) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %254) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %245) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %244) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %240) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %228) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %227) #10
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %226) #10
  br label %731

731:                                              ; preds = %158, %87, %730
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %45) #10
  ret void
}

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN11dawn_native6vulkan12ShaderModule26GetTransformedModuleHandleEPKcPNS0_14PipelineLayoutE(%class.Result.462* sret, %"class.dawn_native::vulkan::ShaderModule"*, i8*, %"class.dawn_native::vulkan::PipelineLayout"*) local_unnamed_addr #3

declare %"class.dawn_native::PipelineLayoutBase"* @_ZN11dawn_native12PipelineBase9GetLayoutEv(%"class.dawn_native::PipelineBase"*) local_unnamed_addr #3

declare %struct.VkShaderModule_T* @_ZNK11dawn_native6vulkan12ShaderModule9GetHandleEv(%"class.dawn_native::vulkan::ShaderModule"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan14RenderPipeline22ComputeVertexInputDescEPNS1_54PipelineVertexInputStateCreateInfoTemporaryAllocationsE(%struct.VkPipelineVertexInputStateCreateInfo* noalias nocapture sret, %"class.dawn_native::vulkan::RenderPipeline"*, %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator.505", align 8
  %5 = alloca %"class.std::__1::__bit_iterator.505", align 8
  %6 = alloca %"class.std::__1::__bit_iterator.505", align 8
  %7 = alloca %"class.std::__1::__bit_iterator.505", align 8
  %8 = alloca %"class.std::__1::__bit_iterator.510", align 8
  %9 = alloca %"class.std::__1::__bit_iterator.510", align 8
  %10 = alloca %"class.std::__1::__bit_iterator.510", align 8
  %11 = alloca %"class.std::__1::__bit_iterator.510", align 8
  %12 = alloca %"class.std::__1::__bit_iterator.505", align 8
  %13 = alloca %"class.std::__1::__bit_iterator.505", align 8
  %14 = alloca %"class.std::__1::__bit_iterator.505", align 8
  %15 = alloca %"class.std::__1::__bit_iterator.505", align 8
  %16 = alloca %"class.std::__1::__bit_iterator.510", align 8
  %17 = alloca %"class.std::__1::__bit_iterator.510", align 8
  %18 = alloca %"class.std::__1::__bit_iterator.510", align 8
  %19 = alloca %"class.std::__1::__bit_iterator.510", align 8
  %20 = alloca %"class.BitSetIterator<8, unsigned char>::Iterator", align 8
  %21 = alloca %"class.BitSetIterator<16, unsigned char>::Iterator", align 8
  %22 = bitcast %"class.dawn_native::vulkan::RenderPipeline"* %1 to %"class.dawn_native::RenderPipelineBase"*
  %23 = tail call dereferenceable(8) %"class.ityp::bitset.434"* @_ZNK11dawn_native18RenderPipelineBase24GetVertexBufferSlotsUsedEv(%"class.dawn_native::RenderPipelineBase"* %22) #10
  %24 = getelementptr inbounds %"class.ityp::bitset.434", %"class.ityp::bitset.434"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8, !noalias !30
  %26 = bitcast %"class.BitSetIterator<8, unsigned char>::Iterator"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.BitSetIterator<8, unsigned char>::Iterator", %"class.BitSetIterator<8, unsigned char>::Iterator"* %20, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.BitSetIterator<8, unsigned char>::Iterator", %"class.BitSetIterator<8, unsigned char>::Iterator"* %20, i64 0, i32 1
  %29 = getelementptr inbounds %"class.BitSetIterator<8, unsigned char>::Iterator", %"class.BitSetIterator<8, unsigned char>::Iterator"* %20, i64 0, i32 2
  store i64 %25, i64* %27, align 8, !alias.scope !33
  %30 = bitcast i64* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #10, !alias.scope !33
  %31 = and i64 %25, 255
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %66, label %33

33:                                               ; preds = %3
  %34 = ptrtoint %"class.BitSetIterator<8, unsigned char>::Iterator"* %20 to i64
  %35 = bitcast %"class.std::__1::__bit_iterator.505"* %15 to i8*
  %36 = bitcast %"class.std::__1::__bit_iterator.505"* %12 to i8*
  %37 = bitcast %"class.std::__1::__bit_iterator.505"* %13 to i8*
  %38 = bitcast %"class.std::__1::__bit_iterator.505"* %14 to i8*
  %39 = bitcast %"class.std::__1::__bit_iterator.505"* %12 to i64*
  %40 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %12, i64 0, i32 1
  %41 = bitcast %"class.std::__1::__bit_iterator.505"* %13 to i64*
  %42 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %13, i64 0, i32 1
  %43 = bitcast %"class.std::__1::__bit_iterator.505"* %14 to i64*
  %44 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %14, i64 0, i32 1
  br label %45

45:                                               ; preds = %57, %33
  %46 = phi i64 [ %25, %33 ], [ %59, %57 ]
  %47 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm8EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %48 = and i64 %47, %46
  %49 = and i64 %48, 4294967295
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %45
  %52 = trunc i64 %48 to i32
  %53 = call i32 @_Z11ScanForwardj(i32 %52) #10
  %54 = zext i32 %53 to i64
  %55 = load i64, i64* %29, align 8, !alias.scope !33
  %56 = add i64 %55, %54
  br label %63

57:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #10, !noalias !33
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #10, !noalias !33
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #10, !noalias !33
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #10, !noalias !33
  store i64 %34, i64* %39, align 8, !noalias !36
  store i32 8, i32* %40, align 8, !noalias !36
  store i64 %34, i64* %41, align 8, !noalias !36
  store i32 8, i32* %42, align 8, !noalias !36
  store i64 %34, i64* %43, align 8, !noalias !36
  store i32 0, i32* %44, align 8, !noalias !36
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.505"* nonnull sret %15, %"class.std::__1::__bit_iterator.505"* nonnull %12, %"class.std::__1::__bit_iterator.505"* nonnull %13, %"class.std::__1::__bit_iterator.505"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #10, !noalias !33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #10, !noalias !33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #10, !noalias !33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #10, !noalias !33
  %58 = load i64, i64* %27, align 8, !alias.scope !33
  %59 = and i64 %58, -256
  store i64 %59, i64* %27, align 8, !alias.scope !33
  %60 = load i64, i64* %29, align 8, !alias.scope !33
  %61 = add i64 %60, 32
  store i64 %61, i64* %29, align 8, !alias.scope !33
  %62 = icmp ult i64 %61, 8
  br i1 %62, label %45, label %63

63:                                               ; preds = %57, %51
  %64 = phi i64 [ %55, %51 ], [ %61, %57 ]
  %65 = phi i64 [ %56, %51 ], [ 0, %57 ]
  store i64 %65, i64* %28, align 8, !alias.scope !33
  br label %68

66:                                               ; preds = %3
  store i64 32, i64* %29, align 8, !alias.scope !33
  %67 = ptrtoint %"class.BitSetIterator<8, unsigned char>::Iterator"* %20 to i64
  br label %68

68:                                               ; preds = %63, %66
  %69 = phi i64 [ %34, %63 ], [ %67, %66 ]
  %70 = phi i64 [ %65, %63 ], [ 0, %66 ]
  %71 = phi i64 [ %64, %63 ], [ 32, %66 ]
  %72 = bitcast %"class.std::__1::__bit_iterator.505"* %7 to i8*
  %73 = bitcast %"class.std::__1::__bit_iterator.505"* %4 to i8*
  %74 = bitcast %"class.std::__1::__bit_iterator.505"* %5 to i8*
  %75 = bitcast %"class.std::__1::__bit_iterator.505"* %6 to i8*
  %76 = bitcast %"class.std::__1::__bit_iterator.505"* %4 to i64*
  %77 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %4, i64 0, i32 1
  %78 = bitcast %"class.std::__1::__bit_iterator.505"* %5 to i64*
  %79 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %5, i64 0, i32 1
  %80 = bitcast %"class.std::__1::__bit_iterator.505"* %6 to i64*
  %81 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %6, i64 0, i32 1
  br label %82

82:                                               ; preds = %197, %68
  %83 = phi i64 [ %70, %68 ], [ %199, %197 ]
  %84 = phi i64 [ %71, %68 ], [ %198, %197 ]
  %85 = phi i32 [ 0, %68 ], [ %167, %197 ]
  %86 = icmp eq i64 %84, 32
  br i1 %86, label %87, label %151

87:                                               ; preds = %82
  %88 = load i64, i64* %27, align 8
  %89 = and i64 %88, 255
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %151

91:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  %92 = call dereferenceable(8) %"class.ityp::bitset.431"* @_ZNK11dawn_native18RenderPipelineBase25GetAttributeLocationsUsedEv(%"class.dawn_native::RenderPipelineBase"* %22) #10
  %93 = getelementptr inbounds %"class.ityp::bitset.431", %"class.ityp::bitset.431"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = load i64, i64* %93, align 8, !noalias !39
  %95 = bitcast %"class.BitSetIterator<16, unsigned char>::Iterator"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #10
  %96 = getelementptr inbounds %"class.BitSetIterator<16, unsigned char>::Iterator", %"class.BitSetIterator<16, unsigned char>::Iterator"* %21, i64 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.BitSetIterator<16, unsigned char>::Iterator", %"class.BitSetIterator<16, unsigned char>::Iterator"* %21, i64 0, i32 1
  %98 = getelementptr inbounds %"class.BitSetIterator<16, unsigned char>::Iterator", %"class.BitSetIterator<16, unsigned char>::Iterator"* %21, i64 0, i32 2
  store i64 %94, i64* %96, align 8, !alias.scope !42
  %99 = bitcast i64* %97 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false) #10, !alias.scope !42
  %100 = and i64 %94, 65535
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %135, label %102

102:                                              ; preds = %91
  %103 = ptrtoint %"class.BitSetIterator<16, unsigned char>::Iterator"* %21 to i64
  %104 = bitcast %"class.std::__1::__bit_iterator.510"* %11 to i8*
  %105 = bitcast %"class.std::__1::__bit_iterator.510"* %8 to i8*
  %106 = bitcast %"class.std::__1::__bit_iterator.510"* %9 to i8*
  %107 = bitcast %"class.std::__1::__bit_iterator.510"* %10 to i8*
  %108 = bitcast %"class.std::__1::__bit_iterator.510"* %8 to i64*
  %109 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %8, i64 0, i32 1
  %110 = bitcast %"class.std::__1::__bit_iterator.510"* %9 to i64*
  %111 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %9, i64 0, i32 1
  %112 = bitcast %"class.std::__1::__bit_iterator.510"* %10 to i64*
  %113 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %10, i64 0, i32 1
  br label %114

114:                                              ; preds = %126, %102
  %115 = phi i64 [ %94, %102 ], [ %128, %126 ]
  %116 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm16EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %117 = and i64 %116, %115
  %118 = and i64 %117, 4294967295
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %126, label %120

120:                                              ; preds = %114
  %121 = trunc i64 %117 to i32
  %122 = call i32 @_Z11ScanForwardj(i32 %121) #10
  %123 = zext i32 %122 to i64
  %124 = load i64, i64* %98, align 8, !alias.scope !42
  %125 = add i64 %124, %123
  br label %132

126:                                              ; preds = %114
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #10, !noalias !42
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #10, !noalias !42
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #10, !noalias !42
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #10, !noalias !42
  store i64 %103, i64* %108, align 8, !noalias !45
  store i32 16, i32* %109, align 8, !noalias !45
  store i64 %103, i64* %110, align 8, !noalias !45
  store i32 16, i32* %111, align 8, !noalias !45
  store i64 %103, i64* %112, align 8, !noalias !45
  store i32 0, i32* %113, align 8, !noalias !45
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.510"* nonnull sret %11, %"class.std::__1::__bit_iterator.510"* nonnull %8, %"class.std::__1::__bit_iterator.510"* nonnull %9, %"class.std::__1::__bit_iterator.510"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #10, !noalias !42
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #10, !noalias !42
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #10, !noalias !42
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #10, !noalias !42
  %127 = load i64, i64* %96, align 8, !alias.scope !42
  %128 = and i64 %127, -65536
  store i64 %128, i64* %96, align 8, !alias.scope !42
  %129 = load i64, i64* %98, align 8, !alias.scope !42
  %130 = add i64 %129, 32
  store i64 %130, i64* %98, align 8, !alias.scope !42
  %131 = icmp ult i64 %130, 16
  br i1 %131, label %114, label %132

132:                                              ; preds = %126, %120
  %133 = phi i64 [ %124, %120 ], [ %130, %126 ]
  %134 = phi i64 [ %125, %120 ], [ 0, %126 ]
  store i64 %134, i64* %97, align 8, !alias.scope !42
  br label %137

135:                                              ; preds = %91
  store i64 32, i64* %98, align 8, !alias.scope !42
  %136 = ptrtoint %"class.BitSetIterator<16, unsigned char>::Iterator"* %21 to i64
  br label %137

137:                                              ; preds = %132, %135
  %138 = phi i64 [ %103, %132 ], [ %136, %135 ]
  %139 = phi i64 [ %134, %132 ], [ 0, %135 ]
  %140 = phi i64 [ %133, %132 ], [ 32, %135 ]
  %141 = bitcast %"class.std::__1::__bit_iterator.510"* %19 to i8*
  %142 = bitcast %"class.std::__1::__bit_iterator.510"* %16 to i8*
  %143 = bitcast %"class.std::__1::__bit_iterator.510"* %17 to i8*
  %144 = bitcast %"class.std::__1::__bit_iterator.510"* %18 to i8*
  %145 = bitcast %"class.std::__1::__bit_iterator.510"* %16 to i64*
  %146 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %16, i64 0, i32 1
  %147 = bitcast %"class.std::__1::__bit_iterator.510"* %17 to i64*
  %148 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %17, i64 0, i32 1
  %149 = bitcast %"class.std::__1::__bit_iterator.510"* %18 to i64*
  %150 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %18, i64 0, i32 1
  br label %200

151:                                              ; preds = %87, %82
  %152 = trunc i64 %83 to i8
  %153 = call dereferenceable(16) %"struct.dawn_native::VertexBufferInfo"* @_ZNK11dawn_native18RenderPipelineBase15GetVertexBufferEh(%"class.dawn_native::RenderPipelineBase"* %22, i8 zeroext %152) #10
  %154 = zext i32 %85 to i64
  %155 = trunc i64 %83 to i32
  %156 = and i32 %155, 255
  %157 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations", %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations"* %2, i64 0, i32 0, i32 0, i64 %154, i32 0
  store i32 %156, i32* %157, align 4
  %158 = getelementptr inbounds %"struct.dawn_native::VertexBufferInfo", %"struct.dawn_native::VertexBufferInfo"* %153, i64 0, i32 0
  %159 = load i64, i64* %158, align 8
  %160 = trunc i64 %159 to i32
  %161 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations", %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations"* %2, i64 0, i32 0, i32 0, i64 %154, i32 1
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds %"struct.dawn_native::VertexBufferInfo", %"struct.dawn_native::VertexBufferInfo"* %153, i64 0, i32 1
  %163 = load i32, i32* %162, align 8
  %164 = icmp ne i32 %163, 0
  %165 = zext i1 %164 to i32
  %166 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations", %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations"* %2, i64 0, i32 0, i32 0, i64 %154, i32 2
  store i32 %165, i32* %166, align 4
  %167 = add i32 %85, 1
  %168 = load i64, i64* %28, align 8
  %169 = load i64, i64* %29, align 8
  %170 = sub i64 %168, %169
  %171 = icmp ugt i64 %170, 7
  br i1 %171, label %172, label %173

172:                                              ; preds = %151
  call void @abort() #11
  unreachable

173:                                              ; preds = %151
  %174 = shl i64 1, %170
  %175 = xor i64 %174, -1
  %176 = load i64, i64* %27, align 8
  %177 = and i64 %176, %175
  store i64 %177, i64* %27, align 8
  %178 = icmp ult i64 %169, 8
  br i1 %178, label %179, label %197

179:                                              ; preds = %173, %191
  %180 = phi i64 [ %193, %191 ], [ %177, %173 ]
  %181 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm8EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %182 = and i64 %181, %180
  %183 = and i64 %182, 4294967295
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %191, label %185

185:                                              ; preds = %179
  %186 = trunc i64 %182 to i32
  %187 = call i32 @_Z11ScanForwardj(i32 %186) #10
  %188 = zext i32 %187 to i64
  %189 = load i64, i64* %29, align 8
  %190 = add i64 %189, %188
  br label %197

191:                                              ; preds = %179
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #10
  store i64 %69, i64* %76, align 8, !noalias !48
  store i32 8, i32* %77, align 8, !noalias !48
  store i64 %69, i64* %78, align 8, !noalias !48
  store i32 8, i32* %79, align 8, !noalias !48
  store i64 %69, i64* %80, align 8, !noalias !48
  store i32 0, i32* %81, align 8, !noalias !48
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.505"* nonnull sret %7, %"class.std::__1::__bit_iterator.505"* nonnull %4, %"class.std::__1::__bit_iterator.505"* nonnull %5, %"class.std::__1::__bit_iterator.505"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #10
  %192 = load i64, i64* %27, align 8
  %193 = and i64 %192, -256
  store i64 %193, i64* %27, align 8
  %194 = load i64, i64* %29, align 8
  %195 = add i64 %194, 32
  store i64 %195, i64* %29, align 8
  %196 = icmp ult i64 %195, 8
  br i1 %196, label %179, label %197

197:                                              ; preds = %191, %173, %185
  %198 = phi i64 [ %189, %185 ], [ %169, %173 ], [ %195, %191 ]
  %199 = phi i64 [ %190, %185 ], [ 0, %173 ], [ 0, %191 ]
  store i64 %199, i64* %28, align 8
  br label %82

200:                                              ; preds = %272, %137
  %201 = phi i64 [ %139, %137 ], [ %274, %272 ]
  %202 = phi i64 [ %140, %137 ], [ %273, %272 ]
  %203 = phi i32 [ 0, %137 ], [ %242, %272 ]
  %204 = icmp eq i64 %202, 32
  br i1 %204, label %205, label %220

205:                                              ; preds = %200
  %206 = load i64, i64* %96, align 8
  %207 = and i64 %206, 65535
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %220

209:                                              ; preds = %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #10
  %210 = bitcast %struct.VkPipelineVertexInputStateCreateInfo* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 -86, i64 40, i1 false)
  %211 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %0, i64 0, i32 0
  store i32 19, i32* %211, align 8
  %212 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %0, i64 0, i32 1
  store i8* null, i8** %212, align 8
  %213 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %0, i64 0, i32 2
  store i32 0, i32* %213, align 8
  %214 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %0, i64 0, i32 3
  store i32 %85, i32* %214, align 4
  %215 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations", %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations"* %2, i64 0, i32 0, i32 0, i64 0
  %216 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %0, i64 0, i32 4
  store %struct.VkVertexInputBindingDescription* %215, %struct.VkVertexInputBindingDescription** %216, align 8
  %217 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %0, i64 0, i32 5
  store i32 %203, i32* %217, align 8
  %218 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations", %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations"* %2, i64 0, i32 1, i32 0, i64 0
  %219 = getelementptr inbounds %struct.VkPipelineVertexInputStateCreateInfo, %struct.VkPipelineVertexInputStateCreateInfo* %0, i64 0, i32 6
  store %struct.VkVertexInputAttributeDescription* %218, %struct.VkVertexInputAttributeDescription** %219, align 8
  ret void

220:                                              ; preds = %205, %200
  %221 = trunc i64 %201 to i8
  %222 = call dereferenceable(24) %"struct.dawn_native::VertexAttributeInfo"* @_ZNK11dawn_native18RenderPipelineBase12GetAttributeEh(%"class.dawn_native::RenderPipelineBase"* %22, i8 zeroext %221) #10
  %223 = zext i32 %203 to i64
  %224 = trunc i64 %201 to i32
  %225 = and i32 %224, 255
  %226 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations", %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations"* %2, i64 0, i32 1, i32 0, i64 %223, i32 0
  store i32 %225, i32* %226, align 4
  %227 = getelementptr inbounds %"struct.dawn_native::VertexAttributeInfo", %"struct.dawn_native::VertexAttributeInfo"* %222, i64 0, i32 3
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i32
  %230 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations", %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations"* %2, i64 0, i32 1, i32 0, i64 %223, i32 1
  store i32 %229, i32* %230, align 4
  %231 = getelementptr inbounds %"struct.dawn_native::VertexAttributeInfo", %"struct.dawn_native::VertexAttributeInfo"* %222, i64 0, i32 0
  %232 = load i32, i32* %231, align 8
  %233 = add i32 %232, -1
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds [30 x i32], [30 x i32]* @switch.table._ZN11dawn_native6vulkan14RenderPipeline22ComputeVertexInputDescEPNS1_54PipelineVertexInputStateCreateInfoTemporaryAllocationsE, i64 0, i64 %234
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations", %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations"* %2, i64 0, i32 1, i32 0, i64 %223, i32 2
  store i32 %236, i32* %237, align 4
  %238 = getelementptr inbounds %"struct.dawn_native::VertexAttributeInfo", %"struct.dawn_native::VertexAttributeInfo"* %222, i64 0, i32 1
  %239 = load i64, i64* %238, align 8
  %240 = trunc i64 %239 to i32
  %241 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations", %"struct.dawn_native::vulkan::RenderPipeline::PipelineVertexInputStateCreateInfoTemporaryAllocations"* %2, i64 0, i32 1, i32 0, i64 %223, i32 3
  store i32 %240, i32* %241, align 4
  %242 = add i32 %203, 1
  %243 = load i64, i64* %97, align 8
  %244 = load i64, i64* %98, align 8
  %245 = sub i64 %243, %244
  %246 = icmp ugt i64 %245, 15
  br i1 %246, label %247, label %248

247:                                              ; preds = %220
  call void @abort() #11
  unreachable

248:                                              ; preds = %220
  %249 = shl i64 1, %245
  %250 = xor i64 %249, -1
  %251 = load i64, i64* %96, align 8
  %252 = and i64 %251, %250
  store i64 %252, i64* %96, align 8
  %253 = icmp ult i64 %244, 16
  br i1 %253, label %254, label %272

254:                                              ; preds = %248, %266
  %255 = phi i64 [ %268, %266 ], [ %252, %248 ]
  %256 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm16EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %257 = and i64 %256, %255
  %258 = and i64 %257, 4294967295
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %266, label %260

260:                                              ; preds = %254
  %261 = trunc i64 %257 to i32
  %262 = call i32 @_Z11ScanForwardj(i32 %261) #10
  %263 = zext i32 %262 to i64
  %264 = load i64, i64* %98, align 8
  %265 = add i64 %264, %263
  br label %272

266:                                              ; preds = %254
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %143) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #10
  store i64 %138, i64* %145, align 8, !noalias !51
  store i32 16, i32* %146, align 8, !noalias !51
  store i64 %138, i64* %147, align 8, !noalias !51
  store i32 16, i32* %148, align 8, !noalias !51
  store i64 %138, i64* %149, align 8, !noalias !51
  store i32 0, i32* %150, align 8, !noalias !51
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.510"* nonnull sret %19, %"class.std::__1::__bit_iterator.510"* nonnull %16, %"class.std::__1::__bit_iterator.510"* nonnull %17, %"class.std::__1::__bit_iterator.510"* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %143) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #10
  %267 = load i64, i64* %96, align 8
  %268 = and i64 %267, -65536
  store i64 %268, i64* %96, align 8
  %269 = load i64, i64* %98, align 8
  %270 = add i64 %269, 32
  store i64 %270, i64* %98, align 8
  %271 = icmp ult i64 %270, 16
  br i1 %271, label %254, label %272

272:                                              ; preds = %266, %248, %260
  %273 = phi i64 [ %264, %260 ], [ %244, %248 ], [ %270, %266 ]
  %274 = phi i64 [ %265, %260 ], [ 0, %248 ], [ 0, %266 ]
  store i64 %274, i64* %97, align 8
  br label %200
}

declare i32 @_ZNK11dawn_native18RenderPipelineBase20GetPrimitiveTopologyEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare i32 @_ZNK11dawn_native18RenderPipelineBase11GetCullModeEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare i32 @_ZNK11dawn_native18RenderPipelineBase12GetFrontFaceEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK11dawn_native18RenderPipelineBase18IsDepthBiasEnabledEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare i32 @_ZNK11dawn_native18RenderPipelineBase12GetDepthBiasEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare float @_ZNK11dawn_native18RenderPipelineBase17GetDepthBiasClampEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare float @_ZNK11dawn_native18RenderPipelineBase22GetDepthBiasSlopeScaleEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare i32 @_ZN11dawn_native6vulkan17VulkanSampleCountEj(i32) local_unnamed_addr #3

declare i32 @_ZNK11dawn_native18RenderPipelineBase14GetSampleCountEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare i32 @_ZNK11dawn_native18RenderPipelineBase13GetSampleMaskEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK11dawn_native18RenderPipelineBase24IsAlphaToCoverageEnabledEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare %"struct.dawn_native::DepthStencilState"* @_ZNK11dawn_native18RenderPipelineBase20GetDepthStencilStateEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare dereferenceable(40) %"struct.dawn_native::ProgrammableStage"* @_ZNK11dawn_native12PipelineBase8GetStageENS_17SingleShaderStageE(%"class.dawn_native::PipelineBase"*, i32) local_unnamed_addr #3

declare i64 @_ZNK11dawn_native18RenderPipelineBase23GetColorAttachmentsMaskEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare %"struct.dawn_native::ColorTargetState"* @_ZNK11dawn_native18RenderPipelineBase19GetColorTargetStateEh(%"class.dawn_native::RenderPipelineBase"*, i8 zeroext) local_unnamed_addr #3

declare void @_ZN11dawn_native6vulkan20RenderPassCacheQuery8SetColorEhN4wgpu13TextureFormatENS2_6LoadOpEb(%"struct.dawn_native::vulkan::RenderPassCacheQuery"*, i8 zeroext, i32, i32, i1 zeroext) local_unnamed_addr #3

declare i32 @_ZNK11dawn_native18RenderPipelineBase24GetColorAttachmentFormatEh(%"class.dawn_native::RenderPipelineBase"*, i8 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZNK11dawn_native18RenderPipelineBase25HasDepthStencilAttachmentEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare void @_ZN11dawn_native6vulkan20RenderPassCacheQuery15SetDepthStencilEN4wgpu13TextureFormatENS2_6LoadOpES4_(%"struct.dawn_native::vulkan::RenderPassCacheQuery"*, i32, i32, i32) local_unnamed_addr #3

declare i32 @_ZNK11dawn_native18RenderPipelineBase21GetDepthStencilFormatEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare void @_ZN11dawn_native6vulkan20RenderPassCacheQuery14SetSampleCountEj(%"struct.dawn_native::vulkan::RenderPassCacheQuery"*, i32) local_unnamed_addr #3

declare %"class.dawn_native::vulkan::RenderPassCache"* @_ZNK11dawn_native6vulkan6Device18GetRenderPassCacheEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #3

declare void @_ZN11dawn_native6vulkan15RenderPassCache13GetRenderPassERKNS0_20RenderPassCacheQueryE(%class.Result.498* sret, %"class.dawn_native::vulkan::RenderPassCache"*, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72)) local_unnamed_addr #3

declare %struct.VkPipelineLayout_T* @_ZNK11dawn_native6vulkan14PipelineLayout9GetHandleEv(%"class.dawn_native::vulkan::PipelineLayout"*) local_unnamed_addr #3

declare void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.448* sret, i32, i8*) local_unnamed_addr #3

declare %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #3

declare dereferenceable(8) %"class.ityp::bitset.434"* @_ZNK11dawn_native18RenderPipelineBase24GetVertexBufferSlotsUsedEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare dereferenceable(16) %"struct.dawn_native::VertexBufferInfo"* @_ZNK11dawn_native18RenderPipelineBase15GetVertexBufferEh(%"class.dawn_native::RenderPipelineBase"*, i8 zeroext) local_unnamed_addr #3

declare dereferenceable(8) %"class.ityp::bitset.431"* @_ZNK11dawn_native18RenderPipelineBase25GetAttributeLocationsUsedEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #3

declare dereferenceable(24) %"struct.dawn_native::VertexAttributeInfo"* @_ZNK11dawn_native18RenderPipelineBase12GetAttributeEh(%"class.dawn_native::RenderPipelineBase"*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan14RenderPipelineD2Ev(%"class.dawn_native::vulkan::RenderPipeline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPipeline", %"class.dawn_native::vulkan::RenderPipeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan14RenderPipelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPipeline", %"class.dawn_native::vulkan::RenderPipeline"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.447", %"class.dawn_native::vulkan::detail::VkHandle.447"* %3, i64 0, i32 0
  %5 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %4, align 8
  %6 = icmp eq %struct.VkPipeline_T* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPipeline", %"class.dawn_native::vulkan::RenderPipeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %8) #10
  %10 = bitcast %"class.dawn_native::DeviceBase"* %9 to %"class.dawn_native::vulkan::Device"*
  %11 = tail call %"class.dawn_native::vulkan::FencedDeleter"* @_ZNK11dawn_native6vulkan6Device16GetFencedDeleterEv(%"class.dawn_native::vulkan::Device"* %10) #10
  %12 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPipeline", %"class.dawn_native::vulkan::RenderPipeline"* %0, i64 0, i32 1, i32 0
  %13 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %12, align 8
  tail call void @_ZN11dawn_native6vulkan13FencedDeleter16DeleteWhenUnusedENS0_6detail8VkHandleINS0_15VkTagVkPipelineEP12VkPipeline_TEE(%"class.dawn_native::vulkan::FencedDeleter"* %11, %struct.VkPipeline_T* %13) #10
  %14 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.447"* %3 to i64*
  store i64 0, i64* %14, align 8
  br label %15

15:                                               ; preds = %1, %7
  %16 = bitcast %"class.dawn_native::vulkan::RenderPipeline"* %0 to %"class.dawn_native::RenderPipelineBase"*
  tail call void @_ZN11dawn_native18RenderPipelineBaseD2Ev(%"class.dawn_native::RenderPipelineBase"* %16) #10
  ret void
}

declare %"class.dawn_native::vulkan::FencedDeleter"* @_ZNK11dawn_native6vulkan6Device16GetFencedDeleterEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #3

declare void @_ZN11dawn_native6vulkan13FencedDeleter16DeleteWhenUnusedENS0_6detail8VkHandleINS0_15VkTagVkPipelineEP12VkPipeline_TEE(%"class.dawn_native::vulkan::FencedDeleter"*, %struct.VkPipeline_T*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN11dawn_native18RenderPipelineBaseD2Ev(%"class.dawn_native::RenderPipelineBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan14RenderPipelineD0Ev(%"class.dawn_native::vulkan::RenderPipeline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPipeline", %"class.dawn_native::vulkan::RenderPipeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan14RenderPipelineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPipeline", %"class.dawn_native::vulkan::RenderPipeline"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.447", %"class.dawn_native::vulkan::detail::VkHandle.447"* %3, i64 0, i32 0
  %5 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %4, align 8
  %6 = icmp eq %struct.VkPipeline_T* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPipeline", %"class.dawn_native::vulkan::RenderPipeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %8) #10
  %10 = bitcast %"class.dawn_native::DeviceBase"* %9 to %"class.dawn_native::vulkan::Device"*
  %11 = tail call %"class.dawn_native::vulkan::FencedDeleter"* @_ZNK11dawn_native6vulkan6Device16GetFencedDeleterEv(%"class.dawn_native::vulkan::Device"* %10) #10
  %12 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPipeline", %"class.dawn_native::vulkan::RenderPipeline"* %0, i64 0, i32 1, i32 0
  %13 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %12, align 8
  tail call void @_ZN11dawn_native6vulkan13FencedDeleter16DeleteWhenUnusedENS0_6detail8VkHandleINS0_15VkTagVkPipelineEP12VkPipeline_TEE(%"class.dawn_native::vulkan::FencedDeleter"* %11, %struct.VkPipeline_T* %13) #10
  %14 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.447"* %3 to i64*
  store i64 0, i64* %14, align 8
  br label %15

15:                                               ; preds = %1, %7
  %16 = bitcast %"class.dawn_native::vulkan::RenderPipeline"* %0 to %"class.dawn_native::RenderPipelineBase"*
  tail call void @_ZN11dawn_native18RenderPipelineBaseD2Ev(%"class.dawn_native::RenderPipelineBase"* %16) #10
  %17 = bitcast %"class.dawn_native::vulkan::RenderPipeline"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.VkPipeline_T* @_ZNK11dawn_native6vulkan14RenderPipeline9GetHandleEv(%"class.dawn_native::vulkan::RenderPipeline"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPipeline", %"class.dawn_native::vulkan::RenderPipeline"* %0, i64 0, i32 1, i32 0
  %3 = load %struct.VkPipeline_T*, %struct.VkPipeline_T** %2, align 8
  ret %struct.VkPipeline_T* %3
}

declare void @_ZN10RefCounted10DeleteThisEv(%class.RefCounted*) unnamed_addr #3

declare i64 @_ZN11dawn_native18RenderPipelineBase18ComputeContentHashEv(%"class.dawn_native::RenderPipelineBase"*) unnamed_addr #3

declare void @_ZN11dawn_native18RenderPipelineBaseC2EPNS_10DeviceBaseEPKNS_24RenderPipelineDescriptorE(%"class.dawn_native::RenderPipelineBase"*, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::RenderPipelineDescriptor"*) unnamed_addr #3

declare void @_ZN10RefCounted7ReleaseEv(%class.RefCounted*) local_unnamed_addr #3

declare i32 @_ZN11dawn_native6vulkan17ToVulkanCompareOpEN4wgpu15CompareFunctionE(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN11dawn_native18StencilTestEnabledEPKNS_17DepthStencilStateE(%"struct.dawn_native::DepthStencilState"*) local_unnamed_addr #3

declare i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8*, i32) local_unnamed_addr #3

declare i32 @_Z11ScanForwardj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.505"* noalias sret, %"class.std::__1::__bit_iterator.505"*, %"class.std::__1::__bit_iterator.505"*, %"class.std::__1::__bit_iterator.505"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator.505"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator.505"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator.505"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator.505"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator.505", %"class.std::__1::__bit_iterator.505"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.510"* noalias sret, %"class.std::__1::__bit_iterator.510"*, %"class.std::__1::__bit_iterator.510"*, %"class.std::__1::__bit_iterator.510"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator.510"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator.510"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator.510"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator.510"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator.510", %"class.std::__1::__bit_iterator.510"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN11dawn_native6vulkan12_GLOBAL__N_123ComputeDepthStencilDescEPKNS_17DepthStencilStateE: argument 0"}
!6 = distinct !{!6, !"_ZN11dawn_native6vulkan12_GLOBAL__N_123ComputeDepthStencilDescEPKNS_17DepthStencilStateE"}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK14BitSetIteratorILm4EhE5beginEv: argument 0"}
!10 = distinct !{!10, !"_ZNK14BitSetIteratorILm4EhE5beginEv"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!14 = !{i64 0, i64 65}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK14BitSetIteratorILm4EhE5beginEv: argument 0"}
!17 = distinct !{!17, !"_ZNK14BitSetIteratorILm4EhE5beginEv"}
!18 = !{!19, !16}
!19 = distinct !{!19, !20, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN11dawn_native6vulkan12_GLOBAL__N_116ComputeColorDescEPKNS_16ColorTargetStateEb: argument 0"}
!23 = distinct !{!23, !"_ZN11dawn_native6vulkan12_GLOBAL__N_116ComputeColorDescEPKNS_16ColorTargetStateEb"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIhLm8EEE: argument 0"}
!32 = distinct !{!32, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIhLm8EEE"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK14BitSetIteratorILm8EhE5beginEv: argument 0"}
!35 = distinct !{!35, !"_ZNK14BitSetIteratorILm8EhE5beginEv"}
!36 = !{!37, !34}
!37 = distinct !{!37, !38, !"_ZNSt3__14copyINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__14copyINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIhLm16EEE: argument 0"}
!41 = distinct !{!41, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIhLm16EEE"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNK14BitSetIteratorILm16EhE5beginEv: argument 0"}
!44 = distinct !{!44, !"_ZNK14BitSetIteratorILm16EhE5beginEv"}
!45 = !{!46, !43}
!46 = distinct !{!46, !47, !"_ZNSt3__14copyINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!47 = distinct !{!47, !"_ZNSt3__14copyINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNSt3__14copyINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!50 = distinct !{!50, !"_ZNSt3__14copyINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__14copyINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__14copyINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
