; ModuleID = '../../net/dns/record_parsed.cc'
source_filename = "../../net/dns/record_parsed.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::RecordParsed" = type { i32 (...)**, %"class.std::__1::basic_string", i16, i16, i32, %"class.std::__1::unique_ptr", %"class.base::Time" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.net::RecordRdata"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::RecordRdata" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::DnsRecordParser" = type { i8*, i64, i64, i64, i8* }
%"struct.net::DnsResourceRecord" = type { %"class.std::__1::basic_string", i16, i16, i32, %"class.base::BasicStringPiece", %"class.std::__1::basic_string" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.net::ARecordRdata" = type <{ %"class.net::RecordRdata", %"class.net::IPAddress", [7 x i8] }>
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::AAAARecordRdata" = type <{ %"class.net::RecordRdata", %"class.net::IPAddress", [7 x i8] }>
%"class.net::CnameRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::basic_string" }
%"class.net::PtrRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::basic_string" }
%"class.net::SrvRecordRdata" = type { %"class.net::RecordRdata", i16, i16, i16, %"class.std::__1::basic_string" }
%"class.net::TxtRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::basic_string"* }
%"class.net::NsecRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::vector.54" }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { i8*, i8*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { i8* }
%"class.net::OptRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::vector.67", %"class.std::__1::vector.74" }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"*, %"class.std::__1::__compressed_pair.69" }
%"class.net::OptRecordRdata::Opt" = type { i16, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.net::OptRecordRdata::Opt"* }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { i8*, i8*, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { i8* }
%"class.net::IntegrityRecordRdata" = type <{ %"class.net::RecordRdata", %"class.std::__1::vector.54", %"struct.std::__1::array.84", i8, [7 x i8] }>
%"struct.std::__1::array.84" = type { [32 x i8] }
%"class.net::HttpsRecordRdata" = type { %"class.net::RecordRdata" }

@_ZTVN3net12RecordParsedE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::RecordParsed"*)* @_ZN3net12RecordParsedD2Ev to i8*), i8* bitcast (void (%"class.net::RecordParsed"*)* @_ZN3net12RecordParsedD0Ev to i8*)] }, align 8

@_ZN3net12RecordParsedC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEttjNS1_10unique_ptrIKNS_11RecordRdataENS1_14default_deleteISC_EEEEN4base4TimeE = hidden unnamed_addr alias void (%"class.net::RecordParsed"*, %"class.std::__1::basic_string"*, i16, i16, i32, %"class.net::RecordRdata"*, i64), void (%"class.net::RecordParsed"*, %"class.std::__1::basic_string"*, i16, i16, i32, %"class.net::RecordRdata"*, i64)* @_ZN3net12RecordParsedC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEttjNS1_10unique_ptrIKNS_11RecordRdataENS1_14default_deleteISC_EEEEN4base4TimeE
@_ZN3net12RecordParsedD1Ev = hidden unnamed_addr alias void (%"class.net::RecordParsed"*), void (%"class.net::RecordParsed"*)* @_ZN3net12RecordParsedD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12RecordParsedC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEttjNS1_10unique_ptrIKNS_11RecordRdataENS1_14default_deleteISC_EEEEN4base4TimeE(%"class.net::RecordParsed"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i16 zeroext, i16 zeroext, i32, %"class.net::RecordRdata"*, i64) unnamed_addr #0 align 2 {
  %8 = ptrtoint %"class.net::RecordRdata"* %5 to i64
  %9 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net12RecordParsedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %7
  %16 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #7
  br label %23

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %10, i8* %20, i64 %22) #7
  br label %23

23:                                               ; preds = %18, %15
  %24 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 2
  store i16 %2, i16* %24, align 8
  %25 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 3
  store i16 %3, i16* %25, align 2
  %26 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 4
  store i32 %4, i32* %26, align 4
  %27 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 5
  %28 = bitcast %"class.std::__1::unique_ptr"* %27 to i64*
  store i64 %8, i64* %28, align 8
  %29 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %6, i64* %29, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12RecordParsedD2Ev(%"class.net::RecordParsed"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net12RecordParsedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.net::RecordRdata"*, %"class.net::RecordRdata"** %3, align 8
  store %"class.net::RecordRdata"* null, %"class.net::RecordRdata"** %3, align 8
  %5 = icmp eq %"class.net::RecordRdata"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::RecordRdata"* %4 to void (%"class.net::RecordRdata"*)***
  %8 = load void (%"class.net::RecordRdata"*)**, void (%"class.net::RecordRdata"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::RecordRdata"*)*, void (%"class.net::RecordRdata"*)** %8, i64 1
  %10 = load void (%"class.net::RecordRdata"*)*, void (%"class.net::RecordRdata"*)** %9, align 8
  tail call void %10(%"class.net::RecordRdata"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #8
  br label %20

20:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12RecordParsedD0Ev(%"class.net::RecordParsed"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net12RecordParsedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.net::RecordRdata"*, %"class.net::RecordRdata"** %3, align 8
  store %"class.net::RecordRdata"* null, %"class.net::RecordRdata"** %3, align 8
  %5 = icmp eq %"class.net::RecordRdata"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::RecordRdata"* %4 to void (%"class.net::RecordRdata"*)***
  %8 = load void (%"class.net::RecordRdata"*)**, void (%"class.net::RecordRdata"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::RecordRdata"*)*, void (%"class.net::RecordRdata"*)** %8, i64 1
  %10 = load void (%"class.net::RecordRdata"*)*, void (%"class.net::RecordRdata"*)** %9, align 8
  tail call void %10(%"class.net::RecordRdata"* nonnull %4) #7
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #8
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %"class.net::RecordParsed"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::RecordParsed"* @_ZN3net12RecordParsed10CreateFromEPNS_15DnsRecordParserEN4base4TimeE(%"class.net::DnsRecordParser"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::DnsResourceRecord", align 8
  %4 = bitcast %"struct.net::DnsResourceRecord"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 72, i1 false)
  call void @_ZN3net17DnsResourceRecordC1Ev(%"struct.net::DnsResourceRecord"* nonnull %3) #7
  %5 = call zeroext i1 @_ZN3net15DnsRecordParser10ReadRecordEPNS_17DnsResourceRecordE(%"class.net::DnsRecordParser"* %0, %"struct.net::DnsResourceRecord"* nonnull %3) #7
  br i1 %5, label %6, label %90

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 1
  %8 = load i16, i16* %7, align 8
  switch i16 %8, label %57 [
    i16 1, label %9
    i16 28, label %13
    i16 5, label %17
    i16 12, label %21
    i16 33, label %25
    i16 16, label %29
    i16 47, label %33
    i16 41, label %37
    i16 -15, label %41
    i16 65, label %45
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 4
  %11 = call %"class.net::ARecordRdata"* @_ZN3net12ARecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16) %10, %"class.net::DnsRecordParser"* dereferenceable(40) %0) #7
  %12 = ptrtoint %"class.net::ARecordRdata"* %11 to i64
  br label %52

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 4
  %15 = call %"class.net::AAAARecordRdata"* @_ZN3net15AAAARecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16) %14, %"class.net::DnsRecordParser"* dereferenceable(40) %0) #7
  %16 = ptrtoint %"class.net::AAAARecordRdata"* %15 to i64
  br label %52

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 4
  %19 = call %"class.net::CnameRecordRdata"* @_ZN3net16CnameRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16) %18, %"class.net::DnsRecordParser"* dereferenceable(40) %0) #7
  %20 = ptrtoint %"class.net::CnameRecordRdata"* %19 to i64
  br label %52

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 4
  %23 = call %"class.net::PtrRecordRdata"* @_ZN3net14PtrRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16) %22, %"class.net::DnsRecordParser"* dereferenceable(40) %0) #7
  %24 = ptrtoint %"class.net::PtrRecordRdata"* %23 to i64
  br label %52

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 4
  %27 = call %"class.net::SrvRecordRdata"* @_ZN3net14SrvRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16) %26, %"class.net::DnsRecordParser"* dereferenceable(40) %0) #7
  %28 = ptrtoint %"class.net::SrvRecordRdata"* %27 to i64
  br label %52

29:                                               ; preds = %6
  %30 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 4
  %31 = call %"class.net::TxtRecordRdata"* @_ZN3net14TxtRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16) %30, %"class.net::DnsRecordParser"* dereferenceable(40) %0) #7
  %32 = ptrtoint %"class.net::TxtRecordRdata"* %31 to i64
  br label %52

33:                                               ; preds = %6
  %34 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 4
  %35 = call %"class.net::NsecRecordRdata"* @_ZN3net15NsecRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16) %34, %"class.net::DnsRecordParser"* dereferenceable(40) %0) #7
  %36 = ptrtoint %"class.net::NsecRecordRdata"* %35 to i64
  br label %52

37:                                               ; preds = %6
  %38 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 4
  %39 = call %"class.net::OptRecordRdata"* @_ZN3net14OptRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16) %38, %"class.net::DnsRecordParser"* dereferenceable(40) %0) #7
  %40 = ptrtoint %"class.net::OptRecordRdata"* %39 to i64
  br label %52

41:                                               ; preds = %6
  %42 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 4
  %43 = call %"class.net::IntegrityRecordRdata"* @_ZN3net20IntegrityRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16) %42) #7
  %44 = ptrtoint %"class.net::IntegrityRecordRdata"* %43 to i64
  br label %52

45:                                               ; preds = %6
  %46 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 4, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 4, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = call %"class.net::HttpsRecordRdata"* @_ZN3net16HttpsRecordRdata5ParseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %47, i64 %49) #7
  %51 = ptrtoint %"class.net::HttpsRecordRdata"* %50 to i64
  br label %52

52:                                               ; preds = %45, %41, %37, %33, %29, %25, %21, %17, %13, %9
  %53 = phi i64 [ %51, %45 ], [ %44, %41 ], [ %40, %37 ], [ %36, %33 ], [ %32, %29 ], [ %28, %25 ], [ %24, %21 ], [ %20, %17 ], [ %16, %13 ], [ %12, %9 ]
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %90, label %55

55:                                               ; preds = %52
  %56 = load i16, i16* %7, align 8
  br label %57

57:                                               ; preds = %55, %6
  %58 = phi i16 [ %56, %55 ], [ %8, %6 ]
  %59 = phi i64 [ %53, %55 ], [ 0, %6 ]
  %60 = call i8* @_Znwm(i64 56) #8
  %61 = bitcast i8* %60 to %"class.net::RecordParsed"*
  %62 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 2
  %63 = load i16, i16* %62, align 2
  %64 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = bitcast i8* %60 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net12RecordParsedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds i8, i8* %60, i64 8
  %68 = bitcast %"struct.net::DnsResourceRecord"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %57
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %4, i64 24, i1 false) #7
  br label %79

73:                                               ; preds = %57
  %74 = bitcast i8* %67 to %"class.std::__1::basic_string"*
  %75 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"struct.net::DnsResourceRecord", %"struct.net::DnsResourceRecord"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %74, i8* %76, i64 %78) #7
  br label %79

79:                                               ; preds = %72, %73
  %80 = getelementptr inbounds i8, i8* %60, i64 32
  %81 = bitcast i8* %80 to i16*
  store i16 %58, i16* %81, align 8
  %82 = getelementptr inbounds i8, i8* %60, i64 34
  %83 = bitcast i8* %82 to i16*
  store i16 %63, i16* %83, align 2
  %84 = getelementptr inbounds i8, i8* %60, i64 36
  %85 = bitcast i8* %84 to i32*
  store i32 %65, i32* %85, align 4
  %86 = getelementptr inbounds i8, i8* %60, i64 40
  %87 = bitcast i8* %86 to i64*
  store i64 %59, i64* %87, align 8
  %88 = getelementptr inbounds i8, i8* %60, i64 48
  %89 = bitcast i8* %88 to i64*
  store i64 %1, i64* %89, align 8
  br label %90

90:                                               ; preds = %52, %2, %79
  %91 = phi %"class.net::RecordParsed"* [ null, %2 ], [ %61, %79 ], [ null, %52 ]
  call void @_ZN3net17DnsResourceRecordD1Ev(%"struct.net::DnsResourceRecord"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #7
  ret %"class.net::RecordParsed"* %91
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3net17DnsResourceRecordC1Ev(%"struct.net::DnsResourceRecord"*) unnamed_addr #3

declare zeroext i1 @_ZN3net15DnsRecordParser10ReadRecordEPNS_17DnsResourceRecordE(%"class.net::DnsRecordParser"*, %"struct.net::DnsResourceRecord"*) local_unnamed_addr #3

declare %"class.net::ARecordRdata"* @_ZN3net12ARecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.net::DnsRecordParser"* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.net::AAAARecordRdata"* @_ZN3net15AAAARecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.net::DnsRecordParser"* dereferenceable(40)) local_unnamed_addr #3

declare %"class.net::CnameRecordRdata"* @_ZN3net16CnameRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.net::DnsRecordParser"* dereferenceable(40)) local_unnamed_addr #3

declare %"class.net::PtrRecordRdata"* @_ZN3net14PtrRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.net::DnsRecordParser"* dereferenceable(40)) local_unnamed_addr #3

declare %"class.net::SrvRecordRdata"* @_ZN3net14SrvRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.net::DnsRecordParser"* dereferenceable(40)) local_unnamed_addr #3

declare %"class.net::TxtRecordRdata"* @_ZN3net14TxtRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.net::DnsRecordParser"* dereferenceable(40)) local_unnamed_addr #3

declare %"class.net::NsecRecordRdata"* @_ZN3net15NsecRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.net::DnsRecordParser"* dereferenceable(40)) local_unnamed_addr #3

declare %"class.net::OptRecordRdata"* @_ZN3net14OptRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.net::DnsRecordParser"* dereferenceable(40)) local_unnamed_addr #3

declare %"class.net::IntegrityRecordRdata"* @_ZN3net20IntegrityRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #3

declare %"class.net::HttpsRecordRdata"* @_ZN3net16HttpsRecordRdata5ParseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net17DnsResourceRecordD1Ev(%"struct.net::DnsResourceRecord"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net12RecordParsed7IsEqualEPKS0_b(%"class.net::RecordParsed"* nocapture readonly, %"class.net::RecordParsed"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 3
  %5 = load i16, i16* %4, align 2
  %6 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1, i64 0, i32 3
  %7 = load i16, i16* %6, align 2
  %8 = and i16 %5, 32767
  %9 = and i16 %7, 32767
  %10 = select i1 %2, i16 %8, i16 %5
  %11 = select i1 %2, i16 %9, i16 %7
  %12 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1, i64 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i64 %27, i64 %28
  %30 = icmp eq i64 %21, %29
  br i1 %30, label %31, label %90

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %35 = select i1 %17, i8* %33, i8* %34
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %39 = select i1 %25, i8* %37, i8* %38
  %40 = icmp eq i64 %21, 0
  br i1 %17, label %47, label %41

41:                                               ; preds = %31
  br i1 %40, label %63, label %42

42:                                               ; preds = %41
  %43 = ptrtoint i8* %33 to i64
  %44 = trunc i64 %43 to i8
  %45 = load i8, i8* %39, align 1
  %46 = icmp eq i8 %45, %44
  br i1 %46, label %51, label %90

47:                                               ; preds = %31
  br i1 %40, label %63, label %48

48:                                               ; preds = %47
  %49 = tail call i32 @bcmp(i8* %35, i8* %39, i64 %21) #7
  %50 = icmp eq i32 %49, 0
  br label %63

51:                                               ; preds = %42, %58
  %52 = phi i64 [ %55, %58 ], [ %20, %42 ]
  %53 = phi i8* [ %56, %58 ], [ %34, %42 ]
  %54 = phi i8* [ %59, %58 ], [ %39, %42 ]
  %55 = add i64 %52, -1
  %56 = getelementptr inbounds i8, i8* %53, i64 1
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds i8, i8* %54, i64 1
  %60 = load i8, i8* %56, align 1
  %61 = load i8, i8* %59, align 1
  %62 = icmp eq i8 %60, %61
  br i1 %62, label %51, label %90

63:                                               ; preds = %51, %41, %47, %48
  %64 = phi i1 [ %50, %48 ], [ true, %47 ], [ true, %41 ], [ true, %51 ]
  %65 = icmp eq i16 %10, %11
  %66 = and i1 %65, %64
  br i1 %66, label %67, label %90

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 2
  %69 = load i16, i16* %68, align 8
  %70 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1, i64 0, i32 2
  %71 = load i16, i16* %70, align 8
  %72 = icmp eq i16 %69, %71
  br i1 %72, label %73, label %90

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %75 = load %"class.net::RecordRdata"*, %"class.net::RecordRdata"** %74, align 8
  %76 = icmp ne %"class.net::RecordRdata"* %75, null
  %77 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %78 = load %"class.net::RecordRdata"*, %"class.net::RecordRdata"** %77, align 8
  %79 = icmp ne %"class.net::RecordRdata"* %78, null
  %80 = xor i1 %76, %79
  %81 = xor i1 %76, true
  %82 = or i1 %80, %81
  %83 = xor i1 %80, true
  br i1 %82, label %90, label %84

84:                                               ; preds = %73
  %85 = bitcast %"class.net::RecordRdata"* %75 to i1 (%"class.net::RecordRdata"*, %"class.net::RecordRdata"*)***
  %86 = load i1 (%"class.net::RecordRdata"*, %"class.net::RecordRdata"*)**, i1 (%"class.net::RecordRdata"*, %"class.net::RecordRdata"*)*** %85, align 8
  %87 = getelementptr inbounds i1 (%"class.net::RecordRdata"*, %"class.net::RecordRdata"*)*, i1 (%"class.net::RecordRdata"*, %"class.net::RecordRdata"*)** %86, i64 2
  %88 = load i1 (%"class.net::RecordRdata"*, %"class.net::RecordRdata"*)*, i1 (%"class.net::RecordRdata"*, %"class.net::RecordRdata"*)** %87, align 8
  %89 = tail call zeroext i1 %88(%"class.net::RecordRdata"* nonnull %75, %"class.net::RecordRdata"* %78) #7
  br label %90

90:                                               ; preds = %58, %42, %73, %3, %84, %67, %63
  %91 = phi i1 [ %83, %73 ], [ false, %67 ], [ false, %63 ], [ %89, %84 ], [ false, %3 ], [ false, %42 ], [ false, %58 ]
  ret i1 %91
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
