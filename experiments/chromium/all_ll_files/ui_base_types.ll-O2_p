; ModuleID = '../../ui/base/ui_base_types.cc'
source_filename = "../../ui/base/ui_base_types.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.ui::EventTarget" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::flat_map.3"* }
%"class.base::flat_map.3" = type opaque

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2ui25GetMenuSourceTypeForEventERKNS_5EventE(%"class.ui::Event"* nocapture readonly dereferenceable(144)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -7
  %5 = icmp ult i32 %4, 2
  %6 = select i1 %5, i32 2, i32 1
  %7 = add i32 %3, -11
  %8 = icmp ult i32 %7, 4
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  switch i32 %3, label %16 [
    i32 16, label %15
    i32 17, label %15
    i32 18, label %15
    i32 19, label %15
    i32 23, label %15
    i32 21, label %15
    i32 20, label %15
    i32 22, label %15
    i32 24, label %15
    i32 25, label %15
    i32 26, label %15
    i32 27, label %15
    i32 28, label %15
    i32 29, label %15
    i32 30, label %15
    i32 31, label %15
    i32 32, label %15
    i32 33, label %15
    i32 36, label %10
    i32 35, label %10
  ]

10:                                               ; preds = %9, %9
  %11 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 262144
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %10, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %1
  br label %16

16:                                               ; preds = %10, %9, %15
  %17 = phi i32 [ 3, %15 ], [ %6, %10 ], [ %6, %9 ]
  ret i32 %17
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
