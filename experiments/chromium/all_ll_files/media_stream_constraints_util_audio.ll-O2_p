; ModuleID = '../../third_party/blink/renderer/modules/mediastream/media_stream_constraints_util_audio.cc'
source_filename = "../../third_party/blink/renderer/modules/mediastream/media_stream_constraints_util_audio.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::AudioProcessingProperties" = type <{ i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%union.anon.76 = type { i32 }
%union.anon.112 = type { double }
%"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo" = type { i32, i64, i64 }
%"struct.base::Feature" = type { i8*, i32 }
%"class.blink::AudioDeviceCaptureCapability" = type { %"class.blink::MediaStreamAudioSource"*, %"class.WTF::String", %"class.WTF::String", %"class.media::AudioParameters" }
%"class.blink::MediaStreamAudioSource" = type { %"class.blink::WebPlatformMediaStreamSource", i8, i8, i8, %"class.blink::MediaStreamAudioDeliverer", %class.scoped_refptr.51, %"class.base::WeakPtrFactory" }
%"class.blink::WebPlatformMediaStreamSource" = type { i32 (...)**, %"struct.blink::MediaStreamDevice", %"class.base::OnceCallback", %"class.blink::WebPrivatePtr" }
%"struct.blink::MediaStreamDevice" = type { i32, %"class.std::__1::basic_string", %"struct.media::VideoCaptureControlSupport", i32, %"class.absl::optional", %"class.absl::optional", %"class.std::__1::basic_string", %"class.media::AudioParameters", %"class.absl::optional.12", %"class.absl::optional.45" }
%"struct.media::VideoCaptureControlSupport" = type { i8, i8, i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.media::mojom::DisplayMediaInformation"* }
%"class.media::mojom::DisplayMediaInformation" = type { i32, i8, i32, %"class.mojo::StructPtr.19" }
%"class.mojo::StructPtr.19" = type { %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.media::mojom::CaptureHandle"* }
%"class.media::mojom::CaptureHandle" = type { %"class.url::Origin", %"class.std::__1::basic_string.28" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.23" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.23" = type { %"class.absl::optional_internal::optional_data.24" }
%"class.absl::optional_internal::optional_data.24" = type { %"class.absl::optional_internal::optional_data_base.25" }
%"class.absl::optional_internal::optional_data_base.25" = type { %"class.absl::optional_internal::optional_data_dtor_base.26" }
%"class.absl::optional_internal::optional_data_dtor_base.26" = type { i8, %union.anon.27 }
%union.anon.27 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.31 }
%union.anon.31 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::optional.45" = type { %"class.absl::optional_internal::optional_data.46" }
%"class.absl::optional_internal::optional_data.46" = type { %"class.absl::optional_internal::optional_data_base.47" }
%"class.absl::optional_internal::optional_data_base.47" = type { %"class.absl::optional_internal::optional_data_dtor_base.48" }
%"class.absl::optional_internal::optional_data_dtor_base.48" = type { i8, %union.anon.49 }
%union.anon.49 = type { %"class.base::UnguessableToken" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::MediaStreamAudioDeliverer" = type { %"class.base::Lock", %"class.WTF::Vector", %"class.WTF::Vector", %"class.base::Lock", %"class.media::AudioParameters" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::MediaStreamAudioTrack"**, i32, i32 }
%"class.blink::MediaStreamAudioTrack" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.scoped_refptr.51 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.52" }>
%"class.base::RefCountedThreadSafe.52" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.54", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.54" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.55" }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i8 }
%"class.WTF::String" = type { %class.scoped_refptr.60 }
%class.scoped_refptr.60 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.61" }
%"struct.std::__1::atomic.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__cxx_atomic_impl.64" }
%"struct.std::__1::__cxx_atomic_impl.64" = type { %"struct.std::__1::__cxx_atomic_base_impl.65" }
%"struct.std::__1::__cxx_atomic_base_impl.65" = type { i32 }
%"class.media::AudioParameters" = type { i32, i32, i32, i32, i32, i32, %"class.std::__1::vector", i32, %"class.absl::optional.7" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, %"class.std::__1::__compressed_pair.2" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.gfx::Point3F"* }
%"class.absl::optional.7" = type { %"class.absl::optional_internal::optional_data.8" }
%"class.absl::optional_internal::optional_data.8" = type { %"class.absl::optional_internal::optional_data_base.9" }
%"class.absl::optional_internal::optional_data_base.9" = type { %"class.absl::optional_internal::optional_data_dtor_base.10" }
%"class.absl::optional_internal::optional_data_dtor_base.10" = type { i8, %union.anon.11 }
%union.anon.11 = type { %"struct.media::AudioParameters::HardwareCapabilities" }
%"struct.media::AudioParameters::HardwareCapabilities" = type { i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::AudioCaptureSettings" = type <{ i8*, %"class.std::__1::basic_string", %"class.absl::optional.72", i8, i8, [2 x i8], i32, %"struct.blink::AudioProcessingProperties", i32, [4 x i8] }>
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, %union.anon.76 }
%"class.WTF::Vector.66" = type { %"class.WTF::VectorBuffer.67" }
%"class.WTF::VectorBuffer.67" = type { %"class.WTF::VectorBufferBase.68" }
%"class.WTF::VectorBufferBase.68" = type { %"class.blink::AudioDeviceCaptureCapability"*, i32, i32 }
%"class.blink::MediaConstraints" = type { %"class.blink::WebPrivatePtr.71" }
%"class.blink::WebPrivatePtr.71" = type { i8* }
%"class.blink::BooleanConstraint" = type { %"class.blink::BaseConstraint.base", i8, [6 x i8] }
%"class.blink::BaseConstraint.base" = type <{ i32 (...)**, i8*, i8 }>
%"class.std::__1::tuple.404" = type { %"struct.std::__1::__tuple_impl.405" }
%"struct.std::__1::__tuple_impl.405" = type { %"class.std::__1::__tuple_leaf.129", %"class.std::__1::__tuple_leaf.406" }
%"class.std::__1::__tuple_leaf.129" = type { double }
%"class.std::__1::__tuple_leaf.406" = type { %"class.std::__1::basic_string" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.133" }
%"class.std::__1::__tuple_leaf" = type { %"struct.blink::(anonymous namespace)::Score" }
%"struct.blink::(anonymous namespace)::Score" = type { %"class.std::__1::tuple.127" }
%"class.std::__1::tuple.127" = type { %"struct.std::__1::__tuple_impl.128" }
%"struct.std::__1::__tuple_impl.128" = type <{ %"class.std::__1::__tuple_leaf.129", %"class.std::__1::__tuple_leaf.130", [3 x i8], %"class.std::__1::__tuple_leaf.131", %"class.std::__1::__tuple_leaf.132", [4 x i8] }>
%"class.std::__1::__tuple_leaf.130" = type { i8 }
%"class.std::__1::__tuple_leaf.131" = type { i32 }
%"class.std::__1::__tuple_leaf.132" = type { i32 }
%"class.std::__1::__tuple_leaf.133" = type { %"class.blink::AudioCaptureSettings" }
%"class.WTF::VectorBufferBase.79" = type { %"class.blink::(anonymous namespace)::DeviceContainer"*, i32, i32 }
%"class.blink::(anonymous namespace)::DeviceContainer" = type { %"class.media::AudioParameters", %"class.blink::(anonymous namespace)::StringContainer", %"class.blink::(anonymous namespace)::StringContainer", %"struct.std::__1::array", %"class.WTF::Vector.91" }
%"class.blink::(anonymous namespace)::StringContainer" = type { %"class.blink::media_constraints::DiscreteSet" }
%"class.blink::media_constraints::DiscreteSet" = type { i8, %"class.WTF::Vector.80" }
%"class.WTF::Vector.80" = type { %"class.WTF::VectorBuffer.81" }
%"class.WTF::VectorBuffer.81" = type { %"class.WTF::VectorBufferBase.82" }
%"class.WTF::VectorBufferBase.82" = type { %"class.std::__1::basic_string"*, i32, i32 }
%"struct.std::__1::array" = type { [2 x %"class.blink::(anonymous namespace)::BooleanContainer"] }
%"class.blink::(anonymous namespace)::BooleanContainer" = type { %"class.blink::media_constraints::DiscreteSet.85" }
%"class.blink::media_constraints::DiscreteSet.85" = type { i8, %"class.WTF::Vector.86" }
%"class.WTF::Vector.86" = type { %"class.WTF::VectorBuffer.87" }
%"class.WTF::VectorBuffer.87" = type { %"class.WTF::VectorBufferBase.88" }
%"class.WTF::VectorBufferBase.88" = type { i8*, i32, i32 }
%"class.WTF::Vector.91" = type { %"class.WTF::VectorBuffer.92" }
%"class.WTF::VectorBuffer.92" = type { %"class.WTF::VectorBufferBase.93" }
%"class.WTF::VectorBufferBase.93" = type { %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, i32, i32 }
%"class.blink::(anonymous namespace)::ProcessingBasedContainer" = type { i32, %"struct.std::__1::array.94", %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::AutoGainControlContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer.106" }
%"struct.std::__1::array.94" = type { [5 x %"class.blink::(anonymous namespace)::BooleanContainer"] }
%"class.blink::(anonymous namespace)::EchoCancellationContainer" = type <{ %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.95", %"class.media::AudioParameters", i8, [7 x i8] }>
%"class.blink::media_constraints::DiscreteSet.95" = type { i8, %"class.WTF::Vector.96" }
%"class.WTF::Vector.96" = type { %"class.WTF::VectorBuffer.97" }
%"class.WTF::VectorBuffer.97" = type { %"class.WTF::VectorBufferBase.98" }
%"class.WTF::VectorBufferBase.98" = type { i32*, i32, i32 }
%"class.blink::(anonymous namespace)::AutoGainControlContainer" = type { %"class.blink::media_constraints::DiscreteSet.85" }
%"class.blink::(anonymous namespace)::NumericDiscreteSetContainer" = type { %"class.WTF::Vector.101" }
%"class.WTF::Vector.101" = type { %"class.WTF::VectorBuffer.102" }
%"class.WTF::VectorBuffer.102" = type { %"class.WTF::VectorBufferBase.103" }
%"class.WTF::VectorBufferBase.103" = type { i32*, i32, i32 }
%"class.blink::(anonymous namespace)::NumericRangeSetContainer" = type { %"class.blink::media_constraints::NumericRangeSet" }
%"class.blink::media_constraints::NumericRangeSet" = type { %"class.absl::optional.72", %"class.absl::optional.72" }
%"class.blink::(anonymous namespace)::NumericRangeSetContainer.106" = type { %"class.blink::media_constraints::NumericRangeSet.107" }
%"class.blink::media_constraints::NumericRangeSet.107" = type { %"class.absl::optional.108", %"class.absl::optional.108" }
%"class.absl::optional.108" = type { %"class.absl::optional_internal::optional_data.109" }
%"class.absl::optional_internal::optional_data.109" = type { %"class.absl::optional_internal::optional_data_base.110" }
%"class.absl::optional_internal::optional_data_base.110" = type { %"class.absl::optional_internal::optional_data_dtor_base.111" }
%"class.absl::optional_internal::optional_data_dtor_base.111" = type { i8, %union.anon.112 }
%"class.blink::(anonymous namespace)::SourceInfo" = type { i32, %"struct.blink::AudioProcessingProperties", %"class.absl::optional.72", %"class.absl::optional.72", %"class.absl::optional.108" }
%"class.absl::optional.366" = type { %"class.absl::optional_internal::optional_data.367" }
%"class.absl::optional_internal::optional_data.367" = type { %"class.absl::optional_internal::optional_data_base.368" }
%"class.absl::optional_internal::optional_data_base.368" = type { %"class.absl::optional_internal::optional_data_dtor_base.369" }
%"class.absl::optional_internal::optional_data_dtor_base.369" = type { i8, [3 x i8], %union.anon.370 }
%union.anon.370 = type { %"struct.blink::AudioProcessingProperties" }
%"class.blink::(anonymous namespace)::CandidatesContainer" = type { %"class.std::__1::basic_string", %"class.WTF::Vector.77" }
%"class.WTF::Vector.77" = type { %"class.WTF::VectorBuffer.78" }
%"class.WTF::VectorBuffer.78" = type { %"class.WTF::VectorBufferBase.79" }
%"class.blink::ProcessedLocalAudioSource" = type { %"class.blink::MediaStreamAudioSource", %"class.media::AudioCapturerSource::CaptureCallback", %"class.blink::WeakPersistent", %"class.blink::WeakPersistent.350", %"struct.blink::AudioProcessingProperties", i32, %"class.base::OnceCallback.352", %class.scoped_refptr.353, %class.scoped_refptr.354, i32, %"class.blink::MediaStreamAudioLevelCalculator", i8, %"class.base::WeakPtrFactory.358" }
%"class.media::AudioCapturerSource::CaptureCallback" = type { i32 (...)** }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::LocalFrame"*, %"class.blink::PersistentNodePtr" }
%"class.blink::LocalFrame" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.167", i32, [4 x i8], %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.339", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.346", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.188", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.285", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.203" }
%"struct.std::__1::atomic.203" = type { %"struct.std::__1::__atomic_base.204" }
%"struct.std::__1::__atomic_base.204" = type { %"struct.std::__1::__atomic_base.205" }
%"struct.std::__1::__atomic_base.205" = type { %"struct.std::__1::__cxx_atomic_impl.206" }
%"struct.std::__1::__cxx_atomic_impl.206" = type { %"struct.std::__1::__cxx_atomic_base_impl.207" }
%"struct.std::__1::__cxx_atomic_base_impl.207" = type { i64 }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::Worklist.214"* }
%"class.blink::Worklist.214" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.203" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::Worklist.221"* }
%"class.blink::Worklist.221" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.203" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::Worklist.228"* }
%"class.blink::Worklist.228" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.203" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::Worklist.235"* }
%"class.blink::Worklist.235" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.203" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::Worklist.242"* }
%"class.blink::Worklist.242" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.203" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::Worklist.249"* }
%"class.blink::Worklist.249" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.203" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::Worklist.256"* }
%"class.blink::Worklist.256" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.203" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.263", %"class.std::__1::__compressed_pair.272", %"class.std::__1::__compressed_pair.277", %"class.std::__1::__compressed_pair.279", [4 x i8] }>
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265", %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { i64 }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { float }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.288", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.297" }
%"class.WTF::Vector.297" = type { %"class.WTF::VectorBuffer.298" }
%"class.WTF::VectorBuffer.298" = type { %"class.WTF::VectorBufferBase.299" }
%"class.WTF::VectorBufferBase.299" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.313" }
%"class.WTF::VectorBuffer.313" = type { %"class.WTF::VectorBufferBase.314" }
%"class.WTF::VectorBufferBase.314" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.327" }
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.214"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.221"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.228"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.235"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.242"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.359", i64 }
%"class.std::__1::vector.359" = type { %"class.std::__1::__vector_base.360" }
%"class.std::__1::__vector_base.360" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.361" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.346" = type { %"struct.std::__1::__atomic_base.347" }
%"struct.std::__1::__atomic_base.347" = type { %"struct.std::__1::__cxx_atomic_impl.348" }
%"struct.std::__1::__cxx_atomic_impl.348" = type { %"struct.std::__1::__cxx_atomic_base_impl.349" }
%"struct.std::__1::__cxx_atomic_base_impl.349" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::WeakPersistent.350" = type { %"class.blink::PersistentBase.351" }
%"class.blink::PersistentBase.351" = type { %"class.blink::PeerConnectionDependencyFactory"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PeerConnectionDependencyFactory" = type opaque
%"class.base::OnceCallback.352" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.353 = type { %"class.blink::MediaStreamAudioProcessor"* }
%"class.blink::MediaStreamAudioProcessor" = type opaque
%class.scoped_refptr.354 = type { %"class.media::AudioCapturerSource"* }
%"class.media::AudioCapturerSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.355", [4 x i8] }>
%"class.base::RefCountedThreadSafe.355" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::MediaStreamAudioLevelCalculator" = type { i32, float, %class.scoped_refptr.356 }
%class.scoped_refptr.356 = type { %"class.blink::MediaStreamAudioLevelCalculator::Level"* }
%"class.blink::MediaStreamAudioLevelCalculator::Level" = type <{ %"class.base::RefCountedThreadSafe.357", [4 x i8], %"class.base::Lock", float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.357" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.358" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.blink::MediaTrackConstraintSetPlatform" = type { %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", %"class.blink::StringConstraint", %"class.blink::StringConstraint", %"class.blink::DoubleConstraint", %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::StringConstraint", %"class.blink::DoubleConstraint", %"class.blink::LongConstraint", %"class.blink::StringConstraint", %"class.blink::BooleanConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint", %"class.blink::StringConstraint", %"class.blink::StringConstraint", %"class.blink::StringConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint", %"class.blink::BooleanConstraint", %"class.blink::LongConstraint" }
%"class.blink::DoubleConstraint" = type <{ %"class.blink::BaseConstraint.base", [7 x i8], double, double, double, double, i8, [7 x i8] }>
%"class.blink::StringConstraint" = type { %"class.blink::BaseConstraint.base", %"class.WTF::Vector.117", %"class.WTF::Vector.117" }
%"class.WTF::Vector.117" = type { %"class.WTF::VectorBuffer.118" }
%"class.WTF::VectorBuffer.118" = type { %"class.WTF::VectorBufferBase.119" }
%"class.WTF::VectorBufferBase.119" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::LongConstraint" = type <{ %"class.blink::BaseConstraint.base", [3 x i8], i32, i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.122" = type { %"class.WTF::VectorBuffer.123" }
%"class.WTF::VectorBuffer.123" = type { %"class.WTF::VectorBufferBase.124" }
%"class.WTF::VectorBufferBase.124" = type { %"struct.blink::MediaTrackConstraintSetPlatform"*, i32, i32 }
%"class.blink::BaseConstraint" = type <{ i32 (...)**, i8*, i8, [7 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF6VectorIN5blink28AudioDeviceCaptureCapabilityELj0ENS_18PartitionAllocatorEEC2ESt16initializer_listIS2_E = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

$_ZN3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_ = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPi = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_ = comdat any

$_ZNK5blink17media_constraints11DiscreteSetINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12IntersectionERKS9_ = comdat any

$_ZN3WTF6VectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS7_EEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZNK5blink17media_constraints11DiscreteSetIbE12IntersectionERKS2_ = comdat any

$_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKbEEvOT_ = comdat any

$_ZNK5blink17media_constraints11DiscreteSetINS_25AudioProcessingProperties20EchoCancellationTypeEE12IntersectionERKS4_ = comdat any

$_ZN3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE5eraseEPi = comdat any

$_ZNK3WTF6VectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink28AudioDeviceCaptureCapabilityEEEmm = comdat any

@_ZN5blink25kMediaStreamSourceDesktopE = external constant [0 x i8], align 1
@_ZN5blink21kMediaStreamSourceTabE = external constant [0 x i8], align 1
@_ZN5blink24kMediaStreamSourceSystemE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_115DeviceContainerEEEPKcv = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::(anonymous namespace)::DeviceContainer]\00", align 1
@__const.DeviceContainer.source_info = private unnamed_addr constant { i32, %"struct.blink::AudioProcessingProperties", { { { { i8, [3 x i8], %union.anon.76 } } } }, { { { { i8, [3 x i8], %union.anon.76 } } } }, [4 x i8], { { { { i8, [7 x i8], %union.anon.112 } } } } } { i32 -1431655766, %"struct.blink::AudioProcessingProperties" <{ i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86 }>, { { { { i8, [3 x i8], %union.anon.76 } } } } { { { { i8, [3 x i8], %union.anon.76 } } } { { { i8, [3 x i8], %union.anon.76 } } { { i8, [3 x i8], %union.anon.76 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.76 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.76 } } } } { { { { i8, [3 x i8], %union.anon.76 } } } { { { i8, [3 x i8], %union.anon.76 } } { { i8, [3 x i8], %union.anon.76 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.76 { i32 -1431655766 } } } } }, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.112 } } } } { { { { i8, [7 x i8], %union.anon.112 } } } { { { i8, [7 x i8], %union.anon.112 } } { { i8, [7 x i8], %union.anon.112 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.112 { double 0xFFFFFFFFFFFFFFFF } } } } } }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEPKcv = private unnamed_addr constant [133 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_124ProcessingBasedContainerEEEPKcv = private unnamed_addr constant [102 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::(anonymous namespace)::ProcessingBasedContainer]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEPKcv = private unnamed_addr constant [102 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioProcessingProperties::EchoCancellationType]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@_ZN5blink12_GLOBAL__N_124ProcessingBasedContainer32kBooleanPropertyContainerInfoMapE = internal unnamed_addr constant [5 x %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo"] [%"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo" { i32 0, i64 1280, i64 7 }, %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo" { i32 1, i64 1136, i64 9 }, %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo" { i32 2, i64 1208, i64 11 }, %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo" { i32 3, i64 1256, i64 12 }, %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo" { i32 4, i64 1232, i64 13 }], align 16
@_ZN5blink23kFallbackAudioLatencyMsE = external local_unnamed_addr constant i32, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv = private unnamed_addr constant [52 x i8] c"const char *WTF::GetStringWithTypeName() [T = bool]\00", align 1
@_ZN8features35kWebRtcEnableCaptureMultiChannelApmE = external global %"struct.base::Feature", align 8
@_ZTVN5blink14LongConstraintE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.18 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@_ZTVN5blink16DoubleConstraintE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink17BooleanConstraintE = external unnamed_addr constant { [9 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink28AudioDeviceCaptureCapabilityEEEPKcv = private unnamed_addr constant [83 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioDeviceCaptureCapability]\00", align 1
@switch.table._ZN5blink26SelectSettingsAudioCaptureERKN3WTF6VectorINS_28AudioDeviceCaptureCapabilityELj0ENS0_18PartitionAllocatorEEERKNS_16MediaConstraintsEbb = private unnamed_addr constant [3 x i32] [i32 1, i32 3, i32 2], align 4

@_ZN5blink28AudioDeviceCaptureCapabilityC1Ev = hidden unnamed_addr alias void (%"class.blink::AudioDeviceCaptureCapability"*), void (%"class.blink::AudioDeviceCaptureCapability"*)* @_ZN5blink28AudioDeviceCaptureCapabilityC2Ev
@_ZN5blink28AudioDeviceCaptureCapabilityC1EPNS_22MediaStreamAudioSourceE = hidden unnamed_addr alias void (%"class.blink::AudioDeviceCaptureCapability"*, %"class.blink::MediaStreamAudioSource"*), void (%"class.blink::AudioDeviceCaptureCapability"*, %"class.blink::MediaStreamAudioSource"*)* @_ZN5blink28AudioDeviceCaptureCapabilityC2EPNS_22MediaStreamAudioSourceE
@_ZN5blink28AudioDeviceCaptureCapabilityC1EN3WTF6StringES2_RKN5media15AudioParametersE = hidden unnamed_addr alias void (%"class.blink::AudioDeviceCaptureCapability"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, %"class.media::AudioParameters"*), void (%"class.blink::AudioDeviceCaptureCapability"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, %"class.media::AudioParameters"*)* @_ZN5blink28AudioDeviceCaptureCapabilityC2EN3WTF6StringES2_RKN5media15AudioParametersE
@_ZN5blink28AudioDeviceCaptureCapabilityC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::AudioDeviceCaptureCapability"*, %"class.blink::AudioDeviceCaptureCapability"*), void (%"class.blink::AudioDeviceCaptureCapability"*, %"class.blink::AudioDeviceCaptureCapability"*)* @_ZN5blink28AudioDeviceCaptureCapabilityC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28AudioDeviceCaptureCapabilityC2Ev(%"class.blink::AudioDeviceCaptureCapability"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 3
  %3 = bitcast %"class.blink::AudioDeviceCaptureCapability"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false)
  tail call void @_ZN5media15AudioParameters23UnavailableDeviceParamsEv(%"class.media::AudioParameters"* sret %2) #12
  ret void
}

declare void @_ZN5media15AudioParameters23UnavailableDeviceParamsEv(%"class.media::AudioParameters"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28AudioDeviceCaptureCapabilityC2EPNS_22MediaStreamAudioSourceE(%"class.blink::AudioDeviceCaptureCapability"*, %"class.blink::MediaStreamAudioSource"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 0
  store %"class.blink::MediaStreamAudioSource"* %1, %"class.blink::MediaStreamAudioSource"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 3
  %6 = bitcast %"class.WTF::StringImpl"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  tail call void @_ZN5media15AudioParametersC1Ev(%"class.media::AudioParameters"* %5) #12
  ret void
}

declare void @_ZN5media15AudioParametersC1Ev(%"class.media::AudioParameters"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28AudioDeviceCaptureCapabilityC2EN3WTF6StringES2_RKN5media15AudioParametersE(%"class.blink::AudioDeviceCaptureCapability"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, %"class.media::AudioParameters"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %6 = ptrtoint %"class.WTF::StringImpl"* %2 to i64
  %7 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 0
  store %"class.blink::MediaStreamAudioSource"* null, %"class.blink::MediaStreamAudioSource"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::String"* %8 to i64*
  store i64 %5, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 2
  %11 = bitcast %"class.WTF::String"* %10 to i64*
  store i64 %6, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 3
  tail call void @_ZN5media15AudioParametersC1ERKS0_(%"class.media::AudioParameters"* %12, %"class.media::AudioParameters"* dereferenceable(64) %3) #12
  ret void
}

declare void @_ZN5media15AudioParametersC1ERKS0_(%"class.media::AudioParameters"*, %"class.media::AudioParameters"* dereferenceable(64)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28AudioDeviceCaptureCapabilityC2ERKS0_(%"class.blink::AudioDeviceCaptureCapability"*, %"class.blink::AudioDeviceCaptureCapability"* dereferenceable(88)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::AudioDeviceCaptureCapability"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.blink::AudioDeviceCaptureCapability"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #12
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #12
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %2, %10, %25
  %28 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %1, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %49, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %27, %32, %47
  %50 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 3
  %51 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %1, i64 0, i32 3
  tail call void @_ZN5media15AudioParametersC1ERKS0_(%"class.media::AudioParameters"* %50, %"class.media::AudioParameters"* dereferenceable(64) %51) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink28AudioDeviceCaptureCapability8DeviceIDEv(%"class.blink::AudioDeviceCaptureCapability"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 0
  %4 = load %"class.blink::MediaStreamAudioSource"*, %"class.blink::MediaStreamAudioSource"** %3, align 8
  %5 = icmp eq %"class.blink::MediaStreamAudioSource"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %4, i64 0, i32 0, i32 1, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  br label %17

15:                                               ; preds = %6
  %16 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  br label %17

17:                                               ; preds = %12, %15
  %18 = phi i8* [ %14, %12 ], [ %16, %15 ]
  %19 = icmp eq i8* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = tail call i64 @strlen(i8* nonnull %18) #13
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i64 [ %21, %20 ], [ 0, %17 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %18, i64 %23) #12
  br label %46

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #12
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #12
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %46

46:                                               ; preds = %44, %29, %24, %22
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  ret %"class.WTF::StringImpl"* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink28AudioDeviceCaptureCapability7GroupIDEv(%"class.blink::AudioDeviceCaptureCapability"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 0
  %4 = load %"class.blink::MediaStreamAudioSource"*, %"class.blink::MediaStreamAudioSource"** %3, align 8
  %5 = icmp eq %"class.blink::MediaStreamAudioSource"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %4, i64 0, i32 0, i32 1, i32 4, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %28, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %4, i64 0, i32 0, i32 1, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  br label %21

19:                                               ; preds = %10
  %20 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  br label %21

21:                                               ; preds = %16, %19
  %22 = phi i8* [ %18, %16 ], [ %20, %19 ]
  %23 = icmp eq i8* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = tail call i64 @strlen(i8* nonnull %22) #13
  br label %26

26:                                               ; preds = %21, %24
  %27 = phi i64 [ %25, %24 ], [ 0, %21 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %22, i64 %27) #12
  br label %50

28:                                               ; preds = %6, %1
  %29 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %31, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #12
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  tail call void @llvm.trap() #12
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %48, %33, %28, %26
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  ret %"class.WTF::StringImpl"* %52
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(64) %"class.media::AudioParameters"* @_ZNK5blink28AudioDeviceCaptureCapability10ParametersEv(%"class.blink::AudioDeviceCaptureCapability"* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 0
  %3 = load %"class.blink::MediaStreamAudioSource"*, %"class.blink::MediaStreamAudioSource"** %2, align 8
  %4 = icmp eq %"class.blink::MediaStreamAudioSource"* %3, null
  %5 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %3, i64 0, i32 0, i32 1, i32 7
  %6 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %0, i64 0, i32 3
  %7 = select i1 %4, %"class.media::AudioParameters"* %6, %"class.media::AudioParameters"* %5
  ret %"class.media::AudioParameters"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26SelectSettingsAudioCaptureERKN3WTF6VectorINS_28AudioDeviceCaptureCapabilityELj0ENS0_18PartitionAllocatorEEERKNS_16MediaConstraintsEbb(%"class.blink::AudioCaptureSettings"* noalias sret, %"class.WTF::Vector.66"* nocapture readonly dereferenceable(16), %"class.blink::MediaConstraints"* dereferenceable(8), i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %6 = alloca %"class.blink::BooleanConstraint", align 8
  %7 = alloca %"class.blink::BooleanConstraint", align 8
  %8 = alloca %"class.absl::optional.72", align 4
  %9 = alloca %"class.absl::optional.72", align 4
  %10 = alloca %"struct.blink::AudioProcessingProperties", align 4
  %11 = alloca [7 x i8], align 8
  %12 = alloca %"class.std::__1::tuple.404", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::tuple.404", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"struct.blink::AudioProcessingProperties", align 4
  %17 = alloca i64, align 8
  %18 = alloca %"class.blink::AudioCaptureSettings", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.blink::AudioCaptureSettings", align 8
  %21 = alloca %"class.blink::AudioCaptureSettings", align 8
  %22 = alloca %"class.std::__1::tuple", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.WTF::VectorBufferBase.79", align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %"class.WTF::Vector.96", align 8
  %28 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %29 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %30 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %31 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %32 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %33 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %34 = alloca { i64, i64 }, align 8
  %35 = alloca %"class.WTF::Vector.101", align 8
  %36 = alloca <2 x i64>, align 16
  %37 = alloca %"class.blink::(anonymous namespace)::SourceInfo", align 8
  %38 = alloca %"class.media::AudioParameters", align 8
  %39 = alloca %"class.WTF::Vector.96", align 8
  %40 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %41 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %42 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %43 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %44 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %45 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %46 = alloca { i64, i64 }, align 8
  %47 = alloca %"class.WTF::Vector.101", align 8
  %48 = alloca { i64, i64 }, align 8
  %49 = alloca %"class.blink::(anonymous namespace)::SourceInfo", align 8
  %50 = alloca %"class.media::AudioParameters", align 8
  %51 = alloca %"class.WTF::Vector.96", align 8
  %52 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %53 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %54 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %55 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %56 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %57 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %58 = alloca { i64, i64 }, align 8
  %59 = alloca %"class.WTF::Vector.101", align 8
  %60 = alloca { i64, i64 }, align 8
  %61 = alloca %"class.blink::(anonymous namespace)::SourceInfo", align 8
  %62 = alloca %"class.media::AudioParameters", align 8
  %63 = alloca %"struct.blink::AudioProcessingProperties", align 4
  %64 = alloca %"class.media::AudioParameters", align 8
  %65 = alloca %"class.absl::optional.366", align 4
  %66 = alloca %"class.WTF::String", align 8
  %67 = alloca %"class.WTF::String", align 8
  %68 = alloca %"class.WTF::String", align 8
  %69 = alloca %"class.WTF::String", align 8
  %70 = alloca [1 x %"class.std::__1::basic_string"], align 8
  %71 = alloca %"class.WTF::String", align 8
  %72 = alloca [1 x %"class.std::__1::basic_string"], align 8
  %73 = alloca %"class.WTF::String", align 8
  %74 = alloca [16 x i8], align 4
  %75 = alloca %"class.blink::(anonymous namespace)::ProcessingBasedContainer", align 8
  %76 = alloca %"class.blink::(anonymous namespace)::ProcessingBasedContainer", align 8
  %77 = alloca %"class.blink::(anonymous namespace)::ProcessingBasedContainer", align 8
  %78 = alloca %"class.WTF::String", align 8
  %79 = alloca %"class.std::__1::basic_string", align 8
  %80 = alloca %"class.std::__1::basic_string", align 8
  %81 = alloca %"class.WTF::String", align 8
  %82 = alloca %"class.blink::(anonymous namespace)::CandidatesContainer", align 8
  %83 = alloca %"class.blink::(anonymous namespace)::CandidatesContainer", align 8
  %84 = alloca %"class.blink::AudioCaptureSettings", align 8
  %85 = alloca %"class.std::__1::tuple", align 8
  %86 = getelementptr inbounds %"class.WTF::Vector.66", %"class.WTF::Vector.66"* %1, i64 0, i32 0, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %5
  tail call void @_ZN5blink20AudioCaptureSettingsC1Ev(%"class.blink::AudioCaptureSettings"* %0) #12
  br label %3178

90:                                               ; preds = %5
  %91 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #12
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN5blink12_GLOBAL__N_120GetMediaStreamSourceERKNS_16MediaConstraintsE(%"class.std::__1::basic_string"* nonnull sret %79, %"class.blink::MediaConstraints"* dereferenceable(8) %2)
  %95 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  %99 = load i64, i64* %93, align 8
  %100 = zext i8 %97 to i64
  %101 = select i1 %98, i64 %99, i64 %100
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %181

103:                                              ; preds = %90
  %104 = bitcast %"class.std::__1::basic_string"* %80 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #12
  %105 = bitcast %"class.WTF::String"* %81 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #12
  %106 = getelementptr inbounds %"class.WTF::Vector.66", %"class.WTF::Vector.66"* %1, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.blink::AudioDeviceCaptureCapability"*, %"class.blink::AudioDeviceCaptureCapability"** %106, align 8
  %108 = bitcast %"class.WTF::String"* %78 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108)
  %109 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %107, i64 0, i32 0
  %110 = load %"class.blink::MediaStreamAudioSource"*, %"class.blink::MediaStreamAudioSource"** %109, align 8
  %111 = icmp eq %"class.blink::MediaStreamAudioSource"* %110, null
  br i1 %111, label %130, label %112

112:                                              ; preds = %103
  %113 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %110, i64 0, i32 0, i32 1, i32 1
  %114 = bitcast %"class.std::__1::basic_string"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  br label %123

121:                                              ; preds = %112
  %122 = bitcast %"class.std::__1::basic_string"* %113 to i8*
  br label %123

123:                                              ; preds = %121, %118
  %124 = phi i8* [ %120, %118 ], [ %122, %121 ]
  %125 = icmp eq i8* %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %123
  %127 = tail call i64 @strlen(i8* nonnull %124) #13
  br label %128

128:                                              ; preds = %126, %123
  %129 = phi i64 [ %127, %126 ], [ 0, %123 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %78, i8* %124, i64 %129) #12
  br label %152

130:                                              ; preds = %103
  %131 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %107, i64 0, i32 1, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %133, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %134, label %152, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i33
  %144 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %143, i33 1) #12
  %145 = extractvalue { i33, i1 } %144, 1
  %146 = extractvalue { i33, i1 } %144, 0
  %147 = icmp slt i33 %146, 0
  %148 = or i1 %145, %147
  br i1 %148, label %149, label %150, !prof !2

149:                                              ; preds = %140
  tail call void @llvm.trap() #12
  unreachable

150:                                              ; preds = %140
  %151 = trunc i33 %146 to i32
  store i32 %151, i32* %141, align 4
  br label %152

152:                                              ; preds = %128, %130, %135, %150
  %153 = bitcast %"class.WTF::String"* %78 to i64*
  %154 = load i64, i64* %153, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108)
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 0, i32 0, i32 0
  %156 = bitcast %"class.WTF::String"* %81 to i64*
  store i64 %154, i64* %156, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %80, %"class.WTF::String"* nonnull %81, i32 0) #12
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.std::__1::basic_string"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  store i8 0, i8* %164, align 1
  store i8 0, i8* %104, align 8
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %152
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #12
  br label %180

180:                                              ; preds = %152, %176, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #12
  br label %181

181:                                              ; preds = %180, %90
  %182 = phi i64 [ %162, %180 ], [ 0, %90 ]
  %183 = phi i64 [ %160, %180 ], [ 0, %90 ]
  %184 = phi i8* [ %158, %180 ], [ null, %90 ]
  %185 = bitcast %"class.blink::(anonymous namespace)::CandidatesContainer"* %82 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %185) #12
  %186 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %188 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %82, i64 0, i32 1, i32 0, i32 0, i32 0
  %189 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %82, i64 0, i32 1, i32 0, i32 0, i32 1
  %190 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %82, i64 0, i32 1, i32 0, i32 0, i32 2
  %191 = lshr i64 %182, 56
  %192 = trunc i64 %191 to i8
  %193 = icmp slt i8 %192, 0
  %194 = bitcast %"class.blink::(anonymous namespace)::CandidatesContainer"* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %194, i8 -86, i64 40, i1 false)
  br i1 %193, label %197, label %195

195:                                              ; preds = %181
  %196 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i8* %184, i8** %186, align 8
  store i64 %183, i64* %187, align 8
  store i64 %182, i64* %196, align 8
  br label %199

197:                                              ; preds = %181
  %198 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %82, i64 0, i32 0
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %198, i8* %184, i64 %183) #12
  br label %199

199:                                              ; preds = %197, %195
  %200 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %82, i64 0, i32 1
  %201 = bitcast %"class.WTF::Vector.77"* %200 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %201, i8 0, i64 16, i1 false) #12
  %202 = getelementptr inbounds %"class.WTF::Vector.66", %"class.WTF::Vector.66"* %1, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.blink::AudioDeviceCaptureCapability"*, %"class.blink::AudioDeviceCaptureCapability"** %202, align 8
  %204 = load i32, i32* %86, align 4
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %203, i64 %205
  %207 = icmp eq i32 %204, 0
  br i1 %207, label %1224, label %208

208:                                              ; preds = %199
  %209 = getelementptr inbounds %"class.WTF::Vector.77", %"class.WTF::Vector.77"* %200, i64 0, i32 0, i32 0, i32 0
  %210 = bitcast %"class.WTF::VectorBufferBase.79"* %24 to i8*
  %211 = getelementptr inbounds %"class.WTF::VectorBufferBase.79", %"class.WTF::VectorBufferBase.79"* %24, i64 0, i32 0
  %212 = getelementptr inbounds %"class.WTF::VectorBufferBase.79", %"class.WTF::VectorBufferBase.79"* %24, i64 0, i32 1
  %213 = bitcast i32* %212 to i64*
  %214 = bitcast %"class.WTF::Vector.77"* %200 to i8**
  %215 = bitcast %"class.WTF::Vector.77"* %200 to i64*
  %216 = getelementptr inbounds %"class.WTF::Vector.77", %"class.WTF::Vector.77"* %200, i64 0, i32 0, i32 0
  %217 = getelementptr inbounds [16 x i8], [16 x i8]* %74, i64 0, i64 0
  %218 = bitcast %"class.WTF::String"* %69 to i8*
  %219 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %69, i64 0, i32 0, i32 0
  %220 = bitcast [1 x %"class.std::__1::basic_string"]* %70 to i8*
  %221 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %70, i64 0, i64 0
  %222 = bitcast %"class.WTF::String"* %71 to i8*
  %223 = bitcast %"class.WTF::String"* %68 to i8*
  %224 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 0, i32 0, i32 0
  %225 = bitcast %"class.WTF::String"* %68 to i64*
  %226 = bitcast %"class.WTF::String"* %71 to i64*
  %227 = bitcast [1 x %"class.std::__1::basic_string"]* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  %229 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %70, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %70, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %231 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 0, i32 0, i32 0
  %232 = bitcast %"class.WTF::String"* %67 to i8*
  %233 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %234 = bitcast [1 x %"class.std::__1::basic_string"]* %72 to i8*
  %235 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %72, i64 0, i64 0
  %236 = bitcast %"class.WTF::String"* %73 to i8*
  %237 = bitcast %"class.WTF::String"* %66 to i8*
  %238 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %239 = bitcast %"class.WTF::String"* %66 to i64*
  %240 = bitcast %"class.WTF::String"* %73 to i64*
  %241 = bitcast [1 x %"class.std::__1::basic_string"]* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %241, i64 0, i32 1, i32 0
  %243 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %72, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %72, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %245 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 0, i32 0, i32 0
  %246 = bitcast %"struct.blink::AudioProcessingProperties"* %63 to i8*
  %247 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %63, i64 0, i32 0
  %248 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %63, i64 0, i32 1
  %249 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %63, i64 0, i32 5
  %250 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %63, i64 0, i32 6
  %251 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %63, i64 0, i32 7
  %252 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %63, i64 0, i32 8
  %253 = bitcast i8* %248 to i32*
  %254 = bitcast i8* %252 to i32*
  %255 = bitcast %"class.media::AudioParameters"* %64 to i8*
  %256 = getelementptr inbounds %"class.media::AudioParameters", %"class.media::AudioParameters"* %64, i64 0, i32 2
  %257 = getelementptr inbounds %"class.media::AudioParameters", %"class.media::AudioParameters"* %64, i64 0, i32 3
  %258 = getelementptr inbounds %"class.absl::optional.366", %"class.absl::optional.366"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %259 = getelementptr inbounds %"class.absl::optional.366", %"class.absl::optional.366"* %65, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %260 = bitcast %"struct.blink::AudioProcessingProperties"* %259 to i8*
  %261 = bitcast %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %75 to i8*
  %262 = bitcast %"class.WTF::Vector.96"* %51 to i8*
  %263 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %52, i64 0, i32 0
  %264 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %53, i64 0, i32 0
  %265 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %54, i64 0, i32 0
  %266 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %55, i64 0, i32 0
  %267 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %56, i64 0, i32 0
  %268 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %57, i64 0, i32 0
  %269 = bitcast { i64, i64 }* %58 to i8*
  %270 = bitcast %"class.WTF::Vector.101"* %59 to i8*
  %271 = bitcast { i64, i64 }* %60 to i8*
  %272 = bitcast %"class.blink::(anonymous namespace)::SourceInfo"* %61 to i8*
  %273 = bitcast %"class.media::AudioParameters"* %62 to i8*
  %274 = bitcast { i64, i64 }* %58 to %"class.blink::media_constraints::NumericRangeSet"*
  %275 = bitcast { i64, i64 }* %60 to %"class.blink::media_constraints::NumericRangeSet"*
  %276 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %51, i64 0, i32 0, i32 0, i32 0
  %277 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %51, i64 0, i32 0, i32 0, i32 1
  %278 = bitcast %"class.WTF::Vector.96"* %51 to i64*
  %279 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %51, i64 0, i32 0, i32 0, i32 2
  %280 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %52, i64 0, i32 1
  %281 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %52, i64 0, i32 1, i32 0, i32 0, i32 1
  %282 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %52, i64 0, i32 1, i32 0, i32 0, i32 2
  %283 = bitcast %"class.WTF::Vector.86"* %280 to i64*
  %284 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %53, i64 0, i32 1
  %285 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %53, i64 0, i32 1, i32 0, i32 0, i32 1
  %286 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %53, i64 0, i32 1, i32 0, i32 0, i32 2
  %287 = bitcast %"class.WTF::Vector.86"* %284 to i64*
  %288 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %54, i64 0, i32 1
  %289 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %54, i64 0, i32 1, i32 0, i32 0, i32 1
  %290 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %54, i64 0, i32 1, i32 0, i32 0, i32 2
  %291 = bitcast %"class.WTF::Vector.86"* %288 to i64*
  %292 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %55, i64 0, i32 1
  %293 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %55, i64 0, i32 1, i32 0, i32 0, i32 1
  %294 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %55, i64 0, i32 1, i32 0, i32 0, i32 2
  %295 = bitcast %"class.WTF::Vector.86"* %292 to i64*
  %296 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %56, i64 0, i32 1
  %297 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %56, i64 0, i32 1, i32 0, i32 0, i32 1
  %298 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %56, i64 0, i32 1, i32 0, i32 0, i32 2
  %299 = bitcast %"class.WTF::Vector.86"* %296 to i64*
  %300 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %57, i64 0, i32 1
  %301 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %57, i64 0, i32 1, i32 0, i32 0, i32 1
  %302 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %57, i64 0, i32 1, i32 0, i32 0, i32 2
  %303 = bitcast %"class.WTF::Vector.86"* %300 to i64*
  %304 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %58, i64 0, i32 0
  %305 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %58, i64 0, i32 1
  %306 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %59, i64 0, i32 0, i32 0, i32 0
  %307 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %59, i64 0, i32 0, i32 0, i32 1
  %308 = bitcast %"class.WTF::Vector.101"* %59 to i64*
  %309 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %59, i64 0, i32 0, i32 0, i32 2
  %310 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %60, i64 0, i32 0
  %311 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %60, i64 0, i32 1
  %312 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %61, i64 0, i32 0
  %313 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %61, i64 0, i32 1
  %314 = bitcast %"struct.blink::AudioProcessingProperties"* %313 to i8*
  %315 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %61, i64 0, i32 2
  %316 = bitcast %"class.absl::optional.72"* %315 to i64*
  %317 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %61, i64 0, i32 3
  %318 = bitcast %"class.absl::optional.72"* %317 to i64*
  %319 = getelementptr inbounds i8, i8* %272, i64 36
  %320 = bitcast i8* %319 to i32*
  %321 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %61, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %322 = getelementptr inbounds i8, i8* %272, i64 41
  %323 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %61, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %324 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %57, i64 0, i32 1, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %56, i64 0, i32 1, i32 0, i32 0, i32 0
  %326 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %55, i64 0, i32 1, i32 0, i32 0, i32 0
  %327 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %54, i64 0, i32 1, i32 0, i32 0, i32 0
  %328 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %53, i64 0, i32 1, i32 0, i32 0, i32 0
  %329 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %52, i64 0, i32 1, i32 0, i32 0, i32 0
  %330 = bitcast %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %76 to i8*
  %331 = bitcast %"class.WTF::Vector.96"* %39 to i8*
  %332 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %40, i64 0, i32 0
  %333 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %41, i64 0, i32 0
  %334 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %42, i64 0, i32 0
  %335 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %43, i64 0, i32 0
  %336 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %44, i64 0, i32 0
  %337 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %45, i64 0, i32 0
  %338 = bitcast { i64, i64 }* %46 to i8*
  %339 = bitcast %"class.WTF::Vector.101"* %47 to i8*
  %340 = bitcast { i64, i64 }* %48 to i8*
  %341 = bitcast %"class.blink::(anonymous namespace)::SourceInfo"* %49 to i8*
  %342 = bitcast %"class.media::AudioParameters"* %50 to i8*
  %343 = bitcast { i64, i64 }* %46 to %"class.blink::media_constraints::NumericRangeSet"*
  %344 = bitcast { i64, i64 }* %48 to %"class.blink::media_constraints::NumericRangeSet"*
  %345 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %39, i64 0, i32 0, i32 0, i32 0
  %346 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %39, i64 0, i32 0, i32 0, i32 1
  %347 = bitcast %"class.WTF::Vector.96"* %39 to i64*
  %348 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %39, i64 0, i32 0, i32 0, i32 2
  %349 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %40, i64 0, i32 1
  %350 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %40, i64 0, i32 1, i32 0, i32 0, i32 1
  %351 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %40, i64 0, i32 1, i32 0, i32 0, i32 2
  %352 = bitcast %"class.WTF::Vector.86"* %349 to i64*
  %353 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %41, i64 0, i32 1
  %354 = bitcast %"class.WTF::Vector.86"* %353 to i8*
  %355 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %42, i64 0, i32 1
  %356 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %42, i64 0, i32 1, i32 0, i32 0, i32 1
  %357 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %42, i64 0, i32 1, i32 0, i32 0, i32 2
  %358 = bitcast %"class.WTF::Vector.86"* %355 to i64*
  %359 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %43, i64 0, i32 1
  %360 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %43, i64 0, i32 1, i32 0, i32 0, i32 1
  %361 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %43, i64 0, i32 1, i32 0, i32 0, i32 2
  %362 = bitcast %"class.WTF::Vector.86"* %359 to i64*
  %363 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %44, i64 0, i32 1
  %364 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %44, i64 0, i32 1, i32 0, i32 0, i32 1
  %365 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %44, i64 0, i32 1, i32 0, i32 0, i32 2
  %366 = bitcast %"class.WTF::Vector.86"* %363 to i64*
  %367 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %45, i64 0, i32 1
  %368 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %45, i64 0, i32 1, i32 0, i32 0, i32 1
  %369 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %45, i64 0, i32 1, i32 0, i32 0, i32 2
  %370 = bitcast %"class.WTF::Vector.86"* %367 to i64*
  %371 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %46, i64 0, i32 0
  %372 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %46, i64 0, i32 1
  %373 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %47, i64 0, i32 0, i32 0, i32 0
  %374 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %47, i64 0, i32 0, i32 0, i32 1
  %375 = bitcast %"class.WTF::Vector.101"* %47 to i64*
  %376 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %47, i64 0, i32 0, i32 0, i32 2
  %377 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %48, i64 0, i32 0
  %378 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %48, i64 0, i32 1
  %379 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %49, i64 0, i32 0
  %380 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %49, i64 0, i32 1
  %381 = bitcast %"struct.blink::AudioProcessingProperties"* %380 to i8*
  %382 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %49, i64 0, i32 2
  %383 = bitcast %"class.absl::optional.72"* %382 to i64*
  %384 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %49, i64 0, i32 3
  %385 = bitcast %"class.absl::optional.72"* %384 to i64*
  %386 = getelementptr inbounds i8, i8* %341, i64 36
  %387 = bitcast i8* %386 to i32*
  %388 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %49, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %389 = getelementptr inbounds i8, i8* %341, i64 41
  %390 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %49, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %391 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %45, i64 0, i32 1, i32 0, i32 0, i32 0
  %392 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %44, i64 0, i32 1, i32 0, i32 0, i32 0
  %393 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %43, i64 0, i32 1, i32 0, i32 0, i32 0
  %394 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %42, i64 0, i32 1, i32 0, i32 0, i32 0
  %395 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %40, i64 0, i32 1, i32 0, i32 0, i32 0
  %396 = bitcast %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %77 to i8*
  %397 = bitcast %"class.WTF::Vector.96"* %27 to i8*
  %398 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %28, i64 0, i32 0
  %399 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %29, i64 0, i32 0
  %400 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %30, i64 0, i32 0
  %401 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %31, i64 0, i32 0
  %402 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %32, i64 0, i32 0
  %403 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %33, i64 0, i32 0
  %404 = bitcast { i64, i64 }* %34 to i8*
  %405 = bitcast %"class.WTF::Vector.101"* %35 to i8*
  %406 = bitcast <2 x i64>* %36 to i8*
  %407 = bitcast %"class.blink::(anonymous namespace)::SourceInfo"* %37 to i8*
  %408 = bitcast %"class.media::AudioParameters"* %38 to i8*
  %409 = bitcast { i64, i64 }* %34 to %"class.blink::media_constraints::NumericRangeSet"*
  %410 = bitcast <2 x i64>* %36 to %"class.blink::media_constraints::NumericRangeSet"*
  %411 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %27, i64 0, i32 0, i32 0, i32 0
  %412 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %27, i64 0, i32 0, i32 0, i32 1
  %413 = bitcast %"class.WTF::Vector.96"* %27 to i64*
  %414 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %27, i64 0, i32 0, i32 0, i32 2
  %415 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %28, i64 0, i32 1
  %416 = bitcast %"class.WTF::Vector.86"* %415 to i8*
  %417 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %29, i64 0, i32 1
  %418 = bitcast %"class.WTF::Vector.86"* %417 to i8*
  %419 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %30, i64 0, i32 1
  %420 = bitcast %"class.WTF::Vector.86"* %419 to i8*
  %421 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %31, i64 0, i32 1
  %422 = bitcast %"class.WTF::Vector.86"* %421 to i8*
  %423 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %32, i64 0, i32 1
  %424 = bitcast %"class.WTF::Vector.86"* %423 to i8*
  %425 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %33, i64 0, i32 1
  %426 = bitcast %"class.WTF::Vector.86"* %425 to i8*
  %427 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i64 0, i32 0
  %428 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i64 0, i32 1
  %429 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %35, i64 0, i32 0, i32 0, i32 0
  %430 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %35, i64 0, i32 0, i32 0, i32 1
  %431 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %35, i64 0, i32 0, i32 0, i32 2
  %432 = bitcast i32* %25 to i8*
  %433 = bitcast i32* %26 to i8*
  %434 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %37, i64 0, i32 0
  %435 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %37, i64 0, i32 1
  %436 = bitcast %"struct.blink::AudioProcessingProperties"* %435 to i8*
  %437 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %37, i64 0, i32 2
  %438 = bitcast %"class.absl::optional.72"* %437 to i64*
  %439 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %37, i64 0, i32 3
  %440 = bitcast %"class.absl::optional.72"* %439 to i64*
  %441 = getelementptr inbounds i8, i8* %407, i64 36
  %442 = bitcast i8* %441 to i32*
  %443 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %37, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %444 = getelementptr inbounds i8, i8* %407, i64 41
  %445 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %37, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %446 = load i32, i32* %190, align 4
  br label %447

447:                                              ; preds = %1219, %208
  %448 = phi i32 [ %446, %208 ], [ %1221, %1219 ]
  %449 = phi %"class.blink::AudioDeviceCaptureCapability"* [ %203, %208 ], [ %1222, %1219 ]
  %450 = load i8, i8* %96, align 1
  %451 = icmp slt i8 %450, 0
  %452 = load i64, i64* %93, align 8
  %453 = zext i8 %450 to i64
  %454 = select i1 %451, i64 %452, i64 %453
  %455 = icmp eq i64 %454, 0
  %456 = load i32, i32* %189, align 8
  %457 = icmp eq i32 %448, %456
  br i1 %457, label %458, label %494, !prof !2

458:                                              ; preds = %447
  %459 = add i32 %448, 1
  %460 = lshr i32 %448, 2
  %461 = add i32 %459, %460
  %462 = icmp ugt i32 %461, 4
  %463 = select i1 %462, i32 %461, i32 4
  %464 = icmp ugt i32 %463, %459
  %465 = select i1 %464, i32 %463, i32 %459
  %466 = icmp ult i32 %448, %465
  br i1 %466, label %467, label %494, !prof !4

467:                                              ; preds = %458
  %468 = load %"class.blink::(anonymous namespace)::DeviceContainer"*, %"class.blink::(anonymous namespace)::DeviceContainer"** %209, align 8
  %469 = icmp eq %"class.blink::(anonymous namespace)::DeviceContainer"* %468, null
  br i1 %469, label %470, label %471

470:                                              ; preds = %467
  call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_115DeviceContainerENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.79"* %216, i32 %465) #12
  br label %494

471:                                              ; preds = %467
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %210) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %210, i8 -86, i64 16, i1 false) #12
  store %"class.blink::(anonymous namespace)::DeviceContainer"* null, %"class.blink::(anonymous namespace)::DeviceContainer"** %211, align 8
  store i32 0, i32* %212, align 8
  call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_115DeviceContainerENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.79"* nonnull %24, i32 %465) #12
  %472 = load %"class.blink::(anonymous namespace)::DeviceContainer"*, %"class.blink::(anonymous namespace)::DeviceContainer"** %211, align 8
  %473 = load i64, i64* %213, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %210) #12
  %474 = ptrtoint %"class.blink::(anonymous namespace)::DeviceContainer"* %472 to i64
  %475 = load %"class.blink::(anonymous namespace)::DeviceContainer"*, %"class.blink::(anonymous namespace)::DeviceContainer"** %209, align 8
  %476 = load i32, i32* %190, align 4
  %477 = zext i32 %476 to i64
  %478 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %475, i64 %477
  %479 = icmp eq i32 %476, 0
  br i1 %479, label %480, label %482

480:                                              ; preds = %471
  %481 = bitcast %"class.blink::(anonymous namespace)::DeviceContainer"* %475 to i8*
  br label %491

482:                                              ; preds = %471, %482
  %483 = phi %"class.blink::(anonymous namespace)::DeviceContainer"* [ %487, %482 ], [ %475, %471 ]
  %484 = phi %"class.blink::(anonymous namespace)::DeviceContainer"* [ %486, %482 ], [ %472, %471 ]
  %485 = bitcast %"class.blink::(anonymous namespace)::DeviceContainer"* %484 to i8*
  call fastcc void @_ZN3WTF15ConstructTraitsIN5blink12_GLOBAL__N_115DeviceContainerENS_12VectorTraitsIS3_EENS_18PartitionAllocatorEE9ConstructIJS3_EEEPS3_PvDpOT_(i8* %485, %"class.blink::(anonymous namespace)::DeviceContainer"* dereferenceable(176) %483) #12
  call fastcc void @_ZN5blink12_GLOBAL__N_115DeviceContainerD2Ev(%"class.blink::(anonymous namespace)::DeviceContainer"* %483) #12
  %486 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %484, i64 1
  %487 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %483, i64 1
  %488 = icmp eq %"class.blink::(anonymous namespace)::DeviceContainer"* %487, %478
  br i1 %488, label %489, label %482

489:                                              ; preds = %482
  %490 = load i8*, i8** %214, align 8
  br label %491

491:                                              ; preds = %489, %480
  %492 = phi i8* [ %490, %489 ], [ %481, %480 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %492) #12
  store atomic i64 %474, i64* %215 monotonic, align 8
  %493 = trunc i64 %473 to i32
  store i32 %493, i32* %189, align 8
  br label %494

494:                                              ; preds = %491, %470, %458, %447
  %495 = load %"class.blink::(anonymous namespace)::DeviceContainer"*, %"class.blink::(anonymous namespace)::DeviceContainer"** %209, align 8
  %496 = load i32, i32* %190, align 4
  %497 = zext i32 %496 to i64
  %498 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 0
  %499 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %449, i64 0, i32 0
  %500 = load %"class.blink::MediaStreamAudioSource"*, %"class.blink::MediaStreamAudioSource"** %499, align 8
  %501 = icmp eq %"class.blink::MediaStreamAudioSource"* %500, null
  %502 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %500, i64 0, i32 0, i32 1, i32 7
  %503 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %449, i64 0, i32 3
  %504 = select i1 %501, %"class.media::AudioParameters"* %503, %"class.media::AudioParameters"* %502
  call void @_ZN5media15AudioParametersC1ERKS0_(%"class.media::AudioParameters"* %498, %"class.media::AudioParameters"* dereferenceable(64) %504) #12
  %505 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 1, i32 0, i32 0
  store i8 1, i8* %505, align 8
  %506 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 1, i32 0, i32 1
  %507 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %508 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %509 = bitcast %"class.WTF::Vector.80"* %506 to i64*
  store atomic i64 0, i64* %509 monotonic, align 8
  store i32 0, i32* %507, align 4
  store i32 0, i32* %508, align 4
  %510 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 2, i32 0, i32 0
  store i8 1, i8* %510, align 8
  %511 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 2, i32 0, i32 1
  %512 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %513 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %514 = bitcast %"class.WTF::Vector.80"* %511 to i64*
  store atomic i64 0, i64* %514 monotonic, align 8
  store i32 0, i32* %512, align 4
  store i32 0, i32* %513, align 4
  %515 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 3, i32 0, i64 0, i32 0, i32 0
  store i8 1, i8* %515, align 8
  %516 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 3, i32 0, i64 0, i32 0, i32 1
  %517 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %518 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %519 = bitcast %"class.WTF::Vector.86"* %516 to i64*
  store atomic i64 0, i64* %519 monotonic, align 8
  store i32 0, i32* %517, align 4
  store i32 0, i32* %518, align 4
  %520 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 3, i32 0, i64 1, i32 0, i32 0
  store i8 1, i8* %520, align 8
  %521 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 3, i32 0, i64 1, i32 0, i32 1
  %522 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %523 = bitcast i32* %522 to i8*
  %524 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %525 = bitcast %"class.WTF::Vector.86"* %521 to i64*
  store atomic i64 0, i64* %525 monotonic, align 8
  %526 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %523, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #12
  %527 = load %"class.blink::MediaStreamAudioSource"*, %"class.blink::MediaStreamAudioSource"** %499, align 8
  %528 = icmp eq %"class.blink::MediaStreamAudioSource"* %527, null
  br i1 %528, label %547, label %529

529:                                              ; preds = %494
  %530 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %527, i64 0, i32 0, i32 1, i32 1
  %531 = bitcast %"class.std::__1::basic_string"* %530 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %532 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %531, i64 0, i32 1, i32 0
  %533 = load i8, i8* %532, align 1
  %534 = icmp slt i8 %533, 0
  br i1 %534, label %535, label %538

535:                                              ; preds = %529
  %536 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %530, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load i8*, i8** %536, align 8
  br label %540

538:                                              ; preds = %529
  %539 = bitcast %"class.std::__1::basic_string"* %530 to i8*
  br label %540

540:                                              ; preds = %538, %535
  %541 = phi i8* [ %537, %535 ], [ %539, %538 ]
  %542 = icmp eq i8* %541, null
  br i1 %542, label %545, label %543

543:                                              ; preds = %540
  %544 = call i64 @strlen(i8* nonnull %541) #13
  br label %545

545:                                              ; preds = %543, %540
  %546 = phi i64 [ %544, %543 ], [ 0, %540 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %69, i8* %541, i64 %546) #12
  br label %569

547:                                              ; preds = %494
  %548 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %449, i64 0, i32 1, i32 0, i32 0
  %549 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %548, align 8
  store %"class.WTF::StringImpl"* %549, %"class.WTF::StringImpl"** %219, align 8
  %550 = icmp eq %"class.WTF::StringImpl"* %549, null
  br i1 %550, label %551, label %552

551:                                              ; preds = %547
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #12
  br label %691

552:                                              ; preds = %547
  %553 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %549, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %554 = load atomic i32, i32* %553 monotonic, align 4
  %555 = and i32 %554, 2
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %569

557:                                              ; preds = %552
  %558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %549, i64 0, i32 0
  %559 = load i32, i32* %558, align 4
  %560 = zext i32 %559 to i33
  %561 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %560, i33 1) #12
  %562 = extractvalue { i33, i1 } %561, 1
  %563 = extractvalue { i33, i1 } %561, 0
  %564 = icmp slt i33 %563, 0
  %565 = or i1 %562, %564
  br i1 %565, label %566, label %567, !prof !2

566:                                              ; preds = %557
  call void @llvm.trap() #12
  unreachable

567:                                              ; preds = %557
  %568 = trunc i33 %563 to i32
  store i32 %568, i32* %558, align 4
  br label %569

569:                                              ; preds = %567, %552, %545
  %570 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #12
  %571 = icmp eq %"class.WTF::StringImpl"* %570, null
  br i1 %571, label %691, label %572

572:                                              ; preds = %569
  %573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 1
  %574 = load i32, i32* %573, align 4
  %575 = icmp eq i32 %574, 0
  %576 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %577 = load atomic i32, i32* %576 monotonic, align 4
  %578 = and i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 0
  %581 = load i32, i32* %580, align 4
  br i1 %579, label %582, label %584

582:                                              ; preds = %572
  %583 = add i32 %581, -1
  store i32 %583, i32* %580, align 4
  br label %584

584:                                              ; preds = %582, %572
  %585 = phi i32 [ %583, %582 ], [ %581, %572 ]
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %587, label %588

587:                                              ; preds = %584
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %570) #12
  br i1 %575, label %691, label %589

588:                                              ; preds = %584
  br i1 %575, label %691, label %589

589:                                              ; preds = %588, %587
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %220) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %223) #12
  %590 = load %"class.blink::MediaStreamAudioSource"*, %"class.blink::MediaStreamAudioSource"** %499, align 8
  %591 = icmp eq %"class.blink::MediaStreamAudioSource"* %590, null
  br i1 %591, label %610, label %592

592:                                              ; preds = %589
  %593 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %590, i64 0, i32 0, i32 1, i32 1
  %594 = bitcast %"class.std::__1::basic_string"* %593 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %595 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %594, i64 0, i32 1, i32 0
  %596 = load i8, i8* %595, align 1
  %597 = icmp slt i8 %596, 0
  br i1 %597, label %598, label %601

598:                                              ; preds = %592
  %599 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %593, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %600 = load i8*, i8** %599, align 8
  br label %603

601:                                              ; preds = %592
  %602 = bitcast %"class.std::__1::basic_string"* %593 to i8*
  br label %603

603:                                              ; preds = %601, %598
  %604 = phi i8* [ %600, %598 ], [ %602, %601 ]
  %605 = icmp eq i8* %604, null
  br i1 %605, label %608, label %606

606:                                              ; preds = %603
  %607 = call i64 @strlen(i8* nonnull %604) #13
  br label %608

608:                                              ; preds = %606, %603
  %609 = phi i64 [ %607, %606 ], [ 0, %603 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %68, i8* %604, i64 %609) #12
  br label %631

610:                                              ; preds = %589
  %611 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %449, i64 0, i32 1, i32 0, i32 0
  %612 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %611, align 8
  store %"class.WTF::StringImpl"* %612, %"class.WTF::StringImpl"** %224, align 8
  %613 = icmp eq %"class.WTF::StringImpl"* %612, null
  br i1 %613, label %631, label %614

614:                                              ; preds = %610
  %615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %612, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %616 = load atomic i32, i32* %615 monotonic, align 4
  %617 = and i32 %616, 2
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %619, label %631

619:                                              ; preds = %614
  %620 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %612, i64 0, i32 0
  %621 = load i32, i32* %620, align 4
  %622 = zext i32 %621 to i33
  %623 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %622, i33 1) #12
  %624 = extractvalue { i33, i1 } %623, 1
  %625 = extractvalue { i33, i1 } %623, 0
  %626 = icmp slt i33 %625, 0
  %627 = or i1 %624, %626
  br i1 %627, label %628, label %629, !prof !2

628:                                              ; preds = %619
  call void @llvm.trap() #12
  unreachable

629:                                              ; preds = %619
  %630 = trunc i33 %625 to i32
  store i32 %630, i32* %620, align 4
  br label %631

631:                                              ; preds = %629, %614, %610, %608
  %632 = load i64, i64* %225, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #12
  store i64 %632, i64* %226, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %221, %"class.WTF::String"* nonnull %71, i32 0) #12
  %633 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 24) #12
  %634 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %633, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEPKcv, i64 0, i64 0)) #12
  %635 = udiv i64 %633, 24
  %636 = load i8, i8* %228, align 1
  %637 = icmp slt i8 %636, 0
  br i1 %637, label %639, label %638

638:                                              ; preds = %631
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %634, i8* nonnull align 8 %220, i64 24, i1 false) #12
  br label %643

639:                                              ; preds = %631
  %640 = bitcast i8* %634 to %"class.std::__1::basic_string"*
  %641 = load i8*, i8** %229, align 8
  %642 = load i64, i64* %230, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %640, i8* %641, i64 %642) #12
  br label %643

643:                                              ; preds = %639, %638
  %644 = ptrtoint i8* %634 to i64
  %645 = trunc i64 %635 to i32
  store i8 0, i8* %505, align 8
  %646 = load i64, i64* %509, align 8
  store atomic i64 %644, i64* %509 monotonic, align 8
  store i32 %645, i32* %507, align 4
  %647 = load i32, i32* %508, align 4
  store i32 1, i32* %508, align 4
  %648 = inttoptr i64 %646 to %"class.std::__1::basic_string"*
  %649 = icmp eq i64 %646, 0
  br i1 %649, label %669, label %650, !prof !4

650:                                              ; preds = %643
  %651 = icmp eq i32 %647, 0
  br i1 %651, label %667, label %652, !prof !2

652:                                              ; preds = %650
  %653 = zext i32 %647 to i64
  %654 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %648, i64 %653
  br label %655

655:                                              ; preds = %664, %652
  %656 = phi %"class.std::__1::basic_string"* [ %665, %664 ], [ %648, %652 ]
  %657 = bitcast %"class.std::__1::basic_string"* %656 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %658 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %657, i64 0, i32 1, i32 0
  %659 = load i8, i8* %658, align 1
  %660 = icmp slt i8 %659, 0
  br i1 %660, label %661, label %664

661:                                              ; preds = %655
  %662 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %656, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %663 = load i8*, i8** %662, align 8
  call void @_ZdlPv(i8* %663) #14
  br label %664

664:                                              ; preds = %661, %655
  %665 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %656, i64 1
  %666 = icmp eq %"class.std::__1::basic_string"* %665, %654
  br i1 %666, label %667, label %655

667:                                              ; preds = %664, %650
  %668 = inttoptr i64 %646 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %668) #12
  br label %669

669:                                              ; preds = %667, %643
  %670 = load i8, i8* %228, align 1
  %671 = icmp slt i8 %670, 0
  br i1 %671, label %672, label %674

672:                                              ; preds = %669
  %673 = load i8*, i8** %229, align 8
  call void @_ZdlPv(i8* %673) #14
  br label %674

674:                                              ; preds = %672, %669
  %675 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %676 = icmp eq %"class.WTF::StringImpl"* %675, null
  br i1 %676, label %690, label %677

677:                                              ; preds = %674
  %678 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %679 = load atomic i32, i32* %678 monotonic, align 4
  %680 = and i32 %679, 2
  %681 = icmp eq i32 %680, 0
  %682 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 0
  %683 = load i32, i32* %682, align 4
  br i1 %681, label %684, label %686

684:                                              ; preds = %677
  %685 = add i32 %683, -1
  store i32 %685, i32* %682, align 4
  br label %686

686:                                              ; preds = %684, %677
  %687 = phi i32 [ %685, %684 ], [ %683, %677 ]
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %689, label %690

689:                                              ; preds = %686
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %675) #12
  br label %690

690:                                              ; preds = %689, %686, %674
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %220) #12
  br label %691

691:                                              ; preds = %690, %588, %587, %569, %551
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232) #12
  %692 = load %"class.blink::MediaStreamAudioSource"*, %"class.blink::MediaStreamAudioSource"** %499, align 8
  %693 = icmp eq %"class.blink::MediaStreamAudioSource"* %692, null
  br i1 %693, label %716, label %694

694:                                              ; preds = %691
  %695 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %692, i64 0, i32 0, i32 1, i32 4, i32 0, i32 0, i32 0, i32 0
  %696 = load i8, i8* %695, align 8, !range !3
  %697 = icmp eq i8 %696, 0
  br i1 %697, label %716, label %698

698:                                              ; preds = %694
  %699 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %692, i64 0, i32 0, i32 1, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %700 = bitcast %"class.std::__1::basic_string"* %699 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %701 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %700, i64 0, i32 1, i32 0
  %702 = load i8, i8* %701, align 1
  %703 = icmp slt i8 %702, 0
  br i1 %703, label %704, label %707

704:                                              ; preds = %698
  %705 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %699, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %706 = load i8*, i8** %705, align 8
  br label %709

707:                                              ; preds = %698
  %708 = bitcast %"class.std::__1::basic_string"* %699 to i8*
  br label %709

709:                                              ; preds = %707, %704
  %710 = phi i8* [ %706, %704 ], [ %708, %707 ]
  %711 = icmp eq i8* %710, null
  br i1 %711, label %714, label %712

712:                                              ; preds = %709
  %713 = call i64 @strlen(i8* nonnull %710) #13
  br label %714

714:                                              ; preds = %712, %709
  %715 = phi i64 [ %713, %712 ], [ 0, %709 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %67, i8* %710, i64 %715) #12
  br label %738

716:                                              ; preds = %694, %691
  %717 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %449, i64 0, i32 2, i32 0, i32 0
  %718 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %717, align 8
  store %"class.WTF::StringImpl"* %718, %"class.WTF::StringImpl"** %233, align 8
  %719 = icmp eq %"class.WTF::StringImpl"* %718, null
  br i1 %719, label %720, label %721

720:                                              ; preds = %716
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #12
  br label %864

721:                                              ; preds = %716
  %722 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %718, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %723 = load atomic i32, i32* %722 monotonic, align 4
  %724 = and i32 %723, 2
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %726, label %738

726:                                              ; preds = %721
  %727 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %718, i64 0, i32 0
  %728 = load i32, i32* %727, align 4
  %729 = zext i32 %728 to i33
  %730 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %729, i33 1) #12
  %731 = extractvalue { i33, i1 } %730, 1
  %732 = extractvalue { i33, i1 } %730, 0
  %733 = icmp slt i33 %732, 0
  %734 = or i1 %731, %733
  br i1 %734, label %735, label %736, !prof !2

735:                                              ; preds = %726
  call void @llvm.trap() #12
  unreachable

736:                                              ; preds = %726
  %737 = trunc i33 %732 to i32
  store i32 %737, i32* %727, align 4
  br label %738

738:                                              ; preds = %736, %721, %714
  %739 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #12
  %740 = icmp eq %"class.WTF::StringImpl"* %739, null
  br i1 %740, label %864, label %741

741:                                              ; preds = %738
  %742 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %739, i64 0, i32 1
  %743 = load i32, i32* %742, align 4
  %744 = icmp eq i32 %743, 0
  %745 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %739, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %746 = load atomic i32, i32* %745 monotonic, align 4
  %747 = and i32 %746, 2
  %748 = icmp eq i32 %747, 0
  %749 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %739, i64 0, i32 0
  %750 = load i32, i32* %749, align 4
  br i1 %748, label %751, label %753

751:                                              ; preds = %741
  %752 = add i32 %750, -1
  store i32 %752, i32* %749, align 4
  br label %753

753:                                              ; preds = %751, %741
  %754 = phi i32 [ %752, %751 ], [ %750, %741 ]
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %756, label %757

756:                                              ; preds = %753
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %739) #12
  br i1 %744, label %864, label %758

757:                                              ; preds = %753
  br i1 %744, label %864, label %758

758:                                              ; preds = %757, %756
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %237) #12
  %759 = load %"class.blink::MediaStreamAudioSource"*, %"class.blink::MediaStreamAudioSource"** %499, align 8
  %760 = icmp eq %"class.blink::MediaStreamAudioSource"* %759, null
  br i1 %760, label %783, label %761

761:                                              ; preds = %758
  %762 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %759, i64 0, i32 0, i32 1, i32 4, i32 0, i32 0, i32 0, i32 0
  %763 = load i8, i8* %762, align 8, !range !3
  %764 = icmp eq i8 %763, 0
  br i1 %764, label %783, label %765

765:                                              ; preds = %761
  %766 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %759, i64 0, i32 0, i32 1, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %767 = bitcast %"class.std::__1::basic_string"* %766 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %768 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %767, i64 0, i32 1, i32 0
  %769 = load i8, i8* %768, align 1
  %770 = icmp slt i8 %769, 0
  br i1 %770, label %771, label %774

771:                                              ; preds = %765
  %772 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %766, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %773 = load i8*, i8** %772, align 8
  br label %776

774:                                              ; preds = %765
  %775 = bitcast %"class.std::__1::basic_string"* %766 to i8*
  br label %776

776:                                              ; preds = %774, %771
  %777 = phi i8* [ %773, %771 ], [ %775, %774 ]
  %778 = icmp eq i8* %777, null
  br i1 %778, label %781, label %779

779:                                              ; preds = %776
  %780 = call i64 @strlen(i8* nonnull %777) #13
  br label %781

781:                                              ; preds = %779, %776
  %782 = phi i64 [ %780, %779 ], [ 0, %776 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %66, i8* %777, i64 %782) #12
  br label %804

783:                                              ; preds = %761, %758
  %784 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %449, i64 0, i32 2, i32 0, i32 0
  %785 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %784, align 8
  store %"class.WTF::StringImpl"* %785, %"class.WTF::StringImpl"** %238, align 8
  %786 = icmp eq %"class.WTF::StringImpl"* %785, null
  br i1 %786, label %804, label %787

787:                                              ; preds = %783
  %788 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %785, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %789 = load atomic i32, i32* %788 monotonic, align 4
  %790 = and i32 %789, 2
  %791 = icmp eq i32 %790, 0
  br i1 %791, label %792, label %804

792:                                              ; preds = %787
  %793 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %785, i64 0, i32 0
  %794 = load i32, i32* %793, align 4
  %795 = zext i32 %794 to i33
  %796 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %795, i33 1) #12
  %797 = extractvalue { i33, i1 } %796, 1
  %798 = extractvalue { i33, i1 } %796, 0
  %799 = icmp slt i33 %798, 0
  %800 = or i1 %797, %799
  br i1 %800, label %801, label %802, !prof !2

801:                                              ; preds = %792
  call void @llvm.trap() #12
  unreachable

802:                                              ; preds = %792
  %803 = trunc i33 %798 to i32
  store i32 %803, i32* %793, align 4
  br label %804

804:                                              ; preds = %802, %787, %783, %781
  %805 = load i64, i64* %239, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %237) #12
  store i64 %805, i64* %240, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %235, %"class.WTF::String"* nonnull %73, i32 0) #12
  %806 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 24) #12
  %807 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %806, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEPKcv, i64 0, i64 0)) #12
  %808 = udiv i64 %806, 24
  %809 = load i8, i8* %242, align 1
  %810 = icmp slt i8 %809, 0
  br i1 %810, label %812, label %811

811:                                              ; preds = %804
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %807, i8* nonnull align 8 %234, i64 24, i1 false) #12
  br label %816

812:                                              ; preds = %804
  %813 = bitcast i8* %807 to %"class.std::__1::basic_string"*
  %814 = load i8*, i8** %243, align 8
  %815 = load i64, i64* %244, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %813, i8* %814, i64 %815) #12
  br label %816

816:                                              ; preds = %812, %811
  %817 = ptrtoint i8* %807 to i64
  %818 = trunc i64 %808 to i32
  store i8 0, i8* %510, align 8
  %819 = load i64, i64* %514, align 8
  store atomic i64 %817, i64* %514 monotonic, align 8
  store i32 %818, i32* %512, align 4
  %820 = load i32, i32* %513, align 4
  store i32 1, i32* %513, align 4
  %821 = inttoptr i64 %819 to %"class.std::__1::basic_string"*
  %822 = icmp eq i64 %819, 0
  br i1 %822, label %842, label %823, !prof !4

823:                                              ; preds = %816
  %824 = icmp eq i32 %820, 0
  br i1 %824, label %840, label %825, !prof !2

825:                                              ; preds = %823
  %826 = zext i32 %820 to i64
  %827 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %821, i64 %826
  br label %828

828:                                              ; preds = %837, %825
  %829 = phi %"class.std::__1::basic_string"* [ %838, %837 ], [ %821, %825 ]
  %830 = bitcast %"class.std::__1::basic_string"* %829 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %831 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %830, i64 0, i32 1, i32 0
  %832 = load i8, i8* %831, align 1
  %833 = icmp slt i8 %832, 0
  br i1 %833, label %834, label %837

834:                                              ; preds = %828
  %835 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %829, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %836 = load i8*, i8** %835, align 8
  call void @_ZdlPv(i8* %836) #14
  br label %837

837:                                              ; preds = %834, %828
  %838 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %829, i64 1
  %839 = icmp eq %"class.std::__1::basic_string"* %838, %827
  br i1 %839, label %840, label %828

840:                                              ; preds = %837, %823
  %841 = inttoptr i64 %819 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %841) #12
  br label %842

842:                                              ; preds = %840, %816
  %843 = load i8, i8* %242, align 1
  %844 = icmp slt i8 %843, 0
  br i1 %844, label %845, label %847

845:                                              ; preds = %842
  %846 = load i8*, i8** %243, align 8
  call void @_ZdlPv(i8* %846) #14
  br label %847

847:                                              ; preds = %845, %842
  %848 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  %849 = icmp eq %"class.WTF::StringImpl"* %848, null
  br i1 %849, label %863, label %850

850:                                              ; preds = %847
  %851 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %848, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %852 = load atomic i32, i32* %851 monotonic, align 4
  %853 = and i32 %852, 2
  %854 = icmp eq i32 %853, 0
  %855 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %848, i64 0, i32 0
  %856 = load i32, i32* %855, align 4
  br i1 %854, label %857, label %859

857:                                              ; preds = %850
  %858 = add i32 %856, -1
  store i32 %858, i32* %855, align 4
  br label %859

859:                                              ; preds = %857, %850
  %860 = phi i32 [ %858, %857 ], [ %856, %850 ]
  %861 = icmp eq i32 %860, 0
  br i1 %861, label %862, label %863

862:                                              ; preds = %859
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %848) #12
  br label %863

863:                                              ; preds = %862, %859, %847
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #12
  br label %864

864:                                              ; preds = %863, %757, %756, %738, %720
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %217)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %217, i8* align 4 bitcast (%"struct.blink::AudioProcessingProperties"* getelementptr inbounds ({ i32, %"struct.blink::AudioProcessingProperties", { { { { i8, [3 x i8], %union.anon.76 } } } }, { { { { i8, [3 x i8], %union.anon.76 } } } }, [4 x i8], { { { { i8, [7 x i8], %union.anon.112 } } } } }, { i32, %"struct.blink::AudioProcessingProperties", { { { { i8, [3 x i8], %union.anon.76 } } } }, { { { { i8, [3 x i8], %union.anon.76 } } } }, [4 x i8], { { { { i8, [7 x i8], %union.anon.112 } } } } }* @__const.DeviceContainer.source_info, i64 0, i32 1) to i8*), i64 16, i1 false) #12
  %865 = load %"class.blink::MediaStreamAudioSource"*, %"class.blink::MediaStreamAudioSource"** %499, align 8
  %866 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 0, i32 5
  %867 = load i32, i32* %866, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %246) #12, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %246, i8 -86, i64 16, i1 false) #12, !noalias !5
  store i32 1, i32* %247, align 4, !noalias !5
  store i32 0, i32* %253, align 4, !noalias !5
  store i8 1, i8* %249, align 4, !noalias !5
  store i8 1, i8* %250, align 1, !noalias !5
  store i8 0, i8* %251, align 2, !noalias !5
  store i32 16843009, i32* %254, align 1, !noalias !5
  %868 = call %"class.blink::ProcessedLocalAudioSource"* @_ZN5blink25ProcessedLocalAudioSource4FromEPNS_22MediaStreamAudioSourceE(%"class.blink::MediaStreamAudioSource"* %865) #12, !noalias !5
  %869 = icmp eq %"class.blink::MediaStreamAudioSource"* %865, null
  br i1 %869, label %908, label %870

870:                                              ; preds = %864
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %255) #12, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %255, i8 -86, i64 64, i1 false) #12, !noalias !5
  call void @_ZNK5blink22MediaStreamAudioSource18GetAudioParametersEv(%"class.media::AudioParameters"* nonnull sret %64, %"class.blink::MediaStreamAudioSource"* nonnull %865) #12, !noalias !5
  %871 = load i32, i32* %256, align 8, !noalias !5
  %872 = zext i32 %871 to i64
  %873 = shl nuw i64 %872, 32
  %874 = load i32, i32* %257, align 4, !noalias !5
  %875 = zext i32 %874 to i64
  %876 = shl nuw i64 %875, 32
  %877 = call i64 @_ZNK5media15AudioParameters17GetBufferDurationEv(%"class.media::AudioParameters"* nonnull %64) #12, !noalias !5
  %878 = add i64 %877, -9223372036854775807
  %879 = icmp ult i64 %878, 2
  br i1 %879, label %883, label %880

880:                                              ; preds = %870
  %881 = sitofp i64 %877 to double
  %882 = fdiv double %881, 1.000000e+06
  br label %886

883:                                              ; preds = %870
  %884 = icmp slt i64 %877, 0
  %885 = select i1 %884, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %886

886:                                              ; preds = %883, %880
  %887 = phi double [ %885, %883 ], [ %882, %880 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %258) #12, !noalias !5
  %888 = bitcast %"class.blink::MediaStreamAudioSource"* %865 to void (%"class.absl::optional.366"*, %"class.blink::MediaStreamAudioSource"*)***
  %889 = load void (%"class.absl::optional.366"*, %"class.blink::MediaStreamAudioSource"*)**, void (%"class.absl::optional.366"*, %"class.blink::MediaStreamAudioSource"*)*** %888, align 8, !noalias !5
  %890 = getelementptr inbounds void (%"class.absl::optional.366"*, %"class.blink::MediaStreamAudioSource"*)*, void (%"class.absl::optional.366"*, %"class.blink::MediaStreamAudioSource"*)** %889, i64 5
  %891 = load void (%"class.absl::optional.366"*, %"class.blink::MediaStreamAudioSource"*)*, void (%"class.absl::optional.366"*, %"class.blink::MediaStreamAudioSource"*)** %890, align 8, !noalias !5
  call void %891(%"class.absl::optional.366"* nonnull sret %65, %"class.blink::MediaStreamAudioSource"* nonnull %865) #12, !noalias !5
  %892 = load i8, i8* %258, align 4, !range !3, !noalias !5
  %893 = icmp eq i8 %892, 0
  br i1 %893, label %894, label %895, !prof !2

894:                                              ; preds = %886
  call void @llvm.trap() #12, !noalias !5
  unreachable

895:                                              ; preds = %886
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %246, i8* align 4 %260, i64 15, i1 false) #12, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %258) #12, !noalias !5
  %896 = icmp eq %"class.blink::ProcessedLocalAudioSource"* %868, null
  br i1 %896, label %897, label %901

897:                                              ; preds = %895
  call void @_ZN5blink25AudioProcessingProperties24DisableDefaultPropertiesEv(%"struct.blink::AudioProcessingProperties"* nonnull %63) #12, !noalias !5
  %898 = and i32 %867, 1
  %899 = icmp eq i32 %898, 0
  br i1 %899, label %906, label %900

900:                                              ; preds = %897
  store i32 2, i32* %247, align 4, !noalias !5
  br label %906

901:                                              ; preds = %895
  %902 = call zeroext i1 @_ZNK5blink25AudioProcessingProperties32EchoCancellationIsWebRtcProvidedEv(%"struct.blink::AudioProcessingProperties"* nonnull %63) #12, !noalias !5
  %903 = select i1 %902, i32 3, i32 2
  %904 = getelementptr inbounds %"class.blink::ProcessedLocalAudioSource", %"class.blink::ProcessedLocalAudioSource"* %868, i64 0, i32 4
  %905 = bitcast %"struct.blink::AudioProcessingProperties"* %904 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %246, i8* align 4 %905, i64 15, i1 false) #12, !noalias !5
  br label %906

906:                                              ; preds = %901, %900, %897
  %907 = phi i32 [ %903, %901 ], [ 1, %900 ], [ 1, %897 ]
  call void @_ZN5media15AudioParametersD1Ev(%"class.media::AudioParameters"* nonnull %64) #12, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %255) #12, !noalias !5
  br label %908

908:                                              ; preds = %906, %864
  %909 = phi i8 [ 0, %864 ], [ 1, %906 ]
  %910 = phi double [ 0xFFFFFFFFFFFFFFFF, %864 ], [ %887, %906 ]
  %911 = phi i64 [ -6148914691236517376, %864 ], [ %876, %906 ]
  %912 = phi i64 [ -6148914691236517376, %864 ], [ %873, %906 ]
  %913 = phi i32 [ 0, %864 ], [ %907, %906 ]
  %914 = zext i8 %909 to i64
  %915 = or i64 %912, %914
  %916 = or i64 %911, %914
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %217, i8* nonnull align 4 %246, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %246) #12, !noalias !5
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %261) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %262) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %263) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %264) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %265) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %266) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %269) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %270) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %271) #12
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %272) #12
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %273) #12
  %917 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 4) #12, !noalias !8
  %918 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %917, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEPKcv, i64 0, i64 0)) #12, !noalias !8
  %919 = ptrtoint i8* %918 to i64
  store atomic i64 %919, i64* %278 monotonic, align 8, !noalias !8
  %920 = lshr i64 %917, 2
  %921 = trunc i64 %920 to i32
  store i32 %921, i32* %277, align 8, !noalias !8
  %922 = icmp eq i8* %918, null
  store i32 1, i32* %279, align 4, !noalias !8
  br i1 %922, label %925, label %923, !prof !2

923:                                              ; preds = %908
  %924 = bitcast i8* %918 to i32*
  store i32 0, i32* %924, align 4
  br label %925

925:                                              ; preds = %923, %908
  %926 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12, !noalias !8
  %927 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %926, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12, !noalias !8
  %928 = ptrtoint i8* %927 to i64
  %929 = trunc i64 %926 to i32
  %930 = icmp eq i8* %927, null
  br i1 %930, label %932, label %931, !prof !2

931:                                              ; preds = %925
  store i8 0, i8* %927, align 1
  br label %932

932:                                              ; preds = %931, %925
  store i8 0, i8* %263, align 8, !noalias !8
  store atomic i64 %928, i64* %283 monotonic, align 8, !noalias !8
  store i32 %929, i32* %281, align 8, !noalias !8
  store i32 1, i32* %282, align 4, !noalias !8
  %933 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12, !noalias !8
  %934 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %933, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12, !noalias !8
  %935 = ptrtoint i8* %934 to i64
  %936 = trunc i64 %933 to i32
  %937 = icmp eq i8* %934, null
  br i1 %937, label %939, label %938, !prof !2

938:                                              ; preds = %932
  store i8 0, i8* %934, align 1
  br label %939

939:                                              ; preds = %938, %932
  store i8 0, i8* %264, align 8, !noalias !8
  store atomic i64 %935, i64* %287 monotonic, align 8, !noalias !8
  store i32 %936, i32* %285, align 8, !noalias !8
  store i32 1, i32* %286, align 4, !noalias !8
  %940 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12, !noalias !8
  %941 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %940, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12, !noalias !8
  %942 = ptrtoint i8* %941 to i64
  %943 = trunc i64 %940 to i32
  %944 = icmp eq i8* %941, null
  br i1 %944, label %946, label %945, !prof !2

945:                                              ; preds = %939
  store i8 0, i8* %941, align 1
  br label %946

946:                                              ; preds = %945, %939
  store i8 0, i8* %265, align 8, !noalias !8
  store atomic i64 %942, i64* %291 monotonic, align 8, !noalias !8
  store i32 %943, i32* %289, align 8, !noalias !8
  store i32 1, i32* %290, align 4, !noalias !8
  %947 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12, !noalias !8
  %948 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %947, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12, !noalias !8
  %949 = ptrtoint i8* %948 to i64
  %950 = trunc i64 %947 to i32
  %951 = icmp eq i8* %948, null
  br i1 %951, label %953, label %952, !prof !2

952:                                              ; preds = %946
  store i8 0, i8* %948, align 1
  br label %953

953:                                              ; preds = %952, %946
  store i8 0, i8* %266, align 8, !noalias !8
  store atomic i64 %949, i64* %295 monotonic, align 8, !noalias !8
  store i32 %950, i32* %293, align 8, !noalias !8
  store i32 1, i32* %294, align 4, !noalias !8
  %954 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12, !noalias !8
  %955 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %954, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12, !noalias !8
  %956 = ptrtoint i8* %955 to i64
  %957 = trunc i64 %954 to i32
  %958 = icmp eq i8* %955, null
  br i1 %958, label %960, label %959, !prof !2

959:                                              ; preds = %953
  store i8 0, i8* %955, align 1
  br label %960

960:                                              ; preds = %959, %953
  store i8 0, i8* %267, align 8, !noalias !8
  store atomic i64 %956, i64* %299 monotonic, align 8, !noalias !8
  store i32 %957, i32* %297, align 8, !noalias !8
  store i32 1, i32* %298, align 4, !noalias !8
  %961 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12, !noalias !8
  %962 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %961, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12, !noalias !8
  %963 = ptrtoint i8* %962 to i64
  %964 = trunc i64 %961 to i32
  %965 = icmp eq i8* %962, null
  br i1 %965, label %967, label %966, !prof !2

966:                                              ; preds = %960
  store i8 0, i8* %962, align 1
  br label %967

967:                                              ; preds = %966, %960
  store i8 0, i8* %268, align 8, !noalias !8
  store atomic i64 %963, i64* %303 monotonic, align 8, !noalias !8
  store i32 %964, i32* %301, align 8, !noalias !8
  store i32 1, i32* %302, align 4, !noalias !8
  %968 = call i32 @_ZN5media28SampleFormatToBitsPerChannelENS_12SampleFormatE(i32 2) #12, !noalias !8
  %969 = zext i32 %968 to i64
  %970 = shl nuw i64 %969, 32
  %971 = or i64 %970, 1
  store i64 %971, i64* %304, align 8, !noalias !8
  store i64 %971, i64* %305, align 8, !noalias !8
  %972 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 0, i32 2
  %973 = load i32, i32* %972, align 8, !noalias !8
  %974 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 4) #12, !noalias !8
  %975 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %974, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #12, !noalias !8
  %976 = ptrtoint i8* %975 to i64
  store atomic i64 %976, i64* %308 monotonic, align 8, !noalias !8
  %977 = lshr i64 %974, 2
  %978 = trunc i64 %977 to i32
  store i32 %978, i32* %307, align 8, !noalias !8
  %979 = icmp eq i8* %975, null
  store i32 1, i32* %309, align 4, !noalias !8
  br i1 %979, label %982, label %980, !prof !2

980:                                              ; preds = %967
  %981 = bitcast i8* %975 to i32*
  store i32 %973, i32* %981, align 4
  br label %982

982:                                              ; preds = %980, %967
  %983 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 0, i32 3
  %984 = load i32, i32* %983, align 4, !noalias !8
  %985 = zext i32 %984 to i64
  %986 = shl nuw i64 %985, 32
  %987 = or i64 %986, 1
  store i64 %987, i64* %310, align 8, !noalias !8
  store i64 %987, i64* %311, align 8, !noalias !8
  store i32 %913, i32* %312, align 8, !noalias !8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %314, i8* nonnull align 4 %217, i64 16, i1 false) #12, !noalias !8
  store i64 %915, i64* %316, align 4, !noalias !8
  store i64 %916, i64* %318, align 4, !noalias !8
  store i32 -1431655766, i32* %320, align 4, !noalias !8
  store i8 %909, i8* %321, align 8, !noalias !8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %322, i8* nonnull align 1 getelementptr inbounds ({ i32, %"struct.blink::AudioProcessingProperties", { { { { i8, [3 x i8], %union.anon.76 } } } }, { { { { i8, [3 x i8], %union.anon.76 } } } }, [4 x i8], { { { { i8, [7 x i8], %union.anon.112 } } } } }, { i32, %"struct.blink::AudioProcessingProperties", { { { { i8, [3 x i8], %union.anon.76 } } } }, { { { { i8, [3 x i8], %union.anon.76 } } } }, [4 x i8], { { { { i8, [7 x i8], %union.anon.112 } } } } }* @__const.DeviceContainer.source_info, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false) #12, !noalias !8
  store double %910, double* %323, align 8, !noalias !8
  call void @_ZN5media15AudioParametersC1ERKS0_(%"class.media::AudioParameters"* nonnull %62, %"class.media::AudioParameters"* dereferenceable(64) %498) #12, !noalias !8
  call fastcc void @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainerC2ENS_20AudioCaptureSettings14ProcessingTypeEN3WTF6VectorINS_25AudioProcessingProperties20EchoCancellationTypeELj0ENS4_18PartitionAllocatorEEENS_17media_constraints11DiscreteSetIbEESC_SC_SC_SC_SC_NSA_15NumericRangeSetIiEENS5_IiLj0ES8_EESE_NS0_10SourceInfoEbN5media15AudioParametersEb(%"class.blink::(anonymous namespace)::ProcessingBasedContainer"* nonnull %75, i32 0, %"class.WTF::Vector.96"* nonnull %51, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %52, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %53, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %54, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %55, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %56, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %57, %"class.blink::media_constraints::NumericRangeSet"* nonnull byval(%"class.blink::media_constraints::NumericRangeSet") align 8 %274, %"class.WTF::Vector.101"* nonnull %59, %"class.blink::media_constraints::NumericRangeSet"* nonnull byval(%"class.blink::media_constraints::NumericRangeSet") align 8 %275, %"class.blink::(anonymous namespace)::SourceInfo"* nonnull byval(%"class.blink::(anonymous namespace)::SourceInfo") align 8 %61, i1 zeroext %455, %"class.media::AudioParameters"* nonnull %62, i1 zeroext %4) #12
  call void @_ZN5media15AudioParametersD1Ev(%"class.media::AudioParameters"* nonnull %62) #12
  br i1 %979, label %989, label %988, !prof !4

988:                                              ; preds = %982
  store i32 0, i32* %309, align 4, !noalias !8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %975) #12
  store i32* null, i32** %306, align 8, !noalias !8
  br label %989

989:                                              ; preds = %988, %982
  br i1 %965, label %991, label %990, !prof !4

990:                                              ; preds = %989
  store i32 0, i32* %302, align 4, !noalias !8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %962) #12
  store i8* null, i8** %324, align 8, !noalias !8
  br label %991

991:                                              ; preds = %990, %989
  br i1 %958, label %993, label %992, !prof !4

992:                                              ; preds = %991
  store i32 0, i32* %298, align 4, !noalias !8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %955) #12
  store i8* null, i8** %325, align 8, !noalias !8
  br label %993

993:                                              ; preds = %992, %991
  br i1 %951, label %995, label %994, !prof !4

994:                                              ; preds = %993
  store i32 0, i32* %294, align 4, !noalias !8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %948) #12
  store i8* null, i8** %326, align 8, !noalias !8
  br label %995

995:                                              ; preds = %994, %993
  br i1 %944, label %997, label %996, !prof !4

996:                                              ; preds = %995
  store i32 0, i32* %290, align 4, !noalias !8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %941) #12
  store i8* null, i8** %327, align 8, !noalias !8
  br label %997

997:                                              ; preds = %996, %995
  br i1 %937, label %999, label %998, !prof !4

998:                                              ; preds = %997
  store i32 0, i32* %286, align 4, !noalias !8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %934) #12
  store i8* null, i8** %328, align 8, !noalias !8
  br label %999

999:                                              ; preds = %998, %997
  br i1 %930, label %1001, label %1000, !prof !4

1000:                                             ; preds = %999
  store i32 0, i32* %282, align 4, !noalias !8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %927) #12
  store i8* null, i8** %329, align 8, !noalias !8
  br label %1001

1001:                                             ; preds = %1000, %999
  %1002 = load i32*, i32** %276, align 8, !noalias !8
  %1003 = icmp eq i32* %1002, null
  %1004 = bitcast i32* %1002 to i8*
  br i1 %1003, label %1010, label %1005, !prof !4

1005:                                             ; preds = %1001
  %1006 = load i32, i32* %279, align 4, !noalias !8
  %1007 = icmp eq i32 %1006, 0
  br i1 %1007, label %1009, label %1008, !prof !2

1008:                                             ; preds = %1005
  store i32 0, i32* %279, align 4, !noalias !8
  br label %1009

1009:                                             ; preds = %1008, %1005
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1004) #12
  store i32* null, i32** %276, align 8, !noalias !8
  br label %1010

1010:                                             ; preds = %1009, %1001
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %262) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %263) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %264) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %265) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %266) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %269) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %270) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %271) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %272) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %273) #12
  %1011 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 4, i32 0, i32 0, i32 2
  %1012 = load i32, i32* %1011, align 4
  %1013 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 4, i32 0, i32 0, i32 1
  %1014 = load i32, i32* %1013, align 8
  %1015 = icmp eq i32 %1012, %1014
  br i1 %1015, label %1024, label %1016, !prof !2

1016:                                             ; preds = %1010
  %1017 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %526, i64 0, i32 0, i32 0, i32 0
  %1018 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %1017, align 8
  %1019 = zext i32 %1012 to i64
  %1020 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1018, i64 %1019
  %1021 = bitcast %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1020 to i8*
  call fastcc void @_ZN3WTF15ConstructTraitsIN5blink12_GLOBAL__N_124ProcessingBasedContainerENS_12VectorTraitsIS3_EENS_18PartitionAllocatorEE9ConstructIJS3_EEEPS3_PvDpOT_(i8* %1021, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* nonnull dereferenceable(352) %75) #12
  %1022 = load i32, i32* %1011, align 4
  %1023 = add i32 %1022, 1
  store i32 %1023, i32* %1011, align 4
  br label %1025

1024:                                             ; preds = %1010
  call fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_124ProcessingBasedContainerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.91"* %526, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* nonnull dereferenceable(352) %75) #12
  br label %1025

1025:                                             ; preds = %1024, %1016
  call fastcc void @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainerD2Ev(%"class.blink::(anonymous namespace)::ProcessingBasedContainer"* nonnull %75) #12
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %261) #12
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %330) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %331) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %332) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %333) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %334) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %335) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %336) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %337) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %338) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %339) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %340) #12
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %341) #12
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %342) #12
  %1026 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 4) #12, !noalias !11
  %1027 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %1026, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEPKcv, i64 0, i64 0)) #12, !noalias !11
  %1028 = ptrtoint i8* %1027 to i64
  store atomic i64 %1028, i64* %347 monotonic, align 8, !noalias !11
  %1029 = lshr i64 %1026, 2
  %1030 = trunc i64 %1029 to i32
  store i32 %1030, i32* %346, align 8, !noalias !11
  %1031 = icmp eq i8* %1027, null
  store i32 1, i32* %348, align 4, !noalias !11
  br i1 %1031, label %1034, label %1032, !prof !2

1032:                                             ; preds = %1025
  %1033 = bitcast i8* %1027 to i32*
  store i32 0, i32* %1033, align 4
  br label %1034

1034:                                             ; preds = %1032, %1025
  %1035 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12, !noalias !11
  %1036 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %1035, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12, !noalias !11
  %1037 = ptrtoint i8* %1036 to i64
  %1038 = trunc i64 %1035 to i32
  %1039 = icmp eq i8* %1036, null
  br i1 %1039, label %1041, label %1040, !prof !2

1040:                                             ; preds = %1034
  store i8 0, i8* %1036, align 1
  br label %1041

1041:                                             ; preds = %1040, %1034
  store i8 0, i8* %332, align 8, !noalias !11
  store atomic i64 %1037, i64* %352 monotonic, align 8, !noalias !11
  store i32 %1038, i32* %350, align 8, !noalias !11
  store i32 1, i32* %351, align 4, !noalias !11
  store i8 1, i8* %333, align 8, !noalias !11
  call void @llvm.memset.p0i8.i64(i8* align 8 %354, i8 0, i64 16, i1 false) #12, !noalias !11
  %1042 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12, !noalias !11
  %1043 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %1042, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12, !noalias !11
  %1044 = ptrtoint i8* %1043 to i64
  %1045 = trunc i64 %1042 to i32
  %1046 = icmp eq i8* %1043, null
  br i1 %1046, label %1048, label %1047, !prof !2

1047:                                             ; preds = %1041
  store i8 0, i8* %1043, align 1
  br label %1048

1048:                                             ; preds = %1047, %1041
  store i8 0, i8* %334, align 8, !noalias !11
  store atomic i64 %1044, i64* %358 monotonic, align 8, !noalias !11
  store i32 %1045, i32* %356, align 8, !noalias !11
  store i32 1, i32* %357, align 4, !noalias !11
  %1049 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12, !noalias !11
  %1050 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %1049, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12, !noalias !11
  %1051 = ptrtoint i8* %1050 to i64
  %1052 = trunc i64 %1049 to i32
  %1053 = icmp eq i8* %1050, null
  br i1 %1053, label %1055, label %1054, !prof !2

1054:                                             ; preds = %1048
  store i8 0, i8* %1050, align 1
  br label %1055

1055:                                             ; preds = %1054, %1048
  store i8 0, i8* %335, align 8, !noalias !11
  store atomic i64 %1051, i64* %362 monotonic, align 8, !noalias !11
  store i32 %1052, i32* %360, align 8, !noalias !11
  store i32 1, i32* %361, align 4, !noalias !11
  %1056 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12, !noalias !11
  %1057 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %1056, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12, !noalias !11
  %1058 = ptrtoint i8* %1057 to i64
  %1059 = trunc i64 %1056 to i32
  %1060 = icmp eq i8* %1057, null
  br i1 %1060, label %1062, label %1061, !prof !2

1061:                                             ; preds = %1055
  store i8 0, i8* %1057, align 1
  br label %1062

1062:                                             ; preds = %1061, %1055
  store i8 0, i8* %336, align 8, !noalias !11
  store atomic i64 %1058, i64* %366 monotonic, align 8, !noalias !11
  store i32 %1059, i32* %364, align 8, !noalias !11
  store i32 1, i32* %365, align 4, !noalias !11
  %1063 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12, !noalias !11
  %1064 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %1063, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12, !noalias !11
  %1065 = ptrtoint i8* %1064 to i64
  %1066 = trunc i64 %1063 to i32
  %1067 = icmp eq i8* %1064, null
  br i1 %1067, label %1069, label %1068, !prof !2

1068:                                             ; preds = %1062
  store i8 0, i8* %1064, align 1
  br label %1069

1069:                                             ; preds = %1068, %1062
  store i8 0, i8* %337, align 8, !noalias !11
  store atomic i64 %1065, i64* %370 monotonic, align 8, !noalias !11
  store i32 %1066, i32* %368, align 8, !noalias !11
  store i32 1, i32* %369, align 4, !noalias !11
  %1070 = call i32 @_ZN5media28SampleFormatToBitsPerChannelENS_12SampleFormatE(i32 2) #12, !noalias !11
  %1071 = zext i32 %1070 to i64
  %1072 = shl nuw i64 %1071, 32
  %1073 = or i64 %1072, 1
  store i64 %1073, i64* %371, align 8, !noalias !11
  store i64 %1073, i64* %372, align 8, !noalias !11
  %1074 = load i32, i32* %972, align 8, !noalias !11
  %1075 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 4) #12, !noalias !11
  %1076 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %1075, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #12, !noalias !11
  %1077 = ptrtoint i8* %1076 to i64
  store atomic i64 %1077, i64* %375 monotonic, align 8, !noalias !11
  %1078 = lshr i64 %1075, 2
  %1079 = trunc i64 %1078 to i32
  store i32 %1079, i32* %374, align 8, !noalias !11
  %1080 = icmp eq i8* %1076, null
  store i32 1, i32* %376, align 4, !noalias !11
  br i1 %1080, label %1083, label %1081, !prof !2

1081:                                             ; preds = %1069
  %1082 = bitcast i8* %1076 to i32*
  store i32 %1074, i32* %1082, align 4
  br label %1083

1083:                                             ; preds = %1081, %1069
  %1084 = load i32, i32* %983, align 4, !noalias !11
  %1085 = zext i32 %1084 to i64
  %1086 = shl nuw i64 %1085, 32
  %1087 = or i64 %1086, 1
  store i64 %1087, i64* %377, align 8, !noalias !11
  store i64 %1087, i64* %378, align 8, !noalias !11
  store i32 %913, i32* %379, align 8, !noalias !11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %381, i8* nonnull align 4 %217, i64 16, i1 false) #12, !noalias !11
  store i64 %915, i64* %383, align 4, !noalias !11
  store i64 %916, i64* %385, align 4, !noalias !11
  store i32 -1431655766, i32* %387, align 4, !noalias !11
  store i8 %909, i8* %388, align 8, !noalias !11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %389, i8* nonnull align 1 getelementptr inbounds ({ i32, %"struct.blink::AudioProcessingProperties", { { { { i8, [3 x i8], %union.anon.76 } } } }, { { { { i8, [3 x i8], %union.anon.76 } } } }, [4 x i8], { { { { i8, [7 x i8], %union.anon.112 } } } } }, { i32, %"struct.blink::AudioProcessingProperties", { { { { i8, [3 x i8], %union.anon.76 } } } }, { { { { i8, [3 x i8], %union.anon.76 } } } }, [4 x i8], { { { { i8, [7 x i8], %union.anon.112 } } } } }* @__const.DeviceContainer.source_info, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false) #12, !noalias !11
  store double %910, double* %390, align 8, !noalias !11
  call void @_ZN5media15AudioParametersC1ERKS0_(%"class.media::AudioParameters"* nonnull %50, %"class.media::AudioParameters"* dereferenceable(64) %498) #12, !noalias !11
  call fastcc void @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainerC2ENS_20AudioCaptureSettings14ProcessingTypeEN3WTF6VectorINS_25AudioProcessingProperties20EchoCancellationTypeELj0ENS4_18PartitionAllocatorEEENS_17media_constraints11DiscreteSetIbEESC_SC_SC_SC_SC_NSA_15NumericRangeSetIiEENS5_IiLj0ES8_EESE_NS0_10SourceInfoEbN5media15AudioParametersEb(%"class.blink::(anonymous namespace)::ProcessingBasedContainer"* nonnull %76, i32 1, %"class.WTF::Vector.96"* nonnull %39, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %40, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %41, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %42, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %43, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %44, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %45, %"class.blink::media_constraints::NumericRangeSet"* nonnull byval(%"class.blink::media_constraints::NumericRangeSet") align 8 %343, %"class.WTF::Vector.101"* nonnull %47, %"class.blink::media_constraints::NumericRangeSet"* nonnull byval(%"class.blink::media_constraints::NumericRangeSet") align 8 %344, %"class.blink::(anonymous namespace)::SourceInfo"* nonnull byval(%"class.blink::(anonymous namespace)::SourceInfo") align 8 %49, i1 zeroext %455, %"class.media::AudioParameters"* nonnull %50, i1 zeroext %4) #12
  call void @_ZN5media15AudioParametersD1Ev(%"class.media::AudioParameters"* nonnull %50) #12
  br i1 %1080, label %1089, label %1088, !prof !4

1088:                                             ; preds = %1083
  store i32 0, i32* %376, align 4, !noalias !11
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1076) #12
  store i32* null, i32** %373, align 8, !noalias !11
  br label %1089

1089:                                             ; preds = %1088, %1083
  br i1 %1067, label %1091, label %1090, !prof !4

1090:                                             ; preds = %1089
  store i32 0, i32* %369, align 4, !noalias !11
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1064) #12
  store i8* null, i8** %391, align 8, !noalias !11
  br label %1091

1091:                                             ; preds = %1090, %1089
  br i1 %1060, label %1093, label %1092, !prof !4

1092:                                             ; preds = %1091
  store i32 0, i32* %365, align 4, !noalias !11
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1057) #12
  store i8* null, i8** %392, align 8, !noalias !11
  br label %1093

1093:                                             ; preds = %1092, %1091
  br i1 %1053, label %1095, label %1094, !prof !4

1094:                                             ; preds = %1093
  store i32 0, i32* %361, align 4, !noalias !11
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1050) #12
  store i8* null, i8** %393, align 8, !noalias !11
  br label %1095

1095:                                             ; preds = %1094, %1093
  br i1 %1046, label %1097, label %1096, !prof !4

1096:                                             ; preds = %1095
  store i32 0, i32* %357, align 4, !noalias !11
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1043) #12
  store i8* null, i8** %394, align 8, !noalias !11
  br label %1097

1097:                                             ; preds = %1096, %1095
  br i1 %1039, label %1099, label %1098, !prof !4

1098:                                             ; preds = %1097
  store i32 0, i32* %351, align 4, !noalias !11
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1036) #12
  store i8* null, i8** %395, align 8, !noalias !11
  br label %1099

1099:                                             ; preds = %1098, %1097
  %1100 = load i32*, i32** %345, align 8, !noalias !11
  %1101 = icmp eq i32* %1100, null
  %1102 = bitcast i32* %1100 to i8*
  br i1 %1101, label %1108, label %1103, !prof !4

1103:                                             ; preds = %1099
  %1104 = load i32, i32* %348, align 4, !noalias !11
  %1105 = icmp eq i32 %1104, 0
  br i1 %1105, label %1107, label %1106, !prof !2

1106:                                             ; preds = %1103
  store i32 0, i32* %348, align 4, !noalias !11
  br label %1107

1107:                                             ; preds = %1106, %1103
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1102) #12
  store i32* null, i32** %345, align 8, !noalias !11
  br label %1108

1108:                                             ; preds = %1107, %1099
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %331) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %332) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %333) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %334) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %335) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %336) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %337) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %338) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %339) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %340) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %341) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %342) #12
  %1109 = load i32, i32* %1011, align 4
  %1110 = load i32, i32* %1013, align 8
  %1111 = icmp eq i32 %1109, %1110
  br i1 %1111, label %1120, label %1112, !prof !2

1112:                                             ; preds = %1108
  %1113 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %526, i64 0, i32 0, i32 0, i32 0
  %1114 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %1113, align 8
  %1115 = zext i32 %1109 to i64
  %1116 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1114, i64 %1115
  %1117 = bitcast %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1116 to i8*
  call fastcc void @_ZN3WTF15ConstructTraitsIN5blink12_GLOBAL__N_124ProcessingBasedContainerENS_12VectorTraitsIS3_EENS_18PartitionAllocatorEE9ConstructIJS3_EEEPS3_PvDpOT_(i8* %1117, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* nonnull dereferenceable(352) %76) #12
  %1118 = load i32, i32* %1011, align 4
  %1119 = add i32 %1118, 1
  store i32 %1119, i32* %1011, align 4
  br label %1121

1120:                                             ; preds = %1108
  call fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_124ProcessingBasedContainerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.91"* %526, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* nonnull dereferenceable(352) %76) #12
  br label %1121

1121:                                             ; preds = %1120, %1112
  call fastcc void @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainerD2Ev(%"class.blink::(anonymous namespace)::ProcessingBasedContainer"* nonnull %76) #12
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %330) #12
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %396) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %397) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %398) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %399) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %400) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %401) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %402) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %403) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %404) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %405) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %406) #12
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %407) #12
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %408) #12
  %1122 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 8) #12, !noalias !14
  %1123 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %1122, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEPKcv, i64 0, i64 0)) #12, !noalias !14
  %1124 = ptrtoint i8* %1123 to i64
  store atomic i64 %1124, i64* %413 monotonic, align 8, !noalias !14
  %1125 = lshr i64 %1122, 2
  %1126 = trunc i64 %1125 to i32
  store i32 %1126, i32* %412, align 8, !noalias !14
  %1127 = icmp eq i8* %1123, null
  store i32 2, i32* %414, align 4, !noalias !14
  br i1 %1127, label %1130, label %1128, !prof !2

1128:                                             ; preds = %1121
  %1129 = bitcast i8* %1123 to i64*
  store i64 1, i64* %1129, align 4
  br label %1130

1130:                                             ; preds = %1128, %1121
  store i8 1, i8* %398, align 8, !noalias !14
  call void @llvm.memset.p0i8.i64(i8* align 8 %416, i8 0, i64 16, i1 false) #12, !noalias !14
  store i8 1, i8* %399, align 8, !noalias !14
  call void @llvm.memset.p0i8.i64(i8* align 8 %418, i8 0, i64 16, i1 false) #12, !noalias !14
  store i8 1, i8* %400, align 8, !noalias !14
  call void @llvm.memset.p0i8.i64(i8* align 8 %420, i8 0, i64 16, i1 false) #12, !noalias !14
  store i8 1, i8* %401, align 8, !noalias !14
  call void @llvm.memset.p0i8.i64(i8* align 8 %422, i8 0, i64 16, i1 false) #12, !noalias !14
  store i8 1, i8* %402, align 8, !noalias !14
  call void @llvm.memset.p0i8.i64(i8* align 8 %424, i8 0, i64 16, i1 false) #12, !noalias !14
  store i8 1, i8* %403, align 8, !noalias !14
  call void @llvm.memset.p0i8.i64(i8* align 8 %426, i8 0, i64 16, i1 false) #12, !noalias !14
  %1131 = call i32 @_ZN5media28SampleFormatToBitsPerChannelENS_12SampleFormatE(i32 2) #12, !noalias !14
  %1132 = zext i32 %1131 to i64
  %1133 = shl nuw i64 %1132, 32
  %1134 = or i64 %1133, 1
  store i64 %1134, i64* %427, align 8, !noalias !14
  store i64 %1134, i64* %428, align 8, !noalias !14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %405, i8 0, i64 16, i1 false) #12, !alias.scope !17, !noalias !14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %432) #12, !noalias !20
  store i32 1, i32* %25, align 4, !noalias !20
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_(%"class.WTF::Vector.101"* nonnull %35, i32* nonnull dereferenceable(4) %25) #12, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %432) #12, !noalias !20
  %1135 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features35kWebRtcEnableCaptureMultiChannelApmE) #12, !noalias !14
  br i1 %1135, label %1136, label %1157

1136:                                             ; preds = %1130
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %433) #12, !noalias !20
  store i32 -1431655766, i32* %26, align 4, !noalias !20
  %1137 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %495, i64 %497, i32 0, i32 1
  %1138 = load i32, i32* %1137, align 4, !noalias !20
  %1139 = icmp eq i32 %1138, 30
  br i1 %1139, label %1140, label %1141

1140:                                             ; preds = %1136
  store i32 2, i32* %26, align 4, !noalias !20
  br label %1144

1141:                                             ; preds = %1136
  %1142 = load i32, i32* %972, align 8, !noalias !20
  store i32 %1142, i32* %26, align 4, !noalias !20
  %1143 = icmp sgt i32 %1142, 1
  br i1 %1143, label %1144, label %1156

1144:                                             ; preds = %1141, %1140
  %1145 = phi i32 [ 2, %1140 ], [ %1142, %1141 ]
  %1146 = load i32, i32* %431, align 4, !alias.scope !17, !noalias !14
  %1147 = load i32, i32* %430, align 8, !alias.scope !17, !noalias !14
  %1148 = icmp eq i32 %1146, %1147
  br i1 %1148, label %1155, label %1149, !prof !2

1149:                                             ; preds = %1144
  %1150 = load i32*, i32** %429, align 8, !alias.scope !17, !noalias !14
  %1151 = zext i32 %1146 to i64
  %1152 = getelementptr inbounds i32, i32* %1150, i64 %1151
  store i32 %1145, i32* %1152, align 4
  %1153 = load i32, i32* %431, align 4, !alias.scope !17, !noalias !14
  %1154 = add i32 %1153, 1
  store i32 %1154, i32* %431, align 4, !alias.scope !17, !noalias !14
  br label %1156

1155:                                             ; preds = %1144
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.101"* nonnull %35, i32* nonnull dereferenceable(4) %26) #12
  br label %1156

1156:                                             ; preds = %1155, %1149, %1141
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %433) #12, !noalias !20
  br label %1157

1157:                                             ; preds = %1156, %1130
  store <2 x i64> <i64 206158430208001, i64 206158430208001>, <2 x i64>* %36, align 16, !noalias !14
  store i32 %913, i32* %434, align 8, !noalias !14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %436, i8* nonnull align 4 %217, i64 16, i1 false) #12, !noalias !14
  store i64 %915, i64* %438, align 4, !noalias !14
  store i64 %916, i64* %440, align 4, !noalias !14
  store i32 -1431655766, i32* %442, align 4, !noalias !14
  store i8 %909, i8* %443, align 8, !noalias !14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %444, i8* nonnull align 1 getelementptr inbounds ({ i32, %"struct.blink::AudioProcessingProperties", { { { { i8, [3 x i8], %union.anon.76 } } } }, { { { { i8, [3 x i8], %union.anon.76 } } } }, [4 x i8], { { { { i8, [7 x i8], %union.anon.112 } } } } }, { i32, %"struct.blink::AudioProcessingProperties", { { { { i8, [3 x i8], %union.anon.76 } } } }, { { { { i8, [3 x i8], %union.anon.76 } } } }, [4 x i8], { { { { i8, [7 x i8], %union.anon.112 } } } } }* @__const.DeviceContainer.source_info, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false) #12, !noalias !14
  store double %910, double* %445, align 8, !noalias !14
  call void @_ZN5media15AudioParametersC1ERKS0_(%"class.media::AudioParameters"* nonnull %38, %"class.media::AudioParameters"* dereferenceable(64) %498) #12, !noalias !14
  call fastcc void @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainerC2ENS_20AudioCaptureSettings14ProcessingTypeEN3WTF6VectorINS_25AudioProcessingProperties20EchoCancellationTypeELj0ENS4_18PartitionAllocatorEEENS_17media_constraints11DiscreteSetIbEESC_SC_SC_SC_SC_NSA_15NumericRangeSetIiEENS5_IiLj0ES8_EESE_NS0_10SourceInfoEbN5media15AudioParametersEb(%"class.blink::(anonymous namespace)::ProcessingBasedContainer"* nonnull %77, i32 2, %"class.WTF::Vector.96"* nonnull %27, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %28, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %29, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %30, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %31, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %32, %"class.blink::media_constraints::DiscreteSet.85"* nonnull %33, %"class.blink::media_constraints::NumericRangeSet"* nonnull byval(%"class.blink::media_constraints::NumericRangeSet") align 8 %409, %"class.WTF::Vector.101"* nonnull %35, %"class.blink::media_constraints::NumericRangeSet"* nonnull byval(%"class.blink::media_constraints::NumericRangeSet") align 8 %410, %"class.blink::(anonymous namespace)::SourceInfo"* nonnull byval(%"class.blink::(anonymous namespace)::SourceInfo") align 8 %37, i1 zeroext %455, %"class.media::AudioParameters"* nonnull %38, i1 zeroext %4) #12
  call void @_ZN5media15AudioParametersD1Ev(%"class.media::AudioParameters"* nonnull %38) #12
  %1158 = load i32*, i32** %429, align 8, !noalias !14
  %1159 = icmp eq i32* %1158, null
  %1160 = bitcast i32* %1158 to i8*
  br i1 %1159, label %1166, label %1161, !prof !4

1161:                                             ; preds = %1157
  %1162 = load i32, i32* %431, align 4, !noalias !14
  %1163 = icmp eq i32 %1162, 0
  br i1 %1163, label %1165, label %1164, !prof !2

1164:                                             ; preds = %1161
  store i32 0, i32* %431, align 4, !noalias !14
  br label %1165

1165:                                             ; preds = %1164, %1161
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1160) #12
  store i32* null, i32** %429, align 8, !noalias !14
  br label %1166

1166:                                             ; preds = %1165, %1157
  %1167 = load i32*, i32** %411, align 8, !noalias !14
  %1168 = bitcast i32* %1167 to i8*
  %1169 = icmp eq i32* %1167, null
  br i1 %1169, label %1175, label %1170, !prof !4

1170:                                             ; preds = %1166
  %1171 = load i32, i32* %414, align 4, !noalias !14
  %1172 = icmp eq i32 %1171, 0
  br i1 %1172, label %1174, label %1173, !prof !2

1173:                                             ; preds = %1170
  store i32 0, i32* %414, align 4, !noalias !14
  br label %1174

1174:                                             ; preds = %1173, %1170
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1168) #12
  store i32* null, i32** %411, align 8, !noalias !14
  br label %1175

1175:                                             ; preds = %1174, %1166
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %397) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %398) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %399) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %400) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %401) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %402) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %403) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %404) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %405) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %406) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %407) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %408) #12
  %1176 = load i32, i32* %1011, align 4
  %1177 = load i32, i32* %1013, align 8
  %1178 = icmp eq i32 %1176, %1177
  br i1 %1178, label %1187, label %1179, !prof !2

1179:                                             ; preds = %1175
  %1180 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %526, i64 0, i32 0, i32 0, i32 0
  %1181 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %1180, align 8
  %1182 = zext i32 %1176 to i64
  %1183 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1181, i64 %1182
  %1184 = bitcast %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1183 to i8*
  call fastcc void @_ZN3WTF15ConstructTraitsIN5blink12_GLOBAL__N_124ProcessingBasedContainerENS_12VectorTraitsIS3_EENS_18PartitionAllocatorEE9ConstructIJS3_EEEPS3_PvDpOT_(i8* %1184, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* nonnull dereferenceable(352) %77) #12
  %1185 = load i32, i32* %1011, align 4
  %1186 = add i32 %1185, 1
  store i32 %1186, i32* %1011, align 4
  br label %1188

1187:                                             ; preds = %1175
  call fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_124ProcessingBasedContainerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.91"* %526, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* nonnull dereferenceable(352) %77) #12
  br label %1188

1188:                                             ; preds = %1187, %1179
  call fastcc void @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainerD2Ev(%"class.blink::(anonymous namespace)::ProcessingBasedContainer"* nonnull %77) #12
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %396) #12
  %1189 = icmp eq i32 %913, 0
  br i1 %1189, label %1219, label %1190

1190:                                             ; preds = %1188
  %1191 = load %"class.blink::MediaStreamAudioSource"*, %"class.blink::MediaStreamAudioSource"** %499, align 8
  %1192 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %1191, i64 0, i32 2
  %1193 = load i8, i8* %1192, align 1, !range !3
  %1194 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12
  %1195 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %1194, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %1196 = ptrtoint i8* %1195 to i64
  %1197 = trunc i64 %1194 to i32
  %1198 = icmp eq i8* %1195, null
  br i1 %1198, label %1200, label %1199, !prof !2

1199:                                             ; preds = %1190
  store i8 %1193, i8* %1195, align 1
  br label %1200

1200:                                             ; preds = %1199, %1190
  store i8 0, i8* %515, align 8
  %1201 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %516, i64 0, i32 0, i32 0, i32 0
  %1202 = load i8*, i8** %1201, align 8
  store atomic i64 %1196, i64* %519 monotonic, align 8
  store i32 %1197, i32* %517, align 4
  store i32 1, i32* %518, align 4
  %1203 = icmp eq i8* %1202, null
  br i1 %1203, label %1205, label %1204, !prof !4

1204:                                             ; preds = %1200
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1202) #12
  br label %1205

1205:                                             ; preds = %1204, %1200
  %1206 = call zeroext i1 @_ZNK5blink22MediaStreamAudioSource29RenderToAssociatedSinkEnabledEv(%"class.blink::MediaStreamAudioSource"* %1191) #12
  %1207 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12
  %1208 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %1207, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %1209 = ptrtoint i8* %1208 to i64
  %1210 = trunc i64 %1207 to i32
  %1211 = icmp eq i8* %1208, null
  br i1 %1211, label %1214, label %1212, !prof !2

1212:                                             ; preds = %1205
  %1213 = zext i1 %1206 to i8
  store i8 %1213, i8* %1208, align 1
  br label %1214

1214:                                             ; preds = %1212, %1205
  store i8 0, i8* %520, align 8
  %1215 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %521, i64 0, i32 0, i32 0, i32 0
  %1216 = load i8*, i8** %1215, align 8
  store atomic i64 %1209, i64* %525 monotonic, align 8
  store i32 %1210, i32* %522, align 4
  store i32 1, i32* %524, align 4
  %1217 = icmp eq i8* %1216, null
  br i1 %1217, label %1219, label %1218, !prof !4

1218:                                             ; preds = %1214
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1216) #12
  br label %1219

1219:                                             ; preds = %1218, %1214, %1188
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %217)
  %1220 = load i32, i32* %190, align 4
  %1221 = add i32 %1220, 1
  store i32 %1221, i32* %190, align 4
  %1222 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %449, i64 1
  %1223 = icmp eq %"class.blink::AudioDeviceCaptureCapability"* %1222, %206
  br i1 %1223, label %1224, label %447

1224:                                             ; preds = %1219, %199
  %1225 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %2) #12
  %1226 = call fastcc i8* @_ZN5blink12_GLOBAL__N_119CandidatesContainer18ApplyConstraintSetERKNS_31MediaTrackConstraintSetPlatformE(%"class.blink::(anonymous namespace)::CandidatesContainer"* nonnull %82, %"struct.blink::MediaTrackConstraintSetPlatform"* dereferenceable(1856) %1225)
  %1227 = icmp eq i8* %1226, null
  br i1 %1227, label %1229, label %1228

1228:                                             ; preds = %1224
  call void @_ZN5blink20AudioCaptureSettingsC1EPKc(%"class.blink::AudioCaptureSettings"* %0, i8* nonnull %1226) #12
  br label %3143

1229:                                             ; preds = %1224
  %1230 = call dereferenceable(16) %"class.WTF::Vector.122"* @_ZNK5blink16MediaConstraints8AdvancedEv(%"class.blink::MediaConstraints"* %2) #12
  %1231 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %1230, i64 0, i32 0, i32 0, i32 0
  %1232 = load %"struct.blink::MediaTrackConstraintSetPlatform"*, %"struct.blink::MediaTrackConstraintSetPlatform"** %1231, align 8
  %1233 = getelementptr inbounds %"class.WTF::Vector.122", %"class.WTF::Vector.122"* %1230, i64 0, i32 0, i32 0, i32 2
  %1234 = load i32, i32* %1233, align 4
  %1235 = zext i32 %1234 to i64
  %1236 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1232, i64 %1235
  %1237 = icmp eq i32 %1234, 0
  br i1 %1237, label %1255, label %1238

1238:                                             ; preds = %1229
  %1239 = bitcast %"class.blink::(anonymous namespace)::CandidatesContainer"* %83 to i8*
  %1240 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1241 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %83, i64 0, i32 1, i32 0, i32 0, i32 1
  %1242 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %83, i64 0, i32 1, i32 0, i32 0, i32 2
  %1243 = bitcast %"class.blink::(anonymous namespace)::CandidatesContainer"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1244 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1243, i64 0, i32 1, i32 0
  %1245 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %83, i64 0, i32 0
  %1246 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %83, i64 0, i32 1
  %1247 = getelementptr inbounds %"class.WTF::Vector.77", %"class.WTF::Vector.77"* %1246, i64 0, i32 0, i32 0, i32 0
  %1248 = getelementptr inbounds %"class.WTF::Vector.77", %"class.WTF::Vector.77"* %1246, i64 0, i32 0, i32 0
  %1249 = bitcast %"class.blink::(anonymous namespace)::CandidatesContainer"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1250 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1249, i64 0, i32 1, i32 0
  %1251 = bitcast %"class.WTF::Vector.77"* %1246 to i64*
  %1252 = bitcast %"class.WTF::Vector.77"* %200 to i64*
  %1253 = bitcast %"class.WTF::Vector.77"* %1246 to i8**
  %1254 = bitcast %"class.blink::(anonymous namespace)::CandidatesContainer"* %83 to i8*
  br label %2714

1255:                                             ; preds = %3140, %1229
  %1256 = bitcast %"class.blink::AudioCaptureSettings"* %84 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1256) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1256, i8 -86, i64 72, i1 false)
  call void @_ZN5blink20AudioCaptureSettingsC1Ev(%"class.blink::AudioCaptureSettings"* nonnull %84) #12
  %1257 = bitcast %"class.std::__1::tuple"* %85 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %1257) #12
  %1258 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %2) #12
  %1259 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink25kMediaStreamSourceDesktopE, i64 0, i64 0)) #12
  %1260 = load i8, i8* %96, align 1
  %1261 = icmp slt i8 %1260, 0
  %1262 = load i64, i64* %93, align 8
  %1263 = zext i8 %1260 to i64
  %1264 = select i1 %1261, i64 %1262, i64 %1263
  %1265 = icmp eq i64 %1259, %1264
  br i1 %1265, label %1266, label %1270

1266:                                             ; preds = %1255
  %1267 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %79, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink25kMediaStreamSourceDesktopE, i64 0, i64 0), i64 %1259) #12
  %1268 = icmp ne i32 %1267, 0
  %1269 = zext i1 %1268 to i8
  br label %1270

1270:                                             ; preds = %1255, %1266
  %1271 = phi i8 [ %1269, %1266 ], [ 1, %1255 ]
  %1272 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1272)
  %1273 = bitcast %"class.blink::AudioCaptureSettings"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1273) #12, !noalias !21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1273, i8 -86, i64 72, i1 false) #12, !noalias !21
  call void @_ZN5blink20AudioCaptureSettingsC1Ev(%"class.blink::AudioCaptureSettings"* nonnull %20) #12, !noalias !21
  %1274 = load %"class.blink::(anonymous namespace)::DeviceContainer"*, %"class.blink::(anonymous namespace)::DeviceContainer"** %188, align 8, !noalias !21
  %1275 = load i32, i32* %190, align 4, !noalias !21
  %1276 = zext i32 %1275 to i64
  %1277 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1274, i64 %1276
  %1278 = icmp eq i32 %1275, 0
  br i1 %1278, label %1400, label %1279

1279:                                             ; preds = %1270
  %1280 = bitcast %"class.blink::AudioCaptureSettings"* %21 to i8*
  %1281 = bitcast %"class.std::__1::tuple"* %22 to i8*
  %1282 = bitcast %"class.blink::(anonymous namespace)::CandidatesContainer"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1283 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1282, i64 0, i32 1, i32 0
  %1284 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %1285 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %1286 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %1287 = bitcast i64* %17 to %"class.absl::optional.72"*
  %1288 = getelementptr inbounds [7 x i8], [7 x i8]* %11, i64 0, i64 0
  %1289 = bitcast %"class.std::__1::tuple.404"* %12 to i8*
  %1290 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 13
  %1291 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1292 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1291, i64 0, i32 1, i32 0
  %1293 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1294 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1295 = getelementptr inbounds %"class.std::__1::tuple.404", %"class.std::__1::tuple.404"* %12, i64 0, i32 0, i32 0, i32 0
  %1296 = getelementptr inbounds %"class.std::__1::tuple.404", %"class.std::__1::tuple.404"* %12, i64 0, i32 0, i32 1, i32 0
  %1297 = bitcast %"class.std::__1::basic_string"* %1296 to i8*
  %1298 = getelementptr inbounds %"class.std::__1::tuple.404", %"class.std::__1::tuple.404"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1299 = getelementptr inbounds %"class.std::__1::tuple.404", %"class.std::__1::tuple.404"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1300 = getelementptr inbounds %"class.std::__1::tuple.404", %"class.std::__1::tuple.404"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1301 = bitcast i64* %1300 to i8*
  %1302 = getelementptr inbounds i8, i8* %1289, i64 31
  %1303 = bitcast %"class.std::__1::basic_string"* %1296 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1304 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1303, i64 0, i32 1, i32 0
  %1305 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1306 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1305, i64 0, i32 1, i32 0
  %1307 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1308 = bitcast %"class.std::__1::tuple.404"* %14 to i8*
  %1309 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 18
  %1310 = getelementptr inbounds %"class.std::__1::tuple.404", %"class.std::__1::tuple.404"* %14, i64 0, i32 0, i32 0, i32 0
  %1311 = getelementptr inbounds %"class.std::__1::tuple.404", %"class.std::__1::tuple.404"* %14, i64 0, i32 0, i32 1
  %1312 = bitcast %"class.std::__1::__tuple_leaf.406"* %1311 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1313 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1312, i64 0, i32 1, i32 0
  %1314 = getelementptr inbounds %"class.std::__1::__tuple_leaf.406", %"class.std::__1::__tuple_leaf.406"* %1311, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1315 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 14, i32 1
  %1316 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 21, i32 1
  %1317 = bitcast %"struct.blink::AudioProcessingProperties"* %16 to i8*
  %1318 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %16, i64 0, i32 0
  %1319 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %16, i64 0, i32 1
  %1320 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %16, i64 0, i32 3
  %1321 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %16, i64 0, i32 5
  %1322 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %16, i64 0, i32 6
  %1323 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %16, i64 0, i32 7
  %1324 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %16, i64 0, i32 8
  %1325 = bitcast i8* %1319 to i32*
  %1326 = bitcast i8* %1324 to i32*
  %1327 = bitcast i64* %17 to i8*
  %1328 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 8
  %1329 = getelementptr inbounds %"class.absl::optional.72", %"class.absl::optional.72"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %1330 = getelementptr inbounds %"class.absl::optional.72", %"class.absl::optional.72"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1331 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 12, i32 6
  %1332 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 12, i32 5
  %1333 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 7
  %1334 = getelementptr inbounds %"class.absl::optional.72", %"class.absl::optional.72"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %1335 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 11
  %1336 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 11, i32 6
  %1337 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 11, i32 5
  %1338 = bitcast %"struct.blink::AudioProcessingProperties"* %10 to i8*
  %1339 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %10, i64 0, i32 0
  %1340 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %10, i64 0, i32 1
  %1341 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %10, i64 0, i32 5
  %1342 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %10, i64 0, i32 6
  %1343 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %10, i64 0, i32 7
  %1344 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %10, i64 0, i32 8
  %1345 = getelementptr inbounds %"struct.blink::AudioProcessingProperties", %"struct.blink::AudioProcessingProperties"* %10, i64 0, i32 11
  %1346 = bitcast i8* %1340 to i32*
  %1347 = bitcast i8* %1344 to i32*
  %1348 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 9, i32 1
  %1349 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 22, i32 1
  %1350 = bitcast %"class.blink::BooleanConstraint"* %6 to i8*
  %1351 = getelementptr inbounds %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint"* %6, i64 0, i32 0, i32 0
  %1352 = getelementptr inbounds %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint"* %6, i64 0, i32 0, i32 1
  %1353 = getelementptr inbounds %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint"* %6, i64 0, i32 1
  %1354 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 24, i32 0, i32 1
  %1355 = bitcast i8** %1352 to i8*
  %1356 = bitcast i8** %1354 to i8*
  %1357 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 24, i32 1
  %1358 = bitcast %"class.blink::BooleanConstraint"* %7 to i8*
  %1359 = getelementptr inbounds %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint"* %7, i64 0, i32 0, i32 0
  %1360 = getelementptr inbounds %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint"* %7, i64 0, i32 0, i32 1
  %1361 = getelementptr inbounds %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint"* %7, i64 0, i32 1
  %1362 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 25, i32 0, i32 1
  %1363 = bitcast i8** %1360 to i8*
  %1364 = bitcast i8** %1362 to i8*
  %1365 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 25, i32 1
  %1366 = bitcast %"class.blink::BooleanConstraint"* %7 to %"class.blink::BaseConstraint"*
  %1367 = bitcast %"class.blink::BooleanConstraint"* %6 to %"class.blink::BaseConstraint"*
  %1368 = bitcast %"class.blink::AudioCaptureSettings"* %18 to i8*
  %1369 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1370 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1371 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1372 = bitcast i64* %1371 to i8*
  %1373 = getelementptr inbounds i8, i8* %1286, i64 23
  %1374 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1375 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1376 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i64 0
  %1377 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i64 1
  %1378 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i64 2
  %1379 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0
  %1380 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 0
  %1381 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i64 0
  %1382 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 1, i32 0
  %1383 = bitcast i8* %1381 to i32*
  %1384 = getelementptr inbounds %"class.blink::AudioCaptureSettings", %"class.blink::AudioCaptureSettings"* %18, i64 0, i32 1
  %1385 = bitcast %"class.std::__1::basic_string"* %1384 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1386 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1385, i64 0, i32 1, i32 0
  %1387 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1384, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1388 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1389 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1388, i64 0, i32 1, i32 0
  %1390 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 1, i32 0, i32 1
  %1391 = bitcast %"class.std::__1::basic_string"* %1390 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1392 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1391, i64 0, i32 1, i32 0
  %1393 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1390, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1394 = getelementptr inbounds %"class.blink::AudioCaptureSettings", %"class.blink::AudioCaptureSettings"* %21, i64 0, i32 1
  %1395 = bitcast %"class.std::__1::basic_string"* %1394 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1396 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1395, i64 0, i32 1, i32 0
  %1397 = getelementptr inbounds %"class.blink::AudioCaptureSettings", %"class.blink::AudioCaptureSettings"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1398 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1394, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1399 = bitcast %"class.std::__1::basic_string"* %1394 to i8*
  br label %1423

1400:                                             ; preds = %2691, %1270
  %1401 = phi i32 [ 1, %1270 ], [ %2684, %2691 ]
  %1402 = phi i32 [ -1, %1270 ], [ %2685, %2691 ]
  %1403 = phi i8 [ 0, %1270 ], [ %2686, %2691 ]
  %1404 = phi double [ -1.000000e+00, %1270 ], [ %2687, %2691 ]
  %1405 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store double %1404, double* %1405, align 8, !alias.scope !21
  %1406 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i8 %1403, i8* %1406, align 8, !alias.scope !21
  %1407 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i64 0
  store i8 -86, i8* %1407, align 1, !alias.scope !21
  %1408 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i64 1
  store i8 -86, i8* %1408, align 2, !alias.scope !21
  %1409 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i64 2
  store i8 -86, i8* %1409, align 1, !alias.scope !21
  %1410 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0
  store i32 %1401, i32* %1410, align 4, !alias.scope !21
  %1411 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 0
  store i32 %1402, i32* %1411, align 8, !alias.scope !21
  %1412 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i64 0
  %1413 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %85, i64 0, i32 0, i32 1, i32 0
  %1414 = bitcast i8* %1412 to i32*
  store i32 -1431655766, i32* %1414, align 4, !alias.scope !21
  call void @_ZN5blink20AudioCaptureSettingsC1ERKS0_(%"class.blink::AudioCaptureSettings"* %1413, %"class.blink::AudioCaptureSettings"* nonnull dereferenceable(72) %20) #12
  %1415 = getelementptr inbounds %"class.blink::AudioCaptureSettings", %"class.blink::AudioCaptureSettings"* %20, i64 0, i32 1
  %1416 = bitcast %"class.std::__1::basic_string"* %1415 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1417 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1416, i64 0, i32 1, i32 0
  %1418 = load i8, i8* %1417, align 1, !noalias !21
  %1419 = icmp slt i8 %1418, 0
  br i1 %1419, label %1420, label %2694

1420:                                             ; preds = %1400
  %1421 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1415, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1422 = load i8*, i8** %1421, align 8, !noalias !21
  call void @_ZdlPv(i8* %1422) #14
  br label %2694

1423:                                             ; preds = %2691, %1279
  %1424 = phi %"class.blink::(anonymous namespace)::DeviceContainer"* [ %1274, %1279 ], [ %2692, %2691 ]
  %1425 = phi double [ -1.000000e+00, %1279 ], [ %2687, %2691 ]
  %1426 = phi i8 [ 0, %1279 ], [ %2686, %2691 ]
  %1427 = phi i32 [ -1, %1279 ], [ %2685, %2691 ]
  %1428 = phi i32 [ 1, %1279 ], [ %2684, %2691 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1280) #12, !noalias !21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1280, i8 -86, i64 72, i1 false) #12, !noalias !21
  call void @_ZN5blink20AudioCaptureSettingsC1Ev(%"class.blink::AudioCaptureSettings"* nonnull %21) #12
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %1281) #12, !noalias !21
  %1429 = load i8, i8* %1283, align 1, !noalias !21
  %1430 = icmp slt i8 %1429, 0
  br i1 %1430, label %1432, label %1431

1431:                                             ; preds = %1423
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1272, i8* nonnull align 8 %185, i64 24, i1 false) #12, !noalias !21
  br label %1435

1432:                                             ; preds = %1423
  %1433 = load i8*, i8** %186, align 8, !noalias !21
  %1434 = load i64, i64* %187, align 8, !noalias !21
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %23, i8* %1433, i64 %1434) #12
  br label %1435

1435:                                             ; preds = %1432, %1431
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1284) #12, !noalias !21
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1285) #12, !noalias !21
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1286) #12, !noalias !21
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %1288)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1288, i8 0, i64 7, i1 false), !noalias !24
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1289) #12, !noalias !24
  %1436 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 1
  %1437 = load i8, i8* %1292, align 1, !noalias !24
  %1438 = icmp slt i8 %1437, 0
  br i1 %1438, label %1440, label %1439

1439:                                             ; preds = %1435
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1284, i8* nonnull align 8 %1272, i64 24, i1 false) #12, !noalias !24
  br label %1443

1440:                                             ; preds = %1435
  %1441 = load i8*, i8** %1293, align 8, !noalias !24
  %1442 = load i64, i64* %1294, align 8, !noalias !24
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %13, i8* %1441, i64 %1442) #12
  br label %1443

1443:                                             ; preds = %1440, %1439
  call fastcc void @_ZNK5blink12_GLOBAL__N_115StringContainer22SelectSettingsAndScoreERKNS_16StringConstraintENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.std::__1::tuple.404"* nonnull sret %12, %"class.blink::(anonymous namespace)::StringContainer"* %1436, %"class.blink::StringConstraint"* dereferenceable(56) %1290, %"class.std::__1::basic_string"* nonnull %13) #12, !noalias !27
  %1444 = load double, double* %1295, align 8, !noalias !24
  %1445 = load i8*, i8** %1298, align 8, !noalias !24
  %1446 = load i64, i64* %1299, align 8, !noalias !24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1288, i8* align 8 %1301, i64 7, i1 false) #12, !noalias !24
  %1447 = load i8, i8* %1302, align 1, !noalias !24
  store i8 0, i8* %1304, align 1, !noalias !24
  store i8 0, i8* %1297, align 8, !noalias !24
  %1448 = load i8, i8* %1306, align 1, !noalias !24
  %1449 = icmp slt i8 %1448, 0
  br i1 %1449, label %1450, label %1452

1450:                                             ; preds = %1443
  %1451 = load i8*, i8** %1307, align 8, !noalias !24
  call void @_ZdlPv(i8* %1451) #14
  br label %1452

1452:                                             ; preds = %1450, %1443
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1289) #12, !noalias !24
  %1453 = fadd double %1444, 0.000000e+00
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1308) #12, !noalias !24
  %1454 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1285, i8 0, i64 24, i1 false) #12, !noalias !24
  call fastcc void @_ZNK5blink12_GLOBAL__N_115StringContainer22SelectSettingsAndScoreERKNS_16StringConstraintENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.std::__1::tuple.404"* nonnull sret %14, %"class.blink::(anonymous namespace)::StringContainer"* %1454, %"class.blink::StringConstraint"* dereferenceable(56) %1309, %"class.std::__1::basic_string"* nonnull %15) #12, !noalias !27
  %1455 = load double, double* %1310, align 8, !noalias !24
  %1456 = load i8, i8* %1313, align 1, !noalias !24
  %1457 = icmp slt i8 %1456, 0
  br i1 %1457, label %1458, label %1460

1458:                                             ; preds = %1452
  %1459 = load i8*, i8** %1314, align 8, !noalias !24
  call void @_ZdlPv(i8* %1459) #14
  br label %1460

1460:                                             ; preds = %1458, %1452
  %1461 = load i8, i8* %1315, align 1, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1308) #12, !noalias !24
  %1462 = fadd double %1453, %1455
  %1463 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 3
  %1464 = and i8 %1461, 4
  %1465 = icmp eq i8 %1464, 0
  br i1 %1465, label %1489, label %1466

1466:                                             ; preds = %1460
  %1467 = and i8 %1461, 1
  %1468 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1463, i64 0, i32 0, i64 0, i32 0, i32 0
  %1469 = load i8, i8* %1468, align 8, !range !3, !noalias !27
  %1470 = icmp eq i8 %1469, 0
  br i1 %1470, label %1471, label %1530

1471:                                             ; preds = %1466
  %1472 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1473 = load i8*, i8** %1472, align 8, !noalias !27
  %1474 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %1475 = load i32, i32* %1474, align 4, !noalias !27
  %1476 = zext i32 %1475 to i64
  %1477 = getelementptr inbounds i8, i8* %1473, i64 %1476
  %1478 = icmp eq i32 %1475, 0
  br i1 %1478, label %1486, label %1479

1479:                                             ; preds = %1471, %1483
  %1480 = phi i8* [ %1484, %1483 ], [ %1473, %1471 ]
  %1481 = load i8, i8* %1480, align 1, !range !3
  %1482 = icmp eq i8 %1481, %1467
  br i1 %1482, label %1486, label %1483

1483:                                             ; preds = %1479
  %1484 = getelementptr inbounds i8, i8* %1480, i64 1
  %1485 = icmp eq i8* %1484, %1477
  br i1 %1485, label %1499, label %1479

1486:                                             ; preds = %1479, %1471
  %1487 = phi i8* [ %1473, %1471 ], [ %1480, %1479 ]
  %1488 = icmp eq i8* %1487, %1477
  br i1 %1488, label %1499, label %1530

1489:                                             ; preds = %1460
  %1490 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1463, i64 0, i32 0, i64 0, i32 0, i32 0
  %1491 = load i8, i8* %1490, align 8, !range !3, !noalias !27
  %1492 = icmp eq i8 %1491, 0
  br i1 %1492, label %1493, label %1530

1493:                                             ; preds = %1489
  %1494 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1495 = load i8*, i8** %1494, align 8, !noalias !27
  %1496 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %1497 = load i32, i32* %1496, align 4, !noalias !27
  %1498 = zext i32 %1497 to i64
  br label %1499

1499:                                             ; preds = %1483, %1493, %1486
  %1500 = phi i64 [ %1498, %1493 ], [ %1476, %1486 ], [ %1476, %1483 ]
  %1501 = phi i32 [ %1497, %1493 ], [ %1475, %1486 ], [ %1475, %1483 ]
  %1502 = phi i8* [ %1495, %1493 ], [ %1473, %1486 ], [ %1473, %1483 ]
  %1503 = getelementptr inbounds i8, i8* %1502, i64 %1500
  %1504 = icmp eq i32 %1501, 0
  br i1 %1504, label %1512, label %1505

1505:                                             ; preds = %1499, %1509
  %1506 = phi i8* [ %1510, %1509 ], [ %1502, %1499 ]
  %1507 = load i8, i8* %1506, align 1, !range !3
  %1508 = icmp eq i8 %1507, 1
  br i1 %1508, label %1512, label %1509

1509:                                             ; preds = %1505
  %1510 = getelementptr inbounds i8, i8* %1506, i64 1
  %1511 = icmp eq i8* %1510, %1503
  br i1 %1511, label %1526, label %1505

1512:                                             ; preds = %1505, %1499
  %1513 = phi i8* [ %1502, %1499 ], [ %1506, %1505 ]
  %1514 = icmp eq i8* %1513, %1503
  br i1 %1514, label %1526, label %1515

1515:                                             ; preds = %1512
  br i1 %1504, label %1523, label %1516

1516:                                             ; preds = %1515, %1520
  %1517 = phi i8* [ %1521, %1520 ], [ %1502, %1515 ]
  %1518 = load i8, i8* %1517, align 1, !range !3
  %1519 = icmp eq i8 %1518, 0
  br i1 %1519, label %1523, label %1520

1520:                                             ; preds = %1516
  %1521 = getelementptr inbounds i8, i8* %1517, i64 1
  %1522 = icmp eq i8* %1521, %1503
  br i1 %1522, label %1526, label %1516

1523:                                             ; preds = %1516, %1515
  %1524 = phi i8* [ %1502, %1515 ], [ %1517, %1516 ]
  %1525 = icmp eq i8* %1524, %1503
  br i1 %1525, label %1526, label %1530

1526:                                             ; preds = %1509, %1520, %1523, %1512
  %1527 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1
  %1528 = call dereferenceable(1) i8* @_ZNK3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.86"* %1527, i32 0) #12
  %1529 = load i8, i8* %1528, align 1, !range !3
  br label %1530

1530:                                             ; preds = %1526, %1523, %1489, %1486, %1466
  %1531 = phi double [ 0.000000e+00, %1526 ], [ 1.000000e+00, %1486 ], [ 1.000000e+00, %1466 ], [ 0.000000e+00, %1523 ], [ 0.000000e+00, %1489 ]
  %1532 = phi i8 [ %1529, %1526 ], [ %1467, %1486 ], [ %1467, %1466 ], [ %1271, %1523 ], [ %1271, %1489 ]
  %1533 = fadd double %1462, %1531
  %1534 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 3, i32 0, i64 1
  %1535 = load i8, i8* %1316, align 1, !noalias !24
  %1536 = and i8 %1535, 4
  %1537 = icmp eq i8 %1536, 0
  br i1 %1537, label %1561, label %1538

1538:                                             ; preds = %1530
  %1539 = and i8 %1535, 1
  %1540 = getelementptr inbounds %"class.blink::(anonymous namespace)::BooleanContainer", %"class.blink::(anonymous namespace)::BooleanContainer"* %1534, i64 0, i32 0, i32 0
  %1541 = load i8, i8* %1540, align 8, !range !3, !noalias !27
  %1542 = icmp eq i8 %1541, 0
  br i1 %1542, label %1543, label %1602

1543:                                             ; preds = %1538
  %1544 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %1545 = load i8*, i8** %1544, align 8, !noalias !27
  %1546 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %1547 = load i32, i32* %1546, align 4, !noalias !27
  %1548 = zext i32 %1547 to i64
  %1549 = getelementptr inbounds i8, i8* %1545, i64 %1548
  %1550 = icmp eq i32 %1547, 0
  br i1 %1550, label %1558, label %1551

1551:                                             ; preds = %1543, %1555
  %1552 = phi i8* [ %1556, %1555 ], [ %1545, %1543 ]
  %1553 = load i8, i8* %1552, align 1, !range !3
  %1554 = icmp eq i8 %1553, %1539
  br i1 %1554, label %1558, label %1555

1555:                                             ; preds = %1551
  %1556 = getelementptr inbounds i8, i8* %1552, i64 1
  %1557 = icmp eq i8* %1556, %1549
  br i1 %1557, label %1571, label %1551

1558:                                             ; preds = %1551, %1543
  %1559 = phi i8* [ %1545, %1543 ], [ %1552, %1551 ]
  %1560 = icmp eq i8* %1559, %1549
  br i1 %1560, label %1571, label %1602

1561:                                             ; preds = %1530
  %1562 = getelementptr inbounds %"class.blink::(anonymous namespace)::BooleanContainer", %"class.blink::(anonymous namespace)::BooleanContainer"* %1534, i64 0, i32 0, i32 0
  %1563 = load i8, i8* %1562, align 8, !range !3, !noalias !27
  %1564 = icmp eq i8 %1563, 0
  br i1 %1564, label %1565, label %1602

1565:                                             ; preds = %1561
  %1566 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %1567 = load i8*, i8** %1566, align 8, !noalias !27
  %1568 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %1569 = load i32, i32* %1568, align 4, !noalias !27
  %1570 = zext i32 %1569 to i64
  br label %1571

1571:                                             ; preds = %1555, %1565, %1558
  %1572 = phi i64 [ %1570, %1565 ], [ %1548, %1558 ], [ %1548, %1555 ]
  %1573 = phi i32 [ %1569, %1565 ], [ %1547, %1558 ], [ %1547, %1555 ]
  %1574 = phi i8* [ %1567, %1565 ], [ %1545, %1558 ], [ %1545, %1555 ]
  %1575 = getelementptr inbounds i8, i8* %1574, i64 %1572
  %1576 = icmp eq i32 %1573, 0
  br i1 %1576, label %1584, label %1577

1577:                                             ; preds = %1571, %1581
  %1578 = phi i8* [ %1582, %1581 ], [ %1574, %1571 ]
  %1579 = load i8, i8* %1578, align 1, !range !3
  %1580 = icmp eq i8 %1579, 1
  br i1 %1580, label %1584, label %1581

1581:                                             ; preds = %1577
  %1582 = getelementptr inbounds i8, i8* %1578, i64 1
  %1583 = icmp eq i8* %1582, %1575
  br i1 %1583, label %1598, label %1577

1584:                                             ; preds = %1577, %1571
  %1585 = phi i8* [ %1574, %1571 ], [ %1578, %1577 ]
  %1586 = icmp eq i8* %1585, %1575
  br i1 %1586, label %1598, label %1587

1587:                                             ; preds = %1584
  br i1 %1576, label %1595, label %1588

1588:                                             ; preds = %1587, %1592
  %1589 = phi i8* [ %1593, %1592 ], [ %1574, %1587 ]
  %1590 = load i8, i8* %1589, align 1, !range !3
  %1591 = icmp eq i8 %1590, 0
  br i1 %1591, label %1595, label %1592

1592:                                             ; preds = %1588
  %1593 = getelementptr inbounds i8, i8* %1589, i64 1
  %1594 = icmp eq i8* %1593, %1575
  br i1 %1594, label %1598, label %1588

1595:                                             ; preds = %1588, %1587
  %1596 = phi i8* [ %1574, %1587 ], [ %1589, %1588 ]
  %1597 = icmp eq i8* %1596, %1575
  br i1 %1597, label %1598, label %1602

1598:                                             ; preds = %1581, %1592, %1595, %1584
  %1599 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1
  %1600 = call dereferenceable(1) i8* @_ZNK3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.86"* %1599, i32 0) #12
  %1601 = load i8, i8* %1600, align 1, !range !3
  br label %1602

1602:                                             ; preds = %1598, %1595, %1561, %1558, %1538
  %1603 = phi double [ 0.000000e+00, %1598 ], [ 1.000000e+00, %1558 ], [ 1.000000e+00, %1538 ], [ 0.000000e+00, %1595 ], [ 0.000000e+00, %1561 ]
  %1604 = phi i8 [ %1601, %1598 ], [ %1539, %1558 ], [ %1539, %1538 ], [ 0, %1595 ], [ 0, %1561 ]
  %1605 = fadd double %1533, %1603
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1317) #12, !noalias !24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1317, i8 -86, i64 16, i1 false) #12, !noalias !24
  store i32 1, i32* %1318, align 4, !noalias !24
  store i32 0, i32* %1325, align 4, !noalias !24
  store i8 1, i8* %1321, align 4, !noalias !24
  store i8 1, i8* %1322, align 1, !noalias !24
  store i8 0, i8* %1323, align 2, !noalias !24
  store i32 16843009, i32* %1326, align 1, !noalias !24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1327) #12, !noalias !24
  store i64 -6148914691236517376, i64* %17, align 8, !noalias !24
  %1606 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 4, i32 0, i32 0, i32 0
  %1607 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %1606, align 8, !noalias !27
  %1608 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 4, i32 0, i32 0, i32 2
  %1609 = load i32, i32* %1608, align 4, !noalias !27
  %1610 = zext i32 %1609 to i64
  %1611 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1607, i64 %1610
  %1612 = icmp eq i32 %1609, 0
  br i1 %1612, label %1613, label %1615

1613:                                             ; preds = %1602
  %1614 = fadd double %1605, -1.000000e+00
  br label %1629

1615:                                             ; preds = %1602
  %1616 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 0, i32 4
  %1617 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 0, i32 8
  %1618 = bitcast %"class.absl::optional.7"* %1617 to i64*
  %1619 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %1620 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 0, i32 0, i32 3
  br label %1657

1621:                                             ; preds = %2599
  %1622 = load i32, i32* %1318, align 4, !noalias !24
  %1623 = icmp eq i32 %1622, 0
  %1624 = fadd double %1605, %2600
  %1625 = icmp sgt i32 %2601, 1
  %1626 = select i1 %1625, i32 %2601, i32 1
  %1627 = icmp sgt i32 %2602, -1
  %1628 = select i1 %1627, i32 %2602, i32 -1
  br label %1629

1629:                                             ; preds = %1621, %1613
  %1630 = phi i32 [ 1, %1613 ], [ %1626, %1621 ]
  %1631 = phi i1 [ false, %1613 ], [ %1623, %1621 ]
  %1632 = phi i32 [ 1, %1613 ], [ %2603, %1621 ]
  %1633 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ null, %1613 ], [ %2604, %1621 ]
  %1634 = phi double [ %1614, %1613 ], [ %1624, %1621 ]
  %1635 = phi i32 [ -1, %1613 ], [ %1628, %1621 ]
  %1636 = and i1 %1631, %3
  %1637 = zext i1 %1636 to i8
  store i8 %1637, i8* %1320, align 2, !noalias !24
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1368) #12, !noalias !24
  %1638 = icmp slt i8 %1447, 0
  br i1 %1638, label %1640, label %1639

1639:                                             ; preds = %1629
  store i8* %1445, i8** %1369, align 8, !noalias !24
  store i64 %1446, i64* %1370, align 8, !noalias !24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1372, i8* nonnull align 8 %1288, i64 7, i1 false) #12, !noalias !24
  store i8 %1447, i8* %1373, align 1, !noalias !24
  br label %1641

1640:                                             ; preds = %1629
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %19, i8* %1445, i64 %1446) #12
  br label %1641

1641:                                             ; preds = %1640, %1639
  %1642 = icmp ne i8 %1532, 0
  %1643 = icmp ne i8 %1604, 0
  %1644 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1633, i64 0, i32 0
  %1645 = load i32, i32* %1644, align 8, !noalias !27
  call void @_ZN5blink20AudioCaptureSettingsC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN4absl8optionalIiEEbbNS0_14ProcessingTypeERKNS_25AudioProcessingPropertiesEi(%"class.blink::AudioCaptureSettings"* nonnull %18, %"class.std::__1::basic_string"* nonnull %19, %"class.absl::optional.72"* nonnull dereferenceable(8) %1287, i1 zeroext %1642, i1 zeroext %1643, i32 %1645, %"struct.blink::AudioProcessingProperties"* nonnull dereferenceable(16) %16, i32 %1632) #12, !noalias !27
  store double %1634, double* %1374, align 8, !alias.scope !27, !noalias !21
  store i8 0, i8* %1375, align 8, !alias.scope !27, !noalias !21
  store i8 -86, i8* %1376, align 1, !alias.scope !27, !noalias !21
  store i8 -86, i8* %1377, align 2, !alias.scope !27, !noalias !21
  store i8 -86, i8* %1378, align 1, !alias.scope !27, !noalias !21
  store i32 %1630, i32* %1379, align 4, !alias.scope !27, !noalias !21
  store i32 %1635, i32* %1380, align 8, !alias.scope !27, !noalias !21
  store i32 -1431655766, i32* %1383, align 4, !alias.scope !27, !noalias !21
  call void @_ZN5blink20AudioCaptureSettingsC1EOS0_(%"class.blink::AudioCaptureSettings"* %1382, %"class.blink::AudioCaptureSettings"* nonnull dereferenceable(72) %18) #12
  %1646 = load i8, i8* %1386, align 1, !noalias !24
  %1647 = icmp slt i8 %1646, 0
  br i1 %1647, label %1648, label %1650

1648:                                             ; preds = %1641
  %1649 = load i8*, i8** %1387, align 8, !noalias !24
  call void @_ZdlPv(i8* %1649) #14
  br label %1650

1650:                                             ; preds = %1648, %1641
  %1651 = load i8, i8* %1389, align 1, !noalias !24
  %1652 = icmp slt i8 %1651, 0
  br i1 %1652, label %1653, label %1655

1653:                                             ; preds = %1650
  %1654 = load i8*, i8** %1369, align 8, !noalias !24
  call void @_ZdlPv(i8* %1654) #14
  br label %1655

1655:                                             ; preds = %1653, %1650
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1368) #12, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1327) #12, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1317) #12, !noalias !24
  br i1 %1638, label %1656, label %2607

1656:                                             ; preds = %1655
  call void @_ZdlPv(i8* %1445) #14
  br label %2607

1657:                                             ; preds = %2599, %1615
  %1658 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ %1607, %1615 ], [ %2605, %2599 ]
  %1659 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ null, %1615 ], [ %2604, %2599 ]
  %1660 = phi i32 [ 1, %1615 ], [ %2603, %2599 ]
  %1661 = phi i32 [ -1, %1615 ], [ %2602, %2599 ]
  %1662 = phi i32 [ 1, %1615 ], [ %2601, %2599 ]
  %1663 = phi double [ -1.000000e+00, %1615 ], [ %2600, %2599 ]
  %1664 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0
  %1665 = load i8, i8* %1664, align 8, !range !3
  %1666 = icmp eq i8 %1665, 0
  br i1 %1666, label %1667, label %1671

1667:                                             ; preds = %1657
  %1668 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %1669 = load i32, i32* %1668, align 4
  %1670 = icmp eq i32 %1669, 0
  br i1 %1670, label %2599, label %1671

1671:                                             ; preds = %1667, %1657
  %1672 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0
  %1673 = load i8, i8* %1672, align 8, !range !3
  %1674 = icmp eq i8 %1673, 0
  br i1 %1674, label %1727, label %1731

1675:                                             ; preds = %1755
  %1676 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2
  %1677 = load i32, i32* %1676, align 4
  %1678 = icmp eq i32 %1677, 0
  br i1 %1678, label %2599, label %1679

1679:                                             ; preds = %1755, %1675
  %1680 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 3, i32 0, i32 0
  %1681 = load i8, i8* %1680, align 8, !range !3
  %1682 = icmp eq i8 %1681, 0
  br i1 %1682, label %1683, label %1687

1683:                                             ; preds = %1679
  %1684 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 2
  %1685 = load i32, i32* %1684, align 4
  %1686 = icmp eq i32 %1685, 0
  br i1 %1686, label %2599, label %1687

1687:                                             ; preds = %1683, %1679
  %1688 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1689 = load i8, i8* %1688, align 4, !range !3
  %1690 = icmp eq i8 %1689, 0
  br i1 %1690, label %1701, label %1691

1691:                                             ; preds = %1687
  %1692 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1693 = load i8, i8* %1692, align 4, !range !3
  %1694 = icmp eq i8 %1693, 0
  br i1 %1694, label %1701, label %1695

1695:                                             ; preds = %1691
  %1696 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %1697 = load i32, i32* %1696, align 4
  %1698 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1699 = load i32, i32* %1698, align 4
  %1700 = icmp slt i32 %1697, %1699
  br i1 %1700, label %2599, label %1701

1701:                                             ; preds = %1695, %1691, %1687
  %1702 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %1703 = load i32, i32* %1702, align 4
  %1704 = icmp eq i32 %1703, 0
  br i1 %1704, label %2599, label %1705

1705:                                             ; preds = %1701
  %1706 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1707 = load i8, i8* %1706, align 4, !range !3
  %1708 = icmp eq i8 %1707, 0
  br i1 %1708, label %1719, label %1709

1709:                                             ; preds = %1705
  %1710 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1711 = load i8, i8* %1710, align 4, !range !3
  %1712 = icmp eq i8 %1711, 0
  br i1 %1712, label %1719, label %1713

1713:                                             ; preds = %1709
  %1714 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %1715 = load i32, i32* %1714, align 4
  %1716 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1717 = load i32, i32* %1716, align 4
  %1718 = icmp slt i32 %1715, %1717
  br i1 %1718, label %2599, label %1719

1719:                                             ; preds = %1713, %1709, %1705
  %1720 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1721 = load i8, i8* %1720, align 8, !range !3
  %1722 = icmp eq i8 %1721, 0
  br i1 %1722, label %1765, label %1723

1723:                                             ; preds = %1719
  %1724 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1725 = load i8, i8* %1724, align 8, !range !3
  %1726 = icmp eq i8 %1725, 0
  br i1 %1726, label %1765, label %1759

1727:                                             ; preds = %1671
  %1728 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %1729 = load i32, i32* %1728, align 4
  %1730 = icmp eq i32 %1729, 0
  br i1 %1730, label %2599, label %1731

1731:                                             ; preds = %1727, %1671
  %1732 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0
  %1733 = load i8, i8* %1732, align 8, !range !3
  %1734 = icmp eq i8 %1733, 0
  br i1 %1734, label %1735, label %1739

1735:                                             ; preds = %1731
  %1736 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %1737 = load i32, i32* %1736, align 4
  %1738 = icmp eq i32 %1737, 0
  br i1 %1738, label %2599, label %1739

1739:                                             ; preds = %1735, %1731
  %1740 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0
  %1741 = load i8, i8* %1740, align 8, !range !3
  %1742 = icmp eq i8 %1741, 0
  br i1 %1742, label %1743, label %1747

1743:                                             ; preds = %1739
  %1744 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 3, i32 0, i32 1, i32 0, i32 0, i32 2
  %1745 = load i32, i32* %1744, align 4
  %1746 = icmp eq i32 %1745, 0
  br i1 %1746, label %2599, label %1747

1747:                                             ; preds = %1743, %1739
  %1748 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 4, i32 0, i32 0
  %1749 = load i8, i8* %1748, align 8, !range !3
  %1750 = icmp eq i8 %1749, 0
  br i1 %1750, label %1751, label %1755

1751:                                             ; preds = %1747
  %1752 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 4, i32 0, i32 1, i32 0, i32 0, i32 2
  %1753 = load i32, i32* %1752, align 4
  %1754 = icmp eq i32 %1753, 0
  br i1 %1754, label %2599, label %1755

1755:                                             ; preds = %1751, %1747
  %1756 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 0
  %1757 = load i8, i8* %1756, align 8, !range !3
  %1758 = icmp eq i8 %1757, 0
  br i1 %1758, label %1675, label %1679

1759:                                             ; preds = %1723
  %1760 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %1761 = load double, double* %1760, align 8
  %1762 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1763 = load double, double* %1762, align 8
  %1764 = fcmp olt double %1761, %1763
  br i1 %1764, label %2599, label %1765

1765:                                             ; preds = %1759, %1723, %1719
  %1766 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1329) #12, !noalias !28
  %1767 = call i32 @_ZN5media28SampleFormatToBitsPerChannelENS_12SampleFormatE(i32 2) #12, !noalias !31
  store i8 1, i8* %1329, align 4, !noalias !28
  store i32 %1767, i32* %1330, align 4, !noalias !28
  %1768 = call fastcc { double, i64 } @_ZNK5blink12_GLOBAL__N_124NumericRangeSetContainerIiNS_14LongConstraintEE22SelectSettingsAndScoreERKS2_RKN4absl8optionalIiEE(%"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %1766, %"class.blink::LongConstraint"* dereferenceable(40) %1328, %"class.absl::optional.72"* nonnull dereferenceable(8) %8) #12, !noalias !31
  %1769 = extractvalue { double, i64 } %1768, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1329) #12, !noalias !28
  %1770 = fadd double %1769, 0.000000e+00
  %1771 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 5
  %1772 = load i8, i8* %1331, align 4, !noalias !28
  %1773 = and i8 %1772, 8
  %1774 = icmp eq i8 %1773, 0
  br i1 %1774, label %1829, label %1775

1775:                                             ; preds = %1765
  %1776 = load i32, i32* %1332, align 8, !noalias !28
  %1777 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer", %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer"* %1771, i64 0, i32 0, i32 0, i32 0, i32 0
  %1778 = load i32*, i32** %1777, align 8, !noalias !31
  %1779 = load i32, i32* %1702, align 4, !noalias !31
  %1780 = zext i32 %1779 to i64
  %1781 = getelementptr inbounds i32, i32* %1778, i64 %1780
  %1782 = icmp eq i32 %1779, 0
  br i1 %1782, label %1783, label %1785

1783:                                             ; preds = %1775
  %1784 = load i32, i32* %1778, align 4, !noalias !31
  br label %1822

1785:                                             ; preds = %1775, %1789
  %1786 = phi i32* [ %1790, %1789 ], [ %1778, %1775 ]
  %1787 = load i32, i32* %1786, align 4, !noalias !31
  %1788 = icmp eq i32 %1787, %1776
  br i1 %1788, label %1792, label %1789

1789:                                             ; preds = %1785
  %1790 = getelementptr inbounds i32, i32* %1786, i64 1
  %1791 = icmp ult i32* %1790, %1781
  br i1 %1791, label %1785, label %1799

1792:                                             ; preds = %1785
  %1793 = ptrtoint i32* %1786 to i64
  %1794 = ptrtoint i32* %1778 to i64
  %1795 = sub i64 %1793, %1794
  %1796 = lshr exact i64 %1795, 2
  %1797 = trunc i64 %1796 to i32
  %1798 = icmp eq i32 %1797, -1
  br i1 %1798, label %1799, label %1874

1799:                                             ; preds = %1789, %1792
  %1800 = load i32, i32* %1778, align 4, !noalias !31
  %1801 = sitofp i32 %1776 to double
  %1802 = sitofp i32 %1800 to double
  %1803 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %1802, double %1801) #12, !noalias !31
  %1804 = icmp eq i32 %1779, 1
  br i1 %1804, label %1822, label %1805

1805:                                             ; preds = %1799
  %1806 = getelementptr inbounds i32, i32* %1778, i64 1
  %1807 = fcmp olt double %1803, 0x7FF0000000000000
  br label %1808

1808:                                             ; preds = %1808, %1805
  %1809 = phi i32* [ %1820, %1808 ], [ %1806, %1805 ]
  %1810 = phi i32 [ %1819, %1808 ], [ %1800, %1805 ]
  %1811 = phi i1 [ %1818, %1808 ], [ %1807, %1805 ]
  %1812 = phi double [ %1817, %1808 ], [ %1803, %1805 ]
  %1813 = phi double [ %1814, %1808 ], [ 0x7FF0000000000000, %1805 ]
  %1814 = select i1 %1811, double %1812, double %1813
  %1815 = load i32, i32* %1809, align 4, !noalias !31
  %1816 = sitofp i32 %1815 to double
  %1817 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %1816, double %1801) #12, !noalias !31
  %1818 = fcmp olt double %1817, %1814
  %1819 = select i1 %1818, i32 %1815, i32 %1810
  %1820 = getelementptr inbounds i32, i32* %1809, i64 1
  %1821 = icmp eq i32* %1820, %1781
  br i1 %1821, label %1822, label %1808

1822:                                             ; preds = %1808, %1799, %1783
  %1823 = phi i32 [ %1800, %1799 ], [ %1784, %1783 ], [ %1819, %1808 ]
  %1824 = sitofp i32 %1823 to double
  %1825 = load i32, i32* %1332, align 8, !noalias !28
  %1826 = sitofp i32 %1825 to double
  %1827 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %1824, double %1826) #12, !noalias !31
  %1828 = fsub double 1.000000e+00, %1827
  br label %1874

1829:                                             ; preds = %1765
  %1830 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer", %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer"* %1771, i64 0, i32 0, i32 0, i32 0, i32 0
  %1831 = load i32*, i32** %1830, align 8, !noalias !31
  %1832 = load i32, i32* %1702, align 4, !noalias !31
  %1833 = zext i32 %1832 to i64
  %1834 = getelementptr inbounds i32, i32* %1831, i64 %1833
  %1835 = icmp eq i32 %1832, 0
  br i1 %1835, label %1836, label %1838

1836:                                             ; preds = %1829
  %1837 = load i32, i32* %1831, align 4, !noalias !31
  br label %1874

1838:                                             ; preds = %1829, %1842
  %1839 = phi i32* [ %1843, %1842 ], [ %1831, %1829 ]
  %1840 = load i32, i32* %1839, align 4, !noalias !31
  %1841 = icmp eq i32 %1840, 1
  br i1 %1841, label %1845, label %1842

1842:                                             ; preds = %1838
  %1843 = getelementptr inbounds i32, i32* %1839, i64 1
  %1844 = icmp ult i32* %1843, %1834
  br i1 %1844, label %1838, label %1852

1845:                                             ; preds = %1838
  %1846 = ptrtoint i32* %1839 to i64
  %1847 = ptrtoint i32* %1831 to i64
  %1848 = sub i64 %1846, %1847
  %1849 = lshr exact i64 %1848, 2
  %1850 = trunc i64 %1849 to i32
  %1851 = icmp eq i32 %1850, -1
  br i1 %1851, label %1852, label %1874

1852:                                             ; preds = %1842, %1845
  %1853 = load i32, i32* %1831, align 4, !noalias !31
  %1854 = sitofp i32 %1853 to double
  %1855 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %1854, double 1.000000e+00) #12, !noalias !31
  %1856 = icmp eq i32 %1832, 1
  br i1 %1856, label %1874, label %1857

1857:                                             ; preds = %1852
  %1858 = getelementptr inbounds i32, i32* %1831, i64 1
  %1859 = fcmp olt double %1855, 0x7FF0000000000000
  br label %1860

1860:                                             ; preds = %1860, %1857
  %1861 = phi i32* [ %1872, %1860 ], [ %1858, %1857 ]
  %1862 = phi i32 [ %1871, %1860 ], [ %1853, %1857 ]
  %1863 = phi i1 [ %1870, %1860 ], [ %1859, %1857 ]
  %1864 = phi double [ %1869, %1860 ], [ %1855, %1857 ]
  %1865 = phi double [ %1866, %1860 ], [ 0x7FF0000000000000, %1857 ]
  %1866 = select i1 %1863, double %1864, double %1865
  %1867 = load i32, i32* %1861, align 4, !noalias !31
  %1868 = sitofp i32 %1867 to double
  %1869 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %1868, double 1.000000e+00) #12, !noalias !31
  %1870 = fcmp olt double %1869, %1866
  %1871 = select i1 %1870, i32 %1867, i32 %1862
  %1872 = getelementptr inbounds i32, i32* %1861, i64 1
  %1873 = icmp eq i32* %1872, %1834
  br i1 %1873, label %1874, label %1860

1874:                                             ; preds = %1860, %1852, %1845, %1836, %1822, %1792
  %1875 = phi double [ %1828, %1822 ], [ 0.000000e+00, %1845 ], [ 1.000000e+00, %1792 ], [ 0.000000e+00, %1852 ], [ 0.000000e+00, %1836 ], [ 0.000000e+00, %1860 ]
  %1876 = phi i32 [ %1823, %1822 ], [ 1, %1845 ], [ %1776, %1792 ], [ %1853, %1852 ], [ %1837, %1836 ], [ %1871, %1860 ]
  %1877 = fadd double %1770, %1875
  %1878 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 6
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1334) #12, !noalias !28
  store i8 0, i8* %1334, align 4, !noalias !28
  %1879 = call fastcc { double, i64 } @_ZNK5blink12_GLOBAL__N_124NumericRangeSetContainerIiNS_14LongConstraintEE22SelectSettingsAndScoreERKS2_RKN4absl8optionalIiEE(%"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %1878, %"class.blink::LongConstraint"* dereferenceable(40) %1333, %"class.absl::optional.72"* nonnull dereferenceable(8) %9) #12, !noalias !31
  %1880 = extractvalue { double, i64 } %1879, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1334) #12, !noalias !28
  %1881 = fadd double %1877, %1880
  %1882 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 7
  %1883 = load i8, i8* %1336, align 8, !noalias !32
  %1884 = and i8 %1883, 8
  %1885 = icmp eq i8 %1884, 0
  br i1 %1885, label %1920, label %1886

1886:                                             ; preds = %1874
  %1887 = load double, double* %1337, align 8, !noalias !32
  %1888 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer.106", %"class.blink::(anonymous namespace)::NumericRangeSetContainer.106"* %1882, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1889 = load i8, i8* %1888, align 8, !range !3, !noalias !35
  %1890 = icmp eq i8 %1889, 0
  br i1 %1890, label %1895, label %1891

1891:                                             ; preds = %1886
  %1892 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1893 = load double, double* %1892, align 8, !noalias !35
  %1894 = fcmp ugt double %1893, %1887
  br i1 %1894, label %1906, label %1895

1895:                                             ; preds = %1891, %1886
  %1896 = load i8, i8* %1720, align 8, !range !3, !noalias !35
  %1897 = icmp eq i8 %1896, 0
  br i1 %1897, label %1936, label %1898

1898:                                             ; preds = %1895
  %1899 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %1900 = load double, double* %1899, align 8, !noalias !35
  %1901 = fcmp ult double %1900, %1887
  br i1 %1901, label %1902, label %1936

1902:                                             ; preds = %1898
  br i1 %1890, label %1916, label %1903

1903:                                             ; preds = %1902
  %1904 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1905 = load double, double* %1904, align 8, !noalias !35
  br label %1906

1906:                                             ; preds = %1903, %1891
  %1907 = phi double [ %1905, %1903 ], [ %1893, %1891 ]
  %1908 = fcmp ogt double %1907, %1887
  br i1 %1908, label %1916, label %1909

1909:                                             ; preds = %1906
  %1910 = load i8, i8* %1720, align 8, !range !3, !noalias !35
  %1911 = icmp eq i8 %1910, 0
  br i1 %1911, label %1915, label %1912, !prof !2

1912:                                             ; preds = %1909
  %1913 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %1914 = load double, double* %1913, align 8, !noalias !35
  br label %1916

1915:                                             ; preds = %1909
  call void @llvm.trap() #12, !noalias !35
  unreachable

1916:                                             ; preds = %1912, %1906, %1902
  %1917 = phi double [ %1907, %1906 ], [ %1914, %1912 ], [ %1900, %1902 ]
  %1918 = call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %1917, double %1887) #12, !noalias !35
  %1919 = fsub double 1.000000e+00, %1918
  br label %1936

1920:                                             ; preds = %1874
  %1921 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer.106", %"class.blink::(anonymous namespace)::NumericRangeSetContainer.106"* %1882, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1922 = load i8, i8* %1921, align 8, !range !3, !noalias !35
  %1923 = icmp eq i8 %1922, 0
  br i1 %1923, label %1933, label %1924

1924:                                             ; preds = %1920
  %1925 = load i8, i8* %1720, align 8, !range !3, !noalias !35
  %1926 = icmp eq i8 %1925, 0
  br i1 %1926, label %1933, label %1927

1927:                                             ; preds = %1924
  %1928 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1929 = load double, double* %1928, align 8, !noalias !35
  %1930 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %1931 = load double, double* %1930, align 8, !noalias !35
  %1932 = fcmp oeq double %1929, %1931
  br i1 %1932, label %1936, label %1933

1933:                                             ; preds = %1927, %1924, %1920
  %1934 = fadd double %1881, 0.000000e+00
  %1935 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 0
  br label %1979

1936:                                             ; preds = %1927, %1916, %1898, %1895
  %1937 = phi double [ %1919, %1916 ], [ 1.000000e+00, %1898 ], [ 1.000000e+00, %1895 ], [ 0.000000e+00, %1927 ]
  %1938 = phi double [ %1917, %1916 ], [ %1887, %1898 ], [ %1887, %1895 ], [ %1929, %1927 ]
  %1939 = fadd double %1881, %1937
  %1940 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 0
  %1941 = load i32, i32* %1940, align 8, !noalias !31
  %1942 = icmp eq i32 %1941, 0
  br i1 %1942, label %1943, label %1979

1943:                                             ; preds = %1936
  %1944 = call zeroext i1 @_ZNK5blink16DoubleConstraint15IsUnconstrainedEv(%"class.blink::DoubleConstraint"* %1335) #12, !noalias !31
  br i1 %1944, label %1979, label %1945

1945:                                             ; preds = %1943
  %1946 = load i32, i32* %1616, align 8, !noalias !36
  %1947 = load i64, i64* %1618, align 4, !noalias !36
  %1948 = load i32, i32* %1619, align 4, !noalias !36
  %1949 = trunc i64 %1947 to i8
  %1950 = lshr i64 %1947, 32
  %1951 = trunc i64 %1950 to i32
  %1952 = icmp ne i8 %1949, 0
  %1953 = icmp sgt i32 %1951, 0
  %1954 = and i1 %1952, %1953
  %1955 = icmp sgt i32 %1948, 0
  %1956 = and i1 %1955, %1954
  %1957 = zext i32 %1948 to i64
  %1958 = shl nuw i64 %1957, 32
  %1959 = or i64 %1958, %1950
  %1960 = zext i32 %1946 to i64
  %1961 = shl nuw i64 %1960, 32
  %1962 = or i64 %1961, %1960
  %1963 = select i1 %1956, i64 %1959, i64 %1962
  %1964 = lshr i64 %1963, 32
  %1965 = trunc i64 %1964 to i32
  %1966 = trunc i64 %1963 to i32
  %1967 = fmul double %1938, 1.000000e+06
  %1968 = fcmp ult double %1967, 0xC3E0000000000000
  %1969 = fcmp ugt double %1967, 0x43DFFFFFFFFFFFFF
  %1970 = fcmp ogt double %1967, 0xC3E0000000000000
  %1971 = select i1 %1970, double %1967, double 0xC3E0000000000000
  %1972 = fptosi double %1971 to i64
  %1973 = select i1 %1968, i64 0, i64 9223372036854775807
  %1974 = select i1 %1969, i64 %1973, i64 %1972
  %1975 = load i32, i32* %1620, align 4, !noalias !36
  %1976 = call i32 @_ZN5media12AudioLatency18GetExactBufferSizeEN4base9TimeDeltaEiiiii(i64 %1974, i32 %1975, i32 %1946, i32 %1966, i32 %1965, i32 %1965) #12, !noalias !31
  %1977 = zext i32 %1976 to i64
  %1978 = shl nuw i64 %1977, 32
  br label %1979

1979:                                             ; preds = %1945, %1943, %1936, %1933
  %1980 = phi i32* [ %1940, %1943 ], [ %1940, %1945 ], [ %1940, %1936 ], [ %1935, %1933 ]
  %1981 = phi double [ %1939, %1943 ], [ %1939, %1945 ], [ %1939, %1936 ], [ %1934, %1933 ]
  %1982 = phi i64 [ 0, %1943 ], [ 1, %1945 ], [ 0, %1936 ], [ 0, %1933 ]
  %1983 = phi i64 [ -6148914691236517376, %1943 ], [ %1978, %1945 ], [ -6148914691236517376, %1936 ], [ -6148914691236517376, %1933 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1338) #12, !noalias !28
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1338, i8 -86, i64 16, i1 false) #12, !noalias !28
  store i32 1, i32* %1339, align 4, !noalias !28
  store i32 0, i32* %1346, align 4, !noalias !28
  store i8 1, i8* %1341, align 4, !noalias !28
  store i8 1, i8* %1342, align 1, !noalias !28
  store i8 0, i8* %1343, align 2, !noalias !28
  store i32 16843009, i32* %1347, align 1, !noalias !28
  %1984 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2
  %1985 = load i8, i8* %1348, align 1, !noalias !37
  %1986 = and i8 %1985, 4
  %1987 = icmp eq i8 %1986, 0
  br i1 %1987, label %2042, label %1988

1988:                                             ; preds = %1979
  %1989 = and i8 %1985, 1
  %1990 = icmp eq i8 %1989, 0
  %1991 = load i8, i8* %1756, align 8, !range !3, !noalias !40
  %1992 = icmp eq i8 %1991, 0
  br i1 %1990, label %2023, label %1993

1993:                                             ; preds = %1988
  br i1 %1992, label %1994, label %2197

1994:                                             ; preds = %1993
  %1995 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0
  %1996 = load i32*, i32** %1995, align 8, !noalias !40
  %1997 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2
  %1998 = load i32, i32* %1997, align 4, !noalias !40
  %1999 = zext i32 %1998 to i64
  %2000 = getelementptr inbounds i32, i32* %1996, i64 %1999
  %2001 = icmp eq i32 %1998, 0
  br i1 %2001, label %2009, label %2002

2002:                                             ; preds = %1994, %2006
  %2003 = phi i32* [ %2007, %2006 ], [ %1996, %1994 ]
  %2004 = load i32, i32* %2003, align 4, !noalias !40
  %2005 = icmp eq i32 %2004, 1
  br i1 %2005, label %2009, label %2006

2006:                                             ; preds = %2002
  %2007 = getelementptr inbounds i32, i32* %2003, i64 1
  %2008 = icmp eq i32* %2007, %2000
  br i1 %2008, label %2012, label %2002

2009:                                             ; preds = %2002, %1994
  %2010 = phi i32* [ %1996, %1994 ], [ %2003, %2002 ]
  %2011 = icmp eq i32* %2010, %2000
  br i1 %2011, label %2012, label %2197

2012:                                             ; preds = %2006, %2009
  br i1 %2001, label %2020, label %2013

2013:                                             ; preds = %2012, %2017
  %2014 = phi i32* [ %2018, %2017 ], [ %1996, %2012 ]
  %2015 = load i32, i32* %2014, align 4, !noalias !40
  %2016 = icmp eq i32 %2015, 2
  br i1 %2016, label %2020, label %2017

2017:                                             ; preds = %2013
  %2018 = getelementptr inbounds i32, i32* %2014, i64 1
  %2019 = icmp eq i32* %2018, %2000
  br i1 %2019, label %2042, label %2013

2020:                                             ; preds = %2013, %2012
  %2021 = phi i32* [ %1996, %2012 ], [ %2014, %2013 ]
  %2022 = icmp eq i32* %2021, %2000
  br i1 %2022, label %2042, label %2197

2023:                                             ; preds = %1988
  br i1 %1992, label %2024, label %2257

2024:                                             ; preds = %2023
  %2025 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0
  %2026 = load i32*, i32** %2025, align 8, !noalias !40
  %2027 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2
  %2028 = load i32, i32* %2027, align 4, !noalias !40
  %2029 = zext i32 %2028 to i64
  %2030 = getelementptr inbounds i32, i32* %2026, i64 %2029
  %2031 = icmp eq i32 %2028, 0
  br i1 %2031, label %2039, label %2032

2032:                                             ; preds = %2024, %2036
  %2033 = phi i32* [ %2037, %2036 ], [ %2026, %2024 ]
  %2034 = load i32, i32* %2033, align 4, !noalias !40
  %2035 = icmp eq i32 %2034, 0
  br i1 %2035, label %2039, label %2036

2036:                                             ; preds = %2032
  %2037 = getelementptr inbounds i32, i32* %2033, i64 1
  %2038 = icmp eq i32* %2037, %2030
  br i1 %2038, label %2042, label %2032

2039:                                             ; preds = %2032, %2024
  %2040 = phi i32* [ %2026, %2024 ], [ %2033, %2032 ]
  %2041 = icmp eq i32* %2040, %2030
  br i1 %2041, label %2042, label %2181

2042:                                             ; preds = %2017, %2036, %2039, %2020, %1979
  %2043 = load i8, i8* %1349, align 1, !noalias !37
  %2044 = and i8 %2043, 4
  %2045 = icmp eq i8 %2044, 0
  br i1 %2045, label %2100, label %2046

2046:                                             ; preds = %2042
  %2047 = and i8 %2043, 1
  %2048 = icmp eq i8 %2047, 0
  %2049 = load i8, i8* %1756, align 8, !range !3, !noalias !40
  %2050 = icmp eq i8 %2049, 0
  br i1 %2048, label %2081, label %2051

2051:                                             ; preds = %2046
  br i1 %2050, label %2052, label %2197

2052:                                             ; preds = %2051
  %2053 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0
  %2054 = load i32*, i32** %2053, align 8, !noalias !40
  %2055 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2
  %2056 = load i32, i32* %2055, align 4, !noalias !40
  %2057 = zext i32 %2056 to i64
  %2058 = getelementptr inbounds i32, i32* %2054, i64 %2057
  %2059 = icmp eq i32 %2056, 0
  br i1 %2059, label %2067, label %2060

2060:                                             ; preds = %2052, %2064
  %2061 = phi i32* [ %2065, %2064 ], [ %2054, %2052 ]
  %2062 = load i32, i32* %2061, align 4, !noalias !40
  %2063 = icmp eq i32 %2062, 1
  br i1 %2063, label %2067, label %2064

2064:                                             ; preds = %2060
  %2065 = getelementptr inbounds i32, i32* %2061, i64 1
  %2066 = icmp eq i32* %2065, %2058
  br i1 %2066, label %2070, label %2060

2067:                                             ; preds = %2060, %2052
  %2068 = phi i32* [ %2054, %2052 ], [ %2061, %2060 ]
  %2069 = icmp eq i32* %2068, %2058
  br i1 %2069, label %2070, label %2197

2070:                                             ; preds = %2064, %2067
  br i1 %2059, label %2078, label %2071

2071:                                             ; preds = %2070, %2075
  %2072 = phi i32* [ %2076, %2075 ], [ %2054, %2070 ]
  %2073 = load i32, i32* %2072, align 4, !noalias !40
  %2074 = icmp eq i32 %2073, 2
  br i1 %2074, label %2078, label %2075

2075:                                             ; preds = %2071
  %2076 = getelementptr inbounds i32, i32* %2072, i64 1
  %2077 = icmp eq i32* %2076, %2058
  br i1 %2077, label %2109, label %2071

2078:                                             ; preds = %2071, %2070
  %2079 = phi i32* [ %2054, %2070 ], [ %2072, %2071 ]
  %2080 = icmp eq i32* %2079, %2058
  br i1 %2080, label %2109, label %2197

2081:                                             ; preds = %2046
  br i1 %2050, label %2082, label %2257

2082:                                             ; preds = %2081
  %2083 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0
  %2084 = load i32*, i32** %2083, align 8, !noalias !40
  %2085 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2
  %2086 = load i32, i32* %2085, align 4, !noalias !40
  %2087 = zext i32 %2086 to i64
  %2088 = getelementptr inbounds i32, i32* %2084, i64 %2087
  %2089 = icmp eq i32 %2086, 0
  br i1 %2089, label %2097, label %2090

2090:                                             ; preds = %2082, %2094
  %2091 = phi i32* [ %2095, %2094 ], [ %2084, %2082 ]
  %2092 = load i32, i32* %2091, align 4, !noalias !40
  %2093 = icmp eq i32 %2092, 0
  br i1 %2093, label %2097, label %2094

2094:                                             ; preds = %2090
  %2095 = getelementptr inbounds i32, i32* %2091, i64 1
  %2096 = icmp eq i32* %2095, %2088
  br i1 %2096, label %2109, label %2090

2097:                                             ; preds = %2090, %2082
  %2098 = phi i32* [ %2084, %2082 ], [ %2091, %2090 ]
  %2099 = icmp eq i32* %2098, %2088
  br i1 %2099, label %2109, label %2181

2100:                                             ; preds = %2042
  %2101 = load i8, i8* %1756, align 8, !range !3, !noalias !40
  %2102 = icmp eq i8 %2101, 0
  br i1 %2102, label %2103, label %2147

2103:                                             ; preds = %2100
  %2104 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0
  %2105 = load i32*, i32** %2104, align 8, !noalias !40
  %2106 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2
  %2107 = load i32, i32* %2106, align 4, !noalias !40
  %2108 = zext i32 %2107 to i64
  br label %2109

2109:                                             ; preds = %2075, %2094, %2103, %2097, %2078
  %2110 = phi i64 [ %2108, %2103 ], [ %2087, %2097 ], [ %2057, %2078 ], [ %2087, %2094 ], [ %2057, %2075 ]
  %2111 = phi i32 [ %2107, %2103 ], [ %2086, %2097 ], [ %2056, %2078 ], [ %2086, %2094 ], [ %2056, %2075 ]
  %2112 = phi i32* [ %2105, %2103 ], [ %2084, %2097 ], [ %2054, %2078 ], [ %2084, %2094 ], [ %2054, %2075 ]
  %2113 = getelementptr inbounds i32, i32* %2112, i64 %2110
  %2114 = icmp eq i32 %2111, 0
  br i1 %2114, label %2122, label %2115

2115:                                             ; preds = %2109, %2119
  %2116 = phi i32* [ %2120, %2119 ], [ %2112, %2109 ]
  %2117 = load i32, i32* %2116, align 4, !noalias !40
  %2118 = icmp eq i32 %2117, 1
  br i1 %2118, label %2122, label %2119

2119:                                             ; preds = %2115
  %2120 = getelementptr inbounds i32, i32* %2116, i64 1
  %2121 = icmp eq i32* %2120, %2113
  br i1 %2121, label %2125, label %2115

2122:                                             ; preds = %2115, %2109
  %2123 = phi i32* [ %2112, %2109 ], [ %2116, %2115 ]
  %2124 = icmp eq i32* %2123, %2113
  br i1 %2124, label %2125, label %2136

2125:                                             ; preds = %2119, %2122
  br i1 %2114, label %2133, label %2126

2126:                                             ; preds = %2125, %2130
  %2127 = phi i32* [ %2131, %2130 ], [ %2112, %2125 ]
  %2128 = load i32, i32* %2127, align 4, !noalias !40
  %2129 = icmp eq i32 %2128, 2
  br i1 %2129, label %2133, label %2130

2130:                                             ; preds = %2126
  %2131 = getelementptr inbounds i32, i32* %2127, i64 1
  %2132 = icmp eq i32* %2131, %2113
  br i1 %2132, label %2152, label %2126

2133:                                             ; preds = %2126, %2125
  %2134 = phi i32* [ %2112, %2125 ], [ %2127, %2126 ]
  %2135 = icmp eq i32* %2134, %2113
  br i1 %2135, label %2152, label %2136

2136:                                             ; preds = %2133, %2122
  br i1 %2114, label %2144, label %2137

2137:                                             ; preds = %2136, %2141
  %2138 = phi i32* [ %2142, %2141 ], [ %2112, %2136 ]
  %2139 = load i32, i32* %2138, align 4, !noalias !40
  %2140 = icmp eq i32 %2139, 0
  br i1 %2140, label %2144, label %2141

2141:                                             ; preds = %2137
  %2142 = getelementptr inbounds i32, i32* %2138, i64 1
  %2143 = icmp eq i32* %2142, %2113
  br i1 %2143, label %2152, label %2137

2144:                                             ; preds = %2137, %2136
  %2145 = phi i32* [ %2112, %2136 ], [ %2138, %2137 ]
  %2146 = icmp eq i32* %2145, %2113
  br i1 %2146, label %2152, label %2147

2147:                                             ; preds = %2144, %2100
  %2148 = phi i8 [ 0, %2144 ], [ 1, %2100 ]
  %2149 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 3
  %2150 = load i8, i8* %2149, align 8, !range !3, !noalias !40
  %2151 = icmp eq i8 %2150, 0
  br i1 %2151, label %2174, label %2197

2152:                                             ; preds = %2130, %2141, %2144, %2133
  br i1 %2114, label %2160, label %2153

2153:                                             ; preds = %2152, %2157
  %2154 = phi i32* [ %2158, %2157 ], [ %2112, %2152 ]
  %2155 = load i32, i32* %2154, align 4, !noalias !40
  %2156 = icmp eq i32 %2155, 1
  br i1 %2156, label %2160, label %2157

2157:                                             ; preds = %2153
  %2158 = getelementptr inbounds i32, i32* %2154, i64 1
  %2159 = icmp eq i32* %2158, %2113
  br i1 %2159, label %2163, label %2153

2160:                                             ; preds = %2153, %2152
  %2161 = phi i32* [ %2112, %2152 ], [ %2154, %2153 ]
  %2162 = icmp eq i32* %2161, %2113
  br i1 %2162, label %2163, label %2197

2163:                                             ; preds = %2157, %2160
  br i1 %2114, label %2171, label %2164

2164:                                             ; preds = %2163, %2168
  %2165 = phi i32* [ %2169, %2168 ], [ %2112, %2163 ]
  %2166 = load i32, i32* %2165, align 4, !noalias !40
  %2167 = icmp eq i32 %2166, 2
  br i1 %2167, label %2171, label %2168

2168:                                             ; preds = %2164
  %2169 = getelementptr inbounds i32, i32* %2165, i64 1
  %2170 = icmp eq i32* %2169, %2113
  br i1 %2170, label %2181, label %2164

2171:                                             ; preds = %2164, %2163
  %2172 = phi i32* [ %2112, %2163 ], [ %2165, %2164 ]
  %2173 = icmp eq i32* %2172, %2113
  br i1 %2173, label %2181, label %2197

2174:                                             ; preds = %2147
  %2175 = icmp eq i8 %2148, 0
  br i1 %2175, label %2176, label %2257

2176:                                             ; preds = %2174
  %2177 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0
  %2178 = load i32*, i32** %2177, align 8, !noalias !40
  %2179 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2
  %2180 = load i32, i32* %2179, align 4, !noalias !40
  br label %2181

2181:                                             ; preds = %2168, %2176, %2171, %2097, %2039
  %2182 = phi i32 [ %2180, %2176 ], [ %2111, %2171 ], [ %2086, %2097 ], [ %2028, %2039 ], [ %2111, %2168 ]
  %2183 = phi i32* [ %2178, %2176 ], [ %2112, %2171 ], [ %2084, %2097 ], [ %2026, %2039 ], [ %2112, %2168 ]
  %2184 = zext i32 %2182 to i64
  %2185 = getelementptr inbounds i32, i32* %2183, i64 %2184
  %2186 = icmp eq i32 %2182, 0
  br i1 %2186, label %2194, label %2187

2187:                                             ; preds = %2181, %2191
  %2188 = phi i32* [ %2192, %2191 ], [ %2183, %2181 ]
  %2189 = load i32, i32* %2188, align 4, !noalias !40
  %2190 = icmp eq i32 %2189, 0
  br i1 %2190, label %2194, label %2191

2191:                                             ; preds = %2187
  %2192 = getelementptr inbounds i32, i32* %2188, i64 1
  %2193 = icmp eq i32* %2192, %2185
  br i1 %2193, label %2197, label %2187

2194:                                             ; preds = %2187, %2181
  %2195 = phi i32* [ %2183, %2181 ], [ %2188, %2187 ]
  %2196 = icmp eq i32* %2195, %2185
  br i1 %2196, label %2197, label %2257

2197:                                             ; preds = %2191, %2194, %2171, %2160, %2147, %2078, %2067, %2051, %2020, %2009, %1993
  %2198 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2
  %2199 = load i32, i32* %2198, align 4, !noalias !40
  %2200 = icmp eq i32 %2199, 1
  br i1 %2200, label %2201, label %2205

2201:                                             ; preds = %2197
  %2202 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1
  %2203 = call dereferenceable(4) i32* @_ZNK3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.96"* %2202, i32 0) #12, !noalias !40
  %2204 = load i32, i32* %2203, align 4, !noalias !40
  br label %2257

2205:                                             ; preds = %2197
  %2206 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 2
  %2207 = call zeroext i1 @_ZNK5media15AudioParameters7IsValidEv(%"class.media::AudioParameters"* %2206) #12, !noalias !40
  %2208 = load i8, i8* %1756, align 8, !range !3, !noalias !40
  br i1 %2207, label %2209, label %2233

2209:                                             ; preds = %2205
  %2210 = icmp eq i8 %2208, 0
  br i1 %2210, label %2211, label %2228

2211:                                             ; preds = %2209
  %2212 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0
  %2213 = load i32*, i32** %2212, align 8, !noalias !40
  %2214 = load i32, i32* %2198, align 4, !noalias !40
  %2215 = zext i32 %2214 to i64
  %2216 = getelementptr inbounds i32, i32* %2213, i64 %2215
  %2217 = icmp eq i32 %2214, 0
  br i1 %2217, label %2225, label %2218

2218:                                             ; preds = %2211, %2222
  %2219 = phi i32* [ %2223, %2222 ], [ %2213, %2211 ]
  %2220 = load i32, i32* %2219, align 4, !noalias !40
  %2221 = icmp eq i32 %2220, 2
  br i1 %2221, label %2225, label %2222

2222:                                             ; preds = %2218
  %2223 = getelementptr inbounds i32, i32* %2219, i64 1
  %2224 = icmp eq i32* %2223, %2216
  br i1 %2224, label %2240, label %2218

2225:                                             ; preds = %2218, %2211
  %2226 = phi i32* [ %2213, %2211 ], [ %2219, %2218 ]
  %2227 = icmp eq i32* %2226, %2216
  br i1 %2227, label %2240, label %2228

2228:                                             ; preds = %2225, %2209
  %2229 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 2, i32 5
  %2230 = load i32, i32* %2229, align 4, !noalias !40
  %2231 = and i32 %2230, 1
  %2232 = icmp eq i32 %2231, 0
  br i1 %2232, label %2233, label %2257

2233:                                             ; preds = %2228, %2205
  %2234 = icmp eq i8 %2208, 0
  br i1 %2234, label %2235, label %2256

2235:                                             ; preds = %2233
  %2236 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0
  %2237 = load i32*, i32** %2236, align 8, !noalias !40
  %2238 = load i32, i32* %2198, align 4, !noalias !40
  %2239 = zext i32 %2238 to i64
  br label %2240

2240:                                             ; preds = %2222, %2235, %2225
  %2241 = phi i64 [ %2239, %2235 ], [ %2215, %2225 ], [ %2215, %2222 ]
  %2242 = phi i32 [ %2238, %2235 ], [ %2214, %2225 ], [ %2214, %2222 ]
  %2243 = phi i32* [ %2237, %2235 ], [ %2213, %2225 ], [ %2213, %2222 ]
  %2244 = getelementptr inbounds i32, i32* %2243, i64 %2241
  %2245 = icmp eq i32 %2242, 0
  br i1 %2245, label %2253, label %2246

2246:                                             ; preds = %2240, %2250
  %2247 = phi i32* [ %2251, %2250 ], [ %2243, %2240 ]
  %2248 = load i32, i32* %2247, align 4, !noalias !40
  %2249 = icmp eq i32 %2248, 1
  br i1 %2249, label %2253, label %2250

2250:                                             ; preds = %2246
  %2251 = getelementptr inbounds i32, i32* %2247, i64 1
  %2252 = icmp eq i32* %2251, %2244
  br i1 %2252, label %2257, label %2246

2253:                                             ; preds = %2246, %2240
  %2254 = phi i32* [ %2243, %2240 ], [ %2247, %2246 ]
  %2255 = icmp eq i32* %2254, %2244
  br i1 %2255, label %2257, label %2256

2256:                                             ; preds = %2253, %2233
  br label %2257

2257:                                             ; preds = %2250, %2256, %2253, %2228, %2201, %2194, %2174, %2081, %2023
  %2258 = phi i32 [ %2204, %2201 ], [ 0, %2194 ], [ 2, %2228 ], [ 1, %2256 ], [ 0, %2253 ], [ 0, %2174 ], [ 0, %2081 ], [ 0, %2023 ], [ 0, %2250 ]
  %2259 = load i8, i8* %1348, align 1, !noalias !37
  %2260 = and i8 %2259, 4
  %2261 = icmp eq i8 %2260, 0
  br i1 %2261, label %2271, label %2262

2262:                                             ; preds = %2257
  %2263 = and i8 %2259, 1
  %2264 = icmp ne i8 %2263, 0
  %2265 = xor i1 %2264, true
  %2266 = icmp eq i32 %2258, 0
  %2267 = or i1 %2266, %2265
  br i1 %2267, label %2268, label %2271

2268:                                             ; preds = %2262
  %2269 = uitofp i1 %2266 to double
  %2270 = select i1 %2264, double 0.000000e+00, double %2269
  br label %2271

2271:                                             ; preds = %2257, %2262, %2268
  %2272 = phi double [ %2270, %2268 ], [ 1.000000e+00, %2262 ], [ 1.000000e+00, %2257 ]
  %2273 = sext i32 %2258 to i64
  %2274 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN5blink26SelectSettingsAudioCaptureERKN3WTF6VectorINS_28AudioDeviceCaptureCapabilityELj0ENS0_18PartitionAllocatorEEERKNS_16MediaConstraintsEbb, i64 0, i64 %2273
  %2275 = load i32, i32* %2274, align 4
  store i32 %2258, i32* %1339, align 4, !noalias !28
  %2276 = fadd double %1981, %2272
  br i1 %2261, label %2306, label %2277

2277:                                             ; preds = %2271
  %2278 = and i8 %2259, 1
  %2279 = icmp ne i8 %2278, 0
  %2280 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %1984, i64 0, i32 0, i32 0
  %2281 = load i8, i8* %2280, align 8, !range !3, !noalias !31
  %2282 = icmp eq i8 %2281, 0
  br i1 %2282, label %2283, label %2301

2283:                                             ; preds = %2277
  %2284 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %2285 = load i8*, i8** %2284, align 8, !noalias !31
  %2286 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %2287 = load i32, i32* %2286, align 4, !noalias !31
  %2288 = zext i32 %2287 to i64
  %2289 = getelementptr inbounds i8, i8* %2285, i64 %2288
  %2290 = icmp eq i32 %2287, 0
  br i1 %2290, label %2298, label %2291

2291:                                             ; preds = %2283, %2295
  %2292 = phi i8* [ %2296, %2295 ], [ %2285, %2283 ]
  %2293 = load i8, i8* %2292, align 1, !range !3, !noalias !31
  %2294 = icmp eq i8 %2293, %2278
  br i1 %2294, label %2298, label %2295

2295:                                             ; preds = %2291
  %2296 = getelementptr inbounds i8, i8* %2292, i64 1
  %2297 = icmp eq i8* %2296, %2289
  br i1 %2297, label %2316, label %2291

2298:                                             ; preds = %2291, %2283
  %2299 = phi i8* [ %2285, %2283 ], [ %2292, %2291 ]
  %2300 = icmp eq i8* %2299, %2289
  br i1 %2300, label %2316, label %2301

2301:                                             ; preds = %2298, %2277
  %2302 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 3
  %2303 = load i8, i8* %2302, align 8, !range !3, !noalias !31
  %2304 = icmp ne i8 %2303, 0
  %2305 = and i1 %2279, %2304
  br label %2336

2306:                                             ; preds = %2271
  %2307 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %1984, i64 0, i32 0, i32 0
  %2308 = load i8, i8* %2307, align 8, !range !3, !noalias !31
  %2309 = icmp eq i8 %2308, 0
  br i1 %2309, label %2310, label %2332

2310:                                             ; preds = %2306
  %2311 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %2312 = load i8*, i8** %2311, align 8, !noalias !31
  %2313 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %2314 = load i32, i32* %2313, align 4, !noalias !31
  %2315 = zext i32 %2314 to i64
  br label %2316

2316:                                             ; preds = %2295, %2310, %2298
  %2317 = phi i64 [ %2315, %2310 ], [ %2288, %2298 ], [ %2288, %2295 ]
  %2318 = phi i32 [ %2314, %2310 ], [ %2287, %2298 ], [ %2287, %2295 ]
  %2319 = phi i8* [ %2312, %2310 ], [ %2285, %2298 ], [ %2285, %2295 ]
  %2320 = getelementptr inbounds i8, i8* %2319, i64 %2317
  %2321 = icmp eq i32 %2318, 0
  br i1 %2321, label %2329, label %2322

2322:                                             ; preds = %2316, %2326
  %2323 = phi i8* [ %2327, %2326 ], [ %2319, %2316 ]
  %2324 = load i8, i8* %2323, align 1, !range !3, !noalias !31
  %2325 = icmp eq i8 %2324, 1
  br i1 %2325, label %2329, label %2326

2326:                                             ; preds = %2322
  %2327 = getelementptr inbounds i8, i8* %2323, i64 1
  %2328 = icmp eq i8* %2327, %2320
  br i1 %2328, label %2336, label %2322

2329:                                             ; preds = %2322, %2316
  %2330 = phi i8* [ %2319, %2316 ], [ %2323, %2322 ]
  %2331 = icmp eq i8* %2330, %2320
  br i1 %2331, label %2336, label %2332

2332:                                             ; preds = %2329, %2306
  %2333 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 3
  %2334 = load i8, i8* %2333, align 8, !range !3, !noalias !31
  %2335 = icmp ne i8 %2334, 0
  br label %2336

2336:                                             ; preds = %2326, %2332, %2329, %2301
  %2337 = phi i1 [ %2305, %2301 ], [ %2335, %2332 ], [ false, %2329 ], [ false, %2326 ]
  %2338 = zext i1 %2337 to i8
  store i8 %2338, i8* %1341, align 4, !noalias !28
  store i8 %2338, i8* %1342, align 1, !noalias !28
  %2339 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* align 1 %1344, i8 %2338, i64 4, i1 false) #12, !noalias !28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1350) #12, !noalias !28
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1350, i8 -86, i64 24, i1 false) #12, !noalias !28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1355, i8* align 8 %1356, i64 9, i1 false) #12, !noalias !28
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink17BooleanConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1351, align 8, !noalias !28
  %2340 = load i8, i8* %1357, align 1, !noalias !28
  store i8 %2340, i8* %1353, align 1, !noalias !28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1358) #12, !noalias !28
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1358, i8 -86, i64 24, i1 false) #12, !noalias !28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1363, i8* align 8 %1364, i64 9, i1 false) #12, !noalias !28
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink17BooleanConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1359, align 8, !noalias !28
  %2341 = load i8, i8* %1365, align 1, !noalias !28
  store i8 %2341, i8* %1361, align 1, !noalias !28
  %2342 = and i8 %2340, 4
  %2343 = icmp eq i8 %2342, 0
  br i1 %2343, label %2344, label %2347

2344:                                             ; preds = %2336
  %2345 = and i8 %2341, 4
  %2346 = icmp eq i8 %2345, 0
  br i1 %2346, label %2377, label %2350

2347:                                             ; preds = %2336
  %2348 = and i8 %2340, 1
  %2349 = icmp ne i8 %2348, 0
  br label %2350

2350:                                             ; preds = %2347, %2344
  %2351 = phi i1 [ %2349, %2347 ], [ false, %2344 ]
  %2352 = and i8 %2341, 5
  %2353 = icmp eq i8 %2352, 5
  %2354 = or i1 %2353, %2351
  %2355 = zext i1 %2354 to i8
  %2356 = getelementptr inbounds %"class.blink::(anonymous namespace)::AutoGainControlContainer", %"class.blink::(anonymous namespace)::AutoGainControlContainer"* %2339, i64 0, i32 0, i32 0
  %2357 = load i8, i8* %2356, align 8, !range !3, !noalias !31
  %2358 = icmp eq i8 %2357, 0
  br i1 %2358, label %2359, label %2418

2359:                                             ; preds = %2350
  %2360 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %2361 = load i8*, i8** %2360, align 8, !noalias !31
  %2362 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 2
  %2363 = load i32, i32* %2362, align 4, !noalias !31
  %2364 = zext i32 %2363 to i64
  %2365 = getelementptr inbounds i8, i8* %2361, i64 %2364
  %2366 = icmp eq i32 %2363, 0
  br i1 %2366, label %2374, label %2367

2367:                                             ; preds = %2359, %2371
  %2368 = phi i8* [ %2372, %2371 ], [ %2361, %2359 ]
  %2369 = load i8, i8* %2368, align 1, !range !3, !noalias !31
  %2370 = icmp eq i8 %2369, %2355
  br i1 %2370, label %2374, label %2371

2371:                                             ; preds = %2367
  %2372 = getelementptr inbounds i8, i8* %2368, i64 1
  %2373 = icmp eq i8* %2372, %2365
  br i1 %2373, label %2387, label %2367

2374:                                             ; preds = %2367, %2359
  %2375 = phi i8* [ %2361, %2359 ], [ %2368, %2367 ]
  %2376 = icmp eq i8* %2375, %2365
  br i1 %2376, label %2387, label %2418

2377:                                             ; preds = %2344
  %2378 = getelementptr inbounds %"class.blink::(anonymous namespace)::AutoGainControlContainer", %"class.blink::(anonymous namespace)::AutoGainControlContainer"* %2339, i64 0, i32 0, i32 0
  %2379 = load i8, i8* %2378, align 8, !range !3, !noalias !31
  %2380 = icmp eq i8 %2379, 0
  br i1 %2380, label %2381, label %2418

2381:                                             ; preds = %2377
  %2382 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %2383 = load i8*, i8** %2382, align 8, !noalias !31
  %2384 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 2
  %2385 = load i32, i32* %2384, align 4, !noalias !31
  %2386 = zext i32 %2385 to i64
  br label %2387

2387:                                             ; preds = %2371, %2381, %2374
  %2388 = phi i64 [ %2386, %2381 ], [ %2364, %2374 ], [ %2364, %2371 ]
  %2389 = phi i32 [ %2385, %2381 ], [ %2363, %2374 ], [ %2363, %2371 ]
  %2390 = phi i8* [ %2383, %2381 ], [ %2361, %2374 ], [ %2361, %2371 ]
  %2391 = getelementptr inbounds i8, i8* %2390, i64 %2388
  %2392 = icmp eq i32 %2389, 0
  br i1 %2392, label %2400, label %2393

2393:                                             ; preds = %2387, %2397
  %2394 = phi i8* [ %2398, %2397 ], [ %2390, %2387 ]
  %2395 = load i8, i8* %2394, align 1, !range !3, !noalias !31
  %2396 = icmp eq i8 %2395, 1
  br i1 %2396, label %2400, label %2397

2397:                                             ; preds = %2393
  %2398 = getelementptr inbounds i8, i8* %2394, i64 1
  %2399 = icmp eq i8* %2398, %2391
  br i1 %2399, label %2414, label %2393

2400:                                             ; preds = %2393, %2387
  %2401 = phi i8* [ %2390, %2387 ], [ %2394, %2393 ]
  %2402 = icmp eq i8* %2401, %2391
  br i1 %2402, label %2414, label %2403

2403:                                             ; preds = %2400
  br i1 %2392, label %2411, label %2404

2404:                                             ; preds = %2403, %2408
  %2405 = phi i8* [ %2409, %2408 ], [ %2390, %2403 ]
  %2406 = load i8, i8* %2405, align 1, !range !3, !noalias !31
  %2407 = icmp eq i8 %2406, 0
  br i1 %2407, label %2411, label %2408

2408:                                             ; preds = %2404
  %2409 = getelementptr inbounds i8, i8* %2405, i64 1
  %2410 = icmp eq i8* %2409, %2391
  br i1 %2410, label %2414, label %2404

2411:                                             ; preds = %2404, %2403
  %2412 = phi i8* [ %2390, %2403 ], [ %2405, %2404 ]
  %2413 = icmp eq i8* %2412, %2391
  br i1 %2413, label %2414, label %2418

2414:                                             ; preds = %2397, %2408, %2411, %2400
  %2415 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 3, i32 0, i32 1
  %2416 = call dereferenceable(1) i8* @_ZNK3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.86"* %2415, i32 0) #12, !noalias !31
  %2417 = load i8, i8* %2416, align 1, !range !3, !noalias !31
  br label %2418

2418:                                             ; preds = %2414, %2411, %2377, %2374, %2350
  %2419 = phi double [ 0.000000e+00, %2414 ], [ 1.000000e+00, %2374 ], [ 1.000000e+00, %2350 ], [ 0.000000e+00, %2411 ], [ 0.000000e+00, %2377 ]
  %2420 = phi i8 [ %2417, %2414 ], [ %2355, %2374 ], [ %2355, %2350 ], [ %2338, %2411 ], [ %2338, %2377 ]
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %1366) #12, !noalias !31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1358) #12, !noalias !28
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %1367) #12, !noalias !31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1350) #12, !noalias !28
  store i8 %2420, i8* %1341, align 4, !noalias !28
  %2421 = fadd double %2276, %2419
  store i8 %2420, i8* %1345, align 2, !noalias !28
  br label %2493

2422:                                             ; preds = %2574
  %2423 = load i8, i8* %1348, align 1, !noalias !28
  %2424 = and i8 %2423, 4
  %2425 = icmp eq i8 %2424, 0
  br i1 %2425, label %2455, label %2426

2426:                                             ; preds = %2422
  %2427 = and i8 %2423, 1
  %2428 = icmp ne i8 %2427, 0
  %2429 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %1984, i64 0, i32 0, i32 0
  %2430 = load i8, i8* %2429, align 8, !range !3, !noalias !31
  %2431 = icmp eq i8 %2430, 0
  br i1 %2431, label %2432, label %2450

2432:                                             ; preds = %2426
  %2433 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %2434 = load i8*, i8** %2433, align 8, !noalias !31
  %2435 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %2436 = load i32, i32* %2435, align 4, !noalias !31
  %2437 = zext i32 %2436 to i64
  %2438 = getelementptr inbounds i8, i8* %2434, i64 %2437
  %2439 = icmp eq i32 %2436, 0
  br i1 %2439, label %2447, label %2440

2440:                                             ; preds = %2432, %2444
  %2441 = phi i8* [ %2445, %2444 ], [ %2434, %2432 ]
  %2442 = load i8, i8* %2441, align 1, !range !3, !noalias !31
  %2443 = icmp eq i8 %2442, %2427
  br i1 %2443, label %2447, label %2444

2444:                                             ; preds = %2440
  %2445 = getelementptr inbounds i8, i8* %2441, i64 1
  %2446 = icmp eq i8* %2445, %2438
  br i1 %2446, label %2465, label %2440

2447:                                             ; preds = %2440, %2432
  %2448 = phi i8* [ %2434, %2432 ], [ %2441, %2440 ]
  %2449 = icmp eq i8* %2448, %2438
  br i1 %2449, label %2465, label %2450

2450:                                             ; preds = %2447, %2426
  %2451 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 3
  %2452 = load i8, i8* %2451, align 8, !range !3, !noalias !31
  %2453 = icmp ne i8 %2452, 0
  %2454 = and i1 %2428, %2453
  br label %2485

2455:                                             ; preds = %2422
  %2456 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %1984, i64 0, i32 0, i32 0
  %2457 = load i8, i8* %2456, align 8, !range !3, !noalias !31
  %2458 = icmp eq i8 %2457, 0
  br i1 %2458, label %2459, label %2481

2459:                                             ; preds = %2455
  %2460 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %2461 = load i8*, i8** %2460, align 8, !noalias !31
  %2462 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %2463 = load i32, i32* %2462, align 4, !noalias !31
  %2464 = zext i32 %2463 to i64
  br label %2465

2465:                                             ; preds = %2444, %2459, %2447
  %2466 = phi i64 [ %2464, %2459 ], [ %2437, %2447 ], [ %2437, %2444 ]
  %2467 = phi i32 [ %2463, %2459 ], [ %2436, %2447 ], [ %2436, %2444 ]
  %2468 = phi i8* [ %2461, %2459 ], [ %2434, %2447 ], [ %2434, %2444 ]
  %2469 = getelementptr inbounds i8, i8* %2468, i64 %2466
  %2470 = icmp eq i32 %2467, 0
  br i1 %2470, label %2478, label %2471

2471:                                             ; preds = %2465, %2475
  %2472 = phi i8* [ %2476, %2475 ], [ %2468, %2465 ]
  %2473 = load i8, i8* %2472, align 1, !range !3, !noalias !31
  %2474 = icmp eq i8 %2473, 1
  br i1 %2474, label %2478, label %2475

2475:                                             ; preds = %2471
  %2476 = getelementptr inbounds i8, i8* %2472, i64 1
  %2477 = icmp eq i8* %2476, %2469
  br i1 %2477, label %2485, label %2471

2478:                                             ; preds = %2471, %2465
  %2479 = phi i8* [ %2468, %2465 ], [ %2472, %2471 ]
  %2480 = icmp eq i8* %2479, %2469
  br i1 %2480, label %2485, label %2481

2481:                                             ; preds = %2478, %2455
  %2482 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 2, i32 3
  %2483 = load i8, i8* %2482, align 8, !range !3, !noalias !31
  %2484 = icmp ne i8 %2483, 0
  br label %2485

2485:                                             ; preds = %2475, %2481, %2478, %2450
  %2486 = phi i1 [ %2454, %2450 ], [ %2484, %2481 ], [ false, %2478 ], [ false, %2475 ]
  %2487 = load i32, i32* %1980, align 8, !noalias !31
  switch i32 %2487, label %2492 [
    i32 0, label %2488
    i32 1, label %2580
    i32 2, label %2490
  ]

2488:                                             ; preds = %2485
  %2489 = select i1 %2486, i32 1, i32 3
  br label %2580

2490:                                             ; preds = %2485
  %2491 = select i1 %2486, i32 3, i32 1
  br label %2580

2492:                                             ; preds = %2485
  unreachable

2493:                                             ; preds = %2574, %2418
  %2494 = phi i64 [ 0, %2418 ], [ %2578, %2574 ]
  %2495 = phi double [ %2421, %2418 ], [ %2577, %2574 ]
  %2496 = getelementptr inbounds [5 x %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo"], [5 x %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo"]* @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainer32kBooleanPropertyContainerInfoMapE, i64 0, i64 %2494, i32 0
  %2497 = load i32, i32* %2496, align 8, !noalias !31
  %2498 = zext i32 %2497 to i64
  %2499 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 %2498
  %2500 = getelementptr inbounds [5 x %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo"], [5 x %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo"]* @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainer32kBooleanPropertyContainerInfoMapE, i64 0, i64 %2494, i32 1
  %2501 = load i64, i64* %2500, align 8, !noalias !31
  %2502 = getelementptr inbounds [5 x %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo"], [5 x %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo"]* @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainer32kBooleanPropertyContainerInfoMapE, i64 0, i64 %2494, i32 2
  %2503 = load i64, i64* %2502, align 8, !noalias !31
  %2504 = getelementptr inbounds i8, i8* %1338, i64 %2503
  %2505 = load i8, i8* %2504, align 1, !range !3, !noalias !28
  %2506 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1258, i64 0, i32 0, i32 1, i64 %2501
  %2507 = load i8, i8* %2506, align 1, !noalias !28
  %2508 = and i8 %2507, 4
  %2509 = icmp eq i8 %2508, 0
  br i1 %2509, label %2533, label %2510

2510:                                             ; preds = %2493
  %2511 = and i8 %2507, 1
  %2512 = getelementptr inbounds %"class.blink::(anonymous namespace)::BooleanContainer", %"class.blink::(anonymous namespace)::BooleanContainer"* %2499, i64 0, i32 0, i32 0
  %2513 = load i8, i8* %2512, align 8, !range !3, !noalias !31
  %2514 = icmp eq i8 %2513, 0
  br i1 %2514, label %2515, label %2574

2515:                                             ; preds = %2510
  %2516 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 %2498, i32 0, i32 1, i32 0, i32 0, i32 0
  %2517 = load i8*, i8** %2516, align 8, !noalias !31
  %2518 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 %2498, i32 0, i32 1, i32 0, i32 0, i32 2
  %2519 = load i32, i32* %2518, align 4, !noalias !31
  %2520 = zext i32 %2519 to i64
  %2521 = getelementptr inbounds i8, i8* %2517, i64 %2520
  %2522 = icmp eq i32 %2519, 0
  br i1 %2522, label %2530, label %2523

2523:                                             ; preds = %2515, %2527
  %2524 = phi i8* [ %2528, %2527 ], [ %2517, %2515 ]
  %2525 = load i8, i8* %2524, align 1, !range !3, !noalias !31
  %2526 = icmp eq i8 %2525, %2511
  br i1 %2526, label %2530, label %2527

2527:                                             ; preds = %2523
  %2528 = getelementptr inbounds i8, i8* %2524, i64 1
  %2529 = icmp eq i8* %2528, %2521
  br i1 %2529, label %2543, label %2523

2530:                                             ; preds = %2523, %2515
  %2531 = phi i8* [ %2517, %2515 ], [ %2524, %2523 ]
  %2532 = icmp eq i8* %2531, %2521
  br i1 %2532, label %2543, label %2574

2533:                                             ; preds = %2493
  %2534 = getelementptr inbounds %"class.blink::(anonymous namespace)::BooleanContainer", %"class.blink::(anonymous namespace)::BooleanContainer"* %2499, i64 0, i32 0, i32 0
  %2535 = load i8, i8* %2534, align 8, !range !3, !noalias !31
  %2536 = icmp eq i8 %2535, 0
  br i1 %2536, label %2537, label %2574

2537:                                             ; preds = %2533
  %2538 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 %2498, i32 0, i32 1, i32 0, i32 0, i32 0
  %2539 = load i8*, i8** %2538, align 8, !noalias !31
  %2540 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 %2498, i32 0, i32 1, i32 0, i32 0, i32 2
  %2541 = load i32, i32* %2540, align 4, !noalias !31
  %2542 = zext i32 %2541 to i64
  br label %2543

2543:                                             ; preds = %2527, %2537, %2530
  %2544 = phi i64 [ %2542, %2537 ], [ %2520, %2530 ], [ %2520, %2527 ]
  %2545 = phi i32 [ %2541, %2537 ], [ %2519, %2530 ], [ %2519, %2527 ]
  %2546 = phi i8* [ %2539, %2537 ], [ %2517, %2530 ], [ %2517, %2527 ]
  %2547 = getelementptr inbounds i8, i8* %2546, i64 %2544
  %2548 = icmp eq i32 %2545, 0
  br i1 %2548, label %2556, label %2549

2549:                                             ; preds = %2543, %2553
  %2550 = phi i8* [ %2554, %2553 ], [ %2546, %2543 ]
  %2551 = load i8, i8* %2550, align 1, !range !3, !noalias !31
  %2552 = icmp eq i8 %2551, 1
  br i1 %2552, label %2556, label %2553

2553:                                             ; preds = %2549
  %2554 = getelementptr inbounds i8, i8* %2550, i64 1
  %2555 = icmp eq i8* %2554, %2547
  br i1 %2555, label %2570, label %2549

2556:                                             ; preds = %2549, %2543
  %2557 = phi i8* [ %2546, %2543 ], [ %2550, %2549 ]
  %2558 = icmp eq i8* %2557, %2547
  br i1 %2558, label %2570, label %2559

2559:                                             ; preds = %2556
  br i1 %2548, label %2567, label %2560

2560:                                             ; preds = %2559, %2564
  %2561 = phi i8* [ %2565, %2564 ], [ %2546, %2559 ]
  %2562 = load i8, i8* %2561, align 1, !range !3, !noalias !31
  %2563 = icmp eq i8 %2562, 0
  br i1 %2563, label %2567, label %2564

2564:                                             ; preds = %2560
  %2565 = getelementptr inbounds i8, i8* %2561, i64 1
  %2566 = icmp eq i8* %2565, %2547
  br i1 %2566, label %2570, label %2560

2567:                                             ; preds = %2560, %2559
  %2568 = phi i8* [ %2546, %2559 ], [ %2561, %2560 ]
  %2569 = icmp eq i8* %2568, %2547
  br i1 %2569, label %2570, label %2574

2570:                                             ; preds = %2553, %2564, %2567, %2556
  %2571 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 0, i32 1, i32 0, i64 %2498, i32 0, i32 1
  %2572 = call dereferenceable(1) i8* @_ZNK3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.86"* %2571, i32 0) #12, !noalias !31
  %2573 = load i8, i8* %2572, align 1, !range !3, !noalias !31
  br label %2574

2574:                                             ; preds = %2570, %2567, %2533, %2530, %2510
  %2575 = phi double [ 0.000000e+00, %2570 ], [ 1.000000e+00, %2530 ], [ 1.000000e+00, %2510 ], [ 0.000000e+00, %2567 ], [ 0.000000e+00, %2533 ]
  %2576 = phi i8 [ %2573, %2570 ], [ %2511, %2530 ], [ %2511, %2510 ], [ %2505, %2567 ], [ %2505, %2533 ]
  store i8 %2576, i8* %2504, align 1, !noalias !28
  %2577 = fadd double %2495, %2575
  %2578 = add nuw nsw i64 %2494, 1
  %2579 = icmp eq i64 %2578, 5
  br i1 %2579, label %2422, label %2493

2580:                                             ; preds = %2490, %2488, %2485
  %2581 = phi i32 [ %2491, %2490 ], [ %2489, %2488 ], [ 2, %2485 ]
  %2582 = load i32, i32* %1339, align 4, !noalias !24
  %2583 = load i32, i32* %1346, align 4, !noalias !24
  %2584 = load i8, i8* %1341, align 4, !noalias !24
  %2585 = load i8, i8* %1342, align 1, !noalias !24
  %2586 = load i8, i8* %1343, align 2, !noalias !24
  %2587 = load i32, i32* %1347, align 1, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1338) #12, !noalias !28
  %2588 = fcmp olt double %1663, %2577
  br i1 %2588, label %2597, label %2589

2589:                                             ; preds = %2580
  %2590 = fcmp olt double %2577, %1663
  br i1 %2590, label %2599, label %2591

2591:                                             ; preds = %2589
  %2592 = icmp slt i32 %1662, %2275
  br i1 %2592, label %2597, label %2593

2593:                                             ; preds = %2591
  %2594 = icmp sge i32 %2275, %1662
  %2595 = icmp slt i32 %1661, %2581
  %2596 = and i1 %2594, %2595
  br i1 %2596, label %2597, label %2599

2597:                                             ; preds = %2593, %2591, %2580
  store i32 %2582, i32* %1318, align 4, !noalias !24
  store i32 %2583, i32* %1325, align 4, !noalias !24
  store i8 %2584, i8* %1321, align 4, !noalias !24
  store i8 %2585, i8* %1322, align 1, !noalias !24
  store i8 %2586, i8* %1323, align 2, !noalias !24
  store i32 %2587, i32* %1326, align 1, !noalias !24
  %2598 = or i64 %1983, %1982
  store i64 %2598, i64* %17, align 8, !noalias !24
  br label %2599

2599:                                             ; preds = %2597, %2593, %2589, %1759, %1751, %1743, %1735, %1727, %1713, %1701, %1695, %1683, %1675, %1667
  %2600 = phi double [ %1663, %1759 ], [ %2577, %2597 ], [ %1663, %1713 ], [ %1663, %1701 ], [ %1663, %1695 ], [ %1663, %1683 ], [ %1663, %1675 ], [ %1663, %1751 ], [ %1663, %1743 ], [ %1663, %1735 ], [ %1663, %1727 ], [ %1663, %1667 ], [ %1663, %2589 ], [ %1663, %2593 ]
  %2601 = phi i32 [ %1662, %1759 ], [ %2275, %2597 ], [ %1662, %1713 ], [ %1662, %1701 ], [ %1662, %1695 ], [ %1662, %1683 ], [ %1662, %1675 ], [ %1662, %1751 ], [ %1662, %1743 ], [ %1662, %1735 ], [ %1662, %1727 ], [ %1662, %1667 ], [ %1662, %2589 ], [ %1662, %2593 ]
  %2602 = phi i32 [ %1661, %1759 ], [ %2581, %2597 ], [ %1661, %1713 ], [ %1661, %1701 ], [ %1661, %1695 ], [ %1661, %1683 ], [ %1661, %1675 ], [ %1661, %1751 ], [ %1661, %1743 ], [ %1661, %1735 ], [ %1661, %1727 ], [ %1661, %1667 ], [ %1661, %2589 ], [ %1661, %2593 ]
  %2603 = phi i32 [ %1660, %1759 ], [ %1876, %2597 ], [ %1660, %1713 ], [ %1660, %1701 ], [ %1660, %1695 ], [ %1660, %1683 ], [ %1660, %1675 ], [ %1660, %1751 ], [ %1660, %1743 ], [ %1660, %1735 ], [ %1660, %1727 ], [ %1660, %1667 ], [ %1660, %2589 ], [ %1660, %2593 ]
  %2604 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ %1659, %1759 ], [ %1658, %2597 ], [ %1659, %1713 ], [ %1659, %1701 ], [ %1659, %1695 ], [ %1659, %1683 ], [ %1659, %1675 ], [ %1659, %1751 ], [ %1659, %1743 ], [ %1659, %1735 ], [ %1659, %1727 ], [ %1659, %1667 ], [ %1659, %2589 ], [ %1659, %2593 ]
  %2605 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1658, i64 1
  %2606 = icmp eq %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2605, %1611
  br i1 %2606, label %1621, label %1657

2607:                                             ; preds = %1656, %1655
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %1288)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1284) #12, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1285) #12, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1286) #12, !noalias !21
  %2608 = load double, double* %1374, align 8, !noalias !21
  %2609 = load i8, i8* %1375, align 8, !range !3, !noalias !21
  %2610 = load i32, i32* %1379, align 4, !noalias !21
  %2611 = load i32, i32* %1380, align 8, !noalias !21
  %2612 = call dereferenceable(72) %"class.blink::AudioCaptureSettings"* @_ZN5blink20AudioCaptureSettingsaSEOS0_(%"class.blink::AudioCaptureSettings"* nonnull %21, %"class.blink::AudioCaptureSettings"* dereferenceable(72) %1382) #12
  %2613 = load i8, i8* %1392, align 1, !noalias !21
  %2614 = icmp slt i8 %2613, 0
  br i1 %2614, label %2615, label %2617

2615:                                             ; preds = %2607
  %2616 = load i8*, i8** %1393, align 8, !noalias !21
  call void @_ZdlPv(i8* %2616) #14
  br label %2617

2617:                                             ; preds = %2615, %2607
  %2618 = load i8, i8* %1292, align 1, !noalias !21
  %2619 = icmp slt i8 %2618, 0
  br i1 %2619, label %2620, label %2622

2620:                                             ; preds = %2617
  %2621 = load i8*, i8** %1293, align 8, !noalias !21
  call void @_ZdlPv(i8* %2621) #14
  br label %2622

2622:                                             ; preds = %2620, %2617
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %1281) #12, !noalias !21
  %2623 = load i8, i8* %1283, align 1, !noalias !21
  %2624 = icmp slt i8 %2623, 0
  %2625 = load i64, i64* %187, align 8, !noalias !21
  %2626 = zext i8 %2623 to i64
  %2627 = select i1 %2624, i64 %2625, i64 %2626
  %2628 = load i8, i8* %1396, align 1, !noalias !21
  %2629 = icmp slt i8 %2628, 0
  %2630 = load i64, i64* %1397, align 8, !noalias !21
  %2631 = zext i8 %2628 to i64
  %2632 = select i1 %2629, i64 %2630, i64 %2631
  %2633 = icmp eq i64 %2627, %2632
  br i1 %2633, label %2634, label %2662

2634:                                             ; preds = %2622
  %2635 = load i8*, i8** %186, align 8, !noalias !21
  %2636 = select i1 %2624, i8* %2635, i8* %185
  %2637 = load i8*, i8** %1398, align 8, !noalias !21
  %2638 = select i1 %2629, i8* %2637, i8* %1399
  %2639 = icmp eq i64 %2627, 0
  br i1 %2624, label %2646, label %2640

2640:                                             ; preds = %2634
  br i1 %2639, label %2662, label %2641

2641:                                             ; preds = %2640
  %2642 = ptrtoint i8* %2635 to i64
  %2643 = trunc i64 %2642 to i8
  %2644 = load i8, i8* %2638, align 1
  %2645 = icmp eq i8 %2644, %2643
  br i1 %2645, label %2650, label %2662

2646:                                             ; preds = %2634
  br i1 %2639, label %2662, label %2647

2647:                                             ; preds = %2646
  %2648 = call i32 @bcmp(i8* %2636, i8* %2638, i64 %2627) #12
  %2649 = icmp eq i32 %2648, 0
  br label %2662

2650:                                             ; preds = %2641, %2657
  %2651 = phi i64 [ %2654, %2657 ], [ %2626, %2641 ]
  %2652 = phi i8* [ %2655, %2657 ], [ %185, %2641 ]
  %2653 = phi i8* [ %2658, %2657 ], [ %2638, %2641 ]
  %2654 = add i64 %2651, -1
  %2655 = getelementptr inbounds i8, i8* %2652, i64 1
  %2656 = icmp eq i64 %2654, 0
  br i1 %2656, label %2662, label %2657

2657:                                             ; preds = %2650
  %2658 = getelementptr inbounds i8, i8* %2653, i64 1
  %2659 = load i8, i8* %2655, align 1, !noalias !21
  %2660 = load i8, i8* %2658, align 1
  %2661 = icmp eq i8 %2659, %2660
  br i1 %2661, label %2650, label %2662

2662:                                             ; preds = %2657, %2650, %2641, %2647, %2646, %2640, %2622
  %2663 = phi i1 [ false, %2622 ], [ %2649, %2647 ], [ true, %2646 ], [ true, %2640 ], [ false, %2641 ], [ false, %2657 ], [ true, %2650 ]
  %2664 = zext i1 %2663 to i8
  %2665 = or i8 %2609, %2664
  %2666 = fcmp olt double %1425, %2608
  br i1 %2666, label %2679, label %2667

2667:                                             ; preds = %2662
  %2668 = fcmp olt double %2608, %1425
  br i1 %2668, label %2682, label %2669

2669:                                             ; preds = %2667
  %2670 = icmp ult i8 %1426, %2665
  br i1 %2670, label %2679, label %2671

2671:                                             ; preds = %2669
  %2672 = icmp ult i8 %2665, %1426
  br i1 %2672, label %2682, label %2673

2673:                                             ; preds = %2671
  %2674 = icmp slt i32 %1428, %2610
  br i1 %2674, label %2679, label %2675

2675:                                             ; preds = %2673
  %2676 = icmp sge i32 %2610, %1428
  %2677 = icmp slt i32 %1427, %2611
  %2678 = and i1 %2676, %2677
  br i1 %2678, label %2679, label %2682

2679:                                             ; preds = %2675, %2673, %2669, %2662
  %2680 = call dereferenceable(72) %"class.blink::AudioCaptureSettings"* @_ZN5blink20AudioCaptureSettingsaSEOS0_(%"class.blink::AudioCaptureSettings"* nonnull %20, %"class.blink::AudioCaptureSettings"* nonnull dereferenceable(72) %21) #12
  %2681 = load i8, i8* %1396, align 1, !noalias !21
  br label %2682

2682:                                             ; preds = %2679, %2675, %2671, %2667
  %2683 = phi i8 [ %2681, %2679 ], [ %2628, %2667 ], [ %2628, %2671 ], [ %2628, %2675 ]
  %2684 = phi i32 [ %2610, %2679 ], [ %1428, %2667 ], [ %1428, %2671 ], [ %1428, %2675 ]
  %2685 = phi i32 [ %2611, %2679 ], [ %1427, %2667 ], [ %1427, %2671 ], [ %1427, %2675 ]
  %2686 = phi i8 [ %2665, %2679 ], [ %1426, %2667 ], [ %1426, %2671 ], [ %1426, %2675 ]
  %2687 = phi double [ %2608, %2679 ], [ %1425, %2667 ], [ %1425, %2671 ], [ %1425, %2675 ]
  %2688 = icmp slt i8 %2683, 0
  br i1 %2688, label %2689, label %2691

2689:                                             ; preds = %2682
  %2690 = load i8*, i8** %1398, align 8, !noalias !21
  call void @_ZdlPv(i8* %2690) #14
  br label %2691

2691:                                             ; preds = %2689, %2682
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1280) #12, !noalias !21
  %2692 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1424, i64 1
  %2693 = icmp eq %"class.blink::(anonymous namespace)::DeviceContainer"* %2692, %1277
  br i1 %2693, label %1400, label %1423

2694:                                             ; preds = %1400, %1420
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1273) #12, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1272)
  %2695 = call dereferenceable(72) %"class.blink::AudioCaptureSettings"* @_ZN5blink20AudioCaptureSettingsaSEOS0_(%"class.blink::AudioCaptureSettings"* nonnull %84, %"class.blink::AudioCaptureSettings"* dereferenceable(72) %1413) #12
  %2696 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %85, i64 0, i32 0, i32 1, i32 0, i32 1
  %2697 = bitcast %"class.std::__1::basic_string"* %2696 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2698 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2697, i64 0, i32 1, i32 0
  %2699 = load i8, i8* %2698, align 1
  %2700 = icmp slt i8 %2699, 0
  br i1 %2700, label %2701, label %2704

2701:                                             ; preds = %2694
  %2702 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2696, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2703 = load i8*, i8** %2702, align 8
  call void @_ZdlPv(i8* %2703) #14
  br label %2704

2704:                                             ; preds = %2694, %2701
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %1257) #12
  call void @_ZN5blink20AudioCaptureSettingsC1EOS0_(%"class.blink::AudioCaptureSettings"* %0, %"class.blink::AudioCaptureSettings"* nonnull dereferenceable(72) %84) #12
  %2705 = getelementptr inbounds %"class.blink::AudioCaptureSettings", %"class.blink::AudioCaptureSettings"* %84, i64 0, i32 1
  %2706 = bitcast %"class.std::__1::basic_string"* %2705 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2707 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2706, i64 0, i32 1, i32 0
  %2708 = load i8, i8* %2707, align 1
  %2709 = icmp slt i8 %2708, 0
  br i1 %2709, label %2710, label %2713

2710:                                             ; preds = %2704
  %2711 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2705, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2712 = load i8*, i8** %2711, align 8
  call void @_ZdlPv(i8* %2712) #14
  br label %2713

2713:                                             ; preds = %2704, %2710
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1256) #12
  br label %3143

2714:                                             ; preds = %1238, %3140
  %2715 = phi %"struct.blink::MediaTrackConstraintSetPlatform"* [ %1232, %1238 ], [ %3141, %3140 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1239) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1254, i8 -86, i64 40, i1 false)
  %2716 = load i8, i8* %1244, align 1
  %2717 = icmp slt i8 %2716, 0
  br i1 %2717, label %2719, label %2718

2718:                                             ; preds = %2714
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1239, i8* nonnull align 8 %185, i64 24, i1 false) #12
  br label %2722

2719:                                             ; preds = %2714
  %2720 = load i8*, i8** %186, align 8
  %2721 = load i64, i64* %187, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %1245, i8* %2720, i64 %2721) #12
  br label %2722

2722:                                             ; preds = %2719, %2718
  %2723 = load i32, i32* %189, align 8
  store %"class.blink::(anonymous namespace)::DeviceContainer"* null, %"class.blink::(anonymous namespace)::DeviceContainer"** %1247, align 8
  store i32 0, i32* %1241, align 8
  %2724 = icmp eq i32 %2723, 0
  br i1 %2724, label %2727, label %2725

2725:                                             ; preds = %2722
  call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_115DeviceContainerENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.79"* %1248, i32 %2723) #12
  %2726 = load %"class.blink::(anonymous namespace)::DeviceContainer"*, %"class.blink::(anonymous namespace)::DeviceContainer"** %1247, align 8
  br label %2727

2727:                                             ; preds = %2725, %2722
  %2728 = phi %"class.blink::(anonymous namespace)::DeviceContainer"* [ null, %2722 ], [ %2726, %2725 ]
  %2729 = load i32, i32* %190, align 4
  store i32 %2729, i32* %1242, align 4
  %2730 = load %"class.blink::(anonymous namespace)::DeviceContainer"*, %"class.blink::(anonymous namespace)::DeviceContainer"** %188, align 8
  %2731 = zext i32 %2729 to i64
  %2732 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2730, i64 %2731
  %2733 = icmp eq i32 %2729, 0
  br i1 %2733, label %3099, label %2734

2734:                                             ; preds = %2727, %3095
  %2735 = phi %"class.blink::(anonymous namespace)::DeviceContainer"* [ %3096, %3095 ], [ %2728, %2727 ]
  %2736 = phi %"class.blink::(anonymous namespace)::DeviceContainer"* [ %3097, %3095 ], [ %2730, %2727 ]
  %2737 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 0
  %2738 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 0
  call void @_ZN5media15AudioParametersC1ERKS0_(%"class.media::AudioParameters"* %2737, %"class.media::AudioParameters"* dereferenceable(64) %2738) #12
  %2739 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 1, i32 0, i32 0
  %2740 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 1, i32 0, i32 0
  %2741 = load i8, i8* %2740, align 8, !range !3
  store i8 %2741, i8* %2739, align 8
  %2742 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 1, i32 0, i32 1
  %2743 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %2744 = load i32, i32* %2743, align 8
  %2745 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %2742, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %2745, align 8
  %2746 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %2746, align 8
  %2747 = icmp eq i32 %2744, 0
  br i1 %2747, label %2757, label %2748

2748:                                             ; preds = %2734
  %2749 = zext i32 %2744 to i64
  %2750 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEmm(i64 %2749) #12
  %2751 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %2750, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEPKcv, i64 0, i64 0)) #12
  %2752 = ptrtoint i8* %2751 to i64
  %2753 = bitcast %"class.WTF::Vector.80"* %2742 to i64*
  store atomic i64 %2752, i64* %2753 monotonic, align 8
  %2754 = udiv i64 %2750, 24
  %2755 = trunc i64 %2754 to i32
  store i32 %2755, i32* %2746, align 8
  %2756 = bitcast i8* %2751 to %"class.std::__1::basic_string"*
  br label %2757

2757:                                             ; preds = %2748, %2734
  %2758 = phi %"class.std::__1::basic_string"* [ null, %2734 ], [ %2756, %2748 ]
  %2759 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %2760 = load i32, i32* %2759, align 4
  %2761 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 2
  store i32 %2760, i32* %2761, align 4
  %2762 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %2763 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2762, align 8
  %2764 = load i32, i32* %2759, align 4
  %2765 = zext i32 %2764 to i64
  %2766 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2763, i64 %2765
  %2767 = icmp eq i32 %2764, 0
  br i1 %2767, label %2787, label %2768

2768:                                             ; preds = %2757, %2783
  %2769 = phi %"class.std::__1::basic_string"* [ %2784, %2783 ], [ %2758, %2757 ]
  %2770 = phi %"class.std::__1::basic_string"* [ %2785, %2783 ], [ %2763, %2757 ]
  %2771 = bitcast %"class.std::__1::basic_string"* %2770 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2772 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2771, i64 0, i32 1, i32 0
  %2773 = load i8, i8* %2772, align 1
  %2774 = icmp slt i8 %2773, 0
  br i1 %2774, label %2778, label %2775

2775:                                             ; preds = %2768
  %2776 = bitcast %"class.std::__1::basic_string"* %2769 to i8*
  %2777 = bitcast %"class.std::__1::basic_string"* %2770 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2776, i8* align 8 %2777, i64 24, i1 false) #12
  br label %2783

2778:                                             ; preds = %2768
  %2779 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2770, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2780 = load i8*, i8** %2779, align 8
  %2781 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2770, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2782 = load i64, i64* %2781, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %2769, i8* %2780, i64 %2782) #12
  br label %2783

2783:                                             ; preds = %2778, %2775
  %2784 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2769, i64 1
  %2785 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2770, i64 1
  %2786 = icmp eq %"class.std::__1::basic_string"* %2785, %2766
  br i1 %2786, label %2787, label %2768

2787:                                             ; preds = %2783, %2757
  %2788 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 2, i32 0, i32 0
  %2789 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 2, i32 0, i32 0
  %2790 = load i8, i8* %2789, align 8, !range !3
  store i8 %2790, i8* %2788, align 8
  %2791 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 2, i32 0, i32 1
  %2792 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %2793 = load i32, i32* %2792, align 8
  %2794 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %2791, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %2794, align 8
  %2795 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %2795, align 8
  %2796 = icmp eq i32 %2793, 0
  br i1 %2796, label %2806, label %2797

2797:                                             ; preds = %2787
  %2798 = zext i32 %2793 to i64
  %2799 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEmm(i64 %2798) #12
  %2800 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %2799, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEPKcv, i64 0, i64 0)) #12
  %2801 = ptrtoint i8* %2800 to i64
  %2802 = bitcast %"class.WTF::Vector.80"* %2791 to i64*
  store atomic i64 %2801, i64* %2802 monotonic, align 8
  %2803 = udiv i64 %2799, 24
  %2804 = trunc i64 %2803 to i32
  store i32 %2804, i32* %2795, align 8
  %2805 = bitcast i8* %2800 to %"class.std::__1::basic_string"*
  br label %2806

2806:                                             ; preds = %2797, %2787
  %2807 = phi %"class.std::__1::basic_string"* [ null, %2787 ], [ %2805, %2797 ]
  %2808 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %2809 = load i32, i32* %2808, align 4
  %2810 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  store i32 %2809, i32* %2810, align 4
  %2811 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %2812 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2811, align 8
  %2813 = load i32, i32* %2808, align 4
  %2814 = zext i32 %2813 to i64
  %2815 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2812, i64 %2814
  %2816 = icmp eq i32 %2813, 0
  br i1 %2816, label %2836, label %2817

2817:                                             ; preds = %2806, %2832
  %2818 = phi %"class.std::__1::basic_string"* [ %2833, %2832 ], [ %2807, %2806 ]
  %2819 = phi %"class.std::__1::basic_string"* [ %2834, %2832 ], [ %2812, %2806 ]
  %2820 = bitcast %"class.std::__1::basic_string"* %2819 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2821 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2820, i64 0, i32 1, i32 0
  %2822 = load i8, i8* %2821, align 1
  %2823 = icmp slt i8 %2822, 0
  br i1 %2823, label %2827, label %2824

2824:                                             ; preds = %2817
  %2825 = bitcast %"class.std::__1::basic_string"* %2818 to i8*
  %2826 = bitcast %"class.std::__1::basic_string"* %2819 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2825, i8* align 8 %2826, i64 24, i1 false) #12
  br label %2832

2827:                                             ; preds = %2817
  %2828 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2819, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2829 = load i8*, i8** %2828, align 8
  %2830 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2819, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2831 = load i64, i64* %2830, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %2818, i8* %2829, i64 %2831) #12
  br label %2832

2832:                                             ; preds = %2827, %2824
  %2833 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2818, i64 1
  %2834 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2819, i64 1
  %2835 = icmp eq %"class.std::__1::basic_string"* %2834, %2815
  br i1 %2835, label %2836, label %2817

2836:                                             ; preds = %2832, %2806
  %2837 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 3, i32 0, i64 0, i32 0, i32 0
  %2838 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 3, i32 0, i64 0, i32 0, i32 0
  %2839 = load i8, i8* %2838, align 8, !range !3
  store i8 %2839, i8* %2837, align 8
  %2840 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1
  %2841 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %2842 = load i32, i32* %2841, align 8
  %2843 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %2840, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %2843, align 8
  %2844 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %2844, align 8
  %2845 = icmp eq i32 %2842, 0
  br i1 %2845, label %2853, label %2846

2846:                                             ; preds = %2836
  %2847 = zext i32 %2842 to i64
  %2848 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %2847) #12
  %2849 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %2848, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %2850 = ptrtoint i8* %2849 to i64
  %2851 = bitcast %"class.WTF::Vector.86"* %2840 to i64*
  store atomic i64 %2850, i64* %2851 monotonic, align 8
  %2852 = trunc i64 %2848 to i32
  store i32 %2852, i32* %2844, align 8
  br label %2853

2853:                                             ; preds = %2846, %2836
  %2854 = phi i8* [ null, %2836 ], [ %2849, %2846 ]
  %2855 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %2856 = load i32, i32* %2855, align 4
  %2857 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  store i32 %2856, i32* %2857, align 4
  %2858 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %2859 = load i8*, i8** %2858, align 8
  %2860 = icmp ne i8* %2854, null
  %2861 = icmp ne i8* %2859, null
  %2862 = and i1 %2860, %2861
  br i1 %2862, label %2863, label %2866, !prof !4

2863:                                             ; preds = %2853
  %2864 = load i32, i32* %2855, align 4
  %2865 = zext i32 %2864 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2854, i8* nonnull align 1 %2859, i64 %2865, i1 false) #12
  br label %2866

2866:                                             ; preds = %2863, %2853
  %2867 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 3, i32 0, i64 1, i32 0, i32 0
  %2868 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 3, i32 0, i64 1, i32 0, i32 0
  %2869 = load i8, i8* %2868, align 8, !range !3
  store i8 %2869, i8* %2867, align 8
  %2870 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1
  %2871 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %2872 = load i32, i32* %2871, align 8
  %2873 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %2870, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %2873, align 8
  %2874 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %2874, align 8
  %2875 = icmp eq i32 %2872, 0
  br i1 %2875, label %2883, label %2876

2876:                                             ; preds = %2866
  %2877 = zext i32 %2872 to i64
  %2878 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %2877) #12
  %2879 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %2878, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %2880 = ptrtoint i8* %2879 to i64
  %2881 = bitcast %"class.WTF::Vector.86"* %2870 to i64*
  store atomic i64 %2880, i64* %2881 monotonic, align 8
  %2882 = trunc i64 %2878 to i32
  store i32 %2882, i32* %2874, align 8
  br label %2883

2883:                                             ; preds = %2876, %2866
  %2884 = phi i8* [ null, %2866 ], [ %2879, %2876 ]
  %2885 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %2886 = load i32, i32* %2885, align 4
  %2887 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 2
  store i32 %2886, i32* %2887, align 4
  %2888 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %2889 = load i8*, i8** %2888, align 8
  %2890 = icmp ne i8* %2884, null
  %2891 = icmp ne i8* %2889, null
  %2892 = and i1 %2890, %2891
  br i1 %2892, label %2893, label %2896, !prof !4

2893:                                             ; preds = %2883
  %2894 = load i32, i32* %2885, align 4
  %2895 = zext i32 %2894 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2884, i8* nonnull align 1 %2889, i64 %2895, i1 false) #12
  br label %2896

2896:                                             ; preds = %2893, %2883
  %2897 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 4
  %2898 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 4, i32 0, i32 0, i32 1
  %2899 = load i32, i32* %2898, align 8
  %2900 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %2897, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* null, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %2900, align 8
  %2901 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 4, i32 0, i32 0, i32 1
  store i32 0, i32* %2901, align 8
  %2902 = icmp eq i32 %2899, 0
  br i1 %2902, label %2906, label %2903

2903:                                             ; preds = %2896
  %2904 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %2897, i64 0, i32 0, i32 0
  call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_124ProcessingBasedContainerENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.93"* %2904, i32 %2899) #12
  %2905 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %2900, align 8
  br label %2906

2906:                                             ; preds = %2903, %2896
  %2907 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ null, %2896 ], [ %2905, %2903 ]
  %2908 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 4, i32 0, i32 0, i32 2
  %2909 = load i32, i32* %2908, align 4
  %2910 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 %2909, i32* %2910, align 4
  %2911 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 0, i32 4, i32 0, i32 0, i32 0
  %2912 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %2911, align 8
  %2913 = load i32, i32* %2908, align 4
  %2914 = zext i32 %2913 to i64
  %2915 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2912, i64 %2914
  %2916 = icmp eq i32 %2913, 0
  br i1 %2916, label %3095, label %2917

2917:                                             ; preds = %2906, %3089
  %2918 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ %3092, %3089 ], [ %2907, %2906 ]
  %2919 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ %3093, %3089 ], [ %2912, %2906 ]
  %2920 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 0
  %2921 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 0
  %2922 = load i32, i32* %2921, align 8
  store i32 %2922, i32* %2920, align 8
  br label %2923

2923:                                             ; preds = %2954, %2917
  %2924 = phi i64 [ 0, %2917 ], [ %2955, %2954 ]
  %2925 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 1, i32 0, i64 %2924, i32 0, i32 0
  %2926 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 1, i32 0, i64 %2924, i32 0, i32 0
  %2927 = load i8, i8* %2926, align 8, !range !3
  store i8 %2927, i8* %2925, align 8
  %2928 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 1, i32 0, i64 %2924, i32 0, i32 1
  %2929 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 1, i32 0, i64 %2924, i32 0, i32 1, i32 0, i32 0, i32 1
  %2930 = load i32, i32* %2929, align 8
  %2931 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %2928, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %2931, align 8
  %2932 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 1, i32 0, i64 %2924, i32 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %2932, align 8
  %2933 = icmp eq i32 %2930, 0
  br i1 %2933, label %2941, label %2934

2934:                                             ; preds = %2923
  %2935 = zext i32 %2930 to i64
  %2936 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %2935) #12
  %2937 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %2936, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %2938 = ptrtoint i8* %2937 to i64
  %2939 = bitcast %"class.WTF::Vector.86"* %2928 to i64*
  store atomic i64 %2938, i64* %2939 monotonic, align 8
  %2940 = trunc i64 %2936 to i32
  store i32 %2940, i32* %2932, align 8
  br label %2941

2941:                                             ; preds = %2934, %2923
  %2942 = phi i8* [ null, %2923 ], [ %2937, %2934 ]
  %2943 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 1, i32 0, i64 %2924, i32 0, i32 1, i32 0, i32 0, i32 2
  %2944 = load i32, i32* %2943, align 4
  %2945 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 1, i32 0, i64 %2924, i32 0, i32 1, i32 0, i32 0, i32 2
  store i32 %2944, i32* %2945, align 4
  %2946 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 1, i32 0, i64 %2924, i32 0, i32 1, i32 0, i32 0, i32 0
  %2947 = load i8*, i8** %2946, align 8
  %2948 = icmp ne i8* %2942, null
  %2949 = icmp ne i8* %2947, null
  %2950 = and i1 %2948, %2949
  br i1 %2950, label %2951, label %2954, !prof !4

2951:                                             ; preds = %2941
  %2952 = load i32, i32* %2943, align 4
  %2953 = zext i32 %2952 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2942, i8* nonnull align 1 %2947, i64 %2953, i1 false) #12
  br label %2954

2954:                                             ; preds = %2951, %2941
  %2955 = add nuw nsw i64 %2924, 1
  %2956 = icmp eq i64 %2955, 5
  br i1 %2956, label %2957, label %2923

2957:                                             ; preds = %2954
  %2958 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 2, i32 0, i32 0
  %2959 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 2, i32 0, i32 0
  %2960 = load i8, i8* %2959, align 8, !range !3
  store i8 %2960, i8* %2958, align 8
  %2961 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 2, i32 0, i32 1
  %2962 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %2963 = load i32, i32* %2962, align 8
  %2964 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %2961, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %2964, align 8
  %2965 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %2965, align 8
  %2966 = icmp eq i32 %2963, 0
  br i1 %2966, label %2974, label %2967

2967:                                             ; preds = %2957
  %2968 = zext i32 %2963 to i64
  %2969 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %2968) #12
  %2970 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %2969, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %2971 = ptrtoint i8* %2970 to i64
  %2972 = bitcast %"class.WTF::Vector.86"* %2961 to i64*
  store atomic i64 %2971, i64* %2972 monotonic, align 8
  %2973 = trunc i64 %2969 to i32
  store i32 %2973, i32* %2965, align 8
  br label %2974

2974:                                             ; preds = %2967, %2957
  %2975 = phi i8* [ null, %2957 ], [ %2970, %2967 ]
  %2976 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %2977 = load i32, i32* %2976, align 4
  %2978 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  store i32 %2977, i32* %2978, align 4
  %2979 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %2980 = load i8*, i8** %2979, align 8
  %2981 = icmp ne i8* %2975, null
  %2982 = icmp ne i8* %2980, null
  %2983 = and i1 %2981, %2982
  br i1 %2983, label %2984, label %2987, !prof !4

2984:                                             ; preds = %2974
  %2985 = load i32, i32* %2976, align 4
  %2986 = zext i32 %2985 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2975, i8* nonnull align 1 %2980, i64 %2986, i1 false) #12
  br label %2987

2987:                                             ; preds = %2984, %2974
  %2988 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 2, i32 1, i32 0
  %2989 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 2, i32 1, i32 0
  %2990 = load i8, i8* %2989, align 8, !range !3
  store i8 %2990, i8* %2988, align 8
  %2991 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 2, i32 1, i32 1
  %2992 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 1
  %2993 = load i32, i32* %2992, align 8
  %2994 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %2991, i64 0, i32 0, i32 0, i32 0
  store i32* null, i32** %2994, align 8
  %2995 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %2995, align 8
  %2996 = icmp eq i32 %2993, 0
  br i1 %2996, label %3006, label %2997

2997:                                             ; preds = %2987
  %2998 = zext i32 %2993 to i64
  %2999 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEmm(i64 %2998) #12
  %3000 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %2999, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEPKcv, i64 0, i64 0)) #12
  %3001 = ptrtoint i8* %3000 to i64
  %3002 = bitcast %"class.WTF::Vector.96"* %2991 to i64*
  store atomic i64 %3001, i64* %3002 monotonic, align 8
  %3003 = lshr i64 %2999, 2
  %3004 = trunc i64 %3003 to i32
  store i32 %3004, i32* %2995, align 8
  %3005 = icmp ne i8* %3000, null
  br label %3006

3006:                                             ; preds = %2997, %2987
  %3007 = phi i8* [ null, %2987 ], [ %3000, %2997 ]
  %3008 = phi i1 [ false, %2987 ], [ %3005, %2997 ]
  %3009 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2
  %3010 = load i32, i32* %3009, align 4
  %3011 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2
  store i32 %3010, i32* %3011, align 4
  %3012 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0
  %3013 = load i32*, i32** %3012, align 8
  %3014 = icmp ne i32* %3013, null
  %3015 = and i1 %3008, %3014
  br i1 %3015, label %3016, label %3021, !prof !4

3016:                                             ; preds = %3006
  %3017 = load i32, i32* %3009, align 4
  %3018 = zext i32 %3017 to i64
  %3019 = bitcast i32* %3013 to i8*
  %3020 = shl nuw nsw i64 %3018, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %3007, i8* nonnull align 4 %3019, i64 %3020, i1 false) #12
  br label %3021

3021:                                             ; preds = %3016, %3006
  %3022 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 2, i32 2
  %3023 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 2, i32 2
  call void @_ZN5media15AudioParametersC1ERKS0_(%"class.media::AudioParameters"* %3022, %"class.media::AudioParameters"* dereferenceable(64) %3023) #12
  %3024 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 2, i32 3
  %3025 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 2, i32 3
  %3026 = load i8, i8* %3025, align 8, !range !3
  store i8 %3026, i8* %3024, align 8
  %3027 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 3, i32 0, i32 0
  %3028 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 3, i32 0, i32 0
  %3029 = load i8, i8* %3028, align 8, !range !3
  store i8 %3029, i8* %3027, align 8
  %3030 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 3, i32 0, i32 1
  %3031 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 1
  %3032 = load i32, i32* %3031, align 8
  %3033 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %3030, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %3033, align 8
  %3034 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %3034, align 8
  %3035 = icmp eq i32 %3032, 0
  br i1 %3035, label %3043, label %3036

3036:                                             ; preds = %3021
  %3037 = zext i32 %3032 to i64
  %3038 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %3037) #12
  %3039 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %3038, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %3040 = ptrtoint i8* %3039 to i64
  %3041 = bitcast %"class.WTF::Vector.86"* %3030 to i64*
  store atomic i64 %3040, i64* %3041 monotonic, align 8
  %3042 = trunc i64 %3038 to i32
  store i32 %3042, i32* %3034, align 8
  br label %3043

3043:                                             ; preds = %3036, %3021
  %3044 = phi i8* [ null, %3021 ], [ %3039, %3036 ]
  %3045 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 2
  %3046 = load i32, i32* %3045, align 4
  %3047 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 2
  store i32 %3046, i32* %3047, align 4
  %3048 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %3049 = load i8*, i8** %3048, align 8
  %3050 = icmp ne i8* %3044, null
  %3051 = icmp ne i8* %3049, null
  %3052 = and i1 %3050, %3051
  br i1 %3052, label %3053, label %3056, !prof !4

3053:                                             ; preds = %3043
  %3054 = load i32, i32* %3045, align 4
  %3055 = zext i32 %3054 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3044, i8* nonnull align 1 %3049, i64 %3055, i1 false) #12
  br label %3056

3056:                                             ; preds = %3053, %3043
  %3057 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3058 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3057, i8* align 8 %3058, i64 16, i1 false) #12
  %3059 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 5
  %3060 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %3061 = load i32, i32* %3060, align 8
  %3062 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer", %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer"* %3059, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32* null, i32** %3062, align 8
  %3063 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %3063, align 8
  %3064 = icmp eq i32 %3061, 0
  br i1 %3064, label %3074, label %3065

3065:                                             ; preds = %3056
  %3066 = zext i32 %3061 to i64
  %3067 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %3066) #12
  %3068 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %3067, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #12
  %3069 = ptrtoint i8* %3068 to i64
  %3070 = bitcast %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer"* %3059 to i64*
  store atomic i64 %3069, i64* %3070 monotonic, align 8
  %3071 = lshr i64 %3067, 2
  %3072 = trunc i64 %3071 to i32
  store i32 %3072, i32* %3063, align 8
  %3073 = icmp ne i8* %3068, null
  br label %3074

3074:                                             ; preds = %3065, %3056
  %3075 = phi i8* [ null, %3056 ], [ %3068, %3065 ]
  %3076 = phi i1 [ false, %3056 ], [ %3073, %3065 ]
  %3077 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %3078 = load i32, i32* %3077, align 4
  %3079 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  store i32 %3078, i32* %3079, align 4
  %3080 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %3081 = load i32*, i32** %3080, align 8
  %3082 = icmp ne i32* %3081, null
  %3083 = and i1 %3076, %3082
  br i1 %3083, label %3084, label %3089, !prof !4

3084:                                             ; preds = %3074
  %3085 = load i32, i32* %3077, align 4
  %3086 = zext i32 %3085 to i64
  %3087 = bitcast i32* %3081 to i8*
  %3088 = shl nuw nsw i64 %3086, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %3075, i8* nonnull align 4 %3087, i64 %3088, i1 false) #12
  br label %3089

3089:                                             ; preds = %3084, %3074
  %3090 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3091 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3090, i8* align 8 %3091, i64 48, i1 false) #12
  %3092 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2918, i64 1
  %3093 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %2919, i64 1
  %3094 = icmp eq %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %3093, %2915
  br i1 %3094, label %3095, label %2917

3095:                                             ; preds = %3089, %2906
  %3096 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2735, i64 1
  %3097 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %2736, i64 1
  %3098 = icmp eq %"class.blink::(anonymous namespace)::DeviceContainer"* %3097, %2732
  br i1 %3098, label %3099, label %2734

3099:                                             ; preds = %3095, %2727
  %3100 = call fastcc i8* @_ZN5blink12_GLOBAL__N_119CandidatesContainer18ApplyConstraintSetERKNS_31MediaTrackConstraintSetPlatformE(%"class.blink::(anonymous namespace)::CandidatesContainer"* nonnull %82, %"struct.blink::MediaTrackConstraintSetPlatform"* dereferenceable(1856) %2715)
  %3101 = icmp eq i8* %3100, null
  br i1 %3101, label %3102, label %3104

3102:                                             ; preds = %3099
  %3103 = load %"class.blink::(anonymous namespace)::DeviceContainer"*, %"class.blink::(anonymous namespace)::DeviceContainer"** %1247, align 8
  br label %3117

3104:                                             ; preds = %3099
  %3105 = load i8, i8* %1244, align 1
  %3106 = icmp slt i8 %3105, 0
  br i1 %3106, label %3107, label %3109

3107:                                             ; preds = %3104
  %3108 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %3108) #14
  br label %3109

3109:                                             ; preds = %3104, %3107
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %185, i8* nonnull align 8 %1239, i64 24, i1 false) #12
  store i8 0, i8* %1250, align 1
  store i8 0, i8* %1239, align 8
  %3110 = load i64, i64* %1251, align 8
  %3111 = load i64, i64* %1252, align 8
  store atomic i64 %3111, i64* %1251 monotonic, align 8
  store atomic i64 %3110, i64* %1252 monotonic, align 8
  %3112 = load i32, i32* %189, align 8
  %3113 = load i32, i32* %1241, align 8
  store i32 %3113, i32* %189, align 8
  store i32 %3112, i32* %1241, align 8
  %3114 = load i32, i32* %190, align 4
  %3115 = load i32, i32* %1242, align 4
  store i32 %3115, i32* %190, align 4
  store i32 %3114, i32* %1242, align 4
  %3116 = inttoptr i64 %3111 to %"class.blink::(anonymous namespace)::DeviceContainer"*
  br label %3117

3117:                                             ; preds = %3102, %3109
  %3118 = phi %"class.blink::(anonymous namespace)::DeviceContainer"* [ %3103, %3102 ], [ %3116, %3109 ]
  %3119 = icmp eq %"class.blink::(anonymous namespace)::DeviceContainer"* %3118, null
  br i1 %3119, label %3135, label %3120, !prof !4

3120:                                             ; preds = %3117
  %3121 = bitcast %"class.blink::(anonymous namespace)::DeviceContainer"* %3118 to i8*
  %3122 = load i32, i32* %1242, align 4
  %3123 = icmp eq i32 %3122, 0
  br i1 %3123, label %3133, label %3124, !prof !2

3124:                                             ; preds = %3120
  %3125 = zext i32 %3122 to i64
  %3126 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %3118, i64 %3125
  br label %3127

3127:                                             ; preds = %3127, %3124
  %3128 = phi %"class.blink::(anonymous namespace)::DeviceContainer"* [ %3129, %3127 ], [ %3118, %3124 ]
  call fastcc void @_ZN5blink12_GLOBAL__N_115DeviceContainerD2Ev(%"class.blink::(anonymous namespace)::DeviceContainer"* %3128) #12
  %3129 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %3128, i64 1
  %3130 = icmp eq %"class.blink::(anonymous namespace)::DeviceContainer"* %3129, %3126
  br i1 %3130, label %3131, label %3127

3131:                                             ; preds = %3127
  store i32 0, i32* %1242, align 4
  %3132 = load i8*, i8** %1253, align 8
  br label %3133

3133:                                             ; preds = %3131, %3120
  %3134 = phi i8* [ %3132, %3131 ], [ %3121, %3120 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3134) #12
  store %"class.blink::(anonymous namespace)::DeviceContainer"* null, %"class.blink::(anonymous namespace)::DeviceContainer"** %1247, align 8
  br label %3135

3135:                                             ; preds = %3133, %3117
  %3136 = load i8, i8* %1250, align 1
  %3137 = icmp slt i8 %3136, 0
  br i1 %3137, label %3138, label %3140

3138:                                             ; preds = %3135
  %3139 = load i8*, i8** %1240, align 8
  call void @_ZdlPv(i8* %3139) #14
  br label %3140

3140:                                             ; preds = %3135, %3138
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1239) #12
  %3141 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %2715, i64 1
  %3142 = icmp eq %"struct.blink::MediaTrackConstraintSetPlatform"* %3141, %1236
  br i1 %3142, label %1255, label %2714

3143:                                             ; preds = %2713, %1228
  %3144 = getelementptr inbounds %"class.WTF::Vector.77", %"class.WTF::Vector.77"* %200, i64 0, i32 0, i32 0, i32 0
  %3145 = load %"class.blink::(anonymous namespace)::DeviceContainer"*, %"class.blink::(anonymous namespace)::DeviceContainer"** %3144, align 8
  %3146 = icmp eq %"class.blink::(anonymous namespace)::DeviceContainer"* %3145, null
  br i1 %3146, label %3163, label %3147, !prof !4

3147:                                             ; preds = %3143
  %3148 = bitcast %"class.blink::(anonymous namespace)::DeviceContainer"* %3145 to i8*
  %3149 = load i32, i32* %190, align 4
  %3150 = icmp eq i32 %3149, 0
  br i1 %3150, label %3161, label %3151, !prof !2

3151:                                             ; preds = %3147
  %3152 = zext i32 %3149 to i64
  %3153 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %3145, i64 %3152
  br label %3154

3154:                                             ; preds = %3154, %3151
  %3155 = phi %"class.blink::(anonymous namespace)::DeviceContainer"* [ %3156, %3154 ], [ %3145, %3151 ]
  call fastcc void @_ZN5blink12_GLOBAL__N_115DeviceContainerD2Ev(%"class.blink::(anonymous namespace)::DeviceContainer"* %3155) #12
  %3156 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %3155, i64 1
  %3157 = icmp eq %"class.blink::(anonymous namespace)::DeviceContainer"* %3156, %3153
  br i1 %3157, label %3158, label %3154

3158:                                             ; preds = %3154
  store i32 0, i32* %190, align 4
  %3159 = bitcast %"class.WTF::Vector.77"* %200 to i8**
  %3160 = load i8*, i8** %3159, align 8
  br label %3161

3161:                                             ; preds = %3158, %3147
  %3162 = phi i8* [ %3160, %3158 ], [ %3148, %3147 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3162) #12
  store %"class.blink::(anonymous namespace)::DeviceContainer"* null, %"class.blink::(anonymous namespace)::DeviceContainer"** %3144, align 8
  br label %3163

3163:                                             ; preds = %3161, %3143
  %3164 = bitcast %"class.blink::(anonymous namespace)::CandidatesContainer"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3164, i64 0, i32 1, i32 0
  %3166 = load i8, i8* %3165, align 1
  %3167 = icmp slt i8 %3166, 0
  br i1 %3167, label %3168, label %3170

3168:                                             ; preds = %3163
  %3169 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %3169) #14
  br label %3170

3170:                                             ; preds = %3163, %3168
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %185) #12
  br i1 %193, label %3171, label %3172

3171:                                             ; preds = %3170
  call void @_ZdlPv(i8* %184) #14
  br label %3172

3172:                                             ; preds = %3170, %3171
  %3173 = load i8, i8* %96, align 1
  %3174 = icmp slt i8 %3173, 0
  br i1 %3174, label %3175, label %3177

3175:                                             ; preds = %3172
  %3176 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %3176) #14
  br label %3177

3177:                                             ; preds = %3172, %3175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #12
  br label %3178

3178:                                             ; preds = %3177, %89
  ret void
}

declare void @_ZN5blink20AudioCaptureSettingsC1Ev(%"class.blink::AudioCaptureSettings"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_120GetMediaStreamSourceERKNS_16MediaConstraintsE(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.blink::MediaConstraints"* dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = tail call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %1) #12
  %8 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %7, i64 0, i32 20, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %2
  %12 = tail call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %1) #12
  %13 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %12, i64 0, i32 20
  %14 = tail call dereferenceable(16) %"class.WTF::Vector.117"* @_ZNK5blink16StringConstraint5IdealEv(%"class.blink::StringConstraint"* %13) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %14, i64 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %11
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  %20 = tail call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %1) #12
  %21 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %20, i64 0, i32 20
  %22 = tail call dereferenceable(16) %"class.WTF::Vector.117"* @_ZNK5blink16StringConstraint5IdealEv(%"class.blink::StringConstraint"* %21) #12
  %23 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.117"* %22, i32 0) #12
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* %23, i32 0) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* nonnull align 8 %19, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  br label %24

24:                                               ; preds = %2, %11, %18
  %25 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %1) #12
  %26 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %25, i64 0, i32 20, i32 1, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %49, label %29

29:                                               ; preds = %24
  %30 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %1) #12
  %31 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %30, i64 0, i32 20
  %32 = call dereferenceable(16) %"class.WTF::Vector.117"* @_ZNK5blink16StringConstraint5ExactEv(%"class.blink::StringConstraint"* %31) #12
  %33 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %32, i64 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %49, label %36

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #12
  %38 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %1) #12
  %39 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %38, i64 0, i32 20
  %40 = call dereferenceable(16) %"class.WTF::Vector.117"* @_ZNK5blink16StringConstraint5ExactEv(%"class.blink::StringConstraint"* %39) #12
  %41 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.117"* %40, i32 0) #12
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* %41, i32 0) #12
  %42 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %36
  %47 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %47) #14
  br label %48

48:                                               ; preds = %46, %36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* nonnull align 8 %37, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #12
  br label %49

49:                                               ; preds = %24, %48, %29
  ret void
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @_ZN5blink12_GLOBAL__N_119CandidatesContainer18ApplyConstraintSetERKNS_31MediaTrackConstraintSetPlatformE(%"class.blink::(anonymous namespace)::CandidatesContainer"* nocapture, %"struct.blink::MediaTrackConstraintSetPlatform"* dereferenceable(1856)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DoubleConstraint", align 8
  %4 = alloca [7 x i8], align 1
  %5 = alloca [7 x i8], align 1
  %6 = alloca %"class.blink::LongConstraint", align 8
  %7 = alloca %"class.blink::LongConstraint", align 8
  %8 = alloca %"class.blink::LongConstraint", align 8
  %9 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %10 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %11 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %12 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %13 = alloca %"class.WTF::Vector.96", align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %18 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %19 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %20 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %21 = alloca %"class.blink::media_constraints::DiscreteSet.95", align 8
  %22 = alloca %"class.blink::media_constraints::DiscreteSet.95", align 8
  %23 = alloca %"class.logging::CheckOpResult", align 8
  %24 = alloca %"class.logging::CheckOpResult", align 8
  %25 = alloca %"class.logging::CheckError", align 8
  %26 = alloca %"class.logging::CheckOpResult", align 8
  %27 = alloca %"class.logging::CheckOpResult", align 8
  %28 = alloca %"class.logging::CheckError", align 8
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %0, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::Vector.77", %"class.WTF::Vector.77"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::(anonymous namespace)::CandidatesContainer", %"class.blink::(anonymous namespace)::CandidatesContainer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %178, label %34

34:                                               ; preds = %2
  %35 = load %"class.blink::(anonymous namespace)::DeviceContainer"*, %"class.blink::(anonymous namespace)::DeviceContainer"** %30, align 8
  %36 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 13
  %37 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 18
  %38 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 14
  %39 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 21
  %40 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %17, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 9
  %42 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %18, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 22
  %44 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %19, i64 0, i32 0
  %45 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %19, i64 0, i32 1
  %46 = bitcast %"class.WTF::Vector.86"* %45 to i64*
  %47 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %19, i64 0, i32 1, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %19, i64 0, i32 1, i32 0, i32 0, i32 2
  %49 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %20, i64 0, i32 0
  %51 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %20, i64 0, i32 1, i32 0, i32 0, i32 2
  %52 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %21, i64 0, i32 0
  %53 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %22, i64 0, i32 0
  %54 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %20, i64 0, i32 1, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %56 = bitcast %"class.WTF::Vector.96"* %13 to i8*
  %57 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %13, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %13, i64 0, i32 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %13, i64 0, i32 0, i32 0, i32 2
  %60 = bitcast i32* %14 to i8*
  %61 = bitcast i32* %15 to i8*
  %62 = bitcast i32* %16 to i8*
  %63 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %22, i64 0, i32 1
  %64 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %22, i64 0, i32 1, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %22, i64 0, i32 1, i32 0, i32 0, i32 2
  %66 = bitcast %"class.WTF::Vector.96"* %63 to i64*
  %67 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %21, i64 0, i32 1
  %68 = bitcast %"class.WTF::Vector.96"* %67 to i64*
  %69 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %21, i64 0, i32 1, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %21, i64 0, i32 1, i32 0, i32 0, i32 2
  %71 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %21, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 9, i32 0, i32 1
  %74 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %18, i64 0, i32 1, i32 0, i32 0, i32 2
  %76 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %17, i64 0, i32 1, i32 0, i32 0, i32 2
  %78 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %9, i64 0, i32 0
  %79 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 24
  %80 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %10, i64 0, i32 0
  %81 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 25
  %82 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %11, i64 0, i32 0
  %83 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %11, i64 0, i32 1
  %84 = bitcast %"class.WTF::Vector.86"* %83 to i64*
  %85 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %11, i64 0, i32 1, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %11, i64 0, i32 1, i32 0, i32 0, i32 2
  %87 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %12, i64 0, i32 0
  %89 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %12, i64 0, i32 1
  %90 = bitcast %"class.WTF::Vector.86"* %89 to i64*
  %91 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %12, i64 0, i32 1, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %12, i64 0, i32 1, i32 0, i32 0, i32 2
  %93 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 25, i32 0, i32 1
  %95 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 24, i32 0, i32 1
  %96 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %10, i64 0, i32 1, i32 0, i32 0, i32 2
  %98 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %9, i64 0, i32 1, i32 0, i32 0, i32 2
  %100 = bitcast %"class.blink::LongConstraint"* %8 to i8*
  %101 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %8, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %8, i64 0, i32 0, i32 1
  %103 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 8, i32 0, i32 1
  %104 = bitcast i8** %102 to i8*
  %105 = bitcast i8** %103 to i8*
  %106 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %8, i64 0, i32 2
  %107 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 8, i32 2
  %108 = bitcast i32* %106 to i8*
  %109 = bitcast i32* %107 to i8*
  %110 = bitcast %"class.blink::LongConstraint"* %8 to i1 (%"class.blink::LongConstraint"*)***
  %111 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14LongConstraintE, i64 0, inrange i32 0, i64 5) to i1 (%"class.blink::LongConstraint"*)**), align 8
  %112 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %8, i64 0, i32 4
  %113 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %8, i64 0, i32 3
  %114 = bitcast %"class.blink::LongConstraint"* %8 to %"class.blink::BaseConstraint"*
  %115 = bitcast %"class.blink::LongConstraint"* %7 to i8*
  %116 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %7, i64 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %7, i64 0, i32 0, i32 1
  %118 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 12, i32 0, i32 1
  %119 = bitcast i8** %117 to i8*
  %120 = bitcast i8** %118 to i8*
  %121 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %7, i64 0, i32 2
  %122 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 12, i32 2
  %123 = bitcast i32* %121 to i8*
  %124 = bitcast i32* %122 to i8*
  %125 = bitcast %"class.blink::LongConstraint"* %7 to i1 (%"class.blink::LongConstraint"*)***
  %126 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %7, i64 0, i32 4
  %127 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %7, i64 0, i32 3
  %128 = bitcast %"class.blink::LongConstraint"* %7 to %"class.blink::BaseConstraint"*
  %129 = bitcast %"class.blink::LongConstraint"* %6 to i8*
  %130 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %6, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %6, i64 0, i32 0, i32 1
  %132 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 7, i32 0, i32 1
  %133 = bitcast i8** %131 to i8*
  %134 = bitcast i8** %132 to i8*
  %135 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %6, i64 0, i32 2
  %136 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 7, i32 2
  %137 = bitcast i32* %135 to i8*
  %138 = bitcast i32* %136 to i8*
  %139 = bitcast %"class.blink::LongConstraint"* %6 to i1 (%"class.blink::LongConstraint"*)***
  %140 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %6, i64 0, i32 4
  %141 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %6, i64 0, i32 3
  %142 = bitcast %"class.blink::LongConstraint"* %6 to %"class.blink::BaseConstraint"*
  %143 = bitcast %"class.blink::DoubleConstraint"* %3 to i8*
  %144 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %3, i64 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %3, i64 0, i32 0, i32 1
  %146 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 11, i32 0, i32 1
  %147 = bitcast i8** %145 to i8*
  %148 = bitcast i8** %146 to i8*
  %149 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %3, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 11, i32 2
  %151 = bitcast double* %149 to i8*
  %152 = bitcast double* %150 to i8*
  %153 = bitcast %"class.blink::DoubleConstraint"* %3 to i1 (%"class.blink::DoubleConstraint"*)***
  %154 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink16DoubleConstraintE, i64 0, inrange i32 0, i64 5) to i1 (%"class.blink::DoubleConstraint"*)**), align 8
  %155 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %3, i64 0, i32 4
  %156 = getelementptr inbounds %"class.blink::DoubleConstraint", %"class.blink::DoubleConstraint"* %3, i64 0, i32 3
  %157 = bitcast %"class.blink::DoubleConstraint"* %3 to %"class.blink::BaseConstraint"*
  %158 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 0
  %159 = getelementptr inbounds [7 x i8], [7 x i8]* %5, i64 0, i64 0
  %160 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 29
  %161 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 23
  %162 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 26
  %163 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 28
  %164 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %1, i64 0, i32 27
  %165 = bitcast %"class.logging::CheckOpResult"* %24 to i8*
  %166 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %24, i64 0, i32 0
  %167 = bitcast %"class.logging::CheckOpResult"* %23 to i8*
  %168 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %23, i64 0, i32 0
  %169 = bitcast %"class.logging::CheckError"* %25 to i8*
  %170 = bitcast %"class.WTF::Vector.77"* %29 to i64*
  %171 = bitcast %"class.logging::CheckOpResult"* %27 to i8*
  %172 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %27, i64 0, i32 0
  %173 = bitcast %"class.logging::CheckOpResult"* %26 to i8*
  %174 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %26, i64 0, i32 0
  %175 = bitcast %"class.logging::CheckError"* %28 to i8*
  br label %182

176:                                              ; preds = %945
  %177 = icmp eq i32 %946, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %2, %176
  %179 = phi i8* [ %947, %176 ], [ null, %2 ]
  br label %180

180:                                              ; preds = %176, %178
  %181 = phi i8* [ %179, %178 ], [ null, %176 ]
  ret i8* %181

182:                                              ; preds = %34, %945
  %183 = phi %"class.blink::(anonymous namespace)::DeviceContainer"* [ %35, %34 ], [ %948, %945 ]
  %184 = phi i8* [ null, %34 ], [ %947, %945 ]
  %185 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %183, i64 0, i32 1
  %186 = call fastcc i8* @_ZN5blink12_GLOBAL__N_115StringContainer18ApplyConstraintSetERKNS_16StringConstraintE(%"class.blink::(anonymous namespace)::StringContainer"* %185, %"class.blink::StringConstraint"* dereferenceable(56) %36) #12
  %187 = icmp eq i8* %186, null
  br i1 %187, label %188, label %903

188:                                              ; preds = %182
  %189 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %183, i64 0, i32 2
  %190 = call fastcc i8* @_ZN5blink12_GLOBAL__N_115StringContainer18ApplyConstraintSetERKNS_16StringConstraintE(%"class.blink::(anonymous namespace)::StringContainer"* %189, %"class.blink::StringConstraint"* dereferenceable(56) %37) #12
  %191 = icmp eq i8* %190, null
  br i1 %191, label %192, label %903

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %183, i64 0, i32 3, i32 0, i64 0
  %194 = call fastcc i8* @_ZN5blink12_GLOBAL__N_116BooleanContainer18ApplyConstraintSetERKNS_17BooleanConstraintE(%"class.blink::(anonymous namespace)::BooleanContainer"* %193, %"class.blink::BooleanConstraint"* dereferenceable(24) %38) #12
  %195 = icmp eq i8* %194, null
  br i1 %195, label %196, label %903

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %183, i64 0, i32 3, i32 0, i64 1
  %198 = call fastcc i8* @_ZN5blink12_GLOBAL__N_116BooleanContainer18ApplyConstraintSetERKNS_17BooleanConstraintE(%"class.blink::(anonymous namespace)::BooleanContainer"* %197, %"class.blink::BooleanConstraint"* dereferenceable(24) %39) #12
  %199 = icmp eq i8* %198, null
  br i1 %199, label %897, label %903

200:                                              ; preds = %897
  %201 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %899, align 8
  %202 = bitcast %"class.WTF::Vector.91"* %898 to i64*
  br label %207

203:                                              ; preds = %889
  %204 = icmp ne i32 %890, 0
  %205 = icmp eq i8* %891, null
  %206 = or i1 %204, %205
  br i1 %206, label %942, label %903

207:                                              ; preds = %889, %200
  %208 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ %201, %200 ], [ %892, %889 ]
  %209 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false) #12
  call void @_ZN5blink17media_constraints21BoolSetFromConstraintERKNS_17BooleanConstraintE(%"class.blink::media_constraints::DiscreteSet.85"* nonnull sret %17, %"class.blink::BooleanConstraint"* dereferenceable(24) %41) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 24, i1 false) #12
  call void @_ZN5blink17media_constraints21BoolSetFromConstraintERKNS_17BooleanConstraintE(%"class.blink::media_constraints::DiscreteSet.85"* nonnull sret %18, %"class.blink::BooleanConstraint"* dereferenceable(24) %43) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #12
  %210 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %209, i64 0, i32 0
  call void @_ZNK5blink17media_constraints11DiscreteSetIbE12IntersectionERKS2_(%"class.blink::media_constraints::DiscreteSet.85"* nonnull sret %19, %"class.blink::media_constraints::DiscreteSet.85"* %210, %"class.blink::media_constraints::DiscreteSet.85"* nonnull dereferenceable(24) %17) #12
  %211 = load i8, i8* %44, align 8, !range !3
  %212 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %209, i64 0, i32 0, i32 0
  store i8 %211, i8* %212, align 8
  %213 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 2, i32 0, i32 1
  %214 = load i64, i64* %46, align 8
  %215 = bitcast %"class.WTF::Vector.86"* %213 to i64*
  %216 = load i64, i64* %215, align 8
  store atomic i64 %216, i64* %46 monotonic, align 8
  store atomic i64 %214, i64* %215 monotonic, align 8
  %217 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = load i32, i32* %47, align 8
  store i32 %219, i32* %217, align 4
  store i32 %218, i32* %47, align 8
  %220 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %221 = load i32, i32* %220, align 4
  %222 = load i32, i32* %48, align 4
  store i32 %222, i32* %220, align 4
  store i32 %221, i32* %48, align 4
  %223 = inttoptr i64 %216 to i8*
  %224 = icmp eq i64 %216, 0
  br i1 %224, label %230, label %225, !prof !4

225:                                              ; preds = %207
  %226 = icmp eq i32 %221, 0
  br i1 %226, label %228, label %227, !prof !2

227:                                              ; preds = %225
  store i32 0, i32* %48, align 4
  br label %228

228:                                              ; preds = %227, %225
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %223) #12
  store i8* null, i8** %49, align 8
  %229 = load i8, i8* %212, align 8, !range !3
  br label %230

230:                                              ; preds = %228, %207
  %231 = phi i8 [ %211, %207 ], [ %229, %228 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #12
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %233, label %238

233:                                              ; preds = %230
  %234 = load i32, i32* %220, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %238

236:                                              ; preds = %233
  %237 = load i8*, i8** %73, align 8
  br label %398

238:                                              ; preds = %233, %230
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false) #12
  call void @_ZNK5blink17media_constraints11DiscreteSetIbE12IntersectionERKS2_(%"class.blink::media_constraints::DiscreteSet.85"* nonnull sret %20, %"class.blink::media_constraints::DiscreteSet.85"* %210, %"class.blink::media_constraints::DiscreteSet.85"* nonnull dereferenceable(24) %18) #12
  %239 = load i8, i8* %50, align 8, !range !3
  %240 = icmp eq i8 %239, 0
  %241 = load i32, i32* %51, align 4
  %242 = icmp eq i32 %241, 0
  %243 = and i1 %240, %242
  br i1 %243, label %244, label %246

244:                                              ; preds = %238
  %245 = load i8*, i8** %73, align 8
  br label %388

246:                                              ; preds = %238
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #12
  %247 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 2, i32 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #12
  %248 = load i32, i32* %54, align 8
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %261, label %250

250:                                              ; preds = %246
  %251 = zext i32 %248 to i64
  %252 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %251) #12
  %253 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %252, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %254 = load i32, i32* %51, align 4
  %255 = load i8*, i8** %55, align 8
  %256 = icmp ne i8* %253, null
  %257 = icmp ne i8* %255, null
  %258 = and i1 %256, %257
  br i1 %258, label %259, label %261, !prof !4

259:                                              ; preds = %250
  %260 = zext i32 %254 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %253, i8* nonnull align 1 %255, i64 %260, i1 false) #12
  br label %261

261:                                              ; preds = %259, %250, %246
  %262 = phi i8* [ %253, %259 ], [ %253, %250 ], [ null, %246 ]
  %263 = phi i32 [ %254, %259 ], [ %254, %250 ], [ %241, %246 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #12, !noalias !41
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 16, i1 false) #12, !noalias !41
  br i1 %240, label %264, label %290

264:                                              ; preds = %261
  %265 = zext i32 %263 to i64
  %266 = getelementptr inbounds i8, i8* %262, i64 %265
  %267 = icmp eq i32 %263, 0
  br i1 %267, label %275, label %268

268:                                              ; preds = %264, %272
  %269 = phi i8* [ %273, %272 ], [ %262, %264 ]
  %270 = load i8, i8* %269, align 1, !range !3, !noalias !41
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %275, label %272

272:                                              ; preds = %268
  %273 = getelementptr inbounds i8, i8* %269, i64 1
  %274 = icmp eq i8* %273, %266
  br i1 %274, label %279, label %268

275:                                              ; preds = %268, %264
  %276 = phi i8* [ %262, %264 ], [ %269, %268 ]
  %277 = icmp eq i8* %276, %266
  br i1 %277, label %279, label %278

278:                                              ; preds = %275
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #12, !noalias !41
  store i32 0, i32* %14, align 4, !noalias !41
  call void @_ZN3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.96"* nonnull %13, i32* nonnull dereferenceable(4) %14) #12, !noalias !41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #12, !noalias !41
  br label %279

279:                                              ; preds = %272, %278, %275
  br i1 %267, label %287, label %280

280:                                              ; preds = %279, %284
  %281 = phi i8* [ %285, %284 ], [ %262, %279 ]
  %282 = load i8, i8* %281, align 1, !range !3, !noalias !41
  %283 = icmp eq i8 %282, 1
  br i1 %283, label %287, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds i8, i8* %281, i64 1
  %286 = icmp eq i8* %285, %266
  br i1 %286, label %315, label %280

287:                                              ; preds = %280, %279
  %288 = phi i8* [ %262, %279 ], [ %281, %280 ]
  %289 = icmp eq i8* %288, %266
  br i1 %289, label %315, label %291

290:                                              ; preds = %261
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #12, !noalias !41
  store i32 0, i32* %14, align 4, !noalias !41
  call void @_ZN3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.96"* nonnull %13, i32* nonnull dereferenceable(4) %14) #12, !noalias !41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #12, !noalias !41
  br label %291

291:                                              ; preds = %290, %287
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #12, !noalias !41
  store i32 1, i32* %15, align 4, !noalias !41
  %292 = load i32, i32* %59, align 4, !noalias !41
  %293 = load i32, i32* %58, align 8, !noalias !41
  %294 = icmp eq i32 %292, %293
  br i1 %294, label %301, label %295, !prof !2

295:                                              ; preds = %291
  %296 = load i32*, i32** %57, align 8, !noalias !41
  %297 = zext i32 %292 to i64
  %298 = getelementptr inbounds i32, i32* %296, i64 %297
  store i32 1, i32* %298, align 4, !noalias !41
  %299 = load i32, i32* %59, align 4, !noalias !41
  %300 = add i32 %299, 1
  store i32 %300, i32* %59, align 4, !noalias !41
  br label %303

301:                                              ; preds = %291
  call void @_ZN3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.96"* nonnull %13, i32* nonnull dereferenceable(4) %15) #12, !noalias !41
  %302 = load i32, i32* %59, align 4, !noalias !41
  br label %303

303:                                              ; preds = %301, %295
  %304 = phi i32 [ %300, %295 ], [ %302, %301 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #12, !noalias !41
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #12, !noalias !41
  store i32 2, i32* %16, align 4, !noalias !41
  %305 = load i32, i32* %58, align 8, !noalias !41
  %306 = icmp eq i32 %304, %305
  br i1 %306, label %313, label %307, !prof !2

307:                                              ; preds = %303
  %308 = load i32*, i32** %57, align 8, !noalias !41
  %309 = zext i32 %304 to i64
  %310 = getelementptr inbounds i32, i32* %308, i64 %309
  store i32 2, i32* %310, align 4, !noalias !41
  %311 = load i32, i32* %59, align 4, !noalias !41
  %312 = add i32 %311, 1
  store i32 %312, i32* %59, align 4, !noalias !41
  br label %314

313:                                              ; preds = %303
  call void @_ZN3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.96"* nonnull %13, i32* nonnull dereferenceable(4) %16) #12, !noalias !41
  br label %314

314:                                              ; preds = %313, %307
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #12, !noalias !41
  br label %315

315:                                              ; preds = %284, %314, %287
  %316 = load i32, i32* %58, align 8, !noalias !41
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %320

318:                                              ; preds = %315
  %319 = load i32, i32* %59, align 4, !noalias !41
  br label %336

320:                                              ; preds = %315
  %321 = zext i32 %316 to i64
  %322 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEmm(i64 %321) #12, !noalias !41
  %323 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %322, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEPKcv, i64 0, i64 0)) #12, !noalias !41
  %324 = ptrtoint i8* %323 to i64
  %325 = lshr i64 %322, 2
  %326 = trunc i64 %325 to i32
  %327 = icmp ne i8* %323, null
  %328 = load i32, i32* %59, align 4, !noalias !41
  %329 = load i32*, i32** %57, align 8, !noalias !41
  %330 = icmp ne i32* %329, null
  %331 = and i1 %327, %330
  br i1 %331, label %332, label %336, !prof !4

332:                                              ; preds = %320
  %333 = zext i32 %328 to i64
  %334 = bitcast i32* %329 to i8*
  %335 = shl nuw nsw i64 %333, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %323, i8* nonnull align 4 %334, i64 %335, i1 false) #12, !noalias !41
  br label %336

336:                                              ; preds = %332, %320, %318
  %337 = phi i32 [ %319, %318 ], [ %328, %320 ], [ %328, %332 ]
  %338 = phi i64 [ 0, %318 ], [ %324, %320 ], [ %324, %332 ]
  %339 = phi i32 [ 0, %318 ], [ %326, %320 ], [ %326, %332 ]
  store i8 0, i8* %53, align 8, !alias.scope !41
  store atomic i64 %338, i64* %66 monotonic, align 8, !alias.scope !41
  store i32 %339, i32* %64, align 8, !alias.scope !41
  store i32 %337, i32* %65, align 4, !alias.scope !41
  %340 = load i32*, i32** %57, align 8, !noalias !41
  %341 = icmp eq i32* %340, null
  %342 = bitcast i32* %340 to i8*
  br i1 %341, label %348, label %343, !prof !4

343:                                              ; preds = %336
  %344 = load i32, i32* %59, align 4, !noalias !41
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %347, label %346, !prof !2

346:                                              ; preds = %343
  store i32 0, i32* %59, align 4, !noalias !41
  br label %347

347:                                              ; preds = %346, %343
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %342) #12, !noalias !41
  store i32* null, i32** %57, align 8, !noalias !41
  br label %348

348:                                              ; preds = %347, %336
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #12, !noalias !41
  call void @_ZNK5blink17media_constraints11DiscreteSetINS_25AudioProcessingProperties20EchoCancellationTypeEE12IntersectionERKS4_(%"class.blink::media_constraints::DiscreteSet.95"* nonnull sret %21, %"class.blink::media_constraints::DiscreteSet.95"* %247, %"class.blink::media_constraints::DiscreteSet.95"* nonnull dereferenceable(24) %22) #12
  %349 = load i8, i8* %52, align 8, !range !3
  %350 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %247, i64 0, i32 0
  store i8 %349, i8* %350, align 8
  %351 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 2, i32 1, i32 1
  %352 = load i64, i64* %68, align 8
  %353 = bitcast %"class.WTF::Vector.96"* %351 to i64*
  %354 = load i64, i64* %353, align 8
  store atomic i64 %354, i64* %68 monotonic, align 8
  store atomic i64 %352, i64* %353 monotonic, align 8
  %355 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 1
  %356 = load i32, i32* %355, align 4
  %357 = load i32, i32* %69, align 8
  store i32 %357, i32* %355, align 4
  store i32 %356, i32* %69, align 8
  %358 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2
  %359 = load i32, i32* %358, align 4
  %360 = load i32, i32* %70, align 4
  store i32 %360, i32* %358, align 4
  store i32 %359, i32* %70, align 4
  %361 = icmp eq i64 %354, 0
  %362 = inttoptr i64 %354 to i8*
  br i1 %361, label %367, label %363, !prof !4

363:                                              ; preds = %348
  %364 = icmp eq i32 %359, 0
  br i1 %364, label %366, label %365, !prof !2

365:                                              ; preds = %363
  store i32 0, i32* %70, align 4
  br label %366

366:                                              ; preds = %365, %363
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %362) #12
  store i32* null, i32** %71, align 8
  br label %367

367:                                              ; preds = %366, %348
  %368 = load i32*, i32** %72, align 8
  %369 = icmp eq i32* %368, null
  %370 = bitcast i32* %368 to i8*
  br i1 %369, label %376, label %371, !prof !4

371:                                              ; preds = %367
  %372 = load i32, i32* %65, align 4
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %375, label %374, !prof !2

374:                                              ; preds = %371
  store i32 0, i32* %65, align 4
  br label %375

375:                                              ; preds = %374, %371
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #12
  store i32* null, i32** %72, align 8
  br label %376

376:                                              ; preds = %375, %367
  %377 = icmp eq i8* %262, null
  br i1 %377, label %379, label %378, !prof !4

378:                                              ; preds = %376
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %262) #12
  br label %379

379:                                              ; preds = %378, %376
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #12
  %380 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 2, i32 1, i32 0
  %381 = load i8, i8* %380, align 8, !range !3
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %383, label %388

383:                                              ; preds = %379
  %384 = load i32, i32* %358, align 4
  %385 = icmp eq i32 %384, 0
  %386 = load i8*, i8** %73, align 8
  %387 = select i1 %385, i8* %386, i8* null
  br label %388

388:                                              ; preds = %383, %379, %244
  %389 = phi i8* [ %245, %244 ], [ null, %379 ], [ %387, %383 ]
  %390 = load i8*, i8** %55, align 8
  %391 = icmp eq i8* %390, null
  br i1 %391, label %397, label %392, !prof !4

392:                                              ; preds = %388
  %393 = load i32, i32* %51, align 4
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %396, label %395, !prof !2

395:                                              ; preds = %392
  store i32 0, i32* %51, align 4
  br label %396

396:                                              ; preds = %395, %392
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %390) #12
  store i8* null, i8** %55, align 8
  br label %397

397:                                              ; preds = %396, %388
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #12
  br label %398

398:                                              ; preds = %397, %236
  %399 = phi i8* [ %237, %236 ], [ %389, %397 ]
  %400 = load i8*, i8** %74, align 8
  %401 = icmp eq i8* %400, null
  br i1 %401, label %407, label %402, !prof !4

402:                                              ; preds = %398
  %403 = load i32, i32* %75, align 4
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %406, label %405, !prof !2

405:                                              ; preds = %402
  store i32 0, i32* %75, align 4
  br label %406

406:                                              ; preds = %405, %402
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %400) #12
  store i8* null, i8** %74, align 8
  br label %407

407:                                              ; preds = %406, %398
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #12
  %408 = load i8*, i8** %76, align 8
  %409 = icmp eq i8* %408, null
  br i1 %409, label %415, label %410, !prof !4

410:                                              ; preds = %407
  %411 = load i32, i32* %77, align 4
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %414, label %413, !prof !2

413:                                              ; preds = %410
  store i32 0, i32* %77, align 4
  br label %414

414:                                              ; preds = %413, %410
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %408) #12
  store i8* null, i8** %76, align 8
  br label %415

415:                                              ; preds = %414, %407
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #12
  %416 = icmp eq i8* %399, null
  br i1 %416, label %417, label %847

417:                                              ; preds = %415
  %418 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 24, i1 false) #12
  call void @_ZN5blink17media_constraints21BoolSetFromConstraintERKNS_17BooleanConstraintE(%"class.blink::media_constraints::DiscreteSet.85"* nonnull sret %9, %"class.blink::BooleanConstraint"* dereferenceable(24) %79) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 24, i1 false) #12
  call void @_ZN5blink17media_constraints21BoolSetFromConstraintERKNS_17BooleanConstraintE(%"class.blink::media_constraints::DiscreteSet.85"* nonnull sret %10, %"class.blink::BooleanConstraint"* dereferenceable(24) %81) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #12
  %419 = getelementptr inbounds %"class.blink::(anonymous namespace)::AutoGainControlContainer", %"class.blink::(anonymous namespace)::AutoGainControlContainer"* %418, i64 0, i32 0
  call void @_ZNK5blink17media_constraints11DiscreteSetIbE12IntersectionERKS2_(%"class.blink::media_constraints::DiscreteSet.85"* nonnull sret %11, %"class.blink::media_constraints::DiscreteSet.85"* %419, %"class.blink::media_constraints::DiscreteSet.85"* nonnull dereferenceable(24) %9) #12
  %420 = load i8, i8* %82, align 8, !range !3
  %421 = getelementptr inbounds %"class.blink::(anonymous namespace)::AutoGainControlContainer", %"class.blink::(anonymous namespace)::AutoGainControlContainer"* %418, i64 0, i32 0, i32 0
  store i8 %420, i8* %421, align 8
  %422 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 3, i32 0, i32 1
  %423 = load i64, i64* %84, align 8
  %424 = bitcast %"class.WTF::Vector.86"* %422 to i64*
  %425 = load i64, i64* %424, align 8
  store atomic i64 %425, i64* %84 monotonic, align 8
  store atomic i64 %423, i64* %424 monotonic, align 8
  %426 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 1
  %427 = load i32, i32* %426, align 4
  %428 = load i32, i32* %85, align 8
  store i32 %428, i32* %426, align 4
  store i32 %427, i32* %85, align 8
  %429 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 2
  %430 = load i32, i32* %429, align 4
  %431 = load i32, i32* %86, align 4
  store i32 %431, i32* %429, align 4
  store i32 %430, i32* %86, align 4
  %432 = inttoptr i64 %425 to i8*
  %433 = icmp eq i64 %425, 0
  br i1 %433, label %439, label %434, !prof !4

434:                                              ; preds = %417
  %435 = icmp eq i32 %430, 0
  br i1 %435, label %437, label %436, !prof !2

436:                                              ; preds = %434
  store i32 0, i32* %86, align 4
  br label %437

437:                                              ; preds = %436, %434
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %432) #12
  store i8* null, i8** %87, align 8
  %438 = load i8, i8* %421, align 8, !range !3
  br label %439

439:                                              ; preds = %437, %417
  %440 = phi i8 [ %420, %417 ], [ %438, %437 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #12
  %441 = icmp eq i8 %440, 0
  br i1 %441, label %442, label %447

442:                                              ; preds = %439
  %443 = load i32, i32* %429, align 4
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %447

445:                                              ; preds = %442
  %446 = load i8*, i8** %95, align 8
  br label %470

447:                                              ; preds = %442, %439
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #12
  call void @_ZNK5blink17media_constraints11DiscreteSetIbE12IntersectionERKS2_(%"class.blink::media_constraints::DiscreteSet.85"* nonnull sret %12, %"class.blink::media_constraints::DiscreteSet.85"* %419, %"class.blink::media_constraints::DiscreteSet.85"* nonnull dereferenceable(24) %10) #12
  %448 = load i8, i8* %88, align 8, !range !3
  store i8 %448, i8* %421, align 8
  %449 = load i64, i64* %90, align 8
  %450 = load i64, i64* %424, align 8
  store atomic i64 %450, i64* %90 monotonic, align 8
  store atomic i64 %449, i64* %424 monotonic, align 8
  %451 = load i32, i32* %426, align 4
  %452 = load i32, i32* %91, align 8
  store i32 %452, i32* %426, align 4
  store i32 %451, i32* %91, align 8
  %453 = load i32, i32* %429, align 4
  %454 = load i32, i32* %92, align 4
  store i32 %454, i32* %429, align 4
  store i32 %453, i32* %92, align 4
  %455 = inttoptr i64 %450 to i8*
  %456 = icmp eq i64 %450, 0
  br i1 %456, label %462, label %457, !prof !4

457:                                              ; preds = %447
  %458 = icmp eq i32 %453, 0
  br i1 %458, label %460, label %459, !prof !2

459:                                              ; preds = %457
  store i32 0, i32* %92, align 4
  br label %460

460:                                              ; preds = %459, %457
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %455) #12
  store i8* null, i8** %93, align 8
  %461 = load i8, i8* %421, align 8, !range !3
  br label %462

462:                                              ; preds = %460, %447
  %463 = phi i8 [ %448, %447 ], [ %461, %460 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #12
  %464 = icmp eq i8 %463, 0
  br i1 %464, label %465, label %470

465:                                              ; preds = %462
  %466 = load i32, i32* %429, align 4
  %467 = icmp eq i32 %466, 0
  %468 = load i8*, i8** %94, align 8
  %469 = select i1 %467, i8* %468, i8* null
  br label %470

470:                                              ; preds = %465, %462, %445
  %471 = phi i8* [ %446, %445 ], [ null, %462 ], [ %469, %465 ]
  %472 = load i8*, i8** %96, align 8
  %473 = icmp eq i8* %472, null
  br i1 %473, label %479, label %474, !prof !4

474:                                              ; preds = %470
  %475 = load i32, i32* %97, align 4
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %478, label %477, !prof !2

477:                                              ; preds = %474
  store i32 0, i32* %97, align 4
  br label %478

478:                                              ; preds = %477, %474
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %472) #12
  store i8* null, i8** %96, align 8
  br label %479

479:                                              ; preds = %478, %470
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #12
  %480 = load i8*, i8** %98, align 8
  %481 = icmp eq i8* %480, null
  br i1 %481, label %487, label %482, !prof !4

482:                                              ; preds = %479
  %483 = load i32, i32* %99, align 4
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %486, label %485, !prof !2

485:                                              ; preds = %482
  store i32 0, i32* %99, align 4
  br label %486

486:                                              ; preds = %485, %482
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %480) #12
  store i8* null, i8** %98, align 8
  br label %487

487:                                              ; preds = %486, %479
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #12
  %488 = icmp eq i8* %471, null
  br i1 %488, label %489, label %847

489:                                              ; preds = %487
  %490 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 4
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %100) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 9, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14LongConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 17, i1 false) #12
  %491 = call zeroext i1 %111(%"class.blink::LongConstraint"* nonnull %8) #12
  br i1 %491, label %497, label %492

492:                                              ; preds = %489
  %493 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %110, align 8
  %494 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %493, i64 5
  %495 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %494, align 8
  %496 = call zeroext i1 %495(%"class.blink::LongConstraint"* nonnull %8) #12
  br i1 %496, label %497, label %505

497:                                              ; preds = %492, %489
  %498 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %110, align 8
  %499 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %498, i64 5
  %500 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %499, align 8
  %501 = call zeroext i1 %500(%"class.blink::LongConstraint"* nonnull %8) #12
  %502 = load i32, i32* %112, align 4
  %503 = load i32, i32* %106, align 4
  %504 = select i1 %501, i32 %502, i32 %503
  br label %505

505:                                              ; preds = %497, %492
  %506 = phi i64 [ 1, %497 ], [ 0, %492 ]
  %507 = phi i32 [ %504, %497 ], [ 0, %492 ]
  %508 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %110, align 8
  %509 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %508, i64 4
  %510 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %509, align 8
  %511 = call zeroext i1 %510(%"class.blink::LongConstraint"* nonnull %8) #12
  br i1 %511, label %517, label %512

512:                                              ; preds = %505
  %513 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %110, align 8
  %514 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %513, i64 5
  %515 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %514, align 8
  %516 = call zeroext i1 %515(%"class.blink::LongConstraint"* nonnull %8) #12
  br i1 %516, label %517, label %525

517:                                              ; preds = %512, %505
  %518 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %110, align 8
  %519 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %518, i64 5
  %520 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %519, align 8
  %521 = call zeroext i1 %520(%"class.blink::LongConstraint"* nonnull %8) #12
  %522 = load i32, i32* %112, align 4
  %523 = load i32, i32* %113, align 8
  %524 = select i1 %521, i32 %522, i32 %523
  br label %525

525:                                              ; preds = %517, %512
  %526 = phi i32 [ %524, %517 ], [ 0, %512 ]
  %527 = phi i64 [ 1, %517 ], [ 0, %512 ]
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %114) #12
  %528 = bitcast %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %490 to i32*
  %529 = load i32, i32* %528, align 4
  %530 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %531 = load i32, i32* %530, align 4
  %532 = icmp eq i64 %506, 0
  br i1 %532, label %539, label %533

533:                                              ; preds = %525
  %534 = trunc i32 %529 to i8
  %535 = icmp eq i8 %534, 0
  %536 = icmp slt i32 %531, %507
  %537 = or i1 %535, %536
  %538 = select i1 %537, i32 %507, i32 %531
  br label %539

539:                                              ; preds = %533, %525
  %540 = phi i32 [ 1, %533 ], [ %529, %525 ]
  %541 = phi i32 [ %538, %533 ], [ %531, %525 ]
  %542 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 4, i32 0, i32 1
  %543 = bitcast %"class.absl::optional.72"* %542 to i32*
  %544 = load i32, i32* %543, align 4
  %545 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %546 = load i32, i32* %545, align 4
  %547 = icmp eq i64 %527, 0
  br i1 %547, label %554, label %548

548:                                              ; preds = %539
  %549 = trunc i32 %544 to i8
  %550 = icmp eq i8 %549, 0
  %551 = icmp sgt i32 %546, %526
  %552 = or i1 %550, %551
  %553 = select i1 %552, i32 %526, i32 %546
  br label %554

554:                                              ; preds = %548, %539
  %555 = phi i32 [ 1, %548 ], [ %544, %539 ]
  %556 = phi i32 [ %553, %548 ], [ %546, %539 ]
  %557 = zext i32 %541 to i64
  %558 = shl nuw i64 %557, 32
  %559 = zext i32 %540 to i64
  %560 = or i64 %558, %559
  %561 = zext i32 %556 to i64
  %562 = shl nuw i64 %561, 32
  %563 = zext i32 %555 to i64
  %564 = or i64 %562, %563
  %565 = bitcast %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %490 to i64*
  store i64 %560, i64* %565, align 4
  %566 = bitcast %"class.absl::optional.72"* %542 to i64*
  store i64 %564, i64* %566, align 4
  %567 = trunc i32 %555 to i8
  %568 = icmp ne i8 %567, 0
  %569 = trunc i32 %540 to i8
  %570 = icmp ne i8 %569, 0
  %571 = and i1 %570, %568
  %572 = icmp slt i32 %556, %541
  %573 = and i1 %572, %571
  br i1 %573, label %575, label %574

574:                                              ; preds = %554
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %100) #12
  br label %578

575:                                              ; preds = %554
  %576 = load i8*, i8** %103, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %100) #12
  %577 = icmp eq i8* %576, null
  br i1 %577, label %578, label %847

578:                                              ; preds = %575, %574
  %579 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 5
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %115) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 9, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14LongConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %123, i8* align 4 %124, i64 17, i1 false) #12
  %580 = call zeroext i1 %111(%"class.blink::LongConstraint"* nonnull %7) #12
  br i1 %580, label %586, label %581

581:                                              ; preds = %578
  %582 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %125, align 8
  %583 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %582, i64 5
  %584 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %583, align 8
  %585 = call zeroext i1 %584(%"class.blink::LongConstraint"* nonnull %7) #12
  br i1 %585, label %586, label %594

586:                                              ; preds = %581, %578
  %587 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %125, align 8
  %588 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %587, i64 5
  %589 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %588, align 8
  %590 = call zeroext i1 %589(%"class.blink::LongConstraint"* nonnull %7) #12
  %591 = load i32, i32* %126, align 4
  %592 = load i32, i32* %121, align 4
  %593 = select i1 %590, i32 %591, i32 %592
  br label %594

594:                                              ; preds = %586, %581
  %595 = phi i64 [ 1, %586 ], [ 0, %581 ]
  %596 = phi i32 [ %593, %586 ], [ 0, %581 ]
  %597 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %125, align 8
  %598 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %597, i64 4
  %599 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %598, align 8
  %600 = call zeroext i1 %599(%"class.blink::LongConstraint"* nonnull %7) #12
  br i1 %600, label %606, label %601

601:                                              ; preds = %594
  %602 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %125, align 8
  %603 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %602, i64 5
  %604 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %603, align 8
  %605 = call zeroext i1 %604(%"class.blink::LongConstraint"* nonnull %7) #12
  br i1 %605, label %606, label %614

606:                                              ; preds = %601, %594
  %607 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %125, align 8
  %608 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %607, i64 5
  %609 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %608, align 8
  %610 = call zeroext i1 %609(%"class.blink::LongConstraint"* nonnull %7) #12
  %611 = load i32, i32* %126, align 4
  %612 = load i32, i32* %127, align 8
  %613 = select i1 %610, i32 %611, i32 %612
  br label %614

614:                                              ; preds = %606, %601
  %615 = phi i32 [ %613, %606 ], [ 0, %601 ]
  %616 = phi i64 [ 1, %606 ], [ 0, %601 ]
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %128) #12
  %617 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer", %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer"* %579, i64 0, i32 0
  %618 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer", %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer"* %579, i64 0, i32 0, i32 0, i32 0, i32 0
  %619 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %620 = load i32, i32* %619, align 4
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %652, label %622

622:                                              ; preds = %614
  %623 = load i32*, i32** %618, align 8
  %624 = icmp ne i64 %595, 0
  %625 = icmp ne i64 %616, 0
  br label %629

626:                                              ; preds = %645
  %627 = icmp eq i32 %646, 0
  br i1 %627, label %652, label %628

628:                                              ; preds = %626
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %115) #12
  br label %655

629:                                              ; preds = %645, %622
  %630 = phi i32 [ %620, %622 ], [ %646, %645 ]
  %631 = phi i32* [ %623, %622 ], [ %647, %645 ]
  %632 = phi i32* [ %623, %622 ], [ %648, %645 ]
  %633 = load i32, i32* %632, align 4
  %634 = icmp slt i32 %633, %596
  %635 = and i1 %624, %634
  %636 = icmp sgt i32 %633, %615
  %637 = and i1 %625, %636
  %638 = or i1 %635, %637
  br i1 %638, label %639, label %643

639:                                              ; preds = %629
  %640 = call i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE5eraseEPi(%"class.WTF::Vector.101"* %617, i32* %632) #12
  %641 = load i32*, i32** %618, align 8
  %642 = load i32, i32* %619, align 4
  br label %645

643:                                              ; preds = %629
  %644 = getelementptr inbounds i32, i32* %632, i64 1
  br label %645

645:                                              ; preds = %643, %639
  %646 = phi i32 [ %630, %643 ], [ %642, %639 ]
  %647 = phi i32* [ %631, %643 ], [ %641, %639 ]
  %648 = phi i32* [ %644, %643 ], [ %640, %639 ]
  %649 = zext i32 %646 to i64
  %650 = getelementptr inbounds i32, i32* %647, i64 %649
  %651 = icmp eq i32* %648, %650
  br i1 %651, label %626, label %629

652:                                              ; preds = %626, %614
  %653 = load i8*, i8** %118, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %115) #12
  %654 = icmp eq i8* %653, null
  br i1 %654, label %655, label %847

655:                                              ; preds = %652, %628
  %656 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 6
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %129) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 9, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14LongConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %130, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %137, i8* align 4 %138, i64 17, i1 false) #12
  %657 = call zeroext i1 %111(%"class.blink::LongConstraint"* nonnull %6) #12
  br i1 %657, label %663, label %658

658:                                              ; preds = %655
  %659 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %139, align 8
  %660 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %659, i64 5
  %661 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %660, align 8
  %662 = call zeroext i1 %661(%"class.blink::LongConstraint"* nonnull %6) #12
  br i1 %662, label %663, label %671

663:                                              ; preds = %658, %655
  %664 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %139, align 8
  %665 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %664, i64 5
  %666 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %665, align 8
  %667 = call zeroext i1 %666(%"class.blink::LongConstraint"* nonnull %6) #12
  %668 = load i32, i32* %140, align 4
  %669 = load i32, i32* %135, align 4
  %670 = select i1 %667, i32 %668, i32 %669
  br label %671

671:                                              ; preds = %663, %658
  %672 = phi i64 [ 1, %663 ], [ 0, %658 ]
  %673 = phi i32 [ %670, %663 ], [ 0, %658 ]
  %674 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %139, align 8
  %675 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %674, i64 4
  %676 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %675, align 8
  %677 = call zeroext i1 %676(%"class.blink::LongConstraint"* nonnull %6) #12
  br i1 %677, label %683, label %678

678:                                              ; preds = %671
  %679 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %139, align 8
  %680 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %679, i64 5
  %681 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %680, align 8
  %682 = call zeroext i1 %681(%"class.blink::LongConstraint"* nonnull %6) #12
  br i1 %682, label %683, label %691

683:                                              ; preds = %678, %671
  %684 = load i1 (%"class.blink::LongConstraint"*)**, i1 (%"class.blink::LongConstraint"*)*** %139, align 8
  %685 = getelementptr inbounds i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %684, i64 5
  %686 = load i1 (%"class.blink::LongConstraint"*)*, i1 (%"class.blink::LongConstraint"*)** %685, align 8
  %687 = call zeroext i1 %686(%"class.blink::LongConstraint"* nonnull %6) #12
  %688 = load i32, i32* %140, align 4
  %689 = load i32, i32* %141, align 8
  %690 = select i1 %687, i32 %688, i32 %689
  br label %691

691:                                              ; preds = %683, %678
  %692 = phi i32 [ %690, %683 ], [ 0, %678 ]
  %693 = phi i64 [ 1, %683 ], [ 0, %678 ]
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %142) #12
  %694 = bitcast %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %656 to i32*
  %695 = load i32, i32* %694, align 4
  %696 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %697 = load i32, i32* %696, align 4
  %698 = icmp eq i64 %672, 0
  br i1 %698, label %705, label %699

699:                                              ; preds = %691
  %700 = trunc i32 %695 to i8
  %701 = icmp eq i8 %700, 0
  %702 = icmp slt i32 %697, %673
  %703 = or i1 %701, %702
  %704 = select i1 %703, i32 %673, i32 %697
  br label %705

705:                                              ; preds = %699, %691
  %706 = phi i32 [ %695, %691 ], [ 1, %699 ]
  %707 = phi i32 [ %697, %691 ], [ %704, %699 ]
  %708 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 6, i32 0, i32 1
  %709 = bitcast %"class.absl::optional.72"* %708 to i32*
  %710 = load i32, i32* %709, align 4
  %711 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %712 = load i32, i32* %711, align 4
  %713 = icmp eq i64 %693, 0
  br i1 %713, label %720, label %714

714:                                              ; preds = %705
  %715 = trunc i32 %710 to i8
  %716 = icmp eq i8 %715, 0
  %717 = icmp sgt i32 %712, %692
  %718 = or i1 %716, %717
  %719 = select i1 %718, i32 %692, i32 %712
  br label %720

720:                                              ; preds = %714, %705
  %721 = phi i32 [ 1, %714 ], [ %710, %705 ]
  %722 = phi i32 [ %719, %714 ], [ %712, %705 ]
  %723 = zext i32 %707 to i64
  %724 = shl nuw i64 %723, 32
  %725 = zext i32 %706 to i64
  %726 = or i64 %724, %725
  %727 = zext i32 %722 to i64
  %728 = shl nuw i64 %727, 32
  %729 = zext i32 %721 to i64
  %730 = or i64 %728, %729
  %731 = bitcast %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %656 to i64*
  store i64 %726, i64* %731, align 4
  %732 = bitcast %"class.absl::optional.72"* %708 to i64*
  store i64 %730, i64* %732, align 4
  %733 = trunc i32 %721 to i8
  %734 = icmp ne i8 %733, 0
  %735 = trunc i32 %706 to i8
  %736 = icmp ne i8 %735, 0
  %737 = and i1 %736, %734
  %738 = icmp slt i32 %722, %707
  %739 = and i1 %738, %737
  br i1 %739, label %741, label %740

740:                                              ; preds = %720
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %129) #12
  br label %744

741:                                              ; preds = %720
  %742 = load i8*, i8** %132, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %129) #12
  %743 = icmp eq i8* %742, null
  br i1 %743, label %744, label %847

744:                                              ; preds = %741, %740
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %143) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 9, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink16DoubleConstraintE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %144, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 33, i1 false) #12
  %745 = call zeroext i1 %154(%"class.blink::DoubleConstraint"* nonnull %3) #12, !noalias !44
  br i1 %745, label %751, label %746

746:                                              ; preds = %744
  %747 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %153, align 8, !noalias !44
  %748 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %747, i64 5
  %749 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %748, align 8, !noalias !44
  %750 = call zeroext i1 %749(%"class.blink::DoubleConstraint"* nonnull %3) #12, !noalias !44
  br i1 %750, label %751, label %759

751:                                              ; preds = %746, %744
  %752 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %153, align 8, !noalias !44
  %753 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %752, i64 5
  %754 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %753, align 8, !noalias !44
  %755 = call zeroext i1 %754(%"class.blink::DoubleConstraint"* nonnull %3) #12, !noalias !44
  %756 = load double, double* %155, align 8
  %757 = load double, double* %149, align 8
  %758 = select i1 %755, double %756, double %757
  br label %759

759:                                              ; preds = %751, %746
  %760 = phi i8 [ 1, %751 ], [ 0, %746 ]
  %761 = phi double [ %758, %751 ], [ undef, %746 ]
  %762 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %153, align 8, !noalias !44
  %763 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %762, i64 4
  %764 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %763, align 8, !noalias !44
  %765 = call zeroext i1 %764(%"class.blink::DoubleConstraint"* nonnull %3) #12, !noalias !44
  br i1 %765, label %771, label %766

766:                                              ; preds = %759
  %767 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %153, align 8, !noalias !44
  %768 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %767, i64 5
  %769 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %768, align 8, !noalias !44
  %770 = call zeroext i1 %769(%"class.blink::DoubleConstraint"* nonnull %3) #12, !noalias !44
  br i1 %770, label %771, label %779

771:                                              ; preds = %766, %759
  %772 = load i1 (%"class.blink::DoubleConstraint"*)**, i1 (%"class.blink::DoubleConstraint"*)*** %153, align 8, !noalias !44
  %773 = getelementptr inbounds i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %772, i64 5
  %774 = load i1 (%"class.blink::DoubleConstraint"*)*, i1 (%"class.blink::DoubleConstraint"*)** %773, align 8, !noalias !44
  %775 = call zeroext i1 %774(%"class.blink::DoubleConstraint"* nonnull %3) #12, !noalias !44
  %776 = load double, double* %155, align 8
  %777 = load double, double* %156, align 8
  %778 = select i1 %775, double %776, double %777
  br label %779

779:                                              ; preds = %771, %766
  %780 = phi double [ %778, %771 ], [ undef, %766 ]
  %781 = phi i8 [ 1, %771 ], [ 0, %766 ]
  %782 = bitcast double %761 to i64
  %783 = bitcast double %780 to i64
  call void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"* nonnull %157) #12
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %158)
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %159)
  %784 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %785 = load i8, i8* %784, align 8, !noalias !47
  %786 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %787 = bitcast %union.anon.112* %786 to i64*
  %788 = load i64, i64* %787, align 8, !noalias !47
  %789 = icmp eq i8 %760, 0
  br i1 %789, label %796, label %790

790:                                              ; preds = %779
  %791 = icmp eq i8 %785, 0
  br i1 %791, label %796, label %792

792:                                              ; preds = %790
  %793 = bitcast i64 %788 to double
  %794 = fcmp ogt double %761, %793
  %795 = select i1 %794, i64 %782, i64 %788
  br label %796

796:                                              ; preds = %792, %790, %779
  %797 = phi i64 [ %788, %779 ], [ %795, %792 ], [ %782, %790 ]
  %798 = phi i8 [ %785, %779 ], [ 1, %792 ], [ 1, %790 ]
  %799 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %800 = load i8, i8* %799, align 8, !noalias !47
  %801 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %802 = bitcast %union.anon.112* %801 to i64*
  %803 = load i64, i64* %802, align 8, !noalias !47
  %804 = icmp eq i8 %781, 0
  br i1 %804, label %811, label %805

805:                                              ; preds = %796
  %806 = icmp eq i8 %800, 0
  br i1 %806, label %811, label %807

807:                                              ; preds = %805
  %808 = bitcast i64 %803 to double
  %809 = fcmp olt double %780, %808
  %810 = select i1 %809, i64 %783, i64 %803
  br label %811

811:                                              ; preds = %807, %805, %796
  %812 = phi i64 [ %803, %796 ], [ %810, %807 ], [ %783, %805 ]
  %813 = phi i8 [ %800, %796 ], [ 1, %807 ], [ 1, %805 ]
  store i8 %798, i8* %784, align 8
  %814 = getelementptr inbounds i8, i8* %784, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %814, i8* nonnull align 1 %158, i64 7, i1 false) #12
  store i64 %797, i64* %787, align 8
  store i8 %813, i8* %799, align 8
  %815 = getelementptr inbounds i8, i8* %784, i64 17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %815, i8* nonnull align 1 %159, i64 7, i1 false) #12
  store i64 %812, i64* %802, align 8
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %158)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %159)
  %816 = icmp eq i8 %813, 0
  %817 = icmp eq i8 %798, 0
  %818 = or i1 %817, %816
  br i1 %818, label %823, label %819

819:                                              ; preds = %811
  %820 = bitcast i64 %797 to double
  %821 = bitcast i64 %812 to double
  %822 = fcmp olt double %821, %820
  br i1 %822, label %824, label %823

823:                                              ; preds = %819, %811
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %143) #12
  br label %827

824:                                              ; preds = %819
  %825 = load i8*, i8** %146, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %143) #12
  %826 = icmp eq i8* %825, null
  br i1 %826, label %827, label %847

827:                                              ; preds = %824, %823
  %828 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 1, i32 0, i64 0
  %829 = call fastcc i8* @_ZN5blink12_GLOBAL__N_116BooleanContainer18ApplyConstraintSetERKNS_17BooleanConstraintE(%"class.blink::(anonymous namespace)::BooleanContainer"* %828, %"class.blink::BooleanConstraint"* dereferenceable(24) %160) #12
  %830 = icmp eq i8* %829, null
  br i1 %830, label %831, label %847

831:                                              ; preds = %827
  %832 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 1, i32 0, i64 1
  %833 = call fastcc i8* @_ZN5blink12_GLOBAL__N_116BooleanContainer18ApplyConstraintSetERKNS_17BooleanConstraintE(%"class.blink::(anonymous namespace)::BooleanContainer"* %832, %"class.blink::BooleanConstraint"* dereferenceable(24) %161) #12
  %834 = icmp eq i8* %833, null
  br i1 %834, label %835, label %847

835:                                              ; preds = %831
  %836 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 1, i32 0, i64 2
  %837 = call fastcc i8* @_ZN5blink12_GLOBAL__N_116BooleanContainer18ApplyConstraintSetERKNS_17BooleanConstraintE(%"class.blink::(anonymous namespace)::BooleanContainer"* %836, %"class.blink::BooleanConstraint"* dereferenceable(24) %162) #12
  %838 = icmp eq i8* %837, null
  br i1 %838, label %839, label %847

839:                                              ; preds = %835
  %840 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 1, i32 0, i64 3
  %841 = call fastcc i8* @_ZN5blink12_GLOBAL__N_116BooleanContainer18ApplyConstraintSetERKNS_17BooleanConstraintE(%"class.blink::(anonymous namespace)::BooleanContainer"* %840, %"class.blink::BooleanConstraint"* dereferenceable(24) %163) #12
  %842 = icmp eq i8* %841, null
  br i1 %842, label %843, label %847

843:                                              ; preds = %839
  %844 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 0, i32 1, i32 0, i64 4
  %845 = call fastcc i8* @_ZN5blink12_GLOBAL__N_116BooleanContainer18ApplyConstraintSetERKNS_17BooleanConstraintE(%"class.blink::(anonymous namespace)::BooleanContainer"* %844, %"class.blink::BooleanConstraint"* dereferenceable(24) %164) #12
  %846 = icmp eq i8* %845, null
  br i1 %846, label %886, label %847

847:                                              ; preds = %843, %839, %835, %831, %827, %824, %741, %652, %575, %487, %415
  %848 = phi i8* [ %845, %843 ], [ %841, %839 ], [ %837, %835 ], [ %833, %831 ], [ %829, %827 ], [ %825, %824 ], [ %742, %741 ], [ %653, %652 ], [ %576, %575 ], [ %471, %487 ], [ %399, %415 ]
  %849 = load i64, i64* %202, align 8
  %850 = ptrtoint %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208 to i64
  %851 = sub i64 %850, %849
  %852 = sdiv exact i64 %851, 352
  %853 = trunc i64 %852 to i32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %166, align 8
  %854 = load i32, i32* %900, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #12
  %855 = icmp ugt i32 %854, %853
  br i1 %855, label %856, label %857

856:                                              ; preds = %847
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #12
  store i8* null, i8** %166, align 8
  br label %864

857:                                              ; preds = %847
  %858 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %853) #12
  %859 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %854) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %23, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i8* %858, i8* %859) #12
  %860 = load i8*, i8** %168, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #12
  store i8* %860, i8** %166, align 8
  %861 = icmp eq i8* %860, null
  br i1 %861, label %864, label %862

862:                                              ; preds = %857
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %25, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %24) #12
  %863 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %25) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #12
  br label %864

864:                                              ; preds = %862, %857, %856
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #12
  %865 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %899, align 8
  %866 = and i64 %852, 4294967295
  %867 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %865, i64 %866
  call fastcc void @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainerD2Ev(%"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %867) #12
  %868 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %867, i64 1
  %869 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %899, align 8
  %870 = load i32, i32* %900, align 4
  %871 = zext i32 %870 to i64
  %872 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %869, i64 %871
  %873 = icmp eq %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %868, %872
  br i1 %873, label %883, label %874

874:                                              ; preds = %864, %874
  %875 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ %879, %874 ], [ %868, %864 ]
  %876 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ %878, %874 ], [ %867, %864 ]
  %877 = bitcast %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %876 to i8*
  call fastcc void @_ZN3WTF15ConstructTraitsIN5blink12_GLOBAL__N_124ProcessingBasedContainerENS_12VectorTraitsIS3_EENS_18PartitionAllocatorEE9ConstructIJS3_EEEPS3_PvDpOT_(i8* %877, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* dereferenceable(352) %875) #12
  call fastcc void @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainerD2Ev(%"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %875) #12
  %878 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %876, i64 1
  %879 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %875, i64 1
  %880 = icmp eq %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %879, %872
  br i1 %880, label %881, label %874

881:                                              ; preds = %874
  %882 = load i32, i32* %900, align 4
  br label %883

883:                                              ; preds = %881, %864
  %884 = phi i32 [ %882, %881 ], [ %870, %864 ]
  %885 = add i32 %884, -1
  store i32 %885, i32* %900, align 4
  br label %889

886:                                              ; preds = %843
  %887 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %208, i64 1
  %888 = load i32, i32* %900, align 4
  br label %889

889:                                              ; preds = %886, %883
  %890 = phi i32 [ %885, %883 ], [ %888, %886 ]
  %891 = phi i8* [ %848, %883 ], [ null, %886 ]
  %892 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ %208, %883 ], [ %887, %886 ]
  %893 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %899, align 8
  %894 = zext i32 %890 to i64
  %895 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %893, i64 %894
  %896 = icmp eq %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %892, %895
  br i1 %896, label %203, label %207

897:                                              ; preds = %196
  %898 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %183, i64 0, i32 4
  %899 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %898, i64 0, i32 0, i32 0, i32 0
  %900 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %183, i64 0, i32 4, i32 0, i32 0, i32 2
  %901 = load i32, i32* %900, align 4
  %902 = icmp eq i32 %901, 0
  br i1 %902, label %942, label %200

903:                                              ; preds = %203, %196, %192, %188, %182
  %904 = phi i8* [ %198, %196 ], [ %194, %192 ], [ %190, %188 ], [ %186, %182 ], [ %891, %203 ]
  %905 = load i64, i64* %170, align 8
  %906 = ptrtoint %"class.blink::(anonymous namespace)::DeviceContainer"* %183 to i64
  %907 = sub i64 %906, %905
  %908 = sdiv exact i64 %907, 176
  %909 = trunc i64 %908 to i32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %172, align 8
  %910 = load i32, i32* %31, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #12
  %911 = icmp ugt i32 %910, %909
  br i1 %911, label %912, label %913

912:                                              ; preds = %903
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #12
  store i8* null, i8** %172, align 8
  br label %920

913:                                              ; preds = %903
  %914 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %909) #12
  %915 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %910) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %26, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i8* %914, i8* %915) #12
  %916 = load i8*, i8** %174, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #12
  store i8* %916, i8** %172, align 8
  %917 = icmp eq i8* %916, null
  br i1 %917, label %920, label %918

918:                                              ; preds = %913
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %28, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %27) #12
  %919 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %28) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #12
  br label %920

920:                                              ; preds = %918, %913, %912
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #12
  %921 = load %"class.blink::(anonymous namespace)::DeviceContainer"*, %"class.blink::(anonymous namespace)::DeviceContainer"** %30, align 8
  %922 = and i64 %908, 4294967295
  %923 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %921, i64 %922
  call fastcc void @_ZN5blink12_GLOBAL__N_115DeviceContainerD2Ev(%"class.blink::(anonymous namespace)::DeviceContainer"* %923) #12
  %924 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %923, i64 1
  %925 = load %"class.blink::(anonymous namespace)::DeviceContainer"*, %"class.blink::(anonymous namespace)::DeviceContainer"** %30, align 8
  %926 = load i32, i32* %31, align 4
  %927 = zext i32 %926 to i64
  %928 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %925, i64 %927
  %929 = icmp eq %"class.blink::(anonymous namespace)::DeviceContainer"* %924, %928
  br i1 %929, label %939, label %930

930:                                              ; preds = %920, %930
  %931 = phi %"class.blink::(anonymous namespace)::DeviceContainer"* [ %935, %930 ], [ %924, %920 ]
  %932 = phi %"class.blink::(anonymous namespace)::DeviceContainer"* [ %934, %930 ], [ %923, %920 ]
  %933 = bitcast %"class.blink::(anonymous namespace)::DeviceContainer"* %932 to i8*
  call fastcc void @_ZN3WTF15ConstructTraitsIN5blink12_GLOBAL__N_115DeviceContainerENS_12VectorTraitsIS3_EENS_18PartitionAllocatorEE9ConstructIJS3_EEEPS3_PvDpOT_(i8* %933, %"class.blink::(anonymous namespace)::DeviceContainer"* dereferenceable(176) %931) #12
  call fastcc void @_ZN5blink12_GLOBAL__N_115DeviceContainerD2Ev(%"class.blink::(anonymous namespace)::DeviceContainer"* %931) #12
  %934 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %932, i64 1
  %935 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %931, i64 1
  %936 = icmp eq %"class.blink::(anonymous namespace)::DeviceContainer"* %935, %928
  br i1 %936, label %937, label %930

937:                                              ; preds = %930
  %938 = load i32, i32* %31, align 4
  br label %939

939:                                              ; preds = %920, %937
  %940 = phi i32 [ %938, %937 ], [ %926, %920 ]
  %941 = add i32 %940, -1
  store i32 %941, i32* %31, align 4
  br label %945

942:                                              ; preds = %203, %897
  %943 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %183, i64 1
  %944 = load i32, i32* %31, align 4
  br label %945

945:                                              ; preds = %942, %939
  %946 = phi i32 [ %941, %939 ], [ %944, %942 ]
  %947 = phi i8* [ %904, %939 ], [ %184, %942 ]
  %948 = phi %"class.blink::(anonymous namespace)::DeviceContainer"* [ %183, %939 ], [ %943, %942 ]
  %949 = load %"class.blink::(anonymous namespace)::DeviceContainer"*, %"class.blink::(anonymous namespace)::DeviceContainer"** %30, align 8
  %950 = zext i32 %946 to i64
  %951 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %949, i64 %950
  %952 = icmp eq %"class.blink::(anonymous namespace)::DeviceContainer"* %948, %951
  br i1 %952, label %176, label %182
}

declare dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"*) local_unnamed_addr #1

declare void @_ZN5blink20AudioCaptureSettingsC1EPKc(%"class.blink::AudioCaptureSettings"*, i8*) unnamed_addr #1

declare dereferenceable(16) %"class.WTF::Vector.122"* @_ZNK5blink16MediaConstraints8AdvancedEv(%"class.blink::MediaConstraints"*) local_unnamed_addr #1

declare void @_ZN5blink20AudioCaptureSettingsC1EOS0_(%"class.blink::AudioCaptureSettings"*, %"class.blink::AudioCaptureSettings"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26SelectSettingsAudioCaptureEPNS_22MediaStreamAudioSourceERKNS_16MediaConstraintsE(%"class.blink::AudioCaptureSettings"* noalias sret, %"class.blink::MediaStreamAudioSource"*, %"class.blink::MediaConstraints"* dereferenceable(8)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::Vector.66", align 8
  %6 = alloca [1 x %"class.blink::AudioDeviceCaptureCapability"], align 8
  %7 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %1, i64 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %9 [
    i32 1, label %10
    i32 3, label %10
    i32 6, label %10
  ]

9:                                                ; preds = %3
  tail call void @_ZN5blink20AudioCaptureSettingsC1Ev(%"class.blink::AudioCaptureSettings"* %0) #12
  br label %200

10:                                               ; preds = %3, %3, %3
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN5blink12_GLOBAL__N_120GetMediaStreamSourceERKNS_16MediaConstraintsE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.blink::MediaConstraints"* dereferenceable(8) %2)
  %15 = load i32, i32* %7, align 8
  switch i32 %15, label %50 [
    i32 1, label %16
    i32 3, label %29
  ]

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = load i64, i64* %13, align 8
  %22 = zext i8 %19 to i64
  %23 = select i1 %20, i64 %21, i64 %22
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %87, label %25

25:                                               ; preds = %16
  %26 = tail call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %2) #12
  %27 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %26, i64 0, i32 20, i32 0, i32 1
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZN5blink20AudioCaptureSettingsC1EPKc(%"class.blink::AudioCaptureSettings"* %0, i8* %28) #12
  br label %192

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = load i64, i64* %13, align 8
  %35 = zext i8 %32 to i64
  %36 = select i1 %33, i64 %34, i64 %35
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %87, label %38

38:                                               ; preds = %29
  %39 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink21kMediaStreamSourceTabE, i64 0, i64 0)) #12
  %40 = icmp eq i64 %39, %36
  br i1 %40, label %41, label %46

41:                                               ; preds = %38
  %42 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink21kMediaStreamSourceTabE, i64 0, i64 0), i64 %36) #12
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = load i32, i32* %7, align 8
  br label %50

46:                                               ; preds = %41, %38
  %47 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %2) #12
  %48 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %47, i64 0, i32 20, i32 0, i32 1
  %49 = load i8*, i8** %48, align 8
  call void @_ZN5blink20AudioCaptureSettingsC1EPKc(%"class.blink::AudioCaptureSettings"* %0, i8* %49) #12
  br label %192

50:                                               ; preds = %44, %10
  %51 = phi i32 [ %15, %10 ], [ %45, %44 ]
  %52 = icmp eq i32 %51, 6
  br i1 %52, label %53, label %87

53:                                               ; preds = %50
  %54 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  %58 = load i64, i64* %13, align 8
  %59 = zext i8 %56 to i64
  %60 = select i1 %57, i64 %58, i64 %59
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %87, label %62

62:                                               ; preds = %53
  %63 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink24kMediaStreamSourceSystemE, i64 0, i64 0)) #12
  %64 = icmp eq i64 %63, %60
  br i1 %64, label %65, label %72

65:                                               ; preds = %62
  %66 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink24kMediaStreamSourceSystemE, i64 0, i64 0), i64 %60) #12
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %87, label %68

68:                                               ; preds = %65
  %69 = load i8, i8* %55, align 1
  %70 = load i64, i64* %13, align 8
  %71 = zext i8 %69 to i64
  br label %72

72:                                               ; preds = %68, %62
  %73 = phi i64 [ %71, %68 ], [ %59, %62 ]
  %74 = phi i64 [ %70, %68 ], [ %58, %62 ]
  %75 = phi i8 [ %69, %68 ], [ %56, %62 ]
  %76 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink25kMediaStreamSourceDesktopE, i64 0, i64 0)) #12
  %77 = icmp slt i8 %75, 0
  %78 = select i1 %77, i64 %74, i64 %73
  %79 = icmp eq i64 %76, %78
  br i1 %79, label %80, label %83

80:                                               ; preds = %72
  %81 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink25kMediaStreamSourceDesktopE, i64 0, i64 0), i64 %76) #12
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %80, %72
  %84 = call dereferenceable(1856) %"struct.blink::MediaTrackConstraintSetPlatform"* @_ZNK5blink16MediaConstraints5BasicEv(%"class.blink::MediaConstraints"* %2) #12
  %85 = getelementptr inbounds %"struct.blink::MediaTrackConstraintSetPlatform", %"struct.blink::MediaTrackConstraintSetPlatform"* %84, i64 0, i32 20, i32 0, i32 1
  %86 = load i8*, i8** %85, align 8
  call void @_ZN5blink20AudioCaptureSettingsC1EPKc(%"class.blink::AudioCaptureSettings"* %0, i8* %86) #12
  br label %192

87:                                               ; preds = %29, %16, %65, %80, %53, %50
  %88 = bitcast %"class.WTF::Vector.66"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #12
  %89 = getelementptr inbounds %"class.WTF::Vector.66", %"class.WTF::Vector.66"* %5, i64 0, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.WTF::Vector.66", %"class.WTF::Vector.66"* %5, i64 0, i32 0, i32 0, i32 2
  %91 = bitcast [1 x %"class.blink::AudioDeviceCaptureCapability"]* %6 to i8*
  %92 = bitcast %"class.WTF::Vector.66"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %91) #12
  %93 = getelementptr inbounds [1 x %"class.blink::AudioDeviceCaptureCapability"], [1 x %"class.blink::AudioDeviceCaptureCapability"]* %6, i64 0, i64 0
  %94 = getelementptr inbounds [1 x %"class.blink::AudioDeviceCaptureCapability"], [1 x %"class.blink::AudioDeviceCaptureCapability"]* %6, i64 0, i64 0, i32 0
  store %"class.blink::MediaStreamAudioSource"* %1, %"class.blink::MediaStreamAudioSource"** %94, align 8
  %95 = getelementptr inbounds [1 x %"class.blink::AudioDeviceCaptureCapability"], [1 x %"class.blink::AudioDeviceCaptureCapability"]* %6, i64 0, i64 0, i32 1, i32 0, i32 0
  %96 = getelementptr inbounds [1 x %"class.blink::AudioDeviceCaptureCapability"], [1 x %"class.blink::AudioDeviceCaptureCapability"]* %6, i64 0, i64 0, i32 3
  %97 = bitcast %"class.WTF::StringImpl"** %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 16, i1 false) #12
  call void @_ZN5media15AudioParametersC1Ev(%"class.media::AudioParameters"* %96) #12
  call void @_ZN3WTF6VectorIN5blink28AudioDeviceCaptureCapabilityELj0ENS_18PartitionAllocatorEEC2ESt16initializer_listIS2_E(%"class.WTF::Vector.66"* nonnull %5, %"class.blink::AudioDeviceCaptureCapability"* nonnull %93, i64 1)
  %98 = getelementptr inbounds [1 x %"class.blink::AudioDeviceCaptureCapability"], [1 x %"class.blink::AudioDeviceCaptureCapability"]* %6, i64 0, i64 0, i32 3
  call void @_ZN5media15AudioParametersD1Ev(%"class.media::AudioParameters"* %98) #12
  %99 = getelementptr inbounds [1 x %"class.blink::AudioDeviceCaptureCapability"], [1 x %"class.blink::AudioDeviceCaptureCapability"]* %6, i64 0, i64 0, i32 2, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #12
  br label %115

115:                                              ; preds = %114, %111, %87
  %116 = getelementptr inbounds [1 x %"class.blink::AudioDeviceCaptureCapability"], [1 x %"class.blink::AudioDeviceCaptureCapability"]* %6, i64 0, i64 0, i32 1, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #12
  br label %132

132:                                              ; preds = %115, %128, %131
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %91) #12
  %133 = getelementptr inbounds %"class.blink::MediaStreamAudioSource", %"class.blink::MediaStreamAudioSource"* %1, i64 0, i32 0, i32 1, i32 7, i32 5
  %134 = load i32, i32* %133, align 4
  %135 = and i32 %134, 16
  %136 = icmp eq i32 %135, 0
  call void @_ZN5blink26SelectSettingsAudioCaptureERKN3WTF6VectorINS_28AudioDeviceCaptureCapabilityELj0ENS0_18PartitionAllocatorEEERKNS_16MediaConstraintsEbb(%"class.blink::AudioCaptureSettings"* sret %0, %"class.WTF::Vector.66"* nonnull dereferenceable(16) %5, %"class.blink::MediaConstraints"* dereferenceable(8) %2, i1 zeroext %136, i1 zeroext false)
  %137 = load %"class.blink::AudioDeviceCaptureCapability"*, %"class.blink::AudioDeviceCaptureCapability"** %89, align 8
  %138 = icmp eq %"class.blink::AudioDeviceCaptureCapability"* %137, null
  br i1 %138, label %190, label %139, !prof !4

139:                                              ; preds = %132
  %140 = bitcast %"class.blink::AudioDeviceCaptureCapability"* %137 to i8*
  %141 = load i32, i32* %90, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %188, label %143, !prof !2

143:                                              ; preds = %139
  %144 = zext i32 %141 to i64
  %145 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %137, i64 %144
  br label %146

146:                                              ; preds = %143, %182
  %147 = phi %"class.blink::AudioDeviceCaptureCapability"* [ %183, %182 ], [ %137, %143 ]
  %148 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %147, i64 0, i32 3
  call void @_ZN5media15AudioParametersD1Ev(%"class.media::AudioParameters"* %148) #12
  %149 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %147, i64 0, i32 2, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #12
  br label %165

165:                                              ; preds = %164, %161, %146
  %166 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %147, i64 0, i32 1, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #12
  br label %182

182:                                              ; preds = %181, %178, %165
  %183 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %147, i64 1
  %184 = icmp eq %"class.blink::AudioDeviceCaptureCapability"* %183, %145
  br i1 %184, label %185, label %146

185:                                              ; preds = %182
  store i32 0, i32* %90, align 4
  %186 = bitcast %"class.WTF::Vector.66"* %5 to i8**
  %187 = load i8*, i8** %186, align 8
  br label %188

188:                                              ; preds = %185, %139
  %189 = phi i8* [ %187, %185 ], [ %140, %139 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %189) #12
  store %"class.blink::AudioDeviceCaptureCapability"* null, %"class.blink::AudioDeviceCaptureCapability"** %89, align 8
  br label %190

190:                                              ; preds = %132, %188
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #12
  %191 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %192

192:                                              ; preds = %190, %83, %46, %25
  %193 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %191, %190 ], [ %54, %83 ], [ %30, %46 ], [ %17, %25 ]
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %192
  %198 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %198) #14
  br label %199

199:                                              ; preds = %192, %197
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br label %200

200:                                              ; preds = %199, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink28AudioDeviceCaptureCapabilityELj0ENS_18PartitionAllocatorEEC2ESt16initializer_listIS2_E(%"class.WTF::Vector.66"*, %"class.blink::AudioDeviceCaptureCapability"*, i64) unnamed_addr #0 comdat align 2 {
  %4 = icmp ult i64 %2, 4294967296
  br i1 %4, label %6, label %5, !prof !4

5:                                                ; preds = %3
  tail call void @llvm.trap() #12
  unreachable

6:                                                ; preds = %3
  %7 = trunc i64 %2 to i32
  %8 = getelementptr inbounds %"class.WTF::Vector.66", %"class.WTF::Vector.66"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::AudioDeviceCaptureCapability"* null, %"class.blink::AudioDeviceCaptureCapability"** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.66", %"class.WTF::Vector.66"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %6
  %12 = and i64 %2, 4294967295
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink28AudioDeviceCaptureCapabilityEEEmm(i64 %12) #12
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink28AudioDeviceCaptureCapabilityEEEPKcv, i64 0, i64 0)) #12
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.66"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = udiv i64 %13, 88
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %9, align 8
  %19 = bitcast i8* %14 to %"class.blink::AudioDeviceCaptureCapability"*
  br label %20

20:                                               ; preds = %6, %11
  %21 = phi %"class.blink::AudioDeviceCaptureCapability"* [ null, %6 ], [ %19, %11 ]
  %22 = getelementptr inbounds %"class.WTF::Vector.66", %"class.WTF::Vector.66"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %7, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %1, i64 %2
  %24 = icmp eq i64 %2, 0
  br i1 %24, label %80, label %25

25:                                               ; preds = %20, %74
  %26 = phi %"class.blink::AudioDeviceCaptureCapability"* [ %77, %74 ], [ %21, %20 ]
  %27 = phi %"class.blink::AudioDeviceCaptureCapability"* [ %78, %74 ], [ %1, %20 ]
  %28 = bitcast %"class.blink::AudioDeviceCaptureCapability"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::AudioDeviceCaptureCapability"* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %27, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %26, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #12
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #12
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %25
  %53 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %27, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %26, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #12
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %62
  tail call void @llvm.trap() #12
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %72, %57, %52
  %75 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %26, i64 0, i32 3
  %76 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %27, i64 0, i32 3
  tail call void @_ZN5media15AudioParametersC1ERKS0_(%"class.media::AudioParameters"* %75, %"class.media::AudioParameters"* dereferenceable(64) %76) #12
  %77 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %26, i64 1
  %78 = getelementptr inbounds %"class.blink::AudioDeviceCaptureCapability", %"class.blink::AudioDeviceCaptureCapability"* %27, i64 1
  %79 = icmp eq %"class.blink::AudioDeviceCaptureCapability"* %78, %23
  br i1 %79, label %80, label %25

80:                                               ; preds = %74, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink38GetMinMaxBufferSizesForAudioParametersERKN5media15AudioParametersE(%"class.media::AudioParameters"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.media::AudioParameters", %"class.media::AudioParameters"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.media::AudioParameters", %"class.media::AudioParameters"* %0, i64 0, i32 8
  %5 = bitcast %"class.absl::optional.7"* %4 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = getelementptr inbounds %"class.media::AudioParameters", %"class.media::AudioParameters"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = trunc i64 %6 to i8
  %10 = lshr i64 %6, 32
  %11 = trunc i64 %10 to i32
  %12 = icmp ne i8 %9, 0
  %13 = icmp sgt i32 %11, 0
  %14 = and i1 %12, %13
  %15 = icmp sgt i32 %8, 0
  %16 = and i1 %15, %14
  %17 = zext i32 %8 to i64
  %18 = shl nuw i64 %17, 32
  %19 = or i64 %18, %10
  %20 = zext i32 %3 to i64
  %21 = shl nuw i64 %20, 32
  %22 = or i64 %21, %20
  %23 = select i1 %16, i64 %19, i64 %22
  ret i64 %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden { double, double } @_ZN5blink36GetMinMaxLatenciesForAudioParametersERKN5media15AudioParametersE(%"class.media::AudioParameters"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.media::AudioParameters", %"class.media::AudioParameters"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.media::AudioParameters", %"class.media::AudioParameters"* %0, i64 0, i32 8
  %5 = bitcast %"class.absl::optional.7"* %4 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = getelementptr inbounds %"class.media::AudioParameters", %"class.media::AudioParameters"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = trunc i64 %6 to i8
  %10 = lshr i64 %6, 32
  %11 = trunc i64 %10 to i32
  %12 = icmp ne i8 %9, 0
  %13 = icmp sgt i32 %11, 0
  %14 = and i1 %12, %13
  %15 = icmp sgt i32 %8, 0
  %16 = and i1 %15, %14
  %17 = zext i32 %8 to i64
  %18 = shl nuw i64 %17, 32
  %19 = or i64 %18, %10
  %20 = zext i32 %3 to i64
  %21 = shl nuw i64 %20, 32
  %22 = or i64 %21, %20
  %23 = select i1 %16, i64 %19, i64 %22
  %24 = shl i64 %23, 32
  %25 = ashr exact i64 %24, 32
  %26 = mul nsw i64 %25, 1000000
  %27 = sitofp i64 %26 to float
  %28 = getelementptr inbounds %"class.media::AudioParameters", %"class.media::AudioParameters"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = sitofp i32 %29 to float
  %31 = fdiv float %27, %30
  %32 = fptosi float %31 to i64
  %33 = add i64 %32, -9223372036854775807
  %34 = icmp ult i64 %33, 2
  br i1 %34, label %38, label %35

35:                                               ; preds = %1
  %36 = sitofp i64 %32 to double
  %37 = fdiv double %36, 1.000000e+06
  br label %41

38:                                               ; preds = %1
  %39 = icmp slt i64 %32, 0
  %40 = select i1 %39, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %41

41:                                               ; preds = %35, %38
  %42 = phi double [ %40, %38 ], [ %37, %35 ]
  %43 = ashr i64 %23, 32
  %44 = mul nsw i64 %43, 1000000
  %45 = sitofp i64 %44 to float
  %46 = fdiv float %45, %30
  %47 = fptosi float %46 to i64
  %48 = add i64 %47, -9223372036854775807
  %49 = icmp ult i64 %48, 2
  br i1 %49, label %53, label %50

50:                                               ; preds = %41
  %51 = sitofp i64 %47 to double
  %52 = fdiv double %51, 1.000000e+06
  br label %56

53:                                               ; preds = %41
  %54 = icmp slt i64 %47, 0
  %55 = select i1 %54, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %56

56:                                               ; preds = %50, %53
  %57 = phi double [ %55, %53 ], [ %52, %50 ]
  %58 = insertvalue { double, double } undef, double %42, 0
  %59 = insertvalue { double, double } %58, double %57, 1
  ret { double, double } %59
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare dereferenceable(16) %"class.WTF::Vector.117"* @_ZNK5blink16StringConstraint5IdealEv(%"class.blink::StringConstraint"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.WTF::Vector.117"* @_ZNK5blink16StringConstraint5ExactEv(%"class.blink::StringConstraint"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.117"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_115DeviceContainerENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.79"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = zext i32 %1 to i64
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = icmp ugt i32 %1, 12189696
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %6) #12
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 12189696) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %13, i8* %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %4) #12
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %22 = mul nuw nsw i64 %6, 176
  %23 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %22) #12
  %24 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_115DeviceContainerEEEPKcv, i64 0, i64 0)) #12
  %25 = bitcast %"class.WTF::VectorBufferBase.79"* %0 to i64*
  %26 = ptrtoint i8* %24 to i64
  store atomic i64 %26, i64* %25 monotonic, align 8
  %27 = udiv i64 %23, 176
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.WTF::VectorBufferBase.79", %"class.WTF::VectorBufferBase.79"* %0, i64 0, i32 1
  store i32 %28, i32* %29, align 8
  ret void
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF15ConstructTraitsIN5blink12_GLOBAL__N_115DeviceContainerENS_12VectorTraitsIS3_EENS_18PartitionAllocatorEE9ConstructIJS3_EEEPS3_PvDpOT_(i8*, %"class.blink::(anonymous namespace)::DeviceContainer"* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = bitcast i8* %0 to %"class.media::AudioParameters"*
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 0
  tail call void @_ZN5media15AudioParametersC1ERKS0_(%"class.media::AudioParameters"* %3, %"class.media::AudioParameters"* dereferenceable(64) %4) #12
  %5 = getelementptr inbounds i8, i8* %0, i64 64
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !3
  store i8 %7, i8* %5, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 72
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 1, i32 0, i32 1
  %10 = getelementptr inbounds i8, i8* %0, i64 80
  %11 = bitcast i8* %10 to i32*
  %12 = getelementptr inbounds i8, i8* %0, i64 84
  %13 = bitcast i8* %12 to i32*
  %14 = bitcast %"class.WTF::Vector.80"* %9 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #12
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8* %8 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %18 = load i32, i32* %11, align 4
  %19 = load i32, i32* %17, align 4
  store i32 %19, i32* %11, align 4
  store i32 %18, i32* %17, align 4
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %13, align 4
  %22 = load i32, i32* %20, align 4
  store i32 %22, i32* %13, align 4
  store i32 %21, i32* %20, align 4
  %23 = getelementptr inbounds i8, i8* %0, i64 88
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 2, i32 0, i32 0
  %25 = load i8, i8* %24, align 8, !range !3
  store i8 %25, i8* %23, align 8
  %26 = getelementptr inbounds i8, i8* %0, i64 96
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 2, i32 0, i32 1
  %28 = getelementptr inbounds i8, i8* %0, i64 104
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i64 108
  %31 = bitcast i8* %30 to i32*
  %32 = bitcast %"class.WTF::Vector.80"* %27 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8* %26 to i64*
  store atomic i64 0, i64* %32 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %36 = load i32, i32* %29, align 4
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %29, align 4
  store i32 %36, i32* %35, align 4
  %38 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %39 = load i32, i32* %31, align 4
  %40 = load i32, i32* %38, align 4
  store i32 %40, i32* %31, align 4
  store i32 %39, i32* %38, align 4
  %41 = getelementptr inbounds i8, i8* %0, i64 112
  %42 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 3, i32 0, i64 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 8, !range !3
  store i8 %43, i8* %41, align 8
  %44 = getelementptr inbounds i8, i8* %0, i64 120
  %45 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds i8, i8* %0, i64 128
  %47 = bitcast i8* %46 to i32*
  %48 = getelementptr inbounds i8, i8* %0, i64 132
  %49 = bitcast i8* %48 to i32*
  %50 = bitcast %"class.WTF::Vector.86"* %45 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #12
  %51 = load i64, i64* %50, align 8
  %52 = bitcast i8* %44 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  store atomic i64 %51, i64* %52 monotonic, align 8
  %53 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %54 = load i32, i32* %47, align 4
  %55 = load i32, i32* %53, align 4
  store i32 %55, i32* %47, align 4
  store i32 %54, i32* %53, align 4
  %56 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %57 = load i32, i32* %49, align 4
  %58 = load i32, i32* %56, align 4
  store i32 %58, i32* %49, align 4
  store i32 %57, i32* %56, align 4
  %59 = getelementptr inbounds i8, i8* %0, i64 136
  %60 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 3, i32 0, i64 1, i32 0, i32 0
  %61 = load i8, i8* %60, align 8, !range !3
  store i8 %61, i8* %59, align 8
  %62 = getelementptr inbounds i8, i8* %0, i64 144
  %63 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1
  %64 = getelementptr inbounds i8, i8* %0, i64 152
  %65 = bitcast i8* %64 to i32*
  %66 = getelementptr inbounds i8, i8* %0, i64 156
  %67 = bitcast i8* %66 to i32*
  %68 = bitcast %"class.WTF::Vector.86"* %63 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #12
  %69 = load i64, i64* %68, align 8
  %70 = bitcast i8* %62 to i64*
  store atomic i64 0, i64* %68 monotonic, align 8
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %72 = load i32, i32* %65, align 4
  %73 = load i32, i32* %71, align 4
  store i32 %73, i32* %65, align 4
  store i32 %72, i32* %71, align 4
  %74 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %75 = load i32, i32* %67, align 4
  %76 = load i32, i32* %74, align 4
  store i32 %76, i32* %67, align 4
  store i32 %75, i32* %74, align 4
  %77 = getelementptr inbounds i8, i8* %0, i64 160
  %78 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 4
  %79 = getelementptr inbounds i8, i8* %0, i64 168
  %80 = bitcast i8* %79 to i32*
  %81 = getelementptr inbounds i8, i8* %0, i64 172
  %82 = bitcast i8* %81 to i32*
  %83 = bitcast %"class.WTF::Vector.91"* %78 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #12
  %84 = load i64, i64* %83, align 8
  %85 = bitcast i8* %77 to i64*
  store atomic i64 0, i64* %83 monotonic, align 8
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %87 = load i32, i32* %80, align 4
  %88 = load i32, i32* %86, align 4
  store i32 %88, i32* %80, align 4
  store i32 %87, i32* %86, align 4
  %89 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %1, i64 0, i32 4, i32 0, i32 0, i32 2
  %90 = load i32, i32* %82, align 4
  %91 = load i32, i32* %89, align 4
  store i32 %91, i32* %82, align 4
  store i32 %90, i32* %89, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_115DeviceContainerD2Ev(%"class.blink::(anonymous namespace)::DeviceContainer"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %3, align 8
  %5 = icmp eq %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %4, null
  br i1 %5, label %23, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %4, i64 %12
  br label %14

14:                                               ; preds = %14, %11
  %15 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ %16, %14 ], [ %4, %11 ]
  tail call fastcc void @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainerD2Ev(%"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %15) #12
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %15, i64 1
  %17 = icmp eq %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %16, %13
  br i1 %17, label %18, label %14

18:                                               ; preds = %14
  store i32 0, i32* %8, align 4
  %19 = bitcast %"class.WTF::Vector.91"* %2 to i8**
  %20 = load i8*, i8** %19, align 8
  br label %21

21:                                               ; preds = %18, %6
  %22 = phi i8* [ %20, %18 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #12
  store %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* null, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %3, align 8
  br label %23

23:                                               ; preds = %1, %21
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %0, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %33, label %27, !prof !4

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %0, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %27
  store i32 0, i32* %28, align 4
  br label %32

32:                                               ; preds = %31, %27
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %25) #12
  store i8* null, i8** %24, align 8
  br label %33

33:                                               ; preds = %32, %23
  %34 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %0, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %43, label %37, !prof !4

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %0, i64 0, i32 3, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %37
  store i32 0, i32* %38, align 4
  br label %42

42:                                               ; preds = %41, %37
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %35) #12
  store i8* null, i8** %34, align 8
  br label %43

43:                                               ; preds = %33, %42
  %44 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %0, i64 0, i32 2, i32 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %45, align 8
  %47 = icmp eq %"class.std::__1::basic_string"* %46, null
  br i1 %47, label %73, label %48, !prof !4

48:                                               ; preds = %43
  %49 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %50 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %71, label %53, !prof !2

53:                                               ; preds = %48
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 %54
  br label %56

56:                                               ; preds = %65, %53
  %57 = phi %"class.std::__1::basic_string"* [ %66, %65 ], [ %46, %53 ]
  %58 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  tail call void @_ZdlPv(i8* %64) #14
  br label %65

65:                                               ; preds = %62, %56
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 1
  %67 = icmp eq %"class.std::__1::basic_string"* %66, %55
  br i1 %67, label %68, label %56

68:                                               ; preds = %65
  store i32 0, i32* %50, align 4
  %69 = bitcast %"class.WTF::Vector.80"* %44 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %48
  %72 = phi i8* [ %70, %68 ], [ %49, %48 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %72) #12
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %45, align 8
  br label %73

73:                                               ; preds = %43, %71
  %74 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %0, i64 0, i32 1, i32 0, i32 1
  %75 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %75, align 8
  %77 = icmp eq %"class.std::__1::basic_string"* %76, null
  br i1 %77, label %103, label %78, !prof !4

78:                                               ; preds = %73
  %79 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %80 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %101, label %83, !prof !2

83:                                               ; preds = %78
  %84 = zext i32 %81 to i64
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 %84
  br label %86

86:                                               ; preds = %95, %83
  %87 = phi %"class.std::__1::basic_string"* [ %96, %95 ], [ %76, %83 ]
  %88 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  tail call void @_ZdlPv(i8* %94) #14
  br label %95

95:                                               ; preds = %92, %86
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 1
  %97 = icmp eq %"class.std::__1::basic_string"* %96, %85
  br i1 %97, label %98, label %86

98:                                               ; preds = %95
  store i32 0, i32* %80, align 4
  %99 = bitcast %"class.WTF::Vector.80"* %74 to i8**
  %100 = load i8*, i8** %99, align 8
  br label %101

101:                                              ; preds = %98, %78
  %102 = phi i8* [ %100, %98 ], [ %79, %78 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %102) #12
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %75, align 8
  br label %103

103:                                              ; preds = %73, %101
  %104 = getelementptr inbounds %"class.blink::(anonymous namespace)::DeviceContainer", %"class.blink::(anonymous namespace)::DeviceContainer"* %0, i64 0, i32 0
  tail call void @_ZN5media15AudioParametersD1Ev(%"class.media::AudioParameters"* %104) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media15AudioParametersD1Ev(%"class.media::AudioParameters"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainerD2Ev(%"class.blink::(anonymous namespace)::ProcessingBasedContainer"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !4

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #12
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %22, label %16, !prof !4

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %14) #12
  store i8* null, i8** %13, align 8
  br label %22

22:                                               ; preds = %12, %21
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 2
  tail call void @_ZN5media15AudioParametersD1Ev(%"class.media::AudioParameters"* %23) #12
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !4

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #12
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %33, %22
  %35 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %44, label %38, !prof !4

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42, !prof !2

42:                                               ; preds = %38
  store i32 0, i32* %39, align 4
  br label %43

43:                                               ; preds = %42, %38
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %36) #12
  store i8* null, i8** %35, align 8
  br label %44

44:                                               ; preds = %34, %43
  %45 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %54, label %48, !prof !4

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 4, i32 0, i32 1, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52, !prof !2

52:                                               ; preds = %48
  store i32 0, i32* %49, align 4
  br label %53

53:                                               ; preds = %52, %48
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #12
  store i8* null, i8** %45, align 8
  br label %54

54:                                               ; preds = %53, %44
  %55 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %64, label %58, !prof !4

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 3, i32 0, i32 1, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62, !prof !2

62:                                               ; preds = %58
  store i32 0, i32* %59, align 4
  br label %63

63:                                               ; preds = %62, %58
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #12
  store i8* null, i8** %55, align 8
  br label %64

64:                                               ; preds = %63, %54
  %65 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %74, label %68, !prof !4

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %73, label %72, !prof !2

72:                                               ; preds = %68
  store i32 0, i32* %69, align 4
  br label %73

73:                                               ; preds = %72, %68
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #12
  store i8* null, i8** %65, align 8
  br label %74

74:                                               ; preds = %73, %64
  %75 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %84, label %78, !prof !4

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %83, label %82, !prof !2

82:                                               ; preds = %78
  store i32 0, i32* %79, align 4
  br label %83

83:                                               ; preds = %82, %78
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #12
  store i8* null, i8** %75, align 8
  br label %84

84:                                               ; preds = %83, %74
  %85 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %94, label %88, !prof !4

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92, !prof !2

92:                                               ; preds = %88
  store i32 0, i32* %89, align 4
  br label %93

93:                                               ; preds = %92, %88
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %86) #12
  store i8* null, i8** %85, align 8
  br label %94

94:                                               ; preds = %84, %93
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink22MediaStreamAudioSource29RenderToAssociatedSinkEnabledEv(%"class.blink::MediaStreamAudioSource"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare %"class.blink::ProcessedLocalAudioSource"* @_ZN5blink25ProcessedLocalAudioSource4FromEPNS_22MediaStreamAudioSourceE(%"class.blink::MediaStreamAudioSource"*) local_unnamed_addr #1

declare void @_ZNK5blink22MediaStreamAudioSource18GetAudioParametersEv(%"class.media::AudioParameters"* sret, %"class.blink::MediaStreamAudioSource"*) local_unnamed_addr #1

declare i64 @_ZNK5media15AudioParameters17GetBufferDurationEv(%"class.media::AudioParameters"*) local_unnamed_addr #1

declare void @_ZN5blink25AudioProcessingProperties24DisableDefaultPropertiesEv(%"struct.blink::AudioProcessingProperties"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink25AudioProcessingProperties32EchoCancellationIsWebRtcProvidedEv(%"struct.blink::AudioProcessingProperties"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_124ProcessingBasedContainerELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.91"* nocapture, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* dereferenceable(352)) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %6, align 8
  %8 = icmp ugt %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %7, i64 %10
  %12 = icmp ugt %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_124ProcessingBasedContainerELj0ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.91"* %0, i32 %5) #12
  %14 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1 to i64
  %17 = ptrtoint %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 352
  tail call fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_124ProcessingBasedContainerELj0ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.91"* %0, i32 %5) #12
  %20 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %23, i64 %26
  %28 = bitcast %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %27 to i8*
  tail call fastcc void @_ZN3WTF15ConstructTraitsIN5blink12_GLOBAL__N_124ProcessingBasedContainerENS_12VectorTraitsIS3_EENS_18PartitionAllocatorEE9ConstructIJS3_EEEPS3_PvDpOT_(i8* %28, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* dereferenceable(352) %24) #12
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF15ConstructTraitsIN5blink12_GLOBAL__N_124ProcessingBasedContainerENS_12VectorTraitsIS3_EENS_18PartitionAllocatorEE9ConstructIJS3_EEEPS3_PvDpOT_(i8*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* dereferenceable(352)) unnamed_addr #0 align 2 {
  %3 = bitcast i8* %0 to i32*
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !3
  store i8 %8, i8* %6, align 8
  %9 = getelementptr inbounds i8, i8* %0, i64 16
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds i8, i8* %0, i64 24
  %12 = bitcast i8* %11 to i32*
  %13 = getelementptr inbounds i8, i8* %0, i64 28
  %14 = bitcast i8* %13 to i32*
  %15 = bitcast %"class.WTF::Vector.86"* %10 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #12
  %16 = load i64, i64* %15, align 8
  %17 = bitcast i8* %9 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %19 = load i32, i32* %12, align 4
  %20 = load i32, i32* %18, align 4
  store i32 %20, i32* %12, align 4
  store i32 %19, i32* %18, align 4
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %22 = load i32, i32* %14, align 4
  %23 = load i32, i32* %21, align 4
  store i32 %23, i32* %14, align 4
  store i32 %22, i32* %21, align 4
  %24 = getelementptr inbounds i8, i8* %0, i64 32
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !3
  store i8 %26, i8* %24, align 8
  %27 = getelementptr inbounds i8, i8* %0, i64 40
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 1, i32 0, i32 1
  %29 = getelementptr inbounds i8, i8* %0, i64 48
  %30 = bitcast i8* %29 to i32*
  %31 = getelementptr inbounds i8, i8* %0, i64 52
  %32 = bitcast i8* %31 to i32*
  %33 = bitcast %"class.WTF::Vector.86"* %28 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #12
  %34 = load i64, i64* %33, align 8
  %35 = bitcast i8* %27 to i64*
  store atomic i64 0, i64* %33 monotonic, align 8
  store atomic i64 %34, i64* %35 monotonic, align 8
  %36 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %37 = load i32, i32* %30, align 4
  %38 = load i32, i32* %36, align 4
  store i32 %38, i32* %30, align 4
  store i32 %37, i32* %36, align 4
  %39 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %40 = load i32, i32* %32, align 4
  %41 = load i32, i32* %39, align 4
  store i32 %41, i32* %32, align 4
  store i32 %40, i32* %39, align 4
  %42 = getelementptr inbounds i8, i8* %0, i64 56
  %43 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0
  %44 = load i8, i8* %43, align 8, !range !3
  store i8 %44, i8* %42, align 8
  %45 = getelementptr inbounds i8, i8* %0, i64 64
  %46 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 2, i32 0, i32 1
  %47 = getelementptr inbounds i8, i8* %0, i64 72
  %48 = bitcast i8* %47 to i32*
  %49 = getelementptr inbounds i8, i8* %0, i64 76
  %50 = bitcast i8* %49 to i32*
  %51 = bitcast %"class.WTF::Vector.86"* %46 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #12
  %52 = load i64, i64* %51, align 8
  %53 = bitcast i8* %45 to i64*
  store atomic i64 0, i64* %51 monotonic, align 8
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %55 = load i32, i32* %48, align 4
  %56 = load i32, i32* %54, align 4
  store i32 %56, i32* %48, align 4
  store i32 %55, i32* %54, align 4
  %57 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %58 = load i32, i32* %50, align 4
  %59 = load i32, i32* %57, align 4
  store i32 %59, i32* %50, align 4
  store i32 %58, i32* %57, align 4
  %60 = getelementptr inbounds i8, i8* %0, i64 80
  %61 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0
  %62 = load i8, i8* %61, align 8, !range !3
  store i8 %62, i8* %60, align 8
  %63 = getelementptr inbounds i8, i8* %0, i64 88
  %64 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 3, i32 0, i32 1
  %65 = getelementptr inbounds i8, i8* %0, i64 96
  %66 = bitcast i8* %65 to i32*
  %67 = getelementptr inbounds i8, i8* %0, i64 100
  %68 = bitcast i8* %67 to i32*
  %69 = bitcast %"class.WTF::Vector.86"* %64 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #12
  %70 = load i64, i64* %69, align 8
  %71 = bitcast i8* %63 to i64*
  store atomic i64 0, i64* %69 monotonic, align 8
  store atomic i64 %70, i64* %71 monotonic, align 8
  %72 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 3, i32 0, i32 1, i32 0, i32 0, i32 1
  %73 = load i32, i32* %66, align 4
  %74 = load i32, i32* %72, align 4
  store i32 %74, i32* %66, align 4
  store i32 %73, i32* %72, align 4
  %75 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 3, i32 0, i32 1, i32 0, i32 0, i32 2
  %76 = load i32, i32* %68, align 4
  %77 = load i32, i32* %75, align 4
  store i32 %77, i32* %68, align 4
  store i32 %76, i32* %75, align 4
  %78 = getelementptr inbounds i8, i8* %0, i64 104
  %79 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 4, i32 0, i32 0
  %80 = load i8, i8* %79, align 8, !range !3
  store i8 %80, i8* %78, align 8
  %81 = getelementptr inbounds i8, i8* %0, i64 112
  %82 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 4, i32 0, i32 1
  %83 = getelementptr inbounds i8, i8* %0, i64 120
  %84 = bitcast i8* %83 to i32*
  %85 = getelementptr inbounds i8, i8* %0, i64 124
  %86 = bitcast i8* %85 to i32*
  %87 = bitcast %"class.WTF::Vector.86"* %82 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #12
  %88 = load i64, i64* %87, align 8
  %89 = bitcast i8* %81 to i64*
  store atomic i64 0, i64* %87 monotonic, align 8
  store atomic i64 %88, i64* %89 monotonic, align 8
  %90 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %91 = load i32, i32* %84, align 4
  %92 = load i32, i32* %90, align 4
  store i32 %92, i32* %84, align 4
  store i32 %91, i32* %90, align 4
  %93 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 1, i32 0, i64 4, i32 0, i32 1, i32 0, i32 0, i32 2
  %94 = load i32, i32* %86, align 4
  %95 = load i32, i32* %93, align 4
  store i32 %95, i32* %86, align 4
  store i32 %94, i32* %93, align 4
  %96 = getelementptr inbounds i8, i8* %0, i64 128
  %97 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 2, i32 0, i32 0
  %98 = load i8, i8* %97, align 8, !range !3
  store i8 %98, i8* %96, align 8
  %99 = getelementptr inbounds i8, i8* %0, i64 136
  %100 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 2, i32 0, i32 1
  %101 = getelementptr inbounds i8, i8* %0, i64 144
  %102 = bitcast i8* %101 to i32*
  %103 = getelementptr inbounds i8, i8* %0, i64 148
  %104 = bitcast i8* %103 to i32*
  %105 = bitcast %"class.WTF::Vector.86"* %100 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false) #12
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %99 to i64*
  store atomic i64 0, i64* %105 monotonic, align 8
  store atomic i64 %106, i64* %107 monotonic, align 8
  %108 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %109 = load i32, i32* %102, align 4
  %110 = load i32, i32* %108, align 4
  store i32 %110, i32* %102, align 4
  store i32 %109, i32* %108, align 4
  %111 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %112 = load i32, i32* %104, align 4
  %113 = load i32, i32* %111, align 4
  store i32 %113, i32* %104, align 4
  store i32 %112, i32* %111, align 4
  %114 = getelementptr inbounds i8, i8* %0, i64 152
  %115 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 2, i32 1, i32 0
  %116 = load i8, i8* %115, align 8, !range !3
  store i8 %116, i8* %114, align 8
  %117 = getelementptr inbounds i8, i8* %0, i64 160
  %118 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 2, i32 1, i32 1
  %119 = getelementptr inbounds i8, i8* %0, i64 168
  %120 = bitcast i8* %119 to i32*
  %121 = getelementptr inbounds i8, i8* %0, i64 172
  %122 = bitcast i8* %121 to i32*
  %123 = bitcast %"class.WTF::Vector.96"* %118 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false) #12
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i8* %117 to i64*
  store atomic i64 0, i64* %123 monotonic, align 8
  store atomic i64 %124, i64* %125 monotonic, align 8
  %126 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 1
  %127 = load i32, i32* %120, align 4
  %128 = load i32, i32* %126, align 4
  store i32 %128, i32* %120, align 4
  store i32 %127, i32* %126, align 4
  %129 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2
  %130 = load i32, i32* %122, align 4
  %131 = load i32, i32* %129, align 4
  store i32 %131, i32* %122, align 4
  store i32 %130, i32* %129, align 4
  %132 = getelementptr inbounds i8, i8* %0, i64 176
  %133 = bitcast i8* %132 to %"class.media::AudioParameters"*
  %134 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 2, i32 2
  tail call void @_ZN5media15AudioParametersC1ERKS0_(%"class.media::AudioParameters"* %133, %"class.media::AudioParameters"* dereferenceable(64) %134) #12
  %135 = getelementptr inbounds i8, i8* %0, i64 240
  %136 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 2, i32 3
  %137 = load i8, i8* %136, align 8, !range !3
  store i8 %137, i8* %135, align 8
  %138 = getelementptr inbounds i8, i8* %0, i64 248
  %139 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 3, i32 0, i32 0
  %140 = load i8, i8* %139, align 8, !range !3
  store i8 %140, i8* %138, align 8
  %141 = getelementptr inbounds i8, i8* %0, i64 256
  %142 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 3, i32 0, i32 1
  %143 = getelementptr inbounds i8, i8* %0, i64 264
  %144 = bitcast i8* %143 to i32*
  %145 = getelementptr inbounds i8, i8* %0, i64 268
  %146 = bitcast i8* %145 to i32*
  %147 = bitcast %"class.WTF::Vector.86"* %142 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 16, i1 false) #12
  %148 = load i64, i64* %147, align 8
  %149 = bitcast i8* %141 to i64*
  store atomic i64 0, i64* %147 monotonic, align 8
  store atomic i64 %148, i64* %149 monotonic, align 8
  %150 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 1
  %151 = load i32, i32* %144, align 4
  %152 = load i32, i32* %150, align 4
  store i32 %152, i32* %144, align 4
  store i32 %151, i32* %150, align 4
  %153 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 2
  %154 = load i32, i32* %146, align 4
  %155 = load i32, i32* %153, align 4
  store i32 %155, i32* %146, align 4
  store i32 %154, i32* %153, align 4
  %156 = getelementptr inbounds i8, i8* %0, i64 272
  %157 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %157, i64 16, i1 false) #12
  %158 = getelementptr inbounds i8, i8* %0, i64 288
  %159 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 5
  %160 = getelementptr inbounds i8, i8* %0, i64 296
  %161 = bitcast i8* %160 to i32*
  %162 = getelementptr inbounds i8, i8* %0, i64 300
  %163 = bitcast i8* %162 to i32*
  %164 = bitcast %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer"* %159 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 16, i1 false) #12
  %165 = load i64, i64* %164, align 8
  %166 = bitcast i8* %158 to i64*
  store atomic i64 0, i64* %164 monotonic, align 8
  store atomic i64 %165, i64* %166 monotonic, align 8
  %167 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %168 = load i32, i32* %161, align 4
  %169 = load i32, i32* %167, align 4
  store i32 %169, i32* %161, align 4
  store i32 %168, i32* %167, align 4
  %170 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %171 = load i32, i32* %163, align 4
  %172 = load i32, i32* %170, align 4
  store i32 %172, i32* %163, align 4
  store i32 %171, i32* %170, align 4
  %173 = getelementptr inbounds i8, i8* %0, i64 304
  %174 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 48, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_124ProcessingBasedContainerELj0ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.91"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::VectorBufferBase.93", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 2
  %7 = add i32 %5, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 4
  %10 = select i1 %9, i32 %8, i32 4
  %11 = icmp ugt i32 %10, %1
  %12 = select i1 %11, i32 %10, i32 %1
  %13 = icmp ult i32 %5, %12
  br i1 %13, label %14, label %50, !prof !4

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %15, align 8
  %17 = icmp eq %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %0, i64 0, i32 0, i32 0
  tail call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_124ProcessingBasedContainerENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.93"* %19, i32 %12) #12
  br label %50

20:                                               ; preds = %14
  %21 = bitcast %"class.WTF::VectorBufferBase.93"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.WTF::VectorBufferBase.93", %"class.WTF::VectorBufferBase.93"* %3, i64 0, i32 0
  %23 = getelementptr inbounds %"class.WTF::VectorBufferBase.93", %"class.WTF::VectorBufferBase.93"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false) #12
  store %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* null, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %22, align 8
  store i32 0, i32* %23, align 8
  call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_124ProcessingBasedContainerENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.93"* nonnull %3, i32 %12) #12
  %24 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %22, align 8
  %25 = bitcast i32* %23 to i64*
  %26 = load i64, i64* %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #12
  %27 = ptrtoint %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %24 to i64
  %28 = load %"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"** %15, align 8
  %29 = getelementptr inbounds %"class.WTF::Vector.91", %"class.WTF::Vector.91"* %0, i64 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %28, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %20
  %35 = bitcast %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %28 to i8*
  br label %46

36:                                               ; preds = %20, %36
  %37 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ %41, %36 ], [ %28, %20 ]
  %38 = phi %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* [ %40, %36 ], [ %24, %20 ]
  %39 = bitcast %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %38 to i8*
  tail call fastcc void @_ZN3WTF15ConstructTraitsIN5blink12_GLOBAL__N_124ProcessingBasedContainerENS_12VectorTraitsIS3_EENS_18PartitionAllocatorEE9ConstructIJS3_EEEPS3_PvDpOT_(i8* %39, %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* dereferenceable(352) %37) #12
  tail call fastcc void @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainerD2Ev(%"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %37) #12
  %40 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %38, i64 1
  %41 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %37, i64 1
  %42 = icmp eq %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %41, %32
  br i1 %42, label %43, label %36

43:                                               ; preds = %36
  %44 = bitcast %"class.WTF::Vector.91"* %0 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %34
  %47 = phi i8* [ %45, %43 ], [ %35, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %47) #12
  %48 = bitcast %"class.WTF::Vector.91"* %0 to i64*
  store atomic i64 %27, i64* %48 monotonic, align 8
  %49 = trunc i64 %26 to i32
  store i32 %49, i32* %4, align 8
  br label %50

50:                                               ; preds = %2, %18, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_124ProcessingBasedContainerENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.93"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = zext i32 %1 to i64
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = icmp ugt i32 %1, 6094848
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %6) #12
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 6094848) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %13, i8* %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %4) #12
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %22 = mul nuw nsw i64 %6, 352
  %23 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %22) #12
  %24 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_124ProcessingBasedContainerEEEPKcv, i64 0, i64 0)) #12
  %25 = bitcast %"class.WTF::VectorBufferBase.93"* %0 to i64*
  %26 = ptrtoint i8* %24 to i64
  store atomic i64 %26, i64* %25 monotonic, align 8
  %27 = udiv i64 %23, 352
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.WTF::VectorBufferBase.93", %"class.WTF::VectorBufferBase.93"* %0, i64 0, i32 1
  store i32 %28, i32* %29, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainerC2ENS_20AudioCaptureSettings14ProcessingTypeEN3WTF6VectorINS_25AudioProcessingProperties20EchoCancellationTypeELj0ENS4_18PartitionAllocatorEEENS_17media_constraints11DiscreteSetIbEESC_SC_SC_SC_SC_NSA_15NumericRangeSetIiEENS5_IiLj0ES8_EESE_NS0_10SourceInfoEbN5media15AudioParametersEb(%"class.blink::(anonymous namespace)::ProcessingBasedContainer"*, i32, %"class.WTF::Vector.96"*, %"class.blink::media_constraints::DiscreteSet.85"* nocapture readonly, %"class.blink::media_constraints::DiscreteSet.85"* nocapture readonly, %"class.blink::media_constraints::DiscreteSet.85"* nocapture readonly, %"class.blink::media_constraints::DiscreteSet.85"* nocapture readonly, %"class.blink::media_constraints::DiscreteSet.85"* nocapture readonly, %"class.blink::media_constraints::DiscreteSet.85"* nocapture readonly, %"class.blink::media_constraints::NumericRangeSet"* nocapture readonly byval(%"class.blink::media_constraints::NumericRangeSet") align 8, %"class.WTF::Vector.101"* nocapture readonly, %"class.blink::media_constraints::NumericRangeSet"* nocapture readonly byval(%"class.blink::media_constraints::NumericRangeSet") align 8, %"class.blink::(anonymous namespace)::SourceInfo"* nocapture readonly byval(%"class.blink::(anonymous namespace)::SourceInfo") align 8, i1 zeroext, %"class.media::AudioParameters"*, i1 zeroext) unnamed_addr #0 align 2 {
  %17 = alloca [7 x i8], align 1
  %18 = alloca [7 x i8], align 1
  %19 = alloca i32, align 4
  %20 = alloca %"class.blink::(anonymous namespace)::EchoCancellationContainer", align 8
  %21 = alloca %"class.media::AudioParameters", align 8
  %22 = alloca [7 x i8], align 1
  %23 = alloca [7 x i8], align 1
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 0
  store i32 %1, i32* %24, align 8
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 0
  store i8 1, i8* %25, align 8
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %29 = bitcast %"class.WTF::Vector.86"* %26 to i64*
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %27, align 4
  store i32 0, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 1, i32 0, i32 0
  store i8 1, i8* %30, align 8
  %31 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 1, i32 0, i32 1
  %32 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %34 = bitcast %"class.WTF::Vector.86"* %31 to i64*
  store atomic i64 0, i64* %34 monotonic, align 8
  store i32 0, i32* %32, align 4
  store i32 0, i32* %33, align 4
  %35 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 2, i32 0, i32 0
  store i8 1, i8* %35, align 8
  %36 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 2, i32 0, i32 1
  %37 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %39 = bitcast %"class.WTF::Vector.86"* %36 to i64*
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %37, align 4
  store i32 0, i32* %38, align 4
  %40 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 3, i32 0, i32 0
  store i8 1, i8* %40, align 8
  %41 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 3, i32 0, i32 1
  %42 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 3, i32 0, i32 1, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 3, i32 0, i32 1, i32 0, i32 0, i32 2
  %44 = bitcast %"class.WTF::Vector.86"* %41 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  store i32 0, i32* %42, align 4
  store i32 0, i32* %43, align 4
  %45 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 4, i32 0, i32 0
  store i8 1, i8* %45, align 8
  %46 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 4, i32 0, i32 1
  %47 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 4, i32 0, i32 1, i32 0, i32 0, i32 2
  %49 = bitcast %"class.WTF::Vector.86"* %46 to i64*
  store atomic i64 0, i64* %49 monotonic, align 8
  store i32 0, i32* %47, align 4
  store i32 0, i32* %48, align 4
  %50 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 0, i32 0
  store i8 1, i8* %50, align 8
  %51 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 0, i32 1
  %52 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 1, i32 1
  %53 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2
  %55 = bitcast %"class.WTF::Vector.96"* %52 to i64*
  %56 = bitcast %"class.WTF::Vector.86"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 17, i1 false) #12
  store atomic i64 0, i64* %55 monotonic, align 8, !alias.scope !50
  store i32 0, i32* %53, align 8, !alias.scope !50
  store i32 0, i32* %54, align 4, !alias.scope !50
  %57 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 2
  tail call void @_ZN5media15AudioParameters23UnavailableDeviceParamsEv(%"class.media::AudioParameters"* sret %57) #12
  %58 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %58, align 8
  %59 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 3, i32 0, i32 0
  store i8 1, i8* %59, align 8
  %60 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 3, i32 0, i32 1
  %61 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 2
  %63 = bitcast %"class.WTF::Vector.86"* %60 to i64*
  store atomic i64 0, i64* %63 monotonic, align 8
  store i32 0, i32* %61, align 4
  store i32 0, i32* %62, align 4
  %64 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 4
  %65 = bitcast %"class.blink::media_constraints::NumericRangeSet"* %9 to <2 x i64>*
  %66 = load <2 x i64>, <2 x i64>* %65, align 8
  %67 = bitcast %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %64 to <2 x i64>*
  store <2 x i64> %66, <2 x i64>* %67, align 4
  %68 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 5
  %69 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %10, i64 0, i32 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %16
  %73 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %10, i64 0, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  br label %93

75:                                               ; preds = %16
  %76 = zext i32 %70 to i64
  %77 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %76) #12
  %78 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %77, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #12
  %79 = ptrtoint i8* %78 to i64
  %80 = lshr i64 %77, 2
  %81 = trunc i64 %80 to i32
  %82 = icmp ne i8* %78, null
  %83 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %10, i64 0, i32 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %10, i64 0, i32 0, i32 0, i32 0
  %86 = load i32*, i32** %85, align 8
  %87 = icmp ne i32* %86, null
  %88 = and i1 %82, %87
  br i1 %88, label %89, label %93, !prof !4

89:                                               ; preds = %75
  %90 = zext i32 %84 to i64
  %91 = bitcast i32* %86 to i8*
  %92 = shl nuw nsw i64 %90, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %78, i8* nonnull align 4 %91, i64 %92, i1 false) #12
  br label %93

93:                                               ; preds = %89, %75, %72
  %94 = phi i32 [ %74, %72 ], [ %84, %75 ], [ %84, %89 ]
  %95 = phi i32 [ 0, %72 ], [ %81, %75 ], [ %81, %89 ]
  %96 = phi i64 [ 0, %72 ], [ %79, %75 ], [ %79, %89 ]
  %97 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %98 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %99 = bitcast %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer"* %68 to i64*
  store atomic i64 %96, i64* %99 monotonic, align 8
  store i32 %95, i32* %97, align 4
  store i32 %94, i32* %98, align 4
  %100 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 6
  %101 = bitcast %"class.blink::media_constraints::NumericRangeSet"* %11 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8
  %103 = bitcast %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %100 to i64*
  %104 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 6, i32 0, i32 1
  %105 = bitcast %"class.absl::optional.72"* %104 to i64*
  %106 = bitcast %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %100 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %106, align 4
  %107 = load i32, i32* @_ZN5blink23kFallbackAudioLatencyMsE, align 4, !noalias !53
  %108 = sitofp i32 %107 to double
  %109 = fdiv double %108, 1.000000e+03
  %110 = tail call i64 @_ZNK5media15AudioParameters17GetBufferDurationEv(%"class.media::AudioParameters"* %14) #12, !noalias !53
  %111 = add i64 %110, -9223372036854775807
  %112 = icmp ult i64 %111, 2
  br i1 %112, label %116, label %113

113:                                              ; preds = %93
  %114 = sitofp i64 %110 to double
  %115 = fdiv double %114, 1.000000e+06
  br label %119

116:                                              ; preds = %93
  %117 = icmp slt i64 %110, 0
  %118 = select i1 %117, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %119

119:                                              ; preds = %116, %113
  %120 = phi double [ %118, %116 ], [ %115, %113 ]
  %121 = getelementptr inbounds %"class.media::AudioParameters", %"class.media::AudioParameters"* %14, i64 0, i32 4
  %122 = load i32, i32* %121, align 8, !noalias !53
  switch i32 %1, label %179 [
    i32 2, label %180
    i32 1, label %123
    i32 0, label %126
  ]

123:                                              ; preds = %119
  %124 = icmp sgt i32 %122, 0
  %125 = select i1 %124, double %120, double %109
  br label %180

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"class.media::AudioParameters", %"class.media::AudioParameters"* %14, i64 0, i32 8
  %128 = bitcast %"class.absl::optional.7"* %127 to i64*
  %129 = load i64, i64* %128, align 4, !noalias !53
  %130 = getelementptr inbounds %"class.media::AudioParameters", %"class.media::AudioParameters"* %14, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %131 = load i32, i32* %130, align 4, !noalias !53
  %132 = trunc i64 %129 to i8
  %133 = lshr i64 %129, 32
  %134 = trunc i64 %133 to i32
  %135 = icmp ne i8 %132, 0
  %136 = icmp sgt i32 %134, 0
  %137 = and i1 %135, %136
  %138 = icmp sgt i32 %131, 0
  %139 = and i1 %138, %137
  %140 = zext i32 %131 to i64
  %141 = shl nuw i64 %140, 32
  %142 = or i64 %141, %133
  %143 = zext i32 %122 to i64
  %144 = shl nuw i64 %143, 32
  %145 = or i64 %144, %143
  %146 = select i1 %139, i64 %142, i64 %145
  %147 = shl i64 %146, 32
  %148 = ashr exact i64 %147, 32
  %149 = mul nsw i64 %148, 1000000
  %150 = sitofp i64 %149 to float
  %151 = getelementptr inbounds %"class.media::AudioParameters", %"class.media::AudioParameters"* %14, i64 0, i32 3
  %152 = load i32, i32* %151, align 4, !noalias !53
  %153 = sitofp i32 %152 to float
  %154 = fdiv float %150, %153
  %155 = fptosi float %154 to i64
  %156 = add i64 %155, -9223372036854775807
  %157 = icmp ult i64 %156, 2
  br i1 %157, label %161, label %158

158:                                              ; preds = %126
  %159 = sitofp i64 %155 to double
  %160 = fdiv double %159, 1.000000e+06
  br label %164

161:                                              ; preds = %126
  %162 = icmp slt i64 %155, 0
  %163 = select i1 %162, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %164

164:                                              ; preds = %161, %158
  %165 = phi double [ %163, %161 ], [ %160, %158 ]
  %166 = ashr i64 %146, 32
  %167 = mul nsw i64 %166, 1000000
  %168 = sitofp i64 %167 to float
  %169 = fdiv float %168, %153
  %170 = fptosi float %169 to i64
  %171 = add i64 %170, -9223372036854775807
  %172 = icmp ult i64 %171, 2
  br i1 %172, label %176, label %173

173:                                              ; preds = %164
  %174 = sitofp i64 %170 to double
  %175 = fdiv double %174, 1.000000e+06
  br label %180

176:                                              ; preds = %164
  %177 = icmp slt i64 %170, 0
  %178 = select i1 %177, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %180

179:                                              ; preds = %119
  unreachable

180:                                              ; preds = %173, %176, %119, %123
  %181 = phi double [ %125, %123 ], [ %109, %119 ], [ %165, %176 ], [ %165, %173 ]
  %182 = phi double [ %125, %123 ], [ %109, %119 ], [ %178, %176 ], [ %175, %173 ]
  %183 = getelementptr inbounds [7 x i8], [7 x i8]* %17, i64 0, i64 0
  %184 = getelementptr inbounds [7 x i8], [7 x i8]* %18, i64 0, i64 0
  %185 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %185, align 8
  %186 = bitcast %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0 to i8*
  %187 = getelementptr inbounds i8, i8* %186, i64 321
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %187, i8* nonnull align 1 %183, i64 7, i1 false)
  %188 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %181, double* %188, align 8
  %189 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %189, align 8
  %190 = getelementptr inbounds i8, i8* %186, i64 337
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %190, i8* nonnull align 1 %184, i64 7, i1 false)
  %191 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %182, double* %191, align 8
  %192 = getelementptr inbounds %"class.media::AudioParameters", %"class.media::AudioParameters"* %14, i64 0, i32 5
  %193 = load i32, i32* %192, align 4
  %194 = and i32 %193, 65
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %212, label %196

196:                                              ; preds = %180
  %197 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %197) #12
  store i32 2, i32* %19, align 4
  %198 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %2, i64 0, i32 0, i32 0, i32 2
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %2, i64 0, i32 0, i32 0, i32 1
  %201 = load i32, i32* %200, align 8
  %202 = icmp eq i32 %199, %201
  br i1 %202, label %210, label %203, !prof !2

203:                                              ; preds = %196
  %204 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %2, i64 0, i32 0, i32 0, i32 0
  %205 = load i32*, i32** %204, align 8
  %206 = zext i32 %199 to i64
  %207 = getelementptr inbounds i32, i32* %205, i64 %206
  store i32 2, i32* %207, align 4
  %208 = load i32, i32* %198, align 4
  %209 = add i32 %208, 1
  store i32 %209, i32* %198, align 4
  br label %211

210:                                              ; preds = %196
  call void @_ZN3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.96"* %2, i32* nonnull dereferenceable(4) %19) #12
  br label %211

211:                                              ; preds = %203, %210
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %197) #12
  br label %212

212:                                              ; preds = %180, %211
  %213 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %20, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %213) #12
  %214 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %2, i64 0, i32 0, i32 0, i32 1
  %215 = load i32, i32* %214, align 8
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %220

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %2, i64 0, i32 0, i32 0, i32 2
  %219 = load i32, i32* %218, align 4
  br label %238

220:                                              ; preds = %212
  %221 = zext i32 %215 to i64
  %222 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEmm(i64 %221) #12
  %223 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %222, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEPKcv, i64 0, i64 0)) #12
  %224 = ptrtoint i8* %223 to i64
  %225 = lshr i64 %222, 2
  %226 = trunc i64 %225 to i32
  %227 = icmp ne i8* %223, null
  %228 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %2, i64 0, i32 0, i32 0, i32 2
  %229 = load i32, i32* %228, align 4
  %230 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %2, i64 0, i32 0, i32 0, i32 0
  %231 = load i32*, i32** %230, align 8
  %232 = icmp ne i32* %231, null
  %233 = and i1 %227, %232
  br i1 %233, label %234, label %238, !prof !4

234:                                              ; preds = %220
  %235 = zext i32 %229 to i64
  %236 = bitcast i32* %231 to i8*
  %237 = shl nuw nsw i64 %235, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %223, i8* nonnull align 4 %236, i64 %237, i1 false) #12
  br label %238

238:                                              ; preds = %217, %220, %234
  %239 = phi i32 [ %219, %217 ], [ %229, %220 ], [ %229, %234 ]
  %240 = phi i32 [ 0, %217 ], [ %226, %220 ], [ %226, %234 ]
  %241 = phi i64 [ 0, %217 ], [ %224, %220 ], [ %224, %234 ]
  %242 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %12, i64 0, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = icmp eq i32 %243, 0
  call void @_ZN5media15AudioParametersC1ERKS0_(%"class.media::AudioParameters"* nonnull %21, %"class.media::AudioParameters"* dereferenceable(64) %14) #12
  %245 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %12, i64 0, i32 1, i32 0
  %246 = load i32, i32* %245, align 4
  %247 = zext i1 %13 to i8
  store i8 1, i8* %213, align 8
  %248 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %20, i64 0, i32 0, i32 1
  %249 = bitcast %"class.WTF::Vector.86"* %248 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %249, i8 0, i64 16, i1 false) #12
  %250 = icmp eq i32 %240, 0
  br i1 %250, label %265, label %251

251:                                              ; preds = %238
  %252 = zext i32 %240 to i64
  %253 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEmm(i64 %252) #12
  %254 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %253, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEPKcv, i64 0, i64 0)) #12
  %255 = ptrtoint i8* %254 to i64
  %256 = lshr i64 %253, 2
  %257 = trunc i64 %256 to i32
  %258 = icmp ne i8* %254, null
  %259 = icmp ne i64 %241, 0
  %260 = and i1 %259, %258
  br i1 %260, label %261, label %265, !prof !4

261:                                              ; preds = %251
  %262 = zext i32 %239 to i64
  %263 = inttoptr i64 %241 to i8*
  %264 = shl nuw nsw i64 %262, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %254, i8* nonnull align 4 %263, i64 %264, i1 false) #12
  br label %265

265:                                              ; preds = %238, %261, %251
  %266 = phi i32 [ %257, %251 ], [ %257, %261 ], [ 0, %238 ]
  %267 = phi i64 [ %255, %251 ], [ %255, %261 ], [ 0, %238 ]
  %268 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %20, i64 0, i32 1, i32 0
  store i8 0, i8* %268, align 8
  %269 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %20, i64 0, i32 1, i32 1
  %270 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %20, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %271 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %20, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %272 = bitcast %"class.WTF::Vector.96"* %269 to i64*
  store atomic i64 %267, i64* %272 monotonic, align 8
  store i32 %266, i32* %270, align 8
  store i32 %239, i32* %271, align 4
  %273 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %20, i64 0, i32 2
  call void @_ZN5media15AudioParametersC1ERKS0_(%"class.media::AudioParameters"* %273, %"class.media::AudioParameters"* nonnull dereferenceable(64) %21) #12
  %274 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %20, i64 0, i32 3
  store i8 %247, i8* %274, align 8
  br i1 %244, label %311, label %275

275:                                              ; preds = %265
  %276 = xor i1 %15, true
  %277 = icmp eq i32 %246, 2
  %278 = or i1 %277, %276
  br i1 %278, label %279, label %311

279:                                              ; preds = %275
  %280 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 4) #12
  %281 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %280, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEPKcv, i64 0, i64 0)) #12
  %282 = ptrtoint i8* %281 to i64
  %283 = lshr i64 %280, 2
  %284 = trunc i64 %283 to i32
  %285 = icmp eq i8* %281, null
  br i1 %285, label %288, label %286, !prof !2

286:                                              ; preds = %279
  %287 = bitcast i8* %281 to i32*
  store i32 %246, i32* %287, align 4
  br label %288

288:                                              ; preds = %286, %279
  store i8 0, i8* %268, align 8
  %289 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %269, i64 0, i32 0, i32 0, i32 0
  %290 = load i32*, i32** %289, align 8
  store atomic i64 %282, i64* %272 monotonic, align 8
  store i32 %284, i32* %270, align 8
  store i32 1, i32* %271, align 4
  %291 = icmp eq i32* %290, null
  br i1 %291, label %294, label %292, !prof !4

292:                                              ; preds = %288
  %293 = bitcast i32* %290 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %293) #12
  br label %294

294:                                              ; preds = %292, %288
  %295 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12
  %296 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %295, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %297 = ptrtoint i8* %296 to i64
  %298 = trunc i64 %295 to i32
  %299 = icmp eq i8* %296, null
  br i1 %299, label %303, label %300, !prof !2

300:                                              ; preds = %294
  %301 = icmp ne i32 %246, 0
  %302 = zext i1 %301 to i8
  store i8 %302, i8* %296, align 1
  br label %303

303:                                              ; preds = %300, %294
  store i8 0, i8* %213, align 8
  %304 = bitcast %"class.WTF::Vector.86"* %248 to i64*
  %305 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %248, i64 0, i32 0, i32 0, i32 0
  %306 = load i8*, i8** %305, align 8
  store atomic i64 %297, i64* %304 monotonic, align 8
  %307 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %20, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  store i32 %298, i32* %307, align 8
  %308 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %20, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  store i32 1, i32* %308, align 4
  %309 = icmp eq i8* %306, null
  br i1 %309, label %311, label %310, !prof !4

310:                                              ; preds = %303
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %306) #12
  br label %311

311:                                              ; preds = %265, %275, %303, %310
  %312 = load i8, i8* %213, align 8, !range !3
  store i8 %312, i8* %50, align 8
  %313 = bitcast %"class.WTF::Vector.86"* %248 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.WTF::Vector.86"* %51 to i64*
  %316 = load i64, i64* %315, align 8
  store atomic i64 %316, i64* %313 monotonic, align 8
  store atomic i64 %314, i64* %315 monotonic, align 8
  %317 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %318 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %20, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %319 = load i32, i32* %317, align 4
  %320 = load i32, i32* %318, align 8
  store i32 %320, i32* %317, align 4
  store i32 %319, i32* %318, align 8
  %321 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 2
  %322 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %20, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %323 = load i32, i32* %321, align 4
  %324 = load i32, i32* %322, align 4
  store i32 %324, i32* %321, align 4
  store i32 %323, i32* %322, align 4
  %325 = load i8, i8* %268, align 8, !range !3
  %326 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 2, i32 1, i32 0
  store i8 %325, i8* %326, align 8
  %327 = load i64, i64* %272, align 8
  %328 = load i64, i64* %55, align 8
  store atomic i64 %328, i64* %272 monotonic, align 8
  store atomic i64 %327, i64* %55 monotonic, align 8
  %329 = load i32, i32* %53, align 4
  %330 = load i32, i32* %270, align 8
  store i32 %330, i32* %53, align 4
  store i32 %329, i32* %270, align 8
  %331 = load i32, i32* %54, align 4
  %332 = load i32, i32* %271, align 4
  store i32 %332, i32* %54, align 4
  store i32 %331, i32* %271, align 4
  %333 = call dereferenceable(64) %"class.media::AudioParameters"* @_ZN5media15AudioParametersaSERKS0_(%"class.media::AudioParameters"* %57, %"class.media::AudioParameters"* dereferenceable(64) %273) #12
  %334 = load i8, i8* %274, align 8, !range !3
  store i8 %334, i8* %58, align 8
  call void @_ZN5media15AudioParametersD1Ev(%"class.media::AudioParameters"* %273) #12
  %335 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %20, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %336 = load i32*, i32** %335, align 8
  %337 = icmp eq i32* %336, null
  %338 = bitcast i32* %336 to i8*
  br i1 %337, label %344, label %339, !prof !4

339:                                              ; preds = %311
  %340 = load i32, i32* %271, align 4
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %343, label %342, !prof !2

342:                                              ; preds = %339
  store i32 0, i32* %271, align 4
  br label %343

343:                                              ; preds = %342, %339
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %338) #12
  store i32* null, i32** %335, align 8
  br label %344

344:                                              ; preds = %343, %311
  %345 = getelementptr inbounds %"class.blink::(anonymous namespace)::EchoCancellationContainer", %"class.blink::(anonymous namespace)::EchoCancellationContainer"* %20, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %353, label %348, !prof !4

348:                                              ; preds = %344
  %349 = load i32, i32* %322, align 4
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %352, label %351, !prof !2

351:                                              ; preds = %348
  store i32 0, i32* %322, align 4
  br label %352

352:                                              ; preds = %351, %348
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %346) #12
  store i8* null, i8** %345, align 8
  br label %353

353:                                              ; preds = %344, %352
  call void @_ZN5media15AudioParametersD1Ev(%"class.media::AudioParameters"* nonnull %21) #12
  %354 = icmp eq i64 %241, 0
  br i1 %354, label %357, label %355, !prof !4

355:                                              ; preds = %353
  %356 = inttoptr i64 %241 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %356) #12
  br label %357

357:                                              ; preds = %353, %355
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %213) #12
  %358 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %3, i64 0, i32 0
  %359 = load i8, i8* %358, align 8, !range !3
  %360 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %361 = load i32, i32* %360, align 8
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %369, label %363

363:                                              ; preds = %357
  %364 = zext i32 %361 to i64
  %365 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %364) #12
  %366 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %365, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %367 = ptrtoint i8* %366 to i64
  %368 = trunc i64 %365 to i32
  br label %369

369:                                              ; preds = %363, %357
  %370 = phi i64 [ 0, %357 ], [ %367, %363 ]
  %371 = phi i32 [ 0, %357 ], [ %368, %363 ]
  %372 = phi i8* [ null, %357 ], [ %366, %363 ]
  %373 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %374 = load i32, i32* %373, align 4
  %375 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %376 = load i8*, i8** %375, align 8
  %377 = icmp ne i8* %372, null
  %378 = icmp ne i8* %376, null
  %379 = and i1 %377, %378
  br i1 %379, label %380, label %382, !prof !4

380:                                              ; preds = %369
  %381 = zext i32 %374 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %372, i8* nonnull align 1 %376, i64 %381, i1 false) #12
  br label %382

382:                                              ; preds = %369, %380
  store i8 %359, i8* %59, align 8
  %383 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %60, i64 0, i32 0, i32 0, i32 0
  %384 = load i8*, i8** %383, align 8
  store atomic i64 %370, i64* %63 monotonic, align 8
  store i32 %371, i32* %61, align 4
  store i32 %374, i32* %62, align 4
  %385 = icmp eq i8* %384, null
  br i1 %385, label %387, label %386, !prof !4

386:                                              ; preds = %382
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %384) #12
  br label %387

387:                                              ; preds = %386, %382
  %388 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %4, i64 0, i32 0
  %389 = load i8, i8* %388, align 8, !range !3
  %390 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %391 = load i32, i32* %390, align 8
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %399, label %393

393:                                              ; preds = %387
  %394 = zext i32 %391 to i64
  %395 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %394) #12
  %396 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %395, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %397 = ptrtoint i8* %396 to i64
  %398 = trunc i64 %395 to i32
  br label %399

399:                                              ; preds = %393, %387
  %400 = phi i64 [ 0, %387 ], [ %397, %393 ]
  %401 = phi i32 [ 0, %387 ], [ %398, %393 ]
  %402 = phi i8* [ null, %387 ], [ %396, %393 ]
  %403 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %404 = load i32, i32* %403, align 4
  %405 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %406 = load i8*, i8** %405, align 8
  %407 = icmp ne i8* %402, null
  %408 = icmp ne i8* %406, null
  %409 = and i1 %407, %408
  br i1 %409, label %410, label %412, !prof !4

410:                                              ; preds = %399
  %411 = zext i32 %404 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %402, i8* nonnull align 1 %406, i64 %411, i1 false) #12
  br label %412

412:                                              ; preds = %399, %410
  store i8 %389, i8* %25, align 8
  %413 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %26, i64 0, i32 0, i32 0, i32 0
  %414 = load i8*, i8** %413, align 8
  store atomic i64 %400, i64* %29 monotonic, align 8
  store i32 %401, i32* %27, align 4
  store i32 %404, i32* %28, align 4
  %415 = icmp eq i8* %414, null
  br i1 %415, label %417, label %416, !prof !4

416:                                              ; preds = %412
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %414) #12
  br label %417

417:                                              ; preds = %416, %412
  %418 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %5, i64 0, i32 0
  %419 = load i8, i8* %418, align 8, !range !3
  %420 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %421 = load i32, i32* %420, align 8
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %429, label %423

423:                                              ; preds = %417
  %424 = zext i32 %421 to i64
  %425 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %424) #12
  %426 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %425, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %427 = ptrtoint i8* %426 to i64
  %428 = trunc i64 %425 to i32
  br label %429

429:                                              ; preds = %423, %417
  %430 = phi i32 [ 0, %417 ], [ %428, %423 ]
  %431 = phi i64 [ 0, %417 ], [ %427, %423 ]
  %432 = phi i8* [ null, %417 ], [ %426, %423 ]
  %433 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %5, i64 0, i32 1, i32 0, i32 0, i32 2
  %434 = load i32, i32* %433, align 4
  %435 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %436 = load i8*, i8** %435, align 8
  %437 = icmp ne i8* %432, null
  %438 = icmp ne i8* %436, null
  %439 = and i1 %437, %438
  br i1 %439, label %440, label %442, !prof !4

440:                                              ; preds = %429
  %441 = zext i32 %434 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %432, i8* nonnull align 1 %436, i64 %441, i1 false) #12
  br label %442

442:                                              ; preds = %429, %440
  store i8 %419, i8* %30, align 8
  %443 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %31, i64 0, i32 0, i32 0, i32 0
  %444 = load i8*, i8** %443, align 8
  store atomic i64 %431, i64* %34 monotonic, align 8
  store i32 %430, i32* %32, align 4
  store i32 %434, i32* %33, align 4
  %445 = icmp eq i8* %444, null
  br i1 %445, label %447, label %446, !prof !4

446:                                              ; preds = %442
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %444) #12
  br label %447

447:                                              ; preds = %446, %442
  %448 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %6, i64 0, i32 0
  %449 = load i8, i8* %448, align 8, !range !3
  %450 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %451 = load i32, i32* %450, align 8
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %459, label %453

453:                                              ; preds = %447
  %454 = zext i32 %451 to i64
  %455 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %454) #12
  %456 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %455, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %457 = ptrtoint i8* %456 to i64
  %458 = trunc i64 %455 to i32
  br label %459

459:                                              ; preds = %453, %447
  %460 = phi i32 [ 0, %447 ], [ %458, %453 ]
  %461 = phi i64 [ 0, %447 ], [ %457, %453 ]
  %462 = phi i8* [ null, %447 ], [ %456, %453 ]
  %463 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %6, i64 0, i32 1, i32 0, i32 0, i32 2
  %464 = load i32, i32* %463, align 4
  %465 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %466 = load i8*, i8** %465, align 8
  %467 = icmp ne i8* %462, null
  %468 = icmp ne i8* %466, null
  %469 = and i1 %467, %468
  br i1 %469, label %470, label %472, !prof !4

470:                                              ; preds = %459
  %471 = zext i32 %464 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %462, i8* nonnull align 1 %466, i64 %471, i1 false) #12
  br label %472

472:                                              ; preds = %459, %470
  store i8 %449, i8* %35, align 8
  %473 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %36, i64 0, i32 0, i32 0, i32 0
  %474 = load i8*, i8** %473, align 8
  store atomic i64 %461, i64* %39 monotonic, align 8
  store i32 %460, i32* %37, align 4
  store i32 %464, i32* %38, align 4
  %475 = icmp eq i8* %474, null
  br i1 %475, label %477, label %476, !prof !4

476:                                              ; preds = %472
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %474) #12
  br label %477

477:                                              ; preds = %476, %472
  %478 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %7, i64 0, i32 0
  %479 = load i8, i8* %478, align 8, !range !3
  %480 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %7, i64 0, i32 1, i32 0, i32 0, i32 1
  %481 = load i32, i32* %480, align 8
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %489, label %483

483:                                              ; preds = %477
  %484 = zext i32 %481 to i64
  %485 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %484) #12
  %486 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %485, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %487 = ptrtoint i8* %486 to i64
  %488 = trunc i64 %485 to i32
  br label %489

489:                                              ; preds = %483, %477
  %490 = phi i32 [ 0, %477 ], [ %488, %483 ]
  %491 = phi i64 [ 0, %477 ], [ %487, %483 ]
  %492 = phi i8* [ null, %477 ], [ %486, %483 ]
  %493 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %7, i64 0, i32 1, i32 0, i32 0, i32 2
  %494 = load i32, i32* %493, align 4
  %495 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %496 = load i8*, i8** %495, align 8
  %497 = icmp ne i8* %492, null
  %498 = icmp ne i8* %496, null
  %499 = and i1 %497, %498
  br i1 %499, label %500, label %502, !prof !4

500:                                              ; preds = %489
  %501 = zext i32 %494 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %492, i8* nonnull align 1 %496, i64 %501, i1 false) #12
  br label %502

502:                                              ; preds = %489, %500
  store i8 %479, i8* %40, align 8
  %503 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %41, i64 0, i32 0, i32 0, i32 0
  %504 = load i8*, i8** %503, align 8
  store atomic i64 %491, i64* %44 monotonic, align 8
  store i32 %490, i32* %42, align 4
  store i32 %494, i32* %43, align 4
  %505 = icmp eq i8* %504, null
  br i1 %505, label %507, label %506, !prof !4

506:                                              ; preds = %502
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %504) #12
  br label %507

507:                                              ; preds = %506, %502
  %508 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %8, i64 0, i32 0
  %509 = load i8, i8* %508, align 8, !range !3
  %510 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %8, i64 0, i32 1, i32 0, i32 0, i32 1
  %511 = load i32, i32* %510, align 8
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %519, label %513

513:                                              ; preds = %507
  %514 = zext i32 %511 to i64
  %515 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %514) #12
  %516 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %515, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %517 = ptrtoint i8* %516 to i64
  %518 = trunc i64 %515 to i32
  br label %519

519:                                              ; preds = %513, %507
  %520 = phi i32 [ 0, %507 ], [ %518, %513 ]
  %521 = phi i64 [ 0, %507 ], [ %517, %513 ]
  %522 = phi i8* [ null, %507 ], [ %516, %513 ]
  %523 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %8, i64 0, i32 1, i32 0, i32 0, i32 2
  %524 = load i32, i32* %523, align 4
  %525 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %526 = load i8*, i8** %525, align 8
  %527 = icmp ne i8* %522, null
  %528 = icmp ne i8* %526, null
  %529 = and i1 %527, %528
  br i1 %529, label %530, label %532, !prof !4

530:                                              ; preds = %519
  %531 = zext i32 %524 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %522, i8* nonnull align 1 %526, i64 %531, i1 false) #12
  br label %532

532:                                              ; preds = %519, %530
  store i8 %509, i8* %45, align 8
  %533 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %46, i64 0, i32 0, i32 0, i32 0
  %534 = load i8*, i8** %533, align 8
  store atomic i64 %521, i64* %49 monotonic, align 8
  store i32 %520, i32* %47, align 4
  store i32 %524, i32* %48, align 4
  %535 = icmp eq i8* %534, null
  br i1 %535, label %537, label %536, !prof !4

536:                                              ; preds = %532
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %534) #12
  br label %537

537:                                              ; preds = %536, %532
  br i1 %244, label %631, label %538

538:                                              ; preds = %537
  br i1 %15, label %539, label %542

539:                                              ; preds = %538
  %540 = load i32, i32* %24, align 8
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %631, label %542

542:                                              ; preds = %539, %538
  %543 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %12, i64 0, i32 1
  %544 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %12, i64 0, i32 1, i32 5
  %545 = load i8, i8* %544, align 4, !range !3
  %546 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12
  %547 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %546, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %548 = ptrtoint i8* %547 to i64
  %549 = trunc i64 %546 to i32
  %550 = icmp eq i8* %547, null
  br i1 %550, label %552, label %551, !prof !2

551:                                              ; preds = %542
  store i8 %545, i8* %547, align 1
  br label %552

552:                                              ; preds = %542, %551
  store i8 0, i8* %59, align 8
  %553 = load i8*, i8** %383, align 8
  store atomic i64 %548, i64* %63 monotonic, align 8
  store i32 %549, i32* %61, align 4
  store i32 1, i32* %62, align 4
  %554 = icmp eq i8* %553, null
  br i1 %554, label %556, label %555, !prof !4

555:                                              ; preds = %552
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %553) #12
  br label %556

556:                                              ; preds = %552, %555
  %557 = bitcast %"struct.blink::AudioProcessingProperties"* %543 to i8*
  br label %603

558:                                              ; preds = %628
  %559 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %560 = load i8, i8* %559, align 4, !range !3
  %561 = icmp eq i8 %560, 0
  br i1 %561, label %562, label %563, !prof !2

562:                                              ; preds = %558
  call void @llvm.trap() #12
  unreachable

563:                                              ; preds = %558
  %564 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %565 = load i32, i32* %564, align 4
  %566 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 4) #12
  %567 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %566, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #12
  %568 = ptrtoint i8* %567 to i64
  %569 = lshr i64 %566, 2
  %570 = trunc i64 %569 to i32
  %571 = icmp eq i8* %567, null
  br i1 %571, label %574, label %572, !prof !2

572:                                              ; preds = %563
  %573 = bitcast i8* %567 to i32*
  store i32 %565, i32* %573, align 4
  br label %574

574:                                              ; preds = %563, %572
  %575 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer", %"class.blink::(anonymous namespace)::NumericDiscreteSetContainer"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %576 = load i32*, i32** %575, align 8
  store atomic i64 %568, i64* %99 monotonic, align 8
  store i32 %570, i32* %97, align 4
  store i32 1, i32* %98, align 4
  %577 = icmp eq i32* %576, null
  br i1 %577, label %580, label %578, !prof !4

578:                                              ; preds = %574
  %579 = bitcast i32* %576 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %579) #12
  br label %580

580:                                              ; preds = %578, %574
  %581 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %12, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %582 = load i8, i8* %581, align 4, !range !3
  %583 = icmp eq i8 %582, 0
  br i1 %583, label %584, label %585, !prof !2

584:                                              ; preds = %580
  call void @llvm.trap() #12
  unreachable

585:                                              ; preds = %580
  %586 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %12, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %587 = load i32, i32* %586, align 4
  %588 = zext i32 %587 to i64
  %589 = shl nuw i64 %588, 32
  %590 = or i64 %589, 1
  store i64 %590, i64* %103, align 8
  store i64 %590, i64* %105, align 8
  %591 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %12, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %592 = load i8, i8* %591, align 8, !range !3
  %593 = icmp eq i8 %592, 0
  br i1 %593, label %594, label %595, !prof !2

594:                                              ; preds = %585
  call void @llvm.trap() #12
  unreachable

595:                                              ; preds = %585
  %596 = getelementptr inbounds %"class.blink::(anonymous namespace)::SourceInfo", %"class.blink::(anonymous namespace)::SourceInfo"* %12, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %597 = bitcast double* %596 to i64*
  %598 = load i64, i64* %597, align 8
  %599 = getelementptr inbounds [7 x i8], [7 x i8]* %22, i64 0, i64 0
  %600 = getelementptr inbounds [7 x i8], [7 x i8]* %23, i64 0, i64 0
  store i8 1, i8* %185, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %187, i8* nonnull align 1 %599, i64 7, i1 false)
  %601 = bitcast double* %188 to i64*
  store i64 %598, i64* %601, align 8
  store i8 1, i8* %189, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %190, i8* nonnull align 1 %600, i64 7, i1 false)
  %602 = bitcast double* %191 to i64*
  store i64 %598, i64* %602, align 8
  br label %631

603:                                              ; preds = %628, %556
  %604 = phi i64 [ 0, %556 ], [ %629, %628 ]
  %605 = getelementptr inbounds [5 x %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo"], [5 x %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo"]* @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainer32kBooleanPropertyContainerInfoMapE, i64 0, i64 %604, i32 2
  %606 = load i64, i64* %605, align 8
  %607 = getelementptr inbounds i8, i8* %557, i64 %606
  %608 = load i8, i8* %607, align 1, !range !3
  %609 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #12
  %610 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %609, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %611 = ptrtoint i8* %610 to i64
  %612 = trunc i64 %609 to i32
  %613 = icmp eq i8* %610, null
  br i1 %613, label %615, label %614, !prof !2

614:                                              ; preds = %603
  store i8 %608, i8* %610, align 1
  br label %615

615:                                              ; preds = %603, %614
  %616 = getelementptr inbounds [5 x %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo"], [5 x %"struct.blink::(anonymous namespace)::ProcessingBasedContainer::BooleanPropertyContainerInfo"]* @_ZN5blink12_GLOBAL__N_124ProcessingBasedContainer32kBooleanPropertyContainerInfoMapE, i64 0, i64 %604, i32 0
  %617 = load i32, i32* %616, align 8
  %618 = zext i32 %617 to i64
  %619 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 %618, i32 0, i32 0
  store i8 0, i8* %619, align 8
  %620 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 %618, i32 0, i32 1
  %621 = bitcast %"class.WTF::Vector.86"* %620 to i64*
  %622 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %620, i64 0, i32 0, i32 0, i32 0
  %623 = load i8*, i8** %622, align 8
  store atomic i64 %611, i64* %621 monotonic, align 8
  %624 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 %618, i32 0, i32 1, i32 0, i32 0, i32 1
  store i32 %612, i32* %624, align 4
  %625 = getelementptr inbounds %"class.blink::(anonymous namespace)::ProcessingBasedContainer", %"class.blink::(anonymous namespace)::ProcessingBasedContainer"* %0, i64 0, i32 1, i32 0, i64 %618, i32 0, i32 1, i32 0, i32 0, i32 2
  store i32 1, i32* %625, align 4
  %626 = icmp eq i8* %623, null
  br i1 %626, label %628, label %627, !prof !4

627:                                              ; preds = %615
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %623) #12
  br label %628

628:                                              ; preds = %615, %627
  %629 = add nuw nsw i64 %604, 1
  %630 = icmp eq i64 %629, 5
  br i1 %630, label %558, label %603

631:                                              ; preds = %537, %539, %595
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i32 @_ZN5media28SampleFormatToBitsPerChannelENS_12SampleFormatE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.96"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i32* @_ZN3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS3_(%"class.WTF::Vector.96"* %0, i32 %5, i32* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS3_(%"class.WTF::Vector.96"*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp ugt i32* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %5, i64 %10
  %12 = icmp ugt i32* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq i32* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.96"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 2
  %36 = ptrtoint i8* %28 to i64
  %37 = load i32*, i32** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne i32* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast i32* %37 to i8*
  br i1 %40, label %42, label %49, !prof !4

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %41, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.96"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.96"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint i32* %2 to i64
  %55 = ptrtoint i32* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !4

68:                                               ; preds = %53
  %69 = icmp eq i32* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEmm(i64 %70) #12
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEPKcv, i64 0, i64 0)) #12
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.96"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load i32*, i32** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne i32* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast i32* %77 to i8*
  br i1 %80, label %82, label %88, !prof !4

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* nonnull align 4 %81, i64 %85, i1 false) #12
  %86 = bitcast %"class.WTF::Vector.96"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #12
  %90 = bitcast %"class.WTF::Vector.96"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 2
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to i32*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi i32* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds i32, i32* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi i32* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret i32* %99
}

declare dereferenceable(64) %"class.media::AudioParameters"* @_ZN5media15AudioParametersaSERKS0_(%"class.media::AudioParameters"*, %"class.media::AudioParameters"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_(%"class.WTF::Vector.101"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPi(%"class.WTF::Vector.101"* %0, i32 %5, i32* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPi(%"class.WTF::Vector.101"*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp ugt i32* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %5, i64 %10
  %12 = icmp ugt i32* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq i32* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.101"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 2
  %36 = ptrtoint i8* %28 to i64
  %37 = load i32*, i32** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne i32* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast i32* %37 to i8*
  br i1 %40, label %42, label %49, !prof !4

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %41, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.101"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.101"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint i32* %2 to i64
  %55 = ptrtoint i32* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !4

68:                                               ; preds = %53
  %69 = icmp eq i32* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %70) #12
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #12
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.101"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load i32*, i32** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne i32* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast i32* %77 to i8*
  br i1 %80, label %82, label %88, !prof !4

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* nonnull align 4 %81, i64 %85, i1 false) #12
  %86 = bitcast %"class.WTF::Vector.101"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #12
  %90 = bitcast %"class.WTF::Vector.101"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 2
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to i32*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi i32* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds i32, i32* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi i32* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret i32* %99
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.101"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPi(%"class.WTF::Vector.101"* %0, i32 %5, i32* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @_ZN5blink12_GLOBAL__N_115StringContainer18ApplyConstraintSetERKNS_16StringConstraintE(%"class.blink::(anonymous namespace)::StringContainer"*, %"class.blink::StringConstraint"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::media_constraints::DiscreteSet", align 8
  %4 = alloca %"class.blink::media_constraints::DiscreteSet", align 8
  %5 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::StringContainer", %"class.blink::(anonymous namespace)::StringContainer"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  call void @_ZN5blink17media_constraints23StringSetFromConstraintERKNS_16StringConstraintE(%"class.blink::media_constraints::DiscreteSet"* nonnull sret %4, %"class.blink::StringConstraint"* dereferenceable(56) %1) #12
  call void @_ZNK5blink17media_constraints11DiscreteSetINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12IntersectionERKS9_(%"class.blink::media_constraints::DiscreteSet"* nonnull sret %3, %"class.blink::media_constraints::DiscreteSet"* %6, %"class.blink::media_constraints::DiscreteSet"* nonnull dereferenceable(24) %4)
  %8 = load i8, i8* %5, align 8, !range !3
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::StringContainer", %"class.blink::(anonymous namespace)::StringContainer"* %0, i64 0, i32 0, i32 0
  store i8 %8, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::StringContainer", %"class.blink::(anonymous namespace)::StringContainer"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %3, i64 0, i32 1
  %12 = bitcast %"class.WTF::Vector.80"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.WTF::Vector.80"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  store atomic i64 %15, i64* %12 monotonic, align 8
  store atomic i64 %13, i64* %14 monotonic, align 8
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::StringContainer", %"class.blink::(anonymous namespace)::StringContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %17, align 8
  store i32 %19, i32* %16, align 4
  store i32 %18, i32* %17, align 8
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::StringContainer", %"class.blink::(anonymous namespace)::StringContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %22 = load i32, i32* %20, align 4
  %23 = load i32, i32* %21, align 4
  store i32 %23, i32* %20, align 4
  store i32 %22, i32* %21, align 4
  %24 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %11, i64 0, i32 0, i32 0, i32 0
  %25 = inttoptr i64 %15 to %"class.std::__1::basic_string"*
  %26 = icmp eq i64 %15, 0
  br i1 %26, label %50, label %27, !prof !4

27:                                               ; preds = %2
  %28 = inttoptr i64 %15 to i8*
  %29 = icmp eq i32 %22, 0
  br i1 %29, label %48, label %30, !prof !2

30:                                               ; preds = %27
  %31 = zext i32 %22 to i64
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %31
  br label %33

33:                                               ; preds = %42, %30
  %34 = phi %"class.std::__1::basic_string"* [ %43, %42 ], [ %25, %30 ]
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #14
  br label %42

42:                                               ; preds = %39, %33
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %32
  br i1 %44, label %45, label %33

45:                                               ; preds = %42
  store i32 0, i32* %21, align 4
  %46 = bitcast %"class.WTF::Vector.80"* %11 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %27
  %49 = phi i8* [ %47, %45 ], [ %28, %27 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #12
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %24, align 8
  br label %50

50:                                               ; preds = %2, %48
  %51 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %4, i64 0, i32 1
  %52 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = icmp eq %"class.std::__1::basic_string"* %53, null
  br i1 %54, label %80, label %55, !prof !4

55:                                               ; preds = %50
  %56 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  %57 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %78, label %60, !prof !2

60:                                               ; preds = %55
  %61 = zext i32 %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 %61
  br label %63

63:                                               ; preds = %72, %60
  %64 = phi %"class.std::__1::basic_string"* [ %73, %72 ], [ %53, %60 ]
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %69, %63
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 1
  %74 = icmp eq %"class.std::__1::basic_string"* %73, %62
  br i1 %74, label %75, label %63

75:                                               ; preds = %72
  store i32 0, i32* %57, align 4
  %76 = bitcast %"class.WTF::Vector.80"* %51 to i8**
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %75, %55
  %79 = phi i8* [ %77, %75 ], [ %56, %55 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #12
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %52, align 8
  br label %80

80:                                               ; preds = %50, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  %81 = load i8, i8* %9, align 8, !range !3
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %89

83:                                               ; preds = %80
  %84 = load i32, i32* %20, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.blink::StringConstraint", %"class.blink::StringConstraint"* %1, i64 0, i32 0, i32 1
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %80, %83, %86
  %90 = phi i8* [ %88, %86 ], [ null, %83 ], [ null, %80 ]
  ret i8* %90
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @_ZN5blink12_GLOBAL__N_116BooleanContainer18ApplyConstraintSetERKNS_17BooleanConstraintE(%"class.blink::(anonymous namespace)::BooleanContainer"*, %"class.blink::BooleanConstraint"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %4 = alloca %"class.blink::media_constraints::DiscreteSet.85", align 8
  %5 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::BooleanContainer", %"class.blink::(anonymous namespace)::BooleanContainer"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  call void @_ZN5blink17media_constraints21BoolSetFromConstraintERKNS_17BooleanConstraintE(%"class.blink::media_constraints::DiscreteSet.85"* nonnull sret %4, %"class.blink::BooleanConstraint"* dereferenceable(24) %1) #12
  call void @_ZNK5blink17media_constraints11DiscreteSetIbE12IntersectionERKS2_(%"class.blink::media_constraints::DiscreteSet.85"* nonnull sret %3, %"class.blink::media_constraints::DiscreteSet.85"* %6, %"class.blink::media_constraints::DiscreteSet.85"* nonnull dereferenceable(24) %4)
  %8 = load i8, i8* %5, align 8, !range !3
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::BooleanContainer", %"class.blink::(anonymous namespace)::BooleanContainer"* %0, i64 0, i32 0, i32 0
  store i8 %8, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::BooleanContainer", %"class.blink::(anonymous namespace)::BooleanContainer"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %3, i64 0, i32 1
  %12 = bitcast %"class.WTF::Vector.86"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.WTF::Vector.86"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  store atomic i64 %15, i64* %12 monotonic, align 8
  store atomic i64 %13, i64* %14 monotonic, align 8
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::BooleanContainer", %"class.blink::(anonymous namespace)::BooleanContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %17, align 8
  store i32 %19, i32* %16, align 4
  store i32 %18, i32* %17, align 8
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::BooleanContainer", %"class.blink::(anonymous namespace)::BooleanContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %22 = load i32, i32* %20, align 4
  %23 = load i32, i32* %21, align 4
  store i32 %23, i32* %20, align 4
  store i32 %22, i32* %21, align 4
  %24 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = inttoptr i64 %15 to i8*
  %26 = icmp eq i64 %15, 0
  br i1 %26, label %31, label %27, !prof !4

27:                                               ; preds = %2
  %28 = icmp eq i32 %22, 0
  br i1 %28, label %30, label %29, !prof !2

29:                                               ; preds = %27
  store i32 0, i32* %21, align 4
  br label %30

30:                                               ; preds = %29, %27
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %25) #12
  store i8* null, i8** %24, align 8
  br label %31

31:                                               ; preds = %2, %30
  %32 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %41, label %35, !prof !4

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39, !prof !2

39:                                               ; preds = %35
  store i32 0, i32* %36, align 4
  br label %40

40:                                               ; preds = %39, %35
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %33) #12
  store i8* null, i8** %32, align 8
  br label %41

41:                                               ; preds = %31, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  %42 = load i8, i8* %9, align 8, !range !3
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %41
  %45 = load i32, i32* %20, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::BooleanConstraint", %"class.blink::BooleanConstraint"* %1, i64 0, i32 0, i32 1
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %41, %44, %47
  %51 = phi i8* [ %49, %47 ], [ null, %44 ], [ null, %41 ]
  ret i8* %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17media_constraints11DiscreteSetINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12IntersectionERKS9_(%"class.blink::media_constraints::DiscreteSet"* noalias sret, %"class.blink::media_constraints::DiscreteSet"*, %"class.blink::media_constraints::DiscreteSet"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::Vector.80", align 8
  %5 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %56, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %2, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !3
  store i8 %11, i8* %9, align 8
  %12 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %16, align 8
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %8
  %19 = zext i32 %14 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEmm(i64 %19) #12
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEPKcv, i64 0, i64 0)) #12
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.80"* %12 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = udiv i64 %20, 24
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  %26 = bitcast i8* %21 to %"class.std::__1::basic_string"*
  br label %27

27:                                               ; preds = %18, %8
  %28 = phi %"class.std::__1::basic_string"* [ null, %8 ], [ %26, %18 ]
  %29 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %2, i64 0, i32 1, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %34 = zext i32 %30 to i64
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %34
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %235, label %37

37:                                               ; preds = %27, %52
  %38 = phi %"class.std::__1::basic_string"* [ %53, %52 ], [ %28, %27 ]
  %39 = phi %"class.std::__1::basic_string"* [ %54, %52 ], [ %33, %27 ]
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %37
  %45 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %46 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #12
  br label %52

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %38, i8* %49, i64 %51) #12
  br label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 1
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 1
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %35
  br i1 %55, label %235, label %37

56:                                               ; preds = %3
  %57 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %2, i64 0, i32 0
  %58 = load i8, i8* %57, align 8, !range !3
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %106, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 0
  store i8 0, i8* %61, align 8
  %62 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1
  %63 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %62, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %65, align 8
  %66 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %66, align 8
  %67 = icmp eq i32 %64, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %60
  %69 = zext i32 %64 to i64
  %70 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEmm(i64 %69) #12
  %71 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %70, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEPKcv, i64 0, i64 0)) #12
  %72 = ptrtoint i8* %71 to i64
  %73 = bitcast %"class.WTF::Vector.80"* %62 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = udiv i64 %70, 24
  %75 = trunc i64 %74 to i32
  store i32 %75, i32* %66, align 8
  %76 = bitcast i8* %71 to %"class.std::__1::basic_string"*
  br label %77

77:                                               ; preds = %68, %60
  %78 = phi %"class.std::__1::basic_string"* [ null, %60 ], [ %76, %68 ]
  %79 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %80, i32* %81, align 4
  %82 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %82, align 8
  %84 = zext i32 %80 to i64
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 %84
  %86 = icmp eq i32 %80, 0
  br i1 %86, label %235, label %87

87:                                               ; preds = %77, %102
  %88 = phi %"class.std::__1::basic_string"* [ %103, %102 ], [ %78, %77 ]
  %89 = phi %"class.std::__1::basic_string"* [ %104, %102 ], [ %83, %77 ]
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  %96 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 24, i1 false) #12
  br label %102

97:                                               ; preds = %87
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %88, i8* %99, i64 %101) #12
  br label %102

102:                                              ; preds = %97, %94
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 1
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 1
  %105 = icmp eq %"class.std::__1::basic_string"* %104, %85
  br i1 %105, label %235, label %87

106:                                              ; preds = %56
  %107 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %2, i64 0, i32 1, i32 0, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %120

114:                                              ; preds = %110, %106
  %115 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 0
  store i8 0, i8* %115, align 8, !alias.scope !56
  %116 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1
  %117 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %118 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %119 = bitcast %"class.WTF::Vector.80"* %116 to i64*
  store atomic i64 0, i64* %119 monotonic, align 8, !alias.scope !56
  store i32 0, i32* %117, align 8, !alias.scope !56
  store i32 0, i32* %118, align 4, !alias.scope !56
  br label %235

120:                                              ; preds = %110
  %121 = bitcast %"class.WTF::Vector.80"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #12
  %122 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %4, i64 0, i32 0, i32 0, i32 0
  %123 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %4, i64 0, i32 0, i32 0, i32 1
  %124 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 0, i64 16, i1 false) #12
  %125 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %126 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %125, align 8
  %127 = zext i32 %108 to i64
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %126, i64 %127
  %129 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %140

130:                                              ; preds = %230
  %131 = bitcast %"class.WTF::Vector.80"* %4 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = load i32, i32* %123, align 8
  %134 = load i32, i32* %124, align 4
  store atomic i64 0, i64* %131 monotonic, align 8
  store i32 0, i32* %123, align 8
  store i32 0, i32* %124, align 4
  %135 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 0
  store i8 0, i8* %135, align 8
  %136 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1
  %137 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %138 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet", %"class.blink::media_constraints::DiscreteSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %139 = bitcast %"class.WTF::Vector.80"* %136 to i64*
  store atomic i64 %132, i64* %139 monotonic, align 8
  store i32 %133, i32* %137, align 8
  store i32 %134, i32* %138, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #12
  br label %235

140:                                              ; preds = %233, %120
  %141 = phi i32 [ %112, %120 ], [ %234, %233 ]
  %142 = phi %"class.std::__1::basic_string"* [ %126, %120 ], [ %231, %233 ]
  %143 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %129, align 8
  %144 = zext i32 %141 to i64
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %143, i64 %144
  %146 = icmp eq i32 %141, 0
  br i1 %146, label %202, label %147

147:                                              ; preds = %140
  %148 = bitcast %"class.std::__1::basic_string"* %142 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 1
  %151 = icmp slt i8 %150, 0
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %153 = load i64, i64* %152, align 8
  %154 = zext i8 %150 to i64
  %155 = select i1 %151, i64 %153, i64 %154
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = bitcast %"class.std::__1::basic_string"* %142 to i8*
  %159 = select i1 %151, i8* %157, i8* %158
  %160 = icmp eq i64 %155, 0
  br label %161

161:                                              ; preds = %199, %147
  %162 = phi %"class.std::__1::basic_string"* [ %143, %147 ], [ %200, %199 ]
  %163 = bitcast %"class.std::__1::basic_string"* %162 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %168 = load i64, i64* %167, align 8
  %169 = zext i8 %165 to i64
  %170 = select i1 %166, i64 %168, i64 %169
  %171 = icmp eq i64 %170, %155
  br i1 %171, label %172, label %199

172:                                              ; preds = %161
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  %175 = bitcast %"class.std::__1::basic_string"* %162 to i8*
  %176 = select i1 %166, i8* %174, i8* %175
  br i1 %166, label %183, label %177

177:                                              ; preds = %172
  br i1 %160, label %202, label %178

178:                                              ; preds = %177
  %179 = ptrtoint i8* %174 to i64
  %180 = trunc i64 %179 to i8
  %181 = load i8, i8* %159, align 1
  %182 = icmp eq i8 %181, %180
  br i1 %182, label %184, label %199

183:                                              ; preds = %172
  br i1 %160, label %202, label %196

184:                                              ; preds = %178, %191
  %185 = phi i64 [ %188, %191 ], [ %169, %178 ]
  %186 = phi i8* [ %189, %191 ], [ %175, %178 ]
  %187 = phi i8* [ %192, %191 ], [ %159, %178 ]
  %188 = add i64 %185, -1
  %189 = getelementptr inbounds i8, i8* %186, i64 1
  %190 = icmp eq i64 %188, 0
  br i1 %190, label %202, label %191

191:                                              ; preds = %184
  %192 = getelementptr inbounds i8, i8* %187, i64 1
  %193 = load i8, i8* %189, align 1
  %194 = load i8, i8* %192, align 1
  %195 = icmp eq i8 %193, %194
  br i1 %195, label %184, label %199

196:                                              ; preds = %183
  %197 = call i32 @bcmp(i8* %176, i8* %159, i64 %155) #12
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %202, label %199

199:                                              ; preds = %191, %196, %178, %161
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %162, i64 1
  %201 = icmp eq %"class.std::__1::basic_string"* %200, %145
  br i1 %201, label %230, label %161

202:                                              ; preds = %177, %183, %196, %184, %140
  %203 = phi %"class.std::__1::basic_string"* [ %143, %140 ], [ %162, %184 ], [ %162, %196 ], [ %162, %183 ], [ %162, %177 ]
  %204 = icmp eq %"class.std::__1::basic_string"* %203, %145
  br i1 %204, label %230, label %205

205:                                              ; preds = %202
  %206 = load i32, i32* %124, align 4
  %207 = load i32, i32* %123, align 8
  %208 = icmp eq i32 %206, %207
  br i1 %208, label %229, label %209, !prof !2

209:                                              ; preds = %205
  %210 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %122, align 8
  %211 = zext i32 %206 to i64
  %212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %210, i64 %211
  %213 = bitcast %"class.std::__1::basic_string"* %142 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %213, i64 0, i32 1, i32 0
  %215 = load i8, i8* %214, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %220, label %217

217:                                              ; preds = %209
  %218 = bitcast %"class.std::__1::basic_string"* %212 to i8*
  %219 = bitcast %"class.std::__1::basic_string"* %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 24, i1 false) #12
  br label %226

220:                                              ; preds = %209
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %224 = load i64, i64* %223, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %212, i8* %222, i64 %224) #12
  %225 = load i32, i32* %124, align 4
  br label %226

226:                                              ; preds = %220, %217
  %227 = phi i32 [ %225, %220 ], [ %206, %217 ]
  %228 = add i32 %227, 1
  store i32 %228, i32* %124, align 4
  br label %230

229:                                              ; preds = %205
  call void @_ZN3WTF6VectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS7_EEvOT_(%"class.WTF::Vector.80"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %142) #12
  br label %230

230:                                              ; preds = %199, %202, %229, %226
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 1
  %232 = icmp eq %"class.std::__1::basic_string"* %231, %128
  br i1 %232, label %130, label %233

233:                                              ; preds = %230
  %234 = load i32, i32* %111, align 4
  br label %140

235:                                              ; preds = %52, %102, %77, %27, %130, %114
  ret void
}

declare void @_ZN5blink17media_constraints23StringSetFromConstraintERKNS_16StringConstraintE(%"class.blink::media_constraints::DiscreteSet"* sret, %"class.blink::StringConstraint"* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS7_EEvOT_(%"class.WTF::Vector.80"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = icmp ugt %"class.std::__1::basic_string"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::basic_string"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::basic_string"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.80"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 24
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.80"* %0, i32 %22) #12
  %36 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %39 = ptrtoint %"class.std::__1::basic_string"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 24
  %42 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !4

52:                                               ; preds = %37
  %53 = icmp eq %"class.std::__1::basic_string"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEmm(i64 %55) #12
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEPKcv, i64 0, i64 0)) #12
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.80"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 24
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.std::__1::basic_string"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.80"* %0, i32 %50) #12
  %64 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.std::__1::basic_string"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.std::__1::basic_string"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.std::__1::basic_string"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 %72
  %74 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %68
  %79 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #12
  br label %86

81:                                               ; preds = %68
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %73, i8* %83, i64 %85) #12
  br label %86

86:                                               ; preds = %78, %81
  %87 = load i32, i32* %3, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.80"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %24

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.80"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %4, %15
  %16 = phi %"class.std::__1::basic_string"* [ %21, %15 ], [ %6, %4 ]
  %17 = phi %"class.std::__1::basic_string"* [ %20, %15 ], [ null, %4 ]
  %18 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 1
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 1
  %22 = icmp eq %"class.std::__1::basic_string"* %21, %11
  br i1 %22, label %23, label %15

23:                                               ; preds = %15, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  br label %57

24:                                               ; preds = %2
  %25 = zext i32 %1 to i64
  %26 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEmm(i64 %25) #12
  %27 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %26, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEPKcv, i64 0, i64 0)) #12
  %28 = udiv i64 %26, 24
  %29 = ptrtoint i8* %27 to i64
  %30 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %24
  %38 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  br label %52

39:                                               ; preds = %24
  %40 = bitcast i8* %27 to %"class.std::__1::basic_string"*
  br label %41

41:                                               ; preds = %39, %41
  %42 = phi %"class.std::__1::basic_string"* [ %47, %41 ], [ %31, %39 ]
  %43 = phi %"class.std::__1::basic_string"* [ %46, %41 ], [ %40, %39 ]
  %44 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %45 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #12
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 1
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  %48 = icmp eq %"class.std::__1::basic_string"* %47, %35
  br i1 %48, label %49, label %41

49:                                               ; preds = %41
  %50 = bitcast %"class.WTF::Vector.80"* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %37, %49
  %53 = phi i8* [ %51, %49 ], [ %38, %37 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %53) #12
  %54 = bitcast %"class.WTF::Vector.80"* %0 to i64*
  store atomic i64 %29, i64* %54 monotonic, align 8
  %55 = trunc i64 %28 to i32
  %56 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %55, i32* %56, align 8
  br label %57

57:                                               ; preds = %52, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17media_constraints11DiscreteSetIbE12IntersectionERKS2_(%"class.blink::media_constraints::DiscreteSet.85"* noalias sret, %"class.blink::media_constraints::DiscreteSet.85"*, %"class.blink::media_constraints::DiscreteSet.85"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::Vector.86", align 8
  %5 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %2, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !3
  store i8 %11, i8* %9, align 8
  %12 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %12, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %15, align 8
  %16 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %16, align 8
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %8
  %19 = zext i32 %14 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %19) #12
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.86"* %12 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = trunc i64 %20 to i32
  store i32 %24, i32* %16, align 8
  br label %25

25:                                               ; preds = %18, %8
  %26 = phi i8* [ null, %8 ], [ %21, %18 ]
  %27 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %2, i64 0, i32 1, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp ne i8* %26, null
  %33 = icmp ne i8* %31, null
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %138, !prof !4

35:                                               ; preds = %25
  %36 = zext i32 %28 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* nonnull align 1 %31, i64 %36, i1 false) #12
  br label %138

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %2, i64 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %68, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 0
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %43, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %46, align 8
  %47 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %47, align 8
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %41
  %50 = zext i32 %45 to i64
  %51 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %50) #12
  %52 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %51, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %53 = ptrtoint i8* %52 to i64
  %54 = bitcast %"class.WTF::Vector.86"* %43 to i64*
  store atomic i64 %53, i64* %54 monotonic, align 8
  %55 = trunc i64 %51 to i32
  store i32 %55, i32* %47, align 8
  br label %56

56:                                               ; preds = %49, %41
  %57 = phi i8* [ null, %41 ], [ %52, %49 ]
  %58 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = icmp ne i8* %57, null
  %64 = icmp ne i8* %62, null
  %65 = and i1 %63, %64
  br i1 %65, label %66, label %138, !prof !4

66:                                               ; preds = %56
  %67 = zext i32 %59 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* nonnull align 1 %62, i64 %67, i1 false) #12
  br label %138

68:                                               ; preds = %37
  %69 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %2, i64 0, i32 1, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %82

76:                                               ; preds = %72, %68
  %77 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 0
  store i8 0, i8* %77, align 8, !alias.scope !59
  %78 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %81 = bitcast %"class.WTF::Vector.86"* %78 to i64*
  store atomic i64 0, i64* %81 monotonic, align 8, !alias.scope !59
  store i32 0, i32* %79, align 8, !alias.scope !59
  store i32 0, i32* %80, align 4, !alias.scope !59
  br label %138

82:                                               ; preds = %72
  %83 = bitcast %"class.WTF::Vector.86"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #12
  %84 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %4, i64 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %4, i64 0, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 16, i1 false) #12
  %87 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = zext i32 %70 to i64
  %90 = getelementptr inbounds i8, i8* %88, i64 %89
  %91 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %102

92:                                               ; preds = %133
  %93 = bitcast %"class.WTF::Vector.86"* %4 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = load i32, i32* %85, align 8
  %96 = load i32, i32* %86, align 4
  store atomic i64 0, i64* %93 monotonic, align 8
  store i32 0, i32* %85, align 8
  store i32 0, i32* %86, align 4
  %97 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 0
  store i8 0, i8* %97, align 8
  %98 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 1
  %99 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.85", %"class.blink::media_constraints::DiscreteSet.85"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %101 = bitcast %"class.WTF::Vector.86"* %98 to i64*
  store atomic i64 %94, i64* %101 monotonic, align 8
  store i32 %95, i32* %99, align 8
  store i32 %96, i32* %100, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #12
  br label %138

102:                                              ; preds = %136, %82
  %103 = phi i32 [ %74, %82 ], [ %137, %136 ]
  %104 = phi i8* [ %88, %82 ], [ %134, %136 ]
  %105 = load i8*, i8** %91, align 8
  %106 = zext i32 %103 to i64
  %107 = getelementptr inbounds i8, i8* %105, i64 %106
  %108 = icmp eq i32 %103, 0
  br i1 %108, label %118, label %109

109:                                              ; preds = %102
  %110 = load i8, i8* %104, align 1, !range !3
  br label %111

111:                                              ; preds = %115, %109
  %112 = phi i8* [ %105, %109 ], [ %116, %115 ]
  %113 = load i8, i8* %112, align 1, !range !3
  %114 = icmp eq i8 %113, %110
  br i1 %114, label %118, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds i8, i8* %112, i64 1
  %117 = icmp eq i8* %116, %107
  br i1 %117, label %133, label %111

118:                                              ; preds = %111, %102
  %119 = phi i8* [ %105, %102 ], [ %112, %111 ]
  %120 = icmp eq i8* %119, %107
  br i1 %120, label %133, label %121

121:                                              ; preds = %118
  %122 = load i32, i32* %86, align 4
  %123 = load i32, i32* %85, align 8
  %124 = icmp eq i32 %122, %123
  br i1 %124, label %132, label %125, !prof !2

125:                                              ; preds = %121
  %126 = load i8*, i8** %84, align 8
  %127 = zext i32 %122 to i64
  %128 = getelementptr inbounds i8, i8* %126, i64 %127
  %129 = load i8, i8* %104, align 1, !range !3
  store i8 %129, i8* %128, align 1
  %130 = load i32, i32* %86, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %86, align 4
  br label %133

132:                                              ; preds = %121
  call void @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKbEEvOT_(%"class.WTF::Vector.86"* nonnull %4, i8* dereferenceable(1) %104) #12
  br label %133

133:                                              ; preds = %115, %118, %132, %125
  %134 = getelementptr inbounds i8, i8* %104, i64 1
  %135 = icmp eq i8* %134, %90
  br i1 %135, label %92, label %136

136:                                              ; preds = %133
  %137 = load i32, i32* %73, align 4
  br label %102

138:                                              ; preds = %66, %56, %35, %25, %92, %76
  ret void
}

declare void @_ZN5blink17media_constraints21BoolSetFromConstraintERKNS_17BooleanConstraintE(%"class.blink::media_constraints::DiscreteSet.85"* sret, %"class.blink::BooleanConstraint"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKbEEvOT_(%"class.WTF::Vector.86"*, i8* dereferenceable(1)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %46, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %83, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq i8* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::Vector.86"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %14, align 8
  br label %83

33:                                               ; preds = %24
  %34 = load i8*, i8** %6, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !4

38:                                               ; preds = %33
  %39 = load i32, i32* %3, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #12
  %41 = load i8*, i8** %6, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #12
  %44 = bitcast %"class.WTF::Vector.86"* %0 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %14, align 8
  br label %83

46:                                               ; preds = %9
  %47 = ptrtoint i8* %1 to i64
  %48 = ptrtoint i8* %7 to i64
  %49 = sub i64 %47, %48
  %50 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %0, i64 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 2
  %53 = add i32 %51, 1
  %54 = add i32 %53, %52
  %55 = icmp ugt i32 %54, 4
  %56 = select i1 %55, i32 %54, i32 4
  %57 = icmp ugt i32 %56, %5
  %58 = select i1 %57, i32 %56, i32 %5
  %59 = icmp ult i32 %51, %58
  br i1 %59, label %60, label %80, !prof !4

60:                                               ; preds = %46
  %61 = icmp eq i8* %7, null
  %62 = zext i32 %58 to i64
  %63 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %62) #12
  %64 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %63, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #12
  %65 = ptrtoint i8* %64 to i64
  br i1 %61, label %77, label %66

66:                                               ; preds = %60
  %67 = load i8*, i8** %6, align 8
  %68 = icmp ne i8* %64, null
  %69 = icmp ne i8* %67, null
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %75, !prof !4

71:                                               ; preds = %66
  %72 = load i32, i32* %3, align 4
  %73 = zext i32 %72 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* nonnull align 1 %67, i64 %73, i1 false) #12
  %74 = load i8*, i8** %6, align 8
  br label %75

75:                                               ; preds = %71, %66
  %76 = phi i8* [ %67, %66 ], [ %74, %71 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #12
  br label %77

77:                                               ; preds = %60, %75
  %78 = bitcast %"class.WTF::Vector.86"* %0 to i64*
  store atomic i64 %65, i64* %78 monotonic, align 8
  %79 = trunc i64 %63 to i32
  store i32 %79, i32* %50, align 8
  br label %80

80:                                               ; preds = %77, %46
  %81 = phi i8* [ %7, %46 ], [ %64, %77 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %49
  br label %83

83:                                               ; preds = %42, %30, %13, %80
  %84 = phi i8* [ %81, %80 ], [ %7, %13 ], [ %28, %30 ], [ %28, %42 ]
  %85 = phi i8* [ %82, %80 ], [ %1, %13 ], [ %1, %30 ], [ %1, %42 ]
  %86 = load i32, i32* %3, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = load i8, i8* %85, align 1, !range !3
  store i8 %89, i8* %88, align 1
  %90 = load i32, i32* %3, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17media_constraints11DiscreteSetINS_25AudioProcessingProperties20EchoCancellationTypeEE12IntersectionERKS4_(%"class.blink::media_constraints::DiscreteSet.95"* noalias sret, %"class.blink::media_constraints::DiscreteSet.95"*, %"class.blink::media_constraints::DiscreteSet.95"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::Vector.96", align 8
  %5 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %41, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %2, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !3
  store i8 %11, i8* %9, align 8
  %12 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %12, i64 0, i32 0, i32 0, i32 0
  store i32* null, i32** %15, align 8
  %16 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %16, align 8
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %8
  %19 = zext i32 %14 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEmm(i64 %19) #12
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEPKcv, i64 0, i64 0)) #12
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.96"* %12 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 2
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  %26 = icmp ne i8* %21, null
  br label %27

27:                                               ; preds = %18, %8
  %28 = phi i8* [ null, %8 ], [ %21, %18 ]
  %29 = phi i1 [ false, %8 ], [ %26, %18 ]
  %30 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %2, i64 0, i32 1, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = icmp ne i32* %34, null
  %36 = and i1 %29, %35
  br i1 %36, label %37, label %146, !prof !4

37:                                               ; preds = %27
  %38 = zext i32 %31 to i64
  %39 = bitcast i32* %34 to i8*
  %40 = shl nuw nsw i64 %38, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %39, i64 %40, i1 false) #12
  br label %146

41:                                               ; preds = %3
  %42 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %2, i64 0, i32 0
  %43 = load i8, i8* %42, align 8, !range !3
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %76, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 0
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %47, i64 0, i32 0, i32 0, i32 0
  store i32* null, i32** %50, align 8
  %51 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %51, align 8
  %52 = icmp eq i32 %49, 0
  br i1 %52, label %62, label %53

53:                                               ; preds = %45
  %54 = zext i32 %49 to i64
  %55 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEmm(i64 %54) #12
  %56 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %55, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink25AudioProcessingProperties20EchoCancellationTypeEEEPKcv, i64 0, i64 0)) #12
  %57 = ptrtoint i8* %56 to i64
  %58 = bitcast %"class.WTF::Vector.96"* %47 to i64*
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = lshr i64 %55, 2
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %51, align 8
  %61 = icmp ne i8* %56, null
  br label %62

62:                                               ; preds = %53, %45
  %63 = phi i8* [ null, %45 ], [ %56, %53 ]
  %64 = phi i1 [ false, %45 ], [ %61, %53 ]
  %65 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  %70 = icmp ne i32* %69, null
  %71 = and i1 %64, %70
  br i1 %71, label %72, label %146, !prof !4

72:                                               ; preds = %62
  %73 = zext i32 %66 to i64
  %74 = bitcast i32* %69 to i8*
  %75 = shl nuw nsw i64 %73, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %63, i8* nonnull align 4 %74, i64 %75, i1 false) #12
  br label %146

76:                                               ; preds = %41
  %77 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %2, i64 0, i32 1, i32 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %90

84:                                               ; preds = %80, %76
  %85 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 0
  store i8 0, i8* %85, align 8, !alias.scope !62
  %86 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 1
  %87 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %89 = bitcast %"class.WTF::Vector.96"* %86 to i64*
  store atomic i64 0, i64* %89 monotonic, align 8, !alias.scope !62
  store i32 0, i32* %87, align 8, !alias.scope !62
  store i32 0, i32* %88, align 4, !alias.scope !62
  br label %146

90:                                               ; preds = %80
  %91 = bitcast %"class.WTF::Vector.96"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #12
  %92 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %4, i64 0, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %4, i64 0, i32 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 16, i1 false) #12
  %95 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = zext i32 %78 to i64
  %98 = getelementptr inbounds i32, i32* %96, i64 %97
  %99 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %110

100:                                              ; preds = %141
  %101 = bitcast %"class.WTF::Vector.96"* %4 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = load i32, i32* %93, align 8
  %104 = load i32, i32* %94, align 4
  store atomic i64 0, i64* %101 monotonic, align 8
  store i32 0, i32* %93, align 8
  store i32 0, i32* %94, align 4
  %105 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 0
  store i8 0, i8* %105, align 8
  %106 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 1
  %107 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %108 = getelementptr inbounds %"class.blink::media_constraints::DiscreteSet.95", %"class.blink::media_constraints::DiscreteSet.95"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %109 = bitcast %"class.WTF::Vector.96"* %106 to i64*
  store atomic i64 %102, i64* %109 monotonic, align 8
  store i32 %103, i32* %107, align 8
  store i32 %104, i32* %108, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #12
  br label %146

110:                                              ; preds = %144, %90
  %111 = phi i32 [ %82, %90 ], [ %145, %144 ]
  %112 = phi i32* [ %96, %90 ], [ %142, %144 ]
  %113 = load i32*, i32** %99, align 8
  %114 = zext i32 %111 to i64
  %115 = getelementptr inbounds i32, i32* %113, i64 %114
  %116 = icmp eq i32 %111, 0
  br i1 %116, label %126, label %117

117:                                              ; preds = %110
  %118 = load i32, i32* %112, align 4
  br label %119

119:                                              ; preds = %123, %117
  %120 = phi i32* [ %113, %117 ], [ %124, %123 ]
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, %118
  br i1 %122, label %126, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds i32, i32* %120, i64 1
  %125 = icmp eq i32* %124, %115
  br i1 %125, label %141, label %119

126:                                              ; preds = %119, %110
  %127 = phi i32* [ %113, %110 ], [ %120, %119 ]
  %128 = icmp eq i32* %127, %115
  br i1 %128, label %141, label %129

129:                                              ; preds = %126
  %130 = load i32, i32* %94, align 4
  %131 = load i32, i32* %93, align 8
  %132 = icmp eq i32 %130, %131
  br i1 %132, label %140, label %133, !prof !2

133:                                              ; preds = %129
  %134 = load i32*, i32** %92, align 8
  %135 = zext i32 %130 to i64
  %136 = getelementptr inbounds i32, i32* %134, i64 %135
  %137 = load i32, i32* %112, align 4
  store i32 %137, i32* %136, align 4
  %138 = load i32, i32* %94, align 4
  %139 = add i32 %138, 1
  store i32 %139, i32* %94, align 4
  br label %141

140:                                              ; preds = %129
  call void @_ZN3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_(%"class.WTF::Vector.96"* nonnull %4, i32* dereferenceable(4) %112) #12
  br label %141

141:                                              ; preds = %123, %126, %140, %133
  %142 = getelementptr inbounds i32, i32* %112, i64 1
  %143 = icmp eq i32* %142, %98
  br i1 %143, label %100, label %144

144:                                              ; preds = %141
  %145 = load i32, i32* %81, align 4
  br label %110

146:                                              ; preds = %72, %62, %37, %27, %100, %84
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS3_EEvOT_(%"class.WTF::Vector.96"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i32* @_ZN3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS3_(%"class.WTF::Vector.96"* %0, i32 %5, i32* %1) #12
  %7 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %8, i64 %10
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE5eraseEPi(%"class.WTF::Vector.101"*, i32*) local_unnamed_addr #8 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.WTF::Vector.101"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint i32* %1 to i64
  %10 = sub i64 %9, %8
  %11 = lshr exact i64 %10, 2
  %12 = trunc i64 %11 to i32
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.101", %"class.WTF::Vector.101"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = icmp ugt i32 %16, %12
  br i1 %18, label %19, label %20

19:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  store i8* null, i8** %14, align 8
  br label %29

20:                                               ; preds = %2
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %12) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  store i8* %24, i8** %14, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %26, %20, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  %30 = load i32*, i32** %6, align 8
  %31 = and i64 %11, 4294967295
  %32 = getelementptr inbounds i32, i32* %30, i64 %31
  %33 = getelementptr inbounds i32, i32* %32, i64 1
  %34 = icmp eq i32* %32, null
  br i1 %34, label %45, label %35, !prof !2

35:                                               ; preds = %29
  %36 = load i32, i32* %15, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %30, i64 %37
  %39 = bitcast i32* %32 to i8*
  %40 = bitcast i32* %33 to i8*
  %41 = ptrtoint i32* %38 to i64
  %42 = ptrtoint i32* %33 to i64
  %43 = sub i64 %41, %42
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* nonnull align 4 %40, i64 %43, i1 false) #12
  %44 = load i32*, i32** %6, align 8
  br label %45

45:                                               ; preds = %29, %35
  %46 = phi i32* [ %30, %29 ], [ %44, %35 ]
  %47 = load i32, i32* %15, align 4
  %48 = add i32 %47, -1
  store i32 %48, i32* %15, align 4
  %49 = getelementptr inbounds i32, i32* %46, i64 %31
  ret i32* %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @_ZN5blink14BaseConstraintD2Ev(%"class.blink::BaseConstraint"*) unnamed_addr #7

declare dereferenceable(72) %"class.blink::AudioCaptureSettings"* @_ZN5blink20AudioCaptureSettingsaSEOS0_(%"class.blink::AudioCaptureSettings"*, %"class.blink::AudioCaptureSettings"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNK5blink12_GLOBAL__N_115StringContainer22SelectSettingsAndScoreERKNS_16StringConstraintENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.std::__1::tuple.404"* noalias sret, %"class.blink::(anonymous namespace)::StringContainer"*, %"class.blink::StringConstraint"* dereferenceable(56), %"class.std::__1::basic_string"* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.blink::StringConstraint", %"class.blink::StringConstraint"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %114, label %10

10:                                               ; preds = %4
  %11 = tail call dereferenceable(16) %"class.WTF::Vector.117"* @_ZNK5blink16StringConstraint5IdealEv(%"class.blink::StringConstraint"* %2) #12
  %12 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %11, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %114, label %19

19:                                               ; preds = %10
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::StringContainer", %"class.blink::(anonymous namespace)::StringContainer"* %1, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::StringContainer", %"class.blink::(anonymous namespace)::StringContainer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::StringContainer", %"class.blink::(anonymous namespace)::StringContainer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = bitcast %"class.std::__1::tuple.404"* %0 to i64*
  %29 = getelementptr inbounds %"class.std::__1::tuple.404", %"class.std::__1::tuple.404"* %0, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::__tuple_leaf.406"* %29 to i8*
  %31 = getelementptr inbounds %"class.std::__1::__tuple_leaf.406", %"class.std::__1::__tuple_leaf.406"* %29, i64 0, i32 0
  %32 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %35

33:                                               ; preds = %111
  %34 = icmp eq %"class.WTF::String"* %113, %17
  br i1 %34, label %114, label %35

35:                                               ; preds = %19, %33
  %36 = phi %"class.WTF::String"* [ %13, %19 ], [ %113, %33 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %36, i32 0) #12
  %37 = load i8, i8* %23, align 8, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %98

39:                                               ; preds = %35
  %40 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %41 = load i32, i32* %25, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 %42
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %95, label %45

45:                                               ; preds = %39
  %46 = load i8, i8* %27, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i64, i64* %22, align 8
  %49 = zext i8 %46 to i64
  %50 = select i1 %47, i64 %48, i64 %49
  %51 = load i8*, i8** %21, align 8
  %52 = select i1 %47, i8* %51, i8* %20
  %53 = icmp eq i64 %50, 0
  br label %54

54:                                               ; preds = %92, %45
  %55 = phi %"class.std::__1::basic_string"* [ %40, %45 ], [ %93, %92 ]
  %56 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = zext i8 %58 to i64
  %63 = select i1 %59, i64 %61, i64 %62
  %64 = icmp eq i64 %63, %50
  br i1 %64, label %65, label %92

65:                                               ; preds = %54
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %69 = select i1 %59, i8* %67, i8* %68
  br i1 %59, label %76, label %70

70:                                               ; preds = %65
  br i1 %53, label %95, label %71

71:                                               ; preds = %70
  %72 = ptrtoint i8* %67 to i64
  %73 = trunc i64 %72 to i8
  %74 = load i8, i8* %52, align 1
  %75 = icmp eq i8 %74, %73
  br i1 %75, label %77, label %92

76:                                               ; preds = %65
  br i1 %53, label %95, label %89

77:                                               ; preds = %71, %84
  %78 = phi i64 [ %81, %84 ], [ %62, %71 ]
  %79 = phi i8* [ %82, %84 ], [ %68, %71 ]
  %80 = phi i8* [ %85, %84 ], [ %52, %71 ]
  %81 = add i64 %78, -1
  %82 = getelementptr inbounds i8, i8* %79, i64 1
  %83 = icmp eq i64 %81, 0
  br i1 %83, label %95, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds i8, i8* %80, i64 1
  %86 = load i8, i8* %82, align 1
  %87 = load i8, i8* %85, align 1
  %88 = icmp eq i8 %86, %87
  br i1 %88, label %77, label %92

89:                                               ; preds = %76
  %90 = call i32 @bcmp(i8* %69, i8* %52, i64 %50) #12
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %84, %89, %71, %54
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 1
  %94 = icmp eq %"class.std::__1::basic_string"* %93, %43
  br i1 %94, label %105, label %54

95:                                               ; preds = %70, %76, %89, %77, %39
  %96 = phi %"class.std::__1::basic_string"* [ %40, %39 ], [ %55, %77 ], [ %55, %89 ], [ %55, %76 ], [ %55, %70 ]
  %97 = icmp eq %"class.std::__1::basic_string"* %96, %43
  br i1 %97, label %105, label %98

98:                                               ; preds = %95, %35
  store i64 4607182418800017408, i64* %28, align 8, !alias.scope !65
  %99 = load i8, i8* %27, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %102, label %101

101:                                              ; preds = %98
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %20, i64 24, i1 false) #12
  br label %231

102:                                              ; preds = %98
  %103 = load i8*, i8** %21, align 8, !noalias !65
  %104 = load i64, i64* %22, align 8, !noalias !65
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %31, i8* %103, i64 %104) #12
  br label %105

105:                                              ; preds = %92, %95, %102
  %106 = phi i32 [ 1, %102 ], [ 0, %95 ], [ 0, %92 ]
  %107 = load i8, i8* %27, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %105
  %110 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %110) #14
  br label %111

111:                                              ; preds = %105, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  %112 = icmp eq i32 %106, 0
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 1
  br i1 %112, label %33, label %233

114:                                              ; preds = %33, %10, %4
  %115 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #12
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = getelementptr inbounds %"class.blink::(anonymous namespace)::StringContainer", %"class.blink::(anonymous namespace)::StringContainer"* %1, i64 0, i32 0, i32 0
  %119 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 24, i1 false)
  %120 = load i8, i8* %118, align 8, !range !3
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %188

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.blink::(anonymous namespace)::StringContainer", %"class.blink::(anonymous namespace)::StringContainer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %124 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::(anonymous namespace)::StringContainer", %"class.blink::(anonymous namespace)::StringContainer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %124, i64 %127
  %129 = icmp eq i32 %126, 0
  br i1 %129, label %185, label %130

130:                                              ; preds = %122
  %131 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = zext i8 %133 to i64
  %138 = select i1 %134, i64 %136, i64 %137
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %142 = select i1 %134, i8* %140, i8* %141
  %143 = icmp eq i64 %138, 0
  br label %144

144:                                              ; preds = %182, %130
  %145 = phi %"class.std::__1::basic_string"* [ %124, %130 ], [ %183, %182 ]
  %146 = bitcast %"class.std::__1::basic_string"* %145 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = zext i8 %148 to i64
  %153 = select i1 %149, i64 %151, i64 %152
  %154 = icmp eq i64 %153, %138
  br i1 %154, label %155, label %182

155:                                              ; preds = %144
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = bitcast %"class.std::__1::basic_string"* %145 to i8*
  %159 = select i1 %149, i8* %157, i8* %158
  br i1 %149, label %166, label %160

160:                                              ; preds = %155
  br i1 %143, label %185, label %161

161:                                              ; preds = %160
  %162 = ptrtoint i8* %157 to i64
  %163 = trunc i64 %162 to i8
  %164 = load i8, i8* %142, align 1
  %165 = icmp eq i8 %164, %163
  br i1 %165, label %167, label %182

166:                                              ; preds = %155
  br i1 %143, label %185, label %179

167:                                              ; preds = %161, %174
  %168 = phi i64 [ %171, %174 ], [ %152, %161 ]
  %169 = phi i8* [ %172, %174 ], [ %158, %161 ]
  %170 = phi i8* [ %175, %174 ], [ %142, %161 ]
  %171 = add i64 %168, -1
  %172 = getelementptr inbounds i8, i8* %169, i64 1
  %173 = icmp eq i64 %171, 0
  br i1 %173, label %185, label %174

174:                                              ; preds = %167
  %175 = getelementptr inbounds i8, i8* %170, i64 1
  %176 = load i8, i8* %172, align 1
  %177 = load i8, i8* %175, align 1
  %178 = icmp eq i8 %176, %177
  br i1 %178, label %167, label %182

179:                                              ; preds = %166
  %180 = call i32 @bcmp(i8* %159, i8* %142, i64 %138) #12
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %185, label %182

182:                                              ; preds = %174, %179, %161, %144
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %145, i64 1
  %184 = icmp eq %"class.std::__1::basic_string"* %183, %128
  br i1 %184, label %200, label %144

185:                                              ; preds = %160, %166, %179, %167, %122
  %186 = phi %"class.std::__1::basic_string"* [ %124, %122 ], [ %145, %167 ], [ %145, %179 ], [ %145, %166 ], [ %145, %160 ]
  %187 = icmp eq %"class.std::__1::basic_string"* %186, %128
  br i1 %187, label %200, label %188

188:                                              ; preds = %185, %114
  %189 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %188
  %194 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* align 8 %194, i64 24, i1 false) #12
  br label %214

195:                                              ; preds = %188
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %197, i64 %199) #12
  br label %214

200:                                              ; preds = %182, %185
  %201 = getelementptr inbounds %"class.blink::(anonymous namespace)::StringContainer", %"class.blink::(anonymous namespace)::StringContainer"* %1, i64 0, i32 0, i32 1
  %202 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK3WTF6VectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.80"* %201, i32 0) #12, !noalias !68
  %203 = bitcast %"class.std::__1::basic_string"* %202 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1, !noalias !68
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %209, label %207

207:                                              ; preds = %200
  %208 = bitcast %"class.std::__1::basic_string"* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* align 8 %208, i64 24, i1 false) #12
  br label %214

209:                                              ; preds = %200
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %202, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8, !noalias !68
  %212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %202, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %213 = load i64, i64* %212, align 8, !noalias !68
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %211, i64 %213) #12
  br label %214

214:                                              ; preds = %209, %207, %195, %193
  %215 = bitcast %"class.std::__1::tuple.404"* %0 to i64*
  store i64 0, i64* %215, align 8, !alias.scope !71
  %216 = getelementptr inbounds %"class.std::__1::tuple.404", %"class.std::__1::tuple.404"* %0, i64 0, i32 0, i32 1
  %217 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %218 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %217, i64 0, i32 1, i32 0
  %219 = load i8, i8* %218, align 1
  %220 = icmp slt i8 %219, 0
  br i1 %220, label %223, label %221

221:                                              ; preds = %214
  %222 = bitcast %"class.std::__1::__tuple_leaf.406"* %216 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* nonnull align 8 %115, i64 24, i1 false) #12
  br label %231

223:                                              ; preds = %214
  %224 = getelementptr inbounds %"class.std::__1::__tuple_leaf.406", %"class.std::__1::__tuple_leaf.406"* %216, i64 0, i32 0
  %225 = load i8*, i8** %116, align 8, !noalias !71
  %226 = load i64, i64* %117, align 8, !noalias !71
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %224, i8* %225, i64 %226) #12
  %227 = load i8, i8* %218, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %223
  %230 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %230) #14
  br label %231

231:                                              ; preds = %229, %223, %221, %101
  %232 = phi i8* [ %20, %101 ], [ %115, %221 ], [ %115, %223 ], [ %115, %229 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %232) #12
  br label %233

233:                                              ; preds = %111, %231
  ret void
}

declare void @_ZN5blink20AudioCaptureSettingsC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN4absl8optionalIiEEbbNS0_14ProcessingTypeERKNS_25AudioProcessingPropertiesEi(%"class.blink::AudioCaptureSettings"*, %"class.std::__1::basic_string"*, %"class.absl::optional.72"* dereferenceable(8), i1 zeroext, i1 zeroext, i32, %"struct.blink::AudioProcessingProperties"* dereferenceable(16), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK3WTF6VectorINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.80"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.80", %"class.WTF::Vector.80"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 %25
  ret %"class.std::__1::basic_string"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZNK3WTF6VectorIbLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.86"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.86", %"class.WTF::Vector.86"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  ret i8* %26
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc { double, i64 } @_ZNK5blink12_GLOBAL__N_124NumericRangeSetContainerIiNS_14LongConstraintEE22SelectSettingsAndScoreERKS2_RKN4absl8optionalIiEE(%"class.blink::(anonymous namespace)::NumericRangeSetContainer"* nocapture readonly, %"class.blink::LongConstraint"* nocapture readonly dereferenceable(40), %"class.absl::optional.72"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %1, i64 0, i32 6
  %5 = load i8, i8* %4, align 4
  %6 = and i8 %5, 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %45, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::LongConstraint", %"class.blink::LongConstraint"* %1, i64 0, i32 5
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 4, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, %10
  br i1 %17, label %27, label %18

18:                                               ; preds = %14, %8
  %19 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 4, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %95, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, %10
  br i1 %25, label %26, label %95

26:                                               ; preds = %22
  br i1 %13, label %31, label %27

27:                                               ; preds = %14, %26
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, %10
  br i1 %30, label %39, label %31

31:                                               ; preds = %27, %26
  %32 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %33 = load i8, i8* %32, align 4, !range !3
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %31
  tail call void @llvm.trap() #12
  unreachable

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = load i32, i32* %37, align 4
  br label %39

39:                                               ; preds = %27, %36
  %40 = phi i32 [ %38, %36 ], [ %29, %27 ]
  %41 = sitofp i32 %40 to double
  %42 = sitofp i32 %10 to double
  %43 = tail call double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double %41, double %42) #12
  %44 = fsub double 1.000000e+00, %43
  br label %95

45:                                               ; preds = %3
  %46 = getelementptr inbounds %"class.absl::optional.72", %"class.absl::optional.72"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 4, !range !3
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %80, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.absl::optional.72", %"class.absl::optional.72"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8, i8* %52, align 4, !range !3
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp sgt i32 %57, %51
  br i1 %58, label %68, label %59

59:                                               ; preds = %55, %49
  %60 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %61 = load i8, i8* %60, align 4, !range !3
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %95, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %65, %51
  br i1 %66, label %67, label %95

67:                                               ; preds = %63
  br i1 %54, label %72, label %68

68:                                               ; preds = %55, %67
  %69 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, %51
  br i1 %71, label %95, label %72

72:                                               ; preds = %68, %67
  %73 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %74 = load i8, i8* %73, align 4, !range !3
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %72
  tail call void @llvm.trap() #12
  unreachable

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = load i32, i32* %78, align 4
  br label %95

80:                                               ; preds = %45
  %81 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8, i8* %81, align 4, !range !3
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %95, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %86 = load i8, i8* %85, align 4, !range !3
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"class.blink::(anonymous namespace)::NumericRangeSetContainer", %"class.blink::(anonymous namespace)::NumericRangeSetContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %90, %92
  %94 = zext i1 %93 to i64
  br label %95

95:                                               ; preds = %88, %77, %68, %59, %63, %18, %22, %84, %80, %39
  %96 = phi double [ %44, %39 ], [ 0.000000e+00, %84 ], [ 0.000000e+00, %80 ], [ 1.000000e+00, %22 ], [ 1.000000e+00, %18 ], [ 0.000000e+00, %63 ], [ 0.000000e+00, %59 ], [ 0.000000e+00, %68 ], [ 0.000000e+00, %77 ], [ 0.000000e+00, %88 ]
  %97 = phi i64 [ 1, %39 ], [ 0, %84 ], [ 0, %80 ], [ 1, %22 ], [ 1, %18 ], [ 1, %63 ], [ 1, %59 ], [ 1, %68 ], [ 1, %77 ], [ %94, %88 ]
  %98 = phi i32 [ %40, %39 ], [ undef, %84 ], [ undef, %80 ], [ %10, %22 ], [ %10, %18 ], [ %51, %63 ], [ %51, %59 ], [ %70, %68 ], [ %79, %77 ], [ %90, %88 ]
  %99 = insertvalue { double, i64 } undef, double %96, 0
  %100 = zext i32 %98 to i64
  %101 = shl nuw i64 %100, 32
  %102 = or i64 %101, %97
  %103 = insertvalue { double, i64 } %99, i64 %102, 1
  ret { double, i64 } %103
}

declare zeroext i1 @_ZNK5blink16DoubleConstraint15IsUnconstrainedEv(%"class.blink::DoubleConstraint"*) unnamed_addr #1

declare i32 @_ZN5media12AudioLatency18GetExactBufferSizeEN4base9TimeDeltaEiiiii(i64, i32, i32, i32, i32, i32) local_unnamed_addr #1

declare double @_ZN5blink32NumericConstraintFitnessDistanceEdd(double, double) local_unnamed_addr #1

declare zeroext i1 @_ZNK5media15AudioParameters7IsValidEv(%"class.media::AudioParameters"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorIN5blink25AudioProcessingProperties20EchoCancellationTypeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.96"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

declare void @_ZN5blink20AudioCaptureSettingsC1ERKS0_(%"class.blink::AudioCaptureSettings"*, %"class.blink::AudioCaptureSettings"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink28AudioDeviceCaptureCapabilityEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 24379392
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 24379392) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = mul i64 %0, 88
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink12_GLOBAL__N_115DeviceContainer14InfoFromSourceEPNS_22MediaStreamAudioSourceEi: argument 0"}
!7 = distinct !{!7, !"_ZN5blink12_GLOBAL__N_115DeviceContainer14InfoFromSourceEPNS_22MediaStreamAudioSourceEi"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink12_GLOBAL__N_124ProcessingBasedContainer26CreateUnprocessedContainerERKNS0_10SourceInfoEbRKN5media15AudioParametersEb: argument 0"}
!10 = distinct !{!10, !"_ZN5blink12_GLOBAL__N_124ProcessingBasedContainer26CreateUnprocessedContainerERKNS0_10SourceInfoEbRKN5media15AudioParametersEb"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink12_GLOBAL__N_124ProcessingBasedContainer29CreateNoApmProcessedContainerERKNS0_10SourceInfoEbRKN5media15AudioParametersEb: argument 0"}
!13 = distinct !{!13, !"_ZN5blink12_GLOBAL__N_124ProcessingBasedContainer29CreateNoApmProcessedContainerERKNS0_10SourceInfoEbRKN5media15AudioParametersEb"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink12_GLOBAL__N_124ProcessingBasedContainer27CreateApmProcessedContainerERKNS0_10SourceInfoEbRKN5media15AudioParametersEb: argument 0"}
!16 = distinct !{!16, !"_ZN5blink12_GLOBAL__N_124ProcessingBasedContainer27CreateApmProcessedContainerERKNS0_10SourceInfoEbRKN5media15AudioParametersEb"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink12_GLOBAL__N_123GetApmSupportedChannelsERKN5media15AudioParametersE: argument 0"}
!19 = distinct !{!19, !"_ZN5blink12_GLOBAL__N_123GetApmSupportedChannelsERKN5media15AudioParametersE"}
!20 = !{!18, !15}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK5blink12_GLOBAL__N_119CandidatesContainer22SelectSettingsAndScoreERKNS_31MediaTrackConstraintSetPlatformEbb: argument 0"}
!23 = distinct !{!23, !"_ZNK5blink12_GLOBAL__N_119CandidatesContainer22SelectSettingsAndScoreERKNS_31MediaTrackConstraintSetPlatformEbb"}
!24 = !{!25, !22}
!25 = distinct !{!25, !26, !"_ZNK5blink12_GLOBAL__N_115DeviceContainer22SelectSettingsAndScoreERKNS_31MediaTrackConstraintSetPlatformEbbNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE: argument 0"}
!26 = distinct !{!26, !"_ZNK5blink12_GLOBAL__N_115DeviceContainer22SelectSettingsAndScoreERKNS_31MediaTrackConstraintSetPlatformEbbNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE"}
!27 = !{!25}
!28 = !{!29, !25, !22}
!29 = distinct !{!29, !30, !"_ZNK5blink12_GLOBAL__N_124ProcessingBasedContainer22SelectSettingsAndScoreERKNS_31MediaTrackConstraintSetPlatformEbRKN5media15AudioParametersE: argument 0"}
!30 = distinct !{!30, !"_ZNK5blink12_GLOBAL__N_124ProcessingBasedContainer22SelectSettingsAndScoreERKNS_31MediaTrackConstraintSetPlatformEbRKN5media15AudioParametersE"}
!31 = !{!29}
!32 = !{!33, !29, !25, !22}
!33 = distinct !{!33, !34, !"_ZNK5blink12_GLOBAL__N_124NumericRangeSetContainerIdNS_16DoubleConstraintEE22SelectSettingsAndScoreERKS2_RKN4absl8optionalIdEE: argument 0"}
!34 = distinct !{!34, !"_ZNK5blink12_GLOBAL__N_124NumericRangeSetContainerIdNS_16DoubleConstraintEE22SelectSettingsAndScoreERKS2_RKN4absl8optionalIdEE"}
!35 = !{!33, !29}
!36 = !{!29, !25}
!37 = !{!38, !29, !25, !22}
!38 = distinct !{!38, !39, !"_ZNK5blink12_GLOBAL__N_125EchoCancellationContainer22SelectSettingsAndScoreERKNS_31MediaTrackConstraintSetPlatformE: argument 0"}
!39 = distinct !{!39, !"_ZNK5blink12_GLOBAL__N_125EchoCancellationContainer22SelectSettingsAndScoreERKNS_31MediaTrackConstraintSetPlatformE"}
!40 = !{!38, !29}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN5blink12_GLOBAL__N_125EchoCancellationContainer23ToEchoCancellationTypesENS_17media_constraints11DiscreteSetIbEE: argument 0"}
!43 = distinct !{!43, !"_ZN5blink12_GLOBAL__N_125EchoCancellationContainer23ToEchoCancellationTypesENS_17media_constraints11DiscreteSetIbEE"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_: argument 0"}
!46 = distinct !{!46, !"_ZN5blink17media_constraints15NumericRangeSetIdE14FromConstraintINS_16DoubleConstraintEEES2_T_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK5blink17media_constraints15NumericRangeSetIdE12IntersectionERKS2_: argument 0"}
!49 = distinct !{!49, !"_ZNK5blink17media_constraints15NumericRangeSetIdE12IntersectionERKS2_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN5blink17media_constraints11DiscreteSetINS_25AudioProcessingProperties20EchoCancellationTypeEE8EmptySetEv: argument 0"}
!52 = distinct !{!52, !"_ZN5blink17media_constraints11DiscreteSetINS_25AudioProcessingProperties20EchoCancellationTypeEE8EmptySetEv"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN5blink12_GLOBAL__N_124ProcessingBasedContainer17GetAllowedLatencyENS_20AudioCaptureSettings14ProcessingTypeERKN5media15AudioParametersE: argument 0"}
!55 = distinct !{!55, !"_ZN5blink12_GLOBAL__N_124ProcessingBasedContainer17GetAllowedLatencyENS_20AudioCaptureSettings14ProcessingTypeERKN5media15AudioParametersE"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN5blink17media_constraints11DiscreteSetINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE8EmptySetEv: argument 0"}
!58 = distinct !{!58, !"_ZN5blink17media_constraints11DiscreteSetINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE8EmptySetEv"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN5blink17media_constraints11DiscreteSetIbE8EmptySetEv: argument 0"}
!61 = distinct !{!61, !"_ZN5blink17media_constraints11DiscreteSetIbE8EmptySetEv"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN5blink17media_constraints11DiscreteSetINS_25AudioProcessingProperties20EchoCancellationTypeEE8EmptySetEv: argument 0"}
!64 = distinct !{!64, !"_ZN5blink17media_constraints11DiscreteSetINS_25AudioProcessingProperties20EchoCancellationTypeEE8EmptySetEv"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNSt3__110make_tupleIJdRNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOSA_: argument 0"}
!67 = distinct !{!67, !"_ZNSt3__110make_tupleIJdRNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOSA_"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNK5blink17media_constraints11DiscreteSetINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12FirstElementEv: argument 0"}
!70 = distinct !{!70, !"_ZNK5blink17media_constraints11DiscreteSetINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12FirstElementEv"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNSt3__110make_tupleIJdRNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOSA_: argument 0"}
!73 = distinct !{!73, !"_ZNSt3__110make_tupleIJdRNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOSA_"}
