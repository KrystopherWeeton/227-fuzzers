; ModuleID = '../../third_party/pdfium/fpdfsdk/pwl/cpwl_caret.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/pwl/cpwl_caret.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { float*, float*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { float* }
%class.CPWL_Caret = type { %class.CPWL_Wnd.base, %"class.CFX_Timer::CallbackIface", i8, %class.CFX_PTemplate, %class.CFX_PTemplate, float, %class.CFX_FloatRect, %"class.std::__1::unique_ptr.18" }
%class.CPWL_Wnd.base = type <{ i32 (...)**, %"class.fxcrt::Observable", %"class.CPWL_Wnd::CreateParams", %"class.std::__1::unique_ptr", %"class.fxcrt::UnownedPtr.10", %"class.std::__1::vector", %"class.fxcrt::UnownedPtr.17", %class.CFX_FloatRect, %class.CFX_FloatRect, i8, i8, i8 }>
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.CPWL_Wnd::CreateParams" = type <{ %class.CFX_FloatRect, %"class.fxcrt::ObservedPtr", %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.4", %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::UnownedPtr.6", i32, %struct.CFX_Color, i32, i32, %struct.CFX_Color, %struct.CFX_Color, i32, float, %struct.CPWL_Dash, [4 x i8], %class.CPWL_MsgControl*, i32, [4 x i8] }>
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CFX_Timer::HandlerIface"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CFX_Timer::HandlerIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%"class.fxcrt::UnownedPtr" = type { %class.IPWL_SystemHandler* }
%class.IPWL_SystemHandler = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.4" = type { %class.IPVT_FontMap* }
%class.IPVT_FontMap = type opaque
%"class.fxcrt::ObservedPtr.5" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPWL_Wnd::ProviderIface"* }
%"class.CPWL_Wnd::ProviderIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%"class.fxcrt::UnownedPtr.6" = type { %"class.CPWL_Wnd::FocusHandlerIface"* }
%"class.CPWL_Wnd::FocusHandlerIface" = type { i32 (...)** }
%struct.CFX_Color = type { i32, float, float, float, float }
%struct.CPWL_Dash = type { i32, i32, i32 }
%class.CPWL_MsgControl = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.IPWL_SystemHandler::PerWindowData"* }
%"class.fxcrt::UnownedPtr.10" = type { %class.CPWL_Wnd* }
%class.CPWL_Wnd = type <{ i32 (...)**, %"class.fxcrt::Observable", %"class.CPWL_Wnd::CreateParams", %"class.std::__1::unique_ptr", %"class.fxcrt::UnownedPtr.10", %"class.std::__1::vector", %"class.fxcrt::UnownedPtr.17", %class.CFX_FloatRect, %class.CFX_FloatRect, i8, i8, i8, [5 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::unique_ptr.11" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::unique_ptr.11"* }
%"class.fxcrt::UnownedPtr.17" = type { %class.CPWL_ScrollBar* }
%class.CPWL_ScrollBar = type opaque
%"class.CFX_Timer::CallbackIface" = type { i32 (...)** }
%class.CFX_PTemplate = type { float, float }
%class.CFX_FloatRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.CFX_Timer* }
%class.CFX_Timer = type { i32, %"class.fxcrt::ObservedPtr", %"class.fxcrt::UnownedPtr.21" }
%"class.fxcrt::UnownedPtr.21" = type { %"class.CFX_Timer::CallbackIface"* }
%"class.IPWL_SystemHandler::PerWindowData" = type { i32 (...)** }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.29" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.25" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_PathData = type { %"class.std::__1::vector.35" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.37" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.FX_PATHPOINT* }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.42" }
%struct.CFX_FillRenderOptions = type { i8, i8 }
%class.CFX_VTemplate = type opaque
%struct.PWL_SCROLL_INFO = type opaque
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.49" }
%"class.fxcrt::RetainPtr.49" = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>

@_ZTV10CPWL_Caret = hidden unnamed_addr constant { [44 x i8*], [5 x i8*] } { [44 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPWL_Caret*)* @_ZN10CPWL_CaretD2Ev to i8*), i8* bitcast (void (%class.CPWL_Caret*)* @_ZN10CPWL_CaretD0Ev to i8*), i8* bitcast (i1 (%class.CPWL_Caret*, %class.CFX_FloatRect*)* @_ZN10CPWL_Caret14InvalidateRectEPK13CFX_FloatRect to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i16, i32)* @_ZN8CPWL_Wnd9OnKeyDownEtj to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i16, i32)* @_ZN8CPWL_Wnd6OnCharEtj to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd15OnLButtonDblClkEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd13OnLButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd11OnLButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd13OnRButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd11OnRButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd11OnMouseMoveEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)* @_ZN8CPWL_Wnd12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %struct.PWL_SCROLL_INFO*)* @_ZN8CPWL_Wnd13SetScrollInfoERK15PWL_SCROLL_INFO to i8*), i8* bitcast (void (%class.CPWL_Wnd*, float)* @_ZN8CPWL_Wnd17SetScrollPositionEf to i8*), i8* bitcast (void (%class.CPWL_Wnd*, float)* @_ZN8CPWL_Wnd22ScrollWindowVerticallyEf to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd17NotifyLButtonDownEPS_RK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd15NotifyLButtonUpEPS_RK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd15NotifyMouseMoveEPS_RK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd8SetFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9KillFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9SetCursorEv to i8*), i8* bitcast (i1 (%class.CPWL_Caret*, i1)* @_ZN10CPWL_Caret10SetVisibleEb to i8*), i8* bitcast (void (%class.CPWL_Wnd*, float)* @_ZN8CPWL_Wnd11SetFontSizeEf to i8*), i8* bitcast (float (%class.CPWL_Wnd*)* @_ZNK8CPWL_Wnd11GetFontSizeEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPWL_Wnd*)* @_ZN8CPWL_Wnd7GetTextEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPWL_Wnd*)* @_ZN8CPWL_Wnd15GetSelectedTextEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %"class.fxcrt::WideString"*)* @_ZN8CPWL_Wnd16ReplaceSelectionERKN5fxcrt10WideStringE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd13SelectAllTextEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd7CanUndoEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd7CanRedoEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd4UndoEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd4RedoEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CPWL_Wnd*)* @_ZNK8CPWL_Wnd12GetFocusRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CPWL_Wnd*)* @_ZNK8CPWL_Wnd13GetClientRectEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd10OnSetFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd11OnKillFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"*)* @_ZN8CPWL_Wnd14CreateChildWndERKNS_12CreateParamsE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd13RePosChildWndEv to i8*), i8* bitcast (void (%class.CPWL_Caret*, %class.CFX_RenderDevice*, %class.CFX_Matrix*)* @_ZN10CPWL_Caret18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9OnCreatedEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9OnDestroyEv to i8*), i8* bitcast (void (%class.CPWL_Caret*)* @_ZN10CPWL_Caret12OnTimerFiredEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -304 to i8*), i8* null, i8* bitcast (void (%class.CPWL_Caret*)* @_ZThn304_N10CPWL_CaretD1Ev to i8*), i8* bitcast (void (%class.CPWL_Caret*)* @_ZThn304_N10CPWL_CaretD0Ev to i8*), i8* bitcast (void (%class.CPWL_Caret*)* @_ZThn304_N10CPWL_Caret12OnTimerFiredEv to i8*)] }, align 8
@__const._ZN10CPWL_Caret18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix.gsd = private unnamed_addr constant { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.42" } { i8 -86, i8 -86, [2 x i8] c"\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.std::__1::vector.42" { %"class.std::__1::__vector_base.43" { float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), %"class.std::__1::__compressed_pair.44" { %"struct.std::__1::__compressed_pair_elem.45" { float* inttoptr (i64 -6148914691236517206 to float*) } } } } }, align 8

@_ZN10CPWL_CaretC1ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEE = hidden unnamed_addr alias void (%class.CPWL_Caret*, %"class.CPWL_Wnd::CreateParams"*, %"class.IPWL_SystemHandler::PerWindowData"*), void (%class.CPWL_Caret*, %"class.CPWL_Wnd::CreateParams"*, %"class.IPWL_SystemHandler::PerWindowData"*)* @_ZN10CPWL_CaretC2ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEE
@_ZN10CPWL_CaretD1Ev = hidden unnamed_addr alias void (%class.CPWL_Caret*), void (%class.CPWL_Caret*)* @_ZN10CPWL_CaretD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPWL_CaretC2ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEE(%class.CPWL_Caret*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184), %"class.IPWL_SystemHandler::PerWindowData"*) unnamed_addr #0 align 2 {
  %4 = bitcast %class.CPWL_Caret* %0 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndC2ERKNS_12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS3_14default_deleteIS6_EEEE(%class.CPWL_Wnd* %4, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184) %1, %"class.IPWL_SystemHandler::PerWindowData"* %2) #8
  %5 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV10CPWL_Caret, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV10CPWL_Caret, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 2
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 3, i32 0
  %9 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 5
  %10 = bitcast float* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 16, i1 false)
  store float 0x3FD99999A0000000, float* %9, align 4
  %11 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 6
  %12 = bitcast %class.CFX_FloatRect* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZN8CPWL_WndC2ERKNS_12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS3_14default_deleteIS6_EEEE(%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184), %"class.IPWL_SystemHandler::PerWindowData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPWL_CaretD2Ev(%class.CPWL_Caret*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV10CPWL_Caret, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV10CPWL_Caret, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CFX_Timer*, %class.CFX_Timer** %4, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %4, align 8
  %6 = icmp eq %class.CFX_Timer* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %5) #8
  %8 = bitcast %class.CFX_Timer* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #9
  br label %9

9:                                                ; preds = %1, %7
  %10 = bitcast %class.CPWL_Caret* %0 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd* %10) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn304_N10CPWL_CaretD1Ev(%class.CPWL_Caret*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 -1, i32 0, i32 2, i32 1, i32 1
  %3 = bitcast %"class.CFX_Timer::HandlerIface"** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV10CPWL_Caret, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %2, i64 38
  %5 = bitcast %"class.CFX_Timer::HandlerIface"** %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV10CPWL_Caret, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %2, i64 44
  %7 = bitcast %"class.CFX_Timer::HandlerIface"** %6 to %class.CFX_Timer**
  %8 = load %class.CFX_Timer*, %class.CFX_Timer** %7, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %7, align 8
  %9 = icmp eq %class.CFX_Timer* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %8) #8
  %11 = bitcast %class.CFX_Timer* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #9
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast %"class.CFX_Timer::HandlerIface"** %2 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd* %13) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPWL_CaretD0Ev(%class.CPWL_Caret*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV10CPWL_Caret, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV10CPWL_Caret, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CFX_Timer*, %class.CFX_Timer** %4, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %4, align 8
  %6 = icmp eq %class.CFX_Timer* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %5) #8
  %8 = bitcast %class.CFX_Timer* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #9
  br label %9

9:                                                ; preds = %1, %7
  %10 = bitcast %class.CPWL_Caret* %0 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd* %10) #8
  %11 = bitcast %class.CPWL_Caret* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn304_N10CPWL_CaretD0Ev(%class.CPWL_Caret*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 -1, i32 0, i32 2, i32 1, i32 1
  %3 = bitcast %"class.CFX_Timer::HandlerIface"** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV10CPWL_Caret, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %2, i64 38
  %5 = bitcast %"class.CFX_Timer::HandlerIface"** %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV10CPWL_Caret, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %2, i64 44
  %7 = bitcast %"class.CFX_Timer::HandlerIface"** %6 to %class.CFX_Timer**
  %8 = load %class.CFX_Timer*, %class.CFX_Timer** %7, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %7, align 8
  %9 = icmp eq %class.CFX_Timer* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %8) #8
  %11 = bitcast %class.CFX_Timer* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #9
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast %"class.CFX_Timer::HandlerIface"** %2 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd* %13) #8
  %14 = bitcast %"class.CFX_Timer::HandlerIface"** %2 to i8*
  tail call void @_ZdlPv(i8* %14) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPWL_Caret18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix(%class.CPWL_Caret*, %class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %class.CFX_FloatRect*
  %6 = alloca %class.CFX_FloatRect, align 4
  %7 = alloca %class.CFX_PathData, align 8
  %8 = alloca %class.CFX_PTemplate, align 4
  %9 = alloca %class.CFX_PTemplate, align 4
  %10 = alloca %class.CFX_GraphStateData, align 8
  %11 = alloca i16, align 2
  %12 = bitcast i16* %11 to %struct.CFX_FillRenderOptions*
  %13 = bitcast %class.CPWL_Caret* %0 to %class.CPWL_Wnd*
  %14 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 0, i32 10
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %88, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 2
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %88, label %21

21:                                               ; preds = %17
  %22 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #8
  %23 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0, i64 0
  %24 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 1
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1, i64 0
  %26 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 3
  %27 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 4, i32 0
  %28 = bitcast float* %27 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  %30 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 3, i32 0
  %31 = load float, float* %30, align 4
  %32 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 5
  %33 = load float, float* %32, align 4
  %34 = fadd float %31, %33
  %35 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 3, i32 1
  %36 = load float, float* %35, align 4
  %37 = extractelement <2 x float> %29, i32 0
  %38 = extractelement <2 x float> %29, i32 1
  %39 = insertelement <2 x float> undef, float %34, i32 0
  %40 = insertelement <2 x float> %39, float %36, i32 1
  %41 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %29, <2 x float>* %41, align 8
  %42 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %40, <2 x float>* %42, align 8
  %43 = bitcast %class.CFX_FloatRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #8
  %44 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 0
  %45 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 2
  %46 = bitcast %class.CFX_FloatRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %46, i8 -1, i64 16, i1 false)
  %47 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK8CPWL_Wnd11GetClipRectEv(%class.CPWL_Wnd* %13) #8
  %48 = bitcast %class.CFX_FloatRect* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %43, i8* align 4 %48, i64 16, i1 false)
  %49 = bitcast %class.CFX_PathData* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #8
  %50 = bitcast %class.CFX_PathData* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %7) #8
  %51 = load float, float* %32, align 4
  %52 = fmul float %51, 5.000000e-01
  %53 = fadd float %52, %37
  %54 = load float, float* %44, align 4
  %55 = load float, float* %45, align 4
  %56 = fcmp ult float %54, %55
  br i1 %56, label %57, label %71

57:                                               ; preds = %21
  %58 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 3
  %59 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 1
  %60 = load float, float* %59, align 4
  %61 = load float, float* %58, align 4
  %62 = fcmp ult float %60, %61
  br i1 %62, label %63, label %71

63:                                               ; preds = %57
  call void @_ZN13CFX_FloatRect9IntersectERKS_(%class.CFX_FloatRect* nonnull %5, %class.CFX_FloatRect* nonnull dereferenceable(16) %6) #8
  %64 = load float, float* %23, align 8
  %65 = load float, float* %25, align 8
  %66 = fcmp ult float %64, %65
  br i1 %66, label %67, label %87

67:                                               ; preds = %63
  %68 = load float, float* %24, align 4
  %69 = load float, float* %26, align 4
  %70 = fcmp ult float %68, %69
  br i1 %70, label %71, label %87

71:                                               ; preds = %67, %57, %21
  %72 = phi float [ %36, %57 ], [ %36, %21 ], [ %69, %67 ]
  %73 = phi float [ %38, %57 ], [ %38, %21 ], [ %68, %67 ]
  %74 = bitcast %class.CFX_PTemplate* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #8
  %75 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 0
  store float %53, float* %75, align 4
  %76 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 1
  store float %73, float* %76, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %8, i8 zeroext 2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #8
  %77 = bitcast %class.CFX_PTemplate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #8
  %78 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 0
  store float %53, float* %78, align 4
  %79 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 1
  store float %72, float* %79, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %9, i8 zeroext 0) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #8
  %80 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %80) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* align 8 getelementptr inbounds ({ i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.42" }, { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.42" }* @__const._ZN10CPWL_Caret18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix.gsd, i64 0, i32 0), i64 40, i1 false)
  call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* nonnull %10) #8
  %81 = bitcast float* %32 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %10, i64 0, i32 4
  %84 = bitcast float* %83 to i32*
  store i32 %82, i32* %84, align 4
  %85 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %85) #8
  store i16 1, i16* %11, align 2
  %86 = call zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* %1, %class.CFX_PathData* nonnull %7, %class.CFX_Matrix* %2, %class.CFX_GraphStateData* nonnull %10, i32 0, i32 -16777216, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %85) #8
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %80) #8
  br label %87

87:                                               ; preds = %67, %63, %71
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #8
  br label %88

88:                                               ; preds = %3, %17, %87
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK10CPWL_Caret12GetCaretRectEv(%class.CPWL_Caret* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 4, i32 0
  %3 = bitcast float* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 3, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 5
  %8 = load float, float* %7, align 4
  %9 = fadd float %6, %8
  %10 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 3, i32 1
  %11 = load float, float* %10, align 4
  %12 = insertelement <2 x float> undef, float %9, i32 0
  %13 = insertelement <2 x float> %12, float %11, i32 1
  %14 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %4, 0
  %15 = insertvalue { <2 x float>, <2 x float> } %14, <2 x float> %13, 1
  ret { <2 x float>, <2 x float> } %15
}

declare dereferenceable(16) %class.CFX_FloatRect* @_ZNK8CPWL_Wnd11GetClipRectEv(%class.CPWL_Wnd*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData*) unnamed_addr #1

declare void @_ZN13CFX_FloatRect9IntersectERKS_(%class.CFX_FloatRect*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData*, %class.CFX_PTemplate* dereferenceable(8), i8 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData*) unnamed_addr #1

declare zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions* dereferenceable(2)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPWL_Caret12OnTimerFiredEv(%class.CPWL_Caret*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = xor i8 %3, 1
  store i8 %4, i8* %2, align 8
  %5 = bitcast %class.CPWL_Caret* %0 to %class.CPWL_Wnd*
  %6 = tail call zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd* %5, %class.CFX_FloatRect* null) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10CPWL_Caret14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Caret*, %class.CFX_FloatRect* readonly) unnamed_addr #0 align 2 {
  %3 = alloca %class.CFX_FloatRect, align 4
  %4 = icmp eq %class.CFX_FloatRect* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = bitcast %class.CPWL_Caret* %0 to %class.CPWL_Wnd*
  %7 = tail call zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd* %6, %class.CFX_FloatRect* null) #8
  br label %30

8:                                                ; preds = %2
  %9 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 0
  %11 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 1
  %12 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 2
  %13 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 3
  %14 = bitcast %class.CFX_FloatRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %9, i8* nonnull align 4 %14, i64 16, i1 false)
  %15 = load float, float* %10, align 4
  %16 = load float, float* %12, align 4
  %17 = fcmp ult float %15, %16
  br i1 %17, label %18, label %23

18:                                               ; preds = %8
  %19 = load float, float* %11, align 4
  %20 = load float, float* %13, align 4
  %21 = fcmp ult float %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  call void @_ZN13CFX_FloatRect7InflateEff(%class.CFX_FloatRect* nonnull %3, float 5.000000e-01, float 5.000000e-01) #8
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %3) #8
  br label %23

23:                                               ; preds = %18, %8, %22
  %24 = load float, float* %13, align 4
  %25 = fadd float %24, 1.000000e+00
  store float %25, float* %13, align 4
  %26 = load float, float* %11, align 4
  %27 = fadd float %26, -1.000000e+00
  store float %27, float* %11, align 4
  %28 = bitcast %class.CPWL_Caret* %0 to %class.CPWL_Wnd*
  %29 = call zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd* %28, %class.CFX_FloatRect* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  br label %30

30:                                               ; preds = %23, %5
  %31 = phi i1 [ %29, %23 ], [ %7, %5 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn304_N10CPWL_Caret12OnTimerFiredEv(%class.CPWL_Caret*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 -1, i32 0, i32 2, i32 1, i32 1
  %3 = getelementptr inbounds %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %2, i64 39
  %4 = bitcast %"class.CFX_Timer::HandlerIface"** %3 to i8*
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = xor i8 %5, 1
  store i8 %6, i8* %4, align 8
  %7 = bitcast %"class.CFX_Timer::HandlerIface"** %2 to %class.CPWL_Wnd*
  %8 = tail call zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd* %7, %class.CFX_FloatRect* null) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CPWL_Caret8SetCaretEbRK13CFX_PTemplateIfES3_(%class.CPWL_Caret*, i1 zeroext, %class.CFX_PTemplate* readonly dereferenceable(8), %class.CFX_PTemplate* readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  br i1 %1, label %21, label %5

5:                                                ; preds = %4
  %6 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 3
  %7 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 2
  store i8 0, i8* %7, align 8
  %8 = bitcast %class.CPWL_Caret* %0 to %class.CPWL_Wnd*
  %9 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 0, i32 10
  %10 = bitcast %class.CFX_PTemplate* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 16, i1 false)
  %11 = load i8, i8* %9, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %121, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %15 = load %class.CFX_Timer*, %class.CFX_Timer** %14, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %14, align 8
  %16 = icmp eq %class.CFX_Timer* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %15) #8
  %18 = bitcast %class.CFX_Timer* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %13, %17
  %20 = tail call zeroext i1 @_ZN8CPWL_Wnd10SetVisibleEb(%class.CPWL_Wnd* %8, i1 zeroext false) #8
  br label %121

21:                                               ; preds = %4
  %22 = bitcast %class.CPWL_Caret* %0 to %class.CPWL_Wnd*
  %23 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 0, i32 10
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 3
  br i1 %25, label %27, label %72

27:                                               ; preds = %21
  %28 = icmp eq %class.CFX_PTemplate* %26, %2
  br i1 %28, label %38, label %29

29:                                               ; preds = %27
  %30 = bitcast %class.CFX_PTemplate* %2 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = bitcast %class.CFX_PTemplate* %26 to i32*
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 3, i32 1
  %37 = bitcast float* %36 to i32*
  store i32 %35, i32* %37, align 4
  br label %38

38:                                               ; preds = %27, %29
  %39 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 4
  %40 = icmp eq %class.CFX_PTemplate* %39, %3
  br i1 %40, label %50, label %41

41:                                               ; preds = %38
  %42 = bitcast %class.CFX_PTemplate* %3 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = bitcast %class.CFX_PTemplate* %39 to i32*
  store i32 %43, i32* %44, align 4
  %45 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 4, i32 1
  %49 = bitcast float* %48 to i32*
  store i32 %47, i32* %49, align 4
  br label %50

50:                                               ; preds = %38, %41
  %51 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 0, i32 2, i32 1, i32 1
  %52 = load %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %51, align 8
  %53 = tail call i8* @_Znwm(i64 32) #9
  %54 = bitcast i8* %53 to %class.CFX_Timer*
  %55 = icmp eq %class.CPWL_Caret* %0, null
  %56 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 1
  %57 = select i1 %55, %"class.CFX_Timer::CallbackIface"* null, %"class.CFX_Timer::CallbackIface"* %56
  tail call void @_ZN9CFX_TimerC1EPNS_12HandlerIfaceEPNS_13CallbackIfaceEi(%class.CFX_Timer* nonnull %54, %"class.CFX_Timer::HandlerIface"* %52, %"class.CFX_Timer::CallbackIface"* %57, i32 500) #8
  %58 = ptrtoint i8* %53 to i64
  %59 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 7
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %class.CFX_Timer*, %class.CFX_Timer** %60, align 8
  %62 = bitcast %"class.std::__1::unique_ptr.18"* %59 to i64*
  store i64 %58, i64* %62, align 8
  %63 = icmp eq %class.CFX_Timer* %61, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %50
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %61) #8
  %65 = bitcast %class.CFX_Timer* %61 to i8*
  tail call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %64, %50
  %67 = tail call zeroext i1 @_ZN8CPWL_Wnd10SetVisibleEb(%class.CPWL_Wnd* %22, i1 zeroext true) #8
  br i1 %67, label %68, label %121

68:                                               ; preds = %66
  %69 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 2
  store i8 1, i8* %69, align 8
  %70 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 6
  %71 = tail call zeroext i1 @_ZN8CPWL_Wnd4MoveERK13CFX_FloatRectbb(%class.CPWL_Wnd* %22, %class.CFX_FloatRect* dereferenceable(16) %70, i1 zeroext false, i1 zeroext true) #8
  br label %121

72:                                               ; preds = %21
  %73 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %26, i64 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %76 = load float, float* %75, align 4
  %77 = fcmp oeq float %74, %76
  br i1 %77, label %78, label %96

78:                                               ; preds = %72
  %79 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 3, i32 1
  %80 = load float, float* %79, align 4
  %81 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %82 = load float, float* %81, align 4
  %83 = fcmp oeq float %80, %82
  br i1 %83, label %84, label %96

84:                                               ; preds = %78
  %85 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 4, i32 0
  %86 = load float, float* %85, align 4
  %87 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fcmp oeq float %86, %88
  br i1 %89, label %90, label %96

90:                                               ; preds = %84
  %91 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 4, i32 1
  %92 = load float, float* %91, align 4
  %93 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  %94 = load float, float* %93, align 4
  %95 = fcmp oeq float %92, %94
  br i1 %95, label %121, label %96

96:                                               ; preds = %84, %72, %90, %78
  %97 = icmp eq %class.CFX_PTemplate* %26, %2
  br i1 %97, label %105, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %26, i64 0, i32 0
  store float %76, float* %99, align 4
  %100 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %101 = bitcast float* %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 3, i32 1
  %104 = bitcast float* %103 to i32*
  store i32 %102, i32* %104, align 4
  br label %105

105:                                              ; preds = %96, %98
  %106 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 4
  %107 = icmp eq %class.CFX_PTemplate* %106, %3
  br i1 %107, label %117, label %108

108:                                              ; preds = %105
  %109 = bitcast %class.CFX_PTemplate* %3 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = bitcast %class.CFX_PTemplate* %106 to i32*
  store i32 %110, i32* %111, align 4
  %112 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  %113 = bitcast float* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 4, i32 1
  %116 = bitcast float* %115 to i32*
  store i32 %114, i32* %116, align 4
  br label %117

117:                                              ; preds = %105, %108
  %118 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 2
  store i8 1, i8* %118, align 8
  %119 = getelementptr inbounds %class.CPWL_Caret, %class.CPWL_Caret* %0, i64 0, i32 6
  %120 = tail call zeroext i1 @_ZN8CPWL_Wnd4MoveERK13CFX_FloatRectbb(%class.CPWL_Wnd* %22, %class.CFX_FloatRect* dereferenceable(16) %119, i1 zeroext false, i1 zeroext true) #8
  br label %121

121:                                              ; preds = %5, %90, %66, %117, %68, %19
  ret void
}

declare zeroext i1 @_ZN8CPWL_Wnd10SetVisibleEb(%class.CPWL_Wnd*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd4MoveERK13CFX_FloatRectbb(%class.CPWL_Wnd*, %class.CFX_FloatRect* dereferenceable(16), i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd*, %class.CFX_FloatRect*) unnamed_addr #1

declare void @_ZN13CFX_FloatRect7InflateEff(%class.CFX_FloatRect*, float, float) local_unnamed_addr #1

declare void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN10CPWL_Caret10SetVisibleEb(%class.CPWL_Caret* nocapture readnone, i1 zeroext) unnamed_addr #6 align 2 {
  ret i1 true
}

declare zeroext i1 @_ZN8CPWL_Wnd9OnKeyDownEtj(%class.CPWL_Wnd*, i16 zeroext, i32) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd6OnCharEtj(%class.CPWL_Wnd*, i16 zeroext, i32) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd15OnLButtonDblClkEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd13OnRButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd11OnRButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd11OnMouseMoveEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_VTemplate*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd13SetScrollInfoERK15PWL_SCROLL_INFO(%class.CPWL_Wnd*, %struct.PWL_SCROLL_INFO*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd17SetScrollPositionEf(%class.CPWL_Wnd*, float) unnamed_addr #1

declare void @_ZN8CPWL_Wnd22ScrollWindowVerticallyEf(%class.CPWL_Wnd*, float) unnamed_addr #1

declare void @_ZN8CPWL_Wnd17NotifyLButtonDownEPS_RK13CFX_PTemplateIfE(%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8CPWL_Wnd15NotifyLButtonUpEPS_RK13CFX_PTemplateIfE(%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8CPWL_Wnd15NotifyMouseMoveEPS_RK13CFX_PTemplateIfE(%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8CPWL_Wnd8SetFocusEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd9KillFocusEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd9SetCursorEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd11SetFontSizeEf(%class.CPWL_Wnd*, float) unnamed_addr #1

declare float @_ZNK8CPWL_Wnd11GetFontSizeEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd7GetTextEv(%"class.fxcrt::WideString"* sret, %class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd15GetSelectedTextEv(%"class.fxcrt::WideString"* sret, %class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd16ReplaceSelectionERKN5fxcrt10WideStringE(%class.CPWL_Wnd*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd13SelectAllTextEv(%class.CPWL_Wnd*) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd7CanUndoEv(%class.CPWL_Wnd*) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd7CanRedoEv(%class.CPWL_Wnd*) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd4UndoEv(%class.CPWL_Wnd*) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd4RedoEv(%class.CPWL_Wnd*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd12GetFocusRectEv(%class.CPWL_Wnd*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetClientRectEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd10OnSetFocusEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd11OnKillFocusEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd14CreateChildWndERKNS_12CreateParamsE(%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184)) unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd13RePosChildWndEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd9OnCreatedEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd9OnDestroyEv(%class.CPWL_Wnd*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN9CFX_TimerC1EPNS_12HandlerIfaceEPNS_13CallbackIfaceEi(%class.CFX_Timer*, %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::CallbackIface"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
