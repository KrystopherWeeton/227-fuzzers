; ModuleID = '../../third_party/skia/src/core/SkVMBlitter.cpp'
source_filename = "../../third_party/skia/src/core/SkVMBlitter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkPaint = type <{ %class.sk_sp.7, %class.sk_sp.8, %class.sk_sp.9, %class.sk_sp.10, %class.sk_sp.11, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.7 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.8 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.9 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.10 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.11 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkM44 = type { [16 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.(anonymous namespace)::Blitter" = type { %class.SkBlitter, %class.SkPixmap, %class.SkPixmap, %struct.SkIPoint, %"struct.skvm::Uniforms", %class.SkArenaAlloc, %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Key", %"class.skvm::Program", %"class.skvm::Program", %"class.skvm::Program", %"class.skvm::Program", %"class.skvm::Program" }
%struct.SkIPoint = type { i32, i32 }
%"struct.skvm::Uniforms" = type { %"struct.skvm::Ptr", %"class.std::__1::vector" }
%"struct.skvm::Ptr" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i32* }
%"struct.(anonymous namespace)::Params" = type { %class.sk_sp.8, %class.sk_sp.8, %class.SkColorInfo, i32, i32, %struct.SkRGBA4f, %class.SkMatrixProvider* }
%"struct.(anonymous namespace)::Key" = type { i64, i64, i64, i8, i8, i8, i8, i32 }
%"class.skvm::Program" = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.skvm::Program::Impl"* }
%"struct.skvm::Program::Impl" = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkSimpleMatrixProvider = type { %class.SkMatrixProvider }
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.skvm::Color" = type { %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::F32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"class.skvm::Builder" = type <{ %class.SkTHashMap, %"class.std::__1::vector.35", %"class.std::__1::vector", %"struct.skvm::Features", [6 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable.27 }
%class.SkTHashTable.27 = type { i32, i32, %class.SkAutoTArray.28 }
%class.SkAutoTArray.28 = type { %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot" = type { %"struct.SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair", i32 }
%"struct.SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.skvm::Instruction", i32 }
%"struct.skvm::Instruction" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.skvm::Instruction"* }
%"struct.skvm::Features" = type { i8, i8 }
%"struct.skvm::Coord" = type { %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::PixelFormat" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%class.SkString = type { %class.sk_sp.42 }
%class.sk_sp.42 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.SkShader.base = type { %class.SkFlattenable.base }
%"struct.skvm::I32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.anon.59 = type { %"struct.skvm::Uniforms"**, %"struct.skvm::Uniform"*, %"struct.skvm::Uniform"*, %"struct.skvm::Uniform"*, %"struct.skvm::Uniform"*, %"struct.(anonymous namespace)::Params"*, %class.SkArenaAlloc**, i8** }
%"struct.skvm::Uniform" = type { %"struct.skvm::Ptr", i32 }
%class.SkColorFilterShader = type <{ %class.SkShaderBase.base, [4 x i8], %class.sk_sp.8, %class.sk_sp.48, float, [4 x i8] }>
%class.SkShaderBase.base = type { %class.SkShader.base, %class.SkMatrix }
%class.sk_sp.48 = type { %class.SkColorFilterBase* }
%class.SkColorFilterBase = type { %class.SkColorFilter.base, [4 x i8] }
%class.SkColorFilter.base = type { %class.SkFlattenable.base }
%"struct.(anonymous namespace)::SpriteShader" = type { %class.SkShaderBase.base, %class.SkPixmap }
%class.sk_sp.51 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type opaque
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.56*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.56*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.56*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.56 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.57, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.57 = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.52", [7 x i8] }>
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%"struct.SkShader::GradientInfo" = type { i32, i32*, float*, [2 x %struct.SkPoint], [2 x float], i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkRuntimeEffect = type opaque
%"class.SkShaderBase::Context" = type <{ i32 (...)**, %class.SkShaderBase*, %class.SkMatrix, %class.SkMatrix, i8, [7 x i8] }>
%"struct.SkShaderBase::ContextRec" = type <{ %class.SkMatrix*, %class.SkMatrix*, i32, [4 x i8], %class.SkColorSpace*, i8, i8, [6 x i8] }>
%struct.SkStageRec = type { %class.SkRasterPipeline*, %class.SkArenaAlloc*, i32, %class.SkColorSpace*, %class.SkPaint*, %class.SkMatrix*, %class.SkMatrixProvider* }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%class.SkStageUpdater = type { i32 (...)** }
%"struct.(anonymous namespace)::PaintColorShader" = type <{ %class.SkShaderBase.base, i8, [3 x i8] }>
%"struct.(anonymous namespace)::NoopColorFilter" = type { %class.SkColorFilterBase.base, [4 x i8] }
%class.SkColorFilterBase.base = type { %class.SkColorFilter.base }
%struct.SkRGBA4f.58 = type { float, float, float, float }
%"struct.(anonymous namespace)::DitherShader" = type { %class.SkShaderBase.base, %class.sk_sp.8 }

$_ZN16SkMatrixProviderD2Ev = comdat any

$_ZN22SkSimpleMatrixProviderD0Ev = comdat any

$_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZN9SkBlitter10blitAntiH2Eiijj = comdat any

$_ZN9SkBlitter10blitAntiV2Eiijj = comdat any

$_ZNK9SkBlitter20requestRowsPreservedEv = comdat any

$_ZN9SkBlitter15allocBlitMemoryEm = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm = comdat any

$_ZN4skvm7Builder7clamp01ENS_5ColorE = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK12SkShaderBase18getFlattenableTypeEv = comdat any

$_ZNK12SkShaderBase10isConstantEv = comdat any

$_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode = comdat any

$_ZNK12SkShaderBase15asRuntimeEffectEv = comdat any

$_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc = comdat any

$_ZNK12SkShaderBase18onAsLuminanceColorEPj = comdat any

$_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec = comdat any

$_ZNK13SkFlattenable7flattenER13SkWriteBuffer = comdat any

$_ZNK17SkColorFilterBase18getFlattenableTypeEv = comdat any

$_ZNK17SkColorFilterBase18onIsAlphaUnchangedEv = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN4skvm8Uniforms5pushFEf = comdat any

$_ZTV22SkSimpleMatrixProvider = comdat any

@_ZTV22SkSimpleMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkSimpleMatrixProvider*)* @_ZN22SkSimpleMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkSimpleMatrixProvider*, i32, %class.SkM44*)* @_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkSimpleMatrixProvider*)* @_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@_ZTVN12_GLOBAL__N_17BlitterE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::Blitter"*)* @_ZN12_GLOBAL__N_17BlitterD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::Blitter"*)* @_ZN12_GLOBAL__N_17BlitterD0Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::Blitter"*, i32, i32, i32)* @_ZN12_GLOBAL__N_17Blitter5blitHEiii to i8*), i8* bitcast (void (%"class.(anonymous namespace)::Blitter"*, i32, i32, i8*, i16*)* @_ZN12_GLOBAL__N_17Blitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i8)* @_ZN9SkBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%"class.(anonymous namespace)::Blitter"*, %struct.SkMask*, %struct.SkIRect*)* @_ZN12_GLOBAL__N_17Blitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*)] }, align 8
@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8
@.str.1 = private unnamed_addr constant [55 x i8] c"Shader-%lx_Clip-%lx_CS-%lx_CT-%d_AT-%d_Blend-%d_Cov-%d\00", align 1
@_ZTVN12_GLOBAL__N_112SpriteShaderE = internal unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.(anonymous namespace)::SpriteShader"*)* @_ZN12_GLOBAL__N_112SpriteShaderD2Ev to i8*), i8* bitcast (void (%"struct.(anonymous namespace)::SpriteShader"*)* @_ZN12_GLOBAL__N_112SpriteShaderD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.51*, %class.SkReadBuffer*)* (%"struct.(anonymous namespace)::SpriteShader"*)* @_ZNK12_GLOBAL__N_112SpriteShader10getFactoryEv to i8*), i8* bitcast (i8* (%"struct.(anonymous namespace)::SpriteShader"*)* @_ZNK12_GLOBAL__N_112SpriteShader11getTypeNameEv to i8*), i8* bitcast (void (%class.SkShaderBase*, %class.SkWriteBuffer*)* @_ZNK12SkShaderBase7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkShaderBase*)* @_ZNK12SkShaderBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%"struct.(anonymous namespace)::SpriteShader"*)* @_ZNK12_GLOBAL__N_112SpriteShader8isOpaqueEv to i8*), i8* bitcast (i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)* @_ZNK8SkShader11asAGradientEPNS_12GradientInfoE to i8*), i8* bitcast (i1 (%class.SkShaderBase*)* @_ZNK12SkShaderBase10isConstantEv to i8*), i8* bitcast (void ()* @_ZNK12SkShaderBase19asFragmentProcessorERK8GrFPArgs to i8*), i8* bitcast (%class.SkImage* (%class.SkShaderBase*, %class.SkMatrix*, i32*)* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode to i8*), i8* bitcast (%class.SkRuntimeEffect* (%class.SkShaderBase*)* @_ZNK12SkShaderBase15asRuntimeEffectEv to i8*), i8* bitcast (void (%class.sk_sp.8*, %class.SkShaderBase*, %class.SkMatrix*)* @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix to i8*), i8* bitcast (%"class.SkShaderBase::Context"* (%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"*, %class.SkArenaAlloc*)* @_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc to i8*), i8* bitcast (i1 (%class.SkShaderBase*, i32*)* @_ZNK12SkShaderBase18onAsLuminanceColorEPj to i8*), i8* bitcast (i1 (%class.SkShaderBase*, %struct.SkStageRec*)* @_ZNK12SkShaderBase14onAppendStagesERK10SkStageRec to i8*), i8* bitcast (%class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %"struct.(anonymous namespace)::SpriteShader"*, %"class.skvm::Builder"*, %"struct.skvm::Coord"*, %"struct.skvm::Coord"*, %"struct.skvm::Color"*, %class.SkMatrixProvider*, %class.SkMatrix*, %class.SkColorInfo*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK12_GLOBAL__N_112SpriteShader9onProgramEPN4skvm7BuilderENS1_5CoordES4_NS1_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS1_8UniformsEP12SkArenaAlloc to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [13 x i8] c"SpriteShader\00", align 1
@_ZTVN12_GLOBAL__N_116PaintColorShaderE = internal unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkShaderBase*)* @_ZN12SkShaderBaseD2Ev to i8*), i8* bitcast (void (%"struct.(anonymous namespace)::PaintColorShader"*)* @_ZN12_GLOBAL__N_116PaintColorShaderD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.51*, %class.SkReadBuffer*)* (%"struct.(anonymous namespace)::PaintColorShader"*)* @_ZNK12_GLOBAL__N_116PaintColorShader10getFactoryEv to i8*), i8* bitcast (i8* (%"struct.(anonymous namespace)::PaintColorShader"*)* @_ZNK12_GLOBAL__N_116PaintColorShader11getTypeNameEv to i8*), i8* bitcast (void (%class.SkShaderBase*, %class.SkWriteBuffer*)* @_ZNK12SkShaderBase7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkShaderBase*)* @_ZNK12SkShaderBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%"struct.(anonymous namespace)::PaintColorShader"*)* @_ZNK12_GLOBAL__N_116PaintColorShader8isOpaqueEv to i8*), i8* bitcast (i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)* @_ZNK8SkShader11asAGradientEPNS_12GradientInfoE to i8*), i8* bitcast (i1 (%class.SkShaderBase*)* @_ZNK12SkShaderBase10isConstantEv to i8*), i8* bitcast (void ()* @_ZNK12SkShaderBase19asFragmentProcessorERK8GrFPArgs to i8*), i8* bitcast (%class.SkImage* (%class.SkShaderBase*, %class.SkMatrix*, i32*)* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode to i8*), i8* bitcast (%class.SkRuntimeEffect* (%class.SkShaderBase*)* @_ZNK12SkShaderBase15asRuntimeEffectEv to i8*), i8* bitcast (void (%class.sk_sp.8*, %class.SkShaderBase*, %class.SkMatrix*)* @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix to i8*), i8* bitcast (%"class.SkShaderBase::Context"* (%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"*, %class.SkArenaAlloc*)* @_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc to i8*), i8* bitcast (i1 (%class.SkShaderBase*, i32*)* @_ZNK12SkShaderBase18onAsLuminanceColorEPj to i8*), i8* bitcast (i1 (%class.SkShaderBase*, %struct.SkStageRec*)* @_ZNK12SkShaderBase14onAppendStagesERK10SkStageRec to i8*), i8* bitcast (%class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %"struct.(anonymous namespace)::PaintColorShader"*, %"class.skvm::Builder"*, %"struct.skvm::Coord"*, %"struct.skvm::Coord"*, %"struct.skvm::Color"*, %class.SkMatrixProvider*, %class.SkMatrix*, %class.SkColorInfo*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK12_GLOBAL__N_116PaintColorShader9onProgramEPN4skvm7BuilderENS1_5CoordES4_NS1_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS1_8UniformsEP12SkArenaAlloc to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [17 x i8] c"PaintColorShader\00", align 1
@_ZTVN12_GLOBAL__N_115NoopColorFilterE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%"struct.(anonymous namespace)::NoopColorFilter"*)* @_ZN12_GLOBAL__N_115NoopColorFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.51*, %class.SkReadBuffer*)* (%"struct.(anonymous namespace)::NoopColorFilter"*)* @_ZNK12_GLOBAL__N_115NoopColorFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"struct.(anonymous namespace)::NoopColorFilter"*)* @_ZNK12_GLOBAL__N_115NoopColorFilter11getTypeNameEv to i8*), i8* bitcast (void (%class.SkFlattenable*, %class.SkWriteBuffer*)* @_ZNK13SkFlattenable7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkColorFilterBase*)* @_ZNK17SkColorFilterBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*)* @_ZNK17SkColorFilterBase18onIsAlphaUnchangedEv to i8*), i8* bitcast (void ()* @_ZNK17SkColorFilterBase19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.58*, %class.SkColorSpace*)* @_ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, float*)* @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, i32*, i32*)* @_ZNK17SkColorFilterBase14onAsAColorModeEPjP11SkBlendMode to i8*), i8* bitcast (i1 (%"struct.(anonymous namespace)::NoopColorFilter"*, %struct.SkStageRec*, i1)* @_ZNK12_GLOBAL__N_115NoopColorFilter14onAppendStagesERK10SkStageRecb to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %"struct.(anonymous namespace)::NoopColorFilter"*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK12_GLOBAL__N_115NoopColorFilter9onProgramEPN4skvm7BuilderENS1_5ColorEP12SkColorSpacePNS1_8UniformsEP12SkArenaAlloc to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [16 x i8] c"NoopColorFilter\00", align 1
@_ZTVN12_GLOBAL__N_112DitherShaderE = internal unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.(anonymous namespace)::DitherShader"*)* @_ZN12_GLOBAL__N_112DitherShaderD2Ev to i8*), i8* bitcast (void (%"struct.(anonymous namespace)::DitherShader"*)* @_ZN12_GLOBAL__N_112DitherShaderD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.51*, %class.SkReadBuffer*)* (%"struct.(anonymous namespace)::DitherShader"*)* @_ZNK12_GLOBAL__N_112DitherShader10getFactoryEv to i8*), i8* bitcast (i8* (%"struct.(anonymous namespace)::DitherShader"*)* @_ZNK12_GLOBAL__N_112DitherShader11getTypeNameEv to i8*), i8* bitcast (void (%class.SkShaderBase*, %class.SkWriteBuffer*)* @_ZNK12SkShaderBase7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkShaderBase*)* @_ZNK12SkShaderBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%"struct.(anonymous namespace)::DitherShader"*)* @_ZNK12_GLOBAL__N_112DitherShader8isOpaqueEv to i8*), i8* bitcast (i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)* @_ZNK8SkShader11asAGradientEPNS_12GradientInfoE to i8*), i8* bitcast (i1 (%class.SkShaderBase*)* @_ZNK12SkShaderBase10isConstantEv to i8*), i8* bitcast (void ()* @_ZNK12SkShaderBase19asFragmentProcessorERK8GrFPArgs to i8*), i8* bitcast (%class.SkImage* (%class.SkShaderBase*, %class.SkMatrix*, i32*)* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode to i8*), i8* bitcast (%class.SkRuntimeEffect* (%class.SkShaderBase*)* @_ZNK12SkShaderBase15asRuntimeEffectEv to i8*), i8* bitcast (void (%class.sk_sp.8*, %class.SkShaderBase*, %class.SkMatrix*)* @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix to i8*), i8* bitcast (%"class.SkShaderBase::Context"* (%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"*, %class.SkArenaAlloc*)* @_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc to i8*), i8* bitcast (i1 (%class.SkShaderBase*, i32*)* @_ZNK12SkShaderBase18onAsLuminanceColorEPj to i8*), i8* bitcast (i1 (%class.SkShaderBase*, %struct.SkStageRec*)* @_ZNK12SkShaderBase14onAppendStagesERK10SkStageRec to i8*), i8* bitcast (%class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %"struct.(anonymous namespace)::DitherShader"*, %"class.skvm::Builder"*, %"struct.skvm::Coord"*, %"struct.skvm::Coord"*, %"struct.skvm::Color"*, %class.SkMatrixProvider*, %class.SkMatrix*, %class.SkColorInfo*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK12_GLOBAL__N_112DitherShader9onProgramEPN4skvm7BuilderENS1_5CoordES4_NS1_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS1_8UniformsEP12SkArenaAlloc to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [13 x i8] c"DitherShader\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkBlitter* @_Z19SkCreateSkVMBlitterRK8SkPixmapRK7SkPaintRK16SkMatrixProviderP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* nocapture readonly dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider* dereferenceable(112), %class.SkArenaAlloc*, %class.sk_sp.8* nocapture) local_unnamed_addr #0 {
  %6 = alloca %class.sk_sp.8, align 8
  %7 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #13
  store i8 1, i8* %7, align 1
  %8 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %3, i32 321, i32 8) #13
  %9 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %3, i64 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = ptrtoint i8* %8 to i64
  %13 = sub i64 %12, %11
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds i8, i8* %8, i64 312
  store i8* %15, i8** %9, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %3, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeIN12_GLOBAL__N_17BlitterEJRK8SkPixmapRK7SkPaintDn8SkIPointRK16SkMatrixProvider5sk_spI8SkShaderEPbEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSI_ENUlPcE_8__invokeESR_, i32 %14) #13
  %16 = bitcast %class.sk_sp.8* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = bitcast i8* %8 to %"class.(anonymous namespace)::Blitter"*
  %18 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %4, i64 0, i32 0
  %19 = bitcast %class.sk_sp.8* %4 to i64*
  %20 = load i64, i64* %19, align 8
  store %class.SkShader* null, %class.SkShader** %18, align 8
  %21 = bitcast %class.sk_sp.8* %6 to i64*
  store i64 %20, i64* %21, align 8
  call fastcc void @_ZN12_GLOBAL__N_17BlitterC2ERK8SkPixmapRK7SkPaintPS2_8SkIPointRK16SkMatrixProvider5sk_spI8SkShaderEPb(%"class.(anonymous namespace)::Blitter"* %17, %class.SkPixmap* dereferenceable(40) %0, %class.SkPaint* dereferenceable(72) %1, %class.SkPixmap* null, i64 0, %class.SkMatrixProvider* dereferenceable(112) %2, %class.sk_sp.8* nonnull %6, i8* nonnull %7) #13
  %22 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %6, i64 0, i32 0
  %23 = load %class.SkShader*, %class.SkShader** %22, align 8
  %24 = icmp eq %class.SkShader* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %5
  %26 = getelementptr inbounds %class.SkShader, %class.SkShader* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = bitcast %class.SkShader* %23 to %class.SkRefCntBase*
  %31 = bitcast %class.SkShader* %23 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8
  call void %34(%class.SkRefCntBase* nonnull %30) #13
  br label %35

35:                                               ; preds = %5, %25, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  %36 = load i8, i8* %7, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  %38 = select i1 %37, %"class.(anonymous namespace)::Blitter"* null, %"class.(anonymous namespace)::Blitter"* %17
  %39 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %38, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #13
  ret %class.SkBlitter* %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkBlitter* @_Z25SkCreateSkVMSpriteBlitterRK8SkPixmapRK7SkPaintS1_iiP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* nocapture readonly dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.SkPixmap* dereferenceable(40), i32, i32, %class.SkArenaAlloc*, %class.sk_sp.8* nocapture) local_unnamed_addr #0 {
  %8 = alloca %class.sk_sp.8, align 8
  %9 = alloca i8, align 1
  %10 = alloca %class.SkSimpleMatrixProvider, align 8
  %11 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 2, i32 0
  %12 = load %class.SkMaskFilter*, %class.SkMaskFilter** %11, align 8
  %13 = icmp eq %class.SkMaskFilter* %12, null
  br i1 %13, label %14, label %74

14:                                               ; preds = %7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #13
  store i8 1, i8* %9, align 1
  %15 = bitcast %class.SkSimpleMatrixProvider* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %15) #13
  %16 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1
  %18 = bitcast %class.SkM44* %17 to i32*
  store i32 1065353216, i32* %18, align 8
  %19 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 1
  %20 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 5
  %21 = bitcast float* %20 to i32*
  %22 = bitcast float* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 16, i1 false)
  store i32 1065353216, i32* %21, align 4
  %23 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 6
  %24 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 10
  %25 = bitcast float* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false)
  store float 1.000000e+00, float* %24, align 8
  %26 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 11
  %27 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 15
  %28 = bitcast float* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 16, i1 false)
  %29 = bitcast float* %27 to <4 x i32>*
  store <4 x i32> <i32 1065353216, i32 1065353216, i32 0, i32 0>, <4 x i32>* %29, align 4
  %30 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 2, i32 0, i64 3
  %31 = bitcast float* %30 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1065353216, i32 0, i32 0>, <4 x i32>* %31, align 4
  %32 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 2, i32 0, i64 7
  %33 = bitcast float* %32 to i32*
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 2, i32 0, i64 8
  %35 = bitcast float* %34 to i32*
  store i32 1065353216, i32* %35, align 8
  %36 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 2, i32 1
  store i32 16, i32* %36, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV22SkSimpleMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %37 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %5, i32 321, i32 8) #13
  %38 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %5, i64 0, i32 1
  %39 = bitcast i8** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = ptrtoint i8* %37 to i64
  %42 = sub i64 %41, %40
  %43 = trunc i64 %42 to i32
  %44 = getelementptr inbounds i8, i8* %37, i64 312
  store i8* %44, i8** %38, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %5, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeIN12_GLOBAL__N_17BlitterEJRK8SkPixmapRK7SkPaintPS5_8SkIPoint22SkSimpleMatrixProvider5sk_spI8SkShaderEPbEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSH_ENUlPcE_8__invokeESQ_, i32 %43) #13
  %45 = bitcast %class.sk_sp.8* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #13
  %46 = bitcast i8* %37 to %"class.(anonymous namespace)::Blitter"*
  %47 = zext i32 %4 to i64
  %48 = shl nuw i64 %47, 32
  %49 = zext i32 %3 to i64
  %50 = or i64 %48, %49
  %51 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0
  %52 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %6, i64 0, i32 0
  %53 = bitcast %class.sk_sp.8* %6 to i64*
  %54 = load i64, i64* %53, align 8
  store %class.SkShader* null, %class.SkShader** %52, align 8
  %55 = bitcast %class.sk_sp.8* %8 to i64*
  store i64 %54, i64* %55, align 8
  call fastcc void @_ZN12_GLOBAL__N_17BlitterC2ERK8SkPixmapRK7SkPaintPS2_8SkIPointRK16SkMatrixProvider5sk_spI8SkShaderEPb(%"class.(anonymous namespace)::Blitter"* %46, %class.SkPixmap* dereferenceable(40) %0, %class.SkPaint* dereferenceable(72) %1, %class.SkPixmap* %2, i64 %50, %class.SkMatrixProvider* nonnull dereferenceable(112) %51, %class.sk_sp.8* nonnull %8, i8* nonnull %9) #13
  %56 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %8, i64 0, i32 0
  %57 = load %class.SkShader*, %class.SkShader** %56, align 8
  %58 = icmp eq %class.SkShader* %57, null
  br i1 %58, label %69, label %59

59:                                               ; preds = %14
  %60 = getelementptr inbounds %class.SkShader, %class.SkShader* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = bitcast %class.SkShader* %57 to %class.SkRefCntBase*
  %65 = bitcast %class.SkShader* %57 to void (%class.SkRefCntBase*)***
  %66 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, i64 2
  %68 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, align 8
  call void %68(%class.SkRefCntBase* nonnull %64) #13
  br label %69

69:                                               ; preds = %14, %59, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %15) #13
  %70 = load i8, i8* %9, align 1, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = select i1 %71, %"class.(anonymous namespace)::Blitter"* null, %"class.(anonymous namespace)::Blitter"* %46
  %73 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %72, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #13
  br label %74

74:                                               ; preds = %7, %69
  %75 = phi %class.SkBlitter* [ %73, %69 ], [ null, %7 ]
  ret %class.SkBlitter* %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD2Ev(%class.SkMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkSimpleMatrixProviderD0Ev(%class.SkSimpleMatrixProvider*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %class.SkSimpleMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkSimpleMatrixProvider*, i32, %class.SkM44*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkSimpleMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #5

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeIN12_GLOBAL__N_17BlitterEJRK8SkPixmapRK7SkPaintDn8SkIPointRK16SkMatrixProvider5sk_spI8SkShaderEPbEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSI_ENUlPcE_8__invokeESR_(i8*) #2 align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -321
  %3 = bitcast i8* %2 to %"class.(anonymous namespace)::Blitter"*
  tail call void @_ZN12_GLOBAL__N_17BlitterD2Ev(%"class.(anonymous namespace)::Blitter"* %3) #13
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_17BlitterD2Ev(%"class.(anonymous namespace)::Blitter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_17BlitterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 12
  tail call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* %3) #13
  %4 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 11
  tail call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* %4) #13
  %5 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 10
  tail call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* %5) #13
  %6 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 9
  tail call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* %6) #13
  %7 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 8
  tail call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* %7) #13
  %8 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 2, i32 0, i32 0
  %9 = load %class.SkColorSpace*, %class.SkColorSpace** %8, align 8
  %10 = icmp eq %class.SkColorSpace* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = bitcast %class.SkColorSpace* %9 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %11, %1
  %18 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 1, i32 0
  %19 = load %class.SkShader*, %class.SkShader** %18, align 8
  %20 = icmp eq %class.SkShader* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkShader, %class.SkShader* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkShader* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkShader* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  tail call void %30(%class.SkRefCntBase* nonnull %26) #13
  br label %31

31:                                               ; preds = %25, %21, %17
  %32 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 0, i32 0
  %33 = load %class.SkShader*, %class.SkShader** %32, align 8
  %34 = icmp eq %class.SkShader* %33, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.SkShader, %class.SkShader* %33, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = bitcast %class.SkShader* %33 to %class.SkRefCntBase*
  %41 = bitcast %class.SkShader* %33 to void (%class.SkRefCntBase*)***
  %42 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, i64 2
  %44 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, align 8
  tail call void %44(%class.SkRefCntBase* nonnull %40) #13
  br label %45

45:                                               ; preds = %31, %35, %39
  %46 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 5
  tail call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* %46) #13
  %47 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = ptrtoint i32* %48 to i64
  %52 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast i32* %48 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  br label %55

55:                                               ; preds = %45, %50
  %56 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %57 = load %class.SkColorSpace*, %class.SkColorSpace** %56, align 8
  %58 = icmp eq %class.SkColorSpace* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  %64 = bitcast %class.SkColorSpace* %57 to i8*
  tail call void @_ZdlPv(i8* %64) #14
  br label %65

65:                                               ; preds = %55, %59, %63
  %66 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %67 = load %class.SkColorSpace*, %class.SkColorSpace** %66, align 8
  %68 = icmp eq %class.SkColorSpace* %67, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = bitcast %class.SkColorSpace* %67 to i8*
  tail call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %65, %69, %73
  %76 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %76) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN9SkBlitterD2Ev(%class.SkBlitter*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_17BlitterD0Ev(%"class.(anonymous namespace)::Blitter"*) unnamed_addr #0 align 2 {
  tail call void @_ZN12_GLOBAL__N_17BlitterD2Ev(%"class.(anonymous namespace)::Blitter"* %0) #13
  %2 = bitcast %"class.(anonymous namespace)::Blitter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_17Blitter5blitHEiii(%"class.(anonymous namespace)::Blitter"*, i32, i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca [4 x i8*], align 16
  %6 = alloca [3 x i8*], align 16
  %7 = alloca %"class.skvm::Program", align 8
  %8 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 8
  %9 = tail call zeroext i1 @_ZNK4skvm7Program5emptyEv(%"class.skvm::Program"* %8) #13
  br i1 %9, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.skvm::Program"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  call fastcc void @_ZN12_GLOBAL__N_17Blitter12buildProgramENS_8CoverageE(%"class.skvm::Program"* nonnull sret %7, %"class.(anonymous namespace)::Blitter"* %0, i32 0)
  %12 = call dereferenceable(8) %"class.skvm::Program"* @_ZN4skvm7ProgramaSEOS0_(%"class.skvm::Program"* %8, %"class.skvm::Program"* nonnull dereferenceable(8) %7) #13
  call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  br label %13

13:                                               ; preds = %10, %4
  %14 = add nsw i32 %3, %1
  %15 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  store i32 %14, i32* %16, align 4
  %17 = getelementptr inbounds i32, i32* %16, i64 1
  store i32 %2, i32* %17, align 4
  %18 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 3, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = sub nsw i32 %1, %23
  %25 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 3, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = sub nsw i32 %2, %26
  %28 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 2
  %31 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %30, i32 %24, i32 %27, i64 %32) #13
  %34 = getelementptr inbounds i8, i8* %29, i64 %33
  br label %35

35:                                               ; preds = %13, %21
  %36 = phi i8* [ %34, %21 ], [ null, %13 ]
  %37 = icmp eq i8* %36, null
  %38 = bitcast i32** %15 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 1, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 1, i32 2
  %43 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 1, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %42, i32 %1, i32 %2, i64 %44) #13
  %46 = getelementptr inbounds i8, i8* %41, i64 %45
  br i1 %37, label %54, label %47

47:                                               ; preds = %35
  %48 = bitcast [4 x i8*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #13
  %49 = getelementptr inbounds [4 x i8*], [4 x i8*]* %5, i64 0, i64 0
  %50 = getelementptr inbounds [4 x i8*], [4 x i8*]* %5, i64 0, i64 1
  %51 = getelementptr inbounds [4 x i8*], [4 x i8*]* %5, i64 0, i64 2
  %52 = getelementptr inbounds [4 x i8*], [4 x i8*]* %5, i64 0, i64 3
  %53 = bitcast [4 x i8*]* %5 to i64*
  store i64 %39, i64* %53, align 16
  store i8* %46, i8** %50, align 8
  store i8* %36, i8** %51, align 16
  store i8* null, i8** %52, align 8
  call void @_ZNK4skvm7Program4evalEiPPv(%"class.skvm::Program"* %8, i32 %3, i8** nonnull %49) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #13
  br label %60

54:                                               ; preds = %35
  %55 = bitcast [3 x i8*]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #13
  %56 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 0
  %57 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 1
  %58 = getelementptr inbounds [3 x i8*], [3 x i8*]* %6, i64 0, i64 2
  %59 = bitcast [3 x i8*]* %6 to i64*
  store i64 %39, i64* %59, align 16
  store i8* %46, i8** %57, align 8
  store i8* null, i8** %58, align 16
  call void @_ZNK4skvm7Program4evalEiPPv(%"class.skvm::Program"* %8, i32 %3, i8** nonnull %56) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #13
  br label %60

60:                                               ; preds = %54, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_17Blitter9blitAntiHEiiPKhPKs(%"class.(anonymous namespace)::Blitter"*, i32, i32, i8* nocapture readonly, i16* nocapture readonly) unnamed_addr #0 align 2 {
  %6 = alloca [5 x i8*], align 16
  %7 = alloca [4 x i8*], align 16
  %8 = alloca %"class.skvm::Program", align 8
  %9 = alloca float, align 4
  %10 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 9
  %11 = tail call zeroext i1 @_ZNK4skvm7Program5emptyEv(%"class.skvm::Program"* %10) #13
  br i1 %11, label %12, label %15

12:                                               ; preds = %5
  %13 = bitcast %"class.skvm::Program"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  call fastcc void @_ZN12_GLOBAL__N_17Blitter12buildProgramENS_8CoverageE(%"class.skvm::Program"* nonnull sret %8, %"class.(anonymous namespace)::Blitter"* %0, i32 1)
  %14 = call dereferenceable(8) %"class.skvm::Program"* @_ZN4skvm7ProgramaSEOS0_(%"class.skvm::Program"* %10, %"class.skvm::Program"* nonnull dereferenceable(8) %8) #13
  call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  br label %15

15:                                               ; preds = %12, %5
  %16 = load i16, i16* %4, align 2
  %17 = icmp sgt i16 %16, 0
  br i1 %17, label %18, label %46

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %20 = bitcast float* %9 to i8*
  %21 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %22 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 3, i32 0
  %23 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 3, i32 1
  %24 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 0
  %25 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 2
  %26 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 1
  %27 = bitcast i32** %19 to i64*
  %28 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 1, i32 1
  %31 = bitcast [5 x i8*]* %6 to i8*
  %32 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 0
  %33 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 1
  %34 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 2
  %35 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 3
  %36 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 4
  %37 = bitcast [5 x i8*]* %6 to i64*
  %38 = bitcast i8** %35 to float**
  %39 = bitcast [4 x i8*]* %7 to i8*
  %40 = getelementptr inbounds [4 x i8*], [4 x i8*]* %7, i64 0, i64 0
  %41 = getelementptr inbounds [4 x i8*], [4 x i8*]* %7, i64 0, i64 1
  %42 = getelementptr inbounds [4 x i8*], [4 x i8*]* %7, i64 0, i64 2
  %43 = getelementptr inbounds [4 x i8*], [4 x i8*]* %7, i64 0, i64 3
  %44 = bitcast [4 x i8*]* %7 to i64*
  %45 = bitcast i8** %42 to float**
  br label %47

46:                                               ; preds = %80, %15
  ret void

47:                                               ; preds = %18, %80
  %48 = phi i16 [ %16, %18 ], [ %84, %80 ]
  %49 = phi i16* [ %4, %18 ], [ %82, %80 ]
  %50 = phi i8* [ %3, %18 ], [ %83, %80 ]
  %51 = phi i32 [ %1, %18 ], [ %53, %80 ]
  %52 = sext i16 %48 to i32
  %53 = add nsw i32 %51, %52
  %54 = load i32*, i32** %19, align 8
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds i32, i32* %54, i64 1
  store i32 %2, i32* %55, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #13
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  %56 = load i8, i8* %50, align 1
  %57 = uitofp i8 %56 to float
  %58 = fmul float %57, 0x3F70101020000000
  store float %58, float* %9, align 4
  %59 = load i32, i32* %21, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %70, label %61

61:                                               ; preds = %47
  %62 = load i32, i32* %22, align 4
  %63 = sub nsw i32 %51, %62
  %64 = load i32, i32* %23, align 4
  %65 = sub nsw i32 %2, %64
  %66 = load i8*, i8** %24, align 8
  %67 = load i64, i64* %26, align 8
  %68 = call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %25, i32 %63, i32 %65, i64 %67) #13
  %69 = getelementptr inbounds i8, i8* %66, i64 %68
  br label %70

70:                                               ; preds = %47, %61
  %71 = phi i8* [ %69, %61 ], [ null, %47 ]
  %72 = icmp eq i8* %71, null
  %73 = load i64, i64* %27, align 8
  %74 = load i8*, i8** %28, align 8
  %75 = load i64, i64* %30, align 8
  %76 = call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %29, i32 %51, i32 %2, i64 %75) #13
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  br i1 %72, label %79, label %78

78:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #13
  store i64 %73, i64* %37, align 16
  store i8* %77, i8** %33, align 8
  store i8* %71, i8** %34, align 16
  store float* %9, float** %38, align 8
  store i8* null, i8** %36, align 16
  call void @_ZNK4skvm7Program4evalEiPPv(%"class.skvm::Program"* %10, i32 %52, i8** nonnull %32) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #13
  br label %80

79:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #13
  store i64 %73, i64* %44, align 16
  store i8* %77, i8** %41, align 8
  store float* %9, float** %45, align 16
  store i8* null, i8** %43, align 8
  call void @_ZNK4skvm7Program4evalEiPPv(%"class.skvm::Program"* %10, i32 %52, i8** nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #13
  br label %80

80:                                               ; preds = %79, %78
  %81 = sext i16 %48 to i64
  %82 = getelementptr inbounds i16, i16* %49, i64 %81
  %83 = getelementptr inbounds i8, i8* %50, i64 %81
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #13
  %84 = load i16, i16* %82, align 2
  %85 = icmp sgt i16 %84, 0
  br i1 %85, label %47, label %46
}

declare void @_ZN9SkBlitter5blitVEiiih(%class.SkBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #5

declare void @_ZN9SkBlitter8blitRectEiiii(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #5

declare void @_ZN9SkBlitter12blitAntiRectEiiiihh(%class.SkBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_17Blitter8blitMaskERK6SkMaskRK7SkIRect(%"class.(anonymous namespace)::Blitter"*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca [7 x i8*], align 16
  %5 = alloca [6 x i8*], align 16
  %6 = alloca [5 x i8*], align 16
  %7 = alloca [4 x i8*], align 16
  %8 = alloca %"class.skvm::Program", align 8
  %9 = alloca %"class.skvm::Program", align 8
  %10 = alloca %"class.skvm::Program", align 8
  %11 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 3
  %12 = load i8, i8* %11, align 4
  switch i8 %12, label %15 [
    i8 0, label %13
    i8 2, label %16
    i8 1, label %22
    i8 4, label %28
  ]

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkBlitter* %14, %struct.SkMask* dereferenceable(32) %1, %struct.SkIRect* dereferenceable(16) %2) #13
  br label %152

15:                                               ; preds = %3
  tail call void @llvm.trap()
  unreachable

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 11
  %18 = tail call zeroext i1 @_ZNK4skvm7Program5emptyEv(%"class.skvm::Program"* %17) #13
  br i1 %18, label %19, label %34

19:                                               ; preds = %16
  %20 = bitcast %"class.skvm::Program"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call fastcc void @_ZN12_GLOBAL__N_17Blitter12buildProgramENS_8CoverageE(%"class.skvm::Program"* nonnull sret %8, %"class.(anonymous namespace)::Blitter"* %0, i32 4)
  %21 = call dereferenceable(8) %"class.skvm::Program"* @_ZN4skvm7ProgramaSEOS0_(%"class.skvm::Program"* %17, %"class.skvm::Program"* nonnull dereferenceable(8) %8) #13
  call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %34

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 10
  %24 = tail call zeroext i1 @_ZNK4skvm7Program5emptyEv(%"class.skvm::Program"* %23) #13
  br i1 %24, label %25, label %34

25:                                               ; preds = %22
  %26 = bitcast %"class.skvm::Program"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  call fastcc void @_ZN12_GLOBAL__N_17Blitter12buildProgramENS_8CoverageE(%"class.skvm::Program"* nonnull sret %9, %"class.(anonymous namespace)::Blitter"* %0, i32 2)
  %27 = call dereferenceable(8) %"class.skvm::Program"* @_ZN4skvm7ProgramaSEOS0_(%"class.skvm::Program"* %23, %"class.skvm::Program"* nonnull dereferenceable(8) %9) #13
  call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br label %34

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 12
  %30 = tail call zeroext i1 @_ZNK4skvm7Program5emptyEv(%"class.skvm::Program"* %29) #13
  br i1 %30, label %31, label %34

31:                                               ; preds = %28
  %32 = bitcast %"class.skvm::Program"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call fastcc void @_ZN12_GLOBAL__N_17Blitter12buildProgramENS_8CoverageE(%"class.skvm::Program"* nonnull sret %10, %"class.(anonymous namespace)::Blitter"* %0, i32 3)
  %33 = call dereferenceable(8) %"class.skvm::Program"* @_ZN4skvm7ProgramaSEOS0_(%"class.skvm::Program"* %29, %"class.skvm::Program"* nonnull dereferenceable(8) %10) #13
  call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %28, %31, %22, %25, %16, %19
  %35 = phi %"class.skvm::Program"* [ %17, %19 ], [ %17, %16 ], [ %23, %25 ], [ %23, %22 ], [ %29, %31 ], [ %29, %28 ]
  %36 = icmp eq %"class.skvm::Program"* %35, null
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %39, %41
  br i1 %42, label %43, label %152

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %45 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %46 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 1, i32 2
  %48 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 1, i32 1
  %49 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %50 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 11
  %51 = icmp eq %"class.skvm::Program"* %35, %50
  %52 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %53 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 3, i32 0
  %54 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 3, i32 1
  %55 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 0
  %56 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 2
  %57 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 1
  %58 = bitcast [5 x i8*]* %6 to i8*
  %59 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 0
  %60 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 1
  %61 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 2
  %62 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 3
  %63 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 4
  %64 = bitcast [5 x i8*]* %6 to i32**
  %65 = bitcast [4 x i8*]* %7 to i8*
  %66 = getelementptr inbounds [4 x i8*], [4 x i8*]* %7, i64 0, i64 0
  %67 = getelementptr inbounds [4 x i8*], [4 x i8*]* %7, i64 0, i64 1
  %68 = getelementptr inbounds [4 x i8*], [4 x i8*]* %7, i64 0, i64 2
  %69 = getelementptr inbounds [4 x i8*], [4 x i8*]* %7, i64 0, i64 3
  %70 = bitcast [4 x i8*]* %7 to i32**
  %71 = bitcast i32** %49 to i64*
  %72 = bitcast [7 x i8*]* %4 to i8*
  %73 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 0
  %74 = bitcast [7 x i8*]* %4 to i64*
  %75 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 1
  %76 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 2
  %77 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 3
  %78 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 4
  %79 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 5
  %80 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 6
  %81 = bitcast [6 x i8*]* %5 to i8*
  %82 = getelementptr inbounds [6 x i8*], [6 x i8*]* %5, i64 0, i64 0
  %83 = getelementptr inbounds [6 x i8*], [6 x i8*]* %5, i64 0, i64 1
  %84 = getelementptr inbounds [6 x i8*], [6 x i8*]* %5, i64 0, i64 2
  %85 = getelementptr inbounds [6 x i8*], [6 x i8*]* %5, i64 0, i64 3
  %86 = getelementptr inbounds [6 x i8*], [6 x i8*]* %5, i64 0, i64 4
  %87 = getelementptr inbounds [6 x i8*], [6 x i8*]* %5, i64 0, i64 5
  %88 = bitcast [6 x i8*]* %5 to i64*
  br label %89

89:                                               ; preds = %43, %148
  %90 = phi i32 [ %39, %43 ], [ %149, %148 ]
  %91 = load i32, i32* %44, align 4
  %92 = load i32, i32* %45, align 4
  %93 = sub i32 %92, %91
  %94 = load i8*, i8** %46, align 8
  %95 = load i64, i64* %48, align 8
  %96 = call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %47, i32 %91, i32 %90, i64 %95) #13
  %97 = getelementptr inbounds i8, i8* %94, i64 %96
  %98 = call i8* @_ZNK6SkMask7getAddrEii(%struct.SkMask* %1, i32 %91, i32 %90) #13
  %99 = load i32*, i32** %49, align 8
  store i32 %92, i32* %99, align 4
  %100 = getelementptr inbounds i32, i32* %99, i64 1
  store i32 %90, i32* %100, align 4
  br i1 %51, label %101, label %129

101:                                              ; preds = %89
  %102 = call i64 @_ZNK6SkMask16computeImageSizeEv(%struct.SkMask* %1) #13
  %103 = load i32, i32* %52, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %110

105:                                              ; preds = %101
  %106 = load i64, i64* %71, align 8
  %107 = getelementptr inbounds i8, i8* %98, i64 %102
  %108 = shl i64 %102, 1
  %109 = getelementptr inbounds i8, i8* %98, i64 %108
  br label %125

110:                                              ; preds = %101
  %111 = load i32, i32* %53, align 4
  %112 = sub nsw i32 %91, %111
  %113 = load i32, i32* %54, align 4
  %114 = sub nsw i32 %90, %113
  %115 = load i8*, i8** %55, align 8
  %116 = load i64, i64* %57, align 8
  %117 = call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %56, i32 %112, i32 %114, i64 %116) #13
  %118 = getelementptr inbounds i8, i8* %115, i64 %117
  %119 = icmp eq i8* %118, null
  %120 = load i64, i64* %71, align 8
  %121 = getelementptr inbounds i8, i8* %98, i64 %102
  %122 = shl i64 %102, 1
  %123 = getelementptr inbounds i8, i8* %98, i64 %122
  br i1 %119, label %125, label %124

124:                                              ; preds = %110
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %72) #13
  store i64 %120, i64* %74, align 16
  store i8* %97, i8** %75, align 8
  store i8* %118, i8** %76, align 16
  store i8* %121, i8** %77, align 8
  store i8* %123, i8** %78, align 16
  store i8* %98, i8** %79, align 8
  store i8* null, i8** %80, align 16
  call void @_ZNK4skvm7Program4evalEiPPv(%"class.skvm::Program"* nonnull %50, i32 %93, i8** nonnull %73) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %72) #13
  br label %148

125:                                              ; preds = %105, %110
  %126 = phi i8* [ %109, %105 ], [ %123, %110 ]
  %127 = phi i8* [ %107, %105 ], [ %121, %110 ]
  %128 = phi i64 [ %106, %105 ], [ %120, %110 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %81) #13
  store i64 %128, i64* %88, align 16
  store i8* %97, i8** %83, align 8
  store i8* %127, i8** %84, align 16
  store i8* %126, i8** %85, align 8
  store i8* %98, i8** %86, align 16
  store i8* null, i8** %87, align 8
  call void @_ZNK4skvm7Program4evalEiPPv(%"class.skvm::Program"* nonnull %50, i32 %93, i8** nonnull %82) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %81) #13
  br label %148

129:                                              ; preds = %89
  %130 = load i32, i32* %52, align 8
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %129
  %133 = load i32*, i32** %49, align 8
  br label %146

134:                                              ; preds = %129
  %135 = load i32, i32* %53, align 4
  %136 = sub nsw i32 %91, %135
  %137 = load i32, i32* %54, align 4
  %138 = sub nsw i32 %90, %137
  %139 = load i8*, i8** %55, align 8
  %140 = load i64, i64* %57, align 8
  %141 = call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %56, i32 %136, i32 %138, i64 %140) #13
  %142 = getelementptr inbounds i8, i8* %139, i64 %141
  %143 = icmp eq i8* %142, null
  %144 = load i32*, i32** %49, align 8
  br i1 %143, label %146, label %145

145:                                              ; preds = %134
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %58) #13
  store i32* %144, i32** %64, align 16
  store i8* %97, i8** %60, align 8
  store i8* %142, i8** %61, align 16
  store i8* %98, i8** %62, align 8
  store i8* null, i8** %63, align 16
  call void @_ZNK4skvm7Program4evalEiPPv(%"class.skvm::Program"* nonnull %35, i32 %93, i8** nonnull %59) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %58) #13
  br label %148

146:                                              ; preds = %132, %134
  %147 = phi i32* [ %133, %132 ], [ %144, %134 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #13
  store i32* %147, i32** %70, align 16
  store i8* %97, i8** %67, align 8
  store i8* %98, i8** %68, align 16
  store i8* null, i8** %69, align 8
  call void @_ZNK4skvm7Program4evalEiPPv(%"class.skvm::Program"* nonnull %35, i32 %93, i8** nonnull %66) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #13
  br label %148

148:                                              ; preds = %145, %146, %124, %125
  %149 = add nsw i32 %90, 1
  %150 = load i32, i32* %40, align 4
  %151 = icmp slt i32 %149, %150
  br i1 %151, label %89, label %152

152:                                              ; preds = %148, %37, %34, %13
  ret void
}

declare %class.SkPixmap* @_ZN9SkBlitter17justAnOpaqueColorEPj(%class.SkBlitter*, i32*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiH2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [3 x i16], align 2
  %7 = alloca [2 x i8], align 1
  %8 = bitcast [3 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %8) #13
  %9 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 2
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #13
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1
  store i16 1, i16* %9, align 2
  store i16 1, i16* %10, align 2
  store i16 0, i16* %11, align 2
  %14 = trunc i32 %3 to i8
  store i8 %14, i8* %12, align 1
  %15 = trunc i32 %4 to i8
  store i8 %15, i8* %13, align 1
  %16 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %17 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %17, i64 3
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %18, align 8
  call void %19(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %12, i16* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiV2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [2 x i16], align 2
  %7 = alloca [1 x i8], align 1
  %8 = bitcast [2 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  %9 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [1 x i8], [1 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #13
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %12 = trunc i32 %3 to i8
  store i8 %12, i8* %11, align 1
  %13 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %14 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %14, i64 3
  %16 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %15, align 8
  call void %16(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %11, i16* nonnull %9) #13
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %17 = trunc i32 %4 to i8
  store i8 %17, i8* %11, align 1
  %18 = add nsw i32 %2, 1
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %19, i64 3
  %21 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %20, align 8
  call void %21(%class.SkBlitter* %0, i32 %1, i32 %18, i8* nonnull %11, i16* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  ret void
}

declare zeroext i1 @_ZNK9SkBlitter13isNullBlitterEv(%class.SkBlitter*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9SkBlitter20requestRowsPreservedEv(%class.SkBlitter*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN9SkBlitter15allocBlitMemoryEm(%class.SkBlitter*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %1, i32 2) #13
  %9 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* %8, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_Z7sk_freePv(i8* nonnull %10) #13
  br label %13

13:                                               ; preds = %12, %7
  store i64 %1, i64* %4, align 8
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  ret i8* %16
}

declare zeroext i1 @_ZNK4skvm7Program5emptyEv(%"class.skvm::Program"*) local_unnamed_addr #5

declare void @_ZN4skvm7ProgramC1EOS0_(%"class.skvm::Program"*, %"class.skvm::Program"* dereferenceable(8)) unnamed_addr #5

declare dereferenceable(8) %"class.skvm::Program"* @_ZN4skvm7ProgramaSEOS0_(%"class.skvm::Program"*, %"class.skvm::Program"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_17Blitter12buildProgramENS_8CoverageE(%"class.skvm::Program"* noalias sret, %"class.(anonymous namespace)::Blitter"*, i32) unnamed_addr #8 align 2 {
  %4 = alloca %"struct.skvm::Color", align 8
  %5 = alloca %"struct.skvm::F32", align 8
  %6 = alloca %"struct.skvm::F32", align 8
  %7 = alloca %"struct.skvm::F32", align 8
  %8 = alloca %"struct.skvm::F32", align 8
  %9 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %10 = alloca %"struct.skvm::Color", align 8
  %11 = alloca %"struct.skvm::Coord", align 8
  %12 = alloca %"struct.skvm::Color", align 8
  %13 = alloca %"struct.skvm::Color", align 8
  %14 = alloca %"struct.skvm::PixelFormat", align 8
  %15 = alloca %"struct.skvm::Color", align 8
  %16 = alloca %"struct.skvm::PixelFormat", align 8
  %17 = alloca %"struct.skvm::Color", align 8
  %18 = alloca %"struct.skvm::PixelFormat", align 8
  %19 = alloca %"struct.skvm::Color", align 8
  %20 = alloca %"struct.skvm::Color", align 8
  %21 = alloca %"struct.skvm::Color", align 8
  %22 = alloca %"struct.skvm::Color", align 8
  %23 = alloca %"class.skvm::Builder", align 8
  %24 = alloca %"struct.(anonymous namespace)::Params", align 8
  %25 = alloca %"class.skvm::Program", align 8
  %26 = alloca %class.SkString, align 8
  %27 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 7, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 7, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 7, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 7, i32 3
  %34 = load i8, i8* %33, align 8
  %35 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 7, i32 4
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 7, i32 5
  %38 = load i8, i8* %37, align 2
  %39 = getelementptr inbounds %"class.skvm::Program", %"class.skvm::Program"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.skvm::Program::Impl"* inttoptr (i64 -6148914691236517206 to %"struct.skvm::Program::Impl"*), %"struct.skvm::Program::Impl"** %39, align 8
  tail call void @_ZN4skvm7ProgramC1Ev(%"class.skvm::Program"* %0) #13
  %40 = tail call zeroext i1 @_ZNK4skvm7Program5emptyEv(%"class.skvm::Program"* %0) #13
  br i1 %40, label %41, label %666

41:                                               ; preds = %3
  tail call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* %0) #13
  %42 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 4
  %43 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 4, i32 1
  %44 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 4, i32 1, i32 0, i32 1
  %45 = bitcast i32** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = ashr exact i64 %49, 2
  %51 = icmp ult i64 %50, 2
  %52 = inttoptr i64 %48 to i32*
  br i1 %51, label %53, label %55

53:                                               ; preds = %41
  %54 = sub nuw nsw i64 2, %50
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %43, i64 %54) #13
  br label %59

55:                                               ; preds = %41
  %56 = icmp eq i64 %49, 8
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds i32, i32* %52, i64 2
  store i32* %58, i32** %44, align 8
  br label %59

59:                                               ; preds = %55, %53, %57
  %60 = bitcast %"class.skvm::Builder"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %60) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 72, i1 false)
  call void @_ZN4skvm7BuilderC1Ev(%"class.skvm::Builder"* nonnull %23) #13
  %61 = bitcast %"struct.(anonymous namespace)::Params"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %61) #13
  %62 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %24, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %24, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %24, i64 0, i32 2, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %24, i64 0, i32 2, i32 1
  %66 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %24, i64 0, i32 3
  %67 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %24, i64 0, i32 4
  %68 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %24, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 40, i1 false) #13, !alias.scope !3
  %69 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %24, i64 0, i32 6
  %70 = bitcast float* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 -1, i64 16, i1 false) #13, !alias.scope !3
  store %class.SkMatrixProvider* inttoptr (i64 -6148914691236517206 to %class.SkMatrixProvider*), %class.SkMatrixProvider** %69, align 8, !alias.scope !3
  %71 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 6, i32 0, i32 0
  %72 = load %class.SkShader*, %class.SkShader** %71, align 8, !noalias !3
  %73 = icmp eq %class.SkShader* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %59
  %75 = getelementptr inbounds %class.SkShader, %class.SkShader* %72, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 1 monotonic, !noalias !3
  br label %77

77:                                               ; preds = %74, %59
  store %class.SkShader* %72, %class.SkShader** %62, align 8, !alias.scope !3
  %78 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 6, i32 1, i32 0
  %79 = load %class.SkShader*, %class.SkShader** %78, align 8, !noalias !3
  %80 = icmp eq %class.SkShader* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %class.SkShader, %class.SkShader* %79, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 1 monotonic, !noalias !3
  br label %84

84:                                               ; preds = %81, %77
  store %class.SkShader* %79, %class.SkShader** %63, align 8, !alias.scope !3
  %85 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 6, i32 2, i32 0, i32 0
  %86 = load %class.SkColorSpace*, %class.SkColorSpace** %85, align 8, !noalias !3
  %87 = icmp eq %class.SkColorSpace* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 1 monotonic, !noalias !3
  br label %91

91:                                               ; preds = %84, %88
  store %class.SkColorSpace* %86, %class.SkColorSpace** %64, align 8, !alias.scope !3
  %92 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 6, i32 2, i32 1
  %93 = bitcast i32* %92 to i64*
  %94 = bitcast i32* %65 to i64*
  %95 = load i64, i64* %93, align 8, !noalias !3
  store i64 %95, i64* %94, align 8, !alias.scope !3
  %96 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 6, i32 3
  %97 = bitcast i32* %66 to i8*
  %98 = bitcast i32* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 32, i1 false) #13
  store i32 %2, i32* %67, align 4, !alias.scope !3
  %99 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %1, i64 0, i32 5
  %100 = bitcast %"struct.skvm::PixelFormat"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %100)
  %101 = call i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"* nonnull %23, i32 0) #13
  %102 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %42, i64 0, i32 0, i32 0
  store i32 %101, i32* %102, align 8
  %103 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %24, i64 0, i32 2
  %104 = load i32, i32* %65, align 8
  %105 = call i32 @_Z24SkColorTypeBytesPerPixel11SkColorType(i32 %104) #13
  %106 = call i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"* nonnull %23, i32 %105) #13
  %107 = bitcast %"struct.skvm::Coord"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %107) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 32, i1 false) #13
  call fastcc void @_ZN12_GLOBAL__N_112device_coordEPN4skvm7BuilderEPNS0_8UniformsE(%"struct.skvm::Coord"* nonnull sret %11, %"class.skvm::Builder"* nonnull %23, %"struct.skvm::Uniforms"* %42) #13
  %108 = bitcast %"struct.skvm::Color"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %108) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 64, i1 false) #13
  %109 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %24, i64 0, i32 5
  %110 = bitcast %struct.SkRGBA4f* %109 to <2 x float>*
  %111 = load <2 x float>, <2 x float>* %110, align 8
  %112 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %24, i64 0, i32 5, i32 2
  %113 = bitcast float* %112 to <2 x float>*
  %114 = load <2 x float>, <2 x float>* %113, align 8
  call void @_ZN4skvm7Builder12uniformColorE8SkRGBA4fIL11SkAlphaType3EEPNS_8UniformsE(%"struct.skvm::Color"* nonnull sret %12, %"class.skvm::Builder"* nonnull %23, <2 x float> %111, <2 x float> %114, %"struct.skvm::Uniforms"* %42) #13
  %115 = bitcast %"struct.skvm::Color"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %115) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 64, i1 false) #13
  %116 = bitcast %"struct.(anonymous namespace)::Params"* %24 to %class.SkShaderBase**
  %117 = load %class.SkShaderBase*, %class.SkShaderBase** %116, align 8
  %118 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %69, align 8
  call void @_ZNK12SkShaderBase7programEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* nonnull sret %13, %class.SkShaderBase* %117, %"class.skvm::Builder"* nonnull %23, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %11, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %11, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %12, %class.SkMatrixProvider* dereferenceable(112) %118, %class.SkMatrix* null, %class.SkColorInfo* dereferenceable(16) %103, %"struct.skvm::Uniforms"* %42, %class.SkArenaAlloc* %99) #13
  %119 = load i32, i32* %67, align 4
  %120 = icmp eq i32 %119, 4
  br i1 %120, label %121, label %183

121:                                              ; preds = %91
  %122 = call i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"* nonnull %23, i32 1) #13
  %123 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5load8ENS_3PtrE(%"class.skvm::Builder"* nonnull %23, i32 %122) #13
  %124 = extractvalue { %"class.skvm::Builder"*, i32 } %123, 0
  %125 = extractvalue { %"class.skvm::Builder"*, i32 } %123, 1
  %126 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder10from_unormEiNS_3I32E(%"class.skvm::Builder"* %124, i32 8, %"class.skvm::Builder"* %124, i32 %125) #13
  %127 = extractvalue { %"class.skvm::Builder"*, i32 } %126, 0
  %128 = extractvalue { %"class.skvm::Builder"*, i32 } %126, 1
  %129 = call i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"* nonnull %23, i32 1) #13
  %130 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5load8ENS_3PtrE(%"class.skvm::Builder"* nonnull %23, i32 %129) #13
  %131 = extractvalue { %"class.skvm::Builder"*, i32 } %130, 0
  %132 = extractvalue { %"class.skvm::Builder"*, i32 } %130, 1
  %133 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder10from_unormEiNS_3I32E(%"class.skvm::Builder"* %131, i32 8, %"class.skvm::Builder"* %131, i32 %132) #13
  %134 = extractvalue { %"class.skvm::Builder"*, i32 } %133, 0
  %135 = extractvalue { %"class.skvm::Builder"*, i32 } %133, 1
  %136 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 0, i32 0
  %137 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %136, align 8
  %138 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 0, i32 1
  %139 = load i32, i32* %138, align 8
  %140 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %137, %"class.skvm::Builder"* %137, i32 %139, %"class.skvm::Builder"* %127, i32 %128) #13
  %141 = extractvalue { %"class.skvm::Builder"*, i32 } %140, 0
  %142 = extractvalue { %"class.skvm::Builder"*, i32 } %140, 1
  %143 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %141, %"class.skvm::Builder"* %141, i32 %142, %"class.skvm::Builder"* %134, i32 %135) #13
  %144 = extractvalue { %"class.skvm::Builder"*, i32 } %143, 0
  %145 = extractvalue { %"class.skvm::Builder"*, i32 } %143, 1
  %146 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 0
  %147 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %146, align 8
  %148 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 1
  %149 = load i32, i32* %148, align 8
  %150 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %144, %"class.skvm::Builder"* %144, i32 %145, %"class.skvm::Builder"* %147, i32 %149) #13
  %151 = extractvalue { %"class.skvm::Builder"*, i32 } %150, 0
  %152 = extractvalue { %"class.skvm::Builder"*, i32 } %150, 1
  store %"class.skvm::Builder"* %151, %"class.skvm::Builder"** %136, align 8
  store i32 %152, i32* %138, align 8
  %153 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 1, i32 0
  %154 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %153, align 8
  %155 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 1, i32 1
  %156 = load i32, i32* %155, align 8
  %157 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %154, %"class.skvm::Builder"* %154, i32 %156, %"class.skvm::Builder"* %127, i32 %128) #13
  %158 = extractvalue { %"class.skvm::Builder"*, i32 } %157, 0
  %159 = extractvalue { %"class.skvm::Builder"*, i32 } %157, 1
  %160 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %158, %"class.skvm::Builder"* %158, i32 %159, %"class.skvm::Builder"* %134, i32 %135) #13
  %161 = extractvalue { %"class.skvm::Builder"*, i32 } %160, 0
  %162 = extractvalue { %"class.skvm::Builder"*, i32 } %160, 1
  %163 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %146, align 8
  %164 = load i32, i32* %148, align 8
  %165 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %161, %"class.skvm::Builder"* %161, i32 %162, %"class.skvm::Builder"* %163, i32 %164) #13
  %166 = extractvalue { %"class.skvm::Builder"*, i32 } %165, 0
  %167 = extractvalue { %"class.skvm::Builder"*, i32 } %165, 1
  store %"class.skvm::Builder"* %166, %"class.skvm::Builder"** %153, align 8
  store i32 %167, i32* %155, align 8
  %168 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 2, i32 0
  %169 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %168, align 8
  %170 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 2, i32 1
  %171 = load i32, i32* %170, align 8
  %172 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %169, %"class.skvm::Builder"* %169, i32 %171, %"class.skvm::Builder"* %127, i32 %128) #13
  %173 = extractvalue { %"class.skvm::Builder"*, i32 } %172, 0
  %174 = extractvalue { %"class.skvm::Builder"*, i32 } %172, 1
  %175 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %173, %"class.skvm::Builder"* %173, i32 %174, %"class.skvm::Builder"* %134, i32 %135) #13
  %176 = extractvalue { %"class.skvm::Builder"*, i32 } %175, 0
  %177 = extractvalue { %"class.skvm::Builder"*, i32 } %175, 1
  %178 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %146, align 8
  %179 = load i32, i32* %148, align 8
  %180 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %176, %"class.skvm::Builder"* %176, i32 %177, %"class.skvm::Builder"* %178, i32 %179) #13
  %181 = extractvalue { %"class.skvm::Builder"*, i32 } %180, 0
  %182 = extractvalue { %"class.skvm::Builder"*, i32 } %180, 1
  store %"class.skvm::Builder"* %181, %"class.skvm::Builder"** %168, align 8
  store i32 %182, i32* %170, align 8
  br label %183

183:                                              ; preds = %121, %91
  %184 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %24, i64 0, i32 2, i32 2
  %185 = load i32, i32* %184, align 4
  %186 = icmp eq i32 %185, 2
  br i1 %186, label %187, label %250

187:                                              ; preds = %183
  %188 = load i32, i32* %65, align 8
  switch i32 %188, label %189 [
    i32 0, label %190
    i32 1, label %190
    i32 2, label %190
    i32 3, label %190
    i32 4, label %190
    i32 5, label %190
    i32 6, label %190
    i32 7, label %190
    i32 9, label %190
    i32 8, label %190
    i32 10, label %190
    i32 11, label %190
    i32 12, label %190
    i32 15, label %190
    i32 18, label %190
    i32 16, label %190
    i32 19, label %190
    i32 20, label %190
    i32 13, label %250
    i32 14, label %250
    i32 17, label %250
  ]

189:                                              ; preds = %187
  call void @llvm.trap() #13
  unreachable

190:                                              ; preds = %187, %187, %187, %187, %187, %187, %187, %187, %187, %187, %187, %187, %187, %187, %187, %187, %187, %187
  %191 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 0
  %192 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %191, align 8
  %193 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 1
  %194 = load i32, i32* %193, align 8
  %195 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %192, i32 0) #13
  %196 = extractvalue { %"class.skvm::Builder"*, i32 } %195, 0
  %197 = extractvalue { %"class.skvm::Builder"*, i32 } %195, 1
  %198 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %192, i32 1065353216) #13
  %199 = extractvalue { %"class.skvm::Builder"*, i32 } %198, 0
  %200 = extractvalue { %"class.skvm::Builder"*, i32 } %198, 1
  %201 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %192, %"class.skvm::Builder"* %192, i32 %194, %"class.skvm::Builder"* %199, i32 %200) #13
  %202 = extractvalue { %"class.skvm::Builder"*, i32 } %201, 0
  %203 = extractvalue { %"class.skvm::Builder"*, i32 } %201, 1
  %204 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %192, %"class.skvm::Builder"* %196, i32 %197, %"class.skvm::Builder"* %202, i32 %203) #13
  %205 = extractvalue { %"class.skvm::Builder"*, i32 } %204, 0
  %206 = extractvalue { %"class.skvm::Builder"*, i32 } %204, 1
  store %"class.skvm::Builder"* %205, %"class.skvm::Builder"** %191, align 8
  store i32 %206, i32* %193, align 8
  %207 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 0, i32 0
  %208 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %207, align 8
  %209 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 0, i32 1
  %210 = load i32, i32* %209, align 8
  %211 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %208, i32 0) #13
  %212 = extractvalue { %"class.skvm::Builder"*, i32 } %211, 0
  %213 = extractvalue { %"class.skvm::Builder"*, i32 } %211, 1
  %214 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %208, %"class.skvm::Builder"* %208, i32 %210, %"class.skvm::Builder"* %205, i32 %206) #13
  %215 = extractvalue { %"class.skvm::Builder"*, i32 } %214, 0
  %216 = extractvalue { %"class.skvm::Builder"*, i32 } %214, 1
  %217 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %208, %"class.skvm::Builder"* %212, i32 %213, %"class.skvm::Builder"* %215, i32 %216) #13
  %218 = extractvalue { %"class.skvm::Builder"*, i32 } %217, 0
  %219 = extractvalue { %"class.skvm::Builder"*, i32 } %217, 1
  store %"class.skvm::Builder"* %218, %"class.skvm::Builder"** %207, align 8
  store i32 %219, i32* %209, align 8
  %220 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 1, i32 0
  %221 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %220, align 8
  %222 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 1, i32 1
  %223 = load i32, i32* %222, align 8
  %224 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %191, align 8
  %225 = load i32, i32* %193, align 8
  %226 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %221, i32 0) #13
  %227 = extractvalue { %"class.skvm::Builder"*, i32 } %226, 0
  %228 = extractvalue { %"class.skvm::Builder"*, i32 } %226, 1
  %229 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %221, %"class.skvm::Builder"* %221, i32 %223, %"class.skvm::Builder"* %224, i32 %225) #13
  %230 = extractvalue { %"class.skvm::Builder"*, i32 } %229, 0
  %231 = extractvalue { %"class.skvm::Builder"*, i32 } %229, 1
  %232 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %221, %"class.skvm::Builder"* %227, i32 %228, %"class.skvm::Builder"* %230, i32 %231) #13
  %233 = extractvalue { %"class.skvm::Builder"*, i32 } %232, 0
  %234 = extractvalue { %"class.skvm::Builder"*, i32 } %232, 1
  store %"class.skvm::Builder"* %233, %"class.skvm::Builder"** %220, align 8
  store i32 %234, i32* %222, align 8
  %235 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 2, i32 0
  %236 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %235, align 8
  %237 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 2, i32 1
  %238 = load i32, i32* %237, align 8
  %239 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %191, align 8
  %240 = load i32, i32* %193, align 8
  %241 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %236, i32 0) #13
  %242 = extractvalue { %"class.skvm::Builder"*, i32 } %241, 0
  %243 = extractvalue { %"class.skvm::Builder"*, i32 } %241, 1
  %244 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %236, %"class.skvm::Builder"* %236, i32 %238, %"class.skvm::Builder"* %239, i32 %240) #13
  %245 = extractvalue { %"class.skvm::Builder"*, i32 } %244, 0
  %246 = extractvalue { %"class.skvm::Builder"*, i32 } %244, 1
  %247 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %236, %"class.skvm::Builder"* %242, i32 %243, %"class.skvm::Builder"* %245, i32 %246) #13
  %248 = extractvalue { %"class.skvm::Builder"*, i32 } %247, 0
  %249 = extractvalue { %"class.skvm::Builder"*, i32 } %247, 1
  store %"class.skvm::Builder"* %248, %"class.skvm::Builder"** %235, align 8
  store i32 %249, i32* %237, align 8
  br label %250

250:                                              ; preds = %190, %187, %187, %187, %183
  %251 = phi i1 [ true, %190 ], [ false, %183 ], [ false, %187 ], [ false, %187 ], [ false, %187 ]
  %252 = bitcast %"struct.skvm::PixelFormat"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %252) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %252, i8 -86, i64 36, i1 false) #13
  %253 = load i32, i32* %65, align 8
  call void @_ZN4skvm26SkColorType_to_PixelFormatE11SkColorType(%"struct.skvm::PixelFormat"* nonnull sret %14, i32 %253) #13
  %254 = bitcast %"struct.skvm::Color"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %254) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %254, i8 -86, i64 64, i1 false) #13
  call void @_ZN4skvm7Builder4loadENS_11PixelFormatENS_3PtrE(%"struct.skvm::Color"* nonnull sret %15, %"class.skvm::Builder"* nonnull %23, %"struct.skvm::PixelFormat"* nonnull byval(%"struct.skvm::PixelFormat") align 8 %14, i32 %106) #13
  %255 = load i32, i32* %184, align 4
  %256 = icmp eq i32 %255, 1
  br i1 %256, label %260, label %257

257:                                              ; preds = %250
  %258 = load i32, i32* %65, align 8
  %259 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %258) #13
  br i1 %259, label %260, label %266

260:                                              ; preds = %257, %250
  %261 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* nonnull %23, i32 1065353216) #13
  %262 = extractvalue { %"class.skvm::Builder"*, i32 } %261, 0
  %263 = extractvalue { %"class.skvm::Builder"*, i32 } %261, 1
  %264 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %15, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %262, %"class.skvm::Builder"** %264, align 8
  %265 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %15, i64 0, i32 3, i32 1
  store i32 %263, i32* %265, align 8
  br label %283

266:                                              ; preds = %257
  %267 = load i32, i32* %184, align 4
  %268 = icmp eq i32 %267, 3
  br i1 %268, label %269, label %283

269:                                              ; preds = %266
  %270 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %15, i64 0, i32 3, i32 0
  %271 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %270, align 8
  %272 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %15, i64 0, i32 3, i32 1
  %273 = bitcast i32* %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = bitcast %"struct.skvm::Color"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %275) #13, !noalias !6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %275, i8* nonnull align 8 %254, i64 48, i1 false) #13
  %276 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %271, %"class.skvm::Builder"** %276, align 8, !noalias !6
  %277 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 3, i32 1
  %278 = bitcast i32* %277 to i64*
  store i64 %274, i64* %278, align 8
  %279 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 0
  %280 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 1
  %281 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 2
  %282 = trunc i64 %274 to i32
  call void @_ZN4skvm7Builder6premulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"* %271, %"struct.skvm::F32"* nonnull %279, %"struct.skvm::F32"* %280, %"struct.skvm::F32"* %281, %"class.skvm::Builder"* %271, i32 %282) #13, !noalias !9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %254, i8* nonnull align 8 %275, i64 64, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %275) #13, !noalias !6
  br label %283

283:                                              ; preds = %269, %266, %260
  %284 = load i32, i32* %67, align 4
  switch i32 %284, label %349 [
    i32 0, label %285
    i32 1, label %289
    i32 4, label %294
    i32 2, label %294
    i32 3, label %302
  ]

285:                                              ; preds = %283
  %286 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* nonnull %23, i32 1065353216) #13
  %287 = extractvalue { %"class.skvm::Builder"*, i32 } %286, 0
  %288 = extractvalue { %"class.skvm::Builder"*, i32 } %286, 1
  br label %349

289:                                              ; preds = %283
  %290 = call i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"* nonnull %23, i32 0) #13
  %291 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* nonnull %23, i32 %290, i32 0) #13
  %292 = extractvalue { %"class.skvm::Builder"*, i32 } %291, 0
  %293 = extractvalue { %"class.skvm::Builder"*, i32 } %291, 1
  br label %349

294:                                              ; preds = %283, %283
  %295 = call i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"* nonnull %23, i32 1) #13
  %296 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5load8ENS_3PtrE(%"class.skvm::Builder"* nonnull %23, i32 %295) #13
  %297 = extractvalue { %"class.skvm::Builder"*, i32 } %296, 0
  %298 = extractvalue { %"class.skvm::Builder"*, i32 } %296, 1
  %299 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder10from_unormEiNS_3I32E(%"class.skvm::Builder"* %297, i32 8, %"class.skvm::Builder"* %297, i32 %298) #13
  %300 = extractvalue { %"class.skvm::Builder"*, i32 } %299, 0
  %301 = extractvalue { %"class.skvm::Builder"*, i32 } %299, 1
  br label %349

302:                                              ; preds = %283
  %303 = bitcast %"struct.skvm::PixelFormat"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %303) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %303, i8 -86, i64 36, i1 false) #13
  call void @_ZN4skvm26SkColorType_to_PixelFormatE11SkColorType(%"struct.skvm::PixelFormat"* nonnull sret %16, i32 2) #13
  %304 = bitcast %"struct.skvm::Color"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %304) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %100, i8* nonnull align 8 %303, i64 36, i1 false) #13
  %305 = call i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"* nonnull %23, i32 2) #13
  call void @_ZN4skvm7Builder4loadENS_11PixelFormatENS_3PtrE(%"struct.skvm::Color"* nonnull sret %17, %"class.skvm::Builder"* nonnull %23, %"struct.skvm::PixelFormat"* nonnull byval(%"struct.skvm::PixelFormat") align 8 %18, i32 %305) #13
  %306 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %17, i64 0, i32 0, i32 0
  %307 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %306, align 8
  %308 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %17, i64 0, i32 0, i32 1
  %309 = load i32, i32* %308, align 8
  %310 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %17, i64 0, i32 1, i32 0
  %311 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %310, align 8
  %312 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %17, i64 0, i32 1, i32 1
  %313 = load i32, i32* %312, align 8
  %314 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %17, i64 0, i32 2, i32 0
  %315 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %314, align 8
  %316 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %17, i64 0, i32 2, i32 1
  %317 = load i32, i32* %316, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %304) #13
  %318 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 0
  %319 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %318, align 8
  %320 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 1
  %321 = load i32, i32* %320, align 8
  %322 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %15, i64 0, i32 3, i32 0
  %323 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %322, align 8
  %324 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %15, i64 0, i32 3, i32 1
  %325 = load i32, i32* %324, align 8
  %326 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2ltENS_3F32ES1_(%"class.skvm::Builder"* %319, %"class.skvm::Builder"* %319, i32 %321, %"class.skvm::Builder"* %323, i32 %325) #13
  %327 = extractvalue { %"class.skvm::Builder"*, i32 } %326, 0
  %328 = extractvalue { %"class.skvm::Builder"*, i32 } %326, 1
  %329 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %311, %"class.skvm::Builder"* %311, i32 %313, %"class.skvm::Builder"* %315, i32 %317) #13
  %330 = extractvalue { %"class.skvm::Builder"*, i32 } %329, 0
  %331 = extractvalue { %"class.skvm::Builder"*, i32 } %329, 1
  %332 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %307, %"class.skvm::Builder"* %307, i32 %309, %"class.skvm::Builder"* %330, i32 %331) #13
  %333 = extractvalue { %"class.skvm::Builder"*, i32 } %332, 0
  %334 = extractvalue { %"class.skvm::Builder"*, i32 } %332, 1
  %335 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %311, %"class.skvm::Builder"* %311, i32 %313, %"class.skvm::Builder"* %315, i32 %317) #13
  %336 = extractvalue { %"class.skvm::Builder"*, i32 } %335, 0
  %337 = extractvalue { %"class.skvm::Builder"*, i32 } %335, 1
  %338 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %307, %"class.skvm::Builder"* %307, i32 %309, %"class.skvm::Builder"* %336, i32 %337) #13
  %339 = extractvalue { %"class.skvm::Builder"*, i32 } %338, 0
  %340 = extractvalue { %"class.skvm::Builder"*, i32 } %338, 1
  %341 = bitcast { %"class.skvm::Builder"*, i32 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %341) #13
  %342 = ptrtoint %"class.skvm::Builder"* %339 to i64
  %343 = bitcast { %"class.skvm::Builder"*, i32 }* %9 to %"struct.skvm::I32"*
  %344 = bitcast { %"class.skvm::Builder"*, i32 }* %9 to i64*
  store i64 %342, i64* %344, align 8
  %345 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %9, i64 0, i32 1
  store i32 %340, i32* %345, align 8
  %346 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6selectENS_3I32ES1_S1_(%"class.skvm::Builder"* %327, %"class.skvm::Builder"* %327, i32 %328, %"class.skvm::Builder"* %333, i32 %334, %"struct.skvm::I32"* nonnull byval(%"struct.skvm::I32") align 8 %343) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %341) #13
  %347 = extractvalue { %"class.skvm::Builder"*, i32 } %346, 0
  %348 = extractvalue { %"class.skvm::Builder"*, i32 } %346, 1
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %303) #13
  br label %349

349:                                              ; preds = %302, %294, %289, %285, %283
  %350 = phi %"class.skvm::Builder"* [ null, %283 ], [ %307, %302 ], [ %300, %294 ], [ %292, %289 ], [ %287, %285 ]
  %351 = phi i32 [ -1, %283 ], [ %309, %302 ], [ %301, %294 ], [ %293, %289 ], [ %288, %285 ]
  %352 = phi %"class.skvm::Builder"* [ null, %283 ], [ %311, %302 ], [ %300, %294 ], [ %292, %289 ], [ %287, %285 ]
  %353 = phi i32 [ -1, %283 ], [ %313, %302 ], [ %301, %294 ], [ %293, %289 ], [ %288, %285 ]
  %354 = phi %"class.skvm::Builder"* [ null, %283 ], [ %315, %302 ], [ %300, %294 ], [ %292, %289 ], [ %287, %285 ]
  %355 = phi i32 [ -1, %283 ], [ %317, %302 ], [ %301, %294 ], [ %293, %289 ], [ %288, %285 ]
  %356 = phi %"class.skvm::Builder"* [ null, %283 ], [ %347, %302 ], [ %300, %294 ], [ %292, %289 ], [ %287, %285 ]
  %357 = phi i32 [ -1, %283 ], [ %348, %302 ], [ %301, %294 ], [ %293, %289 ], [ %288, %285 ]
  %358 = load %class.SkShader*, %class.SkShader** %63, align 8
  %359 = icmp eq %class.SkShader* %358, null
  br i1 %359, label %386, label %360

360:                                              ; preds = %349
  %361 = bitcast %class.SkShader* %358 to %class.SkShaderBase*
  %362 = bitcast %"struct.skvm::Color"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %362) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %362, i8 -86, i64 64, i1 false) #13
  %363 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %69, align 8
  call void @_ZNK12SkShaderBase7programEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* nonnull sret %19, %class.SkShaderBase* nonnull %361, %"class.skvm::Builder"* nonnull %23, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %11, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %11, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %12, %class.SkMatrixProvider* dereferenceable(112) %363, %class.SkMatrix* null, %class.SkColorInfo* dereferenceable(16) %103, %"struct.skvm::Uniforms"* %42, %class.SkArenaAlloc* %99) #13
  %364 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %19, i64 0, i32 3, i32 0
  %365 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %364, align 8
  %366 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %19, i64 0, i32 3, i32 1
  %367 = load i32, i32* %366, align 8
  %368 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %350, %"class.skvm::Builder"* %350, i32 %351, %"class.skvm::Builder"* %365, i32 %367) #13
  %369 = extractvalue { %"class.skvm::Builder"*, i32 } %368, 0
  %370 = extractvalue { %"class.skvm::Builder"*, i32 } %368, 1
  %371 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %364, align 8
  %372 = load i32, i32* %366, align 8
  %373 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %352, %"class.skvm::Builder"* %352, i32 %353, %"class.skvm::Builder"* %371, i32 %372) #13
  %374 = extractvalue { %"class.skvm::Builder"*, i32 } %373, 0
  %375 = extractvalue { %"class.skvm::Builder"*, i32 } %373, 1
  %376 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %364, align 8
  %377 = load i32, i32* %366, align 8
  %378 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %354, %"class.skvm::Builder"* %354, i32 %355, %"class.skvm::Builder"* %376, i32 %377) #13
  %379 = extractvalue { %"class.skvm::Builder"*, i32 } %378, 0
  %380 = extractvalue { %"class.skvm::Builder"*, i32 } %378, 1
  %381 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %364, align 8
  %382 = load i32, i32* %366, align 8
  %383 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %356, %"class.skvm::Builder"* %356, i32 %357, %"class.skvm::Builder"* %381, i32 %382) #13
  %384 = extractvalue { %"class.skvm::Builder"*, i32 } %383, 0
  %385 = extractvalue { %"class.skvm::Builder"*, i32 } %383, 1
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %362) #13
  br label %386

386:                                              ; preds = %360, %349
  %387 = phi %"class.skvm::Builder"* [ %369, %360 ], [ %350, %349 ]
  %388 = phi i32 [ %370, %360 ], [ %351, %349 ]
  %389 = phi %"class.skvm::Builder"* [ %374, %360 ], [ %352, %349 ]
  %390 = phi i32 [ %375, %360 ], [ %353, %349 ]
  %391 = phi %"class.skvm::Builder"* [ %379, %360 ], [ %354, %349 ]
  %392 = phi i32 [ %380, %360 ], [ %355, %349 ]
  %393 = phi %"class.skvm::Builder"* [ %384, %360 ], [ %356, %349 ]
  %394 = phi i32 [ %385, %360 ], [ %357, %349 ]
  %395 = load i32, i32* %66, align 8
  %396 = load i32, i32* %67, align 4
  %397 = icmp eq i32 %396, 3
  %398 = call zeroext i1 @_Z34SkBlendMode_ShouldPreScaleCoverage11SkBlendModeb(i32 %395, i1 zeroext %397) #13
  br i1 %398, label %399, label %430

399:                                              ; preds = %386
  %400 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 0, i32 0
  %401 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %400, align 8
  %402 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 0, i32 1
  %403 = load i32, i32* %402, align 8
  %404 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %401, %"class.skvm::Builder"* %401, i32 %403, %"class.skvm::Builder"* %387, i32 %388) #13
  %405 = extractvalue { %"class.skvm::Builder"*, i32 } %404, 0
  %406 = extractvalue { %"class.skvm::Builder"*, i32 } %404, 1
  store %"class.skvm::Builder"* %405, %"class.skvm::Builder"** %400, align 8
  store i32 %406, i32* %402, align 8
  %407 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 1, i32 0
  %408 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %407, align 8
  %409 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 1, i32 1
  %410 = load i32, i32* %409, align 8
  %411 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %408, %"class.skvm::Builder"* %408, i32 %410, %"class.skvm::Builder"* %389, i32 %390) #13
  %412 = extractvalue { %"class.skvm::Builder"*, i32 } %411, 0
  %413 = extractvalue { %"class.skvm::Builder"*, i32 } %411, 1
  store %"class.skvm::Builder"* %412, %"class.skvm::Builder"** %407, align 8
  store i32 %413, i32* %409, align 8
  %414 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 2, i32 0
  %415 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %414, align 8
  %416 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 2, i32 1
  %417 = load i32, i32* %416, align 8
  %418 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %415, %"class.skvm::Builder"* %415, i32 %417, %"class.skvm::Builder"* %391, i32 %392) #13
  %419 = extractvalue { %"class.skvm::Builder"*, i32 } %418, 0
  %420 = extractvalue { %"class.skvm::Builder"*, i32 } %418, 1
  store %"class.skvm::Builder"* %419, %"class.skvm::Builder"** %414, align 8
  store i32 %420, i32* %416, align 8
  %421 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 0
  %422 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %421, align 8
  %423 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 1
  %424 = load i32, i32* %423, align 8
  %425 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %422, %"class.skvm::Builder"* %422, i32 %424, %"class.skvm::Builder"* %393, i32 %394) #13
  %426 = extractvalue { %"class.skvm::Builder"*, i32 } %425, 0
  %427 = extractvalue { %"class.skvm::Builder"*, i32 } %425, 1
  store %"class.skvm::Builder"* %426, %"class.skvm::Builder"** %421, align 8
  store i32 %427, i32* %423, align 8
  %428 = bitcast %"struct.skvm::Color"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %428) #13
  %429 = load i32, i32* %66, align 8
  call void @_ZN4skvm7Builder5blendE11SkBlendModeNS_5ColorES2_(%"struct.skvm::Color"* nonnull sret %20, %"class.skvm::Builder"* %426, i32 %429, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %13, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %15) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* nonnull align 8 %428, i64 64, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %428) #13
  br label %490

430:                                              ; preds = %386
  %431 = bitcast %"struct.skvm::Color"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %431) #13
  %432 = load i32, i32* %66, align 8
  %433 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 0
  %434 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %433, align 8
  %435 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 1
  call void @_ZN4skvm7Builder5blendE11SkBlendModeNS_5ColorES2_(%"struct.skvm::Color"* nonnull sret %21, %"class.skvm::Builder"* %434, i32 %432, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %13, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %15) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* nonnull align 8 %431, i64 64, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %431) #13
  %436 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %15, i64 0, i32 0, i32 0
  %437 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %436, align 8
  %438 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %15, i64 0, i32 0, i32 1
  %439 = load i32, i32* %438, align 8
  %440 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 0, i32 0
  %441 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %440, align 8
  %442 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 0, i32 1
  %443 = load i32, i32* %442, align 8
  %444 = bitcast %"struct.skvm::F32"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %444) #13
  %445 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %8, i64 0, i32 0
  store %"class.skvm::Builder"* %387, %"class.skvm::Builder"** %445, align 8
  %446 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %8, i64 0, i32 1
  store i32 %388, i32* %446, align 8
  %447 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder4lerpENS_3F32ES1_S1_(%"class.skvm::Builder"* %437, %"class.skvm::Builder"* %437, i32 %439, %"class.skvm::Builder"* %441, i32 %443, %"struct.skvm::F32"* nonnull byval(%"struct.skvm::F32") align 8 %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %444) #13
  %448 = extractvalue { %"class.skvm::Builder"*, i32 } %447, 0
  %449 = extractvalue { %"class.skvm::Builder"*, i32 } %447, 1
  store %"class.skvm::Builder"* %448, %"class.skvm::Builder"** %440, align 8
  store i32 %449, i32* %442, align 8
  %450 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %15, i64 0, i32 1, i32 0
  %451 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %450, align 8
  %452 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %15, i64 0, i32 1, i32 1
  %453 = load i32, i32* %452, align 8
  %454 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 1, i32 0
  %455 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %454, align 8
  %456 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 1, i32 1
  %457 = load i32, i32* %456, align 8
  %458 = bitcast %"struct.skvm::F32"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %458) #13
  %459 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %7, i64 0, i32 0
  store %"class.skvm::Builder"* %389, %"class.skvm::Builder"** %459, align 8
  %460 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %7, i64 0, i32 1
  store i32 %390, i32* %460, align 8
  %461 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder4lerpENS_3F32ES1_S1_(%"class.skvm::Builder"* %451, %"class.skvm::Builder"* %451, i32 %453, %"class.skvm::Builder"* %455, i32 %457, %"struct.skvm::F32"* nonnull byval(%"struct.skvm::F32") align 8 %7) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %458) #13
  %462 = extractvalue { %"class.skvm::Builder"*, i32 } %461, 0
  %463 = extractvalue { %"class.skvm::Builder"*, i32 } %461, 1
  store %"class.skvm::Builder"* %462, %"class.skvm::Builder"** %454, align 8
  store i32 %463, i32* %456, align 8
  %464 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %15, i64 0, i32 2, i32 0
  %465 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %464, align 8
  %466 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %15, i64 0, i32 2, i32 1
  %467 = load i32, i32* %466, align 8
  %468 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 2, i32 0
  %469 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %468, align 8
  %470 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 2, i32 1
  %471 = load i32, i32* %470, align 8
  %472 = bitcast %"struct.skvm::F32"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %472) #13
  %473 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %6, i64 0, i32 0
  store %"class.skvm::Builder"* %391, %"class.skvm::Builder"** %473, align 8
  %474 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %6, i64 0, i32 1
  store i32 %392, i32* %474, align 8
  %475 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder4lerpENS_3F32ES1_S1_(%"class.skvm::Builder"* %465, %"class.skvm::Builder"* %465, i32 %467, %"class.skvm::Builder"* %469, i32 %471, %"struct.skvm::F32"* nonnull byval(%"struct.skvm::F32") align 8 %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %472) #13
  %476 = extractvalue { %"class.skvm::Builder"*, i32 } %475, 0
  %477 = extractvalue { %"class.skvm::Builder"*, i32 } %475, 1
  store %"class.skvm::Builder"* %476, %"class.skvm::Builder"** %468, align 8
  store i32 %477, i32* %470, align 8
  %478 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %15, i64 0, i32 3, i32 0
  %479 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %478, align 8
  %480 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %15, i64 0, i32 3, i32 1
  %481 = load i32, i32* %480, align 8
  %482 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %433, align 8
  %483 = load i32, i32* %435, align 8
  %484 = bitcast %"struct.skvm::F32"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %484) #13
  %485 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %5, i64 0, i32 0
  store %"class.skvm::Builder"* %393, %"class.skvm::Builder"** %485, align 8
  %486 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %5, i64 0, i32 1
  store i32 %394, i32* %486, align 8
  %487 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder4lerpENS_3F32ES1_S1_(%"class.skvm::Builder"* %479, %"class.skvm::Builder"* %479, i32 %481, %"class.skvm::Builder"* %482, i32 %483, %"struct.skvm::F32"* nonnull byval(%"struct.skvm::F32") align 8 %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %484) #13
  %488 = extractvalue { %"class.skvm::Builder"*, i32 } %487, 0
  %489 = extractvalue { %"class.skvm::Builder"*, i32 } %487, 1
  store %"class.skvm::Builder"* %488, %"class.skvm::Builder"** %433, align 8
  store i32 %489, i32* %435, align 8
  br label %490

490:                                              ; preds = %430, %399
  %491 = load i32, i32* %184, align 4
  %492 = icmp eq i32 %491, 1
  br i1 %492, label %496, label %493

493:                                              ; preds = %490
  %494 = load i32, i32* %65, align 8
  %495 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %494) #13
  br i1 %495, label %496, label %502

496:                                              ; preds = %493, %490
  %497 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* nonnull %23, i32 1065353216) #13
  %498 = extractvalue { %"class.skvm::Builder"*, i32 } %497, 0
  %499 = extractvalue { %"class.skvm::Builder"*, i32 } %497, 1
  %500 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %498, %"class.skvm::Builder"** %500, align 8
  %501 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 1
  store i32 %499, i32* %501, align 8
  br label %519

502:                                              ; preds = %493
  %503 = load i32, i32* %184, align 4
  %504 = icmp eq i32 %503, 3
  br i1 %504, label %505, label %519

505:                                              ; preds = %502
  %506 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 0
  %507 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %506, align 8
  %508 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 1
  %509 = bitcast i32* %508 to i64*
  %510 = load i64, i64* %509, align 8
  %511 = bitcast %"struct.skvm::Color"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %511) #13, !noalias !12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %511, i8* nonnull align 8 %115, i64 48, i1 false) #13
  %512 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %507, %"class.skvm::Builder"** %512, align 8, !noalias !12
  %513 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 3, i32 1
  %514 = bitcast i32* %513 to i64*
  store i64 %510, i64* %514, align 8
  %515 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 0
  %516 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 1
  %517 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 2
  %518 = trunc i64 %510 to i32
  call void @_ZN4skvm7Builder8unpremulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"* %507, %"struct.skvm::F32"* nonnull %515, %"struct.skvm::F32"* %516, %"struct.skvm::F32"* %517, %"class.skvm::Builder"* %507, i32 %518) #13, !noalias !15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* nonnull align 8 %511, i64 64, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %511) #13, !noalias !12
  br label %519

519:                                              ; preds = %505, %502, %496
  br i1 %251, label %520, label %587

520:                                              ; preds = %519
  %521 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* nonnull %23, i32 -1275068416) #13
  %522 = extractvalue { %"class.skvm::Builder"*, i32 } %521, 0
  %523 = extractvalue { %"class.skvm::Builder"*, i32 } %521, 1
  %524 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* nonnull %23, i32 1065353217) #13
  %525 = extractvalue { %"class.skvm::Builder"*, i32 } %524, 0
  %526 = extractvalue { %"class.skvm::Builder"*, i32 } %524, 1
  %527 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 0, i32 0
  %528 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %527, align 8
  %529 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 0, i32 1
  %530 = load i32, i32* %529, align 8
  %531 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %528, %"class.skvm::Builder"* %528, i32 %530, %"class.skvm::Builder"* %525, i32 %526) #13
  %532 = extractvalue { %"class.skvm::Builder"*, i32 } %531, 0
  %533 = extractvalue { %"class.skvm::Builder"*, i32 } %531, 1
  %534 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %528, %"class.skvm::Builder"* %522, i32 %523, %"class.skvm::Builder"* %532, i32 %533) #13
  %535 = extractvalue { %"class.skvm::Builder"*, i32 } %534, 0
  %536 = extractvalue { %"class.skvm::Builder"*, i32 } %534, 1
  %537 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2eqENS_3F32ES1_(%"class.skvm::Builder"* %528, %"class.skvm::Builder"* %528, i32 %530, %"class.skvm::Builder"* %535, i32 %536) #13
  %538 = extractvalue { %"class.skvm::Builder"*, i32 } %537, 0
  %539 = extractvalue { %"class.skvm::Builder"*, i32 } %537, 1
  %540 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %527, align 8
  %541 = load i32, i32* %529, align 8
  call void @_ZN4skvm7Builder11assert_trueENS_3I32ES1_(%"class.skvm::Builder"* %538, %"class.skvm::Builder"* %538, i32 %539, %"class.skvm::Builder"* %540, i32 %541) #13
  %542 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 1, i32 0
  %543 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %542, align 8
  %544 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 1, i32 1
  %545 = load i32, i32* %544, align 8
  %546 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %543, %"class.skvm::Builder"* %543, i32 %545, %"class.skvm::Builder"* %525, i32 %526) #13
  %547 = extractvalue { %"class.skvm::Builder"*, i32 } %546, 0
  %548 = extractvalue { %"class.skvm::Builder"*, i32 } %546, 1
  %549 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %543, %"class.skvm::Builder"* %522, i32 %523, %"class.skvm::Builder"* %547, i32 %548) #13
  %550 = extractvalue { %"class.skvm::Builder"*, i32 } %549, 0
  %551 = extractvalue { %"class.skvm::Builder"*, i32 } %549, 1
  %552 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2eqENS_3F32ES1_(%"class.skvm::Builder"* %543, %"class.skvm::Builder"* %543, i32 %545, %"class.skvm::Builder"* %550, i32 %551) #13
  %553 = extractvalue { %"class.skvm::Builder"*, i32 } %552, 0
  %554 = extractvalue { %"class.skvm::Builder"*, i32 } %552, 1
  %555 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %542, align 8
  %556 = load i32, i32* %544, align 8
  call void @_ZN4skvm7Builder11assert_trueENS_3I32ES1_(%"class.skvm::Builder"* %553, %"class.skvm::Builder"* %553, i32 %554, %"class.skvm::Builder"* %555, i32 %556) #13
  %557 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 2, i32 0
  %558 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %557, align 8
  %559 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 2, i32 1
  %560 = load i32, i32* %559, align 8
  %561 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %558, %"class.skvm::Builder"* %558, i32 %560, %"class.skvm::Builder"* %525, i32 %526) #13
  %562 = extractvalue { %"class.skvm::Builder"*, i32 } %561, 0
  %563 = extractvalue { %"class.skvm::Builder"*, i32 } %561, 1
  %564 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %558, %"class.skvm::Builder"* %522, i32 %523, %"class.skvm::Builder"* %562, i32 %563) #13
  %565 = extractvalue { %"class.skvm::Builder"*, i32 } %564, 0
  %566 = extractvalue { %"class.skvm::Builder"*, i32 } %564, 1
  %567 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2eqENS_3F32ES1_(%"class.skvm::Builder"* %558, %"class.skvm::Builder"* %558, i32 %560, %"class.skvm::Builder"* %565, i32 %566) #13
  %568 = extractvalue { %"class.skvm::Builder"*, i32 } %567, 0
  %569 = extractvalue { %"class.skvm::Builder"*, i32 } %567, 1
  %570 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %557, align 8
  %571 = load i32, i32* %559, align 8
  call void @_ZN4skvm7Builder11assert_trueENS_3I32ES1_(%"class.skvm::Builder"* %568, %"class.skvm::Builder"* %568, i32 %569, %"class.skvm::Builder"* %570, i32 %571) #13
  %572 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 0
  %573 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %572, align 8
  %574 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 1
  %575 = load i32, i32* %574, align 8
  %576 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %573, %"class.skvm::Builder"* %573, i32 %575, %"class.skvm::Builder"* %525, i32 %526) #13
  %577 = extractvalue { %"class.skvm::Builder"*, i32 } %576, 0
  %578 = extractvalue { %"class.skvm::Builder"*, i32 } %576, 1
  %579 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %573, %"class.skvm::Builder"* %522, i32 %523, %"class.skvm::Builder"* %577, i32 %578) #13
  %580 = extractvalue { %"class.skvm::Builder"*, i32 } %579, 0
  %581 = extractvalue { %"class.skvm::Builder"*, i32 } %579, 1
  %582 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2eqENS_3F32ES1_(%"class.skvm::Builder"* %573, %"class.skvm::Builder"* %573, i32 %575, %"class.skvm::Builder"* %580, i32 %581) #13
  %583 = extractvalue { %"class.skvm::Builder"*, i32 } %582, 0
  %584 = extractvalue { %"class.skvm::Builder"*, i32 } %582, 1
  %585 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %572, align 8
  %586 = load i32, i32* %574, align 8
  call void @_ZN4skvm7Builder11assert_trueENS_3I32ES1_(%"class.skvm::Builder"* %583, %"class.skvm::Builder"* %583, i32 %584, %"class.skvm::Builder"* %585, i32 %586) #13
  br label %594

587:                                              ; preds = %519
  %588 = load i32, i32* %65, align 8
  switch i32 %588, label %589 [
    i32 0, label %590
    i32 1, label %590
    i32 2, label %590
    i32 3, label %590
    i32 4, label %590
    i32 5, label %590
    i32 6, label %590
    i32 7, label %590
    i32 9, label %590
    i32 8, label %590
    i32 10, label %590
    i32 11, label %590
    i32 12, label %590
    i32 15, label %590
    i32 18, label %590
    i32 16, label %590
    i32 19, label %590
    i32 20, label %590
    i32 13, label %594
    i32 14, label %594
    i32 17, label %594
  ]

589:                                              ; preds = %587
  call void @llvm.trap() #13
  unreachable

590:                                              ; preds = %587, %587, %587, %587, %587, %587, %587, %587, %587, %587, %587, %587, %587, %587, %587, %587, %587, %587
  %591 = bitcast %"struct.skvm::Color"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %591) #13
  %592 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 0
  %593 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %592, align 8
  call void @_ZN4skvm7Builder7clamp01ENS_5ColorE(%"struct.skvm::Color"* nonnull sret %22, %"class.skvm::Builder"* %593, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %13) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* nonnull align 8 %591, i64 64, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %591) #13
  br label %594

594:                                              ; preds = %520, %587, %587, %587, %590
  %595 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %13, i64 0, i32 3, i32 0
  %596 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %595, align 8
  call void @_ZN4skvm7Builder5storeENS_11PixelFormatENS_3PtrENS_5ColorE(%"class.skvm::Builder"* %596, %"struct.skvm::PixelFormat"* nonnull byval(%"struct.skvm::PixelFormat") align 8 %14, i32 %106, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %13) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %254) #13
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %252) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %115) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %108) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #13
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %100)
  %597 = load %class.SkColorSpace*, %class.SkColorSpace** %64, align 8
  %598 = icmp eq %class.SkColorSpace* %597, null
  br i1 %598, label %605, label %599

599:                                              ; preds = %594
  %600 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %597, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %601 = atomicrmw add i32* %600, i32 -1 acq_rel
  %602 = icmp eq i32 %601, 1
  br i1 %602, label %603, label %605

603:                                              ; preds = %599
  %604 = bitcast %class.SkColorSpace* %597 to i8*
  call void @_ZdlPv(i8* %604) #14
  br label %605

605:                                              ; preds = %603, %599, %594
  %606 = load %class.SkShader*, %class.SkShader** %63, align 8
  %607 = icmp eq %class.SkShader* %606, null
  br i1 %607, label %618, label %608

608:                                              ; preds = %605
  %609 = getelementptr inbounds %class.SkShader, %class.SkShader* %606, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %610 = atomicrmw add i32* %609, i32 -1 acq_rel
  %611 = icmp eq i32 %610, 1
  br i1 %611, label %612, label %618

612:                                              ; preds = %608
  %613 = bitcast %class.SkShader* %606 to %class.SkRefCntBase*
  %614 = bitcast %class.SkShader* %606 to void (%class.SkRefCntBase*)***
  %615 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %614, align 8
  %616 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %615, i64 2
  %617 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %616, align 8
  call void %617(%class.SkRefCntBase* nonnull %613) #13
  br label %618

618:                                              ; preds = %612, %608, %605
  %619 = load %class.SkShader*, %class.SkShader** %62, align 8
  %620 = icmp eq %class.SkShader* %619, null
  br i1 %620, label %631, label %621

621:                                              ; preds = %618
  %622 = getelementptr inbounds %class.SkShader, %class.SkShader* %619, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %623 = atomicrmw add i32* %622, i32 -1 acq_rel
  %624 = icmp eq i32 %623, 1
  br i1 %624, label %625, label %631

625:                                              ; preds = %621
  %626 = bitcast %class.SkShader* %619 to %class.SkRefCntBase*
  %627 = bitcast %class.SkShader* %619 to void (%class.SkRefCntBase*)***
  %628 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %627, align 8
  %629 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %628, i64 2
  %630 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %629, align 8
  call void %630(%class.SkRefCntBase* nonnull %626) #13
  br label %631

631:                                              ; preds = %618, %621, %625
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %61) #13
  %632 = bitcast %"class.skvm::Program"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %632) #13
  %633 = getelementptr inbounds %"class.skvm::Program", %"class.skvm::Program"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.skvm::Program::Impl"* inttoptr (i64 -6148914691236517206 to %"struct.skvm::Program::Impl"*), %"struct.skvm::Program::Impl"** %633, align 8
  %634 = bitcast %class.SkString* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %634) #13
  %635 = zext i8 %34 to i32
  %636 = zext i8 %36 to i32
  %637 = zext i8 %38 to i32
  %638 = and i32 %2, 255
  call void (%class.SkString*, i8*, ...) @_Z14SkStringPrintfPKcz(%class.SkString* nonnull sret %26, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i64 %28, i64 %30, i64 %32, i32 %635, i32 %636, i32 %637, i32 %638) #13
  %639 = getelementptr inbounds %class.SkString, %class.SkString* %26, i64 0, i32 0, i32 0
  %640 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %639, align 8
  %641 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %640, i64 0, i32 2
  call void @_ZNK4skvm7Builder4doneEPKcb(%"class.skvm::Program"* nonnull sret %25, %"class.skvm::Builder"* nonnull %23, i8* %641, i1 zeroext true) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %634) #13
  call void @_ZN4skvm7ProgramC1EOS0_(%"class.skvm::Program"* %0, %"class.skvm::Program"* nonnull dereferenceable(8) %25) #13
  call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %632) #13
  %642 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %23, i64 0, i32 2, i32 0, i32 0
  %643 = load i32*, i32** %642, align 8
  %644 = icmp eq i32* %643, null
  br i1 %644, label %650, label %645

645:                                              ; preds = %631
  %646 = ptrtoint i32* %643 to i64
  %647 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %23, i64 0, i32 2, i32 0, i32 1
  %648 = bitcast i32** %647 to i64*
  store i64 %646, i64* %648, align 8
  %649 = bitcast i32* %643 to i8*
  call void @_ZdlPv(i8* %649) #14
  br label %650

650:                                              ; preds = %645, %631
  %651 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %23, i64 0, i32 1, i32 0, i32 0
  %652 = load %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"** %651, align 8
  %653 = icmp eq %"struct.skvm::Instruction"* %652, null
  br i1 %653, label %659, label %654

654:                                              ; preds = %650
  %655 = ptrtoint %"struct.skvm::Instruction"* %652 to i64
  %656 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %23, i64 0, i32 1, i32 0, i32 1
  %657 = bitcast %"struct.skvm::Instruction"** %656 to i64*
  store i64 %655, i64* %657, align 8
  %658 = bitcast %"struct.skvm::Instruction"* %652 to i8*
  call void @_ZdlPv(i8* %658) #14
  br label %659

659:                                              ; preds = %654, %650
  %660 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %23, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %661 = load %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"** %660, align 8
  store %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"** %660, align 8
  %662 = icmp eq %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* %661, null
  br i1 %662, label %665, label %663

663:                                              ; preds = %659
  %664 = bitcast %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* %661 to i8*
  call void @_ZdaPv(i8* %664) #14
  br label %665

665:                                              ; preds = %659, %663
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %60) #13
  br label %666

666:                                              ; preds = %3, %665
  ret void
}

declare void @_ZN4skvm7ProgramC1Ev(%"class.skvm::Program"*) unnamed_addr #5

declare void @_ZN4skvm7BuilderC1Ev(%"class.skvm::Builder"*) unnamed_addr #5

declare void @_ZNK4skvm7Builder4doneEPKcb(%"class.skvm::Program"* sret, %"class.skvm::Builder"*, i8*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #13
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #15
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #15
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #14
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #13
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #13
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #14
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

declare i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare i32 @_Z24SkColorTypeBytesPerPixel11SkColorType(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_112device_coordEPN4skvm7BuilderEPNS0_8UniformsE(%"struct.skvm::Coord"* noalias nocapture sret, %"class.skvm::Builder"*, %"struct.skvm::Uniforms"* nocapture readonly) unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %2, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %5, i32 0) #13
  %7 = extractvalue { %"class.skvm::Builder"*, i32 } %6, 0
  %8 = extractvalue { %"class.skvm::Builder"*, i32 } %6, 1
  %9 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5indexEv(%"class.skvm::Builder"* %1) #13
  %10 = extractvalue { %"class.skvm::Builder"*, i32 } %9, 0
  %11 = extractvalue { %"class.skvm::Builder"*, i32 } %9, 1
  %12 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3I32ES1_(%"class.skvm::Builder"* %7, %"class.skvm::Builder"* %7, i32 %8, %"class.skvm::Builder"* %10, i32 %11) #13
  %13 = extractvalue { %"class.skvm::Builder"*, i32 } %12, 0
  %14 = extractvalue { %"class.skvm::Builder"*, i32 } %12, 1
  %15 = load i32, i32* %4, align 8
  %16 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %15, i32 4) #13
  %17 = extractvalue { %"class.skvm::Builder"*, i32 } %16, 0
  %18 = extractvalue { %"class.skvm::Builder"*, i32 } %16, 1
  %19 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6to_F32ENS_3I32E(%"class.skvm::Builder"* %13, %"class.skvm::Builder"* %13, i32 %14) #13
  %20 = extractvalue { %"class.skvm::Builder"*, i32 } %19, 0
  %21 = extractvalue { %"class.skvm::Builder"*, i32 } %19, 1
  %22 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %20, i32 1056964608) #13
  %23 = extractvalue { %"class.skvm::Builder"*, i32 } %22, 0
  %24 = extractvalue { %"class.skvm::Builder"*, i32 } %22, 1
  %25 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %20, %"class.skvm::Builder"* %20, i32 %21, %"class.skvm::Builder"* %23, i32 %24) #13
  %26 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %0, i64 0, i32 0, i32 0
  %27 = extractvalue { %"class.skvm::Builder"*, i32 } %25, 0
  store %"class.skvm::Builder"* %27, %"class.skvm::Builder"** %26, align 8
  %28 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %0, i64 0, i32 0, i32 1
  %29 = extractvalue { %"class.skvm::Builder"*, i32 } %25, 1
  store i32 %29, i32* %28, align 8
  %30 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6to_F32ENS_3I32E(%"class.skvm::Builder"* %17, %"class.skvm::Builder"* %17, i32 %18) #13
  %31 = extractvalue { %"class.skvm::Builder"*, i32 } %30, 0
  %32 = extractvalue { %"class.skvm::Builder"*, i32 } %30, 1
  %33 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %31, i32 1056964608) #13
  %34 = extractvalue { %"class.skvm::Builder"*, i32 } %33, 0
  %35 = extractvalue { %"class.skvm::Builder"*, i32 } %33, 1
  %36 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %31, %"class.skvm::Builder"* %31, i32 %32, %"class.skvm::Builder"* %34, i32 %35) #13
  %37 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %0, i64 0, i32 1, i32 0
  %38 = extractvalue { %"class.skvm::Builder"*, i32 } %36, 0
  store %"class.skvm::Builder"* %38, %"class.skvm::Builder"** %37, align 8
  %39 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %0, i64 0, i32 1, i32 1
  %40 = extractvalue { %"class.skvm::Builder"*, i32 } %36, 1
  store i32 %40, i32* %39, align 8
  ret void
}

declare void @_ZN4skvm7Builder12uniformColorE8SkRGBA4fIL11SkAlphaType3EEPNS_8UniformsE(%"struct.skvm::Color"* sret, %"class.skvm::Builder"*, <2 x float>, <2 x float>, %"struct.skvm::Uniforms"*) local_unnamed_addr #5

declare void @_ZNK12SkShaderBase7programEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* sret, %class.SkShaderBase*, %"class.skvm::Builder"*, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider* dereferenceable(112), %class.SkMatrix*, %class.SkColorInfo* dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5load8ENS_3PtrE(%"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare void @_ZN4skvm26SkColorType_to_PixelFormatE11SkColorType(%"struct.skvm::PixelFormat"* sret, i32) local_unnamed_addr #5

declare void @_ZN4skvm7Builder4loadENS_11PixelFormatENS_3PtrE(%"struct.skvm::Color"* sret, %"class.skvm::Builder"*, %"struct.skvm::PixelFormat"* byval(%"struct.skvm::PixelFormat") align 8, i32) local_unnamed_addr #5

declare zeroext i1 @_Z34SkBlendMode_ShouldPreScaleCoverage11SkBlendModeb(i32, i1 zeroext) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"*, i32, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5indexEv(%"class.skvm::Builder"*) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3I32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6to_F32ENS_3I32E(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder10from_unormEiNS_3I32E(%"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32) local_unnamed_addr #5

declare void @_ZN4skvm7Builder6premulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6selectENS_3I32ES1_S1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32, %"struct.skvm::I32"* byval(%"struct.skvm::I32") align 8) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2ltENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare void @_ZN4skvm7Builder5blendE11SkBlendModeNS_5ColorES2_(%"struct.skvm::Color"* sret, %"class.skvm::Builder"*, i32, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder4lerpENS_3F32ES1_S1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32, %"struct.skvm::F32"* byval(%"struct.skvm::F32") align 8) local_unnamed_addr #5

declare void @_ZN4skvm7Builder8unpremulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare void @_ZN4skvm7Builder11assert_trueENS_3I32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2eqENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4skvm7Builder7clamp01ENS_5ColorE(%"struct.skvm::Color"* noalias sret, %"class.skvm::Builder"*, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %4, align 8
  %6 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %2, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %1, i32 0) #13
  %9 = extractvalue { %"class.skvm::Builder"*, i32 } %8, 0
  %10 = extractvalue { %"class.skvm::Builder"*, i32 } %8, 1
  %11 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %1, i32 1065353216) #13
  %12 = extractvalue { %"class.skvm::Builder"*, i32 } %11, 0
  %13 = extractvalue { %"class.skvm::Builder"*, i32 } %11, 1
  %14 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %1, %"class.skvm::Builder"* %5, i32 %7, %"class.skvm::Builder"* %12, i32 %13) #13
  %15 = extractvalue { %"class.skvm::Builder"*, i32 } %14, 0
  %16 = extractvalue { %"class.skvm::Builder"*, i32 } %14, 1
  %17 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %1, %"class.skvm::Builder"* %9, i32 %10, %"class.skvm::Builder"* %15, i32 %16) #13
  %18 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 0
  %19 = extractvalue { %"class.skvm::Builder"*, i32 } %17, 0
  store %"class.skvm::Builder"* %19, %"class.skvm::Builder"** %18, align 8
  %20 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 1
  %21 = extractvalue { %"class.skvm::Builder"*, i32 } %17, 1
  store i32 %21, i32* %20, align 8
  %22 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %2, i64 0, i32 1, i32 0
  %23 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %22, align 8
  %24 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %2, i64 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %1, i32 0) #13
  %27 = extractvalue { %"class.skvm::Builder"*, i32 } %26, 0
  %28 = extractvalue { %"class.skvm::Builder"*, i32 } %26, 1
  %29 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %1, i32 1065353216) #13
  %30 = extractvalue { %"class.skvm::Builder"*, i32 } %29, 0
  %31 = extractvalue { %"class.skvm::Builder"*, i32 } %29, 1
  %32 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %1, %"class.skvm::Builder"* %23, i32 %25, %"class.skvm::Builder"* %30, i32 %31) #13
  %33 = extractvalue { %"class.skvm::Builder"*, i32 } %32, 0
  %34 = extractvalue { %"class.skvm::Builder"*, i32 } %32, 1
  %35 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %1, %"class.skvm::Builder"* %27, i32 %28, %"class.skvm::Builder"* %33, i32 %34) #13
  %36 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 0
  %37 = extractvalue { %"class.skvm::Builder"*, i32 } %35, 0
  store %"class.skvm::Builder"* %37, %"class.skvm::Builder"** %36, align 8
  %38 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 1
  %39 = extractvalue { %"class.skvm::Builder"*, i32 } %35, 1
  store i32 %39, i32* %38, align 8
  %40 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %2, i64 0, i32 2, i32 0
  %41 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %40, align 8
  %42 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %2, i64 0, i32 2, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %1, i32 0) #13
  %45 = extractvalue { %"class.skvm::Builder"*, i32 } %44, 0
  %46 = extractvalue { %"class.skvm::Builder"*, i32 } %44, 1
  %47 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %1, i32 1065353216) #13
  %48 = extractvalue { %"class.skvm::Builder"*, i32 } %47, 0
  %49 = extractvalue { %"class.skvm::Builder"*, i32 } %47, 1
  %50 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %1, %"class.skvm::Builder"* %41, i32 %43, %"class.skvm::Builder"* %48, i32 %49) #13
  %51 = extractvalue { %"class.skvm::Builder"*, i32 } %50, 0
  %52 = extractvalue { %"class.skvm::Builder"*, i32 } %50, 1
  %53 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %1, %"class.skvm::Builder"* %45, i32 %46, %"class.skvm::Builder"* %51, i32 %52) #13
  %54 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 0
  %55 = extractvalue { %"class.skvm::Builder"*, i32 } %53, 0
  store %"class.skvm::Builder"* %55, %"class.skvm::Builder"** %54, align 8
  %56 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 1
  %57 = extractvalue { %"class.skvm::Builder"*, i32 } %53, 1
  store i32 %57, i32* %56, align 8
  %58 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %2, i64 0, i32 3, i32 0
  %59 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %58, align 8
  %60 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %2, i64 0, i32 3, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %1, i32 0) #13
  %63 = extractvalue { %"class.skvm::Builder"*, i32 } %62, 0
  %64 = extractvalue { %"class.skvm::Builder"*, i32 } %62, 1
  %65 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %1, i32 1065353216) #13
  %66 = extractvalue { %"class.skvm::Builder"*, i32 } %65, 0
  %67 = extractvalue { %"class.skvm::Builder"*, i32 } %65, 1
  %68 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %1, %"class.skvm::Builder"* %59, i32 %61, %"class.skvm::Builder"* %66, i32 %67) #13
  %69 = extractvalue { %"class.skvm::Builder"*, i32 } %68, 0
  %70 = extractvalue { %"class.skvm::Builder"*, i32 } %68, 1
  %71 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %1, %"class.skvm::Builder"* %63, i32 %64, %"class.skvm::Builder"* %69, i32 %70) #13
  %72 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 0
  %73 = extractvalue { %"class.skvm::Builder"*, i32 } %71, 0
  store %"class.skvm::Builder"* %73, %"class.skvm::Builder"** %72, align 8
  %74 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 1
  %75 = extractvalue { %"class.skvm::Builder"*, i32 } %71, 1
  store i32 %75, i32* %74, align 8
  ret void
}

declare void @_ZN4skvm7Builder5storeENS_11PixelFormatENS_3PtrENS_5ColorE(%"class.skvm::Builder"*, %"struct.skvm::PixelFormat"* byval(%"struct.skvm::PixelFormat") align 8, i32, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8) local_unnamed_addr #5

declare void @_Z14SkStringPrintfPKcz(%class.SkString* sret, i8*, ...) local_unnamed_addr #5

declare void @_ZNK4skvm7Program4evalEiPPv(%"class.skvm::Program"*, i32, i8**) local_unnamed_addr #5

declare i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo*, i32, i32, i64) local_unnamed_addr #5

declare void @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkBlitter*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #5

declare i8* @_ZNK6SkMask7getAddrEii(%struct.SkMask*, i32, i32) local_unnamed_addr #5

declare i64 @_ZNK6SkMask16computeImageSizeEv(%struct.SkMask*) local_unnamed_addr #5

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #5

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_17BlitterC2ERK8SkPixmapRK7SkPaintPS2_8SkIPointRK16SkMatrixProvider5sk_spI8SkShaderEPb(%"class.(anonymous namespace)::Blitter"*, %class.SkPixmap* nocapture readonly dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.SkPixmap* readonly, i64, %class.SkMatrixProvider* dereferenceable(112), %class.sk_sp.8* nocapture, i8*) unnamed_addr #0 align 2 {
  %9 = alloca %class.sk_sp.8, align 8
  %10 = alloca %class.sk_sp.10, align 8
  %11 = alloca { i8*, i64 }, align 8
  %12 = alloca %class.sk_sp.8, align 8
  %13 = alloca %class.sk_sp.8, align 8
  %14 = alloca <2 x i64>, align 16
  %15 = alloca %struct.SkColorSpaceXformSteps, align 4
  %16 = alloca %"struct.skvm::Uniforms"*, align 8
  %17 = alloca %class.SkArenaAlloc*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca %class.anon.59, align 8
  %24 = alloca %class.SkPaint, align 8
  %25 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 0, i32 1
  %27 = bitcast %class.SkAutoMalloc* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_17BlitterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %28 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 1
  %29 = bitcast %class.SkPixmap* %28 to i8*
  %30 = bitcast %class.SkPixmap* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false) #13
  %31 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8
  %34 = icmp eq %class.SkColorSpace* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %8
  %36 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 monotonic
  br label %38

38:                                               ; preds = %8, %35
  store %class.SkColorSpace* %33, %class.SkColorSpace** %31, align 8
  %39 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %40 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 1
  %41 = bitcast i32* %40 to i64*
  %42 = bitcast i32* %39 to i64*
  %43 = load i64, i64* %41, align 8
  store i64 %43, i64* %42, align 8
  %44 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 1, i32 2, i32 1
  %45 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1
  %46 = bitcast %struct.SkISize* %45 to i64*
  %47 = bitcast %struct.SkISize* %44 to i64*
  %48 = load i64, i64* %46, align 8
  store i64 %48, i64* %47, align 8
  %49 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2
  %50 = icmp eq %class.SkPixmap* %3, null
  %51 = bitcast %class.SkPixmap* %49 to i8*
  br i1 %50, label %72, label %52

52:                                               ; preds = %38
  %53 = bitcast %class.SkPixmap* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* nonnull align 8 %53, i64 16, i1 false) #13
  %54 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %56 = load %class.SkColorSpace*, %class.SkColorSpace** %55, align 8
  %57 = icmp eq %class.SkColorSpace* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 1 monotonic
  br label %61

61:                                               ; preds = %52, %58
  store %class.SkColorSpace* %56, %class.SkColorSpace** %54, align 8
  %62 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %63 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 1
  %64 = bitcast i32* %63 to i64*
  %65 = bitcast i32* %62 to i64*
  %66 = load i64, i64* %64, align 8
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 2, i32 2, i32 1
  %68 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 1
  %69 = bitcast %struct.SkISize* %68 to i64*
  %70 = bitcast %struct.SkISize* %67 to i64*
  %71 = load i64, i64* %69, align 8
  store i64 %71, i64* %70, align 8
  br label %73

72:                                               ; preds = %38
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 40, i1 false) #13
  br label %73

73:                                               ; preds = %72, %61
  %74 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 3
  %75 = bitcast %struct.SkIPoint* %74 to i64*
  store i64 %4, i64* %75, align 8
  %76 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 4
  %77 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %76, i64 0, i32 0, i32 0
  store i32 0, i32* %77, align 8
  %78 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 4, i32 1
  %79 = tail call i8* @_Znwm(i64 8) #14
  %80 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %81 = bitcast %"class.std::__1::vector"* %78 to i8**
  store i8* %79, i8** %81, align 8
  %82 = getelementptr inbounds i8, i8* %79, i64 8
  %83 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %84 = bitcast i32** %83 to i8**
  store i8* %82, i8** %84, align 8
  %85 = bitcast i32** %80 to i64*
  %86 = ptrtoint i8* %79 to i64
  %87 = getelementptr i8, i8* %79, i64 4
  %88 = ptrtoint i8* %87 to i64
  %89 = sub i64 4, %86
  %90 = add i64 %89, %88
  %91 = and i64 %90, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %79, i8 0, i64 %91, i1 false) #13
  %92 = ptrtoint i8* %82 to i64
  store i64 %92, i64* %85, align 8
  %93 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 5
  tail call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %93, i8* null, i64 0, i64 16) #13
  %94 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %24, %class.SkPaint* dereferenceable(72) %2) #13
  %95 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %6, i64 0, i32 0
  %96 = bitcast %class.sk_sp.8* %6 to i64*
  %97 = load i64, i64* %96, align 8
  store %class.SkShader* null, %class.SkShader** %95, align 8
  %98 = bitcast %class.sk_sp.8* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98)
  br i1 %50, label %155, label %99

99:                                               ; preds = %73
  %100 = bitcast { i8*, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100)
  %101 = call i8* @_Znwm(i64 96) #14, !noalias !18
  %102 = bitcast %class.SkPixmap* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %100, i8* nonnull align 8 %102, i64 16, i1 false) #13, !noalias !18
  %103 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %104 = load %class.SkColorSpace*, %class.SkColorSpace** %103, align 8, !noalias !18
  %105 = icmp eq %class.SkColorSpace* %104, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 1 monotonic, !noalias !18
  br label %109

109:                                              ; preds = %106, %99
  %110 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 1
  %111 = bitcast i32* %110 to i64*
  %112 = load i64, i64* %111, align 8, !noalias !18
  %113 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 1
  %114 = bitcast %struct.SkISize* %113 to i64*
  %115 = load i64, i64* %114, align 8, !noalias !18
  %116 = bitcast i8* %101 to %class.SkShaderBase*
  call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %116, %class.SkMatrix* null) #13, !noalias !18
  %117 = bitcast i8* %101 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN12_GLOBAL__N_112SpriteShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8, !noalias !18
  %118 = getelementptr inbounds i8, i8* %101, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 8 %100, i64 16, i1 false) #13, !noalias !18
  %119 = getelementptr inbounds i8, i8* %101, i64 72
  %120 = bitcast i8* %119 to %class.SkColorSpace**
  br i1 %105, label %133, label %121

121:                                              ; preds = %109
  %122 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw add i32* %122, i32 1 monotonic, !noalias !18
  store %class.SkColorSpace* %104, %class.SkColorSpace** %120, align 8, !noalias !18
  %124 = getelementptr inbounds i8, i8* %101, i64 80
  %125 = bitcast i8* %124 to i64*
  store i64 %112, i64* %125, align 8, !noalias !18
  %126 = getelementptr inbounds i8, i8* %101, i64 88
  %127 = bitcast i8* %126 to i64*
  store i64 %115, i64* %127, align 8, !noalias !18
  %128 = ptrtoint i8* %101 to i64
  %129 = atomicrmw add i32* %122, i32 -1 acq_rel, !noalias !18
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %131, label %139

131:                                              ; preds = %121
  %132 = bitcast %class.SkColorSpace* %104 to i8*
  call void @_ZdlPv(i8* %132) #14, !noalias !18
  br label %139

133:                                              ; preds = %109
  store %class.SkColorSpace* null, %class.SkColorSpace** %120, align 8, !noalias !18
  %134 = getelementptr inbounds i8, i8* %101, i64 80
  %135 = bitcast i8* %134 to i64*
  store i64 %112, i64* %135, align 8, !noalias !18
  %136 = getelementptr inbounds i8, i8* %101, i64 88
  %137 = bitcast i8* %136 to i64*
  store i64 %115, i64* %137, align 8, !noalias !18
  %138 = ptrtoint i8* %101 to i64
  br label %139

139:                                              ; preds = %133, %131, %121
  %140 = phi i64 [ %138, %133 ], [ %128, %131 ], [ %128, %121 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100)
  %141 = bitcast %class.sk_sp.8* %12 to i64*
  store i64 %140, i64* %141, align 8, !noalias !23
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %24, %class.sk_sp.8* nonnull %12) #13, !noalias !23
  %142 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %12, i64 0, i32 0
  %143 = load %class.SkShader*, %class.SkShader** %142, align 8, !noalias !23
  %144 = icmp eq %class.SkShader* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %class.SkShader, %class.SkShader* %143, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel, !noalias !23
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %class.SkShader* %143 to %class.SkRefCntBase*
  %151 = bitcast %class.SkShader* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8, !noalias !23
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8, !noalias !23
  call void %154(%class.SkRefCntBase* nonnull %150) #13, !noalias !23
  br label %155

155:                                              ; preds = %149, %145, %139, %73
  %156 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %24, i64 0, i32 3, i32 0
  %157 = load %class.SkColorFilter*, %class.SkColorFilter** %156, align 8, !noalias !23
  %158 = icmp eq %class.SkColorFilter* %157, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %155
  %160 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8, !noalias !23
  call void @_ZN11SkPaintPriv17RemoveColorFilterEP7SkPaintP12SkColorSpace(%class.SkPaint* nonnull %24, %class.SkColorSpace* %160) #13, !noalias !23
  br label %161

161:                                              ; preds = %159, %155
  %162 = bitcast %class.sk_sp.8* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #13, !noalias !23
  %163 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %13, i64 0, i32 0
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %163, align 8, !noalias !23
  call void @_ZNK7SkPaint9refShaderEv(%class.sk_sp.8* nonnull sret %13, %class.SkPaint* nonnull %24) #13, !noalias !23
  %164 = load %class.SkShader*, %class.SkShader** %163, align 8, !noalias !23
  %165 = icmp eq %class.SkShader* %164, null
  %166 = ptrtoint %class.SkShader* %164 to i64
  br i1 %165, label %167, label %192

167:                                              ; preds = %161
  %168 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %24, i64 0, i32 5, i32 2
  %169 = bitcast float* %168 to <2 x float>*
  %170 = load <2 x float>, <2 x float>* %169, align 8, !noalias !23
  %171 = extractelement <2 x float> %170, i32 1
  %172 = fcmp oeq float %171, 1.000000e+00
  %173 = zext i1 %172 to i8
  %174 = call i8* @_Znwm(i64 56) #14, !noalias !24
  %175 = bitcast i8* %174 to %class.SkShaderBase*
  call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %175, %class.SkMatrix* null) #13, !noalias !24
  %176 = bitcast i8* %174 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN12_GLOBAL__N_116PaintColorShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %176, align 8, !noalias !24
  %177 = getelementptr inbounds i8, i8* %174, i64 52
  store i8 %173, i8* %177, align 4, !noalias !24
  %178 = ptrtoint i8* %174 to i64
  %179 = load %class.SkShader*, %class.SkShader** %163, align 8, !noalias !23
  %180 = bitcast %class.sk_sp.8* %13 to i64*
  store i64 %178, i64* %180, align 8, !noalias !23
  %181 = icmp eq %class.SkShader* %179, null
  br i1 %181, label %250, label %182

182:                                              ; preds = %167
  %183 = getelementptr inbounds %class.SkShader, %class.SkShader* %179, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = atomicrmw add i32* %183, i32 -1 acq_rel, !noalias !23
  %185 = icmp eq i32 %184, 1
  br i1 %185, label %186, label %250

186:                                              ; preds = %182
  %187 = bitcast %class.SkShader* %179 to %class.SkRefCntBase*
  %188 = bitcast %class.SkShader* %179 to void (%class.SkRefCntBase*)***
  %189 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %188, align 8, !noalias !23
  %190 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %189, i64 2
  %191 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %190, align 8, !noalias !23
  call void %191(%class.SkRefCntBase* nonnull %187) #13, !noalias !23
  br label %250

192:                                              ; preds = %161
  %193 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %24, i64 0, i32 5, i32 3
  %194 = load float, float* %193, align 4, !noalias !23
  %195 = fcmp olt float %194, 1.000000e+00
  br i1 %195, label %196, label %250

196:                                              ; preds = %192
  %197 = call i8* @_Znwm(i64 16) #14, !noalias !27
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %197, i8 0, i64 16, i1 false) #13, !noalias !27
  %198 = getelementptr inbounds i8, i8* %197, i64 8
  %199 = bitcast i8* %198 to i32*
  store i32 1, i32* %199, align 4, !noalias !27
  %200 = bitcast i8* %197 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_115NoopColorFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %200, align 8, !noalias !27
  %201 = ptrtoint i8* %197 to i64
  %202 = bitcast %class.sk_sp.8* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #13, !noalias !23
  %203 = bitcast %class.sk_sp.10* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #13, !noalias !23
  %204 = call i8* @_Znwm(i64 80) #14, !noalias !30
  %205 = bitcast i8* %204 to %class.SkColorFilterShader*
  %206 = bitcast %class.sk_sp.8* %13 to i64*
  store %class.SkShader* null, %class.SkShader** %163, align 8, !noalias !30
  %207 = bitcast %class.sk_sp.8* %9 to i64*
  store i64 %166, i64* %207, align 8, !noalias !30
  %208 = bitcast %class.sk_sp.10* %10 to i64*
  store i64 %201, i64* %208, align 8, !noalias !30
  call void @_ZN19SkColorFilterShaderC1E5sk_spI8SkShaderEfS0_I13SkColorFilterE(%class.SkColorFilterShader* nonnull %205, %class.sk_sp.8* nonnull %9, float %194, %class.sk_sp.10* nonnull %10) #13, !noalias !30
  %209 = ptrtoint i8* %204 to i64
  %210 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %10, i64 0, i32 0
  %211 = load %class.SkColorFilter*, %class.SkColorFilter** %210, align 8, !noalias !30
  %212 = icmp eq %class.SkColorFilter* %211, null
  br i1 %212, label %223, label %213

213:                                              ; preds = %196
  %214 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %211, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = atomicrmw add i32* %214, i32 -1 acq_rel, !noalias !30
  %216 = icmp eq i32 %215, 1
  br i1 %216, label %217, label %223

217:                                              ; preds = %213
  %218 = bitcast %class.SkColorFilter* %211 to %class.SkRefCntBase*
  %219 = bitcast %class.SkColorFilter* %211 to void (%class.SkRefCntBase*)***
  %220 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %219, align 8, !noalias !30
  %221 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %220, i64 2
  %222 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %221, align 8, !noalias !30
  call void %222(%class.SkRefCntBase* nonnull %218) #13, !noalias !30
  br label %223

223:                                              ; preds = %217, %213, %196
  %224 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %9, i64 0, i32 0
  %225 = load %class.SkShader*, %class.SkShader** %224, align 8, !noalias !30
  %226 = icmp eq %class.SkShader* %225, null
  br i1 %226, label %237, label %227

227:                                              ; preds = %223
  %228 = getelementptr inbounds %class.SkShader, %class.SkShader* %225, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = atomicrmw add i32* %228, i32 -1 acq_rel, !noalias !30
  %230 = icmp eq i32 %229, 1
  br i1 %230, label %231, label %237

231:                                              ; preds = %227
  %232 = bitcast %class.SkShader* %225 to %class.SkRefCntBase*
  %233 = bitcast %class.SkShader* %225 to void (%class.SkRefCntBase*)***
  %234 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %233, align 8, !noalias !30
  %235 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %234, i64 2
  %236 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %235, align 8, !noalias !30
  call void %236(%class.SkRefCntBase* nonnull %232) #13, !noalias !30
  br label %237

237:                                              ; preds = %231, %227, %223
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #13, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #13, !noalias !23
  %238 = load %class.SkShader*, %class.SkShader** %163, align 8, !noalias !23
  store i64 %209, i64* %206, align 8, !noalias !23
  %239 = icmp eq %class.SkShader* %238, null
  br i1 %239, label %250, label %240

240:                                              ; preds = %237
  %241 = getelementptr inbounds %class.SkShader, %class.SkShader* %238, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = atomicrmw add i32* %241, i32 -1 acq_rel, !noalias !23
  %243 = icmp eq i32 %242, 1
  br i1 %243, label %244, label %250

244:                                              ; preds = %240
  %245 = bitcast %class.SkShader* %238 to %class.SkRefCntBase*
  %246 = bitcast %class.SkShader* %238 to void (%class.SkRefCntBase*)***
  %247 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %246, align 8, !noalias !23
  %248 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %247, i64 2
  %249 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %248, align 8, !noalias !23
  call void %249(%class.SkRefCntBase* nonnull %245) #13, !noalias !23
  br label %250

250:                                              ; preds = %244, %240, %237, %192, %186, %182, %167
  %251 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %24, i64 0, i32 8, i32 0, i32 0
  %252 = load i32, i32* %251, align 8, !noalias !23
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %284, label %255

255:                                              ; preds = %250
  %256 = bitcast %class.sk_sp.8* %13 to %class.SkShaderBase**
  %257 = load %class.SkShaderBase*, %class.SkShaderBase** %256, align 8, !noalias !23
  %258 = bitcast %class.SkShaderBase* %257 to i1 (%class.SkShaderBase*)***
  %259 = load i1 (%class.SkShaderBase*)**, i1 (%class.SkShaderBase*)*** %258, align 8, !noalias !23
  %260 = getelementptr inbounds i1 (%class.SkShaderBase*)*, i1 (%class.SkShaderBase*)** %259, i64 9
  %261 = load i1 (%class.SkShaderBase*)*, i1 (%class.SkShaderBase*)** %260, align 8, !noalias !23
  %262 = call zeroext i1 %261(%class.SkShaderBase* %257) #13, !noalias !23
  br i1 %262, label %284, label %263

263:                                              ; preds = %255
  %264 = call i8* @_Znwm(i64 64) #14, !noalias !33
  %265 = bitcast %class.sk_sp.8* %13 to i64*
  %266 = load i64, i64* %265, align 8, !noalias !33
  store %class.SkShader* null, %class.SkShader** %163, align 8, !noalias !33
  %267 = bitcast i8* %264 to %class.SkShaderBase*
  call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %267, %class.SkMatrix* null) #13, !noalias !33
  %268 = bitcast i8* %264 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN12_GLOBAL__N_112DitherShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %268, align 8, !noalias !33
  %269 = getelementptr inbounds i8, i8* %264, i64 56
  %270 = bitcast i8* %269 to i64*
  store i64 %266, i64* %270, align 8, !noalias !33
  %271 = ptrtoint i8* %264 to i64
  %272 = load %class.SkShader*, %class.SkShader** %163, align 8, !noalias !23
  store i64 %271, i64* %265, align 8, !noalias !23
  %273 = icmp eq %class.SkShader* %272, null
  br i1 %273, label %284, label %274

274:                                              ; preds = %263
  %275 = getelementptr inbounds %class.SkShader, %class.SkShader* %272, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = atomicrmw add i32* %275, i32 -1 acq_rel, !noalias !23
  %277 = icmp eq i32 %276, 1
  br i1 %277, label %278, label %284

278:                                              ; preds = %274
  %279 = bitcast %class.SkShader* %272 to %class.SkRefCntBase*
  %280 = bitcast %class.SkShader* %272 to void (%class.SkRefCntBase*)***
  %281 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %280, align 8, !noalias !23
  %282 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %281, i64 2
  %283 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %282, align 8, !noalias !23
  call void %283(%class.SkRefCntBase* nonnull %279) #13, !noalias !23
  br label %284

284:                                              ; preds = %278, %274, %263, %255, %250
  %285 = load i32, i32* %251, align 8, !noalias !23
  %286 = lshr i32 %285, 10
  %287 = and i32 %286, 255
  %288 = icmp eq i32 %287, 3
  br i1 %288, label %289, label %297

289:                                              ; preds = %284
  %290 = load %class.SkShader*, %class.SkShader** %163, align 8, !noalias !23
  %291 = bitcast %class.SkShader* %290 to i1 (%class.SkShader*)***
  %292 = load i1 (%class.SkShader*)**, i1 (%class.SkShader*)*** %291, align 8, !noalias !23
  %293 = getelementptr inbounds i1 (%class.SkShader*)*, i1 (%class.SkShader*)** %292, i64 7
  %294 = load i1 (%class.SkShader*)*, i1 (%class.SkShader*)** %293, align 8, !noalias !23
  %295 = call zeroext i1 %294(%class.SkShader* %290) #13, !noalias !23
  %296 = select i1 %295, i32 1, i32 3
  br label %297

297:                                              ; preds = %289, %284
  %298 = phi i32 [ %287, %284 ], [ %296, %289 ]
  %299 = bitcast <2 x i64>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %299) #13, !noalias !23
  %300 = bitcast <2 x i64>* %14 to float*
  %301 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %24, i64 0, i32 5
  %302 = bitcast %struct.SkRGBA4f* %301 to <2 x i64>*
  %303 = load <2 x i64>, <2 x i64>* %302, align 8, !noalias !23
  store <2 x i64> %303, <2 x i64>* %14, align 16, !noalias !23
  %304 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %15, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %304) #13, !noalias !23
  %305 = call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #13, !noalias !23
  %306 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8, !noalias !23
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %15, %class.SkColorSpace* %305, i32 3, %class.SkColorSpace* %306, i32 3) #13, !noalias !23
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %15, float* nonnull %300) #13, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %304) #13, !noalias !23
  %307 = bitcast %class.sk_sp.8* %13 to i64*
  %308 = load i64, i64* %307, align 8, !noalias !23
  store %class.SkShader* null, %class.SkShader** %163, align 8, !noalias !23
  %309 = bitcast %"struct.(anonymous namespace)::Params"* %94 to i64*
  store i64 %308, i64* %309, align 8, !alias.scope !23
  %310 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 1
  %311 = bitcast %class.sk_sp.8* %310 to i64*
  store i64 %97, i64* %311, align 8, !alias.scope !23
  %312 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 2
  %313 = load i32, i32* %40, align 8, !noalias !23
  %314 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 2
  %315 = load i32, i32* %314, align 4, !noalias !23
  %316 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8, !noalias !36
  %317 = icmp eq %class.SkColorSpace* %316, null
  br i1 %317, label %323, label %318

318:                                              ; preds = %297
  %319 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %316, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = atomicrmw add i32* %319, i32 1 monotonic, !noalias !36
  %321 = load %class.SkShader*, %class.SkShader** %163, align 8, !noalias !23
  %322 = bitcast %class.SkShader* %321 to %class.SkRefCntBase*
  br label %323

323:                                              ; preds = %318, %297
  %324 = phi %class.SkRefCntBase* [ %322, %318 ], [ null, %297 ]
  %325 = phi %class.SkShader* [ %321, %318 ], [ null, %297 ]
  %326 = ptrtoint %class.SkColorSpace* %316 to i64
  %327 = bitcast %class.SkColorInfo* %312 to i64*
  store i64 %326, i64* %327, align 8, !alias.scope !23
  %328 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 2, i32 1
  store i32 %313, i32* %328, align 8, !alias.scope !23
  %329 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 2, i32 2
  store i32 %315, i32* %329, align 4, !alias.scope !23
  %330 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 3
  store i32 %298, i32* %330, align 8, !alias.scope !23
  %331 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 4
  store i32 0, i32* %331, align 4, !alias.scope !23
  %332 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 5
  %333 = bitcast %struct.SkRGBA4f* %332 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %333, i8* nonnull align 16 %299, i64 16, i1 false) #13
  %334 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 6
  store %class.SkMatrixProvider* %5, %class.SkMatrixProvider** %334, align 8, !alias.scope !23
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %299) #13, !noalias !23
  %335 = icmp eq %class.SkShader* %325, null
  br i1 %335, label %345, label %336

336:                                              ; preds = %323
  %337 = getelementptr inbounds %class.SkShader, %class.SkShader* %325, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = atomicrmw add i32* %337, i32 -1 acq_rel, !noalias !23
  %339 = icmp eq i32 %338, 1
  br i1 %339, label %340, label %345

340:                                              ; preds = %336
  %341 = bitcast %class.SkShader* %325 to void (%class.SkRefCntBase*)***
  %342 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %341, align 8, !noalias !23
  %343 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %342, i64 2
  %344 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %343, align 8, !noalias !23
  call void %344(%class.SkRefCntBase* nonnull %324) #13, !noalias !23
  br label %345

345:                                              ; preds = %340, %336, %323
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #13, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98)
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %24) #13
  %346 = bitcast %"struct.skvm::Uniforms"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %346)
  %347 = bitcast %class.SkArenaAlloc** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %347)
  %348 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %348)
  store %"struct.skvm::Uniforms"* %76, %"struct.skvm::Uniforms"** %16, align 8, !noalias !43
  store %class.SkArenaAlloc* %93, %class.SkArenaAlloc** %17, align 8, !noalias !43
  store i8* %7, i8** %18, align 8, !noalias !43
  %349 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %349) #13, !noalias !43
  %350 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 5, i32 0
  %351 = load float, float* %350, align 8, !noalias !43
  %352 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %76, float %351) #13, !noalias !43
  store i64 %352, i64* %19, align 8, !noalias !43
  %353 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %353) #13, !noalias !43
  %354 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 5, i32 1
  %355 = load float, float* %354, align 4, !noalias !43
  %356 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %76, float %355) #13, !noalias !43
  store i64 %356, i64* %20, align 8, !noalias !43
  %357 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %357) #13, !noalias !43
  %358 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 5, i32 2
  %359 = load float, float* %358, align 8, !noalias !43
  %360 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %76, float %359) #13, !noalias !43
  store i64 %360, i64* %21, align 8, !noalias !43
  %361 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %361) #13, !noalias !43
  %362 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 5, i32 3
  %363 = load float, float* %362, align 4, !noalias !43
  %364 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %76, float %363) #13, !noalias !43
  store i64 %364, i64* %22, align 8, !noalias !43
  %365 = bitcast %class.anon.59* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %365) #13, !noalias !43
  %366 = getelementptr inbounds %class.anon.59, %class.anon.59* %23, i64 0, i32 0
  store %"struct.skvm::Uniforms"** %16, %"struct.skvm::Uniforms"*** %366, align 8, !noalias !43
  %367 = getelementptr inbounds %class.anon.59, %class.anon.59* %23, i64 0, i32 1
  %368 = bitcast %"struct.skvm::Uniform"** %367 to i64**
  store i64* %19, i64** %368, align 8, !noalias !43
  %369 = getelementptr inbounds %class.anon.59, %class.anon.59* %23, i64 0, i32 2
  %370 = bitcast %"struct.skvm::Uniform"** %369 to i64**
  store i64* %20, i64** %370, align 8, !noalias !43
  %371 = getelementptr inbounds %class.anon.59, %class.anon.59* %23, i64 0, i32 3
  %372 = bitcast %"struct.skvm::Uniform"** %371 to i64**
  store i64* %21, i64** %372, align 8, !noalias !43
  %373 = getelementptr inbounds %class.anon.59, %class.anon.59* %23, i64 0, i32 4
  %374 = bitcast %"struct.skvm::Uniform"** %373 to i64**
  store i64* %22, i64** %374, align 8, !noalias !43
  %375 = getelementptr inbounds %class.anon.59, %class.anon.59* %23, i64 0, i32 5
  store %"struct.(anonymous namespace)::Params"* %94, %"struct.(anonymous namespace)::Params"** %375, align 8, !noalias !43
  %376 = getelementptr inbounds %class.anon.59, %class.anon.59* %23, i64 0, i32 6
  store %class.SkArenaAlloc** %17, %class.SkArenaAlloc*** %376, align 8, !noalias !43
  %377 = getelementptr inbounds %class.anon.59, %class.anon.59* %23, i64 0, i32 7
  store i8** %18, i8*** %377, align 8, !noalias !43
  %378 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %94, i64 0, i32 0
  %379 = call fastcc i64 @"_ZZN12_GLOBAL__N_19cache_keyERKNS_6ParamsEPN4skvm8UniformsEP12SkArenaAllocPbENK3$_0clERK5sk_spI8SkShaderE"(%class.anon.59* nonnull %23, %class.sk_sp.8* dereferenceable(8) %378) #13, !noalias !43
  %380 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %310, i64 0, i32 0
  %381 = load %class.SkShader*, %class.SkShader** %380, align 8, !noalias !43
  %382 = icmp eq %class.SkShader* %381, null
  br i1 %382, label %387, label %383

383:                                              ; preds = %345
  %384 = call fastcc i64 @"_ZZN12_GLOBAL__N_19cache_keyERKNS_6ParamsEPN4skvm8UniformsEP12SkArenaAllocPbENK3$_0clERK5sk_spI8SkShaderE"(%class.anon.59* nonnull %23, %class.sk_sp.8* dereferenceable(8) %310) #13, !noalias !43
  %385 = icmp eq i64 %384, 0
  %386 = select i1 %385, i64 1, i64 %384
  br label %387

387:                                              ; preds = %383, %345
  %388 = phi i64 [ %386, %383 ], [ 0, %345 ]
  %389 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 7, i32 0
  store i64 %379, i64* %389, align 8, !alias.scope !43
  %390 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 7, i32 1
  store i64 %388, i64* %390, align 8, !alias.scope !43
  %391 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 7, i32 2
  %392 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 6, i32 2, i32 0, i32 0
  %393 = load %class.SkColorSpace*, %class.SkColorSpace** %392, align 8, !noalias !43
  %394 = icmp eq %class.SkColorSpace* %393, null
  br i1 %394, label %404, label %395

395:                                              ; preds = %387
  %396 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %393, i64 0, i32 1
  %397 = load i32, i32* %396, align 4, !noalias !43
  %398 = zext i32 %397 to i64
  %399 = shl nuw i64 %398, 32
  %400 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %393, i64 0, i32 2
  %401 = load i32, i32* %400, align 4, !noalias !43
  %402 = zext i32 %401 to i64
  %403 = or i64 %399, %402
  br label %404

404:                                              ; preds = %387, %395
  %405 = phi i64 [ %403, %395 ], [ 0, %387 ]
  store i64 %405, i64* %391, align 8, !alias.scope !43
  %406 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 7, i32 3
  %407 = load i32, i32* %328, align 8, !noalias !43
  %408 = trunc i32 %407 to i8
  store i8 %408, i8* %406, align 8, !alias.scope !43
  %409 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 7, i32 4
  %410 = load i32, i32* %329, align 4, !noalias !43
  %411 = trunc i32 %410 to i8
  store i8 %411, i8* %409, align 1, !alias.scope !43
  %412 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 7, i32 5
  %413 = load i32, i32* %330, align 8, !noalias !43
  %414 = trunc i32 %413 to i8
  store i8 %414, i8* %412, align 2, !alias.scope !43
  %415 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 7, i32 6
  %416 = load i32, i32* %331, align 4, !noalias !43
  %417 = trunc i32 %416 to i8
  store i8 %417, i8* %415, align 1, !alias.scope !43
  %418 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 7, i32 7
  store i32 0, i32* %418, align 4, !alias.scope !43
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %365) #13, !noalias !43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %361) #13, !noalias !43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %357) #13, !noalias !43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %353) #13, !noalias !43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %349) #13, !noalias !43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %346)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %347)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %348)
  %419 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 8
  call void @_ZN4skvm7ProgramC1Ev(%"class.skvm::Program"* %419) #13
  %420 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 9
  call void @_ZN4skvm7ProgramC1Ev(%"class.skvm::Program"* %420) #13
  %421 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 10
  call void @_ZN4skvm7ProgramC1Ev(%"class.skvm::Program"* %421) #13
  %422 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 11
  call void @_ZN4skvm7ProgramC1Ev(%"class.skvm::Program"* %422) #13
  %423 = getelementptr inbounds %"class.(anonymous namespace)::Blitter", %"class.(anonymous namespace)::Blitter"* %0, i64 0, i32 12
  call void @_ZN4skvm7ProgramC1Ev(%"class.skvm::Program"* %423) #13
  ret void
}

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #6

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #5

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.8*) local_unnamed_addr #5

declare void @_ZN11SkPaintPriv17RemoveColorFilterEP7SkPaintP12SkColorSpace(%class.SkPaint*, %class.SkColorSpace*) local_unnamed_addr #5

declare void @_ZNK7SkPaint9refShaderEv(%class.sk_sp.8* sret, %class.SkPaint*) local_unnamed_addr #5

declare %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #5

declare void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) unnamed_addr #5

declare void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps*, float*) local_unnamed_addr #5

declare void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase*, %class.SkMatrix*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_112SpriteShaderD2Ev(%"struct.(anonymous namespace)::SpriteShader"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::SpriteShader", %"struct.(anonymous namespace)::SpriteShader"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN12_GLOBAL__N_112SpriteShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::SpriteShader", %"struct.(anonymous namespace)::SpriteShader"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %"struct.(anonymous namespace)::SpriteShader"* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %13) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_112SpriteShaderD0Ev(%"struct.(anonymous namespace)::SpriteShader"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::SpriteShader", %"struct.(anonymous namespace)::SpriteShader"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN12_GLOBAL__N_112SpriteShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::SpriteShader", %"struct.(anonymous namespace)::SpriteShader"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %"struct.(anonymous namespace)::SpriteShader"* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %13) #13
  %14 = bitcast %"struct.(anonymous namespace)::SpriteShader"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #13
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias void (%class.sk_sp.51*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_112SpriteShader10getFactoryEv(%"struct.(anonymous namespace)::SpriteShader"* nocapture readnone) unnamed_addr #11 align 2 {
  ret void (%class.sk_sp.51*, %class.SkReadBuffer*)* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_112SpriteShader11getTypeNameEv(%"struct.(anonymous namespace)::SpriteShader"* nocapture readnone) unnamed_addr #11 align 2 {
  ret i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)
}

declare void @_ZNK12SkShaderBase7flattenER13SkWriteBuffer(%class.SkShaderBase*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK12SkShaderBase18getFlattenableTypeEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret i32 8
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_112SpriteShader8isOpaqueEv(%"struct.(anonymous namespace)::SpriteShader"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::SpriteShader", %"struct.(anonymous namespace)::SpriteShader"* %0, i64 0, i32 1, i32 2, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.(anonymous namespace)::SpriteShader", %"struct.(anonymous namespace)::SpriteShader"* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = tail call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %7) #13
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

declare i32 @_ZNK8SkShader11asAGradientEPNS_12GradientInfoE(%class.SkShader*, %"struct.SkShader::GradientInfo"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkShaderBase10isConstantEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK12SkShaderBase19asFragmentProcessorERK8GrFPArgs() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkImage* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode(%class.SkShaderBase*, %class.SkMatrix*, i32*) unnamed_addr #0 comdat align 2 {
  ret %class.SkImage* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkRuntimeEffect* @_ZNK12SkShaderBase15asRuntimeEffectEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret %class.SkRuntimeEffect* null
}

declare void @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix(%class.sk_sp.8* sret, %class.SkShaderBase*, %class.SkMatrix*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkShaderBase::Context"* @_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc(%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"* dereferenceable(40), %class.SkArenaAlloc*) unnamed_addr #0 comdat align 2 {
  ret %"class.SkShaderBase::Context"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkShaderBase18onAsLuminanceColorEPj(%class.SkShaderBase*, i32*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK12SkShaderBase14onAppendStagesERK10SkStageRec(%class.SkShaderBase*, %struct.SkStageRec* dereferenceable(56)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkStageUpdater* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec(%class.SkShaderBase*, %struct.SkStageRec* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret %class.SkStageUpdater* null
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_112SpriteShader9onProgramEPN4skvm7BuilderENS1_5CoordES4_NS1_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS1_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %"struct.(anonymous namespace)::SpriteShader"* nocapture readonly, %"class.skvm::Builder"*, %"struct.skvm::Coord"* nocapture readnone byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* nocapture readnone byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* nocapture readnone byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider* nocapture readnone dereferenceable(112), %class.SkMatrix* nocapture readnone, %class.SkColorInfo* nocapture readonly dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc* nocapture readnone) unnamed_addr #0 align 2 {
  %12 = alloca %"struct.skvm::PixelFormat", align 8
  %13 = alloca %"struct.skvm::Color", align 8
  %14 = alloca %"struct.skvm::PixelFormat", align 8
  %15 = alloca %struct.SkColorSpaceXformSteps, align 4
  %16 = getelementptr inbounds %"struct.(anonymous namespace)::SpriteShader", %"struct.(anonymous namespace)::SpriteShader"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = bitcast %"struct.skvm::PixelFormat"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %18) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 36, i1 false)
  call void @_ZN4skvm26SkColorType_to_PixelFormatE11SkColorType(%"struct.skvm::PixelFormat"* nonnull sret %12, i32 %17) #13
  %19 = bitcast %"struct.skvm::Color"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %19) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 64, i1 false)
  %20 = bitcast %"struct.skvm::PixelFormat"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %18, i64 36, i1 false)
  %21 = call i32 @_Z24SkColorTypeBytesPerPixel11SkColorType(i32 %17) #13
  %22 = call i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"* %2, i32 %21) #13
  call void @_ZN4skvm7Builder4loadENS_11PixelFormatENS_3PtrE(%"struct.skvm::Color"* nonnull sret %13, %"class.skvm::Builder"* %2, %"struct.skvm::PixelFormat"* nonnull byval(%"struct.skvm::PixelFormat") align 8 %14, i32 %22) #13
  %23 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %15, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"struct.(anonymous namespace)::SpriteShader", %"struct.(anonymous namespace)::SpriteShader"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %25 = load %class.SkColorSpace*, %class.SkColorSpace** %24, align 8
  %26 = getelementptr inbounds %"struct.(anonymous namespace)::SpriteShader", %"struct.(anonymous namespace)::SpriteShader"* %1, i64 0, i32 1, i32 2, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %8, i64 0, i32 0, i32 0
  %29 = load %class.SkColorSpace*, %class.SkColorSpace** %28, align 8
  %30 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %8, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  call void @_ZN22SkColorSpaceXformStepsC2EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %15, %class.SkColorSpace* %25, i32 %27, %class.SkColorSpace* %29, i32 %31) #13
  call void @_ZNK22SkColorSpaceXformSteps7programEPN4skvm7BuilderEPNS0_8UniformsENS0_5ColorE(%"struct.skvm::Color"* sret %0, %struct.SkColorSpaceXformSteps* nonnull %15, %"class.skvm::Builder"* %2, %"struct.skvm::Uniforms"* %9, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %13) #13
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %18) #13
  ret void
}

declare void @_ZNK22SkColorSpaceXformSteps7programEPN4skvm7BuilderEPNS0_8UniformsENS0_5ColorE(%"struct.skvm::Color"* sret, %struct.SkColorSpaceXformSteps*, %"class.skvm::Builder"*, %"struct.skvm::Uniforms"*, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8) local_unnamed_addr #5

declare void @_ZN22SkColorSpaceXformStepsC2EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_116PaintColorShaderD0Ev(%"struct.(anonymous namespace)::PaintColorShader"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"struct.(anonymous namespace)::PaintColorShader"* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %2) #13
  %3 = bitcast %"struct.(anonymous namespace)::PaintColorShader"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias void (%class.sk_sp.51*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_116PaintColorShader10getFactoryEv(%"struct.(anonymous namespace)::PaintColorShader"* nocapture readnone) unnamed_addr #11 align 2 {
  ret void (%class.sk_sp.51*, %class.SkReadBuffer*)* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_116PaintColorShader11getTypeNameEv(%"struct.(anonymous namespace)::PaintColorShader"* nocapture readnone) unnamed_addr #11 align 2 {
  ret i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_116PaintColorShader8isOpaqueEv(%"struct.(anonymous namespace)::PaintColorShader"* nocapture readonly) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::PaintColorShader", %"struct.(anonymous namespace)::PaintColorShader"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_116PaintColorShader9onProgramEPN4skvm7BuilderENS1_5CoordES4_NS1_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS1_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias nocapture sret, %"struct.(anonymous namespace)::PaintColorShader"* nocapture readnone, %"class.skvm::Builder"* nocapture readnone, %"struct.skvm::Coord"* nocapture readnone byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* nocapture readnone byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* nocapture readonly byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider* nocapture readnone dereferenceable(112), %class.SkMatrix* nocapture readnone, %class.SkColorInfo* nocapture readnone dereferenceable(16), %"struct.skvm::Uniforms"* nocapture readnone, %class.SkArenaAlloc* nocapture readnone) unnamed_addr #0 align 2 {
  %12 = alloca %"struct.skvm::Color", align 8
  %13 = bitcast %"struct.skvm::Color"* %5 to i8*
  %14 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %5, i64 0, i32 3, i32 0
  %15 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %14, align 8
  %16 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %5, i64 0, i32 3, i32 1
  %17 = bitcast i32* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"struct.skvm::Color"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %19) #13, !noalias !46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %13, i64 48, i1 false)
  %20 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %12, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %15, %"class.skvm::Builder"** %20, align 8, !noalias !46
  %21 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %12, i64 0, i32 3, i32 1
  %22 = bitcast i32* %21 to i64*
  store i64 %18, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %12, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %12, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %12, i64 0, i32 2
  %26 = trunc i64 %18 to i32
  call void @_ZN4skvm7Builder6premulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"* %15, %"struct.skvm::F32"* nonnull %23, %"struct.skvm::F32"* %24, %"struct.skvm::F32"* %25, %"class.skvm::Builder"* %15, i32 %26) #13, !noalias !49
  %27 = bitcast %"struct.skvm::Color"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %19, i64 64, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %19) #13, !noalias !46
  ret void
}

declare void @_ZN19SkColorFilterShaderC1E5sk_spI8SkShaderEfS0_I13SkColorFilterE(%class.SkColorFilterShader*, %class.sk_sp.8*, float, %class.sk_sp.10*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115NoopColorFilterD0Ev(%"struct.(anonymous namespace)::NoopColorFilter"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"struct.(anonymous namespace)::NoopColorFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias void (%class.sk_sp.51*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_115NoopColorFilter10getFactoryEv(%"struct.(anonymous namespace)::NoopColorFilter"* nocapture readnone) unnamed_addr #11 align 2 {
  ret void (%class.sk_sp.51*, %class.SkReadBuffer*)* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_115NoopColorFilter11getTypeNameEv(%"struct.(anonymous namespace)::NoopColorFilter"* nocapture readnone) unnamed_addr #11 align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13SkFlattenable7flattenER13SkWriteBuffer(%class.SkFlattenable*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK17SkColorFilterBase18getFlattenableTypeEv(%class.SkColorFilterBase*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK17SkColorFilterBase18onIsAlphaUnchangedEv(%class.SkColorFilterBase*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK17SkColorFilterBase19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo() unnamed_addr

declare { <2 x float>, <2 x float> } @_ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace(%class.SkColorFilterBase*, %struct.SkRGBA4f.58* dereferenceable(16), %class.SkColorSpace*) unnamed_addr #5

declare zeroext i1 @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf(%class.SkColorFilterBase*, float*) unnamed_addr #5

declare zeroext i1 @_ZNK17SkColorFilterBase14onAsAColorModeEPjP11SkBlendMode(%class.SkColorFilterBase*, i32*, i32*) unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_115NoopColorFilter14onAppendStagesERK10SkStageRecb(%"struct.(anonymous namespace)::NoopColorFilter"* nocapture readnone, %struct.SkStageRec* nocapture readnone dereferenceable(56), i1 zeroext) unnamed_addr #11 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_115NoopColorFilter9onProgramEPN4skvm7BuilderENS1_5ColorEP12SkColorSpacePNS1_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias nocapture sret, %"struct.(anonymous namespace)::NoopColorFilter"* nocapture readnone, %"class.skvm::Builder"* nocapture readnone, %"struct.skvm::Color"* nocapture readonly byval(%"struct.skvm::Color") align 8, %class.SkColorSpace* nocapture readnone, %"struct.skvm::Uniforms"* nocapture readnone, %class.SkArenaAlloc* nocapture readnone) unnamed_addr #0 align 2 {
  %8 = bitcast %"struct.skvm::Color"* %0 to i8*
  %9 = bitcast %"struct.skvm::Color"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* nonnull align 8 %9, i64 64, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_112DitherShaderD2Ev(%"struct.(anonymous namespace)::DitherShader"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::DitherShader", %"struct.(anonymous namespace)::DitherShader"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN12_GLOBAL__N_112DitherShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::DitherShader", %"struct.(anonymous namespace)::DitherShader"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"struct.(anonymous namespace)::DitherShader"* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %17) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_112DitherShaderD0Ev(%"struct.(anonymous namespace)::DitherShader"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::DitherShader", %"struct.(anonymous namespace)::DitherShader"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN12_GLOBAL__N_112DitherShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.(anonymous namespace)::DitherShader", %"struct.(anonymous namespace)::DitherShader"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkShader*, %class.SkShader** %3, align 8
  %5 = icmp eq %class.SkShader* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkShader* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkShader* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"struct.(anonymous namespace)::DitherShader"* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %17) #13
  %18 = bitcast %"struct.(anonymous namespace)::DitherShader"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias void (%class.sk_sp.51*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_112DitherShader10getFactoryEv(%"struct.(anonymous namespace)::DitherShader"* nocapture readnone) unnamed_addr #11 align 2 {
  ret void (%class.sk_sp.51*, %class.SkReadBuffer*)* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_112DitherShader11getTypeNameEv(%"struct.(anonymous namespace)::DitherShader"* nocapture readnone) unnamed_addr #11 align 2 {
  ret i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_112DitherShader8isOpaqueEv(%"struct.(anonymous namespace)::DitherShader"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.(anonymous namespace)::DitherShader", %"struct.(anonymous namespace)::DitherShader"* %0, i64 0, i32 1, i32 0
  %3 = load %class.SkShader*, %class.SkShader** %2, align 8
  %4 = bitcast %class.SkShader* %3 to i1 (%class.SkShader*)***
  %5 = load i1 (%class.SkShader*)**, i1 (%class.SkShader*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkShader*)*, i1 (%class.SkShader*)** %5, i64 7
  %7 = load i1 (%class.SkShader*)*, i1 (%class.SkShader*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkShader* %3) #13
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_112DitherShader9onProgramEPN4skvm7BuilderENS1_5CoordES4_NS1_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS1_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias nocapture sret, %"struct.(anonymous namespace)::DitherShader"* nocapture readonly, %"class.skvm::Builder"*, %"struct.skvm::Coord"* nocapture readonly byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* nocapture readonly byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* nocapture readonly byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider* dereferenceable(112), %class.SkMatrix*, %class.SkColorInfo* dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) unnamed_addr #0 align 2 {
  %12 = alloca %"struct.skvm::Color", align 8
  %13 = bitcast %"struct.skvm::Color"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 64, i1 false)
  %14 = getelementptr inbounds %"struct.(anonymous namespace)::DitherShader", %"struct.(anonymous namespace)::DitherShader"* %1, i64 0, i32 1
  %15 = bitcast %class.sk_sp.8* %14 to %class.SkShaderBase**
  %16 = load %class.SkShaderBase*, %class.SkShaderBase** %15, align 8
  call void @_ZNK12SkShaderBase7programEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* nonnull sret %12, %class.SkShaderBase* %16, %"class.skvm::Builder"* %2, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %3, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %4, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %5, %class.SkMatrixProvider* dereferenceable(112) %6, %class.SkMatrix* %7, %class.SkColorInfo* dereferenceable(16) %8, %"struct.skvm::Uniforms"* %9, %class.SkArenaAlloc* %10) #13
  %17 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %12, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %32, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %12, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %32, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %12, i64 0, i32 2, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %12, i64 0, i32 3, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %41

32:                                               ; preds = %28, %11, %20, %24
  %33 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %33, align 8
  %34 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 1
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %35, align 8
  %36 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 1
  store i32 -1, i32* %36, align 8
  %37 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %37, align 8
  %38 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 1
  store i32 -1, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %39, align 8
  %40 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 1
  store i32 -1, i32* %40, align 8
  br label %228

41:                                               ; preds = %28
  %42 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %8, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  switch i32 %43, label %50 [
    i32 3, label %44
    i32 2, label %45
    i32 11, label %46
    i32 5, label %46
    i32 4, label %46
    i32 6, label %46
    i32 9, label %47
    i32 7, label %47
    i32 10, label %47
    i32 8, label %47
    i32 0, label %48
    i32 1, label %48
    i32 13, label %48
    i32 12, label %48
    i32 14, label %48
    i32 15, label %48
    i32 16, label %48
    i32 18, label %48
    i32 17, label %48
    i32 19, label %48
    i32 20, label %48
  ]

44:                                               ; preds = %41
  br label %50

45:                                               ; preds = %41
  br label %50

46:                                               ; preds = %41, %41, %41, %41
  br label %50

47:                                               ; preds = %41, %41, %41, %41
  br label %50

48:                                               ; preds = %41, %41, %41, %41, %41, %41, %41, %41, %41, %41, %41
  %49 = bitcast %"struct.skvm::Color"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %13, i64 64, i1 false)
  br label %228

50:                                               ; preds = %41, %47, %46, %45, %44
  %51 = phi float [ 0.000000e+00, %41 ], [ 0x3F50040100000000, %47 ], [ 0x3F70101020000000, %46 ], [ 0x3F90410420000000, %45 ], [ 0x3FB1111120000000, %44 ]
  %52 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 0, i32 0
  %53 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %52, align 8
  %54 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %53, i32 1056964608) #13
  %57 = extractvalue { %"class.skvm::Builder"*, i32 } %56, 0
  %58 = extractvalue { %"class.skvm::Builder"*, i32 } %56, 1
  %59 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %53, %"class.skvm::Builder"* %53, i32 %55, %"class.skvm::Builder"* %57, i32 %58) #13
  %60 = extractvalue { %"class.skvm::Builder"*, i32 } %59, 0
  %61 = extractvalue { %"class.skvm::Builder"*, i32 } %59, 1
  %62 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5truncENS_3F32E(%"class.skvm::Builder"* %60, %"class.skvm::Builder"* %60, i32 %61) #13
  %63 = extractvalue { %"class.skvm::Builder"*, i32 } %62, 0
  %64 = extractvalue { %"class.skvm::Builder"*, i32 } %62, 1
  %65 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 1, i32 0
  %66 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %65, align 8
  %67 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 1, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %66, i32 1056964608) #13
  %70 = extractvalue { %"class.skvm::Builder"*, i32 } %69, 0
  %71 = extractvalue { %"class.skvm::Builder"*, i32 } %69, 1
  %72 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %66, %"class.skvm::Builder"* %66, i32 %68, %"class.skvm::Builder"* %70, i32 %71) #13
  %73 = extractvalue { %"class.skvm::Builder"*, i32 } %72, 0
  %74 = extractvalue { %"class.skvm::Builder"*, i32 } %72, 1
  %75 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5truncENS_3F32E(%"class.skvm::Builder"* %73, %"class.skvm::Builder"* %73, i32 %74) #13
  %76 = extractvalue { %"class.skvm::Builder"*, i32 } %75, 0
  %77 = extractvalue { %"class.skvm::Builder"*, i32 } %75, 1
  %78 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_xorENS_3I32ES1_(%"class.skvm::Builder"* %63, %"class.skvm::Builder"* %63, i32 %64, %"class.skvm::Builder"* %76, i32 %77) #13
  %79 = extractvalue { %"class.skvm::Builder"*, i32 } %78, 0
  %80 = extractvalue { %"class.skvm::Builder"*, i32 } %78, 1
  %81 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %79, i32 1) #13
  %82 = extractvalue { %"class.skvm::Builder"*, i32 } %81, 0
  %83 = extractvalue { %"class.skvm::Builder"*, i32 } %81, 1
  %84 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %79, %"class.skvm::Builder"* %79, i32 %80, %"class.skvm::Builder"* %82, i32 %83) #13
  %85 = extractvalue { %"class.skvm::Builder"*, i32 } %84, 0
  %86 = extractvalue { %"class.skvm::Builder"*, i32 } %84, 1
  %87 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3shlENS_3I32Ei(%"class.skvm::Builder"* %85, %"class.skvm::Builder"* %85, i32 %86, i32 5) #13
  %88 = extractvalue { %"class.skvm::Builder"*, i32 } %87, 0
  %89 = extractvalue { %"class.skvm::Builder"*, i32 } %87, 1
  %90 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %63, i32 1) #13
  %91 = extractvalue { %"class.skvm::Builder"*, i32 } %90, 0
  %92 = extractvalue { %"class.skvm::Builder"*, i32 } %90, 1
  %93 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %63, %"class.skvm::Builder"* %63, i32 %64, %"class.skvm::Builder"* %91, i32 %92) #13
  %94 = extractvalue { %"class.skvm::Builder"*, i32 } %93, 0
  %95 = extractvalue { %"class.skvm::Builder"*, i32 } %93, 1
  %96 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3shlENS_3I32Ei(%"class.skvm::Builder"* %94, %"class.skvm::Builder"* %94, i32 %95, i32 4) #13
  %97 = extractvalue { %"class.skvm::Builder"*, i32 } %96, 0
  %98 = extractvalue { %"class.skvm::Builder"*, i32 } %96, 1
  %99 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6bit_orENS_3I32ES1_(%"class.skvm::Builder"* %88, %"class.skvm::Builder"* %88, i32 %89, %"class.skvm::Builder"* %97, i32 %98) #13
  %100 = extractvalue { %"class.skvm::Builder"*, i32 } %99, 0
  %101 = extractvalue { %"class.skvm::Builder"*, i32 } %99, 1
  %102 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %79, i32 2) #13
  %103 = extractvalue { %"class.skvm::Builder"*, i32 } %102, 0
  %104 = extractvalue { %"class.skvm::Builder"*, i32 } %102, 1
  %105 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %79, %"class.skvm::Builder"* %79, i32 %80, %"class.skvm::Builder"* %103, i32 %104) #13
  %106 = extractvalue { %"class.skvm::Builder"*, i32 } %105, 0
  %107 = extractvalue { %"class.skvm::Builder"*, i32 } %105, 1
  %108 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3shlENS_3I32Ei(%"class.skvm::Builder"* %106, %"class.skvm::Builder"* %106, i32 %107, i32 2) #13
  %109 = extractvalue { %"class.skvm::Builder"*, i32 } %108, 0
  %110 = extractvalue { %"class.skvm::Builder"*, i32 } %108, 1
  %111 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6bit_orENS_3I32ES1_(%"class.skvm::Builder"* %100, %"class.skvm::Builder"* %100, i32 %101, %"class.skvm::Builder"* %109, i32 %110) #13
  %112 = extractvalue { %"class.skvm::Builder"*, i32 } %111, 0
  %113 = extractvalue { %"class.skvm::Builder"*, i32 } %111, 1
  %114 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %63, i32 2) #13
  %115 = extractvalue { %"class.skvm::Builder"*, i32 } %114, 0
  %116 = extractvalue { %"class.skvm::Builder"*, i32 } %114, 1
  %117 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %63, %"class.skvm::Builder"* %63, i32 %64, %"class.skvm::Builder"* %115, i32 %116) #13
  %118 = extractvalue { %"class.skvm::Builder"*, i32 } %117, 0
  %119 = extractvalue { %"class.skvm::Builder"*, i32 } %117, 1
  %120 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3shlENS_3I32Ei(%"class.skvm::Builder"* %118, %"class.skvm::Builder"* %118, i32 %119, i32 1) #13
  %121 = extractvalue { %"class.skvm::Builder"*, i32 } %120, 0
  %122 = extractvalue { %"class.skvm::Builder"*, i32 } %120, 1
  %123 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6bit_orENS_3I32ES1_(%"class.skvm::Builder"* %112, %"class.skvm::Builder"* %112, i32 %113, %"class.skvm::Builder"* %121, i32 %122) #13
  %124 = extractvalue { %"class.skvm::Builder"*, i32 } %123, 0
  %125 = extractvalue { %"class.skvm::Builder"*, i32 } %123, 1
  %126 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %79, i32 4) #13
  %127 = extractvalue { %"class.skvm::Builder"*, i32 } %126, 0
  %128 = extractvalue { %"class.skvm::Builder"*, i32 } %126, 1
  %129 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %79, %"class.skvm::Builder"* %79, i32 %80, %"class.skvm::Builder"* %127, i32 %128) #13
  %130 = extractvalue { %"class.skvm::Builder"*, i32 } %129, 0
  %131 = extractvalue { %"class.skvm::Builder"*, i32 } %129, 1
  %132 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3shrENS_3I32Ei(%"class.skvm::Builder"* %130, %"class.skvm::Builder"* %130, i32 %131, i32 1) #13
  %133 = extractvalue { %"class.skvm::Builder"*, i32 } %132, 0
  %134 = extractvalue { %"class.skvm::Builder"*, i32 } %132, 1
  %135 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6bit_orENS_3I32ES1_(%"class.skvm::Builder"* %124, %"class.skvm::Builder"* %124, i32 %125, %"class.skvm::Builder"* %133, i32 %134) #13
  %136 = extractvalue { %"class.skvm::Builder"*, i32 } %135, 0
  %137 = extractvalue { %"class.skvm::Builder"*, i32 } %135, 1
  %138 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %63, i32 4) #13
  %139 = extractvalue { %"class.skvm::Builder"*, i32 } %138, 0
  %140 = extractvalue { %"class.skvm::Builder"*, i32 } %138, 1
  %141 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %63, %"class.skvm::Builder"* %63, i32 %64, %"class.skvm::Builder"* %139, i32 %140) #13
  %142 = extractvalue { %"class.skvm::Builder"*, i32 } %141, 0
  %143 = extractvalue { %"class.skvm::Builder"*, i32 } %141, 1
  %144 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3shrENS_3I32Ei(%"class.skvm::Builder"* %142, %"class.skvm::Builder"* %142, i32 %143, i32 2) #13
  %145 = extractvalue { %"class.skvm::Builder"*, i32 } %144, 0
  %146 = extractvalue { %"class.skvm::Builder"*, i32 } %144, 1
  %147 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6bit_orENS_3I32ES1_(%"class.skvm::Builder"* %136, %"class.skvm::Builder"* %136, i32 %137, %"class.skvm::Builder"* %145, i32 %146) #13
  %148 = extractvalue { %"class.skvm::Builder"*, i32 } %147, 0
  %149 = extractvalue { %"class.skvm::Builder"*, i32 } %147, 1
  %150 = fmul float %51, 1.562500e-02
  %151 = fmul float %51, 0xBFDF800000000000
  %152 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6to_F32ENS_3I32E(%"class.skvm::Builder"* %148, %"class.skvm::Builder"* %148, i32 %149) #13
  %153 = extractvalue { %"class.skvm::Builder"*, i32 } %152, 0
  %154 = extractvalue { %"class.skvm::Builder"*, i32 } %152, 1
  %155 = bitcast float %150 to i32
  %156 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %153, i32 %155) #13
  %157 = extractvalue { %"class.skvm::Builder"*, i32 } %156, 0
  %158 = extractvalue { %"class.skvm::Builder"*, i32 } %156, 1
  %159 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %153, %"class.skvm::Builder"* %153, i32 %154, %"class.skvm::Builder"* %157, i32 %158) #13
  %160 = extractvalue { %"class.skvm::Builder"*, i32 } %159, 0
  %161 = extractvalue { %"class.skvm::Builder"*, i32 } %159, 1
  %162 = bitcast float %151 to i32
  %163 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %160, i32 %162) #13
  %164 = extractvalue { %"class.skvm::Builder"*, i32 } %163, 0
  %165 = extractvalue { %"class.skvm::Builder"*, i32 } %163, 1
  %166 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %160, %"class.skvm::Builder"* %160, i32 %161, %"class.skvm::Builder"* %164, i32 %165) #13
  %167 = extractvalue { %"class.skvm::Builder"*, i32 } %166, 0
  %168 = extractvalue { %"class.skvm::Builder"*, i32 } %166, 1
  %169 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %12, i64 0, i32 0, i32 0
  %170 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %169, align 8
  %171 = load i32, i32* %17, align 8
  %172 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %170, %"class.skvm::Builder"* %170, i32 %171, %"class.skvm::Builder"* %167, i32 %168) #13
  %173 = extractvalue { %"class.skvm::Builder"*, i32 } %172, 0
  %174 = extractvalue { %"class.skvm::Builder"*, i32 } %172, 1
  store %"class.skvm::Builder"* %173, %"class.skvm::Builder"** %169, align 8
  store i32 %174, i32* %17, align 8
  %175 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %12, i64 0, i32 1, i32 0
  %176 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %175, align 8
  %177 = load i32, i32* %21, align 8
  %178 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %176, %"class.skvm::Builder"* %176, i32 %177, %"class.skvm::Builder"* %167, i32 %168) #13
  %179 = extractvalue { %"class.skvm::Builder"*, i32 } %178, 0
  %180 = extractvalue { %"class.skvm::Builder"*, i32 } %178, 1
  store %"class.skvm::Builder"* %179, %"class.skvm::Builder"** %175, align 8
  store i32 %180, i32* %21, align 8
  %181 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %12, i64 0, i32 2, i32 0
  %182 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %181, align 8
  %183 = load i32, i32* %25, align 8
  %184 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %182, %"class.skvm::Builder"* %182, i32 %183, %"class.skvm::Builder"* %167, i32 %168) #13
  %185 = extractvalue { %"class.skvm::Builder"*, i32 } %184, 0
  %186 = extractvalue { %"class.skvm::Builder"*, i32 } %184, 1
  store %"class.skvm::Builder"* %185, %"class.skvm::Builder"** %181, align 8
  store i32 %186, i32* %25, align 8
  %187 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %169, align 8
  %188 = load i32, i32* %17, align 8
  %189 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %12, i64 0, i32 3, i32 0
  %190 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %189, align 8
  %191 = load i32, i32* %29, align 8
  %192 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %187, i32 0) #13
  %193 = extractvalue { %"class.skvm::Builder"*, i32 } %192, 0
  %194 = extractvalue { %"class.skvm::Builder"*, i32 } %192, 1
  %195 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %187, %"class.skvm::Builder"* %187, i32 %188, %"class.skvm::Builder"* %190, i32 %191) #13
  %196 = extractvalue { %"class.skvm::Builder"*, i32 } %195, 0
  %197 = extractvalue { %"class.skvm::Builder"*, i32 } %195, 1
  %198 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %187, %"class.skvm::Builder"* %193, i32 %194, %"class.skvm::Builder"* %196, i32 %197) #13
  %199 = extractvalue { %"class.skvm::Builder"*, i32 } %198, 0
  %200 = extractvalue { %"class.skvm::Builder"*, i32 } %198, 1
  store %"class.skvm::Builder"* %199, %"class.skvm::Builder"** %169, align 8
  store i32 %200, i32* %17, align 8
  %201 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %175, align 8
  %202 = load i32, i32* %21, align 8
  %203 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %189, align 8
  %204 = load i32, i32* %29, align 8
  %205 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %201, i32 0) #13
  %206 = extractvalue { %"class.skvm::Builder"*, i32 } %205, 0
  %207 = extractvalue { %"class.skvm::Builder"*, i32 } %205, 1
  %208 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %201, %"class.skvm::Builder"* %201, i32 %202, %"class.skvm::Builder"* %203, i32 %204) #13
  %209 = extractvalue { %"class.skvm::Builder"*, i32 } %208, 0
  %210 = extractvalue { %"class.skvm::Builder"*, i32 } %208, 1
  %211 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %201, %"class.skvm::Builder"* %206, i32 %207, %"class.skvm::Builder"* %209, i32 %210) #13
  %212 = extractvalue { %"class.skvm::Builder"*, i32 } %211, 0
  %213 = extractvalue { %"class.skvm::Builder"*, i32 } %211, 1
  store %"class.skvm::Builder"* %212, %"class.skvm::Builder"** %175, align 8
  store i32 %213, i32* %21, align 8
  %214 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %181, align 8
  %215 = load i32, i32* %25, align 8
  %216 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %189, align 8
  %217 = load i32, i32* %29, align 8
  %218 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %214, i32 0) #13
  %219 = extractvalue { %"class.skvm::Builder"*, i32 } %218, 0
  %220 = extractvalue { %"class.skvm::Builder"*, i32 } %218, 1
  %221 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %214, %"class.skvm::Builder"* %214, i32 %215, %"class.skvm::Builder"* %216, i32 %217) #13
  %222 = extractvalue { %"class.skvm::Builder"*, i32 } %221, 0
  %223 = extractvalue { %"class.skvm::Builder"*, i32 } %221, 1
  %224 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %214, %"class.skvm::Builder"* %219, i32 %220, %"class.skvm::Builder"* %222, i32 %223) #13
  %225 = extractvalue { %"class.skvm::Builder"*, i32 } %224, 0
  %226 = extractvalue { %"class.skvm::Builder"*, i32 } %224, 1
  store %"class.skvm::Builder"* %225, %"class.skvm::Builder"** %181, align 8
  store i32 %226, i32* %25, align 8
  %227 = bitcast %"struct.skvm::Color"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* nonnull align 8 %13, i64 64, i1 false)
  br label %228

228:                                              ; preds = %48, %50, %32
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #13
  ret void
}

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5truncENS_3F32E(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_xorENS_3I32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6bit_orENS_3I32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3shlENS_3I32Ei(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #5

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3shrENS_3I32Ei(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"*, float) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  %9 = ptrtoint i32* %7 to i64
  br i1 %8, label %16, label %10

10:                                               ; preds = %2
  %11 = bitcast i32* %5 to float*
  store float %1, float* %11, align 4
  %12 = getelementptr inbounds i32, i32* %5, i64 1
  %13 = ptrtoint i32* %12 to i64
  %14 = bitcast i32** %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = bitcast %"class.std::__1::vector"* %3 to i64*
  br label %74

16:                                               ; preds = %2
  %17 = ptrtoint i32* %5 to i64
  %18 = bitcast i32** %4 to i64*
  %19 = bitcast %"class.std::__1::vector"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 2
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 4611686018427387903
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #15
  unreachable

27:                                               ; preds = %16
  %28 = bitcast i32** %6 to i64*
  %29 = sub i64 %9, %20
  %30 = ashr exact i64 %29, 2
  %31 = icmp ult i64 %30, 2305843009213693951
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 1
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 4611686018427387903
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #15
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 4611686018427387903, %27 ]
  %42 = shl i64 %41, 2
  %43 = tail call i8* @_Znwm(i64 %42) #14
  %44 = bitcast i8* %43 to i32*
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi i32* [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 %22
  %49 = getelementptr inbounds i32, i32* %47, i64 %46
  %50 = ptrtoint i32* %49 to i64
  %51 = bitcast i32* %48 to float*
  store float %1, float* %51, align 4
  %52 = getelementptr inbounds i32, i32* %48, i64 1
  %53 = ptrtoint i32* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint i32* %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 2
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds i32, i32* %48, i64 %60
  %62 = ptrtoint i32* %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast i32* %61 to i8*
  %66 = bitcast i32* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 %58, i1 false) #13
  %67 = load i32*, i32** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi i32* [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq i32* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = bitcast i32* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #14
  %73 = load i64, i64* %18, align 8
  br label %74

74:                                               ; preds = %10, %68, %71
  %75 = phi i64* [ %15, %10 ], [ %19, %68 ], [ %19, %71 ]
  %76 = phi i64 [ %13, %10 ], [ %53, %68 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = load i64, i64* %75, align 8
  %80 = sub i64 %76, %79
  %81 = shl i64 %80, 32
  %82 = add i64 %81, -17179869184
  %83 = zext i32 %78 to i64
  %84 = or i64 %82, %83
  ret i64 %84
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc i64 @"_ZZN12_GLOBAL__N_19cache_keyERKNS_6ParamsEPN4skvm8UniformsEP12SkArenaAllocPbENK3$_0clERK5sk_spI8SkShaderE"(%class.anon.59* nocapture readonly, %class.sk_sp.8* nocapture readonly dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = alloca %"class.skvm::Builder", align 8
  %4 = alloca %"struct.skvm::Coord", align 8
  %5 = alloca %"struct.skvm::Color", align 8
  %6 = alloca %"struct.skvm::Coord", align 8
  %7 = alloca %"struct.skvm::Color", align 8
  %8 = alloca [4 x i32], align 16
  %9 = bitcast %class.sk_sp.8* %1 to %class.SkShaderBase**
  %10 = load %class.SkShaderBase*, %class.SkShaderBase** %9, align 8
  %11 = bitcast %"class.skvm::Builder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 72, i1 false)
  call void @_ZN4skvm7BuilderC1Ev(%"class.skvm::Builder"* nonnull %3) #13
  %12 = bitcast %"struct.skvm::Coord"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #13
  %13 = getelementptr inbounds %class.anon.59, %class.anon.59* %0, i64 0, i32 0
  %14 = bitcast %"struct.skvm::Coord"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %13, align 8
  %16 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %15, align 8
  call fastcc void @_ZN12_GLOBAL__N_112device_coordEPN4skvm7BuilderEPNS0_8UniformsE(%"struct.skvm::Coord"* nonnull sret %4, %"class.skvm::Builder"* nonnull %3, %"struct.skvm::Uniforms"* %16)
  %17 = getelementptr inbounds %class.anon.59, %class.anon.59* %0, i64 0, i32 1
  %18 = bitcast %"struct.skvm::Uniform"** %17 to i64**
  %19 = load i64*, i64** %18, align 8
  %20 = load i64, i64* %19, align 4
  %21 = trunc i64 %20 to i32
  %22 = lshr i64 %20, 32
  %23 = trunc i64 %22 to i32
  %24 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* nonnull %3, i32 %21, i32 %23) #13
  %25 = extractvalue { %"class.skvm::Builder"*, i32 } %24, 0
  %26 = extractvalue { %"class.skvm::Builder"*, i32 } %24, 1
  %27 = getelementptr inbounds %class.anon.59, %class.anon.59* %0, i64 0, i32 2
  %28 = bitcast %"struct.skvm::Uniform"** %27 to i64**
  %29 = load i64*, i64** %28, align 8
  %30 = load i64, i64* %29, align 4
  %31 = trunc i64 %30 to i32
  %32 = lshr i64 %30, 32
  %33 = trunc i64 %32 to i32
  %34 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* nonnull %3, i32 %31, i32 %33) #13
  %35 = extractvalue { %"class.skvm::Builder"*, i32 } %34, 0
  %36 = extractvalue { %"class.skvm::Builder"*, i32 } %34, 1
  %37 = getelementptr inbounds %class.anon.59, %class.anon.59* %0, i64 0, i32 3
  %38 = bitcast %"struct.skvm::Uniform"** %37 to i64**
  %39 = load i64*, i64** %38, align 8
  %40 = load i64, i64* %39, align 4
  %41 = trunc i64 %40 to i32
  %42 = lshr i64 %40, 32
  %43 = trunc i64 %42 to i32
  %44 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* nonnull %3, i32 %41, i32 %43) #13
  %45 = extractvalue { %"class.skvm::Builder"*, i32 } %44, 0
  %46 = extractvalue { %"class.skvm::Builder"*, i32 } %44, 1
  %47 = getelementptr inbounds %class.anon.59, %class.anon.59* %0, i64 0, i32 4
  %48 = bitcast %"struct.skvm::Uniform"** %47 to i64**
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 4
  %51 = trunc i64 %50 to i32
  %52 = lshr i64 %50, 32
  %53 = trunc i64 %52 to i32
  %54 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* nonnull %3, i32 %51, i32 %53) #13
  %55 = extractvalue { %"class.skvm::Builder"*, i32 } %54, 0
  %56 = extractvalue { %"class.skvm::Builder"*, i32 } %54, 1
  %57 = bitcast %"struct.skvm::Color"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %57) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 64, i1 false)
  %58 = bitcast %"struct.skvm::Coord"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* nonnull align 8 %12, i64 32, i1 false)
  %59 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* %25, %"class.skvm::Builder"** %59, align 8
  %60 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 0, i32 1
  store i32 %26, i32* %60, align 8
  %61 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 0, i32 2
  %62 = bitcast [4 x i8]* %61 to i32*
  store i32 -1431655766, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 1, i32 0
  store %"class.skvm::Builder"* %35, %"class.skvm::Builder"** %63, align 8
  %64 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 1, i32 1
  store i32 %36, i32* %64, align 8
  %65 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 1, i32 2
  %66 = bitcast [4 x i8]* %65 to i32*
  store i32 -1431655766, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 2, i32 0
  store %"class.skvm::Builder"* %45, %"class.skvm::Builder"** %67, align 8
  %68 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 2, i32 1
  store i32 %46, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 2, i32 2
  %70 = bitcast [4 x i8]* %69 to i32*
  store i32 -1431655766, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %55, %"class.skvm::Builder"** %71, align 8
  %72 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 3, i32 1
  store i32 %56, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 3, i32 2
  %74 = bitcast [4 x i8]* %73 to i32*
  store i32 -1431655766, i32* %74, align 4
  %75 = getelementptr inbounds %class.anon.59, %class.anon.59* %0, i64 0, i32 5
  %76 = load %"struct.(anonymous namespace)::Params"*, %"struct.(anonymous namespace)::Params"** %75, align 8
  %77 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %76, i64 0, i32 6
  %78 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %77, align 8
  %79 = getelementptr inbounds %"struct.(anonymous namespace)::Params", %"struct.(anonymous namespace)::Params"* %76, i64 0, i32 2
  %80 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %13, align 8
  %81 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %80, align 8
  %82 = getelementptr inbounds %class.anon.59, %class.anon.59* %0, i64 0, i32 6
  %83 = load %class.SkArenaAlloc**, %class.SkArenaAlloc*** %82, align 8
  %84 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %83, align 8
  call void @_ZNK12SkShaderBase7programEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* nonnull sret %5, %class.SkShaderBase* %10, %"class.skvm::Builder"* nonnull %3, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %6, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %4, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %7, %class.SkMatrixProvider* dereferenceable(112) %78, %class.SkMatrix* null, %class.SkColorInfo* dereferenceable(16) %79, %"struct.skvm::Uniforms"* %81, %class.SkArenaAlloc* %84) #13
  %85 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %5, i64 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, -1
  br i1 %87, label %115, label %88

88:                                               ; preds = %2
  %89 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %5, i64 0, i32 1, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, -1
  br i1 %91, label %115, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %5, i64 0, i32 2, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, -1
  br i1 %95, label %115, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %5, i64 0, i32 3, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, -1
  br i1 %99, label %115, label %100

100:                                              ; preds = %96
  %101 = call i64 @_ZNK4skvm7Builder4hashEv(%"class.skvm::Builder"* nonnull %3) #13
  %102 = bitcast [4 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #13
  %103 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 0
  %104 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 1
  %105 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 2
  %106 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 3
  %107 = load i32, i32* %85, align 8
  store i32 %107, i32* %103, align 16
  %108 = load i32, i32* %89, align 8
  store i32 %108, i32* %104, align 4
  %109 = load i32, i32* %93, align 8
  store i32 %109, i32* %105, align 8
  %110 = load i32, i32* %97, align 8
  store i32 %110, i32* %106, align 4
  %111 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %112 = call i32 %111(i8* nonnull %102, i64 16, i32 0) #13
  %113 = zext i32 %112 to i64
  %114 = xor i64 %101, %113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #13
  br label %119

115:                                              ; preds = %96, %2, %88, %92
  %116 = getelementptr inbounds %class.anon.59, %class.anon.59* %0, i64 0, i32 7
  %117 = load i8**, i8*** %116, align 8
  %118 = load i8*, i8** %117, align 8
  store i8 0, i8* %118, align 1
  br label %119

119:                                              ; preds = %115, %100
  %120 = phi i64 [ %114, %100 ], [ 0, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %57) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #13
  %121 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %3, i64 0, i32 2, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = icmp eq i32* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %119
  %125 = ptrtoint i32* %122 to i64
  %126 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %3, i64 0, i32 2, i32 0, i32 1
  %127 = bitcast i32** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = bitcast i32* %122 to i8*
  call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %124, %119
  %130 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %3, i64 0, i32 1, i32 0, i32 0
  %131 = load %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"** %130, align 8
  %132 = icmp eq %"struct.skvm::Instruction"* %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %129
  %134 = ptrtoint %"struct.skvm::Instruction"* %131 to i64
  %135 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %3, i64 0, i32 1, i32 0, i32 1
  %136 = bitcast %"struct.skvm::Instruction"** %135 to i64*
  store i64 %134, i64* %136, align 8
  %137 = bitcast %"struct.skvm::Instruction"* %131 to i8*
  call void @_ZdlPv(i8* %137) #14
  br label %138

138:                                              ; preds = %133, %129
  %139 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %140 = load %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"** %139, align 8
  store %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"** %139, align 8
  %141 = icmp eq %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* %140 to i8*
  call void @_ZdaPv(i8* %143) #14
  br label %144

144:                                              ; preds = %138, %142
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #13
  ret i64 %120
}

declare i64 @_ZNK4skvm7Builder4hashEv(%"class.skvm::Builder"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeIN12_GLOBAL__N_17BlitterEJRK8SkPixmapRK7SkPaintPS5_8SkIPoint22SkSimpleMatrixProvider5sk_spI8SkShaderEPbEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSH_ENUlPcE_8__invokeESQ_(i8*) #2 align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -321
  %3 = bitcast i8* %2 to %"class.(anonymous namespace)::Blitter"*
  tail call void @_ZN12_GLOBAL__N_17BlitterD2Ev(%"class.(anonymous namespace)::Blitter"* %3) #13
  ret i8* %2
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK12_GLOBAL__N_16Params12withCoverageENS_8CoverageE: argument 0"}
!5 = distinct !{!5, !"_ZNK12_GLOBAL__N_16Params12withCoverageENS_8CoverageE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4skvmL6premulENS_5ColorE: argument 0"}
!8 = distinct !{!8, !"_ZN4skvmL6premulENS_5ColorE"}
!9 = !{!10, !7}
!10 = distinct !{!10, !11, !"_ZN4skvm7Builder6premulENS_5ColorE: argument 0"}
!11 = distinct !{!11, !"_ZN4skvm7Builder6premulENS_5ColorE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4skvmL8unpremulENS_5ColorE: argument 0"}
!14 = distinct !{!14, !"_ZN4skvmL8unpremulENS_5ColorE"}
!15 = !{!16, !13}
!16 = distinct !{!16, !17, !"_ZN4skvm7Builder8unpremulENS_5ColorE: argument 0"}
!17 = distinct !{!17, !"_ZN4skvm7Builder8unpremulENS_5ColorE"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_Z10sk_make_spIN12_GLOBAL__N_112SpriteShaderEJRK8SkPixmapEE5sk_spIT_EDpOT0_: argument 0"}
!20 = distinct !{!20, !"_Z10sk_make_spIN12_GLOBAL__N_112SpriteShaderEJRK8SkPixmapEE5sk_spIT_EDpOT0_"}
!21 = distinct !{!21, !22, !"_ZN12_GLOBAL__N_116effective_paramsERK8SkPixmapPS1_7SkPaintRK16SkMatrixProvider5sk_spI8SkShaderE: argument 0"}
!22 = distinct !{!22, !"_ZN12_GLOBAL__N_116effective_paramsERK8SkPixmapPS1_7SkPaintRK16SkMatrixProvider5sk_spI8SkShaderE"}
!23 = !{!21}
!24 = !{!25, !21}
!25 = distinct !{!25, !26, !"_Z10sk_make_spIN12_GLOBAL__N_116PaintColorShaderEJbEE5sk_spIT_EDpOT0_: argument 0"}
!26 = distinct !{!26, !"_Z10sk_make_spIN12_GLOBAL__N_116PaintColorShaderEJbEE5sk_spIT_EDpOT0_"}
!27 = !{!28, !21}
!28 = distinct !{!28, !29, !"_Z10sk_make_spIN12_GLOBAL__N_115NoopColorFilterEJEE5sk_spIT_EDpOT0_: argument 0"}
!29 = distinct !{!29, !"_Z10sk_make_spIN12_GLOBAL__N_115NoopColorFilterEJEE5sk_spIT_EDpOT0_"}
!30 = !{!31, !21}
!31 = distinct !{!31, !32, !"_Z10sk_make_spI19SkColorFilterShaderJ5sk_spI8SkShaderEfS1_IN12_GLOBAL__N_115NoopColorFilterEEEES1_IT_EDpOT0_: argument 0"}
!32 = distinct !{!32, !"_Z10sk_make_spI19SkColorFilterShaderJ5sk_spI8SkShaderEfS1_IN12_GLOBAL__N_115NoopColorFilterEEEES1_IT_EDpOT0_"}
!33 = !{!34, !21}
!34 = distinct !{!34, !35, !"_Z10sk_make_spIN12_GLOBAL__N_112DitherShaderEJ5sk_spI8SkShaderEEES2_IT_EDpOT0_: argument 0"}
!35 = distinct !{!35, !"_Z10sk_make_spIN12_GLOBAL__N_112DitherShaderEJ5sk_spI8SkShaderEEES2_IT_EDpOT0_"}
!36 = !{!37, !39, !41, !21}
!37 = distinct !{!37, !38, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!38 = distinct !{!38, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!39 = distinct !{!39, !40, !"_ZNK11SkImageInfo13refColorSpaceEv: argument 0"}
!40 = distinct !{!40, !"_ZNK11SkImageInfo13refColorSpaceEv"}
!41 = distinct !{!41, !42, !"_ZNK8SkPixmap13refColorSpaceEv: argument 0"}
!42 = distinct !{!42, !"_ZNK8SkPixmap13refColorSpaceEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN12_GLOBAL__N_19cache_keyERKNS_6ParamsEPN4skvm8UniformsEP12SkArenaAllocPb: argument 0"}
!45 = distinct !{!45, !"_ZN12_GLOBAL__N_19cache_keyERKNS_6ParamsEPN4skvm8UniformsEP12SkArenaAllocPb"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN4skvmL6premulENS_5ColorE: argument 0"}
!48 = distinct !{!48, !"_ZN4skvmL6premulENS_5ColorE"}
!49 = !{!50, !47}
!50 = distinct !{!50, !51, !"_ZN4skvm7Builder6premulENS_5ColorE: argument 0"}
!51 = distinct !{!51, !"_ZN4skvm7Builder6premulENS_5ColorE"}
