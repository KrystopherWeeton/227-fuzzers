; ModuleID = '../../v8/src/libsampler/sampler.cc'
source_filename = "../../v8/src/libsampler/sampler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::base::LeakyObject" = type { %"struct.std::__1::aligned_storage<48, 8>::type" }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"struct.std::__1::aligned_storage<40, 8>::type" = type { [40 x i8] }
%struct.sigaction = type { %union.anon, %struct.__sigset_t, i32, void ()* }
%union.anon = type { void (i32)* }
%struct.__sigset_t = type { [16 x i64] }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8::sampler::AtomicGuard" = type <{ %"struct.std::__1::atomic"*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.v8::sampler::Sampler" = type { i32 (...)**, i8, i32, i32, %"class.v8::Isolate"*, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.14" }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::sampler::Sampler::PlatformData"* }
%"class.v8::sampler::Sampler::PlatformData" = type { i64 }
%"class.v8::sampler::SamplerManager" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", [7 x i8] }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::sampler::Sampler"**, %"class.v8::sampler::Sampler"**, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.v8::sampler::Sampler"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52", %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.23" }
%"struct.std::__1::pair.23" = type { i64, %"class.std::__1::vector" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.7"*, i8, [7 x i8] }>
%"class.std::__1::allocator.7" = type { i8 }
%"struct.v8::RegisterState" = type { i8*, i8*, i8*, i8*, %"class.std::__1::unique_ptr.25" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.v8::CalleeSavedRegisters"* }
%"struct.v8::CalleeSavedRegisters" = type opaque
%struct.siginfo_t = type { i32, i32, i32, i32, %union.anon.36 }
%union.anon.36 = type { %struct.anon.39, [80 x i8] }
%struct.anon.39 = type { i32, i32, i32, i64, i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i8 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }

$_ZN2v87sampler13SignalHandler20IncreaseSamplerCountEv = comdat any

$_ZN2v84base16LazyInstanceImplINS0_5MutexENS0_32StaticallyAllocatedInstanceTraitIS2_EENS0_21DefaultConstructTraitIS2_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS2_EEE12InitInstanceEPv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsImJRmS9_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@_ZZN2v87sampler14SamplerManager8instanceEvE8instance = internal global %"class.v8::base::LeakyObject" zeroinitializer, align 8
@_ZGVZN2v87sampler14SamplerManager8instanceEvE8instance = internal global i64 0, align 8
@_ZN2v87sampler13SignalHandler6mutex_E = hidden global { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" } { { { i8 } } zeroinitializer, [7 x i8] undef, %"struct.std::__1::aligned_storage<40, 8>::type" zeroinitializer }, align 8
@_ZN2v87sampler13SignalHandler13client_count_E = hidden local_unnamed_addr global i32 0, align 4
@_ZN2v87sampler13SignalHandler19old_signal_handler_E = hidden global %struct.sigaction zeroinitializer, align 8
@_ZN2v87sampler13SignalHandler25signal_handler_installed_E = hidden local_unnamed_addr global i8 0, align 1
@_ZTVN2v87sampler7SamplerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::sampler::Sampler"*)* @_ZN2v87sampler7SamplerD2Ev to i8*), i8* bitcast (void (%"class.v8::sampler::Sampler"*)* @_ZN2v87sampler7SamplerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8

@_ZN2v87sampler11AtomicGuardC1EPNSt3__16atomicIbEEb = hidden unnamed_addr alias void (%"class.v8::sampler::AtomicGuard"*, %"struct.std::__1::atomic"*, i1), void (%"class.v8::sampler::AtomicGuard"*, %"struct.std::__1::atomic"*, i1)* @_ZN2v87sampler11AtomicGuardC2EPNSt3__16atomicIbEEb
@_ZN2v87sampler11AtomicGuardD1Ev = hidden unnamed_addr alias void (%"class.v8::sampler::AtomicGuard"*), void (%"class.v8::sampler::AtomicGuard"*)* @_ZN2v87sampler11AtomicGuardD2Ev
@_ZN2v87sampler7SamplerD1Ev = hidden unnamed_addr alias void (%"class.v8::sampler::Sampler"*), void (%"class.v8::sampler::Sampler"*)* @_ZN2v87sampler7SamplerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v87sampler11AtomicGuardC2EPNSt3__16atomicIbEEb(%"class.v8::sampler::AtomicGuard"* nocapture, %"struct.std::__1::atomic"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::sampler::AtomicGuard", %"class.v8::sampler::AtomicGuard"* %0, i64 0, i32 0
  store %"struct.std::__1::atomic"* %1, %"struct.std::__1::atomic"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::sampler::AtomicGuard", %"class.v8::sampler::AtomicGuard"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %2, label %7, label %11

7:                                                ; preds = %3, %7
  %8 = cmpxchg i8* %6, i8 0, i8 1 seq_cst seq_cst
  %9 = extractvalue { i8, i1 } %8, 1
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %5, align 8
  br i1 %9, label %15, label %7

11:                                               ; preds = %3
  %12 = cmpxchg i8* %6, i8 0, i8 1 seq_cst seq_cst
  %13 = extractvalue { i8, i1 } %12, 1
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %5, align 8
  br label %15

15:                                               ; preds = %7, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v87sampler11AtomicGuardD2Ev(%"class.v8::sampler::AtomicGuard"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::sampler::AtomicGuard", %"class.v8::sampler::AtomicGuard"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::sampler::AtomicGuard"* %0 to %"struct.std::__1::__atomic_base"**
  %7 = load %"struct.std::__1::__atomic_base"*, %"struct.std::__1::__atomic_base"** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__atomic_base", %"struct.std::__1::__atomic_base"* %7, i64 0, i32 0, i32 0, i32 0
  store atomic i8 0, i8* %8 seq_cst, align 1
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v87sampler11AtomicGuard10is_successEv(%"class.v8::sampler::AtomicGuard"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::sampler::AtomicGuard", %"class.v8::sampler::AtomicGuard"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v87sampler14SamplerManager10AddSamplerEPNS0_7SamplerE(%"class.v8::sampler::SamplerManager"*, %"class.v8::sampler::Sampler"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = getelementptr inbounds %"class.v8::sampler::SamplerManager", %"class.v8::sampler::SamplerManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  br label %6

6:                                                ; preds = %6, %2
  %7 = cmpxchg i8* %5, i8 0, i8 1 seq_cst seq_cst
  %8 = extractvalue { i8, i1 } %7, 1
  br i1 %8, label %9, label %6

9:                                                ; preds = %6
  %10 = ptrtoint %"class.v8::sampler::Sampler"* %1 to i64
  %11 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %13 = load %"class.v8::sampler::Sampler::PlatformData"*, %"class.v8::sampler::Sampler::PlatformData"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::sampler::Sampler::PlatformData", %"class.v8::sampler::Sampler::PlatformData"* %13, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %3, align 8
  %16 = getelementptr inbounds %"class.v8::sampler::SamplerManager", %"class.v8::sampler::SamplerManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %82, label %19

19:                                               ; preds = %9
  %20 = tail call i64 @llvm.ctpop.i64(i64 %17) #16, !range !3
  %21 = icmp ugt i64 %20, 1
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = add i64 %17, -1
  %24 = and i64 %23, %15
  br label %29

25:                                               ; preds = %19
  %26 = icmp ult i64 %15, %17
  br i1 %26, label %29, label %27

27:                                               ; preds = %25
  %28 = urem i64 %15, %17
  br label %29

29:                                               ; preds = %27, %25, %22
  %30 = phi i64 [ %24, %22 ], [ %28, %27 ], [ %15, %25 ]
  %31 = getelementptr inbounds %"class.v8::sampler::SamplerManager", %"class.v8::sampler::SamplerManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, i64 %30
  %34 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %34, null
  br i1 %35, label %82, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %82, label %40

40:                                               ; preds = %36
  %41 = add i64 %17, -1
  br i1 %21, label %42, label %64

42:                                               ; preds = %40, %60
  %43 = phi %"struct.std::__1::__hash_node_base"* [ %62, %60 ], [ %38, %40 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 1
  %45 = bitcast %"struct.std::__1::__hash_node_base"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, %15
  br i1 %47, label %55, label %48

48:                                               ; preds = %42
  %49 = icmp ult i64 %46, %17
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = urem i64 %46, %17
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi i64 [ %51, %50 ], [ %46, %48 ]
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %60, label %82

55:                                               ; preds = %42
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 2
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %15
  br i1 %59, label %104, label %60

60:                                               ; preds = %55, %52
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %61, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base"* %62, null
  br i1 %63, label %82, label %42

64:                                               ; preds = %40, %78
  %65 = phi %"struct.std::__1::__hash_node_base"* [ %80, %78 ], [ %38, %40 ]
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %65, i64 1
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %15
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = and i64 %68, %41
  %72 = icmp eq i64 %71, %30
  br i1 %72, label %78, label %82

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %65, i64 2
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, %15
  br i1 %77, label %104, label %78

78:                                               ; preds = %73, %70
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %65, i64 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %79, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node_base"* %80, null
  br i1 %81, label %82, label %64

82:                                               ; preds = %70, %78, %52, %60, %29, %9, %36
  %83 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #16
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %86 = bitcast %"class.v8::sampler::Sampler"*** %84 to i64*
  %87 = bitcast %"class.std::__1::vector"* %4 to i64*
  %88 = bitcast %"class.v8::sampler::Sampler"*** %85 to i64*
  %89 = tail call i8* @_Znwm(i64 8) #17
  %90 = getelementptr inbounds i8, i8* %89, i64 8
  %91 = ptrtoint i8* %90 to i64
  %92 = bitcast i8* %89 to i64*
  store i64 %10, i64* %92, align 8
  %93 = ptrtoint i8* %89 to i64
  store i64 %93, i64* %87, align 8
  store i64 %91, i64* %86, align 8
  store i64 %91, i64* %88, align 8
  %94 = getelementptr inbounds %"class.v8::sampler::SamplerManager", %"class.v8::sampler::SamplerManager"* %0, i64 0, i32 0, i32 0
  %95 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsImJRmS9_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %94, i64* nonnull dereferenceable(8) %3, i64* nonnull dereferenceable(8) %3, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #16
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %97 = load %"class.v8::sampler::Sampler"**, %"class.v8::sampler::Sampler"*** %96, align 8
  %98 = icmp eq %"class.v8::sampler::Sampler"** %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %82
  %100 = ptrtoint %"class.v8::sampler::Sampler"** %97 to i64
  %101 = bitcast %"class.v8::sampler::Sampler"*** %84 to i64*
  store i64 %100, i64* %101, align 8
  %102 = bitcast %"class.v8::sampler::Sampler"** %97 to i8*
  call void @_ZdlPv(i8* %102) #17
  br label %103

103:                                              ; preds = %82, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #16
  br label %190

104:                                              ; preds = %73, %55
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %43, %55 ], [ %65, %73 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 3
  %107 = bitcast %"struct.std::__1::__hash_node_base"* %106 to %"class.v8::sampler::Sampler"***
  %108 = load %"class.v8::sampler::Sampler"**, %"class.v8::sampler::Sampler"*** %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 4
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to %"class.v8::sampler::Sampler"***
  %111 = load %"class.v8::sampler::Sampler"**, %"class.v8::sampler::Sampler"*** %110, align 8
  %112 = icmp eq %"class.v8::sampler::Sampler"** %108, %111
  %113 = ptrtoint %"class.v8::sampler::Sampler"** %108 to i64
  br i1 %112, label %121, label %114

114:                                              ; preds = %104, %118
  %115 = phi %"class.v8::sampler::Sampler"** [ %119, %118 ], [ %108, %104 ]
  %116 = load %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %115, align 8
  %117 = icmp eq %"class.v8::sampler::Sampler"* %116, %1
  br i1 %117, label %121, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %115, i64 1
  %120 = icmp eq %"class.v8::sampler::Sampler"** %119, %111
  br i1 %120, label %124, label %114

121:                                              ; preds = %114, %104
  %122 = phi %"class.v8::sampler::Sampler"** [ %108, %104 ], [ %115, %114 ]
  %123 = icmp eq %"class.v8::sampler::Sampler"** %122, %111
  br i1 %123, label %124, label %190

124:                                              ; preds = %118, %121
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 5
  %126 = bitcast %"struct.std::__1::__hash_node_base"* %125 to %"class.v8::sampler::Sampler"***
  %127 = load %"class.v8::sampler::Sampler"**, %"class.v8::sampler::Sampler"*** %126, align 8
  %128 = icmp eq %"class.v8::sampler::Sampler"** %111, %127
  %129 = ptrtoint %"class.v8::sampler::Sampler"** %127 to i64
  br i1 %128, label %135, label %130

130:                                              ; preds = %124
  %131 = bitcast %"class.v8::sampler::Sampler"** %111 to i64*
  store i64 %10, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %111, i64 1
  %133 = ptrtoint %"class.v8::sampler::Sampler"** %132 to i64
  %134 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i64*
  store i64 %133, i64* %134, align 8
  br label %190

135:                                              ; preds = %124
  %136 = ptrtoint %"class.v8::sampler::Sampler"** %111 to i64
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i64*
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i64*
  %139 = sub i64 %136, %113
  %140 = ashr exact i64 %139, 3
  %141 = add nsw i64 %140, 1
  %142 = icmp ugt i64 %141, 2305843009213693951
  br i1 %142, label %143, label %145

143:                                              ; preds = %135
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %106 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %144) #18
  unreachable

145:                                              ; preds = %135
  %146 = bitcast %"struct.std::__1::__hash_node_base"* %125 to i64*
  %147 = sub i64 %129, %113
  %148 = ashr exact i64 %147, 3
  %149 = icmp ult i64 %148, 1152921504606846975
  br i1 %149, label %150, label %158

150:                                              ; preds = %145
  %151 = ashr exact i64 %147, 2
  %152 = icmp ult i64 %151, %141
  %153 = select i1 %152, i64 %141, i64 %151
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %163, label %155

155:                                              ; preds = %150
  %156 = icmp ugt i64 %153, 2305843009213693951
  br i1 %156, label %157, label %158

157:                                              ; preds = %155
  tail call void @abort() #18
  unreachable

158:                                              ; preds = %155, %145
  %159 = phi i64 [ %153, %155 ], [ 2305843009213693951, %145 ]
  %160 = shl i64 %159, 3
  %161 = tail call i8* @_Znwm(i64 %160) #17
  %162 = bitcast i8* %161 to %"class.v8::sampler::Sampler"**
  br label %163

163:                                              ; preds = %158, %150
  %164 = phi i64 [ %159, %158 ], [ 0, %150 ]
  %165 = phi %"class.v8::sampler::Sampler"** [ %162, %158 ], [ null, %150 ]
  %166 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %165, i64 %140
  %167 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %165, i64 %164
  %168 = ptrtoint %"class.v8::sampler::Sampler"** %167 to i64
  %169 = bitcast %"class.v8::sampler::Sampler"** %166 to i64*
  store i64 %10, i64* %169, align 8
  %170 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %166, i64 1
  %171 = ptrtoint %"class.v8::sampler::Sampler"** %170 to i64
  %172 = load %"class.v8::sampler::Sampler"**, %"class.v8::sampler::Sampler"*** %107, align 8
  %173 = load i64, i64* %137, align 8
  %174 = ptrtoint %"class.v8::sampler::Sampler"** %172 to i64
  %175 = sub i64 %173, %174
  %176 = ashr exact i64 %175, 3
  %177 = sub nsw i64 0, %176
  %178 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %166, i64 %177
  %179 = ptrtoint %"class.v8::sampler::Sampler"** %178 to i64
  %180 = icmp sgt i64 %175, 0
  br i1 %180, label %181, label %185

181:                                              ; preds = %163
  %182 = bitcast %"class.v8::sampler::Sampler"** %178 to i8*
  %183 = bitcast %"class.v8::sampler::Sampler"** %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 %175, i1 false) #16
  %184 = load %"class.v8::sampler::Sampler"**, %"class.v8::sampler::Sampler"*** %107, align 8
  br label %185

185:                                              ; preds = %181, %163
  %186 = phi %"class.v8::sampler::Sampler"** [ %172, %163 ], [ %184, %181 ]
  store i64 %179, i64* %138, align 8
  store i64 %171, i64* %137, align 8
  store i64 %168, i64* %146, align 8
  %187 = icmp eq %"class.v8::sampler::Sampler"** %186, null
  br i1 %187, label %190, label %188

188:                                              ; preds = %185
  %189 = bitcast %"class.v8::sampler::Sampler"** %186 to i8*
  tail call void @_ZdlPv(i8* %189) #17
  br label %190

190:                                              ; preds = %121, %130, %185, %188, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  store atomic i8 0, i8* %5 seq_cst, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v87sampler14SamplerManager13RemoveSamplerEPNS0_7SamplerE(%"class.v8::sampler::SamplerManager"*, %"class.v8::sampler::Sampler"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.50", align 8
  %4 = getelementptr inbounds %"class.v8::sampler::SamplerManager", %"class.v8::sampler::SamplerManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  br label %5

5:                                                ; preds = %5, %2
  %6 = cmpxchg i8* %4, i8 0, i8 1 seq_cst seq_cst
  %7 = extractvalue { i8, i1 } %6, 1
  br i1 %7, label %8, label %5

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %10 = load %"class.v8::sampler::Sampler::PlatformData"*, %"class.v8::sampler::Sampler::PlatformData"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::sampler::Sampler::PlatformData", %"class.v8::sampler::Sampler::PlatformData"* %10, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::sampler::SamplerManager", %"class.v8::sampler::SamplerManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %79, label %16

16:                                               ; preds = %8
  %17 = tail call i64 @llvm.ctpop.i64(i64 %14) #16, !range !3
  %18 = icmp ugt i64 %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = add i64 %14, -1
  %21 = and i64 %20, %12
  br label %26

22:                                               ; preds = %16
  %23 = icmp ult i64 %12, %14
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = urem i64 %12, %14
  br label %26

26:                                               ; preds = %24, %22, %19
  %27 = phi i64 [ %21, %19 ], [ %25, %24 ], [ %12, %22 ]
  %28 = getelementptr inbounds %"class.v8::sampler::SamplerManager", %"class.v8::sampler::SamplerManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, i64 %27
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %79, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %79, label %37

37:                                               ; preds = %33
  %38 = add i64 %14, -1
  br i1 %18, label %39, label %61

39:                                               ; preds = %37, %57
  %40 = phi %"struct.std::__1::__hash_node_base"* [ %59, %57 ], [ %35, %37 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 1
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, %12
  br i1 %44, label %52, label %45

45:                                               ; preds = %39
  %46 = icmp ult i64 %43, %14
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %43, %14
  br label %49

49:                                               ; preds = %47, %45
  %50 = phi i64 [ %48, %47 ], [ %43, %45 ]
  %51 = icmp eq i64 %50, %27
  br i1 %51, label %57, label %79

52:                                               ; preds = %39
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 2
  %54 = bitcast %"struct.std::__1::__hash_node_base"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, %12
  br i1 %56, label %79, label %57

57:                                               ; preds = %52, %49
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %58, align 8
  %60 = icmp eq %"struct.std::__1::__hash_node_base"* %59, null
  br i1 %60, label %79, label %39

61:                                               ; preds = %37, %75
  %62 = phi %"struct.std::__1::__hash_node_base"* [ %77, %75 ], [ %35, %37 ]
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %62, i64 1
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, %12
  br i1 %66, label %70, label %67

67:                                               ; preds = %61
  %68 = and i64 %65, %38
  %69 = icmp eq i64 %68, %27
  br i1 %69, label %75, label %79

70:                                               ; preds = %61
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %62, i64 2
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, %12
  br i1 %74, label %79, label %75

75:                                               ; preds = %70, %67
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %62, i64 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %76, align 8
  %78 = icmp eq %"struct.std::__1::__hash_node_base"* %77, null
  br i1 %78, label %79, label %61

79:                                               ; preds = %67, %70, %75, %49, %52, %57, %8, %26, %33
  %80 = phi %"struct.std::__1::__hash_node_base"* [ null, %26 ], [ null, %8 ], [ null, %33 ], [ %40, %52 ], [ null, %57 ], [ null, %49 ], [ %62, %70 ], [ null, %75 ], [ null, %67 ]
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %82 = bitcast %"struct.std::__1::__hash_node_base"* %81 to %"class.v8::sampler::Sampler"***
  %83 = load %"class.v8::sampler::Sampler"**, %"class.v8::sampler::Sampler"*** %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 4
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %84 to %"class.v8::sampler::Sampler"***
  %86 = load %"class.v8::sampler::Sampler"**, %"class.v8::sampler::Sampler"*** %85, align 8
  %87 = icmp eq %"class.v8::sampler::Sampler"** %83, %86
  br i1 %87, label %95, label %88

88:                                               ; preds = %79, %92
  %89 = phi %"class.v8::sampler::Sampler"** [ %93, %92 ], [ %83, %79 ]
  %90 = load %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %89, align 8
  %91 = icmp eq %"class.v8::sampler::Sampler"* %90, %1
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %89, i64 1
  %94 = icmp eq %"class.v8::sampler::Sampler"** %93, %86
  br i1 %94, label %157, label %88

95:                                               ; preds = %88, %79
  %96 = phi %"class.v8::sampler::Sampler"** [ %83, %79 ], [ %89, %88 ]
  %97 = ptrtoint %"class.v8::sampler::Sampler"** %96 to i64
  %98 = icmp eq %"class.v8::sampler::Sampler"** %96, %86
  br i1 %98, label %157, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %96, i64 1
  %101 = icmp eq %"class.v8::sampler::Sampler"** %100, %86
  br i1 %101, label %152, label %102

102:                                              ; preds = %99
  %103 = getelementptr %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %86, i64 -2
  %104 = ptrtoint %"class.v8::sampler::Sampler"** %103 to i64
  %105 = sub i64 %104, %97
  %106 = lshr i64 %105, 3
  %107 = add nuw nsw i64 %106, 1
  %108 = and i64 %107, 3
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %127, label %110

110:                                              ; preds = %102, %122
  %111 = phi %"class.v8::sampler::Sampler"** [ %124, %122 ], [ %100, %102 ]
  %112 = phi i64 [ %123, %122 ], [ %97, %102 ]
  %113 = phi i64 [ %125, %122 ], [ %108, %102 ]
  %114 = load %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %111, align 8
  %115 = icmp eq %"class.v8::sampler::Sampler"* %114, %1
  br i1 %115, label %122, label %116

116:                                              ; preds = %110
  %117 = ptrtoint %"class.v8::sampler::Sampler"* %114 to i64
  %118 = inttoptr i64 %112 to %"class.v8::sampler::Sampler"**
  %119 = inttoptr i64 %112 to i64*
  store i64 %117, i64* %119, align 8
  %120 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %118, i64 1
  %121 = ptrtoint %"class.v8::sampler::Sampler"** %120 to i64
  br label %122

122:                                              ; preds = %116, %110
  %123 = phi i64 [ %112, %110 ], [ %121, %116 ]
  %124 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %111, i64 1
  %125 = add i64 %113, -1
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %110, !llvm.loop !4

127:                                              ; preds = %122, %102
  %128 = phi i64 [ undef, %102 ], [ %123, %122 ]
  %129 = phi %"class.v8::sampler::Sampler"** [ %100, %102 ], [ %124, %122 ]
  %130 = phi i64 [ %97, %102 ], [ %123, %122 ]
  %131 = icmp ult i64 %105, 24
  br i1 %131, label %148, label %132

132:                                              ; preds = %127, %212
  %133 = phi %"class.v8::sampler::Sampler"** [ %214, %212 ], [ %129, %127 ]
  %134 = phi i64 [ %213, %212 ], [ %130, %127 ]
  %135 = load %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %133, align 8
  %136 = icmp eq %"class.v8::sampler::Sampler"* %135, %1
  br i1 %136, label %143, label %137

137:                                              ; preds = %132
  %138 = ptrtoint %"class.v8::sampler::Sampler"* %135 to i64
  %139 = inttoptr i64 %134 to %"class.v8::sampler::Sampler"**
  %140 = inttoptr i64 %134 to i64*
  store i64 %138, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %139, i64 1
  %142 = ptrtoint %"class.v8::sampler::Sampler"** %141 to i64
  br label %143

143:                                              ; preds = %137, %132
  %144 = phi i64 [ %134, %132 ], [ %142, %137 ]
  %145 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %133, i64 1
  %146 = load %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %145, align 8
  %147 = icmp eq %"class.v8::sampler::Sampler"* %146, %1
  br i1 %147, label %190, label %184

148:                                              ; preds = %212, %127
  %149 = phi i64 [ %128, %127 ], [ %213, %212 ]
  %150 = inttoptr i64 %149 to %"class.v8::sampler::Sampler"**
  %151 = load %"class.v8::sampler::Sampler"**, %"class.v8::sampler::Sampler"*** %85, align 8
  br label %152

152:                                              ; preds = %148, %99
  %153 = phi %"class.v8::sampler::Sampler"** [ %86, %99 ], [ %151, %148 ]
  %154 = phi %"class.v8::sampler::Sampler"** [ %96, %99 ], [ %150, %148 ]
  %155 = icmp eq %"class.v8::sampler::Sampler"** %154, %153
  br i1 %155, label %157, label %156

156:                                              ; preds = %152
  store %"class.v8::sampler::Sampler"** %154, %"class.v8::sampler::Sampler"*** %85, align 8
  br label %157

157:                                              ; preds = %92, %95, %152, %156
  %158 = phi %"class.v8::sampler::Sampler"** [ %153, %152 ], [ %154, %156 ], [ %86, %95 ], [ %86, %92 ]
  %159 = load %"class.v8::sampler::Sampler"**, %"class.v8::sampler::Sampler"*** %82, align 8
  %160 = icmp eq %"class.v8::sampler::Sampler"** %159, %158
  br i1 %160, label %161, label %183

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.v8::sampler::SamplerManager", %"class.v8::sampler::SamplerManager"* %0, i64 0, i32 0, i32 0
  %163 = bitcast %"class.std::__1::unique_ptr.50"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #16
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::unique_ptr.50"* nonnull sret %3, %"class.std::__1::__hash_table"* %162, %"struct.std::__1::__hash_node_base"* %80) #16
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %3, i64 0, i32 0, i32 0, i32 0
  %165 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %164, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %164, align 8
  %166 = icmp eq %"struct.std::__1::__hash_node"* %165, null
  br i1 %166, label %182, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %169 = load i8, i8* %168, align 8, !range !2
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %180, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %165, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %173 = load %"class.v8::sampler::Sampler"**, %"class.v8::sampler::Sampler"*** %172, align 8
  %174 = icmp eq %"class.v8::sampler::Sampler"** %173, null
  br i1 %174, label %180, label %175

175:                                              ; preds = %171
  %176 = ptrtoint %"class.v8::sampler::Sampler"** %173 to i64
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %165, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %178 = bitcast %"class.v8::sampler::Sampler"*** %177 to i64*
  store i64 %176, i64* %178, align 8
  %179 = bitcast %"class.v8::sampler::Sampler"** %173 to i8*
  call void @_ZdlPv(i8* %179) #17
  br label %180

180:                                              ; preds = %175, %171, %167
  %181 = bitcast %"struct.std::__1::__hash_node"* %165 to i8*
  call void @_ZdlPv(i8* %181) #17
  br label %182

182:                                              ; preds = %161, %180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #16
  br label %183

183:                                              ; preds = %182, %157
  store atomic i8 0, i8* %4 seq_cst, align 1
  ret void

184:                                              ; preds = %143
  %185 = ptrtoint %"class.v8::sampler::Sampler"* %146 to i64
  %186 = inttoptr i64 %144 to %"class.v8::sampler::Sampler"**
  %187 = inttoptr i64 %144 to i64*
  store i64 %185, i64* %187, align 8
  %188 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %186, i64 1
  %189 = ptrtoint %"class.v8::sampler::Sampler"** %188 to i64
  br label %190

190:                                              ; preds = %184, %143
  %191 = phi i64 [ %144, %143 ], [ %189, %184 ]
  %192 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %133, i64 2
  %193 = load %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %192, align 8
  %194 = icmp eq %"class.v8::sampler::Sampler"* %193, %1
  br i1 %194, label %201, label %195

195:                                              ; preds = %190
  %196 = ptrtoint %"class.v8::sampler::Sampler"* %193 to i64
  %197 = inttoptr i64 %191 to %"class.v8::sampler::Sampler"**
  %198 = inttoptr i64 %191 to i64*
  store i64 %196, i64* %198, align 8
  %199 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %197, i64 1
  %200 = ptrtoint %"class.v8::sampler::Sampler"** %199 to i64
  br label %201

201:                                              ; preds = %195, %190
  %202 = phi i64 [ %191, %190 ], [ %200, %195 ]
  %203 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %133, i64 3
  %204 = load %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %203, align 8
  %205 = icmp eq %"class.v8::sampler::Sampler"* %204, %1
  br i1 %205, label %212, label %206

206:                                              ; preds = %201
  %207 = ptrtoint %"class.v8::sampler::Sampler"* %204 to i64
  %208 = inttoptr i64 %202 to %"class.v8::sampler::Sampler"**
  %209 = inttoptr i64 %202 to i64*
  store i64 %207, i64* %209, align 8
  %210 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %208, i64 1
  %211 = ptrtoint %"class.v8::sampler::Sampler"** %210 to i64
  br label %212

212:                                              ; preds = %206, %201
  %213 = phi i64 [ %202, %201 ], [ %211, %206 ]
  %214 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %133, i64 4
  %215 = icmp eq %"class.v8::sampler::Sampler"** %214, %86
  br i1 %215, label %148, label %132
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v87sampler14SamplerManager8DoSampleERKNS_13RegisterStateE(%"class.v8::sampler::SamplerManager"*, %"struct.v8::RegisterState"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::sampler::SamplerManager", %"class.v8::sampler::SamplerManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = cmpxchg i8* %3, i8 0, i8 1 seq_cst seq_cst
  %5 = extractvalue { i8, i1 } %4, 1
  br i1 %5, label %6, label %105

6:                                                ; preds = %2
  %7 = tail call i64 @pthread_self() #19
  %8 = getelementptr inbounds %"class.v8::sampler::SamplerManager", %"class.v8::sampler::SamplerManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %104, label %11

11:                                               ; preds = %6
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #16, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ult i64 %7, %9
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.v8::sampler::SamplerManager", %"class.v8::sampler::SamplerManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %104, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %104, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br i1 %13, label %34, label %56

34:                                               ; preds = %32, %52
  %35 = phi %"struct.std::__1::__hash_node_base"* [ %54, %52 ], [ %30, %32 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %47, label %40

40:                                               ; preds = %34
  %41 = icmp ult i64 %38, %9
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %38, %9
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i64 [ %43, %42 ], [ %38, %40 ]
  %46 = icmp eq i64 %45, %22
  br i1 %46, label %52, label %104

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %7
  br i1 %51, label %74, label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %104, label %34

56:                                               ; preds = %32, %70
  %57 = phi %"struct.std::__1::__hash_node_base"* [ %72, %70 ], [ %30, %32 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %7
  br i1 %61, label %65, label %62

62:                                               ; preds = %56
  %63 = and i64 %60, %33
  %64 = icmp eq i64 %63, %22
  br i1 %64, label %70, label %104

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %7
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base"* %72, null
  br i1 %73, label %104, label %56

74:                                               ; preds = %65, %47
  %75 = phi %"struct.std::__1::__hash_node_base"* [ %35, %47 ], [ %57, %65 ]
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %75, i64 3
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %76 to %"class.v8::sampler::Sampler"***
  %78 = load %"class.v8::sampler::Sampler"**, %"class.v8::sampler::Sampler"*** %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %75, i64 4
  %80 = bitcast %"struct.std::__1::__hash_node_base"* %79 to %"class.v8::sampler::Sampler"***
  %81 = load %"class.v8::sampler::Sampler"**, %"class.v8::sampler::Sampler"*** %80, align 8
  %82 = icmp eq %"class.v8::sampler::Sampler"** %78, %81
  br i1 %82, label %104, label %83

83:                                               ; preds = %74, %101
  %84 = phi %"class.v8::sampler::Sampler"** [ %102, %101 ], [ %78, %74 ]
  %85 = load %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %84, align 8
  %86 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %85, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw xchg i8* %86, i8 0 monotonic
  %88 = and i8 %87, 1
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %101, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %85, i64 0, i32 4
  %92 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %91, align 8
  %93 = icmp eq %"class.v8::Isolate"* %92, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %90
  %95 = tail call zeroext i1 @_ZN2v87Isolate7IsInUseEv(%"class.v8::Isolate"* nonnull %92) #16
  br i1 %95, label %96, label %101

96:                                               ; preds = %94
  %97 = bitcast %"class.v8::sampler::Sampler"* %85 to void (%"class.v8::sampler::Sampler"*, %"struct.v8::RegisterState"*)***
  %98 = load void (%"class.v8::sampler::Sampler"*, %"struct.v8::RegisterState"*)**, void (%"class.v8::sampler::Sampler"*, %"struct.v8::RegisterState"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.v8::sampler::Sampler"*, %"struct.v8::RegisterState"*)*, void (%"class.v8::sampler::Sampler"*, %"struct.v8::RegisterState"*)** %98, i64 2
  %100 = load void (%"class.v8::sampler::Sampler"*, %"struct.v8::RegisterState"*)*, void (%"class.v8::sampler::Sampler"*, %"struct.v8::RegisterState"*)** %99, align 8
  tail call void %100(%"class.v8::sampler::Sampler"* %85, %"struct.v8::RegisterState"* dereferenceable(40) %1) #16
  br label %101

101:                                              ; preds = %83, %94, %90, %96
  %102 = getelementptr inbounds %"class.v8::sampler::Sampler"*, %"class.v8::sampler::Sampler"** %84, i64 1
  %103 = icmp eq %"class.v8::sampler::Sampler"** %102, %81
  br i1 %103, label %104, label %83

104:                                              ; preds = %62, %70, %44, %52, %101, %74, %21, %6, %28
  store atomic i8 0, i8* %3 seq_cst, align 1
  br label %105

105:                                              ; preds = %2, %104
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @pthread_self() local_unnamed_addr #4

declare zeroext i1 @_ZN2v87Isolate7IsInUseEv(%"class.v8::Isolate"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::sampler::SamplerManager"* @_ZN2v87sampler14SamplerManager8instanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v87sampler14SamplerManager8instanceEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !6

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v87sampler14SamplerManager8instanceEvE8instance) #16
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance, i64 0, i32 0, i32 0, i64 0), i8 0, i64 48, i1 false) #16
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance, i64 0, i32 0, i32 0, i64 32) to i32*), align 8
  store i8 0, i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance, i64 0, i32 0, i32 0, i64 40), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v87sampler14SamplerManager8instanceEvE8instance) #16
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.v8::sampler::SamplerManager"* bitcast (%"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance to %"class.v8::sampler::SamplerManager"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v87sampler13SignalHandler20HandleProfilerSignalEiP9siginfo_tPv(i32, %struct.siginfo_t*, i8* nocapture readonly) #0 align 2 {
  %4 = alloca %"struct.v8::RegisterState", align 16
  %5 = icmp eq i32 %0, 27
  br i1 %5, label %6, label %25

6:                                                ; preds = %3
  %7 = bitcast %"struct.v8::RegisterState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #16
  call void @_ZN2v813RegisterStateC1Ev(%"struct.v8::RegisterState"* nonnull %4) #16
  %8 = getelementptr inbounds i8, i8* %2, i64 160
  %9 = bitcast i8* %8 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = shufflevector <2 x i64> %10, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %12 = bitcast %"struct.v8::RegisterState"* %4 to <2 x i64>*
  store <2 x i64> %11, <2 x i64>* %12, align 16
  %13 = getelementptr inbounds i8, i8* %2, i64 120
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.v8::RegisterState", %"struct.v8::RegisterState"* %4, i64 0, i32 2
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 16
  %18 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v87sampler14SamplerManager8instanceEvE8instance to i8*) acquire, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %24, !prof !6

20:                                               ; preds = %6
  %21 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v87sampler14SamplerManager8instanceEvE8instance) #16
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance, i64 0, i32 0, i32 0, i64 0), i8 0, i64 48, i1 false) #16
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance, i64 0, i32 0, i32 0, i64 32) to i32*), align 8
  store i8 0, i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance, i64 0, i32 0, i32 0, i64 40), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v87sampler14SamplerManager8instanceEvE8instance) #16
  br label %24

24:                                               ; preds = %6, %20, %23
  call void @_ZN2v87sampler14SamplerManager8DoSampleERKNS_13RegisterStateE(%"class.v8::sampler::SamplerManager"* bitcast (%"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance to %"class.v8::sampler::SamplerManager"*), %"struct.v8::RegisterState"* nonnull dereferenceable(40) %4)
  call void @_ZN2v813RegisterStateD1Ev(%"struct.v8::RegisterState"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #16
  br label %25

25:                                               ; preds = %3, %24
  ret void
}

declare void @_ZN2v813RegisterStateC1Ev(%"struct.v8::RegisterState"*) unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v87sampler13SignalHandler17FillRegisterStateEPvPNS_13RegisterStateE(i8* nocapture readonly, %"struct.v8::RegisterState"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds i8, i8* %0, i64 168
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.v8::RegisterState"* %1 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 160
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.v8::RegisterState", %"struct.v8::RegisterState"* %1, i64 0, i32 1
  %11 = bitcast i8** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 120
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.v8::RegisterState", %"struct.v8::RegisterState"* %1, i64 0, i32 2
  %16 = bitcast i8** %15 to i64*
  store i64 %14, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v813RegisterStateD1Ev(%"struct.v8::RegisterState"*) unnamed_addr #7

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN2v87sampler7SamplerC2EPNS_7IsolateE(%"class.v8::sampler::Sampler"* nocapture, %"class.v8::Isolate"*) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v87sampler7SamplerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %0, i64 0, i32 2
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %0, i64 0, i32 3
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %0, i64 0, i32 4
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 1
  %10 = tail call i8* @_Znwm(i64 8) #17
  %11 = bitcast i8* %10 to i64*
  %12 = tail call i64 @pthread_self() #19
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %14 = bitcast %"class.v8::sampler::Sampler::PlatformData"** %13 to i8**
  store i8* %10, i8** %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v87sampler7SamplerD2Ev(%"class.v8::sampler::Sampler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v87sampler7SamplerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.v8::sampler::Sampler::PlatformData"*, %"class.v8::sampler::Sampler::PlatformData"** %3, align 8
  store %"class.v8::sampler::Sampler::PlatformData"* null, %"class.v8::sampler::Sampler::PlatformData"** %3, align 8
  %5 = icmp eq %"class.v8::sampler::Sampler::PlatformData"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::sampler::Sampler::PlatformData"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v87sampler7SamplerD0Ev(%"class.v8::sampler::Sampler"* nocapture readnone) unnamed_addr #9 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v87sampler7Sampler5StartEv(%"class.v8::sampler::Sampler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %2 monotonic, align 1
  tail call void @_ZN2v87sampler13SignalHandler20IncreaseSamplerCountEv()
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v87sampler14SamplerManager8instanceEvE8instance to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !6

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v87sampler14SamplerManager8instanceEvE8instance) #16
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance, i64 0, i32 0, i32 0, i64 0), i8 0, i64 48, i1 false) #16
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance, i64 0, i32 0, i32 0, i64 32) to i32*), align 8
  store i8 0, i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance, i64 0, i32 0, i32 0, i64 40), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v87sampler14SamplerManager8instanceEvE8instance) #16
  br label %9

9:                                                ; preds = %1, %5, %8
  tail call void @_ZN2v87sampler14SamplerManager10AddSamplerEPNS0_7SamplerE(%"class.v8::sampler::SamplerManager"* bitcast (%"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance to %"class.v8::sampler::SamplerManager"*), %"class.v8::sampler::Sampler"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v87sampler13SignalHandler20IncreaseSamplerCountEv() local_unnamed_addr #0 comdat align 2 {
  %1 = alloca %struct.sigaction, align 8
  %2 = alloca %"class.std::__1::function", align 8
  %3 = bitcast %"class.std::__1::function"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #16
  %4 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %5 = icmp eq i8 %4, 2
  br i1 %5, label %19, label %6

6:                                                ; preds = %0
  %7 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %7, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %8, align 8
  %9 = bitcast %"class.std::__1::function"* %2 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS0_5MutexENS0_32StaticallyAllocatedInstanceTraitIS2_EENS0_21DefaultConstructTraitIS2_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS2_EEE12InitInstanceEPv, void (i8*)** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast [8 x i8]* %10 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E, i64 0, i32 2, i32 0, i64 0), i8** %11, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.33"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E to %"struct.std::__1::atomic.33"*), %"class.std::__1::function"* nonnull %2) #16
  %12 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 1
  %14 = load void (i8*)*, void (i8*)** %13, align 8
  %15 = icmp eq void (i8*)* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void %14(i8* %18) #16
  br label %19

19:                                               ; preds = %0, %6, %16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #16
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* bitcast (%"struct.std::__1::aligned_storage<40, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E, i64 0, i32 2) to %"class.v8::base::Mutex"*)) #16
  %20 = load i32, i32* @_ZN2v87sampler13SignalHandler13client_count_E, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* @_ZN2v87sampler13SignalHandler13client_count_E, align 4
  %22 = icmp eq i32 %20, 0
  br i1 %22, label %23, label %32

23:                                               ; preds = %19
  %24 = bitcast %struct.sigaction* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %24) #16
  %25 = bitcast %struct.sigaction* %1 to void (i32, %struct.siginfo_t*, i8*)**
  store void (i32, %struct.siginfo_t*, i8*)* @_ZN2v87sampler13SignalHandler20HandleProfilerSignalEiP9siginfo_tPv, void (i32, %struct.siginfo_t*, i8*)** %25, align 8
  %26 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %1, i64 0, i32 1
  %27 = call i32 @sigemptyset(%struct.__sigset_t* %26) #16
  %28 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %1, i64 0, i32 2
  store i32 402653188, i32* %28, align 8
  %29 = call i32 @sigaction(i32 27, %struct.sigaction* nonnull %1, %struct.sigaction* nonnull @_ZN2v87sampler13SignalHandler19old_signal_handler_E) #16
  %30 = icmp eq i32 %29, 0
  %31 = zext i1 %30 to i8
  store i8 %31, i8* @_ZN2v87sampler13SignalHandler25signal_handler_installed_E, align 1
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %24) #16
  br label %32

32:                                               ; preds = %23, %19
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* bitcast (%"struct.std::__1::aligned_storage<40, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E, i64 0, i32 2) to %"class.v8::base::Mutex"*)) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v87sampler7Sampler4StopEv(%"class.v8::sampler::Sampler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function", align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v87sampler14SamplerManager8instanceEvE8instance to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !6

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v87sampler14SamplerManager8instanceEvE8instance) #16
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance, i64 0, i32 0, i32 0, i64 0), i8 0, i64 48, i1 false) #16
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance, i64 0, i32 0, i32 0, i64 32) to i32*), align 8
  store i8 0, i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance, i64 0, i32 0, i32 0, i64 40), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v87sampler14SamplerManager8instanceEvE8instance) #16
  br label %9

9:                                                ; preds = %1, %5, %8
  tail call void @_ZN2v87sampler14SamplerManager13RemoveSamplerEPNS0_7SamplerE(%"class.v8::sampler::SamplerManager"* bitcast (%"class.v8::base::LeakyObject"* @_ZZN2v87sampler14SamplerManager8instanceEvE8instance to %"class.v8::sampler::SamplerManager"*), %"class.v8::sampler::Sampler"* %0)
  %10 = bitcast %"class.std::__1::function"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #16
  %11 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %12 = icmp eq i8 %11, 2
  br i1 %12, label %26, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %14, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %15, align 8
  %16 = bitcast %"class.std::__1::function"* %2 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS0_5MutexENS0_32StaticallyAllocatedInstanceTraitIS2_EENS0_21DefaultConstructTraitIS2_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS2_EEE12InitInstanceEPv, void (i8*)** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast [8 x i8]* %17 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E, i64 0, i32 2, i32 0, i64 0), i8** %18, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.33"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E to %"struct.std::__1::atomic.33"*), %"class.std::__1::function"* nonnull %2) #16
  %19 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %19, i64 0, i32 1
  %21 = load void (i8*)*, void (i8*)** %20, align 8
  %22 = icmp eq void (i8*)* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void %21(i8* %25) #16
  br label %26

26:                                               ; preds = %23, %13, %9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #16
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* bitcast (%"struct.std::__1::aligned_storage<40, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E, i64 0, i32 2) to %"class.v8::base::Mutex"*)) #16
  %27 = load i32, i32* @_ZN2v87sampler13SignalHandler13client_count_E, align 4
  %28 = add nsw i32 %27, -1
  store i32 %28, i32* @_ZN2v87sampler13SignalHandler13client_count_E, align 4
  %29 = icmp ne i32 %28, 0
  %30 = load i8, i8* @_ZN2v87sampler13SignalHandler25signal_handler_installed_E, align 1
  %31 = icmp eq i8 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %35, label %33

33:                                               ; preds = %26
  %34 = call i32 @sigaction(i32 27, %struct.sigaction* nonnull @_ZN2v87sampler13SignalHandler19old_signal_handler_E, %struct.sigaction* null) #16
  store i8 0, i8* @_ZN2v87sampler13SignalHandler25signal_handler_installed_E, align 1
  br label %35

35:                                               ; preds = %26, %33
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* bitcast (%"struct.std::__1::aligned_storage<40, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E, i64 0, i32 2) to %"class.v8::base::Mutex"*)) #16
  %36 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store atomic i8 0, i8* %36 monotonic, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v87sampler7Sampler8DoSampleEv(%"class.v8::sampler::Sampler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function", align 8
  %3 = bitcast %"class.std::__1::function"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #16
  %4 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %5 = icmp eq i8 %4, 2
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %7, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %8, align 8
  %9 = bitcast %"class.std::__1::function"* %2 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS0_5MutexENS0_32StaticallyAllocatedInstanceTraitIS2_EENS0_21DefaultConstructTraitIS2_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS2_EEE12InitInstanceEPv, void (i8*)** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast [8 x i8]* %10 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E, i64 0, i32 2, i32 0, i64 0), i8** %11, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.33"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E to %"struct.std::__1::atomic.33"*), %"class.std::__1::function"* nonnull %2) #16
  %12 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 1
  %14 = load void (i8*)*, void (i8*)** %13, align 8
  %15 = icmp eq void (i8*)* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void %14(i8* %18) #16
  br label %19

19:                                               ; preds = %1, %6, %16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #16
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* bitcast (%"struct.std::__1::aligned_storage<40, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E, i64 0, i32 2) to %"class.v8::base::Mutex"*)) #16
  %20 = load i8, i8* @_ZN2v87sampler13SignalHandler25signal_handler_installed_E, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* bitcast (%"struct.std::__1::aligned_storage<40, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v87sampler13SignalHandler6mutex_E, i64 0, i32 2) to %"class.v8::base::Mutex"*)) #16
  br i1 %21, label %29, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %23 monotonic, align 1
  %24 = getelementptr inbounds %"class.v8::sampler::Sampler", %"class.v8::sampler::Sampler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %25 = load %"class.v8::sampler::Sampler::PlatformData"*, %"class.v8::sampler::Sampler::PlatformData"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::sampler::Sampler::PlatformData", %"class.v8::sampler::Sampler::PlatformData"* %25, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = call i32 @pthread_kill(i64 %27, i32 27) #16
  br label %29

29:                                               ; preds = %19, %22
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_kill(i64, i32) local_unnamed_addr #7

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base16LazyInstanceImplINS0_5MutexENS0_32StaticallyAllocatedInstanceTraitIS2_EENS0_21DefaultConstructTraitIS2_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS2_EEE12InitInstanceEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.v8::base::Mutex"*
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %2) #16
  ret void
}

declare void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.33"*, %"class.std::__1::function"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to void (i8*)**
  %3 = load void (i8*)*, void (i8*)** %2, align 8
  %4 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %5 = bitcast [8 x i8]* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void %3(i8* %6) #16
  ret void
}

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #5

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @sigemptyset(%struct.__sigset_t*) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) local_unnamed_addr #7

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsImJRmS9_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i64* dereferenceable(8), i64* dereferenceable(8), %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %68, label %9

9:                                                ; preds = %4
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #16, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ult i64 %5, %7
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %68, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br i1 %11, label %28, label %50

28:                                               ; preds = %26, %45
  %29 = phi %"struct.std::__1::__hash_node_base"* [ %31, %45 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %68, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = icmp ult i64 %36, %7
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %36, %7
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %36, %38 ]
  %44 = icmp eq i64 %43, %20
  br i1 %44, label %45, label %68

45:                                               ; preds = %42, %33
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %5
  br i1 %49, label %165, label %28

50:                                               ; preds = %26, %63
  %51 = phi %"struct.std::__1::__hash_node_base"* [ %53, %63 ], [ %24, %26 ]
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %5
  %60 = and i64 %58, %27
  %61 = icmp eq i64 %60, %20
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %68

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, %5
  br i1 %67, label %165, label %50

68:                                               ; preds = %55, %50, %42, %28, %19, %4
  %69 = phi i64 [ %20, %19 ], [ undef, %4 ], [ %20, %28 ], [ %20, %42 ], [ %20, %50 ], [ %20, %55 ]
  %70 = tail call i8* @_Znwm(i64 48) #17, !noalias !7
  %71 = getelementptr inbounds i8, i8* %70, i64 16
  %72 = bitcast i8* %71 to i64*
  %73 = load i64, i64* %2, align 8, !noalias !7
  store i64 %73, i64* %72, align 8, !noalias !7
  %74 = getelementptr inbounds i8, i8* %70, i64 24
  %75 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8, !noalias !7
  %77 = bitcast i8* %74 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %77, align 8, !noalias !7
  %78 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %79 = bitcast %"class.v8::sampler::Sampler"*** %78 to i64*
  %80 = load i64, i64* %79, align 8, !noalias !7
  %81 = getelementptr inbounds i8, i8* %70, i64 40
  %82 = bitcast i8* %81 to i64*
  store i64 %80, i64* %82, align 8, !noalias !7
  %83 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #16, !noalias !7
  %84 = getelementptr inbounds i8, i8* %70, i64 8
  %85 = bitcast i8* %84 to i64*
  store i64 %5, i64* %85, align 8, !noalias !7
  %86 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %86, align 8, !noalias !7
  %87 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 1
  %90 = uitofp i64 %89 to float
  %91 = uitofp i64 %7 to float
  %92 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %93 = load float, float* %92, align 4
  %94 = fmul float %93, %91
  %95 = fcmp olt float %94, %90
  %96 = or i1 %8, %95
  br i1 %96, label %97, label %120

97:                                               ; preds = %68
  %98 = shl i64 %7, 1
  %99 = icmp ult i64 %7, 3
  %100 = tail call i64 @llvm.ctpop.i64(i64 %7) #16, !range !3
  %101 = icmp ugt i64 %100, 1
  %102 = or i1 %99, %101
  %103 = zext i1 %102 to i64
  %104 = or i64 %98, %103
  %105 = fdiv float %90, %93
  %106 = tail call float @llvm.ceil.f32(float %105) #16
  %107 = fptoui float %106 to i64
  %108 = icmp ult i64 %104, %107
  %109 = select i1 %108, i64 %107, i64 %104
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %109)
  %110 = load i64, i64* %6, align 8
  %111 = tail call i64 @llvm.ctpop.i64(i64 %110) #16, !range !3
  %112 = icmp ugt i64 %111, 1
  br i1 %112, label %116, label %113

113:                                              ; preds = %97
  %114 = add i64 %110, -1
  %115 = and i64 %114, %5
  br label %120

116:                                              ; preds = %97
  %117 = icmp ult i64 %5, %110
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = urem i64 %5, %110
  br label %120

120:                                              ; preds = %118, %116, %113, %68
  %121 = phi i64 [ %7, %68 ], [ %110, %113 ], [ %110, %116 ], [ %110, %118 ]
  %122 = phi i64 [ %69, %68 ], [ %115, %113 ], [ %5, %116 ], [ %119, %118 ]
  %123 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %122
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %127, label %128, label %154

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %70 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i8**
  store i8* %70, i8** %133, align 8
  store %"struct.std::__1::__hash_node_base"* %129, %"struct.std::__1::__hash_node_base"** %125, align 8
  %134 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, align 8
  %135 = icmp eq %"struct.std::__1::__hash_node_base"* %134, null
  br i1 %135, label %161, label %136

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %134, i64 1
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = tail call i64 @llvm.ctpop.i64(i64 %121) #16, !range !3
  %141 = icmp ugt i64 %140, 1
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = add i64 %121, -1
  %144 = and i64 %139, %143
  br label %149

145:                                              ; preds = %136
  %146 = icmp ult i64 %139, %121
  br i1 %146, label %149, label %147

147:                                              ; preds = %145
  %148 = urem i64 %139, %121
  br label %149

149:                                              ; preds = %142, %145, %147
  %150 = phi i64 [ %144, %142 ], [ %148, %147 ], [ %139, %145 ]
  %151 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %123, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, i64 %150
  %153 = bitcast %"struct.std::__1::__hash_node_base"** %152 to i8**
  br label %159

154:                                              ; preds = %120
  %155 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast i8* %70 to i64*
  store i64 %156, i64* %157, align 8
  %158 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i8**
  br label %159

159:                                              ; preds = %149, %154
  %160 = phi i8** [ %158, %154 ], [ %153, %149 ]
  store i8* %70, i8** %160, align 8
  br label %161

161:                                              ; preds = %159, %128
  %162 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base"*
  %163 = load i64, i64* %87, align 8
  %164 = add i64 %163, 1
  store i64 %164, i64* %87, align 8
  br label %165

165:                                              ; preds = %63, %45, %161
  %166 = phi i8 [ 1, %161 ], [ 0, %45 ], [ 0, %63 ]
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %162, %161 ], [ %31, %45 ], [ %53, %63 ]
  %168 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %167, 0
  %169 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %168, i8 %166, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %169
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #18
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !10

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %103 to i64*
  %105 = load i64, i64* %130, align 8
  %106 = load i64, i64* %104, align 8
  %107 = icmp eq i64 %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i64*
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %146 to i64*
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base"* %134, %"struct.std::__1::__hash_node_base"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %155 to i64*
  %157 = load i64, i64* %147, align 8
  %158 = load i64, i64* %156, align 8
  %159 = icmp eq i64 %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %132, %"struct.std::__1::__hash_node_base"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %180, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #17
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #15

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::unique_ptr.50"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #16, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.4"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.50"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.7"** %98 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %30, %"class.std::__1::__compressed_pair.4"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!"branch_weights", i32 1, i32 1048575}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE21__construct_node_hashIRmJS9_EEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImNS_6vectorIPN2v87sampler7SamplerENS_9allocatorIS6_EEEEEENS_22__unordered_map_hasherImSA_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImSA_SF_SD_Lb1EEENS7_ISA_EEE21__construct_node_hashIRmJS9_EEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISQ_EEEEEEmOT_DpOT0_"}
!10 = distinct !{!10, !5}
