; ModuleID = '../../third_party/skia/src/gpu/GrDataUtils.cpp'
source_filename = "../../third_party/skia/src/gpu/GrDataUtils.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkTArray = type { i64*, i64 }
%struct.SkRGBA4f = type { float, float, float, float }
%"class.skia::tracing_internals::ScopedTracer" = type { %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data" }
%"struct.skia::tracing_internals::ScopedTracer::Data" = type { i8*, i8*, i64 }
%class.SkEventTracer = type { i32 (...)** }
%class.GrPixmap = type { %class.GrPixmapBase }
%class.GrPixmapBase = type { i8*, i64, %class.GrImageInfo, %class.sk_sp.12 }
%class.GrImageInfo = type { %class.GrColorInfo, %struct.SkISize }
%class.GrColorInfo = type { %class.sk_sp, %class.sk_sp.11, i32, i32 }
%class.sk_sp.11 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.1" }>
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.sk_sp.12 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.13, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.13 = type { %"struct.std::__1::atomic.1" }
%class.GrCPixmap = type { %class.GrPixmapBase.14 }
%class.GrPixmapBase.14 = type { i8*, i64, %class.GrImageInfo, %class.sk_sp.12 }
%class.GrSwizzle = type { i16 }
%class.SkTLazy = type { [100 x i8], %struct.SkColorSpaceXformSteps* }
%struct.SkRasterPipeline_MemoryCtx = type { i8*, i32 }
%class.SkRasterPipeline_ = type { %class.SkRasterPipeline, %class.SkSTArenaAlloc }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%class.SkSTArenaAlloc = type { %"struct.std::__1::array", %class.SkArenaAlloc.base, [4 x i8] }
%"struct.std::__1::array" = type { [256 x i8] }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.1", [4 x i8] }>
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.16, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.16 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.GrBackendFormat = type { i32, i8, %union.anon, i32, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>

$_ZN8GrPixmap8AllocateERK11GrImageInfo = comdat any

$_ZNK11GrImageInfo13makeColorTypeE11GrColorType = comdat any

$_ZN9GrCPixmapC2ERK8GrPixmap = comdat any

$_ZN8GrPixmapC2E11GrImageInfo5sk_spI6SkDataEm = comdat any

$_ZN12GrPixmapBaseIv8GrPixmapEC2E11GrImageInfo5sk_spI6SkDataEm = comdat any

$_ZN12GrPixmapBaseIv8GrPixmapEC2E11GrImageInfoPvm = comdat any

$_ZN9GrCPixmapC2E11GrImageInfo5sk_spI6SkDataEm = comdat any

$_ZN12GrPixmapBaseIKv9GrCPixmapEC2E11GrImageInfo5sk_spI6SkDataEm = comdat any

$_ZN12GrPixmapBaseIKv9GrCPixmapEC2E11GrImageInfoPS0_m = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZN11SkImageInfoD2Ev = comdat any

$_ZN8SkTArrayImLb0EE12checkReallocEiNS0_11ReallocTypeE = comdat any

@.str = private unnamed_addr constant [29 x i8] c"disabled-by-default-skia.gpu\00", align 1
@__PRETTY_FUNCTION__._Z22GrFillInCompressedDataN7SkImage15CompressionTypeE7SkISize11GrMipmappedPcRK8SkRGBA4fIL11SkAlphaType3EE = private unnamed_addr constant [103 x i8] c"void GrFillInCompressedData(SkImage::CompressionType, SkISize, GrMipmapped, char *, const SkColor4f &)\00", align 1
@__PRETTY_FUNCTION__._Z15GrConvertPixelsRK8GrPixmapRK9GrCPixmapb = private unnamed_addr constant [64 x i8] c"bool GrConvertPixels(const GrPixmap &, const GrCPixmap &, bool)\00", align 1
@__PRETTY_FUNCTION__._Z12GrClearImageRK11GrImageInfoPvmNSt3__15arrayIfLm4EEE = private unnamed_addr constant [77 x i8] c"bool GrClearImage(const GrImageInfo &, void *, size_t, std::array<float, 4>)\00", align 1
@_ZL19kETC1ModifierTables = internal unnamed_addr constant [8 x [4 x i32]] [[4 x i32] [i32 2, i32 8, i32 -2, i32 -8], [4 x i32] [i32 5, i32 17, i32 -5, i32 -17], [4 x i32] [i32 9, i32 29, i32 -9, i32 -29], [4 x i32] [i32 13, i32 42, i32 -13, i32 -42], [4 x i32] [i32 18, i32 60, i32 -18, i32 -60], [4 x i32] [i32 24, i32 80, i32 -24, i32 -80], [4 x i32] [i32 33, i32 106, i32 -33, i32 -106], [4 x i32] [i32 47, i32 183, i32 -47, i32 -183]], align 16
@.str.1 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"bgra\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"gbar\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"000r\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"rrr1\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"aaa1\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"rrrg\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"rgb1\00", align 1
@.str.9 = private unnamed_addr constant [47 x i8] c"../../third_party/skia/src/gpu/GrDataUtils.cpp\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"unexpected CT\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"argb\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"a000\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"agbr\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"ragb\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"r000\00", align 1
@_ZZL18append_clamp_gamutP16SkRasterPipelineE6fakeII = internal global %struct.SkImageInfo zeroinitializer, align 16
@_ZGVZL18append_clamp_gamutP16SkRasterPipelineE6fakeII = internal global i64 0, align 8
@__dso_handle = external hidden global i8
@_ZZ22GrFillInCompressedDataN7SkImage15CompressionTypeE7SkISize11GrMipmappedPcRK8SkRGBA4fIL11SkAlphaType3EEE28trace_event_unique_atomic318.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZ15GrConvertPixelsRK8GrPixmapRK9GrCPixmapbE28trace_event_unique_atomic512.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZ12GrClearImageRK11GrImageInfoPvmNSt3__15arrayIfLm4EEEE28trace_event_unique_atomic690.0.0 = internal unnamed_addr global i64 0, align 8
@switch.table._Z12GrClearImageRK11GrImageInfoPvmNSt3__15arrayIfLm4EEE = private unnamed_addr constant [30 x i64] [i64 1, i64 2, i64 2, i64 4, i64 4, i64 4, i64 2, i64 4, i64 4, i64 4, i64 1, i64 2, i64 2, i64 8, i64 8, i64 16, i64 2, i64 4, i64 4, i64 8, i64 4, i64 16, i64 4, i64 3, i64 1, i64 2, i64 2, i64 2, i64 2, i64 2], align 8
@switch.table._Z33SkColorTypeAndFormatToGrColorTypePK6GrCaps11SkColorTypeRK15GrBackendFormat = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4
@switch.table._ZN12GrPixmapBaseIKv9GrCPixmapEC2E11GrImageInfoPS0_m = private unnamed_addr constant [31 x i64] [i64 0, i64 1, i64 2, i64 2, i64 4, i64 4, i64 4, i64 2, i64 4, i64 4, i64 4, i64 1, i64 2, i64 2, i64 8, i64 8, i64 16, i64 2, i64 4, i64 4, i64 8, i64 4, i64 16, i64 4, i64 3, i64 1, i64 2, i64 2, i64 2, i64 2, i64 2], align 8

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_Z11GrNumBlocksN7SkImage15CompressionTypeE7SkISize(i32, i64) local_unnamed_addr #0 {
  %3 = trunc i64 %1 to i32
  %4 = lshr i64 %1, 32
  %5 = trunc i64 %4 to i32
  switch i32 %0, label %14 [
    i32 0, label %6
    i32 1, label %8
    i32 2, label %8
    i32 3, label %8
  ]

6:                                                ; preds = %2
  %7 = mul nsw i32 %5, %3
  br label %15

8:                                                ; preds = %2, %2, %2
  %9 = add nsw i32 %3, 3
  %10 = ashr i32 %9, 2
  %11 = add nsw i32 %5, 3
  %12 = ashr i32 %11, 2
  %13 = mul nsw i32 %12, %10
  br label %15

14:                                               ; preds = %2
  tail call void @llvm.trap()
  unreachable

15:                                               ; preds = %8, %6
  %16 = phi i32 [ %13, %8 ], [ %7, %6 ]
  %17 = sext i32 %16 to i64
  ret i64 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_Z20GrCompressedRowBytesN7SkImage15CompressionTypeEi(i32, i32) local_unnamed_addr #0 {
  switch i32 %0, label %8 [
    i32 0, label %9
    i32 1, label %3
    i32 2, label %3
    i32 3, label %3
  ]

3:                                                ; preds = %2, %2, %2
  %4 = add nsw i32 %1, 3
  %5 = ashr i32 %4, 2
  %6 = sext i32 %5 to i64
  %7 = shl nsw i64 %6, 3
  br label %9

8:                                                ; preds = %2
  tail call void @llvm.trap()
  unreachable

9:                                                ; preds = %2, %3
  %10 = phi i64 [ %7, %3 ], [ 0, %2 ]
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_Z22GrCompressedDimensionsN7SkImage15CompressionTypeE7SkISize(i32, i64) local_unnamed_addr #0 {
  %3 = lshr i64 %1, 32
  switch i32 %0, label %9 [
    i32 0, label %10
    i32 1, label %4
    i32 2, label %4
    i32 3, label %4
  ]

4:                                                ; preds = %2, %2, %2
  %5 = add i64 %1, 3
  %6 = add nuw nsw i64 %3, 3
  %7 = and i64 %5, 4294967292
  %8 = and i64 %6, 4294967292
  br label %10

9:                                                ; preds = %2
  tail call void @llvm.trap()
  unreachable

10:                                               ; preds = %2, %4
  %11 = phi i64 [ %7, %4 ], [ %1, %2 ]
  %12 = phi i64 [ %8, %4 ], [ %3, %2 ]
  %13 = shl nuw i64 %12, 32
  %14 = and i64 %11, 4294967295
  %15 = or i64 %13, %14
  ret i64 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_Z32GrComputeTightCombinedBufferSizem7SkISizeP8SkTArrayImLb0EEi(i64, i64, %class.SkTArray*, i32) local_unnamed_addr #0 {
  tail call void @_ZN8SkTArrayImLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %2, i32 1, i32 1) #11
  %5 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %2, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %2, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = lshr i64 %8, 1
  %10 = and i64 %9, 2147483647
  %11 = getelementptr inbounds i64, i64* %6, i64 %10
  %12 = add i64 %8, 2
  %13 = and i64 %12, 4294967294
  %14 = and i64 %8, -4294967295
  %15 = or i64 %13, %14
  store i64 %15, i64* %7, align 8
  store i64 0, i64* %11, align 8
  %16 = shl i64 %1, 32
  %17 = ashr exact i64 %16, 32
  %18 = ashr i64 %1, 32
  %19 = mul i64 %18, %0
  %20 = mul i64 %19, %17
  %21 = trunc i64 %1 to i32
  %22 = lshr i64 %1, 32
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i64 %0, 3
  br i1 %24, label %30, label %25

25:                                               ; preds = %4
  %26 = icmp ugt i64 %0, 4
  %27 = select i1 %26, i64 %0, i64 4
  %28 = shl i64 %27, 32
  %29 = ashr exact i64 %28, 32
  br label %30

30:                                               ; preds = %25, %4
  %31 = phi i64 [ 12, %4 ], [ %29, %25 ]
  %32 = icmp sgt i32 %3, 1
  br i1 %32, label %35, label %33

33:                                               ; preds = %35, %30
  %34 = phi i64 [ %20, %30 ], [ %63, %35 ]
  ret i64 %34

35:                                               ; preds = %30, %35
  %36 = phi i32 [ %64, %35 ], [ 1, %30 ]
  %37 = phi i64 [ %63, %35 ], [ %20, %30 ]
  %38 = phi i32 [ %45, %35 ], [ %23, %30 ]
  %39 = phi i32 [ %42, %35 ], [ %21, %30 ]
  %40 = sdiv i32 %39, 2
  %41 = icmp sgt i32 %40, 1
  %42 = select i1 %41, i32 %40, i32 1
  %43 = sdiv i32 %38, 2
  %44 = icmp sgt i32 %43, 1
  %45 = select i1 %44, i32 %43, i32 1
  %46 = mul nsw i32 %45, %42
  %47 = zext i32 %46 to i64
  %48 = mul i64 %47, %0
  %49 = urem i64 %37, %31
  %50 = icmp eq i64 %49, 0
  %51 = sub i64 %31, %49
  %52 = select i1 %50, i64 0, i64 %51
  %53 = add i64 %52, %37
  tail call void @_ZN8SkTArrayImLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %2, i32 1, i32 1) #11
  %54 = load i64*, i64** %5, align 8
  %55 = load i64, i64* %7, align 8
  %56 = lshr i64 %55, 1
  %57 = and i64 %56, 2147483647
  %58 = getelementptr inbounds i64, i64* %54, i64 %57
  %59 = add i64 %55, 2
  %60 = and i64 %59, 4294967294
  %61 = and i64 %55, -4294967295
  %62 = or i64 %60, %61
  store i64 %62, i64* %7, align 8
  store i64 %53, i64* %58, align 8
  %63 = add i64 %53, %48
  %64 = add nuw nsw i32 %36, 1
  %65 = icmp eq i32 %64, %3
  br i1 %65, label %33, label %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z22GrFillInCompressedDataN7SkImage15CompressionTypeE7SkISize11GrMipmappedPcRK8SkRGBA4fIL11SkAlphaType3EE(i32, i64, i1 zeroext, i8* nocapture, %struct.SkRGBA4f* dereferenceable(16)) local_unnamed_addr #0 {
  %6 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %7 = trunc i64 %1 to i32
  %8 = lshr i64 %1, 32
  %9 = trunc i64 %8 to i32
  %10 = load atomic i64, i64* @_ZZ22GrFillInCompressedDataN7SkImage15CompressionTypeE7SkISize11GrMipmappedPcRK8SkRGBA4fIL11SkAlphaType3EEE28trace_event_unique_atomic318.0.0 monotonic, align 8
  %11 = inttoptr i64 %10 to i8*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %5
  %14 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #11
  %15 = bitcast %class.SkEventTracer* %14 to i8* (%class.SkEventTracer*, i8*)***
  %16 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %15, align 8
  %17 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %16, i64 2
  %18 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %17, align 8
  %19 = tail call i8* %18(%class.SkEventTracer* %14, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #11
  %20 = ptrtoint i8* %19 to i64
  store atomic i64 %20, i64* @_ZZ22GrFillInCompressedDataN7SkImage15CompressionTypeE7SkISize11GrMipmappedPcRK8SkRGBA4fIL11SkAlphaType3EEE28trace_event_unique_atomic318.0.0 monotonic, align 8
  br label %21

21:                                               ; preds = %5, %13
  %22 = phi i8* [ %11, %5 ], [ %19, %13 ]
  %23 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 0
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %27 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %28 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1
  %29 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %24, align 8
  %30 = load i8, i8* %22, align 1
  %31 = and i8 %30, 5
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %21
  %34 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #11
  %35 = bitcast %class.SkEventTracer* %34 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %36 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %35, align 8
  %37 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %36, i64 4
  %38 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %37, align 8
  %39 = tail call i64 %38(%class.SkEventTracer* %34, i8 signext 88, i8* %22, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._Z22GrFillInCompressedDataN7SkImage15CompressionTypeE7SkISize11GrMipmappedPcRK8SkRGBA4fIL11SkAlphaType3EE, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #11
  %40 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %40, i64 0, i32 0
  store i8* %22, i8** %41, align 8
  store i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._Z22GrFillInCompressedDataN7SkImage15CompressionTypeE7SkISize11GrMipmappedPcRK8SkRGBA4fIL11SkAlphaType3EE, i64 0, i64 0), i8** %26, align 8
  store i64 %39, i64* %27, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %40, %"struct.skia::tracing_internals::ScopedTracer::Data"** %24, align 8
  br label %42

42:                                               ; preds = %21, %33
  br i1 %2, label %43, label %47

43:                                               ; preds = %42
  %44 = call i32 @_ZN8SkMipmap17ComputeLevelCountEii(i32 %7, i32 %9) #11
  %45 = add nsw i32 %44, 1
  %46 = icmp sgt i32 %44, -1
  br i1 %46, label %47, label %50

47:                                               ; preds = %42, %43
  %48 = phi i32 [ %45, %43 ], [ 1, %42 ]
  %49 = icmp eq i32 %0, 1
  br label %67

50:                                               ; preds = %479, %43
  %51 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %24, align 8
  %52 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %50
  %54 = load i8*, i8** %25, align 8
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %66, label %57

57:                                               ; preds = %53
  %58 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #11
  %59 = load i8*, i8** %25, align 8
  %60 = load i8*, i8** %26, align 8
  %61 = load i64, i64* %27, align 8
  %62 = bitcast %class.SkEventTracer* %58 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %63 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %62, align 8
  %64 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %63, i64 5
  %65 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %64, align 8
  call void %65(%class.SkEventTracer* %58, i8* %59, i8* %60, i64 %61) #11
  br label %66

66:                                               ; preds = %50, %53, %57
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  ret void

67:                                               ; preds = %479, %47
  %68 = phi i64 [ 0, %47 ], [ %480, %479 ]
  %69 = phi i32 [ 0, %47 ], [ %487, %479 ]
  %70 = phi i32 [ %9, %47 ], [ %486, %479 ]
  %71 = phi i32 [ %7, %47 ], [ %483, %479 ]
  %72 = zext i32 %70 to i64
  %73 = shl nuw i64 %72, 32
  %74 = zext i32 %71 to i64
  %75 = or i64 %73, %74
  %76 = call i64 @_Z20SkCompressedDataSizeN7SkImage15CompressionTypeE7SkISizeP8SkTArrayImLb0EEb(i32 %0, i64 %75, %class.SkTArray* null, i1 zeroext false) #11
  %77 = getelementptr inbounds i8, i8* %3, i64 %68
  %78 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f* %4) #11
  %79 = lshr i32 %78, 16
  %80 = and i32 %79, 255
  br i1 %49, label %81, label %366

81:                                               ; preds = %67
  %82 = lshr i32 %78, 8
  %83 = and i32 %82, 255
  %84 = and i32 %78, 255
  %85 = mul nuw nsw i32 %80, 31
  %86 = add nuw nsw i32 %85, 128
  %87 = lshr i32 %86, 8
  %88 = add nuw nsw i32 %87, %86
  %89 = lshr i32 %88, 8
  %90 = mul nuw nsw i32 %83, 31
  %91 = add nuw nsw i32 %90, 128
  %92 = lshr i32 %91, 8
  %93 = add nuw nsw i32 %92, %91
  %94 = lshr i32 %93, 8
  %95 = mul nuw nsw i32 %84, 31
  %96 = add nuw nsw i32 %95, 128
  %97 = lshr i32 %96, 8
  %98 = add nuw nsw i32 %97, %96
  %99 = lshr i32 %98, 8
  %100 = and i32 %89, 31
  %101 = shl nuw nsw i32 %100, 3
  %102 = lshr i32 %100, 2
  %103 = or i32 %101, %102
  %104 = and i32 %94, 31
  %105 = shl nuw nsw i32 %104, 3
  %106 = lshr i32 %104, 2
  %107 = or i32 %105, %106
  %108 = and i32 %99, 31
  %109 = shl nuw nsw i32 %108, 3
  %110 = lshr i32 %108, 2
  %111 = or i32 %109, %110
  br label %112

112:                                              ; preds = %112, %81
  %113 = phi i64 [ 0, %81 ], [ %258, %112 ]
  %114 = phi i32 [ 1024, %81 ], [ %257, %112 ]
  %115 = phi i32 [ 0, %81 ], [ %256, %112 ]
  %116 = phi i32 [ 0, %81 ], [ %255, %112 ]
  %117 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* @_ZL19kETC1ModifierTables, i64 0, i64 %113, i64 0
  %118 = load i32, i32* %117, align 16
  %119 = add nsw i32 %118, %103
  %120 = icmp slt i32 %119, 255
  %121 = select i1 %120, i32 %119, i32 255
  %122 = icmp sgt i32 %121, 0
  %123 = select i1 %122, i32 %121, i32 0
  %124 = add nsw i32 %118, %107
  %125 = icmp slt i32 %124, 255
  %126 = select i1 %125, i32 %124, i32 255
  %127 = icmp sgt i32 %126, 0
  %128 = select i1 %127, i32 %126, i32 0
  %129 = add nsw i32 %118, %111
  %130 = icmp slt i32 %129, 255
  %131 = select i1 %130, i32 %129, i32 255
  %132 = icmp sgt i32 %131, 0
  %133 = select i1 %132, i32 %131, i32 0
  %134 = sub nsw i32 %80, %123
  %135 = icmp slt i32 %134, 0
  %136 = sub nsw i32 0, %134
  %137 = select i1 %135, i32 %136, i32 %134
  %138 = sub nsw i32 %83, %128
  %139 = icmp slt i32 %138, 0
  %140 = sub nsw i32 0, %138
  %141 = select i1 %139, i32 %140, i32 %138
  %142 = add nuw nsw i32 %137, %141
  %143 = sub nsw i32 %84, %133
  %144 = icmp slt i32 %143, 0
  %145 = sub nsw i32 0, %143
  %146 = select i1 %144, i32 %145, i32 %143
  %147 = add nuw nsw i32 %142, %146
  %148 = icmp sgt i32 %114, %147
  %149 = trunc i64 %113 to i32
  %150 = select i1 %148, i32 0, i32 %115
  %151 = select i1 %148, i32 %147, i32 %114
  %152 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* @_ZL19kETC1ModifierTables, i64 0, i64 %113, i64 1
  %153 = load i32, i32* %152, align 4
  %154 = add nsw i32 %153, %103
  %155 = icmp slt i32 %154, 255
  %156 = select i1 %155, i32 %154, i32 255
  %157 = icmp sgt i32 %156, 0
  %158 = select i1 %157, i32 %156, i32 0
  %159 = add nsw i32 %153, %107
  %160 = icmp slt i32 %159, 255
  %161 = select i1 %160, i32 %159, i32 255
  %162 = icmp sgt i32 %161, 0
  %163 = select i1 %162, i32 %161, i32 0
  %164 = add nsw i32 %153, %111
  %165 = icmp slt i32 %164, 255
  %166 = select i1 %165, i32 %164, i32 255
  %167 = icmp sgt i32 %166, 0
  %168 = select i1 %167, i32 %166, i32 0
  %169 = sub nsw i32 %80, %158
  %170 = icmp slt i32 %169, 0
  %171 = sub nsw i32 0, %169
  %172 = select i1 %170, i32 %171, i32 %169
  %173 = sub nsw i32 %83, %163
  %174 = icmp slt i32 %173, 0
  %175 = sub nsw i32 0, %173
  %176 = select i1 %174, i32 %175, i32 %173
  %177 = add nuw nsw i32 %172, %176
  %178 = sub nsw i32 %84, %168
  %179 = icmp slt i32 %178, 0
  %180 = sub nsw i32 0, %178
  %181 = select i1 %179, i32 %180, i32 %178
  %182 = add nuw nsw i32 %177, %181
  %183 = icmp sgt i32 %151, %182
  %184 = or i1 %148, %183
  %185 = select i1 %183, i32 1, i32 %150
  %186 = select i1 %183, i32 %182, i32 %151
  %187 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* @_ZL19kETC1ModifierTables, i64 0, i64 %113, i64 2
  %188 = load i32, i32* %187, align 8
  %189 = add nsw i32 %188, %103
  %190 = icmp slt i32 %189, 255
  %191 = select i1 %190, i32 %189, i32 255
  %192 = icmp sgt i32 %191, 0
  %193 = select i1 %192, i32 %191, i32 0
  %194 = add nsw i32 %188, %107
  %195 = icmp slt i32 %194, 255
  %196 = select i1 %195, i32 %194, i32 255
  %197 = icmp sgt i32 %196, 0
  %198 = select i1 %197, i32 %196, i32 0
  %199 = add nsw i32 %188, %111
  %200 = icmp slt i32 %199, 255
  %201 = select i1 %200, i32 %199, i32 255
  %202 = icmp sgt i32 %201, 0
  %203 = select i1 %202, i32 %201, i32 0
  %204 = sub nsw i32 %80, %193
  %205 = icmp slt i32 %204, 0
  %206 = sub nsw i32 0, %204
  %207 = select i1 %205, i32 %206, i32 %204
  %208 = sub nsw i32 %83, %198
  %209 = icmp slt i32 %208, 0
  %210 = sub nsw i32 0, %208
  %211 = select i1 %209, i32 %210, i32 %208
  %212 = add nuw nsw i32 %207, %211
  %213 = sub nsw i32 %84, %203
  %214 = icmp slt i32 %213, 0
  %215 = sub nsw i32 0, %213
  %216 = select i1 %214, i32 %215, i32 %213
  %217 = add nuw nsw i32 %212, %216
  %218 = icmp sgt i32 %186, %217
  %219 = or i1 %184, %218
  %220 = select i1 %218, i32 2, i32 %185
  %221 = select i1 %218, i32 %217, i32 %186
  %222 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* @_ZL19kETC1ModifierTables, i64 0, i64 %113, i64 3
  %223 = load i32, i32* %222, align 4
  %224 = add nsw i32 %223, %103
  %225 = icmp slt i32 %224, 255
  %226 = select i1 %225, i32 %224, i32 255
  %227 = icmp sgt i32 %226, 0
  %228 = select i1 %227, i32 %226, i32 0
  %229 = add nsw i32 %223, %107
  %230 = icmp slt i32 %229, 255
  %231 = select i1 %230, i32 %229, i32 255
  %232 = icmp sgt i32 %231, 0
  %233 = select i1 %232, i32 %231, i32 0
  %234 = add nsw i32 %223, %111
  %235 = icmp slt i32 %234, 255
  %236 = select i1 %235, i32 %234, i32 255
  %237 = icmp sgt i32 %236, 0
  %238 = select i1 %237, i32 %236, i32 0
  %239 = sub nsw i32 %80, %228
  %240 = icmp slt i32 %239, 0
  %241 = sub nsw i32 0, %239
  %242 = select i1 %240, i32 %241, i32 %239
  %243 = sub nsw i32 %83, %233
  %244 = icmp slt i32 %243, 0
  %245 = sub nsw i32 0, %243
  %246 = select i1 %244, i32 %245, i32 %243
  %247 = add nuw nsw i32 %242, %246
  %248 = sub nsw i32 %84, %238
  %249 = icmp slt i32 %248, 0
  %250 = sub nsw i32 0, %248
  %251 = select i1 %249, i32 %250, i32 %248
  %252 = add nuw nsw i32 %247, %251
  %253 = icmp sgt i32 %221, %252
  %254 = or i1 %219, %253
  %255 = select i1 %254, i32 %149, i32 %116
  %256 = select i1 %253, i32 3, i32 %220
  %257 = select i1 %253, i32 %252, i32 %221
  %258 = add nuw nsw i64 %113, 1
  %259 = icmp eq i64 %258, 8
  br i1 %259, label %260, label %112

260:                                              ; preds = %112
  %261 = and i32 %256, 1
  %262 = icmp eq i32 %261, 0
  %263 = select i1 %262, i32 0, i32 65535
  %264 = add nsw i32 %71, 3
  %265 = ashr i32 %264, 2
  %266 = add nsw i32 %70, 3
  %267 = ashr i32 %266, 2
  %268 = mul i32 %267, %265
  %269 = icmp sgt i32 %268, 0
  br i1 %269, label %270, label %479

270:                                              ; preds = %260
  %271 = shl nuw nsw i32 %94, 19
  %272 = and i32 %256, 2
  %273 = icmp eq i32 %272, 0
  %274 = or i32 %263, -65536
  %275 = select i1 %273, i32 %263, i32 %274
  %276 = call i32 @llvm.bswap.i32(i32 %275) #11
  %277 = shl nuw nsw i32 %99, 11
  %278 = shl i32 %89, 27
  %279 = shl i32 %255, 2
  %280 = shl i32 %255, 5
  %281 = or i32 %277, %271
  %282 = or i32 %281, %278
  %283 = or i32 %282, %279
  %284 = or i32 %283, %280
  %285 = or i32 %284, 2
  %286 = call i32 @llvm.bswap.i32(i32 %285) #11
  %287 = zext i32 %276 to i64
  %288 = shl nuw i64 %287, 32
  %289 = zext i32 %286 to i64
  %290 = or i64 %288, %289
  %291 = add i32 %268, -1
  %292 = zext i32 %291 to i64
  %293 = add nuw nsw i64 %292, 1
  %294 = icmp ult i64 %293, 4
  br i1 %294, label %356, label %295

295:                                              ; preds = %270
  %296 = and i64 %293, 8589934588
  %297 = trunc i64 %296 to i32
  %298 = shl nuw nsw i64 %296, 3
  %299 = getelementptr i8, i8* %77, i64 %298
  %300 = insertelement <2 x i64> undef, i64 %290, i32 0
  %301 = shufflevector <2 x i64> %300, <2 x i64> undef, <2 x i32> zeroinitializer
  %302 = insertelement <2 x i64> undef, i64 %290, i32 0
  %303 = shufflevector <2 x i64> %302, <2 x i64> undef, <2 x i32> zeroinitializer
  %304 = add nsw i64 %296, -4
  %305 = lshr exact i64 %304, 2
  %306 = add nuw nsw i64 %305, 1
  %307 = and i64 %306, 3
  %308 = icmp ult i64 %304, 12
  br i1 %308, label %340, label %309

309:                                              ; preds = %295
  %310 = sub nsw i64 %306, %307
  br label %311

311:                                              ; preds = %311, %309
  %312 = phi i64 [ 0, %309 ], [ %337, %311 ]
  %313 = phi i64 [ %310, %309 ], [ %338, %311 ]
  %314 = shl i64 %312, 3
  %315 = getelementptr i8, i8* %77, i64 %314
  %316 = bitcast i8* %315 to <2 x i64>*
  store <2 x i64> %301, <2 x i64>* %316, align 1
  %317 = getelementptr i8, i8* %315, i64 16
  %318 = bitcast i8* %317 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %318, align 1
  %319 = shl i64 %312, 3
  %320 = or i64 %319, 32
  %321 = getelementptr i8, i8* %77, i64 %320
  %322 = bitcast i8* %321 to <2 x i64>*
  store <2 x i64> %301, <2 x i64>* %322, align 1
  %323 = getelementptr i8, i8* %321, i64 16
  %324 = bitcast i8* %323 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %324, align 1
  %325 = shl i64 %312, 3
  %326 = or i64 %325, 64
  %327 = getelementptr i8, i8* %77, i64 %326
  %328 = bitcast i8* %327 to <2 x i64>*
  store <2 x i64> %301, <2 x i64>* %328, align 1
  %329 = getelementptr i8, i8* %327, i64 16
  %330 = bitcast i8* %329 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %330, align 1
  %331 = shl i64 %312, 3
  %332 = or i64 %331, 96
  %333 = getelementptr i8, i8* %77, i64 %332
  %334 = bitcast i8* %333 to <2 x i64>*
  store <2 x i64> %301, <2 x i64>* %334, align 1
  %335 = getelementptr i8, i8* %333, i64 16
  %336 = bitcast i8* %335 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %336, align 1
  %337 = add i64 %312, 16
  %338 = add i64 %313, -4
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %311, !llvm.loop !2

340:                                              ; preds = %311, %295
  %341 = phi i64 [ 0, %295 ], [ %337, %311 ]
  %342 = icmp eq i64 %307, 0
  br i1 %342, label %354, label %343

343:                                              ; preds = %340, %343
  %344 = phi i64 [ %351, %343 ], [ %341, %340 ]
  %345 = phi i64 [ %352, %343 ], [ %307, %340 ]
  %346 = shl i64 %344, 3
  %347 = getelementptr i8, i8* %77, i64 %346
  %348 = bitcast i8* %347 to <2 x i64>*
  store <2 x i64> %301, <2 x i64>* %348, align 1
  %349 = getelementptr i8, i8* %347, i64 16
  %350 = bitcast i8* %349 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %350, align 1
  %351 = add i64 %344, 4
  %352 = add i64 %345, -1
  %353 = icmp eq i64 %352, 0
  br i1 %353, label %354, label %343, !llvm.loop !4

354:                                              ; preds = %343, %340
  %355 = icmp eq i64 %293, %296
  br i1 %355, label %479, label %356

356:                                              ; preds = %354, %270
  %357 = phi i32 [ 0, %270 ], [ %297, %354 ]
  %358 = phi i8* [ %77, %270 ], [ %299, %354 ]
  br label %359

359:                                              ; preds = %356, %359
  %360 = phi i32 [ %364, %359 ], [ %357, %356 ]
  %361 = phi i8* [ %363, %359 ], [ %358, %356 ]
  %362 = bitcast i8* %361 to i64*
  store i64 %290, i64* %362, align 1
  %363 = getelementptr inbounds i8, i8* %361, i64 8
  %364 = add nuw nsw i32 %360, 1
  %365 = icmp eq i32 %364, %268
  br i1 %365, label %479, label %359, !llvm.loop !6

366:                                              ; preds = %67
  %367 = mul nuw nsw i32 %80, 31
  %368 = add nuw nsw i32 %367, 128
  %369 = lshr i32 %368, 8
  %370 = add nuw nsw i32 %369, %368
  %371 = lshr i32 %370, 8
  %372 = lshr i32 %78, 8
  %373 = and i32 %372, 255
  %374 = mul nuw nsw i32 %373, 63
  %375 = add nuw nsw i32 %374, 128
  %376 = lshr i32 %375, 8
  %377 = add nuw nsw i32 %376, %375
  %378 = lshr i32 %377, 8
  %379 = and i32 %78, 255
  %380 = mul nuw nsw i32 %379, 31
  %381 = add nuw nsw i32 %380, 128
  %382 = lshr i32 %381, 8
  %383 = add nuw nsw i32 %382, %381
  %384 = lshr i32 %383, 8
  %385 = shl nuw nsw i32 %371, 11
  %386 = shl nuw nsw i32 %378, 5
  %387 = or i32 %386, %384
  %388 = or i32 %387, %385
  %389 = add nsw i32 %71, 3
  %390 = ashr i32 %389, 2
  %391 = add nsw i32 %70, 3
  %392 = ashr i32 %391, 2
  %393 = mul i32 %392, %390
  %394 = icmp sgt i32 %393, 0
  br i1 %394, label %395, label %479

395:                                              ; preds = %366
  %396 = icmp eq i32 %78, 0
  %397 = select i1 %396, i64 -4294967296, i64 0
  %398 = and i32 %388, 65535
  %399 = zext i32 %398 to i64
  %400 = shl i32 %388, 16
  %401 = zext i32 %400 to i64
  %402 = or i64 %397, %401
  %403 = or i64 %402, %399
  %404 = add i32 %393, -1
  %405 = zext i32 %404 to i64
  %406 = add nuw nsw i64 %405, 1
  %407 = icmp ult i64 %406, 4
  br i1 %407, label %469, label %408

408:                                              ; preds = %395
  %409 = and i64 %406, 8589934588
  %410 = trunc i64 %409 to i32
  %411 = shl nuw nsw i64 %409, 3
  %412 = getelementptr i8, i8* %77, i64 %411
  %413 = insertelement <2 x i64> undef, i64 %403, i32 0
  %414 = shufflevector <2 x i64> %413, <2 x i64> undef, <2 x i32> zeroinitializer
  %415 = insertelement <2 x i64> undef, i64 %403, i32 0
  %416 = shufflevector <2 x i64> %415, <2 x i64> undef, <2 x i32> zeroinitializer
  %417 = add nsw i64 %409, -4
  %418 = lshr exact i64 %417, 2
  %419 = add nuw nsw i64 %418, 1
  %420 = and i64 %419, 3
  %421 = icmp ult i64 %417, 12
  br i1 %421, label %453, label %422

422:                                              ; preds = %408
  %423 = sub nsw i64 %419, %420
  br label %424

424:                                              ; preds = %424, %422
  %425 = phi i64 [ 0, %422 ], [ %450, %424 ]
  %426 = phi i64 [ %423, %422 ], [ %451, %424 ]
  %427 = shl i64 %425, 3
  %428 = getelementptr i8, i8* %77, i64 %427
  %429 = bitcast i8* %428 to <2 x i64>*
  store <2 x i64> %414, <2 x i64>* %429, align 1
  %430 = getelementptr i8, i8* %428, i64 16
  %431 = bitcast i8* %430 to <2 x i64>*
  store <2 x i64> %416, <2 x i64>* %431, align 1
  %432 = shl i64 %425, 3
  %433 = or i64 %432, 32
  %434 = getelementptr i8, i8* %77, i64 %433
  %435 = bitcast i8* %434 to <2 x i64>*
  store <2 x i64> %414, <2 x i64>* %435, align 1
  %436 = getelementptr i8, i8* %434, i64 16
  %437 = bitcast i8* %436 to <2 x i64>*
  store <2 x i64> %416, <2 x i64>* %437, align 1
  %438 = shl i64 %425, 3
  %439 = or i64 %438, 64
  %440 = getelementptr i8, i8* %77, i64 %439
  %441 = bitcast i8* %440 to <2 x i64>*
  store <2 x i64> %414, <2 x i64>* %441, align 1
  %442 = getelementptr i8, i8* %440, i64 16
  %443 = bitcast i8* %442 to <2 x i64>*
  store <2 x i64> %416, <2 x i64>* %443, align 1
  %444 = shl i64 %425, 3
  %445 = or i64 %444, 96
  %446 = getelementptr i8, i8* %77, i64 %445
  %447 = bitcast i8* %446 to <2 x i64>*
  store <2 x i64> %414, <2 x i64>* %447, align 1
  %448 = getelementptr i8, i8* %446, i64 16
  %449 = bitcast i8* %448 to <2 x i64>*
  store <2 x i64> %416, <2 x i64>* %449, align 1
  %450 = add i64 %425, 16
  %451 = add i64 %426, -4
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %453, label %424, !llvm.loop !8

453:                                              ; preds = %424, %408
  %454 = phi i64 [ 0, %408 ], [ %450, %424 ]
  %455 = icmp eq i64 %420, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %453, %456
  %457 = phi i64 [ %464, %456 ], [ %454, %453 ]
  %458 = phi i64 [ %465, %456 ], [ %420, %453 ]
  %459 = shl i64 %457, 3
  %460 = getelementptr i8, i8* %77, i64 %459
  %461 = bitcast i8* %460 to <2 x i64>*
  store <2 x i64> %414, <2 x i64>* %461, align 1
  %462 = getelementptr i8, i8* %460, i64 16
  %463 = bitcast i8* %462 to <2 x i64>*
  store <2 x i64> %416, <2 x i64>* %463, align 1
  %464 = add i64 %457, 4
  %465 = add i64 %458, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !9

467:                                              ; preds = %456, %453
  %468 = icmp eq i64 %406, %409
  br i1 %468, label %479, label %469

469:                                              ; preds = %467, %395
  %470 = phi i32 [ 0, %395 ], [ %410, %467 ]
  %471 = phi i8* [ %77, %395 ], [ %412, %467 ]
  br label %472

472:                                              ; preds = %469, %472
  %473 = phi i32 [ %477, %472 ], [ %470, %469 ]
  %474 = phi i8* [ %476, %472 ], [ %471, %469 ]
  %475 = bitcast i8* %474 to i64*
  store i64 %403, i64* %475, align 1
  %476 = getelementptr inbounds i8, i8* %474, i64 8
  %477 = add nuw nsw i32 %473, 1
  %478 = icmp eq i32 %477, %393
  br i1 %478, label %479, label %472, !llvm.loop !10

479:                                              ; preds = %472, %359, %467, %354, %366, %260
  %480 = add i64 %76, %68
  %481 = sdiv i32 %71, 2
  %482 = icmp sgt i32 %481, 1
  %483 = select i1 %482, i32 %481, i32 1
  %484 = sdiv i32 %70, 2
  %485 = icmp sgt i32 %484, 1
  %486 = select i1 %485, i32 %484, i32 1
  %487 = add nuw nsw i32 %69, 1
  %488 = icmp eq i32 %487, %48
  br i1 %488, label %50, label %67
}

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #3

declare i32 @_ZN8SkMipmap17ComputeLevelCountEii(i32, i32) local_unnamed_addr #3

declare i64 @_Z20SkCompressedDataSizeN7SkImage15CompressionTypeE7SkISizeP8SkTArrayImLb0EEb(i32, i64, %class.SkTArray*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z15GrConvertPixelsRK8GrPixmapRK9GrCPixmapb(%class.GrPixmap* dereferenceable(56), %class.GrCPixmap* dereferenceable(56), i1 zeroext) local_unnamed_addr #0 {
  %4 = alloca %class.GrSwizzle, align 2
  %5 = alloca %class.GrSwizzle, align 2
  %6 = alloca %class.GrSwizzle, align 2
  %7 = alloca %class.GrSwizzle, align 2
  %8 = alloca %class.GrSwizzle, align 2
  %9 = alloca %class.GrSwizzle, align 2
  %10 = alloca %class.GrSwizzle, align 2
  %11 = alloca %class.GrSwizzle, align 2
  %12 = alloca %class.GrSwizzle, align 2
  %13 = alloca %class.GrSwizzle, align 2
  %14 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %15 = alloca %class.GrPixmap, align 8
  %16 = alloca %class.GrImageInfo, align 8
  %17 = alloca %class.GrPixmap, align 8
  %18 = alloca %class.GrImageInfo, align 8
  %19 = alloca %class.GrCPixmap, align 8
  %20 = alloca %class.GrSwizzle, align 2
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca %class.GrSwizzle, align 2
  %26 = alloca %class.SkTLazy, align 8
  %27 = alloca %class.GrSwizzle, align 2
  %28 = alloca %struct.SkRasterPipeline_MemoryCtx, align 8
  %29 = alloca %struct.SkRasterPipeline_MemoryCtx, align 8
  %30 = alloca %class.SkRasterPipeline_, align 8
  %31 = load atomic i64, i64* @_ZZ15GrConvertPixelsRK8GrPixmapRK9GrCPixmapbE28trace_event_unique_atomic512.0.0 monotonic, align 8
  %32 = inttoptr i64 %31 to i8*
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %3
  %35 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #11
  %36 = bitcast %class.SkEventTracer* %35 to i8* (%class.SkEventTracer*, i8*)***
  %37 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %36, align 8
  %38 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %37, i64 2
  %39 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %38, align 8
  %40 = tail call i8* %39(%class.SkEventTracer* %35, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #11
  %41 = ptrtoint i8* %40 to i64
  store atomic i64 %41, i64* @_ZZ15GrConvertPixelsRK8GrPixmapRK9GrCPixmapbE28trace_event_unique_atomic512.0.0 monotonic, align 8
  br label %42

42:                                               ; preds = %3, %34
  %43 = phi i8* [ %32, %3 ], [ %40, %34 ]
  %44 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %14, i64 0, i32 0
  %46 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %14, i64 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %14, i64 0, i32 1, i32 1
  %48 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %14, i64 0, i32 1, i32 2
  %49 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %14, i64 0, i32 1
  %50 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %45, align 8
  %51 = load i8, i8* %43, align 1
  %52 = and i8 %51, 5
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %42
  %55 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #11
  %56 = bitcast %class.SkEventTracer* %55 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %57 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %56, align 8
  %58 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %57, i64 4
  %59 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %58, align 8
  %60 = tail call i64 %59(%class.SkEventTracer* %55, i8 signext 88, i8* %43, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._Z15GrConvertPixelsRK8GrPixmapRK9GrCPixmapb, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #11
  %61 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %14, i64 0, i32 1
  %62 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %61, i64 0, i32 0
  store i8* %43, i8** %62, align 8
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._Z15GrConvertPixelsRK8GrPixmapRK9GrCPixmapb, i64 0, i64 0), i8** %47, align 8
  store i64 %60, i64* %48, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %61, %"struct.skia::tracing_internals::ScopedTracer::Data"** %45, align 8
  br label %63

63:                                               ; preds = %42, %54
  %64 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 2, i32 1
  %65 = bitcast %struct.SkISize* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = lshr i64 %66, 32
  %69 = trunc i64 %68 to i32
  %70 = icmp slt i32 %67, 1
  %71 = icmp slt i32 %69, 1
  %72 = or i1 %70, %71
  br i1 %72, label %755, label %73

73:                                               ; preds = %63
  %74 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 2, i32 1
  %75 = bitcast %struct.SkISize* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = trunc i64 %76 to i32
  %78 = lshr i64 %76, 32
  %79 = trunc i64 %78 to i32
  %80 = icmp slt i32 %77, 1
  %81 = icmp slt i32 %79, 1
  %82 = or i1 %80, %81
  br i1 %82, label %755, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 2, i32 0, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %755, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 2, i32 0, i32 2
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %755, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = icmp eq i8* %93, null
  br i1 %94, label %755, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = icmp eq i8* %97, null
  %99 = icmp ne i32 %77, %67
  %100 = or i1 %99, %98
  %101 = icmp ne i32 %79, %69
  %102 = or i1 %101, %100
  br i1 %102, label %755, label %103

103:                                              ; preds = %95
  %104 = icmp eq i32 %89, 24
  br i1 %104, label %105, label %211

105:                                              ; preds = %103
  %106 = bitcast %class.GrPixmap* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %106) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 56, i1 false)
  %107 = bitcast %class.GrImageInfo* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %107) #11
  %108 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 2
  call void @_ZNK11GrImageInfo13makeColorTypeE11GrColorType(%class.GrImageInfo* nonnull sret %16, %class.GrImageInfo* %108, i32 6)
  call void @_ZN8GrPixmap8AllocateERK11GrImageInfo(%class.GrPixmap* nonnull sret %15, %class.GrImageInfo* nonnull dereferenceable(32) %16)
  %109 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %16, i64 0, i32 0, i32 1, i32 0
  %110 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %109, align 8
  %111 = icmp eq %class.GrColorSpaceXform* %110, null
  br i1 %111, label %122, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %110, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 -1 acq_rel
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %122

116:                                              ; preds = %112
  %117 = bitcast %class.GrColorSpaceXform* %110 to %class.SkRefCntBase*
  %118 = bitcast %class.GrColorSpaceXform* %110 to void (%class.SkRefCntBase*)***
  %119 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %118, align 8
  %120 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %119, i64 2
  %121 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %120, align 8
  call void %121(%class.SkRefCntBase* nonnull %117) #11
  br label %122

122:                                              ; preds = %116, %112, %105
  %123 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %16, i64 0, i32 0, i32 0, i32 0
  %124 = load %class.SkColorSpace*, %class.SkColorSpace** %123, align 8
  %125 = icmp eq %class.SkColorSpace* %124, null
  br i1 %125, label %132, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw add i32* %127, i32 -1 acq_rel
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  %131 = bitcast %class.SkColorSpace* %124 to i8*
  call void @_ZdlPv(i8* %131) #12
  br label %132

132:                                              ; preds = %122, %126, %130
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #11
  %133 = call zeroext i1 @_Z15GrConvertPixelsRK8GrPixmapRK9GrCPixmapb(%class.GrPixmap* nonnull dereferenceable(56) %15, %class.GrCPixmap* dereferenceable(56) %1, i1 zeroext %2)
  br i1 %133, label %134, label %175

134:                                              ; preds = %132
  %135 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 2, i32 1, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %175

138:                                              ; preds = %134
  %139 = load i8*, i8** %96, align 8
  %140 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %15, i64 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %143 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %15, i64 0, i32 0, i32 1
  %144 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 1
  %145 = load i32, i32* %142, align 4
  br label %146

146:                                              ; preds = %138, %155
  %147 = phi i32 [ %136, %138 ], [ %156, %155 ]
  %148 = phi i32 [ %145, %138 ], [ %157, %155 ]
  %149 = phi i8* [ %141, %138 ], [ %160, %155 ]
  %150 = phi i32 [ 0, %138 ], [ %158, %155 ]
  %151 = phi i8* [ %139, %138 ], [ %162, %155 ]
  %152 = icmp sgt i32 %148, 0
  br i1 %152, label %164, label %155

153:                                              ; preds = %164
  %154 = load i32, i32* %135, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %147, %146 ]
  %157 = phi i32 [ %172, %153 ], [ %148, %146 ]
  %158 = add nuw nsw i32 %150, 1
  %159 = load i64, i64* %143, align 8
  %160 = getelementptr inbounds i8, i8* %149, i64 %159
  %161 = load i64, i64* %144, align 8
  %162 = getelementptr inbounds i8, i8* %151, i64 %161
  %163 = icmp slt i32 %158, %156
  br i1 %163, label %146, label %175

164:                                              ; preds = %146, %164
  %165 = phi i64 [ %171, %164 ], [ 0, %146 ]
  %166 = shl nuw nsw i64 %165, 2
  %167 = getelementptr inbounds i8, i8* %149, i64 %166
  %168 = mul i64 %165, 3
  %169 = and i64 %168, 4294967295
  %170 = getelementptr inbounds i8, i8* %151, i64 %169
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %170, i8* align 1 %167, i64 3, i1 false)
  %171 = add nuw nsw i64 %165, 1
  %172 = load i32, i32* %142, align 4
  %173 = sext i32 %172 to i64
  %174 = icmp slt i64 %171, %173
  br i1 %174, label %164, label %153

175:                                              ; preds = %155, %134, %132
  %176 = phi i1 [ false, %132 ], [ true, %134 ], [ true, %155 ]
  %177 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %15, i64 0, i32 0, i32 3, i32 0
  %178 = load %class.SkData*, %class.SkData** %177, align 8
  %179 = icmp eq %class.SkData* %178, null
  br i1 %179, label %186, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %class.SkData, %class.SkData* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = atomicrmw add i32* %181, i32 -1 acq_rel
  %183 = icmp eq i32 %182, 1
  br i1 %183, label %184, label %186

184:                                              ; preds = %180
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %178) #11
  %185 = bitcast %class.SkData* %178 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %185) #11
  br label %186

186:                                              ; preds = %184, %180, %175
  %187 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %15, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %188 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %187, align 8
  %189 = icmp eq %class.GrColorSpaceXform* %188, null
  br i1 %189, label %200, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %188, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = atomicrmw add i32* %191, i32 -1 acq_rel
  %193 = icmp eq i32 %192, 1
  br i1 %193, label %194, label %200

194:                                              ; preds = %190
  %195 = bitcast %class.GrColorSpaceXform* %188 to %class.SkRefCntBase*
  %196 = bitcast %class.GrColorSpaceXform* %188 to void (%class.SkRefCntBase*)***
  %197 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %196, align 8
  %198 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %197, i64 2
  %199 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %198, align 8
  call void %199(%class.SkRefCntBase* nonnull %195) #11
  br label %200

200:                                              ; preds = %194, %190, %186
  %201 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %15, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %202 = load %class.SkColorSpace*, %class.SkColorSpace** %201, align 8
  %203 = icmp eq %class.SkColorSpace* %202, null
  br i1 %203, label %210, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %202, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = atomicrmw add i32* %205, i32 -1 acq_rel
  %207 = icmp eq i32 %206, 1
  br i1 %207, label %208, label %210

208:                                              ; preds = %204
  %209 = bitcast %class.SkColorSpace* %202 to i8*
  call void @_ZdlPv(i8* %209) #12
  br label %210

210:                                              ; preds = %200, %204, %208
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %106) #11
  br label %755

211:                                              ; preds = %103
  switch i32 %85, label %378 [
    i32 24, label %212
    i32 29, label %377
    i32 1, label %379
    i32 2, label %352
    i32 3, label %353
    i32 4, label %354
    i32 5, label %355
    i32 6, label %356
    i32 7, label %357
    i32 8, label %358
    i32 9, label %359
    i32 10, label %360
    i32 11, label %379
    i32 12, label %361
    i32 13, label %362
    i32 14, label %363
    i32 15, label %364
    i32 16, label %365
    i32 21, label %366
    i32 22, label %367
    i32 23, label %368
    i32 17, label %369
    i32 18, label %370
    i32 20, label %371
    i32 19, label %372
    i32 30, label %376
    i32 25, label %379
    i32 26, label %373
    i32 27, label %374
    i32 28, label %375
  ]

212:                                              ; preds = %211
  %213 = bitcast %class.GrPixmap* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %213) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 -86, i64 56, i1 false)
  %214 = bitcast %class.GrImageInfo* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %214) #11
  %215 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 2
  call void @_ZNK11GrImageInfo13makeColorTypeE11GrColorType(%class.GrImageInfo* nonnull sret %18, %class.GrImageInfo* %215, i32 6)
  call void @_ZN8GrPixmap8AllocateERK11GrImageInfo(%class.GrPixmap* nonnull sret %17, %class.GrImageInfo* nonnull dereferenceable(32) %18)
  %216 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %18, i64 0, i32 0, i32 1, i32 0
  %217 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %216, align 8
  %218 = icmp eq %class.GrColorSpaceXform* %217, null
  br i1 %218, label %229, label %219

219:                                              ; preds = %212
  %220 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %217, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = atomicrmw add i32* %220, i32 -1 acq_rel
  %222 = icmp eq i32 %221, 1
  br i1 %222, label %223, label %229

223:                                              ; preds = %219
  %224 = bitcast %class.GrColorSpaceXform* %217 to %class.SkRefCntBase*
  %225 = bitcast %class.GrColorSpaceXform* %217 to void (%class.SkRefCntBase*)***
  %226 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %225, align 8
  %227 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %226, i64 2
  %228 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %227, align 8
  call void %228(%class.SkRefCntBase* nonnull %224) #11
  br label %229

229:                                              ; preds = %223, %219, %212
  %230 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %18, i64 0, i32 0, i32 0, i32 0
  %231 = load %class.SkColorSpace*, %class.SkColorSpace** %230, align 8
  %232 = icmp eq %class.SkColorSpace* %231, null
  br i1 %232, label %239, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %231, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = atomicrmw add i32* %234, i32 -1 acq_rel
  %236 = icmp eq i32 %235, 1
  br i1 %236, label %237, label %239

237:                                              ; preds = %233
  %238 = bitcast %class.SkColorSpace* %231 to i8*
  call void @_ZdlPv(i8* %238) #12
  br label %239

239:                                              ; preds = %229, %233, %237
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %214) #11
  %240 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 2, i32 1, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = icmp sgt i32 %241, 0
  br i1 %242, label %243, label %258

243:                                              ; preds = %239
  %244 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %17, i64 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  %246 = load i8*, i8** %92, align 8
  %247 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 2, i32 1, i32 0
  %248 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 1
  %249 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %17, i64 0, i32 0, i32 1
  %250 = load i32, i32* %247, align 4
  br label %251

251:                                              ; preds = %243, %331
  %252 = phi i32 [ %241, %243 ], [ %332, %331 ]
  %253 = phi i32 [ %250, %243 ], [ %333, %331 ]
  %254 = phi i32 [ 0, %243 ], [ %334, %331 ]
  %255 = phi i8* [ %245, %243 ], [ %338, %331 ]
  %256 = phi i8* [ %246, %243 ], [ %336, %331 ]
  %257 = icmp sgt i32 %253, 0
  br i1 %257, label %340, label %331

258:                                              ; preds = %331, %239
  %259 = bitcast %class.GrCPixmap* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %259) #11
  call void @_ZN9GrCPixmapC2ERK8GrPixmap(%class.GrCPixmap* nonnull %19, %class.GrPixmap* nonnull dereferenceable(56) %17)
  %260 = call zeroext i1 @_Z15GrConvertPixelsRK8GrPixmapRK9GrCPixmapb(%class.GrPixmap* dereferenceable(56) %0, %class.GrCPixmap* nonnull dereferenceable(56) %19, i1 zeroext %2)
  %261 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %19, i64 0, i32 0, i32 3, i32 0
  %262 = load %class.SkData*, %class.SkData** %261, align 8
  %263 = icmp eq %class.SkData* %262, null
  br i1 %263, label %270, label %264

264:                                              ; preds = %258
  %265 = getelementptr inbounds %class.SkData, %class.SkData* %262, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = atomicrmw add i32* %265, i32 -1 acq_rel
  %267 = icmp eq i32 %266, 1
  br i1 %267, label %268, label %270

268:                                              ; preds = %264
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %262) #11
  %269 = bitcast %class.SkData* %262 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %269) #11
  br label %270

270:                                              ; preds = %268, %264, %258
  %271 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %19, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %272 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %271, align 8
  %273 = icmp eq %class.GrColorSpaceXform* %272, null
  br i1 %273, label %284, label %274

274:                                              ; preds = %270
  %275 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %272, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = atomicrmw add i32* %275, i32 -1 acq_rel
  %277 = icmp eq i32 %276, 1
  br i1 %277, label %278, label %284

278:                                              ; preds = %274
  %279 = bitcast %class.GrColorSpaceXform* %272 to %class.SkRefCntBase*
  %280 = bitcast %class.GrColorSpaceXform* %272 to void (%class.SkRefCntBase*)***
  %281 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %280, align 8
  %282 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %281, i64 2
  %283 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %282, align 8
  call void %283(%class.SkRefCntBase* nonnull %279) #11
  br label %284

284:                                              ; preds = %278, %274, %270
  %285 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %19, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %286 = load %class.SkColorSpace*, %class.SkColorSpace** %285, align 8
  %287 = icmp eq %class.SkColorSpace* %286, null
  br i1 %287, label %294, label %288

288:                                              ; preds = %284
  %289 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %286, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = atomicrmw add i32* %289, i32 -1 acq_rel
  %291 = icmp eq i32 %290, 1
  br i1 %291, label %292, label %294

292:                                              ; preds = %288
  %293 = bitcast %class.SkColorSpace* %286 to i8*
  call void @_ZdlPv(i8* %293) #12
  br label %294

294:                                              ; preds = %284, %288, %292
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %259) #11
  %295 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %17, i64 0, i32 0, i32 3, i32 0
  %296 = load %class.SkData*, %class.SkData** %295, align 8
  %297 = icmp eq %class.SkData* %296, null
  br i1 %297, label %304, label %298

298:                                              ; preds = %294
  %299 = getelementptr inbounds %class.SkData, %class.SkData* %296, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = atomicrmw add i32* %299, i32 -1 acq_rel
  %301 = icmp eq i32 %300, 1
  br i1 %301, label %302, label %304

302:                                              ; preds = %298
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %296) #11
  %303 = bitcast %class.SkData* %296 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %303) #11
  br label %304

304:                                              ; preds = %302, %298, %294
  %305 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %17, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %306 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %305, align 8
  %307 = icmp eq %class.GrColorSpaceXform* %306, null
  br i1 %307, label %318, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %306, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = atomicrmw add i32* %309, i32 -1 acq_rel
  %311 = icmp eq i32 %310, 1
  br i1 %311, label %312, label %318

312:                                              ; preds = %308
  %313 = bitcast %class.GrColorSpaceXform* %306 to %class.SkRefCntBase*
  %314 = bitcast %class.GrColorSpaceXform* %306 to void (%class.SkRefCntBase*)***
  %315 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %314, align 8
  %316 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %315, i64 2
  %317 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %316, align 8
  call void %317(%class.SkRefCntBase* nonnull %313) #11
  br label %318

318:                                              ; preds = %312, %308, %304
  %319 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %17, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %320 = load %class.SkColorSpace*, %class.SkColorSpace** %319, align 8
  %321 = icmp eq %class.SkColorSpace* %320, null
  br i1 %321, label %328, label %322

322:                                              ; preds = %318
  %323 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %320, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = atomicrmw add i32* %323, i32 -1 acq_rel
  %325 = icmp eq i32 %324, 1
  br i1 %325, label %326, label %328

326:                                              ; preds = %322
  %327 = bitcast %class.SkColorSpace* %320 to i8*
  call void @_ZdlPv(i8* %327) #12
  br label %328

328:                                              ; preds = %318, %322, %326
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %213) #11
  br label %755

329:                                              ; preds = %340
  %330 = load i32, i32* %240, align 4
  br label %331

331:                                              ; preds = %329, %251
  %332 = phi i32 [ %330, %329 ], [ %252, %251 ]
  %333 = phi i32 [ %349, %329 ], [ %253, %251 ]
  %334 = add nuw nsw i32 %254, 1
  %335 = load i64, i64* %248, align 8
  %336 = getelementptr inbounds i8, i8* %256, i64 %335
  %337 = load i64, i64* %249, align 8
  %338 = getelementptr inbounds i8, i8* %255, i64 %337
  %339 = icmp slt i32 %334, %332
  br i1 %339, label %251, label %258

340:                                              ; preds = %251, %340
  %341 = phi i64 [ %348, %340 ], [ 0, %251 ]
  %342 = mul i64 %341, 3
  %343 = and i64 %342, 4294967295
  %344 = getelementptr inbounds i8, i8* %256, i64 %343
  %345 = shl nuw nsw i64 %341, 2
  %346 = getelementptr inbounds i8, i8* %255, i64 %345
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %346, i8* align 1 %344, i64 3, i1 false)
  %347 = getelementptr inbounds i8, i8* %346, i64 3
  store i8 -1, i8* %347, align 1
  %348 = add nuw nsw i64 %341, 1
  %349 = load i32, i32* %247, align 4
  %350 = sext i32 %349 to i64
  %351 = icmp slt i64 %348, %350
  br i1 %351, label %340, label %329

352:                                              ; preds = %211
  br label %379

353:                                              ; preds = %211
  br label %379

354:                                              ; preds = %211
  br label %379

355:                                              ; preds = %211
  br label %379

356:                                              ; preds = %211
  br label %379

357:                                              ; preds = %211
  br label %379

358:                                              ; preds = %211
  br label %379

359:                                              ; preds = %211
  br label %379

360:                                              ; preds = %211
  br label %379

361:                                              ; preds = %211
  br label %379

362:                                              ; preds = %211
  br label %379

363:                                              ; preds = %211
  br label %379

364:                                              ; preds = %211
  br label %379

365:                                              ; preds = %211
  br label %379

366:                                              ; preds = %211
  br label %379

367:                                              ; preds = %211
  br label %379

368:                                              ; preds = %211
  br label %379

369:                                              ; preds = %211
  br label %379

370:                                              ; preds = %211
  br label %379

371:                                              ; preds = %211
  br label %379

372:                                              ; preds = %211
  br label %379

373:                                              ; preds = %211
  br label %379

374:                                              ; preds = %211
  br label %379

375:                                              ; preds = %211
  br label %379

376:                                              ; preds = %211
  br label %379

377:                                              ; preds = %211
  br label %379

378:                                              ; preds = %211
  call void @llvm.trap() #11
  unreachable

379:                                              ; preds = %211, %211, %211, %352, %353, %354, %355, %356, %357, %358, %359, %360, %361, %362, %363, %364, %365, %366, %367, %368, %369, %370, %371, %372, %373, %374, %375, %376, %377
  %380 = phi i64 [ 2, %377 ], [ 2, %376 ], [ 2, %375 ], [ 2, %374 ], [ 2, %373 ], [ 4, %372 ], [ 8, %371 ], [ 4, %370 ], [ 2, %369 ], [ 4, %368 ], [ 16, %367 ], [ 4, %366 ], [ 16, %365 ], [ 8, %364 ], [ 8, %363 ], [ 2, %362 ], [ 2, %361 ], [ 4, %360 ], [ 4, %359 ], [ 4, %358 ], [ 2, %357 ], [ 4, %356 ], [ 4, %355 ], [ 4, %354 ], [ 2, %353 ], [ 2, %352 ], [ 1, %211 ], [ 1, %211 ], [ 1, %211 ]
  %381 = add i32 %89, -1
  %382 = icmp ult i32 %381, 30
  br i1 %382, label %384, label %383

383:                                              ; preds = %379
  call void @llvm.trap() #11
  unreachable

384:                                              ; preds = %379
  %385 = sext i32 %381 to i64
  %386 = getelementptr inbounds [30 x i64], [30 x i64]* @switch.table._Z12GrClearImageRK11GrImageInfoPvmNSt3__15arrayIfLm4EEE, i64 0, i64 %385
  %387 = load i64, i64* %386, align 8
  %388 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 2, i32 0, i32 3
  %389 = load i32, i32* %388, align 4
  switch i32 %389, label %398 [
    i32 3, label %390
    i32 2, label %394
  ]

390:                                              ; preds = %384
  %391 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 2, i32 0, i32 3
  %392 = load i32, i32* %391, align 4
  %393 = icmp eq i32 %392, 2
  br label %398

394:                                              ; preds = %384
  %395 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 2, i32 0, i32 3
  %396 = load i32, i32* %395, align 4
  %397 = icmp eq i32 %396, 3
  br label %398

398:                                              ; preds = %384, %390, %394
  %399 = phi i1 [ false, %394 ], [ %393, %390 ], [ false, %384 ]
  %400 = phi i1 [ %397, %394 ], [ false, %390 ], [ false, %384 ]
  %401 = or i1 %399, %400
  br i1 %401, label %481, label %402

402:                                              ; preds = %398
  %403 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %404 = load %class.SkColorSpace*, %class.SkColorSpace** %403, align 8
  %405 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %406 = load %class.SkColorSpace*, %class.SkColorSpace** %405, align 8
  %407 = call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %404, %class.SkColorSpace* %406) #11
  %408 = xor i1 %407, true
  %409 = load i32, i32* %84, align 8
  %410 = load i32, i32* %88, align 8
  %411 = icmp ne i32 %409, %410
  %412 = or i1 %411, %408
  br i1 %412, label %481, label %413

413:                                              ; preds = %402
  %414 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %415 = load i32, i32* %414, align 4
  %416 = sext i32 %415 to i64
  %417 = mul nsw i64 %387, %416
  br i1 %2, label %418, label %444

418:                                              ; preds = %413
  %419 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 1
  %420 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 2, i32 1, i32 1
  %421 = load i32, i32* %420, align 4
  %422 = icmp sgt i32 %421, 0
  br i1 %422, label %423, label %755

423:                                              ; preds = %418
  %424 = load i8*, i8** %96, align 8
  %425 = load i64, i64* %419, align 8
  %426 = add nsw i32 %421, -1
  %427 = sext i32 %426 to i64
  %428 = mul i64 %425, %427
  %429 = getelementptr inbounds i8, i8* %424, i64 %428
  %430 = load i8*, i8** %92, align 8
  %431 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 1
  br label %432

432:                                              ; preds = %423, %432
  %433 = phi i32 [ 0, %423 ], [ %436, %432 ]
  %434 = phi i8* [ %429, %423 ], [ %439, %432 ]
  %435 = phi i8* [ %430, %423 ], [ %441, %432 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %434, i8* align 1 %435, i64 %417, i1 false)
  %436 = add nuw nsw i32 %433, 1
  %437 = load i64, i64* %419, align 8
  %438 = sub i64 0, %437
  %439 = getelementptr inbounds i8, i8* %434, i64 %438
  %440 = load i64, i64* %431, align 8
  %441 = getelementptr inbounds i8, i8* %435, i64 %440
  %442 = load i32, i32* %420, align 4
  %443 = icmp slt i32 %436, %442
  br i1 %443, label %432, label %755

444:                                              ; preds = %413
  %445 = load i8*, i8** %96, align 8
  %446 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 1
  %447 = load i64, i64* %446, align 8
  %448 = load i8*, i8** %92, align 8
  %449 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 1
  %450 = load i64, i64* %449, align 8
  %451 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 2, i32 1, i32 1
  %452 = load i32, i32* %451, align 4
  %453 = icmp eq i64 %417, %447
  %454 = icmp eq i64 %417, %450
  %455 = and i1 %453, %454
  br i1 %455, label %464, label %456

456:                                              ; preds = %444
  %457 = icmp sgt i32 %452, 0
  br i1 %457, label %458, label %755

458:                                              ; preds = %456
  %459 = add i32 %452, -1
  %460 = and i32 %452, 3
  %461 = icmp ult i32 %459, 3
  br i1 %461, label %743, label %462

462:                                              ; preds = %458
  %463 = sub i32 %452, %460
  br label %467

464:                                              ; preds = %444
  %465 = sext i32 %452 to i64
  %466 = mul i64 %417, %465
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %445, i8* align 1 %448, i64 %466, i1 false) #11
  br label %755

467:                                              ; preds = %467, %462
  %468 = phi i8* [ %445, %462 ], [ %477, %467 ]
  %469 = phi i8* [ %448, %462 ], [ %478, %467 ]
  %470 = phi i32 [ %463, %462 ], [ %479, %467 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %468, i8* align 1 %469, i64 %417, i1 false) #11
  %471 = getelementptr inbounds i8, i8* %468, i64 %447
  %472 = getelementptr inbounds i8, i8* %469, i64 %450
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %471, i8* align 1 %472, i64 %417, i1 false) #11
  %473 = getelementptr inbounds i8, i8* %471, i64 %447
  %474 = getelementptr inbounds i8, i8* %472, i64 %450
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %473, i8* align 1 %474, i64 %417, i1 false) #11
  %475 = getelementptr inbounds i8, i8* %473, i64 %447
  %476 = getelementptr inbounds i8, i8* %474, i64 %450
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %475, i8* align 1 %476, i64 %417, i1 false) #11
  %477 = getelementptr inbounds i8, i8* %475, i64 %447
  %478 = getelementptr inbounds i8, i8* %476, i64 %450
  %479 = add i32 %470, -4
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %743, label %467

481:                                              ; preds = %398, %402
  %482 = phi i32 [ %409, %402 ], [ %85, %398 ]
  %483 = phi i1 [ %408, %402 ], [ true, %398 ]
  %484 = bitcast %class.GrSwizzle* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %484) #11
  %485 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %20, i64 0, i32 0
  store i16 -21846, i16* %485, align 2, !alias.scope !11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  switch i32 %482, label %542 [
    i32 1, label %486
    i32 17, label %487
    i32 2, label %488
    i32 3, label %489
    i32 30, label %490
    i32 29, label %494
    i32 4, label %498
    i32 7, label %499
    i32 9, label %500
    i32 10, label %501
    i32 13, label %505
    i32 15, label %506
    i32 18, label %507
    i32 20, label %508
    i32 5, label %509
    i32 19, label %510
    i32 14, label %511
    i32 16, label %512
    i32 21, label %513
    i32 22, label %517
    i32 23, label %521
    i32 11, label %525
    i32 12, label %529
    i32 8, label %533
    i32 6, label %537
    i32 24, label %541
    i32 25, label %541
    i32 26, label %541
    i32 27, label %541
    i32 28, label %541
    i32 0, label %541
  ]

486:                                              ; preds = %481
  br label %542

487:                                              ; preds = %481
  br label %542

488:                                              ; preds = %481
  br label %542

489:                                              ; preds = %481
  br label %542

490:                                              ; preds = %481
  %491 = bitcast %class.GrSwizzle* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %491) #11, !noalias !11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #11
  %492 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %4, i64 0, i32 0
  %493 = load i16, i16* %492, align 2, !noalias !11
  store i16 %493, i16* %485, align 2, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %491) #11, !noalias !11
  br label %542

494:                                              ; preds = %481
  %495 = bitcast %class.GrSwizzle* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %495) #11, !noalias !11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #11
  %496 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %5, i64 0, i32 0
  %497 = load i16, i16* %496, align 2, !noalias !11
  store i16 %497, i16* %485, align 2, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %495) #11, !noalias !11
  br label %542

498:                                              ; preds = %481
  br label %542

499:                                              ; preds = %481
  br label %542

500:                                              ; preds = %481
  br label %542

501:                                              ; preds = %481
  %502 = bitcast %class.GrSwizzle* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %502) #11, !noalias !11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #11
  %503 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %6, i64 0, i32 0
  %504 = load i16, i16* %503, align 2, !noalias !11
  store i16 %504, i16* %485, align 2, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %502) #11, !noalias !11
  br label %542

505:                                              ; preds = %481
  br label %542

506:                                              ; preds = %481
  br label %542

507:                                              ; preds = %481
  br label %542

508:                                              ; preds = %481
  br label %542

509:                                              ; preds = %481
  br label %542

510:                                              ; preds = %481
  br label %542

511:                                              ; preds = %481
  br label %542

512:                                              ; preds = %481
  br label %542

513:                                              ; preds = %481
  %514 = bitcast %class.GrSwizzle* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %514) #11, !noalias !11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)) #11
  %515 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %7, i64 0, i32 0
  %516 = load i16, i16* %515, align 2, !noalias !11
  store i16 %516, i16* %485, align 2, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %514) #11, !noalias !11
  br label %542

517:                                              ; preds = %481
  %518 = bitcast %class.GrSwizzle* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %518) #11, !noalias !11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)) #11
  %519 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %8, i64 0, i32 0
  %520 = load i16, i16* %519, align 2, !noalias !11
  store i16 %520, i16* %485, align 2, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %518) #11, !noalias !11
  br label %542

521:                                              ; preds = %481
  %522 = bitcast %class.GrSwizzle* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %522) #11, !noalias !11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #11
  %523 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %9, i64 0, i32 0
  %524 = load i16, i16* %523, align 2, !noalias !11
  store i16 %524, i16* %485, align 2, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %522) #11, !noalias !11
  br label %542

525:                                              ; preds = %481
  %526 = bitcast %class.GrSwizzle* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %526) #11, !noalias !11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #11
  %527 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %10, i64 0, i32 0
  %528 = load i16, i16* %527, align 2, !noalias !11
  store i16 %528, i16* %485, align 2, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %526) #11, !noalias !11
  br label %542

529:                                              ; preds = %481
  %530 = bitcast %class.GrSwizzle* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %530) #11, !noalias !11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)) #11
  %531 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %11, i64 0, i32 0
  %532 = load i16, i16* %531, align 2, !noalias !11
  store i16 %532, i16* %485, align 2, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %530) #11, !noalias !11
  br label %542

533:                                              ; preds = %481
  %534 = bitcast %class.GrSwizzle* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %534) #11, !noalias !11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #11
  %535 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %12, i64 0, i32 0
  %536 = load i16, i16* %535, align 2, !noalias !11
  store i16 %536, i16* %485, align 2, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %534) #11, !noalias !11
  br label %542

537:                                              ; preds = %481
  %538 = bitcast %class.GrSwizzle* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %538) #11, !noalias !11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0)) #11
  %539 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %13, i64 0, i32 0
  %540 = load i16, i16* %539, align 2, !noalias !11
  store i16 %540, i16* %485, align 2, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %538) #11, !noalias !11
  br label %542

541:                                              ; preds = %481, %481, %481, %481, %481, %481
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0), i32 409, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

542:                                              ; preds = %481, %486, %487, %488, %489, %490, %494, %498, %499, %500, %501, %505, %506, %507, %508, %509, %510, %511, %512, %513, %517, %521, %525, %529, %533, %537
  %543 = phi i8 [ 0, %481 ], [ 0, %537 ], [ 0, %533 ], [ 0, %529 ], [ 0, %525 ], [ 0, %521 ], [ 0, %517 ], [ 0, %513 ], [ 0, %512 ], [ 0, %511 ], [ 0, %510 ], [ 1, %509 ], [ 0, %508 ], [ 0, %507 ], [ 0, %506 ], [ 0, %505 ], [ 0, %501 ], [ 0, %500 ], [ 0, %499 ], [ 0, %498 ], [ 0, %494 ], [ 0, %490 ], [ 0, %489 ], [ 0, %488 ], [ 0, %487 ], [ 0, %486 ]
  %544 = phi i8 [ 1, %481 ], [ 1, %537 ], [ 1, %533 ], [ 1, %529 ], [ 1, %525 ], [ 1, %521 ], [ 1, %517 ], [ 1, %513 ], [ 0, %512 ], [ 0, %511 ], [ 0, %510 ], [ 1, %509 ], [ 1, %508 ], [ 1, %507 ], [ 1, %506 ], [ 1, %505 ], [ 1, %501 ], [ 1, %500 ], [ 1, %499 ], [ 1, %498 ], [ 1, %494 ], [ 1, %490 ], [ 1, %489 ], [ 1, %488 ], [ 1, %487 ], [ 1, %486 ]
  %545 = phi i32 [ -1431655766, %481 ], [ 53, %537 ], [ 53, %533 ], [ 57, %529 ], [ 23, %525 ], [ 53, %521 ], [ 47, %517 ], [ 53, %513 ], [ 47, %512 ], [ 35, %511 ], [ 43, %510 ], [ 53, %509 ], [ 69, %508 ], [ 65, %507 ], [ 35, %506 ], [ 39, %505 ], [ 73, %501 ], [ 73, %500 ], [ 57, %499 ], [ 53, %498 ], [ 31, %494 ], [ 31, %490 ], [ 31, %489 ], [ 27, %488 ], [ 61, %487 ], [ 23, %486 ]
  %546 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %546) #11
  store i32 -1431655766, i32* %21, align 4
  %547 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %547) #11
  store i32 -1431655766, i32* %22, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #11
  store i8 -86, i8* %23, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #11
  store i8 -86, i8* %24, align 1
  %548 = bitcast %class.GrSwizzle* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %548) #11
  %549 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %25, i64 0, i32 0
  store i16 -21846, i16* %549, align 2
  %550 = load i32, i32* %88, align 8
  call fastcc void @_ZL25get_dst_swizzle_and_store11GrColorTypePN16SkRasterPipeline10StockStageEP7LumModePbS5_(%class.GrSwizzle* nonnull sret %25, i32 %550, i32* nonnull %21, i32* nonnull %22, i8* nonnull %23, i8* nonnull %24)
  %551 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %26, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %551) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %551, i8 -86, i64 104, i1 false)
  %552 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %26, i64 0, i32 1
  store %struct.SkColorSpaceXformSteps* null, %struct.SkColorSpaceXformSteps** %552, align 8
  %553 = bitcast %class.GrSwizzle* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %553) #11
  %554 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %27, i64 0, i32 0
  store i16 -21846, i16* %554, align 2
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  br i1 %483, label %555, label %575

555:                                              ; preds = %542
  %556 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %557 = load %class.SkColorSpace*, %class.SkColorSpace** %556, align 8
  %558 = load i32, i32* %388, align 4
  %559 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %560 = load %class.SkColorSpace*, %class.SkColorSpace** %559, align 8
  %561 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 2, i32 0, i32 3
  %562 = load i32, i32* %561, align 4
  %563 = load %struct.SkColorSpaceXformSteps*, %struct.SkColorSpaceXformSteps** %552, align 8
  %564 = icmp eq %struct.SkColorSpaceXformSteps* %563, null
  br i1 %564, label %566, label %565

565:                                              ; preds = %555
  store %struct.SkColorSpaceXformSteps* null, %struct.SkColorSpaceXformSteps** %552, align 8
  br label %566

566:                                              ; preds = %555, %565
  %567 = bitcast %class.SkTLazy* %26 to %struct.SkColorSpaceXformSteps*
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %567, %class.SkColorSpace* %557, i32 %558, %class.SkColorSpace* %560, i32 %562) #11
  %568 = bitcast %struct.SkColorSpaceXformSteps** %552 to %class.SkTLazy**
  store %class.SkTLazy* %26, %class.SkTLazy** %568, align 8
  %569 = load i8, i8* %23, align 1, !range !14
  %570 = icmp eq i8 %569, 0
  br i1 %570, label %632, label %571

571:                                              ; preds = %566
  %572 = load i32, i32* %561, align 4
  %573 = icmp eq i32 %572, 2
  %574 = zext i1 %573 to i8
  br label %632

575:                                              ; preds = %542
  %576 = load i8, i8* %23, align 1, !range !14
  %577 = icmp ne i8 %576, 0
  %578 = icmp eq i8 %544, 0
  %579 = and i1 %578, %577
  br i1 %579, label %580, label %584

580:                                              ; preds = %575
  %581 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 2, i32 0, i32 3
  %582 = load i32, i32* %581, align 4
  %583 = icmp eq i32 %582, 2
  br i1 %583, label %632, label %584

584:                                              ; preds = %575, %580
  %585 = load i16, i16* %549, align 2, !noalias !15
  %586 = zext i16 %585 to i32
  %587 = load i16, i16* %485, align 2, !noalias !15
  %588 = zext i16 %587 to i32
  %589 = and i32 %586, 15
  switch i32 %589, label %590 [
    i32 4, label %596
    i32 5, label %595
  ]

590:                                              ; preds = %584
  %591 = shl nuw nsw i32 %589, 2
  %592 = lshr i32 %588, %591
  %593 = trunc i32 %592 to i16
  %594 = and i16 %593, 15
  br label %596

595:                                              ; preds = %584
  br label %596

596:                                              ; preds = %595, %590, %584
  %597 = phi i16 [ %594, %590 ], [ 4, %584 ], [ 5, %595 ]
  %598 = lshr i32 %586, 4
  %599 = and i32 %598, 15
  switch i32 %599, label %601 [
    i32 4, label %607
    i32 5, label %600
  ]

600:                                              ; preds = %596
  br label %607

601:                                              ; preds = %596
  %602 = shl nuw nsw i32 %599, 2
  %603 = lshr i32 %588, %602
  %604 = trunc i32 %603 to i16
  %605 = shl i16 %604, 4
  %606 = and i16 %605, 240
  br label %607

607:                                              ; preds = %601, %600, %596
  %608 = phi i16 [ %606, %601 ], [ 64, %596 ], [ 80, %600 ]
  %609 = or i16 %608, %597
  %610 = lshr i32 %586, 8
  %611 = and i32 %610, 15
  switch i32 %611, label %613 [
    i32 4, label %619
    i32 5, label %612
  ]

612:                                              ; preds = %607
  br label %619

613:                                              ; preds = %607
  %614 = shl nuw nsw i32 %611, 2
  %615 = lshr i32 %588, %614
  %616 = trunc i32 %615 to i16
  %617 = shl i16 %616, 8
  %618 = and i16 %617, 3840
  br label %619

619:                                              ; preds = %613, %612, %607
  %620 = phi i16 [ %618, %613 ], [ 1024, %607 ], [ 1280, %612 ]
  %621 = or i16 %609, %620
  %622 = lshr i32 %586, 12
  switch i32 %622, label %624 [
    i32 4, label %629
    i32 5, label %623
  ]

623:                                              ; preds = %619
  br label %629

624:                                              ; preds = %619
  %625 = shl nuw nsw i32 %622, 2
  %626 = lshr i32 %588, %625
  %627 = trunc i32 %626 to i16
  %628 = shl i16 %627, 12
  br label %629

629:                                              ; preds = %619, %623, %624
  %630 = phi i16 [ %628, %624 ], [ 16384, %619 ], [ 20480, %623 ]
  %631 = or i16 %621, %630
  store i16 %631, i16* %554, align 2
  br label %632

632:                                              ; preds = %571, %566, %580, %629
  %633 = phi i8 [ 1, %580 ], [ 0, %629 ], [ 0, %566 ], [ %574, %571 ]
  %634 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 2, i32 1, i32 1
  %635 = load i32, i32* %634, align 4
  %636 = bitcast %struct.SkRasterPipeline_MemoryCtx* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %636) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %636, i8 -86, i64 16, i1 false)
  %637 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %28, i64 0, i32 0
  %638 = load i8*, i8** %92, align 8
  store i8* %638, i8** %637, align 8
  %639 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %28, i64 0, i32 1
  %640 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 1
  %641 = load i64, i64* %640, align 8
  %642 = udiv i64 %641, %380
  %643 = trunc i64 %642 to i32
  store i32 %643, i32* %639, align 8
  %644 = bitcast %struct.SkRasterPipeline_MemoryCtx* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %644) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %644, i8 -86, i64 16, i1 false)
  %645 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %29, i64 0, i32 0
  %646 = bitcast %class.GrPixmap* %0 to i64*
  %647 = load i64, i64* %646, align 8
  %648 = bitcast %struct.SkRasterPipeline_MemoryCtx* %29 to i64*
  store i64 %647, i64* %648, align 8
  %649 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %29, i64 0, i32 1
  %650 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0, i32 1
  %651 = load i64, i64* %650, align 8
  %652 = udiv i64 %651, %387
  %653 = trunc i64 %652 to i32
  store i32 %653, i32* %649, align 8
  br i1 %2, label %654, label %659

654:                                              ; preds = %632
  %655 = add nsw i32 %635, -1
  %656 = sext i32 %655 to i64
  %657 = mul i64 %641, %656
  %658 = getelementptr inbounds i8, i8* %638, i64 %657
  store i8* %658, i8** %637, align 8
  br label %659

659:                                              ; preds = %654, %632
  %660 = phi i32 [ %635, %654 ], [ 1, %632 ]
  %661 = phi i32 [ 1, %654 ], [ %635, %632 ]
  %662 = xor i1 %483, true
  %663 = icmp eq i8 %633, 0
  %664 = and i1 %663, %662
  br i1 %664, label %667, label %665

665:                                              ; preds = %659
  %666 = icmp eq i8 %543, 0
  br label %684

667:                                              ; preds = %659
  %668 = load i32, i32* %22, align 4
  %669 = icmp ne i32 %668, 0
  %670 = icmp eq i8 %543, 0
  %671 = load i8, i8* %24, align 1
  %672 = icmp eq i8 %671, 0
  %673 = or i1 %670, %672
  %674 = or i1 %669, %673
  br i1 %674, label %676, label %675

675:                                              ; preds = %667
  store i8 0, i8* %24, align 1
  br label %676

676:                                              ; preds = %667, %675
  %677 = phi i8 [ %671, %667 ], [ 0, %675 ]
  %678 = phi i8 [ %543, %667 ], [ 0, %675 ]
  %679 = xor i1 %669, true
  %680 = icmp eq i8 %678, 0
  %681 = and i1 %680, %679
  br i1 %681, label %682, label %684

682:                                              ; preds = %676
  %683 = icmp ne i8 %677, 0
  br label %684

684:                                              ; preds = %665, %676, %682
  %685 = phi i1 [ %680, %676 ], [ true, %682 ], [ %666, %665 ]
  %686 = phi i1 [ true, %676 ], [ %683, %682 ], [ true, %665 ]
  %687 = icmp sgt i32 %660, 0
  br i1 %687, label %688, label %696

688:                                              ; preds = %684
  %689 = bitcast %class.SkRasterPipeline_* %30 to i8*
  %690 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %30, i64 0, i32 0
  %691 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %30, i64 0, i32 1, i32 0, i32 0, i64 256
  %692 = bitcast i8* %691 to %class.SkArenaAlloc*
  %693 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %30, i64 0, i32 1, i32 0, i32 0, i64 0
  %694 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %1, i64 0, i32 0, i32 2, i32 1, i32 0
  %695 = sext i32 %661 to i64
  br label %701

696:                                              ; preds = %729, %684
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %644) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %636) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %553) #11
  %697 = load %struct.SkColorSpaceXformSteps*, %struct.SkColorSpaceXformSteps** %552, align 8
  %698 = icmp eq %struct.SkColorSpaceXformSteps* %697, null
  br i1 %698, label %700, label %699

699:                                              ; preds = %696
  store %struct.SkColorSpaceXformSteps* null, %struct.SkColorSpaceXformSteps** %552, align 8
  br label %700

700:                                              ; preds = %696, %699
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %551) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %548) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %547) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %546) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %484) #11
  br label %755

701:                                              ; preds = %729, %688
  %702 = phi i32 [ 0, %688 ], [ %741, %729 ]
  call void @llvm.lifetime.start.p0i8(i64 312, i8* nonnull %689) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %689, i8 -86, i64 312, i1 false)
  call void @_ZN16SkRasterPipelineC2EP12SkArenaAlloc(%class.SkRasterPipeline* nonnull %690, %class.SkArenaAlloc* %692) #11
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %692, i8* %693, i64 256, i64 256) #11
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %690, i32 %545, i8* nonnull %636) #11
  br i1 %686, label %703, label %729

703:                                              ; preds = %701
  call void @_ZNK9GrSwizzle5applyEP16SkRasterPipeline(%class.GrSwizzle* nonnull %20, %class.SkRasterPipeline* nonnull %690) #11
  br i1 %685, label %706, label %704

704:                                              ; preds = %703
  %705 = call %struct.skcms_TransferFunction* @skcms_sRGB_TransferFunction() #11
  call void @_ZN16SkRasterPipeline24append_transfer_functionERK22skcms_TransferFunction(%class.SkRasterPipeline* nonnull %690, %struct.skcms_TransferFunction* dereferenceable(28) %705) #11
  br label %706

706:                                              ; preds = %703, %704
  br i1 %483, label %707, label %709

707:                                              ; preds = %706
  %708 = load %struct.SkColorSpaceXformSteps*, %struct.SkColorSpaceXformSteps** %552, align 8
  call void @_ZNK22SkColorSpaceXformSteps5applyEP16SkRasterPipeline(%struct.SkColorSpaceXformSteps* %708, %class.SkRasterPipeline* nonnull %690) #11
  br label %709

709:                                              ; preds = %707, %706
  br i1 %663, label %719, label %710

710:                                              ; preds = %709
  %711 = load atomic i8, i8* bitcast (i64* @_ZGVZL18append_clamp_gamutP16SkRasterPipelineE6fakeII to i8*) acquire, align 8
  %712 = icmp eq i8 %711, 0
  br i1 %712, label %713, label %718, !prof !18

713:                                              ; preds = %710
  %714 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL18append_clamp_gamutP16SkRasterPipelineE6fakeII) #11
  %715 = icmp eq i32 %714, 0
  br i1 %715, label %718, label %716

716:                                              ; preds = %713
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* bitcast (%struct.SkImageInfo* @_ZZL18append_clamp_gamutP16SkRasterPipelineE6fakeII to <2 x i64>*), align 16, !alias.scope !19
  store i64 4294967297, i64* bitcast (%struct.SkISize* getelementptr inbounds (%struct.SkImageInfo, %struct.SkImageInfo* @_ZZL18append_clamp_gamutP16SkRasterPipelineE6fakeII, i64 0, i32 1) to i64*), align 16, !alias.scope !19
  %717 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%struct.SkImageInfo*)* @_ZN11SkImageInfoD2Ev to void (i8*)*), i8* bitcast (%struct.SkImageInfo* @_ZZL18append_clamp_gamutP16SkRasterPipelineE6fakeII to i8*), i8* nonnull @__dso_handle) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZL18append_clamp_gamutP16SkRasterPipelineE6fakeII) #11
  br label %718

718:                                              ; preds = %710, %713, %716
  call void @_ZN16SkRasterPipeline32append_gamut_clamp_if_normalizedERK11SkImageInfo(%class.SkRasterPipeline* nonnull %690, %struct.SkImageInfo* nonnull dereferenceable(24) @_ZZL18append_clamp_gamutP16SkRasterPipelineE6fakeII) #11
  br label %719

719:                                              ; preds = %709, %718
  %720 = load i32, i32* %22, align 4
  switch i32 %720, label %724 [
    i32 2, label %721
    i32 1, label %722
  ]

721:                                              ; preds = %719
  br label %722

722:                                              ; preds = %719, %721
  %723 = phi i32 [ 79, %721 ], [ 80, %719 ]
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %690, i32 %723, i8* null) #11
  br label %724

724:                                              ; preds = %722, %719
  %725 = load i8, i8* %24, align 1, !range !14
  %726 = icmp eq i8 %725, 0
  br i1 %726, label %729, label %727

727:                                              ; preds = %724
  %728 = call %struct.skcms_TransferFunction* @skcms_sRGB_Inverse_TransferFunction() #11
  call void @_ZN16SkRasterPipeline24append_transfer_functionERK22skcms_TransferFunction(%class.SkRasterPipeline* nonnull %690, %struct.skcms_TransferFunction* dereferenceable(28) %728) #11
  br label %729

729:                                              ; preds = %701, %727, %724
  %730 = phi %class.GrSwizzle* [ %25, %724 ], [ %25, %727 ], [ %27, %701 ]
  call void @_ZNK9GrSwizzle5applyEP16SkRasterPipeline(%class.GrSwizzle* nonnull %730, %class.SkRasterPipeline* nonnull %690) #11
  %731 = load i32, i32* %21, align 4
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %690, i32 %731, i8* nonnull %644) #11
  %732 = load i32, i32* %694, align 4
  %733 = sext i32 %732 to i64
  call void @_ZNK16SkRasterPipeline3runEmmmm(%class.SkRasterPipeline* nonnull %690, i64 0, i64 0, i64 %733, i64 %695) #11
  %734 = load i8*, i8** %637, align 8
  %735 = load i64, i64* %640, align 8
  %736 = sub i64 0, %735
  %737 = getelementptr inbounds i8, i8* %734, i64 %736
  store i8* %737, i8** %637, align 8
  %738 = load i8*, i8** %645, align 8
  %739 = load i64, i64* %650, align 8
  %740 = getelementptr inbounds i8, i8* %738, i64 %739
  store i8* %740, i8** %645, align 8
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %692) #11
  call void @llvm.lifetime.end.p0i8(i64 312, i8* nonnull %689) #11
  %741 = add nuw nsw i32 %702, 1
  %742 = icmp eq i32 %741, %660
  br i1 %742, label %696, label %701

743:                                              ; preds = %467, %458
  %744 = phi i8* [ %445, %458 ], [ %477, %467 ]
  %745 = phi i8* [ %448, %458 ], [ %478, %467 ]
  %746 = icmp eq i32 %460, 0
  br i1 %746, label %755, label %747

747:                                              ; preds = %743, %747
  %748 = phi i8* [ %751, %747 ], [ %744, %743 ]
  %749 = phi i8* [ %752, %747 ], [ %745, %743 ]
  %750 = phi i32 [ %753, %747 ], [ %460, %743 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %748, i8* align 1 %749, i64 %417, i1 false) #11
  %751 = getelementptr inbounds i8, i8* %748, i64 %447
  %752 = getelementptr inbounds i8, i8* %749, i64 %450
  %753 = add i32 %750, -1
  %754 = icmp eq i32 %753, 0
  br i1 %754, label %755, label %747, !llvm.loop !24

755:                                              ; preds = %743, %747, %432, %418, %91, %95, %73, %63, %464, %456, %700, %83, %87, %328, %210
  %756 = phi i1 [ %176, %210 ], [ %260, %328 ], [ false, %87 ], [ false, %83 ], [ false, %95 ], [ false, %91 ], [ true, %700 ], [ true, %456 ], [ true, %464 ], [ false, %63 ], [ false, %73 ], [ true, %418 ], [ true, %432 ], [ true, %747 ], [ true, %743 ]
  %757 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %45, align 8
  %758 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %757, null
  br i1 %758, label %772, label %759

759:                                              ; preds = %755
  %760 = load i8*, i8** %46, align 8
  %761 = load i8, i8* %760, align 1
  %762 = icmp eq i8 %761, 0
  br i1 %762, label %772, label %763

763:                                              ; preds = %759
  %764 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #11
  %765 = load i8*, i8** %46, align 8
  %766 = load i8*, i8** %47, align 8
  %767 = load i64, i64* %48, align 8
  %768 = bitcast %class.SkEventTracer* %764 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %769 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %768, align 8
  %770 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %769, i64 5
  %771 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %770, align 8
  call void %771(%class.SkEventTracer* %764, i8* %765, i8* %766, i64 %767) #11
  br label %772

772:                                              ; preds = %755, %759, %763
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #11
  ret i1 %756
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8GrPixmap8AllocateERK11GrImageInfo(%class.GrPixmap* noalias sret, %class.GrImageInfo* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.GrImageInfo, align 8
  %4 = alloca %class.sk_sp.12, align 8
  %5 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %6, 31
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @llvm.trap() #11
  unreachable

9:                                                ; preds = %2
  %10 = sext i32 %6 to i64
  %11 = getelementptr inbounds [31 x i64], [31 x i64]* @switch.table._ZN12GrPixmapBaseIKv9GrCPixmapEC2E11GrImageInfoPS0_m, i64 0, i64 %10
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = mul nsw i64 %12, %15
  %17 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = mul i64 %16, %19
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %9
  %23 = bitcast %class.GrPixmap* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 56, i1 false)
  br label %65

24:                                               ; preds = %9
  %25 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %3, i64 0, i32 0
  %26 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %25, %class.GrColorInfo* dereferenceable(24) %26) #11
  %27 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %3, i64 0, i32 1
  %28 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 1
  %29 = bitcast %struct.SkISize* %28 to i64*
  %30 = bitcast %struct.SkISize* %27 to i64*
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.12* nonnull sret %4, i64 %20) #11
  call void @_ZN8GrPixmapC2E11GrImageInfo5sk_spI6SkDataEm(%class.GrPixmap* %0, %class.GrImageInfo* nonnull %3, %class.sk_sp.12* nonnull %4, i64 %16)
  %32 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %4, i64 0, i32 0
  %33 = load %class.SkData*, %class.SkData** %32, align 8
  %34 = icmp eq %class.SkData* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %24
  %36 = getelementptr inbounds %class.SkData, %class.SkData* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %33) #11
  %40 = bitcast %class.SkData* %33 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %40) #11
  br label %41

41:                                               ; preds = %24, %35, %39
  %42 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %3, i64 0, i32 0, i32 1, i32 0
  %43 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %42, align 8
  %44 = icmp eq %class.GrColorSpaceXform* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %43, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %class.GrColorSpaceXform* %43 to %class.SkRefCntBase*
  %51 = bitcast %class.GrColorSpaceXform* %43 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  call void %54(%class.SkRefCntBase* nonnull %50) #11
  br label %55

55:                                               ; preds = %49, %45, %41
  %56 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %57 = load %class.SkColorSpace*, %class.SkColorSpace** %56, align 8
  %58 = icmp eq %class.SkColorSpace* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  %64 = bitcast %class.SkColorSpace* %57 to i8*
  call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %63, %59, %55, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK11GrImageInfo13makeColorTypeE11GrColorType(%class.GrImageInfo* noalias sret, %class.GrImageInfo*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.GrColorInfo, align 8
  %6 = bitcast %class.GrColorInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 0, i32 3
  %9 = load i32, i32* %8, align 4, !noalias !25
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %11 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 8, !noalias !28
  %13 = icmp eq %class.SkColorSpace* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic, !noalias !31
  br label %17

17:                                               ; preds = %14, %3
  store %class.SkColorSpace* %12, %class.SkColorSpace** %10, align 8, !alias.scope !31, !noalias !25
  call void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo* nonnull %5, i32 %2, i32 %9, %class.sk_sp* nonnull %4) #11
  %18 = load %class.SkColorSpace*, %class.SkColorSpace** %10, align 8, !noalias !25
  %19 = icmp eq %class.SkColorSpace* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = bitcast %class.SkColorSpace* %18 to i8*
  call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %17, %20, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  %27 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 1
  %28 = bitcast %struct.SkISize* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %0, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* %30, %class.GrColorInfo* nonnull dereferenceable(24) %5) #11
  %31 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %0, i64 0, i32 1
  %32 = bitcast %struct.SkISize* %31 to i64*
  store i64 %29, i64* %32, align 8
  %33 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %5, i64 0, i32 1, i32 0
  %34 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %33, align 8
  %35 = icmp eq %class.GrColorSpaceXform* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %34, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %46

40:                                               ; preds = %36
  %41 = bitcast %class.GrColorSpaceXform* %34 to %class.SkRefCntBase*
  %42 = bitcast %class.GrColorSpaceXform* %34 to void (%class.SkRefCntBase*)***
  %43 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, i64 2
  %45 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, align 8
  call void %45(%class.SkRefCntBase* nonnull %41) #11
  br label %46

46:                                               ; preds = %40, %36, %26
  %47 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %5, i64 0, i32 0, i32 0
  %48 = load %class.SkColorSpace*, %class.SkColorSpace** %47, align 8
  %49 = icmp eq %class.SkColorSpace* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 -1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = bitcast %class.SkColorSpace* %48 to i8*
  call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %46, %50, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrCPixmapC2ERK8GrPixmap(%class.GrCPixmap*, %class.GrPixmap* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.GrImageInfo, align 8
  %4 = alloca %class.GrCPixmap, align 8
  %5 = alloca %class.GrImageInfo, align 8
  %6 = alloca %class.sk_sp.12, align 8
  %7 = alloca %class.GrCPixmap, align 8
  %8 = alloca %class.GrImageInfo, align 8
  %9 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %0, i64 0, i32 0, i32 3, i32 0
  store %class.SkData* null, %class.SkData** %9, align 8
  %10 = bitcast %class.GrCPixmap* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 40, i1 false) #11
  %11 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %1, i64 0, i32 0, i32 3, i32 0
  %12 = load %class.SkData*, %class.SkData** %11, align 8, !noalias !32
  %13 = icmp eq %class.SkData* %12, null
  br i1 %13, label %115, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkData, %class.SkData* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic, !noalias !32
  %17 = ptrtoint %class.SkData* %12 to i64
  %18 = bitcast %class.GrCPixmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %18) #11
  %19 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0
  %20 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %1, i64 0, i32 0, i32 2, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %19, %class.GrColorInfo* dereferenceable(24) %20) #11
  %21 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 1
  %22 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %1, i64 0, i32 0, i32 2, i32 1
  %23 = bitcast %struct.SkISize* %22 to i64*
  %24 = bitcast %struct.SkISize* %21 to i64*
  %25 = load i64, i64* %23, align 8
  store i64 %25, i64* %24, align 8
  %26 = bitcast %class.sk_sp.12* %6 to i64*
  store i64 %17, i64* %26, align 8
  %27 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %1, i64 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  call void @_ZN9GrCPixmapC2E11GrImageInfo5sk_spI6SkDataEm(%class.GrCPixmap* nonnull %4, %class.GrImageInfo* nonnull %5, %class.sk_sp.12* nonnull %6, i64 %28)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* nonnull align 8 %18, i64 16, i1 false) #11
  %29 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %0, i64 0, i32 0, i32 2, i32 0
  %30 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %4, i64 0, i32 0, i32 2, i32 0
  %31 = call dereferenceable(24) %class.GrColorInfo* @_ZN11GrColorInfoaSERKS_(%class.GrColorInfo* %29, %class.GrColorInfo* dereferenceable(24) %30) #11
  %32 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %0, i64 0, i32 0, i32 2, i32 1
  %33 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %4, i64 0, i32 0, i32 2, i32 1
  %34 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %4, i64 0, i32 0, i32 3, i32 0
  %35 = bitcast %struct.SkISize* %33 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 8
  store %class.SkData* null, %class.SkData** %34, align 8
  %37 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %0, i64 0, i32 0, i32 3, i32 0
  %38 = load %class.SkData*, %class.SkData** %37, align 8
  %39 = bitcast %struct.SkISize* %32 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %39, align 8
  %40 = icmp eq %class.SkData* %38, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %14
  %42 = getelementptr inbounds %class.SkData, %class.SkData* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %38) #11
  %46 = bitcast %class.SkData* %38 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %46) #11
  br label %47

47:                                               ; preds = %14, %41, %45
  %48 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %4, i64 0, i32 0, i32 3, i32 0
  %49 = load %class.SkData*, %class.SkData** %48, align 8
  %50 = icmp eq %class.SkData* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.SkData, %class.SkData* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %49) #11
  %56 = bitcast %class.SkData* %49 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %56) #11
  br label %57

57:                                               ; preds = %55, %51, %47
  %58 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %4, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %59 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %58, align 8
  %60 = icmp eq %class.GrColorSpaceXform* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %59, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = bitcast %class.GrColorSpaceXform* %59 to %class.SkRefCntBase*
  %67 = bitcast %class.GrColorSpaceXform* %59 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8
  call void %70(%class.SkRefCntBase* nonnull %66) #11
  br label %71

71:                                               ; preds = %65, %61, %57
  %72 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %4, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %73 = load %class.SkColorSpace*, %class.SkColorSpace** %72, align 8
  %74 = icmp eq %class.SkColorSpace* %73, null
  br i1 %74, label %81, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = bitcast %class.SkColorSpace* %73 to i8*
  call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %71, %75, %79
  %82 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %6, i64 0, i32 0
  %83 = load %class.SkData*, %class.SkData** %82, align 8
  %84 = icmp eq %class.SkData* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %class.SkData, %class.SkData* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %83) #11
  %90 = bitcast %class.SkData* %83 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %90) #11
  br label %91

91:                                               ; preds = %81, %85, %89
  %92 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0, i32 1, i32 0
  %93 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %92, align 8
  %94 = icmp eq %class.GrColorSpaceXform* %93, null
  br i1 %94, label %105, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %93, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 -1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %105

99:                                               ; preds = %95
  %100 = bitcast %class.GrColorSpaceXform* %93 to %class.SkRefCntBase*
  %101 = bitcast %class.GrColorSpaceXform* %93 to void (%class.SkRefCntBase*)***
  %102 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %101, align 8
  %103 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, i64 2
  %104 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, align 8
  call void %104(%class.SkRefCntBase* nonnull %100) #11
  br label %105

105:                                              ; preds = %99, %95, %91
  %106 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %107 = load %class.SkColorSpace*, %class.SkColorSpace** %106, align 8
  %108 = icmp eq %class.SkColorSpace* %107, null
  br i1 %108, label %234, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 -1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %234

113:                                              ; preds = %109
  %114 = bitcast %class.SkColorSpace* %107 to i8*
  call void @_ZdlPv(i8* %114) #12
  br label %234

115:                                              ; preds = %2
  %116 = bitcast %class.GrCPixmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %116) #11
  %117 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %8, i64 0, i32 0
  %118 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %1, i64 0, i32 0, i32 2, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %117, %class.GrColorInfo* dereferenceable(24) %118) #11
  %119 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %8, i64 0, i32 1
  %120 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %1, i64 0, i32 0, i32 2, i32 1
  %121 = bitcast %struct.SkISize* %120 to i64*
  %122 = bitcast %struct.SkISize* %119 to i64*
  %123 = load i64, i64* %121, align 8
  store i64 %123, i64* %122, align 8
  %124 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %1, i64 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %1, i64 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %class.GrImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %128)
  %129 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %7, i64 0, i32 0
  %130 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %3, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %130, %class.GrColorInfo* nonnull dereferenceable(24) %117) #11
  %131 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %3, i64 0, i32 1
  %132 = bitcast %struct.SkISize* %131 to i64*
  %133 = load i64, i64* %122, align 8
  store i64 %133, i64* %132, align 8
  call void @_ZN12GrPixmapBaseIKv9GrCPixmapEC2E11GrImageInfoPS0_m(%class.GrPixmapBase.14* nonnull %129, %class.GrImageInfo* nonnull %3, i8* %125, i64 %127) #11
  %134 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %3, i64 0, i32 0, i32 1, i32 0
  %135 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %134, align 8
  %136 = icmp eq %class.GrColorSpaceXform* %135, null
  br i1 %136, label %147, label %137

137:                                              ; preds = %115
  %138 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %135, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = atomicrmw add i32* %138, i32 -1 acq_rel
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %141, label %147

141:                                              ; preds = %137
  %142 = bitcast %class.GrColorSpaceXform* %135 to %class.SkRefCntBase*
  %143 = bitcast %class.GrColorSpaceXform* %135 to void (%class.SkRefCntBase*)***
  %144 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %143, align 8
  %145 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %144, i64 2
  %146 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %145, align 8
  call void %146(%class.SkRefCntBase* nonnull %142) #11
  br label %147

147:                                              ; preds = %141, %137, %115
  %148 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %149 = load %class.SkColorSpace*, %class.SkColorSpace** %148, align 8
  %150 = icmp eq %class.SkColorSpace* %149, null
  br i1 %150, label %157, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = atomicrmw add i32* %152, i32 -1 acq_rel
  %154 = icmp eq i32 %153, 1
  br i1 %154, label %155, label %157

155:                                              ; preds = %151
  %156 = bitcast %class.SkColorSpace* %149 to i8*
  call void @_ZdlPv(i8* %156) #12
  br label %157

157:                                              ; preds = %147, %151, %155
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %128)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* nonnull align 8 %116, i64 16, i1 false) #11
  %158 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %0, i64 0, i32 0, i32 2, i32 0
  %159 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %7, i64 0, i32 0, i32 2, i32 0
  %160 = call dereferenceable(24) %class.GrColorInfo* @_ZN11GrColorInfoaSERKS_(%class.GrColorInfo* %158, %class.GrColorInfo* dereferenceable(24) %159) #11
  %161 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %0, i64 0, i32 0, i32 2, i32 1
  %162 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %7, i64 0, i32 0, i32 2, i32 1
  %163 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %7, i64 0, i32 0, i32 3, i32 0
  %164 = bitcast %struct.SkISize* %162 to <2 x i64>*
  %165 = load <2 x i64>, <2 x i64>* %164, align 8
  store %class.SkData* null, %class.SkData** %163, align 8
  %166 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %0, i64 0, i32 0, i32 3, i32 0
  %167 = load %class.SkData*, %class.SkData** %166, align 8
  %168 = bitcast %struct.SkISize* %161 to <2 x i64>*
  store <2 x i64> %165, <2 x i64>* %168, align 8
  %169 = icmp eq %class.SkData* %167, null
  br i1 %169, label %176, label %170

170:                                              ; preds = %157
  %171 = getelementptr inbounds %class.SkData, %class.SkData* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = atomicrmw add i32* %171, i32 -1 acq_rel
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %176

174:                                              ; preds = %170
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %167) #11
  %175 = bitcast %class.SkData* %167 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %175) #11
  br label %176

176:                                              ; preds = %157, %170, %174
  %177 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %7, i64 0, i32 0, i32 3, i32 0
  %178 = load %class.SkData*, %class.SkData** %177, align 8
  %179 = icmp eq %class.SkData* %178, null
  br i1 %179, label %186, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %class.SkData, %class.SkData* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = atomicrmw add i32* %181, i32 -1 acq_rel
  %183 = icmp eq i32 %182, 1
  br i1 %183, label %184, label %186

184:                                              ; preds = %180
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %178) #11
  %185 = bitcast %class.SkData* %178 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %185) #11
  br label %186

186:                                              ; preds = %184, %180, %176
  %187 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %7, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %188 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %187, align 8
  %189 = icmp eq %class.GrColorSpaceXform* %188, null
  br i1 %189, label %200, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %188, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = atomicrmw add i32* %191, i32 -1 acq_rel
  %193 = icmp eq i32 %192, 1
  br i1 %193, label %194, label %200

194:                                              ; preds = %190
  %195 = bitcast %class.GrColorSpaceXform* %188 to %class.SkRefCntBase*
  %196 = bitcast %class.GrColorSpaceXform* %188 to void (%class.SkRefCntBase*)***
  %197 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %196, align 8
  %198 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %197, i64 2
  %199 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %198, align 8
  call void %199(%class.SkRefCntBase* nonnull %195) #11
  br label %200

200:                                              ; preds = %194, %190, %186
  %201 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %7, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %202 = load %class.SkColorSpace*, %class.SkColorSpace** %201, align 8
  %203 = icmp eq %class.SkColorSpace* %202, null
  br i1 %203, label %210, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %202, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = atomicrmw add i32* %205, i32 -1 acq_rel
  %207 = icmp eq i32 %206, 1
  br i1 %207, label %208, label %210

208:                                              ; preds = %204
  %209 = bitcast %class.SkColorSpace* %202 to i8*
  call void @_ZdlPv(i8* %209) #12
  br label %210

210:                                              ; preds = %200, %204, %208
  %211 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %8, i64 0, i32 0, i32 1, i32 0
  %212 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %211, align 8
  %213 = icmp eq %class.GrColorSpaceXform* %212, null
  br i1 %213, label %224, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %212, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = atomicrmw add i32* %215, i32 -1 acq_rel
  %217 = icmp eq i32 %216, 1
  br i1 %217, label %218, label %224

218:                                              ; preds = %214
  %219 = bitcast %class.GrColorSpaceXform* %212 to %class.SkRefCntBase*
  %220 = bitcast %class.GrColorSpaceXform* %212 to void (%class.SkRefCntBase*)***
  %221 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %220, align 8
  %222 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %221, i64 2
  %223 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %222, align 8
  call void %223(%class.SkRefCntBase* nonnull %219) #11
  br label %224

224:                                              ; preds = %218, %214, %210
  %225 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %226 = load %class.SkColorSpace*, %class.SkColorSpace** %225, align 8
  %227 = icmp eq %class.SkColorSpace* %226, null
  br i1 %227, label %234, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %226, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = atomicrmw add i32* %229, i32 -1 acq_rel
  %231 = icmp eq i32 %230, 1
  br i1 %231, label %232, label %234

232:                                              ; preds = %228
  %233 = bitcast %class.SkColorSpace* %226 to i8*
  call void @_ZdlPv(i8* %233) #12
  br label %234

234:                                              ; preds = %224, %228, %232, %105, %109, %113
  %235 = phi i8* [ %18, %113 ], [ %18, %109 ], [ %18, %105 ], [ %116, %232 ], [ %116, %228 ], [ %116, %224 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %235) #11
  ret void
}

declare zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace*, %class.SkColorSpace*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL25get_dst_swizzle_and_store11GrColorTypePN16SkRasterPipeline10StockStageEP7LumModePbS5_(%class.GrSwizzle* noalias sret, i32, i32*, i32* nocapture, i8* nocapture, i8* nocapture) unnamed_addr #0 {
  %7 = alloca %class.GrSwizzle, align 2
  %8 = alloca %class.GrSwizzle, align 2
  %9 = alloca %class.GrSwizzle, align 2
  %10 = alloca %class.GrSwizzle, align 2
  %11 = alloca %class.GrSwizzle, align 2
  %12 = alloca %class.GrSwizzle, align 2
  %13 = alloca %class.GrSwizzle, align 2
  %14 = alloca %class.GrSwizzle, align 2
  %15 = alloca %class.GrSwizzle, align 2
  %16 = alloca %class.GrSwizzle, align 2
  %17 = alloca %class.GrSwizzle, align 2
  %18 = alloca %class.GrSwizzle, align 2
  %19 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  store i16 -21846, i16* %19, align 2
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  store i8 1, i8* %4, align 1
  store i8 0, i8* %5, align 1
  store i32 0, i32* %3, align 4
  switch i32 %1, label %86 [
    i32 1, label %20
    i32 17, label %21
    i32 2, label %22
    i32 3, label %23
    i32 30, label %24
    i32 29, label %28
    i32 4, label %32
    i32 7, label %33
    i32 9, label %34
    i32 10, label %35
    i32 15, label %39
    i32 18, label %40
    i32 20, label %41
    i32 5, label %42
    i32 19, label %43
    i32 13, label %44
    i32 14, label %45
    i32 16, label %46
    i32 21, label %47
    i32 22, label %51
    i32 8, label %55
    i32 6, label %59
    i32 25, label %63
    i32 26, label %67
    i32 27, label %71
    i32 28, label %75
    i32 11, label %76
    i32 12, label %77
    i32 23, label %81
    i32 24, label %85
    i32 0, label %85
  ]

20:                                               ; preds = %6
  store i32 25, i32* %2, align 4
  br label %86

21:                                               ; preds = %6
  store i32 63, i32* %2, align 4
  br label %86

22:                                               ; preds = %6
  store i32 29, i32* %2, align 4
  br label %86

23:                                               ; preds = %6
  store i32 33, i32* %2, align 4
  br label %86

24:                                               ; preds = %6
  %25 = bitcast %class.GrSwizzle* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %25) #11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0))
  %26 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %7, i64 0, i32 0
  %27 = load i16, i16* %26, align 2
  store i16 %27, i16* %19, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %25) #11
  store i32 33, i32* %2, align 4
  br label %86

28:                                               ; preds = %6
  %29 = bitcast %class.GrSwizzle* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %29) #11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0))
  %30 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %8, i64 0, i32 0
  %31 = load i16, i16* %30, align 2
  store i16 %31, i16* %19, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %29) #11
  store i32 33, i32* %2, align 4
  br label %86

32:                                               ; preds = %6
  store i32 55, i32* %2, align 4
  br label %86

33:                                               ; preds = %6
  store i32 59, i32* %2, align 4
  br label %86

34:                                               ; preds = %6
  store i32 75, i32* %2, align 4
  br label %86

35:                                               ; preds = %6
  %36 = bitcast %class.GrSwizzle* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %36) #11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0))
  %37 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %9, i64 0, i32 0
  %38 = load i16, i16* %37, align 2
  store i16 %38, i16* %19, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %36) #11
  store i32 75, i32* %2, align 4
  br label %86

39:                                               ; preds = %6
  store i32 37, i32* %2, align 4
  br label %86

40:                                               ; preds = %6
  store i32 67, i32* %2, align 4
  br label %86

41:                                               ; preds = %6
  store i32 71, i32* %2, align 4
  br label %86

42:                                               ; preds = %6
  store i32 55, i32* %2, align 4
  store i8 1, i8* %5, align 1
  br label %86

43:                                               ; preds = %6
  store i32 45, i32* %2, align 4
  store i8 0, i8* %4, align 1
  br label %86

44:                                               ; preds = %6
  store i32 41, i32* %2, align 4
  store i8 0, i8* %4, align 1
  br label %86

45:                                               ; preds = %6
  store i32 37, i32* %2, align 4
  store i8 0, i8* %4, align 1
  br label %86

46:                                               ; preds = %6
  store i32 49, i32* %2, align 4
  store i8 0, i8* %4, align 1
  br label %86

47:                                               ; preds = %6
  store i32 55, i32* %2, align 4
  %48 = bitcast %class.GrSwizzle* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %48) #11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0))
  %49 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %10, i64 0, i32 0
  %50 = load i16, i16* %49, align 2
  store i16 %50, i16* %19, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %48) #11
  br label %86

51:                                               ; preds = %6
  store i32 49, i32* %2, align 4
  %52 = bitcast %class.GrSwizzle* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %52) #11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0))
  %53 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %11, i64 0, i32 0
  %54 = load i16, i16* %53, align 2
  store i16 %54, i16* %19, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %52) #11
  br label %86

55:                                               ; preds = %6
  %56 = bitcast %class.GrSwizzle* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %56) #11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0))
  %57 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %12, i64 0, i32 0
  %58 = load i16, i16* %57, align 2
  store i16 %58, i16* %19, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %56) #11
  store i32 55, i32* %2, align 4
  br label %86

59:                                               ; preds = %6
  %60 = bitcast %class.GrSwizzle* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %60) #11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0))
  %61 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %13, i64 0, i32 0
  %62 = load i16, i16* %61, align 2
  store i16 %62, i16* %19, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %60) #11
  store i32 55, i32* %2, align 4
  br label %86

63:                                               ; preds = %6
  %64 = bitcast %class.GrSwizzle* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %64) #11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0))
  %65 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %14, i64 0, i32 0
  %66 = load i16, i16* %65, align 2
  store i16 %66, i16* %19, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %64) #11
  store i32 25, i32* %2, align 4
  br label %86

67:                                               ; preds = %6
  %68 = bitcast %class.GrSwizzle* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %68) #11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0))
  %69 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %15, i64 0, i32 0
  %70 = load i16, i16* %69, align 2
  store i16 %70, i16* %19, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %68) #11
  store i32 63, i32* %2, align 4
  br label %86

71:                                               ; preds = %6
  %72 = bitcast %class.GrSwizzle* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %72) #11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0))
  %73 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %16, i64 0, i32 0
  %74 = load i16, i16* %73, align 2
  store i16 %74, i16* %19, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %72) #11
  store i32 41, i32* %2, align 4
  br label %86

75:                                               ; preds = %6
  store i32 2, i32* %3, align 4
  store i32 41, i32* %2, align 4
  br label %86

76:                                               ; preds = %6
  store i32 2, i32* %3, align 4
  store i32 25, i32* %2, align 4
  br label %86

77:                                               ; preds = %6
  store i32 1, i32* %3, align 4
  %78 = bitcast %class.GrSwizzle* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %78) #11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0))
  %79 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %17, i64 0, i32 0
  %80 = load i16, i16* %79, align 2
  store i16 %80, i16* %19, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %78) #11
  store i32 59, i32* %2, align 4
  br label %86

81:                                               ; preds = %6
  store i32 1, i32* %3, align 4
  store i32 55, i32* %2, align 4
  %82 = bitcast %class.GrSwizzle* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %82) #11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0))
  %83 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %18, i64 0, i32 0
  %84 = load i16, i16* %83, align 2
  store i16 %84, i16* %19, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %82) #11
  br label %86

85:                                               ; preds = %6, %6
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0), i32 499, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0)) #13
  unreachable

86:                                               ; preds = %6, %81, %77, %76, %75, %71, %67, %63, %59, %55, %51, %47, %46, %45, %44, %43, %42, %41, %40, %39, %35, %34, %33, %32, %28, %24, %23, %22, %21, %20
  ret void
}

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #3

declare void @_ZNK9GrSwizzle5applyEP16SkRasterPipeline(%class.GrSwizzle*, %class.SkRasterPipeline*) local_unnamed_addr #3

declare void @_ZN16SkRasterPipeline24append_transfer_functionERK22skcms_TransferFunction(%class.SkRasterPipeline*, %struct.skcms_TransferFunction* dereferenceable(28)) local_unnamed_addr #3

declare %struct.skcms_TransferFunction* @skcms_sRGB_TransferFunction() local_unnamed_addr #3

declare void @_ZNK22SkColorSpaceXformSteps5applyEP16SkRasterPipeline(%struct.SkColorSpaceXformSteps*, %class.SkRasterPipeline*) local_unnamed_addr #3

declare %struct.skcms_TransferFunction* @skcms_sRGB_Inverse_TransferFunction() local_unnamed_addr #3

declare void @_ZNK16SkRasterPipeline3runEmmmm(%class.SkRasterPipeline*, i64, i64, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z12GrClearImageRK11GrImageInfoPvmNSt3__15arrayIfLm4EEE(%class.GrImageInfo* nocapture readonly dereferenceable(32), i8*, i64, <2 x float>, <2 x float>) local_unnamed_addr #4 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %8 = alloca %struct.SkRGBA4f, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca %class.GrSwizzle, align 2
  %14 = alloca [64 x i8], align 16
  %15 = alloca %class.SkArenaAlloc, align 8
  %16 = alloca %class.SkRasterPipeline_, align 8
  %17 = alloca %struct.SkRasterPipeline_MemoryCtx, align 8
  %18 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %3, <2 x float>* %18, align 8
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %4, <2 x float>* %19, align 8
  %20 = load atomic i64, i64* @_ZZ12GrClearImageRK11GrImageInfoPvmNSt3__15arrayIfLm4EEEE28trace_event_unique_atomic690.0.0 monotonic, align 8
  %21 = inttoptr i64 %20 to i8*
  %22 = icmp eq i64 %20, 0
  %23 = bitcast <2 x float> %3 to <2 x i32>
  %24 = extractelement <2 x i32> %23, i32 0
  %25 = bitcast <2 x float> %3 to <2 x i32>
  %26 = extractelement <2 x i32> %25, i32 1
  %27 = bitcast <2 x float> %4 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 0
  %29 = bitcast <2 x float> %4 to <2 x i32>
  %30 = extractelement <2 x i32> %29, i32 1
  br i1 %22, label %31, label %39

31:                                               ; preds = %5
  %32 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #11
  %33 = bitcast %class.SkEventTracer* %32 to i8* (%class.SkEventTracer*, i8*)***
  %34 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %33, align 8
  %35 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %34, i64 2
  %36 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %35, align 8
  %37 = tail call i8* %36(%class.SkEventTracer* %32, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #11
  %38 = ptrtoint i8* %37 to i64
  store atomic i64 %38, i64* @_ZZ12GrClearImageRK11GrImageInfoPvmNSt3__15arrayIfLm4EEEE28trace_event_unique_atomic690.0.0 monotonic, align 8
  br label %39

39:                                               ; preds = %5, %31
  %40 = phi i8* [ %21, %5 ], [ %37, %31 ]
  %41 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #11
  %42 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 0
  %43 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 1
  %45 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 2
  %46 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1
  %47 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %42, align 8
  %48 = load i8, i8* %40, align 1
  %49 = and i8 %48, 5
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %60, label %51

51:                                               ; preds = %39
  %52 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #11
  %53 = bitcast %class.SkEventTracer* %52 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %54 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %53, align 8
  %55 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %54, i64 4
  %56 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %55, align 8
  %57 = tail call i64 %56(%class.SkEventTracer* %52, i8 signext 88, i8* %40, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._Z12GrClearImageRK11GrImageInfoPvmNSt3__15arrayIfLm4EEE, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #11
  %58 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %58, i64 0, i32 0
  store i8* %40, i8** %59, align 8
  store i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._Z12GrClearImageRK11GrImageInfoPvmNSt3__15arrayIfLm4EEE, i64 0, i64 0), i8** %44, align 8
  store i64 %57, i64* %45, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %58, %"struct.skia::tracing_internals::ScopedTracer::Data"** %42, align 8
  br label %60

60:                                               ; preds = %39, %51
  %61 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %0, i64 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %173, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %0, i64 0, i32 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %173, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %0, i64 0, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %72, label %173

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %0, i64 0, i32 1, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %74, 1
  %76 = icmp eq i8* %1, null
  %77 = or i1 %76, %75
  br i1 %77, label %173, label %78

78:                                               ; preds = %72
  %79 = add i32 %62, -1
  %80 = icmp ult i32 %79, 30
  br i1 %80, label %82, label %81

81:                                               ; preds = %78
  call void @llvm.trap() #11
  unreachable

82:                                               ; preds = %78
  %83 = sext i32 %79 to i64
  %84 = getelementptr inbounds [30 x i64], [30 x i64]* @switch.table._Z12GrClearImageRK11GrImageInfoPvmNSt3__15arrayIfLm4EEE, i64 0, i64 %83
  %85 = load i64, i64* %84, align 8
  %86 = sext i32 %70 to i64
  %87 = mul nsw i64 %85, %86
  %88 = icmp ugt i64 %87, %2
  br i1 %88, label %173, label %89

89:                                               ; preds = %82
  %90 = icmp eq i32 %62, 24
  br i1 %90, label %91, label %130

91:                                               ; preds = %89
  %92 = bitcast %struct.SkRGBA4f* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #11
  %93 = bitcast %struct.SkRGBA4f* %8 to i32*
  store i32 %24, i32* %93, align 4
  %94 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %8, i64 0, i32 1
  %95 = bitcast float* %94 to i32*
  store i32 %26, i32* %95, align 4
  %96 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %8, i64 0, i32 2
  %97 = bitcast float* %96 to i32*
  store i32 %28, i32* %97, align 4
  %98 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %8, i64 0, i32 3
  %99 = bitcast float* %98 to i32*
  store i32 %30, i32* %99, align 4
  %100 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE12toBytes_RGBAEv(%struct.SkRGBA4f* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #11
  %101 = load i32, i32* %73, align 4
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %103, label %173

103:                                              ; preds = %91
  %104 = trunc i32 %100 to i24
  %105 = load i32, i32* %69, align 4
  br label %106

106:                                              ; preds = %103, %116
  %107 = phi i32 [ %101, %103 ], [ %117, %116 ]
  %108 = phi i32 [ %105, %103 ], [ %118, %116 ]
  %109 = phi i64 [ 0, %103 ], [ %119, %116 ]
  %110 = icmp sgt i32 %108, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %106
  %112 = mul i64 %109, %2
  %113 = getelementptr inbounds i8, i8* %1, i64 %112
  br label %122

114:                                              ; preds = %122
  %115 = load i32, i32* %73, align 4
  br label %116

116:                                              ; preds = %114, %106
  %117 = phi i32 [ %115, %114 ], [ %107, %106 ]
  %118 = phi i32 [ %128, %114 ], [ %108, %106 ]
  %119 = add nuw nsw i64 %109, 1
  %120 = sext i32 %117 to i64
  %121 = icmp slt i64 %119, %120
  br i1 %121, label %106, label %173

122:                                              ; preds = %111, %122
  %123 = phi i32 [ %126, %122 ], [ 0, %111 ]
  %124 = phi i8* [ %127, %122 ], [ %113, %111 ]
  %125 = bitcast i8* %124 to i24*
  store i24 %104, i24* %125, align 1
  %126 = add nuw nsw i32 %123, 1
  %127 = getelementptr inbounds i8, i8* %124, i64 3
  %128 = load i32, i32* %69, align 4
  %129 = icmp slt i32 %126, %128
  br i1 %129, label %122, label %114

130:                                              ; preds = %89
  %131 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131) #11
  store i32 -1431655766, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #11
  store i8 -86, i8* %10, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  store i8 -86, i8* %11, align 1
  %132 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %132) #11
  store i32 -1431655766, i32* %12, align 4
  %133 = bitcast %class.GrSwizzle* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %133) #11
  %134 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %13, i64 0, i32 0
  store i16 -21846, i16* %134, align 2
  call fastcc void @_ZL25get_dst_swizzle_and_store11GrColorTypePN16SkRasterPipeline10StockStageEP7LumModePbS5_(%class.GrSwizzle* nonnull sret %13, i32 %62, i32* nonnull %12, i32* nonnull %9, i8* nonnull %10, i8* nonnull %11)
  %135 = getelementptr inbounds [64 x i8], [64 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %135) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %135, i8 -86, i64 64, i1 false)
  %136 = bitcast %class.SkArenaAlloc* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %136) #11
  %137 = bitcast %class.SkArenaAlloc* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 32, i1 false)
  call void @_ZN12SkArenaAllocC1EPcmm(%class.SkArenaAlloc* nonnull %15, i8* nonnull %135, i64 64, i64 1024) #11
  %138 = bitcast %class.SkRasterPipeline_* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 312, i8* nonnull %138) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 -86, i64 312, i1 false)
  %139 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %16, i64 0, i32 0
  %140 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %16, i64 0, i32 1, i32 0, i32 0, i64 256
  %141 = bitcast i8* %140 to %class.SkArenaAlloc*
  call void @_ZN16SkRasterPipelineC2EP12SkArenaAlloc(%class.SkRasterPipeline* nonnull %139, %class.SkArenaAlloc* %141) #11
  %142 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %16, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %141, i8* %142, i64 256, i64 256) #11
  %143 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0, i64 0
  call void @_ZN16SkRasterPipeline21append_constant_colorEP12SkArenaAllocPKf(%class.SkRasterPipeline* nonnull %139, %class.SkArenaAlloc* nonnull %15, float* nonnull %143) #11
  %144 = load i32, i32* %9, align 4
  switch i32 %144, label %148 [
    i32 2, label %145
    i32 1, label %146
  ]

145:                                              ; preds = %130
  br label %146

146:                                              ; preds = %130, %145
  %147 = phi i32 [ 79, %145 ], [ 80, %130 ]
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %139, i32 %147, i8* null) #11
  br label %148

148:                                              ; preds = %146, %130
  %149 = load i8, i8* %11, align 1, !range !14
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %148
  %152 = call %struct.skcms_TransferFunction* @skcms_sRGB_Inverse_TransferFunction() #11
  call void @_ZN16SkRasterPipeline24append_transfer_functionERK22skcms_TransferFunction(%class.SkRasterPipeline* nonnull %139, %struct.skcms_TransferFunction* dereferenceable(28) %152) #11
  br label %153

153:                                              ; preds = %148, %151
  call void @_ZNK9GrSwizzle5applyEP16SkRasterPipeline(%class.GrSwizzle* nonnull %13, %class.SkRasterPipeline* nonnull %139) #11
  %154 = bitcast %struct.SkRasterPipeline_MemoryCtx* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #11
  %155 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %17, i64 0, i32 1
  %156 = bitcast i32* %155 to i64*
  store i64 -6148914691236517206, i64* %156, align 8
  %157 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %17, i64 0, i32 0
  store i8* %1, i8** %157, align 8
  %158 = load i32, i32* %61, align 8
  %159 = icmp ult i32 %158, 31
  br i1 %159, label %161, label %160

160:                                              ; preds = %153
  call void @llvm.trap() #11
  unreachable

161:                                              ; preds = %153
  %162 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %17, i64 0, i32 1
  %163 = sext i32 %158 to i64
  %164 = getelementptr inbounds [31 x i64], [31 x i64]* @switch.table._ZN12GrPixmapBaseIKv9GrCPixmapEC2E11GrImageInfoPS0_m, i64 0, i64 %163
  %165 = load i64, i64* %164, align 8
  %166 = udiv i64 %2, %165
  %167 = trunc i64 %166 to i32
  store i32 %167, i32* %162, align 8
  %168 = load i32, i32* %12, align 4
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %139, i32 %168, i8* nonnull %154) #11
  %169 = load i32, i32* %69, align 4
  %170 = sext i32 %169 to i64
  %171 = load i32, i32* %73, align 4
  %172 = sext i32 %171 to i64
  call void @_ZNK16SkRasterPipeline3runEmmmm(%class.SkRasterPipeline* nonnull %139, i64 0, i64 0, i64 %170, i64 %172) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #11
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %141) #11
  call void @llvm.lifetime.end.p0i8(i64 312, i8* nonnull %138) #11
  call void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %136) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %135) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %133) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %132) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131) #11
  br label %173

173:                                              ; preds = %116, %91, %60, %64, %68, %72, %82, %161
  %174 = phi i1 [ true, %161 ], [ false, %72 ], [ false, %82 ], [ false, %68 ], [ false, %64 ], [ false, %60 ], [ true, %91 ], [ true, %116 ]
  %175 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %42, align 8
  %176 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %175, null
  br i1 %176, label %190, label %177

177:                                              ; preds = %173
  %178 = load i8*, i8** %43, align 8
  %179 = load i8, i8* %178, align 1
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %190, label %181

181:                                              ; preds = %177
  %182 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #11
  %183 = load i8*, i8** %43, align 8
  %184 = load i8*, i8** %44, align 8
  %185 = load i64, i64* %45, align 8
  %186 = bitcast %class.SkEventTracer* %182 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %187 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %186, align 8
  %188 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %187, i64 5
  %189 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %188, align 8
  call void %189(%class.SkEventTracer* %182, i8* %183, i8* %184, i64 %185) #11
  br label %190

190:                                              ; preds = %173, %177, %181
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #11
  ret i1 %174
}

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE12toBytes_RGBAEv(%struct.SkRGBA4f*) local_unnamed_addr #3

declare void @_ZN12SkArenaAllocC1EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #3

declare void @_ZN16SkRasterPipeline21append_constant_colorEP12SkArenaAllocPKf(%class.SkRasterPipeline*, %class.SkArenaAlloc*, float*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD1Ev(%class.SkArenaAlloc*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z33SkColorTypeAndFormatToGrColorTypePK6GrCaps11SkColorTypeRK15GrBackendFormat(%class.GrCaps*, i32, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = icmp ult i32 %1, 21
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void @llvm.trap() #11
  unreachable

6:                                                ; preds = %3
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._Z33SkColorTypeAndFormatToGrColorTypePK6GrCaps11SkColorTypeRK15GrBackendFormat, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %class.GrCaps* %0 to i1 (%class.GrCaps*, %class.GrBackendFormat*)***
  %11 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)**, i1 (%class.GrCaps*, %class.GrBackendFormat*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %11, i64 3
  %13 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %12, align 8
  %14 = tail call zeroext i1 %13(%class.GrCaps* %0, %class.GrBackendFormat* dereferenceable(72) %2) #11
  br i1 %14, label %15, label %17

15:                                               ; preds = %6
  %16 = icmp eq i32 %1, 4
  br i1 %16, label %17, label %19

17:                                               ; preds = %15, %6
  %18 = phi i32 [ %9, %6 ], [ 5, %15 ]
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi i32 [ %18, %17 ], [ 0, %15 ]
  ret i32 %20
}

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #6

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.12* sret, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8GrPixmapC2E11GrImageInfo5sk_spI6SkDataEm(%class.GrPixmap*, %class.GrImageInfo*, %class.sk_sp.12*, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.GrImageInfo, align 8
  %6 = alloca %class.sk_sp.12, align 8
  %7 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %0, i64 0, i32 0
  %8 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0
  %9 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %8, %class.GrColorInfo* dereferenceable(24) %9) #11
  %10 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 1
  %11 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 1
  %12 = bitcast %struct.SkISize* %11 to i64*
  %13 = bitcast %struct.SkISize* %10 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %2, i64 0, i32 0
  %16 = bitcast %class.sk_sp.12* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store %class.SkData* null, %class.SkData** %15, align 8
  %18 = bitcast %class.sk_sp.12* %6 to i64*
  store i64 %17, i64* %18, align 8
  call void @_ZN12GrPixmapBaseIv8GrPixmapEC2E11GrImageInfo5sk_spI6SkDataEm(%class.GrPixmapBase* %7, %class.GrImageInfo* nonnull %5, %class.sk_sp.12* nonnull %6, i64 %3)
  %19 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %6, i64 0, i32 0
  %20 = load %class.SkData*, %class.SkData** %19, align 8
  %21 = icmp eq %class.SkData* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %class.SkData, %class.SkData* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %20) #11
  %27 = bitcast %class.SkData* %20 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %27) #11
  br label %28

28:                                               ; preds = %4, %22, %26
  %29 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0, i32 1, i32 0
  %30 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %29, align 8
  %31 = icmp eq %class.GrColorSpaceXform* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %class.GrColorSpaceXform* %30 to %class.SkRefCntBase*
  %38 = bitcast %class.GrColorSpaceXform* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  call void %41(%class.SkRefCntBase* nonnull %37) #11
  br label %42

42:                                               ; preds = %36, %32, %28
  %43 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %44 = load %class.SkColorSpace*, %class.SkColorSpace** %43, align 8
  %45 = icmp eq %class.SkColorSpace* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = bitcast %class.SkColorSpace* %44 to i8*
  call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %42, %46, %50
  ret void
}

declare void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo*, %class.GrColorInfo* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrPixmapBaseIv8GrPixmapEC2E11GrImageInfo5sk_spI6SkDataEm(%class.GrPixmapBase*, %class.GrImageInfo*, %class.sk_sp.12*, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.GrImageInfo, align 8
  %6 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0
  %7 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %6, %class.GrColorInfo* dereferenceable(24) %7) #11
  %8 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 1
  %9 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 1
  %10 = bitcast %struct.SkISize* %9 to i64*
  %11 = bitcast %struct.SkISize* %8 to i64*
  %12 = load i64, i64* %10, align 8
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %2, i64 0, i32 0
  %14 = load %class.SkData*, %class.SkData** %13, align 8
  %15 = getelementptr inbounds %class.SkData, %class.SkData* %14, i64 0, i32 3
  %16 = load i8*, i8** %15, align 8
  call void @_ZN12GrPixmapBaseIv8GrPixmapEC2E11GrImageInfoPvm(%class.GrPixmapBase* %0, %class.GrImageInfo* nonnull %5, i8* %16, i64 %3)
  %17 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %17, align 8
  %19 = icmp eq %class.GrColorSpaceXform* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.GrColorSpaceXform* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.GrColorSpaceXform* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  call void %29(%class.SkRefCntBase* nonnull %25) #11
  br label %30

30:                                               ; preds = %24, %20, %4
  %31 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.SkColorSpace*, %class.SkColorSpace** %31, align 8
  %33 = icmp eq %class.SkColorSpace* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = bitcast %class.SkColorSpace* %32 to i8*
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %30, %34, %38
  %41 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %0, i64 0, i32 3
  %42 = bitcast %class.sk_sp.12* %2 to i64*
  %43 = load i64, i64* %42, align 8
  store %class.SkData* null, %class.SkData** %13, align 8
  %44 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %41, i64 0, i32 0
  %45 = load %class.SkData*, %class.SkData** %44, align 8
  %46 = bitcast %class.sk_sp.12* %41 to i64*
  store i64 %43, i64* %46, align 8
  %47 = icmp eq %class.SkData* %45, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %class.SkData, %class.SkData* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %45) #11
  %53 = bitcast %class.SkData* %45 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %53) #11
  br label %54

54:                                               ; preds = %40, %48, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrPixmapBaseIv8GrPixmapEC2E11GrImageInfoPvm(%class.GrPixmapBase*, %class.GrImageInfo*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.GrPixmapBase, align 8
  %6 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %0, i64 0, i32 0
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %0, i64 0, i32 1
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %0, i64 0, i32 2, i32 0
  %9 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 0
  tail call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* %8, %class.GrColorInfo* dereferenceable(24) %9) #11
  %10 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %0, i64 0, i32 2, i32 1
  %11 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 1
  %12 = bitcast %struct.SkISize* %11 to i64*
  %13 = bitcast %struct.SkISize* %10 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %0, i64 0, i32 3, i32 0
  store %class.SkData* null, %class.SkData** %15, align 8
  %16 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, 31
  br i1 %18, label %20, label %19

19:                                               ; preds = %4
  tail call void @llvm.trap() #11
  unreachable

20:                                               ; preds = %4
  %21 = load i64, i64* %7, align 8
  %22 = sext i32 %17 to i64
  %23 = getelementptr inbounds [31 x i64], [31 x i64]* @switch.table._ZN12GrPixmapBaseIKv9GrCPixmapEC2E11GrImageInfoPS0_m, i64 0, i64 %22
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = mul nsw i64 %24, %27
  %29 = icmp uge i64 %21, %28
  %30 = icmp ne i8* %2, null
  %31 = and i1 %30, %29
  br i1 %31, label %86, label %32

32:                                               ; preds = %20
  %33 = bitcast %class.GrPixmapBase* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %33) #11
  %34 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %5, i64 0, i32 3, i32 0
  %35 = bitcast %class.GrPixmapBase* %0 to i8*
  %36 = bitcast %class.GrPixmapBase* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 56, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false)
  %37 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %5, i64 0, i32 2, i32 0
  %38 = call dereferenceable(24) %class.GrColorInfo* @_ZN11GrColorInfoaSERKS_(%class.GrColorInfo* %8, %class.GrColorInfo* dereferenceable(24) %37) #11
  %39 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %5, i64 0, i32 2, i32 1
  %40 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %5, i64 0, i32 3, i32 0
  %41 = bitcast %struct.SkISize* %39 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  store %class.SkData* null, %class.SkData** %40, align 8
  %43 = load %class.SkData*, %class.SkData** %15, align 8
  %44 = bitcast %struct.SkISize* %10 to <2 x i64>*
  store <2 x i64> %42, <2 x i64>* %44, align 8
  %45 = icmp eq %class.SkData* %43, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %32
  %47 = getelementptr inbounds %class.SkData, %class.SkData* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %43) #11
  %51 = bitcast %class.SkData* %43 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %51) #11
  br label %52

52:                                               ; preds = %32, %46, %50
  %53 = load %class.SkData*, %class.SkData** %34, align 8
  %54 = icmp eq %class.SkData* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %class.SkData, %class.SkData* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %53) #11
  %60 = bitcast %class.SkData* %53 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %60) #11
  br label %61

61:                                               ; preds = %59, %55, %52
  %62 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %5, i64 0, i32 2, i32 0, i32 1, i32 0
  %63 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %62, align 8
  %64 = icmp eq %class.GrColorSpaceXform* %63, null
  br i1 %64, label %75, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = bitcast %class.GrColorSpaceXform* %63 to %class.SkRefCntBase*
  %71 = bitcast %class.GrColorSpaceXform* %63 to void (%class.SkRefCntBase*)***
  %72 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, i64 2
  %74 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, align 8
  call void %74(%class.SkRefCntBase* nonnull %70) #11
  br label %75

75:                                               ; preds = %69, %65, %61
  %76 = getelementptr inbounds %class.GrPixmapBase, %class.GrPixmapBase* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %77 = load %class.SkColorSpace*, %class.SkColorSpace** %76, align 8
  %78 = icmp eq %class.SkColorSpace* %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = bitcast %class.SkColorSpace* %77 to i8*
  call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %75, %79, %83
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %33) #11
  br label %86

86:                                               ; preds = %20, %85
  ret void
}

declare dereferenceable(24) %class.GrColorInfo* @_ZN11GrColorInfoaSERKS_(%class.GrColorInfo*, %class.GrColorInfo* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #5

declare void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo*, i32, i32, %class.sk_sp*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrCPixmapC2E11GrImageInfo5sk_spI6SkDataEm(%class.GrCPixmap*, %class.GrImageInfo*, %class.sk_sp.12*, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.GrImageInfo, align 8
  %6 = alloca %class.sk_sp.12, align 8
  %7 = getelementptr inbounds %class.GrCPixmap, %class.GrCPixmap* %0, i64 0, i32 0
  %8 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0
  %9 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %8, %class.GrColorInfo* dereferenceable(24) %9) #11
  %10 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 1
  %11 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 1
  %12 = bitcast %struct.SkISize* %11 to i64*
  %13 = bitcast %struct.SkISize* %10 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %2, i64 0, i32 0
  %16 = bitcast %class.sk_sp.12* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store %class.SkData* null, %class.SkData** %15, align 8
  %18 = bitcast %class.sk_sp.12* %6 to i64*
  store i64 %17, i64* %18, align 8
  call void @_ZN12GrPixmapBaseIKv9GrCPixmapEC2E11GrImageInfo5sk_spI6SkDataEm(%class.GrPixmapBase.14* %7, %class.GrImageInfo* nonnull %5, %class.sk_sp.12* nonnull %6, i64 %3)
  %19 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %6, i64 0, i32 0
  %20 = load %class.SkData*, %class.SkData** %19, align 8
  %21 = icmp eq %class.SkData* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %class.SkData, %class.SkData* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %20) #11
  %27 = bitcast %class.SkData* %20 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %27) #11
  br label %28

28:                                               ; preds = %4, %22, %26
  %29 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0, i32 1, i32 0
  %30 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %29, align 8
  %31 = icmp eq %class.GrColorSpaceXform* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %class.GrColorSpaceXform* %30 to %class.SkRefCntBase*
  %38 = bitcast %class.GrColorSpaceXform* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  call void %41(%class.SkRefCntBase* nonnull %37) #11
  br label %42

42:                                               ; preds = %36, %32, %28
  %43 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %44 = load %class.SkColorSpace*, %class.SkColorSpace** %43, align 8
  %45 = icmp eq %class.SkColorSpace* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = bitcast %class.SkColorSpace* %44 to i8*
  call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %42, %46, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrPixmapBaseIKv9GrCPixmapEC2E11GrImageInfo5sk_spI6SkDataEm(%class.GrPixmapBase.14*, %class.GrImageInfo*, %class.sk_sp.12*, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.GrImageInfo, align 8
  %6 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0
  %7 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* nonnull %6, %class.GrColorInfo* dereferenceable(24) %7) #11
  %8 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 1
  %9 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 1
  %10 = bitcast %struct.SkISize* %9 to i64*
  %11 = bitcast %struct.SkISize* %8 to i64*
  %12 = load i64, i64* %10, align 8
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %2, i64 0, i32 0
  %14 = load %class.SkData*, %class.SkData** %13, align 8
  %15 = getelementptr inbounds %class.SkData, %class.SkData* %14, i64 0, i32 3
  %16 = load i8*, i8** %15, align 8
  call void @_ZN12GrPixmapBaseIKv9GrCPixmapEC2E11GrImageInfoPS0_m(%class.GrPixmapBase.14* %0, %class.GrImageInfo* nonnull %5, i8* %16, i64 %3)
  %17 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %17, align 8
  %19 = icmp eq %class.GrColorSpaceXform* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.GrColorSpaceXform* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.GrColorSpaceXform* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  call void %29(%class.SkRefCntBase* nonnull %25) #11
  br label %30

30:                                               ; preds = %24, %20, %4
  %31 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.SkColorSpace*, %class.SkColorSpace** %31, align 8
  %33 = icmp eq %class.SkColorSpace* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = bitcast %class.SkColorSpace* %32 to i8*
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %30, %34, %38
  %41 = getelementptr inbounds %class.GrPixmapBase.14, %class.GrPixmapBase.14* %0, i64 0, i32 3
  %42 = bitcast %class.sk_sp.12* %2 to i64*
  %43 = load i64, i64* %42, align 8
  store %class.SkData* null, %class.SkData** %13, align 8
  %44 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %41, i64 0, i32 0
  %45 = load %class.SkData*, %class.SkData** %44, align 8
  %46 = bitcast %class.sk_sp.12* %41 to i64*
  store i64 %43, i64* %46, align 8
  %47 = icmp eq %class.SkData* %45, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %class.SkData, %class.SkData* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %45) #11
  %53 = bitcast %class.SkData* %45 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %53) #11
  br label %54

54:                                               ; preds = %40, %48, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrPixmapBaseIKv9GrCPixmapEC2E11GrImageInfoPS0_m(%class.GrPixmapBase.14*, %class.GrImageInfo*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.GrPixmapBase.14, align 8
  %6 = getelementptr inbounds %class.GrPixmapBase.14, %class.GrPixmapBase.14* %0, i64 0, i32 0
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds %class.GrPixmapBase.14, %class.GrPixmapBase.14* %0, i64 0, i32 1
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %class.GrPixmapBase.14, %class.GrPixmapBase.14* %0, i64 0, i32 2, i32 0
  %9 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 0
  tail call void @_ZN11GrColorInfoC1ERKS_(%class.GrColorInfo* %8, %class.GrColorInfo* dereferenceable(24) %9) #11
  %10 = getelementptr inbounds %class.GrPixmapBase.14, %class.GrPixmapBase.14* %0, i64 0, i32 2, i32 1
  %11 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 1
  %12 = bitcast %struct.SkISize* %11 to i64*
  %13 = bitcast %struct.SkISize* %10 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrPixmapBase.14, %class.GrPixmapBase.14* %0, i64 0, i32 3, i32 0
  store %class.SkData* null, %class.SkData** %15, align 8
  %16 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, 31
  br i1 %18, label %20, label %19

19:                                               ; preds = %4
  tail call void @llvm.trap() #11
  unreachable

20:                                               ; preds = %4
  %21 = load i64, i64* %7, align 8
  %22 = sext i32 %17 to i64
  %23 = getelementptr inbounds [31 x i64], [31 x i64]* @switch.table._ZN12GrPixmapBaseIKv9GrCPixmapEC2E11GrImageInfoPS0_m, i64 0, i64 %22
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %1, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = mul nsw i64 %24, %27
  %29 = icmp uge i64 %21, %28
  %30 = icmp ne i8* %2, null
  %31 = and i1 %30, %29
  br i1 %31, label %86, label %32

32:                                               ; preds = %20
  %33 = bitcast %class.GrPixmapBase.14* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %33) #11
  %34 = getelementptr inbounds %class.GrPixmapBase.14, %class.GrPixmapBase.14* %5, i64 0, i32 3, i32 0
  %35 = bitcast %class.GrPixmapBase.14* %0 to i8*
  %36 = bitcast %class.GrPixmapBase.14* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 56, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false)
  %37 = getelementptr inbounds %class.GrPixmapBase.14, %class.GrPixmapBase.14* %5, i64 0, i32 2, i32 0
  %38 = call dereferenceable(24) %class.GrColorInfo* @_ZN11GrColorInfoaSERKS_(%class.GrColorInfo* %8, %class.GrColorInfo* dereferenceable(24) %37) #11
  %39 = getelementptr inbounds %class.GrPixmapBase.14, %class.GrPixmapBase.14* %5, i64 0, i32 2, i32 1
  %40 = getelementptr inbounds %class.GrPixmapBase.14, %class.GrPixmapBase.14* %5, i64 0, i32 3, i32 0
  %41 = bitcast %struct.SkISize* %39 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  store %class.SkData* null, %class.SkData** %40, align 8
  %43 = load %class.SkData*, %class.SkData** %15, align 8
  %44 = bitcast %struct.SkISize* %10 to <2 x i64>*
  store <2 x i64> %42, <2 x i64>* %44, align 8
  %45 = icmp eq %class.SkData* %43, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %32
  %47 = getelementptr inbounds %class.SkData, %class.SkData* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %43) #11
  %51 = bitcast %class.SkData* %43 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %51) #11
  br label %52

52:                                               ; preds = %32, %46, %50
  %53 = load %class.SkData*, %class.SkData** %34, align 8
  %54 = icmp eq %class.SkData* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %class.SkData, %class.SkData* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %53) #11
  %60 = bitcast %class.SkData* %53 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %60) #11
  br label %61

61:                                               ; preds = %59, %55, %52
  %62 = getelementptr inbounds %class.GrPixmapBase.14, %class.GrPixmapBase.14* %5, i64 0, i32 2, i32 0, i32 1, i32 0
  %63 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %62, align 8
  %64 = icmp eq %class.GrColorSpaceXform* %63, null
  br i1 %64, label %75, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = bitcast %class.GrColorSpaceXform* %63 to %class.SkRefCntBase*
  %71 = bitcast %class.GrColorSpaceXform* %63 to void (%class.SkRefCntBase*)***
  %72 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, i64 2
  %74 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, align 8
  call void %74(%class.SkRefCntBase* nonnull %70) #11
  br label %75

75:                                               ; preds = %69, %65, %61
  %76 = getelementptr inbounds %class.GrPixmapBase.14, %class.GrPixmapBase.14* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %77 = load %class.SkColorSpace*, %class.SkColorSpace** %76, align 8
  %78 = icmp eq %class.SkColorSpace* %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = bitcast %class.SkColorSpace* %77 to i8*
  call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %75, %79, %83
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %33) #11
  br label %86

86:                                               ; preds = %20, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #11
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #11
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #11
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkImageInfoD2Ev(%struct.SkImageInfo*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %class.SkColorSpace*, %class.SkColorSpace** %2, align 8
  %4 = icmp eq %class.SkColorSpace* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = bitcast %class.SkColorSpace* %3 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

declare void @_ZN16SkRasterPipeline32append_gamut_clamp_if_normalizedERK11SkImageInfo(%class.SkRasterPipeline*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayImLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %75

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %75, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #11
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %58, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to i64*
  %55 = load i64*, i64** %49, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 %51
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %54, align 8
  %58 = add nuw nsw i64 %51, 1
  %59 = load i64, i64* %4, align 8
  %60 = lshr i64 %59, 1
  %61 = and i64 %60, 2147483647
  %62 = icmp ult i64 %58, %61
  br i1 %62, label %50, label %63

63:                                               ; preds = %50, %35
  %64 = phi i64 [ %45, %35 ], [ %59, %50 ]
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %class.SkTArray* %0 to i8**
  br i1 %66, label %71, label %68

68:                                               ; preds = %63
  %69 = load i8*, i8** %67, align 8
  tail call void @_Z7sk_freePv(i8* %69) #11
  %70 = load i64, i64* %4, align 8
  br label %71

71:                                               ; preds = %63, %68
  %72 = phi i64 [ %70, %68 ], [ %64, %63 ]
  store i8* %44, i8** %67, align 8
  %73 = and i64 %72, -4294967298
  %74 = or i64 %73, 1
  store i64 %74, i64* %4, align 8
  br label %75

75:                                               ; preds = %71, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

declare void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) unnamed_addr #3

declare void @_ZN16SkRasterPipelineC2EP12SkArenaAlloc(%class.SkRasterPipeline*, %class.SkArenaAlloc*) unnamed_addr #3

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !7, !3}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !5}
!10 = distinct !{!10, !7, !3}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZL24get_load_and_src_swizzle11GrColorTypePN16SkRasterPipeline10StockStageEPbS3_: argument 0"}
!13 = distinct !{!13, !"_ZL24get_load_and_src_swizzle11GrColorTypePN16SkRasterPipeline10StockStageEPbS3_"}
!14 = !{i8 0, i8 2}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN9GrSwizzle6ConcatERKS_S1_: argument 0"}
!17 = distinct !{!17, !"_ZN9GrSwizzle6ConcatERKS_S1_"}
!18 = !{!"branch_weights", i32 1, i32 1048575}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!21 = distinct !{!21, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!22 = distinct !{!22, !23, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!23 = distinct !{!23, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!24 = distinct !{!24, !5}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK11GrColorInfo13makeColorTypeE11GrColorType: argument 0"}
!27 = distinct !{!27, !"_ZNK11GrColorInfo13makeColorTypeE11GrColorType"}
!28 = !{!29, !26}
!29 = distinct !{!29, !30, !"_ZNK11GrColorInfo13refColorSpaceEv: argument 0"}
!30 = distinct !{!30, !"_ZNK11GrColorInfo13refColorSpaceEv"}
!31 = !{!29}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK12GrPixmapBaseIv8GrPixmapE12pixelStorageEv: argument 0"}
!34 = distinct !{!34, !"_ZNK12GrPixmapBaseIv8GrPixmapE12pixelStorageEv"}
