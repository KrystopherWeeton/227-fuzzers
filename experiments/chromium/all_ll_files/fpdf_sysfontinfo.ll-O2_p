; ModuleID = '../../third_party/pdfium/fpdfsdk/fpdf_sysfontinfo.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/fpdf_sysfontinfo.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.CFX_Font::CharsetFontMap" = type { i32, i8* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CFX_FontMapper = type { i8, %"class.fxcrt::ByteString", %"class.std::__1::vector", %"class.std::__1::unique_ptr.4", %"class.fxcrt::UnownedPtr", %"class.std::__1::vector.26", %"class.std::__1::vector.33", [2 x %"class.fxcrt::RetainPtr.40"], [14 x %"class.fxcrt::RetainPtr.40"] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.CFX_FontMapper::FaceData"*, %"struct.CFX_FontMapper::FaceData"*, %"class.std::__1::__compressed_pair.1" }
%"struct.CFX_FontMapper::FaceData" = type <{ %"class.fxcrt::ByteString", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.CFX_FontMapper::FaceData"* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.SystemFontInfoIface* }
%class.SystemFontInfoIface = type { i32 (...)** }
%"class.fxcrt::UnownedPtr" = type { %class.CFX_FontMgr* }
%class.CFX_FontMgr = type <{ %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.std::__1::map", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %struct.FT_LibraryRec_* }
%struct.FT_LibraryRec_ = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CFX_FontMapper* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.fxcrt::ByteString"* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::pair"* }
%"class.fxcrt::RetainPtr.40" = type { %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.53", %"class.fxcrt::RetainPtr.57" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.44" }
%"class.std::__1::__tree.44" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.57" = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.fxcrt::Retainable"* }
%struct._FPDF_SYSFONTINFO = type { i32, {}*, void (%struct._FPDF_SYSFONTINFO*, i8*)*, i8* (%struct._FPDF_SYSFONTINFO*, i32, i32, i32, i32, i8*, i32*)*, i8* (%struct._FPDF_SYSFONTINFO*, i8*)*, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i32, i8*, i64)*, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i8*, i64)*, i32 (%struct._FPDF_SYSFONTINFO*, i8*)*, void (%struct._FPDF_SYSFONTINFO*, i8*)* }
%class.CFX_GEModule = type { %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.77", i8** }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.CFX_GEModule::PlatformIface"* }
%"class.CFX_GEModule::PlatformIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.CFX_FontMgr* }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.CFX_FontCache* }
%class.CFX_FontCache = type opaque
%struct.FPDF_CharsetFontMap_ = type { i32, i8* }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.91", i64 }
%"class.fxcrt::UnownedPtr.91" = type { i8* }
%class.CFX_ExternalFontInfo = type { %class.SystemFontInfoIface, %"class.fxcrt::UnownedPtr.86" }
%"class.fxcrt::UnownedPtr.86" = type { %struct._FPDF_SYSFONTINFO* }

$_ZN20CFX_ExternalFontInfoD2Ev = comdat any

$_ZN20CFX_ExternalFontInfoD0Ev = comdat any

$_ZN20CFX_ExternalFontInfo12EnumFontListEP14CFX_FontMapper = comdat any

$_ZN20CFX_ExternalFontInfo7MapFontEibiiPKc = comdat any

$_ZN20CFX_ExternalFontInfo7GetFontEPKc = comdat any

$_ZN20CFX_ExternalFontInfo11GetFontDataEPvjN6pdfium4spanIhEE = comdat any

$_ZN20CFX_ExternalFontInfo11GetFaceNameEPvPN5fxcrt10ByteStringE = comdat any

$_ZN20CFX_ExternalFontInfo14GetFontCharsetEPvPi = comdat any

$_ZN20CFX_ExternalFontInfo10DeleteFontEPv = comdat any

$_ZTV20CFX_ExternalFontInfo = comdat any

@_ZN8CFX_Font14kDefaultTTFMapE = external global [0 x %"struct.CFX_Font::CharsetFontMap"], align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTV20CFX_ExternalFontInfo = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFX_ExternalFontInfo*)* @_ZN20CFX_ExternalFontInfoD2Ev to i8*), i8* bitcast (void (%class.CFX_ExternalFontInfo*)* @_ZN20CFX_ExternalFontInfoD0Ev to i8*), i8* bitcast (i1 (%class.CFX_ExternalFontInfo*, %class.CFX_FontMapper*)* @_ZN20CFX_ExternalFontInfo12EnumFontListEP14CFX_FontMapper to i8*), i8* bitcast (i8* (%class.CFX_ExternalFontInfo*, i32, i1, i32, i32, i8*)* @_ZN20CFX_ExternalFontInfo7MapFontEibiiPKc to i8*), i8* bitcast (i8* (%class.CFX_ExternalFontInfo*, i8*)* @_ZN20CFX_ExternalFontInfo7GetFontEPKc to i8*), i8* bitcast (i32 (%class.CFX_ExternalFontInfo*, i8*, i32, %"class.pdfium::span"*)* @_ZN20CFX_ExternalFontInfo11GetFontDataEPvjN6pdfium4spanIhEE to i8*), i8* bitcast (i1 (%class.CFX_ExternalFontInfo*, i8*, %"class.fxcrt::ByteString"*)* @_ZN20CFX_ExternalFontInfo11GetFaceNameEPvPN5fxcrt10ByteStringE to i8*), i8* bitcast (i1 (%class.CFX_ExternalFontInfo*, i8*, i32*)* @_ZN20CFX_ExternalFontInfo14GetFontCharsetEPvPi to i8*), i8* bitcast (void (%class.CFX_ExternalFontInfo*, i8*)* @_ZN20CFX_ExternalFontInfo10DeleteFontEPv to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @FPDF_AddInstalledFont(i8*, i8*, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = bitcast i8* %0 to %class.CFX_FontMapper*
  %6 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* %1) #9
  call void @_ZN14CFX_FontMapper16AddInstalledFontERKN5fxcrt10ByteStringEi(%class.CFX_FontMapper* %5, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4, i32 %2) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN14CFX_FontMapper16AddInstalledFontERKN5fxcrt10ByteStringEi(%class.CFX_FontMapper*, %"class.fxcrt::ByteString"* dereferenceable(8), i32) local_unnamed_addr #2

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @FPDF_SetSystemFontInfo(%struct._FPDF_SYSFONTINFO*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = ptrtoint %struct._FPDF_SYSFONTINFO* %0 to i64
  %7 = tail call %class.CFX_GEModule* @_ZN12CFX_GEModule3GetEv() #9
  %8 = getelementptr inbounds %class.CFX_GEModule, %class.CFX_GEModule* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %8, align 8
  %10 = tail call i8* @_Znwm(i64 16) #10
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV20CFX_ExternalFontInfo, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = bitcast i8* %12 to i64*
  store i64 %6, i64* %13, align 8
  %14 = bitcast i8* %10 to %class.SystemFontInfoIface*
  tail call void @_ZN11CFX_FontMgr17SetSystemFontInfoENSt3__110unique_ptrI19SystemFontInfoIfaceNS0_14default_deleteIS2_EEEE(%class.CFX_FontMgr* %9, %class.SystemFontInfoIface* nonnull %14) #9
  br label %15

15:                                               ; preds = %1, %5
  ret void
}

declare %class.CFX_GEModule* @_ZN12CFX_GEModule3GetEv() local_unnamed_addr #2

declare void @_ZN11CFX_FontMgr17SetSystemFontInfoENSt3__110unique_ptrI19SystemFontInfoIfaceNS0_14default_deleteIS2_EEEE(%class.CFX_FontMgr*, %class.SystemFontInfoIface*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.FPDF_CharsetFontMap_* @FPDF_GetDefaultTTFMap() local_unnamed_addr #4 {
  ret %struct.FPDF_CharsetFontMap_* bitcast ([0 x %"struct.CFX_Font::CharsetFontMap"]* @_ZN8CFX_Font14kDefaultTTFMapE to %struct.FPDF_CharsetFontMap_*)
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_Z14DefaultGetFontP17_FPDF_SYSFONTINFOPKc(%struct._FPDF_SYSFONTINFO* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %0, i64 1
  %4 = bitcast %struct._FPDF_SYSFONTINFO* %3 to %class.SystemFontInfoIface**
  %5 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %4, align 8
  %6 = bitcast %class.SystemFontInfoIface* %5 to i8* (%class.SystemFontInfoIface*, i8*)***
  %7 = load i8* (%class.SystemFontInfoIface*, i8*)**, i8* (%class.SystemFontInfoIface*, i8*)*** %6, align 8
  %8 = getelementptr inbounds i8* (%class.SystemFontInfoIface*, i8*)*, i8* (%class.SystemFontInfoIface*, i8*)** %7, i64 4
  %9 = load i8* (%class.SystemFontInfoIface*, i8*)*, i8* (%class.SystemFontInfoIface*, i8*)** %8, align 8
  %10 = tail call i8* %9(%class.SystemFontInfoIface* %5, i8* %1) #9
  ret i8* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FPDF_SYSFONTINFO* @FPDF_GetDefaultSystemFontInfo() local_unnamed_addr #0 {
  %1 = tail call %class.CFX_GEModule* @_ZN12CFX_GEModule3GetEv() #9
  %2 = getelementptr inbounds %class.CFX_GEModule, %class.CFX_GEModule* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.CFX_GEModule::PlatformIface"*, %"class.CFX_GEModule::PlatformIface"** %2, align 8
  %4 = bitcast %"class.CFX_GEModule::PlatformIface"* %3 to %class.SystemFontInfoIface* (%"class.CFX_GEModule::PlatformIface"*)***
  %5 = load %class.SystemFontInfoIface* (%"class.CFX_GEModule::PlatformIface"*)**, %class.SystemFontInfoIface* (%"class.CFX_GEModule::PlatformIface"*)*** %4, align 8
  %6 = getelementptr inbounds %class.SystemFontInfoIface* (%"class.CFX_GEModule::PlatformIface"*)*, %class.SystemFontInfoIface* (%"class.CFX_GEModule::PlatformIface"*)** %5, i64 3
  %7 = load %class.SystemFontInfoIface* (%"class.CFX_GEModule::PlatformIface"*)*, %class.SystemFontInfoIface* (%"class.CFX_GEModule::PlatformIface"*)** %6, align 8
  %8 = tail call %class.SystemFontInfoIface* %7(%"class.CFX_GEModule::PlatformIface"* %3) #9
  %9 = icmp eq %class.SystemFontInfoIface* %8, null
  br i1 %9, label %32, label %10

10:                                               ; preds = %0
  %11 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 1, i64 80) #9
  %12 = bitcast i8* %11 to %struct._FPDF_SYSFONTINFO*
  %13 = getelementptr inbounds i8, i8* %11, i64 64
  %14 = bitcast i8* %13 to void (%struct._FPDF_SYSFONTINFO*, i8*)**
  store void (%struct._FPDF_SYSFONTINFO*, i8*)* @_ZL17DefaultDeleteFontP17_FPDF_SYSFONTINFOPv, void (%struct._FPDF_SYSFONTINFO*, i8*)** %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 16
  %16 = bitcast i8* %15 to void (%struct._FPDF_SYSFONTINFO*, i8*)**
  store void (%struct._FPDF_SYSFONTINFO*, i8*)* @_ZL16DefaultEnumFontsP17_FPDF_SYSFONTINFOPv, void (%struct._FPDF_SYSFONTINFO*, i8*)** %16, align 8
  %17 = getelementptr inbounds i8, i8* %11, i64 48
  %18 = bitcast i8* %17 to i64 (%struct._FPDF_SYSFONTINFO*, i8*, i8*, i64)**
  store i64 (%struct._FPDF_SYSFONTINFO*, i8*, i8*, i64)* @_ZL18DefaultGetFaceNameP17_FPDF_SYSFONTINFOPvPcm, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i8*, i64)** %18, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 32
  %20 = bitcast i8* %19 to i8* (%struct._FPDF_SYSFONTINFO*, i8*)**
  store i8* (%struct._FPDF_SYSFONTINFO*, i8*)* @_Z14DefaultGetFontP17_FPDF_SYSFONTINFOPKc, i8* (%struct._FPDF_SYSFONTINFO*, i8*)** %20, align 8
  %21 = getelementptr inbounds i8, i8* %11, i64 56
  %22 = bitcast i8* %21 to i32 (%struct._FPDF_SYSFONTINFO*, i8*)**
  store i32 (%struct._FPDF_SYSFONTINFO*, i8*)* @_ZL21DefaultGetFontCharsetP17_FPDF_SYSFONTINFOPv, i32 (%struct._FPDF_SYSFONTINFO*, i8*)** %22, align 8
  %23 = getelementptr inbounds i8, i8* %11, i64 40
  %24 = bitcast i8* %23 to i64 (%struct._FPDF_SYSFONTINFO*, i8*, i32, i8*, i64)**
  store i64 (%struct._FPDF_SYSFONTINFO*, i8*, i32, i8*, i64)* @_ZL18DefaultGetFontDataP17_FPDF_SYSFONTINFOPvjPhm, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i32, i8*, i64)** %24, align 8
  %25 = getelementptr inbounds i8, i8* %11, i64 24
  %26 = bitcast i8* %25 to i8* (%struct._FPDF_SYSFONTINFO*, i32, i32, i32, i32, i8*, i32*)**
  store i8* (%struct._FPDF_SYSFONTINFO*, i32, i32, i32, i32, i8*, i32*)* @_ZL14DefaultMapFontP17_FPDF_SYSFONTINFOiiiiPKcPi, i8* (%struct._FPDF_SYSFONTINFO*, i32, i32, i32, i32, i8*, i32*)** %26, align 8
  %27 = getelementptr inbounds i8, i8* %11, i64 8
  %28 = bitcast i8* %27 to void (%struct._FPDF_SYSFONTINFO*)**
  store void (%struct._FPDF_SYSFONTINFO*)* @_ZL14DefaultReleaseP17_FPDF_SYSFONTINFO, void (%struct._FPDF_SYSFONTINFO*)** %28, align 8
  %29 = bitcast i8* %11 to i32*
  store i32 1, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %11, i64 72
  %31 = bitcast i8* %30 to %class.SystemFontInfoIface**
  store %class.SystemFontInfoIface* %8, %class.SystemFontInfoIface** %31, align 8
  br label %32

32:                                               ; preds = %0, %10
  %33 = phi %struct._FPDF_SYSFONTINFO* [ %12, %10 ], [ null, %0 ]
  ret %struct._FPDF_SYSFONTINFO* %33
}

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL17DefaultDeleteFontP17_FPDF_SYSFONTINFOPv(%struct._FPDF_SYSFONTINFO* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %0, i64 1
  %4 = bitcast %struct._FPDF_SYSFONTINFO* %3 to %class.SystemFontInfoIface**
  %5 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %4, align 8
  %6 = bitcast %class.SystemFontInfoIface* %5 to void (%class.SystemFontInfoIface*, i8*)***
  %7 = load void (%class.SystemFontInfoIface*, i8*)**, void (%class.SystemFontInfoIface*, i8*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SystemFontInfoIface*, i8*)*, void (%class.SystemFontInfoIface*, i8*)** %7, i64 8
  %9 = load void (%class.SystemFontInfoIface*, i8*)*, void (%class.SystemFontInfoIface*, i8*)** %8, align 8
  tail call void %9(%class.SystemFontInfoIface* %5, i8* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL16DefaultEnumFontsP17_FPDF_SYSFONTINFOPv(%struct._FPDF_SYSFONTINFO* nocapture readonly, i8*) #0 {
  %3 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %0, i64 1
  %4 = bitcast %struct._FPDF_SYSFONTINFO* %3 to %class.SystemFontInfoIface**
  %5 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %4, align 8
  %6 = bitcast i8* %1 to %class.CFX_FontMapper*
  %7 = bitcast %class.SystemFontInfoIface* %5 to i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)***
  %8 = load i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)**, i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)*, i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)** %8, i64 2
  %10 = load i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)*, i1 (%class.SystemFontInfoIface*, %class.CFX_FontMapper*)** %9, align 8
  %11 = tail call zeroext i1 %10(%class.SystemFontInfoIface* %5, %class.CFX_FontMapper* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZL18DefaultGetFaceNameP17_FPDF_SYSFONTINFOPvPcm(%struct._FPDF_SYSFONTINFO* nocapture readonly, i8*, i8*, i64) #0 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %7, align 8
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  %8 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %0, i64 1
  %9 = bitcast %struct._FPDF_SYSFONTINFO* %8 to %class.SystemFontInfoIface**
  %10 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %9, align 8
  %11 = bitcast %class.SystemFontInfoIface* %10 to i1 (%class.SystemFontInfoIface*, i8*, %"class.fxcrt::ByteString"*)***
  %12 = load i1 (%class.SystemFontInfoIface*, i8*, %"class.fxcrt::ByteString"*)**, i1 (%class.SystemFontInfoIface*, i8*, %"class.fxcrt::ByteString"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%class.SystemFontInfoIface*, i8*, %"class.fxcrt::ByteString"*)*, i1 (%class.SystemFontInfoIface*, i8*, %"class.fxcrt::ByteString"*)** %12, i64 6
  %14 = load i1 (%class.SystemFontInfoIface*, i8*, %"class.fxcrt::ByteString"*)*, i1 (%class.SystemFontInfoIface*, i8*, %"class.fxcrt::ByteString"*)** %13, align 8
  %15 = call zeroext i1 %14(%class.SystemFontInfoIface* %10, i8* %1, %"class.fxcrt::ByteString"* nonnull %5) #9
  br i1 %15, label %16, label %48

16:                                               ; preds = %4
  %17 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %7, align 8
  %18 = icmp eq %"class.fxcrt::StringDataTemplate"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %17, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi i64 [ %21, %19 ], [ 0, %16 ]
  %24 = icmp ult i64 %23, %3
  br i1 %24, label %30, label %25

25:                                               ; preds = %22
  br i1 %18, label %48, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %17, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 1
  br label %48

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %17, i64 0, i32 3
  %32 = select i1 %18, [1 x i8]* @.str, [1 x i8]* %31
  %33 = getelementptr inbounds [1 x i8], [1 x i8]* %32, i64 0, i64 0
  br i1 %18, label %38, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %17, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  br label %38

38:                                               ; preds = %30, %34
  %39 = phi i64 [ %37, %34 ], [ 1, %30 ]
  %40 = call i64 @llvm.objectsize.i64.p0i8(i8* %2, i1 false, i1 true, i1 false) #9
  %41 = call i8* @__strncpy_chk(i8* %2, i8* %33, i64 %39, i64 %40) #9
  %42 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %7, align 8
  %43 = icmp eq %"class.fxcrt::StringDataTemplate"* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %42, i64 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 1
  br label %48

48:                                               ; preds = %44, %38, %26, %25, %4
  %49 = phi i64 [ 0, %4 ], [ %29, %26 ], [ 1, %25 ], [ %47, %44 ], [ 1, %38 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret i64 %49
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL21DefaultGetFontCharsetP17_FPDF_SYSFONTINFOPv(%struct._FPDF_SYSFONTINFO* nocapture readonly, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9
  store i32 -1431655766, i32* %3, align 4
  %5 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %0, i64 1
  %6 = bitcast %struct._FPDF_SYSFONTINFO* %5 to %class.SystemFontInfoIface**
  %7 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %6, align 8
  %8 = bitcast %class.SystemFontInfoIface* %7 to i1 (%class.SystemFontInfoIface*, i8*, i32*)***
  %9 = load i1 (%class.SystemFontInfoIface*, i8*, i32*)**, i1 (%class.SystemFontInfoIface*, i8*, i32*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%class.SystemFontInfoIface*, i8*, i32*)*, i1 (%class.SystemFontInfoIface*, i8*, i32*)** %9, i64 7
  %11 = load i1 (%class.SystemFontInfoIface*, i8*, i32*)*, i1 (%class.SystemFontInfoIface*, i8*, i32*)** %10, align 8
  %12 = call zeroext i1 %11(%class.SystemFontInfoIface* %7, i8* %1, i32* nonnull %3) #9
  %13 = load i32, i32* %3, align 4
  %14 = select i1 %12, i32 %13, i32 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZL18DefaultGetFontDataP17_FPDF_SYSFONTINFOPvjPhm(%struct._FPDF_SYSFONTINFO* nocapture readonly, i8*, i32, i8*, i64) #0 {
  %6 = alloca %"class.pdfium::span", align 8
  %7 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %0, i64 1
  %8 = bitcast %struct._FPDF_SYSFONTINFO* %7 to %class.SystemFontInfoIface**
  %9 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %8, align 8
  %10 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %6, i64 0, i32 0, i32 0
  store i8* %3, i8** %10, align 8
  %11 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %6, i64 0, i32 1
  store i64 %4, i64* %11, align 8
  %12 = bitcast %class.SystemFontInfoIface* %9 to i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)***
  %13 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)**, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %13, i64 5
  %15 = load i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)*, i32 (%class.SystemFontInfoIface*, i8*, i32, %"class.pdfium::span"*)** %14, align 8
  %16 = call i32 %15(%class.SystemFontInfoIface* %9, i8* %1, i32 %2, %"class.pdfium::span"* nonnull %6) #9
  %17 = zext i32 %16 to i64
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @_ZL14DefaultMapFontP17_FPDF_SYSFONTINFOiiiiPKcPi(%struct._FPDF_SYSFONTINFO* nocapture readonly, i32, i32, i32, i32, i8*, i32* nocapture readnone) #0 {
  %8 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %0, i64 1
  %9 = bitcast %struct._FPDF_SYSFONTINFO* %8 to %class.SystemFontInfoIface**
  %10 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %9, align 8
  %11 = icmp ne i32 %2, 0
  %12 = bitcast %class.SystemFontInfoIface* %10 to i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)***
  %13 = load i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)**, i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)*** %12, align 8
  %14 = getelementptr inbounds i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)*, i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)** %13, i64 3
  %15 = load i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)*, i8* (%class.SystemFontInfoIface*, i32, i1, i32, i32, i8*)** %14, align 8
  %16 = tail call i8* %15(%class.SystemFontInfoIface* %10, i32 %1, i1 zeroext %11, i32 %3, i32 %4, i8* %5) #9
  ret i8* %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL14DefaultReleaseP17_FPDF_SYSFONTINFO(%struct._FPDF_SYSFONTINFO* nocapture) #0 {
  %2 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %0, i64 1
  %3 = bitcast %struct._FPDF_SYSFONTINFO* %2 to i64*
  %4 = bitcast %struct._FPDF_SYSFONTINFO* %2 to %class.SystemFontInfoIface**
  %5 = load %class.SystemFontInfoIface*, %class.SystemFontInfoIface** %4, align 8
  store i64 0, i64* %3, align 8
  %6 = icmp eq %class.SystemFontInfoIface* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.SystemFontInfoIface* %5 to void (%class.SystemFontInfoIface*)***
  %9 = load void (%class.SystemFontInfoIface*)**, void (%class.SystemFontInfoIface*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SystemFontInfoIface*)*, void (%class.SystemFontInfoIface*)** %9, i64 1
  %11 = load void (%class.SystemFontInfoIface*)*, void (%class.SystemFontInfoIface*)** %10, align 8
  tail call void %11(%class.SystemFontInfoIface* nonnull %5) #9
  br label %12

12:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FPDF_FreeDefaultSystemFontInfo(%struct._FPDF_SYSFONTINFO*) local_unnamed_addr #0 {
  %2 = bitcast %struct._FPDF_SYSFONTINFO* %0 to i8*
  tail call void @_Z7FX_FreePv(i8* %2) #9
  ret void
}

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #2

declare void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i8* @__strncpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20CFX_ExternalFontInfoD2Ev(%class.CFX_ExternalFontInfo*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CFX_ExternalFontInfo, %class.CFX_ExternalFontInfo* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV20CFX_ExternalFontInfo, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_ExternalFontInfo, %class.CFX_ExternalFontInfo* %0, i64 0, i32 1, i32 0
  %4 = load %struct._FPDF_SYSFONTINFO*, %struct._FPDF_SYSFONTINFO** %3, align 8
  %5 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %4, i64 0, i32 1
  %6 = bitcast {}** %5 to void (%struct._FPDF_SYSFONTINFO*)**
  %7 = load void (%struct._FPDF_SYSFONTINFO*)*, void (%struct._FPDF_SYSFONTINFO*)** %6, align 8
  %8 = icmp eq void (%struct._FPDF_SYSFONTINFO*)* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void %7(%struct._FPDF_SYSFONTINFO* %4) #9
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20CFX_ExternalFontInfoD0Ev(%class.CFX_ExternalFontInfo*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.CFX_ExternalFontInfo, %class.CFX_ExternalFontInfo* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV20CFX_ExternalFontInfo, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_ExternalFontInfo, %class.CFX_ExternalFontInfo* %0, i64 0, i32 1, i32 0
  %4 = load %struct._FPDF_SYSFONTINFO*, %struct._FPDF_SYSFONTINFO** %3, align 8
  %5 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %4, i64 0, i32 1
  %6 = bitcast {}** %5 to void (%struct._FPDF_SYSFONTINFO*)**
  %7 = load void (%struct._FPDF_SYSFONTINFO*)*, void (%struct._FPDF_SYSFONTINFO*)** %6, align 8
  %8 = icmp eq void (%struct._FPDF_SYSFONTINFO*)* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void %7(%struct._FPDF_SYSFONTINFO* %4) #9
  br label %10

10:                                               ; preds = %1, %9
  %11 = bitcast %class.CFX_ExternalFontInfo* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20CFX_ExternalFontInfo12EnumFontListEP14CFX_FontMapper(%class.CFX_ExternalFontInfo*, %class.CFX_FontMapper*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.CFX_ExternalFontInfo, %class.CFX_ExternalFontInfo* %0, i64 0, i32 1, i32 0
  %4 = load %struct._FPDF_SYSFONTINFO*, %struct._FPDF_SYSFONTINFO** %3, align 8
  %5 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %4, i64 0, i32 2
  %6 = load void (%struct._FPDF_SYSFONTINFO*, i8*)*, void (%struct._FPDF_SYSFONTINFO*, i8*)** %5, align 8
  %7 = icmp eq void (%struct._FPDF_SYSFONTINFO*, i8*)* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFX_FontMapper, %class.CFX_FontMapper* %1, i64 0, i32 0
  tail call void %6(%struct._FPDF_SYSFONTINFO* %4, i8* %9) #9
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i1 [ true, %8 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN20CFX_ExternalFontInfo7MapFontEibiiPKc(%class.CFX_ExternalFontInfo*, i32, i1 zeroext, i32, i32, i8*) unnamed_addr #0 comdat align 2 {
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %class.CFX_ExternalFontInfo, %class.CFX_ExternalFontInfo* %0, i64 0, i32 1, i32 0
  %9 = load %struct._FPDF_SYSFONTINFO*, %struct._FPDF_SYSFONTINFO** %8, align 8
  %10 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %9, i64 0, i32 3
  %11 = load i8* (%struct._FPDF_SYSFONTINFO*, i32, i32, i32, i32, i8*, i32*)*, i8* (%struct._FPDF_SYSFONTINFO*, i32, i32, i32, i32, i8*, i32*)** %10, align 8
  %12 = icmp eq i8* (%struct._FPDF_SYSFONTINFO*, i32, i32, i32, i32, i8*, i32*)* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #9
  store i32 -1431655766, i32* %7, align 4
  %15 = zext i1 %2 to i32
  %16 = call i8* %11(%struct._FPDF_SYSFONTINFO* %9, i32 %1, i32 %15, i32 %3, i32 %4, i8* %5, i32* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #9
  br label %17

17:                                               ; preds = %6, %13
  %18 = phi i8* [ %16, %13 ], [ null, %6 ]
  ret i8* %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN20CFX_ExternalFontInfo7GetFontEPKc(%class.CFX_ExternalFontInfo*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.CFX_ExternalFontInfo, %class.CFX_ExternalFontInfo* %0, i64 0, i32 1, i32 0
  %4 = load %struct._FPDF_SYSFONTINFO*, %struct._FPDF_SYSFONTINFO** %3, align 8
  %5 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %4, i64 0, i32 4
  %6 = load i8* (%struct._FPDF_SYSFONTINFO*, i8*)*, i8* (%struct._FPDF_SYSFONTINFO*, i8*)** %5, align 8
  %7 = icmp eq i8* (%struct._FPDF_SYSFONTINFO*, i8*)* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call i8* %6(%struct._FPDF_SYSFONTINFO* %4, i8* %1) #9
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ null, %2 ]
  ret i8* %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN20CFX_ExternalFontInfo11GetFontDataEPvjN6pdfium4spanIhEE(%class.CFX_ExternalFontInfo*, i8*, i32, %"class.pdfium::span"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.CFX_ExternalFontInfo, %class.CFX_ExternalFontInfo* %0, i64 0, i32 1, i32 0
  %6 = load %struct._FPDF_SYSFONTINFO*, %struct._FPDF_SYSFONTINFO** %5, align 8
  %7 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %6, i64 0, i32 5
  %8 = load i64 (%struct._FPDF_SYSFONTINFO*, i8*, i32, i8*, i64)*, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i32, i8*, i64)** %7, align 8
  %9 = icmp eq i64 (%struct._FPDF_SYSFONTINFO*, i8*, i32, i8*, i64)* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %3, i64 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %3, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64 %8(%struct._FPDF_SYSFONTINFO* %6, i8* %1, i32 %2, i8* %12, i64 %14) #9
  %16 = trunc i64 %15 to i32
  br label %17

17:                                               ; preds = %4, %10
  %18 = phi i32 [ %16, %10 ], [ 0, %4 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20CFX_ExternalFontInfo11GetFaceNameEPvPN5fxcrt10ByteStringE(%class.CFX_ExternalFontInfo*, i8*, %"class.fxcrt::ByteString"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = getelementptr inbounds %class.CFX_ExternalFontInfo, %class.CFX_ExternalFontInfo* %0, i64 0, i32 1, i32 0
  %6 = load %struct._FPDF_SYSFONTINFO*, %struct._FPDF_SYSFONTINFO** %5, align 8
  %7 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %6, i64 0, i32 6
  %8 = load i64 (%struct._FPDF_SYSFONTINFO*, i8*, i8*, i64)*, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i8*, i64)** %7, align 8
  %9 = icmp eq i64 (%struct._FPDF_SYSFONTINFO*, i8*, i8*, i64)* %8, null
  br i1 %9, label %24, label %10

10:                                               ; preds = %3
  %11 = tail call i64 %8(%struct._FPDF_SYSFONTINFO* %6, i8* %1, i8* null, i64 0) #9
  %12 = trunc i64 %11 to i32
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %10
  %15 = and i64 %11, 4294967295
  %16 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %15, i64 1) #9
  %17 = load %struct._FPDF_SYSFONTINFO*, %struct._FPDF_SYSFONTINFO** %5, align 8
  %18 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %17, i64 0, i32 6
  %19 = load i64 (%struct._FPDF_SYSFONTINFO*, i8*, i8*, i64)*, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i8*, i64)** %18, align 8
  %20 = tail call i64 %19(%struct._FPDF_SYSFONTINFO* %17, i8* %1, i8* %16, i64 %15) #9
  %21 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = and i64 %20, 4294967295
  call void @_ZN5fxcrt10ByteStringC1EPKcm(%"class.fxcrt::ByteString"* nonnull %4, i8* %16, i64 %22) #9
  %23 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* %2, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  call void @_Z7FX_FreePv(i8* %16) #9
  br label %24

24:                                               ; preds = %14, %10, %3
  %25 = phi i1 [ false, %3 ], [ true, %14 ], [ false, %10 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20CFX_ExternalFontInfo14GetFontCharsetEPvPi(%class.CFX_ExternalFontInfo*, i8*, i32*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.CFX_ExternalFontInfo, %class.CFX_ExternalFontInfo* %0, i64 0, i32 1, i32 0
  %5 = load %struct._FPDF_SYSFONTINFO*, %struct._FPDF_SYSFONTINFO** %4, align 8
  %6 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %5, i64 0, i32 7
  %7 = load i32 (%struct._FPDF_SYSFONTINFO*, i8*)*, i32 (%struct._FPDF_SYSFONTINFO*, i8*)** %6, align 8
  %8 = icmp eq i32 (%struct._FPDF_SYSFONTINFO*, i8*)* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = tail call i32 %7(%struct._FPDF_SYSFONTINFO* %5, i8* %1) #9
  store i32 %10, i32* %2, align 4
  br label %11

11:                                               ; preds = %3, %9
  %12 = phi i1 [ true, %9 ], [ false, %3 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20CFX_ExternalFontInfo10DeleteFontEPv(%class.CFX_ExternalFontInfo*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.CFX_ExternalFontInfo, %class.CFX_ExternalFontInfo* %0, i64 0, i32 1, i32 0
  %4 = load %struct._FPDF_SYSFONTINFO*, %struct._FPDF_SYSFONTINFO** %3, align 8
  %5 = getelementptr inbounds %struct._FPDF_SYSFONTINFO, %struct._FPDF_SYSFONTINFO* %4, i64 0, i32 8
  %6 = load void (%struct._FPDF_SYSFONTINFO*, i8*)*, void (%struct._FPDF_SYSFONTINFO*, i8*)** %5, align 8
  %7 = icmp eq void (%struct._FPDF_SYSFONTINFO*, i8*)* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void %6(%struct._FPDF_SYSFONTINFO* %4, i8* %1) #9
  br label %9

9:                                                ; preds = %2, %8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN5fxcrt10ByteStringC1EPKcm(%"class.fxcrt::ByteString"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
