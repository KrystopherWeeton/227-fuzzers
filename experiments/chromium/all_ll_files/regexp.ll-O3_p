; ModuleID = '../../v8/src/regexp/regexp.cc'
source_filename = "../../v8/src/regexp/regexp.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.975", i32, i8, i8, i32, i32, %"class.std::__1::vector.981", %"class.std::__1::vector.981", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.988", i64, %"class.std::__1::unordered_map.989", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1045", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1083", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1117", %"class.std::__1::vector.1121", %"class.std::__1::vector.1121", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1266" }
%"class.std::__1::__compressed_pair.1266" = type { %"struct.std::__1::__compressed_pair_elem.1267" }
%"struct.std::__1::__compressed_pair_elem.1267" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheRegExp", [4 x %"class.v8::internal::CompilationSubCache"*], i8, [7 x i8] }>
%"class.v8::internal::CompilationCacheScript" = type { %"class.v8::internal::CompilationSubCache" }
%"class.v8::internal::CompilationSubCache" = type { i32 (...)**, %"class.v8::internal::Isolate"*, i32, [2 x %"class.v8::internal::Object"] }
%"class.v8::internal::CompilationCacheEval" = type { %"class.v8::internal::CompilationSubCache" }
%"class.v8::internal::CompilationCacheRegExp" = type { %"class.v8::internal::CompilationSubCache" }
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.981" = type { %"class.std::__1::__vector_base.982" }
%"class.std::__1::__vector_base.982" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.988" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.989" = type { %"class.std::__1::__hash_table.990" }
%"class.std::__1::__hash_table.990" = type <{ %"class.std::__1::unique_ptr.991", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1009", [4 x i8] }>
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993", %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.994"** }
%"struct.std::__1::__hash_node_base.994" = type { %"struct.std::__1::__hash_node_base.994"* }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::__bucket_list_deallocator.996" }
%"class.std::__1::__bucket_list_deallocator.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.994" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1013", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1042", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1043", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1013" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1038, %union.anon.1040, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1038 = type { i64 }
%union.anon.1040 = type { i64 }
%"class.std::__1::weak_ptr.1042" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1043" = type { %"class.v8::PersistentBase.1044" }
%"class.v8::PersistentBase.1044" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1014", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1014" = type { %"class.std::__1::__hash_table.1015" }
%"class.std::__1::__hash_table.1015" = type <{ %"class.std::__1::unique_ptr.1016", %"class.std::__1::__compressed_pair.1026", %"class.std::__1::__compressed_pair.1031", %"class.std::__1::__compressed_pair.1034", [4 x i8] }>
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018", %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"struct.std::__1::__hash_node_base.1019"** }
%"struct.std::__1::__hash_node_base.1019" = type { %"struct.std::__1::__hash_node_base.1019"* }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.std::__1::__bucket_list_deallocator.1021" }
%"class.std::__1::__bucket_list_deallocator.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::__hash_node_base.1019" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1074", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1050", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1054", %"class.std::__1::unique_ptr.1060", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1066", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1050" = type { %"struct.std::__1::__atomic_base.1051" }
%"struct.std::__1::__atomic_base.1051" = type { %"struct.std::__1::__cxx_atomic_impl.1052" }
%"struct.std::__1::__cxx_atomic_impl.1052" = type { %"struct.std::__1::__cxx_atomic_base_impl.1053" }
%"struct.std::__1::__cxx_atomic_base_impl.1053" = type { i32 }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1066" = type { %"class.std::__1::__vector_base.1067" }
%"class.std::__1::__vector_base.1067" = type { %"struct.std::__1::pair.1068"*, %"struct.std::__1::pair.1068"*, %"class.std::__1::__compressed_pair.1069" }
%"struct.std::__1::pair.1068" = type opaque
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"struct.std::__1::pair.1068"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1091" }
%"class.std::__1::unordered_map.1091" = type { %"class.std::__1::__hash_table.1092" }
%"class.std::__1::__hash_table.1092" = type <{ %"class.std::__1::unique_ptr.1093", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1111", [4 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095", %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1096"** }
%"struct.std::__1::__hash_node_base.1096" = type { %"struct.std::__1::__hash_node_base.1096"* }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::__bucket_list_deallocator.1098" }
%"class.std::__1::__bucket_list_deallocator.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1096" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1117" = type { %"struct.std::__1::__atomic_base.1118" }
%"struct.std::__1::__atomic_base.1118" = type { %"struct.std::__1::__cxx_atomic_impl.1119" }
%"struct.std::__1::__cxx_atomic_impl.1119" = type { %"struct.std::__1::__cxx_atomic_base_impl.1120" }
%"struct.std::__1::__cxx_atomic_base_impl.1120" = type { %"class.std::__1::vector.1121"* }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"struct.std::nothrow_t" = type { i8 }
%"class.v8::internal::RegExpGlobalCache" = type { i32, i32, i32, i32, i32*, i32, %"class.v8::internal::Handle.1128", %"class.v8::internal::Handle.1129", %"class.v8::internal::Isolate"* }
%"class.v8::internal::Handle.1128" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1129" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Vector.1132" = type { i8*, i64 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1291", i32, i32, i32, %"class.v8::internal::Handle.1292" }
%"class.v8::internal::Handle.1291" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1292" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::StringShape" = type { i32 }
%"class.v8::internal::PostponeInterruptsScope" = type { %"class.v8::internal::InterruptsScope" }
%"struct.v8::internal::RegExpCompileData" = type <{ %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpNode"*, %"class.v8::internal::Handle.1133", i8, i8, [6 x i8], %"class.v8::internal::Handle.1135", i32, i32, i32, i32, i32, [4 x i8] }>
%"class.v8::internal::RegExpTree" = type { i32 (...)** }
%"class.v8::internal::RegExpNode" = type { i32 (...)**, %"class.v8::internal::RegExpNode"*, %"class.v8::internal::Label", i8, %"struct.v8::internal::NodeInfo", %"struct.v8::internal::EatsAtLeastInfo", i32, [2 x %"class.v8::internal::BoyerMooreLookahead"*], %"class.v8::internal::Zone"* }
%"class.v8::internal::Label" = type { i32, i32 }
%"struct.v8::internal::NodeInfo" = type { i8 }
%"struct.v8::internal::EatsAtLeastInfo" = type { i8, i8 }
%"class.v8::internal::BoyerMooreLookahead" = type { i32, %"class.v8::internal::RegExpCompiler"*, i32, %"class.v8::internal::ZoneList"* }
%"class.v8::internal::RegExpCompiler" = type { %"class.v8::internal::EndNode"*, i32, i32, i32, %"class.v8::internal::ZoneVector"*, i32, %"class.v8::internal::RegExpMacroAssembler"*, i8, i8, i8, i8, i8, i32, %"class.v8::internal::FrequencyCollator", %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"* }
%"class.v8::internal::EndNode" = type <{ %"class.v8::internal::RegExpNode", i32, [4 x i8] }>
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1136" }
%"class.std::__1::vector.1136" = type { %"class.std::__1::__vector_base.1137" }
%"class.std::__1::__vector_base.1137" = type { %"class.v8::internal::RegExpNode"**, %"class.v8::internal::RegExpNode"**, %"class.std::__1::__compressed_pair.1138" }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.1139", %"struct.std::__1::__compressed_pair_elem.1140" }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"class.v8::internal::RegExpNode"** }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::RegExpMacroAssembler" = type { i32 (...)**, i8, i32, i8, i32, %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"* }
%"class.v8::internal::FrequencyCollator" = type { [128 x %"class.v8::internal::FrequencyCollator::CharacterFrequency"], i32 }
%"class.v8::internal::FrequencyCollator::CharacterFrequency" = type { i32, i32 }
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::BoyerMoorePositionInfo"**, i32, i32 }
%"class.v8::internal::BoyerMoorePositionInfo" = type { %"class.std::__1::bitset", i32, i32 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [2 x i64] }
%"class.v8::internal::Handle.1133" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1135" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FlatStringReader" = type { %"class.v8::internal::Relocatable", %"class.v8::internal::Handle.1129", i8, i32, i8* }
%"class.v8::internal::Vector.1141" = type { i16*, i64 }
%"class.v8::internal::RegExpAtom" = type <{ %"class.v8::internal::RegExpTree", %"class.v8::internal::Vector.1141", %"class.v8::base::Flags", [4 x i8] }>
%"class.v8::base::Flags" = type { i32 }
%"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef" = type { %"class.v8::internal::JSRegExp" }
%"class.v8::internal::JSRegExp" = type { %"class.v8::internal::TorqueGeneratedJSRegExp" }
%"class.v8::internal::TorqueGeneratedJSRegExp" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::internal::StringSearch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1132", i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::internal::StringSearch.1293" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1132", i32 (%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::internal::StringSearch.1295" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1141", i32 (%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::internal::StringSearch.1298" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1141", i32 (%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::internal::CombinationAssertScope" = type { i8 }
%"class.v8::internal::String::FlatContent" = type { %union.anon.1145, i32, i32, %"class.v8::internal::CombinationAssertScope"* }
%union.anon.1145 = type { i8* }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::RegExpCompiler::CompilationResult" = type <{ i32, [4 x i8], %"class.v8::internal::Handle.1133", i32, [4 x i8] }>
%"class.v8::internal::RegExpMacroAssemblerX64" = type <{ %"class.v8::internal::NativeRegExpMacroAssembler", %"class.v8::internal::MacroAssembler", %"class.v8::internal::NoRootArrayScope", %"class.v8::internal::ZoneChunkList", i32, i32, i32, %"class.v8::internal::Label", %"class.v8::internal::Label", %"class.v8::internal::Label", %"class.v8::internal::Label", %"class.v8::internal::Label", %"class.v8::internal::Label", %"class.v8::internal::Label", %"class.v8::internal::Label", [4 x i8] }>
%"class.v8::internal::NativeRegExpMacroAssembler" = type { %"class.v8::internal::RegExpMacroAssembler" }
%"class.v8::internal::MacroAssembler" = type { %"class.v8::internal::TurboAssembler.base", [7 x i8] }
%"class.v8::internal::TurboAssembler.base" = type { %"class.v8::internal::SharedTurboAssembler.base" }
%"class.v8::internal::SharedTurboAssembler.base" = type { %"class.v8::internal::TurboAssemblerBase.base" }
%"class.v8::internal::TurboAssemblerBase.base" = type <{ %"class.v8::internal::Assembler", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.969", i8, i8, i8, i8, i32, i8 }>
%"class.v8::internal::Assembler" = type { %"class.v8::internal::AssemblerBase", %"class.v8::internal::RelocInfoWriter", %"class.std::__1::deque.1216", i32, %"class.std::__1::deque.1216", %"class.std::__1::map", %"class.v8::internal::ConstPool" }
%"class.v8::internal::AssemblerBase" = type { i32 (...)**, %"class.std::__1::unique_ptr.1160", i8*, %"class.std::__1::forward_list", i8*, %"class.v8::internal::CodeCommentsWriter", %"class.std::__1::vector.1178", %"class.std::__1::vector.967", %"class.std::__1::unordered_map.1185", %"struct.v8::internal::AssemblerOptions", i64, i8, i8, %"class.v8::internal::JumpOptimizationInfo"* }
%"class.std::__1::unique_ptr.1160" = type { %"class.std::__1::__compressed_pair.1161" }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.1162" }
%"struct.std::__1::__compressed_pair_elem.1162" = type { %"class.v8::internal::AssemblerBuffer"* }
%"class.v8::internal::AssemblerBuffer" = type { i32 (...)** }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.v8::internal::CodeCommentsWriter" = type { i32, %"class.std::__1::vector.1171" }
%"class.std::__1::vector.1171" = type { %"class.std::__1::__vector_base.1172" }
%"class.std::__1::__vector_base.1172" = type { %"struct.v8::internal::CodeCommentEntry"*, %"struct.v8::internal::CodeCommentEntry"*, %"class.std::__1::__compressed_pair.1173" }
%"struct.v8::internal::CodeCommentEntry" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.1174" }
%"struct.std::__1::__compressed_pair_elem.1174" = type { %"struct.v8::internal::CodeCommentEntry"* }
%"class.std::__1::vector.1178" = type { %"class.std::__1::__vector_base.1179" }
%"class.std::__1::__vector_base.1179" = type { %"class.v8::internal::Handle.1147"*, %"class.v8::internal::Handle.1147"*, %"class.std::__1::__compressed_pair.1180" }
%"class.v8::internal::Handle.1147" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"class.v8::internal::Handle.1147"* }
%"class.std::__1::unordered_map.1185" = type { %"class.std::__1::__hash_table.1186" }
%"class.std::__1::__hash_table.1186" = type <{ %"class.std::__1::unique_ptr.1187", %"class.std::__1::__compressed_pair.1197", %"class.std::__1::__compressed_pair.1202", %"class.std::__1::__compressed_pair.1205", [4 x i8] }>
%"class.std::__1::unique_ptr.1187" = type { %"class.std::__1::__compressed_pair.1188" }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.1189", %"struct.std::__1::__compressed_pair_elem.1191" }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"struct.std::__1::__hash_node_base.1190"** }
%"struct.std::__1::__hash_node_base.1190" = type { %"struct.std::__1::__hash_node_base.1190"* }
%"struct.std::__1::__compressed_pair_elem.1191" = type { %"class.std::__1::__bucket_list_deallocator.1192" }
%"class.std::__1::__bucket_list_deallocator.1192" = type { %"class.std::__1::__compressed_pair.1193" }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1197" = type { %"struct.std::__1::__compressed_pair_elem.1198" }
%"struct.std::__1::__compressed_pair_elem.1198" = type { %"struct.std::__1::__hash_node_base.1190" }
%"class.std::__1::__compressed_pair.1202" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::internal::AssemblerOptions" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i64, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::JumpOptimizationInfo" = type { i32, i8, %"class.std::__1::vector.1209", i64 }
%"class.std::__1::vector.1209" = type { %"class.std::__1::__vector_base.1210" }
%"class.std::__1::__vector_base.1210" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.1212" }
%"struct.std::__1::__compressed_pair_elem.1212" = type { i32* }
%"class.v8::internal::RelocInfoWriter" = type { i8*, i8* }
%"class.std::__1::deque.1216" = type { %"class.std::__1::__deque_base.1217" }
%"class.std::__1::__deque_base.1217" = type { %"struct.std::__1::__split_buffer.1218", i64, %"class.std::__1::__compressed_pair.1224" }
%"struct.std::__1::__split_buffer.1218" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.1219" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1220" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { i32** }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1225" }
%"class.std::__1::__tree.1225" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1226", %"class.std::__1::__compressed_pair.1230" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ConstPool" = type { %"class.v8::internal::Assembler"*, %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.1234" }
%"class.std::__1::__tree.1234" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1235", %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::NoRootArrayScope" = type <{ %"class.v8::internal::TurboAssembler"*, i8, [7 x i8] }>
%"class.v8::internal::TurboAssembler" = type { %"class.v8::internal::SharedTurboAssembler.base", [7 x i8] }
%"class.v8::internal::ZoneChunkList" = type { %"class.v8::internal::Zone"*, i64, %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"* }
%"struct.v8::internal::ZoneChunkList<int>::Chunk" = type { i32, i32, %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"* }
%"class.v8::internal::RegExpBytecodeGenerator" = type { %"class.v8::internal::RegExpMacroAssembler", %"class.v8::internal::Vector.1243", i32, %"class.v8::internal::Label", i32, i32, i32, %"class.v8::internal::ZoneUnorderedMap", %"class.v8::internal::Isolate"* }
%"class.v8::internal::Vector.1243" = type { i8*, i64 }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map.1244" }
%"class.std::__1::unordered_map.1244" = type { %"class.std::__1::__hash_table.1245" }
%"class.std::__1::__hash_table.1245" = type <{ %"class.std::__1::unique_ptr.1246", %"class.std::__1::__compressed_pair.1255", %"class.std::__1::__compressed_pair.1259", %"class.std::__1::__compressed_pair.1262", [4 x i8] }>
%"class.std::__1::unique_ptr.1246" = type { %"class.std::__1::__compressed_pair.1247" }
%"class.std::__1::__compressed_pair.1247" = type { %"struct.std::__1::__compressed_pair_elem.1248", %"struct.std::__1::__compressed_pair_elem.1250" }
%"struct.std::__1::__compressed_pair_elem.1248" = type { %"struct.std::__1::__hash_node_base.1249"** }
%"struct.std::__1::__hash_node_base.1249" = type { %"struct.std::__1::__hash_node_base.1249"* }
%"struct.std::__1::__compressed_pair_elem.1250" = type { %"class.std::__1::__bucket_list_deallocator.1251" }
%"class.std::__1::__bucket_list_deallocator.1251" = type { %"class.std::__1::__compressed_pair.1252" }
%"class.std::__1::__compressed_pair.1252" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.1253" }
%"struct.std::__1::__compressed_pair_elem.1253" = type { %"class.v8::internal::ZoneAllocator.1254" }
%"class.v8::internal::ZoneAllocator.1254" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.1256", %"struct.std::__1::__compressed_pair_elem.1257" }
%"struct.std::__1::__compressed_pair_elem.1256" = type { %"struct.std::__1::__hash_node_base.1249" }
%"struct.std::__1::__compressed_pair_elem.1257" = type { %"class.v8::internal::ZoneAllocator.1258" }
%"class.v8::internal::ZoneAllocator.1258" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.v8::internal::ConsString" = type { %"class.v8::internal::TorqueGeneratedConsString" }
%"class.v8::internal::TorqueGeneratedConsString" = type { %"class.v8::internal::String" }
%"class.v8::internal::SlicedString" = type { %"class.v8::internal::TorqueGeneratedSlicedString" }
%"class.v8::internal::TorqueGeneratedSlicedString" = type { %"class.v8::internal::String" }
%"class.v8::internal::ThinString" = type { %"class.v8::internal::TorqueGeneratedThinString" }
%"class.v8::internal::TorqueGeneratedThinString" = type { %"class.v8::internal::String" }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }

$_ZN2v88internal11RelocatableD2Ev = comdat any

$_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE = comdat any

$_ZN2v88internal23PostponeInterruptsScopeD0Ev = comdat any

$_ZN2v88internal11RelocatableD0Ev = comdat any

$_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE = comdat any

$_ZN2v88internal11Relocatable21PostGarbageCollectionEv = comdat any

$_ZN2v88internal15InterruptsScopeD2Ev = comdat any

$_ZN2v88internal15InterruptsScopeD0Ev = comdat any

$_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_ = comdat any

$_ZN2v88internal12StringSearchIhhE16SingleCharSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE12LinearSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE13InitialSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIhhE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhtE16SingleCharSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE12LinearSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE13InitialSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIttE16SingleCharSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE12LinearSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE13InitialSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZTVN2v88internal23PostponeInterruptsScopeE = comdat any

$_ZTVN2v88internal11RelocatableE = comdat any

$_ZTVN2v88internal15InterruptsScopeE = comdat any

@__func__._ZN2v88internal6RegExp7CompileEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEENS_4base5FlagsINS5_4FlagEiEEj = private unnamed_addr constant [8 x i8] c"Compile\00", align 1
@_ZN2v88internal42FLAG_default_to_experimental_regexp_engineE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@__func__._ZN2v88internal10RegExpImpl15CompileIrregexpEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEb = private unnamed_addr constant [16 x i8] c"CompileIrregexp\00", align 1
@_ZN2v88internal25FLAG_trace_regexp_tier_upE = external local_unnamed_addr global i8, align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"JSRegExp object %p %s size: %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"bytecode\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"native code\00", align 1
@_ZN2v88internal19FLAG_regexp_tier_upE = external local_unnamed_addr global i8, align 1
@.str.4 = private unnamed_addr constant [67 x i8] c"Forcing tier-up for very long strings in RegExpImpl::IrregexpExec\0A\00", align 1
@_ZN2v88internal23FLAG_trace_regexp_graphE = external local_unnamed_addr global i8, align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"Start\00", align 1
@_ZN2v88internal62FLAG_enable_experimental_regexp_engine_on_excessive_backtracksE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal38FLAG_regexp_backtracks_before_fallbackE = external local_unnamed_addr global i32, align 4
@_ZN2v88internal36FLAG_correctness_fuzzer_suppressionsE = external local_unnamed_addr global i8, align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"Aborting on stack overflow\00", align 1
@_ZTVN2v88internal23PostponeInterruptsScopeE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::InterruptsScope"*)* @_ZN2v88internal15InterruptsScopeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::PostponeInterruptsScope"*)* @_ZN2v88internal23PostponeInterruptsScopeD0Ev to i8*)] }, comdat, align 8
@_ZTVN2v88internal11RelocatableE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11RelocatableD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11RelocatableD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)* @_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11Relocatable21PostGarbageCollectionEv to i8*)] }, comdat, align 8
@_ZTVN2v88internal15InterruptsScopeE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::InterruptsScope"*)* @_ZN2v88internal15InterruptsScopeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::InterruptsScope"*)* @_ZN2v88internal15InterruptsScopeD0Ev to i8*)] }, comdat, align 8
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.7 = private unnamed_addr constant [46 x i8] c"JSRegExp object %p needs tier-up compilation\0A\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"NewArray\00", align 1

@_ZN2v88internal17RegExpGlobalCacheC1ENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPNS0_7IsolateE = hidden unnamed_addr alias void (%"class.v8::internal::RegExpGlobalCache"*, i64*, i64*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::RegExpGlobalCache"*, i64*, i64*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal17RegExpGlobalCacheC2ENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPNS0_7IsolateE
@_ZN2v88internal17RegExpGlobalCacheD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::RegExpGlobalCache"*), void (%"class.v8::internal::RegExpGlobalCache"*)* @_ZN2v88internal17RegExpGlobalCacheD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden noalias i64* @_ZN2v88internal6RegExp20ThrowRegExpExceptionEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEENS0_11RegExpErrorE(%"class.v8::internal::Isolate"*, i64* nocapture readnone, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Vector.1132", align 8
  %6 = tail call i8* @_ZN2v88internal17RegExpErrorStringENS0_11RegExpErrorE(i32 %3) #13
  %7 = tail call i64 @strlen(i8* %6) #14
  %8 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %9 = bitcast %"class.v8::internal::Vector.1132"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.v8::internal::Vector.1132", %"class.v8::internal::Vector.1132"* %5, i64 0, i32 0
  store i8* %6, i8** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Vector.1132", %"class.v8::internal::Vector.1132"* %5, i64 0, i32 1
  store i64 %7, i64* %11, align 8
  %12 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %8, %"class.v8::internal::Vector.1132"* nonnull dereferenceable(16) %5, i8 zeroext 0) #13
  %13 = icmp eq i64* %12, null
  br i1 %13, label %14, label %15, !prof !2

14:                                               ; preds = %4
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

15:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  %16 = call i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %8, i32 288, i64* %2, i64* nonnull %12, i64* null) #13
  %17 = load i64, i64* %16, align 8
  %18 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %17, %"class.v8::internal::MessageLocation"* null) #13
  ret i64* null
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @_ZN2v88internal17RegExpErrorStringENS0_11RegExpErrorE(i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1132"* dereferenceable(16), i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6RegExp20ThrowRegExpExceptionEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS0_11RegExpErrorE(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Vector.1132", align 8
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 11
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %6, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %18 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %19 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %3
  %21 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %18, i64 %16) #13
  br label %35

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = icmp eq i64* %24, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #13
  br label %30

30:                                               ; preds = %28, %22
  %31 = phi i64* [ %29, %28 ], [ %24, %22 ]
  %32 = ptrtoint i64* %31 to i64
  %33 = add i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  store i64* %34, i64** %23, align 8
  store i64 %16, i64* %31, align 8
  br label %35

35:                                               ; preds = %20, %30
  %36 = phi i64* [ %21, %20 ], [ %31, %30 ]
  %37 = tail call i8* @_ZN2v88internal17RegExpErrorStringENS0_11RegExpErrorE(i32 %2) #13
  %38 = tail call i64 @strlen(i8* %37) #14
  %39 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %40 = bitcast %"class.v8::internal::Vector.1132"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.v8::internal::Vector.1132", %"class.v8::internal::Vector.1132"* %4, i64 0, i32 0
  store i8* %37, i8** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Vector.1132", %"class.v8::internal::Vector.1132"* %4, i64 0, i32 1
  store i64 %38, i64* %42, align 8
  %43 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %39, %"class.v8::internal::Vector.1132"* nonnull dereferenceable(16) %4, i8 zeroext 0) #13
  %44 = icmp eq i64* %43, null
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %35
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

46:                                               ; preds = %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #13
  %47 = call i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %39, i32 288, i64* %36, i64* nonnull %43, i64* null) #13
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %48, %"class.v8::internal::MessageLocation"* null) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6RegExp18IsUnmodifiedRegExpEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN2v88internal11RegExpUtils18IsUnmodifiedRegExpEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1) #13
  ret i1 %3
}

declare zeroext i1 @_ZN2v88internal11RegExpUtils18IsUnmodifiedRegExpEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6RegExp7CompileEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEENS_4base5FlagsINS5_4FlagEiEEj(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::StringShape", align 4
  %9 = alloca %"class.v8::internal::Vector.1132", align 8
  %10 = alloca %"class.v8::internal::Vector.1132", align 8
  %11 = alloca %"class.v8::internal::String", align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.v8::internal::StringShape", align 4
  %14 = alloca [128 x i8], align 16
  %15 = alloca %"class.v8::internal::Zone", align 8
  %16 = alloca %"class.v8::internal::PostponeInterruptsScope", align 8
  %17 = alloca %"struct.v8::internal::RegExpCompileData", align 8
  %18 = alloca %"class.v8::internal::FlatStringReader", align 8
  %19 = alloca <2 x i64>, align 16
  %20 = bitcast <2 x i64>* %19 to %"class.v8::internal::Vector.1141"*
  %21 = icmp eq i32 %4, 0
  %22 = bitcast %"class.v8::internal::Zone"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 34
  %24 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %23, align 8
  call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %15, %"class.v8::internal::AccountingAllocator"* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__._ZN2v88internal6RegExp7CompileEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEENS_4base5FlagsINS5_4FlagEiEEj, i64 0, i64 0), i1 zeroext false) #13
  br i1 %21, label %25, label %66

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 13
  %27 = load %"class.v8::internal::CompilationCache"*, %"class.v8::internal::CompilationCache"** %26, align 8
  %28 = call i64* @_ZN2v88internal16CompilationCache12LookupRegExpENS0_6HandleINS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEE(%"class.v8::internal::CompilationCache"* %27, i64* %2, i32 %3) #13
  %29 = icmp eq i64* %28, null
  br i1 %29, label %66, label %30

30:                                               ; preds = %25
  %31 = load i64, i64* %1, align 8
  %32 = load i64, i64* %28, align 8
  %33 = add i64 %31, 11
  %34 = inttoptr i64 %33 to i32*
  %35 = trunc i64 %32 to i32
  store atomic volatile i32 %35, i32* %34 monotonic, align 4
  %36 = and i64 %32, 1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %49, label %38

38:                                               ; preds = %30
  %39 = and i64 %31, -262144
  %40 = or i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 262144
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %38
  %46 = or i64 %39, 16
  %47 = inttoptr i64 %46 to %"class.v8::internal::Heap"**
  %48 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %47, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %48, i64 %31, i64 %33, i64 %32) #13
  br label %49

49:                                               ; preds = %45, %38, %30
  %50 = and i64 %32, -262144
  %51 = or i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 24
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %49
  %57 = and i64 %31, -262144
  %58 = or i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 24
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %56
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %31, i64 %33, i64 %32) #13
  br label %64

64:                                               ; preds = %49, %56, %63
  %65 = ptrtoint i64* %1 to i64
  br label %322

66:                                               ; preds = %25, %5
  %67 = phi %"class.v8::internal::CompilationCache"* [ null, %5 ], [ %27, %25 ]
  %68 = bitcast %"class.v8::internal::PostponeInterruptsScope"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %68) #13
  %69 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %16, i64 0, i32 0
  call void @_ZN2v88internal15InterruptsScopeC2EPNS0_7IsolateElNS1_4ModeE(%"class.v8::internal::InterruptsScope"* nonnull %69, %"class.v8::internal::Isolate"* %0, i64 255, i32 0) #13
  %70 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %16, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal23PostponeInterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = bitcast %"struct.v8::internal::RegExpCompileData"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %71) #13
  %72 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %17, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %72, align 8
  %73 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %17, i64 0, i32 4
  store i8 0, i8* %73, align 1
  %74 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %17, i64 0, i32 6, i32 0, i32 0
  %75 = bitcast i64** %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #13
  %76 = bitcast %"class.v8::internal::FlatStringReader"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %76) #13
  call void @_ZN2v88internal16FlatStringReaderC1EPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::FlatStringReader"* nonnull %18, %"class.v8::internal::Isolate"* %0, i64* %2) #13
  %77 = call zeroext i1 @_ZN2v88internal12RegExpParser11ParseRegExpEPNS0_7IsolateEPNS0_4ZoneEPNS0_16FlatStringReaderENS_4base5FlagsINS0_8JSRegExp4FlagEiEEPNS0_17RegExpCompileDataE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::Zone"* nonnull %15, %"class.v8::internal::FlatStringReader"* nonnull %18, i32 %3, %"struct.v8::internal::RegExpCompileData"* nonnull %17) #13
  br i1 %77, label %94, label %78

78:                                               ; preds = %66
  %79 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %17, i64 0, i32 7
  %80 = load i32, i32* %79, align 8
  %81 = call i8* @_ZN2v88internal17RegExpErrorStringENS0_11RegExpErrorE(i32 %80) #13
  %82 = call i64 @strlen(i8* %81) #14
  %83 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %84 = bitcast %"class.v8::internal::Vector.1132"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #13
  %85 = getelementptr inbounds %"class.v8::internal::Vector.1132", %"class.v8::internal::Vector.1132"* %10, i64 0, i32 0
  store i8* %81, i8** %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Vector.1132", %"class.v8::internal::Vector.1132"* %10, i64 0, i32 1
  store i64 %82, i64* %86, align 8
  %87 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %83, %"class.v8::internal::Vector.1132"* nonnull dereferenceable(16) %10, i8 zeroext 0) #13
  %88 = icmp eq i64* %87, null
  br i1 %88, label %89, label %90, !prof !2

89:                                               ; preds = %78
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

90:                                               ; preds = %78
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #13
  %91 = call i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %83, i32 288, i64* %2, i64* nonnull %87, i64* null) #13
  %92 = load i64, i64* %91, align 8
  %93 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %92, %"class.v8::internal::MessageLocation"* null) #13
  br label %305

94:                                               ; preds = %66
  %95 = load i8, i8* @_ZN2v88internal42FLAG_default_to_experimental_regexp_engineE, align 1, !range !3
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %105, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %17, i64 0, i32 0
  %99 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %98, align 8
  %100 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %17, i64 0, i32 9
  %101 = load i32, i32* %100, align 8
  %102 = call zeroext i1 @_ZN2v88internal18ExperimentalRegExp12CanBeHandledEPNS0_10RegExpTreeENS_4base5FlagsINS0_8JSRegExp4FlagEiEEi(%"class.v8::internal::RegExpTree"* %99, i32 %3, i32 %101) #13
  br i1 %102, label %103, label %105

103:                                              ; preds = %97
  %104 = load i32, i32* %100, align 8
  call void @_ZN2v88internal18ExperimentalRegExp10InitializeEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEENS_4base5FlagsINS5_4FlagEiEEi(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i32 %3, i32 %104) #13
  br label %274

105:                                              ; preds = %94, %97
  %106 = and i32 %3, 64
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %130, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %17, i64 0, i32 0
  %110 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %109, align 8
  %111 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %17, i64 0, i32 9
  %112 = load i32, i32* %111, align 8
  %113 = call zeroext i1 @_ZN2v88internal18ExperimentalRegExp12CanBeHandledEPNS0_10RegExpTreeENS_4base5FlagsINS0_8JSRegExp4FlagEiEEi(%"class.v8::internal::RegExpTree"* %110, i32 %3, i32 %112) #13
  br i1 %113, label %128, label %114

114:                                              ; preds = %108
  %115 = call i8* @_ZN2v88internal17RegExpErrorStringENS0_11RegExpErrorE(i32 18) #13
  %116 = call i64 @strlen(i8* %115) #14
  %117 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %118 = bitcast %"class.v8::internal::Vector.1132"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #13
  %119 = getelementptr inbounds %"class.v8::internal::Vector.1132", %"class.v8::internal::Vector.1132"* %9, i64 0, i32 0
  store i8* %115, i8** %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Vector.1132", %"class.v8::internal::Vector.1132"* %9, i64 0, i32 1
  store i64 %116, i64* %120, align 8
  %121 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %117, %"class.v8::internal::Vector.1132"* nonnull dereferenceable(16) %9, i8 zeroext 0) #13
  %122 = icmp eq i64* %121, null
  br i1 %122, label %123, label %124, !prof !2

123:                                              ; preds = %114
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

124:                                              ; preds = %114
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #13
  %125 = call i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %117, i32 288, i64* %2, i64* nonnull %121, i64* null) #13
  %126 = load i64, i64* %125, align 8
  %127 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %126, %"class.v8::internal::MessageLocation"* null) #13
  br label %305

128:                                              ; preds = %108
  %129 = load i32, i32* %111, align 8
  call void @_ZN2v88internal18ExperimentalRegExp10InitializeEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEENS_4base5FlagsINS5_4FlagEiEEi(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i32 %3, i32 %129) #13
  br label %274

130:                                              ; preds = %105
  %131 = load i8, i8* %72, align 8, !range !3
  %132 = icmp eq i8 %131, 0
  %133 = and i32 %3, 10
  %134 = icmp ne i32 %133, 0
  %135 = or i1 %134, %132
  br i1 %135, label %185, label %136

136:                                              ; preds = %130
  %137 = load i64, i64* %2, align 8
  %138 = add i64 %137, 7
  %139 = inttoptr i64 %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = icmp slt i32 %140, 8
  %142 = select i1 %141, i32 %140, i32 8
  %143 = icmp slt i32 %142, 3
  br i1 %143, label %183, label %144

144:                                              ; preds = %136
  %145 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %145) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %145, i8 0, i64 128, i1 false) #13
  %146 = bitcast i32* %7 to i8*
  %147 = bitcast %"class.v8::internal::StringShape"* %8 to i8*
  %148 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %8, i64 0, i32 0
  %149 = bitcast %"class.v8::internal::String"* %6 to i8*
  %150 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %151

151:                                              ; preds = %180, %144
  %152 = phi i64 [ %137, %144 ], [ %181, %180 ]
  %153 = phi i32 [ 0, %144 ], [ %177, %180 ]
  %154 = phi i32 [ 0, %144 ], [ %176, %180 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146) #13
  store i32 %153, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %147) #13
  %155 = and i64 %152, -4294967296
  %156 = add i64 %152, -1
  %157 = inttoptr i64 %156 to i32*
  %158 = load atomic i32, i32* %157 acquire, align 4
  %159 = zext i32 %158 to i64
  %160 = or i64 %155, %159
  %161 = add i64 %160, 7
  %162 = inttoptr i64 %161 to i16*
  %163 = load atomic i16, i16* %162 monotonic, align 2
  %164 = zext i16 %163 to i32
  store i32 %164, i32* %148, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #13
  store i64 %152, i64* %150, align 8
  %165 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %8, %"class.v8::internal::String"* nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %147) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #13
  %166 = and i16 %165, 127
  %167 = zext i16 %166 to i64
  %168 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i64 0, i64 %167
  %169 = load i8, i8* %168, align 1, !range !3
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %171, label %175

171:                                              ; preds = %151
  store i8 1, i8* %168, align 1
  %172 = add nsw i32 %154, 1
  %173 = mul nsw i32 %172, 3
  %174 = icmp sgt i32 %173, %142
  br i1 %174, label %182, label %175

175:                                              ; preds = %171, %151
  %176 = phi i32 [ %154, %151 ], [ %172, %171 ]
  %177 = add nuw nsw i32 %153, 1
  %178 = icmp slt i32 %177, %142
  br i1 %178, label %180, label %179

179:                                              ; preds = %175
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %145) #13
  br label %185

180:                                              ; preds = %175
  %181 = load i64, i64* %2, align 8
  br label %151

182:                                              ; preds = %171
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %145) #13
  br label %183

183:                                              ; preds = %136, %182
  %184 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  call void @_ZN2v88internal7Factory17SetRegExpAtomDataENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEENS_4base5FlagsINS3_4FlagEiEENS2_INS0_6ObjectEEE(%"class.v8::internal::Factory"* %184, i64* %1, i64* %2, i32 %3, i64* %2) #13
  br label %274

185:                                              ; preds = %179, %130
  %186 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %17, i64 0, i32 0
  %187 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %186, align 8
  %188 = bitcast %"class.v8::internal::RegExpTree"* %187 to i1 (%"class.v8::internal::RegExpTree"*)***
  %189 = load i1 (%"class.v8::internal::RegExpTree"*)**, i1 (%"class.v8::internal::RegExpTree"*)*** %188, align 8
  %190 = getelementptr inbounds i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %189, i64 20
  %191 = load i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %190, align 8
  %192 = call zeroext i1 %191(%"class.v8::internal::RegExpTree"* %187) #13
  %193 = xor i1 %192, true
  %194 = and i32 %3, 8
  %195 = icmp ne i32 %194, 0
  %196 = or i1 %195, %193
  br i1 %196, label %270, label %197

197:                                              ; preds = %185
  %198 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %17, i64 0, i32 9
  %199 = load i32, i32* %198, align 8
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %270

201:                                              ; preds = %197
  %202 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %186, align 8
  %203 = bitcast %"class.v8::internal::RegExpTree"* %202 to %"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)***
  %204 = load %"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)**, %"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)*** %203, align 8
  %205 = getelementptr inbounds %"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)*, %"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)** %204, i64 19
  %206 = load %"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)*, %"class.v8::internal::RegExpAtom"* (%"class.v8::internal::RegExpTree"*)** %205, align 8
  %207 = call %"class.v8::internal::RegExpAtom"* %206(%"class.v8::internal::RegExpTree"* %202) #13
  %208 = bitcast <2 x i64>* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %208) #13
  %209 = getelementptr inbounds %"class.v8::internal::RegExpAtom", %"class.v8::internal::RegExpAtom"* %207, i64 0, i32 1, i32 0
  %210 = bitcast i16** %209 to <2 x i64>*
  %211 = load <2 x i64>, <2 x i64>* %210, align 8
  store <2 x i64> %211, <2 x i64>* %19, align 16
  %212 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %213 = call i64* @_ZN2v88internal7Factory20NewStringFromTwoByteERKNS0_6VectorIKtEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %212, %"class.v8::internal::Vector.1141"* nonnull dereferenceable(16) %20, i8 zeroext 0) #13
  %214 = icmp eq i64* %213, null
  br i1 %214, label %267, label %215

215:                                              ; preds = %201
  %216 = getelementptr inbounds %"class.v8::internal::RegExpAtom", %"class.v8::internal::RegExpAtom"* %207, i64 0, i32 2, i32 0
  %217 = load i32, i32* %216, align 8
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %268

220:                                              ; preds = %215
  %221 = load i64, i64* %213, align 8
  %222 = add i64 %221, 7
  %223 = inttoptr i64 %222 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = icmp slt i32 %224, 8
  %226 = select i1 %225, i32 %224, i32 8
  %227 = icmp slt i32 %226, 3
  br i1 %227, label %269, label %228

228:                                              ; preds = %220
  %229 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %229) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %229, i8 0, i64 128, i1 false) #13
  %230 = bitcast i32* %12 to i8*
  %231 = bitcast %"class.v8::internal::StringShape"* %13 to i8*
  %232 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %13, i64 0, i32 0
  %233 = bitcast %"class.v8::internal::String"* %11 to i8*
  %234 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %235

235:                                              ; preds = %264, %228
  %236 = phi i64 [ %221, %228 ], [ %265, %264 ]
  %237 = phi i32 [ 0, %228 ], [ %261, %264 ]
  %238 = phi i32 [ 0, %228 ], [ %260, %264 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %230) #13
  store i32 %237, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %231) #13
  %239 = and i64 %236, -4294967296
  %240 = add i64 %236, -1
  %241 = inttoptr i64 %240 to i32*
  %242 = load atomic i32, i32* %241 acquire, align 4
  %243 = zext i32 %242 to i64
  %244 = or i64 %239, %243
  %245 = add i64 %244, 7
  %246 = inttoptr i64 %245 to i16*
  %247 = load atomic i16, i16* %246 monotonic, align 2
  %248 = zext i16 %247 to i32
  store i32 %248, i32* %232, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #13
  store i64 %236, i64* %234, align 8
  %249 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %13, %"class.v8::internal::String"* nonnull dereferenceable(8) %11, i32* nonnull dereferenceable(4) %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %231) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %230) #13
  %250 = and i16 %249, 127
  %251 = zext i16 %250 to i64
  %252 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i64 0, i64 %251
  %253 = load i8, i8* %252, align 1, !range !3
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %255, label %259

255:                                              ; preds = %235
  store i8 1, i8* %252, align 1
  %256 = add nsw i32 %238, 1
  %257 = mul nsw i32 %256, 3
  %258 = icmp sgt i32 %257, %226
  br i1 %258, label %266, label %259

259:                                              ; preds = %255, %235
  %260 = phi i32 [ %238, %235 ], [ %256, %255 ]
  %261 = add nuw nsw i32 %237, 1
  %262 = icmp slt i32 %261, %226
  br i1 %262, label %264, label %263

263:                                              ; preds = %259
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %229) #13
  br label %268

264:                                              ; preds = %259
  %265 = load i64, i64* %213, align 8
  br label %235

266:                                              ; preds = %255
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %229) #13
  br label %269

267:                                              ; preds = %201
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %208) #13
  br label %305

268:                                              ; preds = %215, %263
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %208) #13
  br label %270

269:                                              ; preds = %220, %266
  call void @_ZN2v88internal7Factory17SetRegExpAtomDataENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEENS_4base5FlagsINS3_4FlagEiEENS2_INS0_6ObjectEEE(%"class.v8::internal::Factory"* %212, i64* %1, i64* %2, i32 %3, i64* nonnull %213) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %208) #13
  br label %274

270:                                              ; preds = %185, %268, %197
  %271 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %17, i64 0, i32 9
  %272 = load i32, i32* %271, align 8
  %273 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  call void @_ZN2v88internal7Factory21SetRegExpIrregexpDataENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEENS_4base5FlagsINS3_4FlagEiEEij(%"class.v8::internal::Factory"* %273, i64* %1, i64* %2, i32 %3, i32 %272, i32 %4) #13
  br label %274

274:                                              ; preds = %269, %183, %128, %103, %270
  %275 = load i64, i64* %1, align 8
  %276 = and i64 %275, -4294967296
  %277 = add i64 %275, 11
  %278 = inttoptr i64 %277 to i32*
  %279 = load i32, i32* %278, align 4
  %280 = zext i32 %279 to i64
  %281 = or i64 %276, %280
  %282 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %283 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %282, align 8
  %284 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %283, null
  br i1 %284, label %287, label %285

285:                                              ; preds = %274
  %286 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %283, i64 %281) #13
  br label %300

287:                                              ; preds = %274
  %288 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %289 = load i64*, i64** %288, align 8
  %290 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %291 = load i64*, i64** %290, align 8
  %292 = icmp eq i64* %289, %291
  br i1 %292, label %293, label %295

293:                                              ; preds = %287
  %294 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #13
  br label %295

295:                                              ; preds = %293, %287
  %296 = phi i64* [ %294, %293 ], [ %289, %287 ]
  %297 = ptrtoint i64* %296 to i64
  %298 = add i64 %297, 8
  %299 = inttoptr i64 %298 to i64*
  store i64* %299, i64** %288, align 8
  store i64 %281, i64* %296, align 8
  br label %300

300:                                              ; preds = %285, %295
  %301 = phi i64* [ %286, %285 ], [ %296, %295 ]
  br i1 %21, label %302, label %303

302:                                              ; preds = %300
  call void @_ZN2v88internal16CompilationCache9PutRegExpENS0_6HandleINS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEENS2_INS0_10FixedArrayEEE(%"class.v8::internal::CompilationCache"* %67, i64* %2, i32 %3, i64* %301) #13
  br label %303

303:                                              ; preds = %302, %300
  %304 = ptrtoint i64* %1 to i64
  br label %305

305:                                              ; preds = %267, %124, %303, %90
  %306 = phi i64 [ %304, %303 ], [ 0, %267 ], [ 0, %124 ], [ 0, %90 ]
  %307 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %18, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %307, align 8
  %308 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %18, i64 0, i32 0, i32 1
  %309 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %308, align 8
  %310 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %18, i64 0, i32 0, i32 2
  %311 = bitcast %"class.v8::internal::Relocatable"** %310 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %309, i64 0, i32 91
  %314 = bitcast %"class.v8::internal::Relocatable"** %313 to i64*
  store i64 %312, i64* %314, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %76) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %71) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %315 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %16, i64 0, i32 0, i32 4
  %316 = load i32, i32* %315, align 8
  %317 = icmp eq i32 %316, 2
  br i1 %317, label %321, label %318

318:                                              ; preds = %305
  %319 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %16, i64 0, i32 0, i32 1
  %320 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %319, align 8
  call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %320) #13
  br label %321

321:                                              ; preds = %305, %318
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %68) #13
  br label %322

322:                                              ; preds = %64, %321
  %323 = phi i64 [ %65, %64 ], [ %306, %321 ]
  call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %22) #13
  %324 = inttoptr i64 %323 to i64*
  ret i64* %324
}

declare void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1 zeroext) unnamed_addr #2

declare i64* @_ZN2v88internal16CompilationCache12LookupRegExpENS0_6HandleINS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEE(%"class.v8::internal::CompilationCache"*, i64*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal16FlatStringReaderC1EPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::FlatStringReader"*, %"class.v8::internal::Isolate"*, i64*) unnamed_addr #2

declare zeroext i1 @_ZN2v88internal12RegExpParser11ParseRegExpEPNS0_7IsolateEPNS0_4ZoneEPNS0_16FlatStringReaderENS_4base5FlagsINS0_8JSRegExp4FlagEiEEPNS0_17RegExpCompileDataE(%"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::internal::FlatStringReader"*, i32, %"struct.v8::internal::RegExpCompileData"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal18ExperimentalRegExp12CanBeHandledEPNS0_10RegExpTreeENS_4base5FlagsINS0_8JSRegExp4FlagEiEEi(%"class.v8::internal::RegExpTree"*, i32, i32) local_unnamed_addr #2

declare void @_ZN2v88internal18ExperimentalRegExp10InitializeEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEENS_4base5FlagsINS5_4FlagEiEEi(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10RegExpImpl11AtomCompileEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEENS_4base5FlagsINS5_4FlagEiEES8_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %6 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  tail call void @_ZN2v88internal7Factory17SetRegExpAtomDataENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEENS_4base5FlagsINS3_4FlagEiEENS2_INS0_6ObjectEEE(%"class.v8::internal::Factory"* %6, i64* %1, i64* %2, i32 %3, i64* %4) #13
  ret void
}

declare i64* @_ZN2v88internal7Factory20NewStringFromTwoByteERKNS0_6VectorIKtEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1141"* dereferenceable(16), i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10RegExpImpl18IrregexpInitializeEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEENS_4base5FlagsINS5_4FlagEiEEij(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  tail call void @_ZN2v88internal7Factory21SetRegExpIrregexpDataENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEENS_4base5FlagsINS3_4FlagEiEEij(%"class.v8::internal::Factory"* %7, i64* %1, i64* %2, i32 %3, i32 %4, i32 %5) #13
  ret void
}

declare void @_ZN2v88internal16CompilationCache9PutRegExpENS0_6HandleINS0_6StringEEENS_4base5FlagsINS0_8JSRegExp4FlagEiEENS2_INS0_10FixedArrayEEE(%"class.v8::internal::CompilationCache"*, i64*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RelocatableD2Ev(%"class.v8::internal::Relocatable"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::Relocatable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 91
  %9 = bitcast %"class.v8::internal::Relocatable"** %8 to i64*
  store i64 %7, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6RegExp19EnsureFullyCompiledEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = and i64 %9, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %36, label %13

13:                                               ; preds = %3
  %14 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %15 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %14, i64 0, i32 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %14, i64 0, i32 1, i64 0
  br label %30

22:                                               ; preds = %16, %13
  %23 = and i64 %10, -262144
  %24 = or i64 %23, 16
  %25 = inttoptr i64 %24 to i64*
  %26 = load i64, i64* %25, align 16
  %27 = add i64 %26, -41416
  %28 = inttoptr i64 %27 to %"class.v8::internal::Isolate"*
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %30

30:                                               ; preds = %22, %20
  %31 = phi i64* [ %29, %22 ], [ %21, %20 ]
  %32 = getelementptr inbounds i64, i64* %31, i64 4
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %8, %34
  br i1 %35, label %41, label %36

36:                                               ; preds = %3, %30
  %37 = add i64 %10, 7
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = ashr i32 %39, 1
  switch i32 %40, label %50 [
    i32 0, label %41
    i32 1, label %51
    i32 2, label %42
    i32 3, label %45
  ]

41:                                               ; preds = %30, %36
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #15
  unreachable

42:                                               ; preds = %36
  %43 = tail call i32 @_ZN2v88internal10RegExpImpl15IrregexpPrepareEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2)
  %44 = icmp ne i32 %43, -1
  br label %51

45:                                               ; preds = %36
  %46 = tail call zeroext i1 @_ZN2v88internal18ExperimentalRegExp10IsCompiledENS0_6HandleINS0_8JSRegExpEEEPNS0_7IsolateE(i64* %1, %"class.v8::internal::Isolate"* %0) #13
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = tail call zeroext i1 @_ZN2v88internal18ExperimentalRegExp7CompileEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEE(%"class.v8::internal::Isolate"* %0, i64* %1) #13
  br i1 %48, label %49, label %51

49:                                               ; preds = %47, %45
  br label %51

50:                                               ; preds = %36
  unreachable

51:                                               ; preds = %47, %42, %36, %49
  %52 = phi i1 [ true, %49 ], [ true, %36 ], [ %44, %42 ], [ false, %47 ]
  ret i1 %52
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal10RegExpImpl15IrregexpPrepareEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %7 = load i64, i64* %2, align 8
  br label %8

8:                                                ; preds = %21, %3
  %9 = phi i64 [ %7, %3 ], [ %26, %21 ]
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = and i16 %18, 9
  %20 = zext i16 %19 to i32
  switch i32 %20, label %21 [
    i32 8, label %28
    i32 0, label %27
  ]

21:                                               ; preds = %8
  %22 = add i64 %9, 11
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %10, %25
  br label %8

27:                                               ; preds = %8
  br label %28

28:                                               ; preds = %8, %27
  %29 = phi i1 [ false, %27 ], [ true, %8 ]
  %30 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = load i64, i64* %1, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %4, i64 0, i32 0
  %34 = call i64 @_ZNK2v88internal8JSRegExp4CodeEb(%"class.v8::internal::JSRegExp"* nonnull %33, i1 zeroext %29) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  %35 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %36 = load i64, i64* %1, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %5, i64 0, i32 0
  %39 = call i64 @_ZNK2v88internal8JSRegExp8BytecodeEb(%"class.v8::internal::JSRegExp"* nonnull %38, i1 zeroext %29) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  %40 = trunc i64 %34 to i32
  %41 = icmp eq i32 %40, -2
  %42 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #13
  %43 = load i64, i64* %1, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %6, i64 0, i32 0
  %46 = call zeroext i1 @_ZN2v88internal8JSRegExp15MarkedForTierUpEv(%"class.v8::internal::JSRegExp"* nonnull %45) #13
  %47 = xor i1 %46, true
  %48 = and i64 %39, 1
  %49 = icmp eq i64 %48, 0
  %50 = or i1 %49, %47
  br i1 %50, label %51, label %52

51:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #13
  br label %70

52:                                               ; preds = %28
  %53 = and i64 %39, -4294967296
  %54 = add i64 %39, -1
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %53, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = icmp eq i16 %61, 132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #13
  %63 = load i8, i8* @_ZN2v88internal25FLAG_trace_regexp_tier_upE, align 1, !range !3
  %64 = icmp eq i8 %63, 0
  %65 = xor i1 %62, true
  %66 = or i1 %64, %65
  br i1 %66, label %70, label %67

67:                                               ; preds = %52
  %68 = bitcast i64* %1 to i8**
  %69 = load i8*, i8** %68, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0), i8* %69) #13
  br label %70

70:                                               ; preds = %67, %52, %51
  %71 = phi i1 [ false, %51 ], [ %62, %52 ], [ %62, %67 ]
  %72 = or i1 %41, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %70
  %74 = call zeroext i1 @_ZN2v88internal10RegExpImpl15CompileIrregexpEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEb(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i1 zeroext %29) #13
  br i1 %74, label %75, label %120

75:                                               ; preds = %70, %73
  %76 = load i64, i64* %1, align 8
  %77 = and i64 %76, -4294967296
  %78 = add i64 %76, 11
  %79 = inttoptr i64 %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %77, %81
  %83 = and i64 %81, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %108, label %85

85:                                               ; preds = %75
  %86 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %87 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %86, i64 0, i32 0, i32 1
  %90 = load i8, i8* %89, align 8, !range !3
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %86, i64 0, i32 1, i64 0
  br label %102

94:                                               ; preds = %88, %85
  %95 = and i64 %82, -262144
  %96 = or i64 %95, 16
  %97 = inttoptr i64 %96 to i64*
  %98 = load i64, i64* %97, align 16
  %99 = add i64 %98, -41416
  %100 = inttoptr i64 %99 to %"class.v8::internal::Isolate"*
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %100, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %102

102:                                              ; preds = %94, %92
  %103 = phi i64* [ %101, %94 ], [ %93, %92 ]
  %104 = getelementptr inbounds i64, i64* %103, i64 4
  %105 = load i64, i64* %104, align 8
  %106 = trunc i64 %105 to i32
  %107 = icmp eq i32 %80, %106
  br i1 %107, label %119, label %108

108:                                              ; preds = %102, %75
  %109 = add i64 %82, 7
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = ashr i32 %111, 1
  switch i32 %112, label %119 [
    i32 1, label %120
    i32 3, label %113
    i32 2, label %113
  ]

113:                                              ; preds = %108, %108
  %114 = add i64 %82, 39
  %115 = inttoptr i64 %114 to i32*
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = add i32 %116, 2
  %118 = and i32 %117, -2
  br label %120

119:                                              ; preds = %108, %102
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #15
  unreachable

120:                                              ; preds = %113, %108, %73
  %121 = phi i32 [ -1, %73 ], [ %118, %113 ], [ 2, %108 ]
  ret i32 %121
}

declare zeroext i1 @_ZN2v88internal18ExperimentalRegExp10IsCompiledENS0_6HandleINS0_8JSRegExpEEEPNS0_7IsolateE(i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal18ExperimentalRegExp7CompileEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6RegExp23ExperimentalOneshotExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i64*, i32) local_unnamed_addr #0 align 2 {
  %7 = tail call i64* @_ZN2v88internal18ExperimentalRegExp11OneshotExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS0_6RegExp10ExecQuirksE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i32 %3, i64* %4, i32 %5) #13
  ret i64* %7
}

declare i64* @_ZN2v88internal18ExperimentalRegExp11OneshotExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS0_6RegExp10ExecQuirksE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6RegExp4ExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS1_10ExecQuirksE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i64*, i32) local_unnamed_addr #0 align 2 {
  %7 = load i64, i64* %1, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, 11
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = and i64 %12, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %39, label %16

16:                                               ; preds = %6
  %17 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %18 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %17, i64 0, i32 0, i32 1
  %21 = load i8, i8* %20, align 8, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %17, i64 0, i32 1, i64 0
  br label %33

25:                                               ; preds = %19, %16
  %26 = and i64 %13, -262144
  %27 = or i64 %26, 16
  %28 = inttoptr i64 %27 to i64*
  %29 = load i64, i64* %28, align 16
  %30 = add i64 %29, -41416
  %31 = inttoptr i64 %30 to %"class.v8::internal::Isolate"*
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %33

33:                                               ; preds = %25, %23
  %34 = phi i64* [ %32, %25 ], [ %24, %23 ]
  %35 = getelementptr inbounds i64, i64* %34, i64 4
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i32
  %38 = icmp eq i32 %11, %37
  br i1 %38, label %44, label %39

39:                                               ; preds = %6, %33
  %40 = add i64 %13, 7
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = ashr i32 %42, 1
  switch i32 %43, label %51 [
    i32 0, label %44
    i32 1, label %45
    i32 2, label %47
    i32 3, label %49
  ]

44:                                               ; preds = %33, %39
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #15
  unreachable

45:                                               ; preds = %39
  %46 = tail call i64* @_ZN2v88internal10RegExpImpl8AtomExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i32 %3, i64* %4)
  br label %52

47:                                               ; preds = %39
  %48 = tail call i64* @_ZN2v88internal10RegExpImpl12IrregexpExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS0_6RegExp10ExecQuirksE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i32 %3, i64* %4, i32 %5)
  br label %52

49:                                               ; preds = %39
  %50 = tail call i64* @_ZN2v88internal18ExperimentalRegExp4ExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS0_6RegExp10ExecQuirksE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i32 %3, i64* %4, i32 %5) #13
  br label %52

51:                                               ; preds = %39
  unreachable

52:                                               ; preds = %49, %47, %45
  %53 = phi i64* [ %50, %49 ], [ %48, %47 ], [ %46, %45 ]
  ret i64* %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10RegExpImpl8AtomExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 120, i64 0
  %7 = tail call i32 @_ZN2v88internal10RegExpImpl11AtomExecRawEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiPii(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i32 %3, i32* %6, i32 2)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  br label %84

11:                                               ; preds = %5
  %12 = load i64, i64* %2, align 8
  %13 = load i32, i32* %6, align 4
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 120, i64 1
  %15 = load i32, i32* %14, align 4
  %16 = load i64, i64* %4, align 8
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i32*
  store atomic volatile i32 4, i32* %18 monotonic, align 4
  %19 = load i64, i64* %4, align 8
  %20 = add i64 %19, 11
  %21 = inttoptr i64 %20 to i32*
  %22 = trunc i64 %12 to i32
  store atomic volatile i32 %22, i32* %21 monotonic, align 4
  %23 = and i64 %12, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %48, label %25

25:                                               ; preds = %11
  %26 = and i64 %19, -262144
  %27 = or i64 %26, 8
  %28 = inttoptr i64 %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 262144
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %25
  %33 = or i64 %26, 16
  %34 = inttoptr i64 %33 to %"class.v8::internal::Heap"**
  %35 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %34, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %35, i64 %19, i64 %20, i64 %12) #13
  br label %36

36:                                               ; preds = %32, %25
  %37 = and i64 %12, -262144
  %38 = or i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 24
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %36
  %44 = load i64, i64* %28, align 8
  %45 = and i64 %44, 24
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %43
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %19, i64 %20, i64 %12) #13
  br label %52

48:                                               ; preds = %11
  %49 = load i64, i64* %4, align 8
  %50 = add i64 %49, 15
  %51 = inttoptr i64 %50 to i32*
  store atomic volatile i32 %22, i32* %51 monotonic, align 4
  br label %75

52:                                               ; preds = %47, %43, %36
  %53 = load i64, i64* %4, align 8
  %54 = add i64 %53, 15
  %55 = inttoptr i64 %54 to i32*
  store atomic volatile i32 %22, i32* %55 monotonic, align 4
  %56 = and i64 %53, -262144
  %57 = or i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, 262144
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %52
  %63 = or i64 %56, 16
  %64 = inttoptr i64 %63 to %"class.v8::internal::Heap"**
  %65 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %64, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %65, i64 %53, i64 %54, i64 %12) #13
  br label %66

66:                                               ; preds = %62, %52
  %67 = load i64, i64* %39, align 8
  %68 = and i64 %67, 24
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = load i64, i64* %58, align 8
  %72 = and i64 %71, 24
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %53, i64 %54, i64 %12) #13
  br label %75

75:                                               ; preds = %48, %66, %70, %74
  %76 = load i64, i64* %4, align 8
  %77 = shl i32 %13, 1
  %78 = add i64 %76, 19
  %79 = inttoptr i64 %78 to i32*
  store atomic volatile i32 %77, i32* %79 monotonic, align 4
  %80 = load i64, i64* %4, align 8
  %81 = shl i32 %15, 1
  %82 = add i64 %80, 23
  %83 = inttoptr i64 %82 to i32*
  store atomic volatile i32 %81, i32* %83 monotonic, align 4
  br label %84

84:                                               ; preds = %75, %9
  %85 = phi i64* [ %10, %9 ], [ %4, %75 ]
  ret i64* %85
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10RegExpImpl12IrregexpExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS0_6RegExp10ExecQuirksE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i64*, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %8 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %2, i8 zeroext 0)
  %9 = load i8, i8* @_ZN2v88internal19FLAG_regexp_tier_upE, align 1, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11

11:                                               ; preds = %6
  %12 = load i64, i64* %8, align 8
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 999
  br i1 %16, label %17, label %25

17:                                               ; preds = %11
  %18 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %19 = load i64, i64* %1, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %7, i64 0, i32 0
  call void @_ZN2v88internal8JSRegExp21MarkTierUpForNextExecEv(%"class.v8::internal::JSRegExp"* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %22 = load i8, i8* @_ZN2v88internal25FLAG_trace_regexp_tier_upE, align 1, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.4, i64 0, i64 0)) #13
  br label %25

25:                                               ; preds = %6, %17, %24, %11
  %26 = call i32 @_ZN2v88internal10RegExpImpl15IrregexpPrepareEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %8)
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %123, label %28

28:                                               ; preds = %25
  %29 = icmp sgt i32 %26, 128
  br i1 %29, label %30, label %47

30:                                               ; preds = %28
  %31 = sext i32 %26 to i64
  %32 = shl nuw nsw i64 %31, 2
  %33 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %32, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #16
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %44

35:                                               ; preds = %30
  %36 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #13
  %37 = bitcast %"class.v8::Platform"* %36 to void (%"class.v8::Platform"*)***
  %38 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %38, i64 3
  %40 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %39, align 8
  call void %40(%"class.v8::Platform"* %36) #13
  %41 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %32, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #16
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #15
  unreachable

44:                                               ; preds = %35, %30
  %45 = phi i8* [ %41, %35 ], [ %33, %30 ]
  %46 = bitcast i8* %45 to i32*
  br label %49

47:                                               ; preds = %28
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 120, i64 0
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i1 [ true, %47 ], [ false, %44 ]
  %51 = phi i8* [ null, %47 ], [ %45, %44 ]
  %52 = phi i32* [ %48, %47 ], [ %46, %44 ]
  %53 = call i32 @_ZN2v88internal10RegExpImpl15IrregexpExecRawEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiPii(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %8, i32 %3, i32* %52, i32 %26)
  switch i32 %53, label %117 [
    i32 1, label %54
    i32 -3, label %114
    i32 -1, label %120
  ]

54:                                               ; preds = %49
  %55 = icmp eq i32 %5, 1
  br i1 %55, label %56, label %66

56:                                               ; preds = %54
  %57 = load i32, i32* %52, align 4
  %58 = load i64, i64* %8, align 8
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %57, %61
  br i1 %62, label %66, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %65 = ptrtoint i64* %64 to i64
  br label %120

66:                                               ; preds = %56, %54
  %67 = load i64, i64* %1, align 8
  %68 = and i64 %67, -4294967296
  %69 = add i64 %67, 11
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %68, %72
  %74 = and i64 %72, 1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %99, label %76

76:                                               ; preds = %66
  %77 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %78 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %77, i64 0, i32 0, i32 1
  %81 = load i8, i8* %80, align 8, !range !3
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %77, i64 0, i32 1, i64 0
  br label %93

85:                                               ; preds = %79, %76
  %86 = and i64 %73, -262144
  %87 = or i64 %86, 16
  %88 = inttoptr i64 %87 to i64*
  %89 = load i64, i64* %88, align 16
  %90 = add i64 %89, -41416
  %91 = inttoptr i64 %90 to %"class.v8::internal::Isolate"*
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %93

93:                                               ; preds = %85, %83
  %94 = phi i64* [ %92, %85 ], [ %84, %83 ]
  %95 = getelementptr inbounds i64, i64* %94, i64 4
  %96 = load i64, i64* %95, align 8
  %97 = trunc i64 %96 to i32
  %98 = icmp eq i32 %71, %97
  br i1 %98, label %109, label %99

99:                                               ; preds = %93, %66
  %100 = add i64 %73, 7
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = ashr i32 %102, 1
  switch i32 %103, label %109 [
    i32 1, label %110
    i32 3, label %104
    i32 2, label %104
  ]

104:                                              ; preds = %99, %99
  %105 = add i64 %73, 39
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = ashr i32 %107, 1
  br label %110

109:                                              ; preds = %99, %93
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #15
  unreachable

110:                                              ; preds = %99, %104
  %111 = phi i32 [ %108, %104 ], [ 0, %99 ]
  %112 = call i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"* %0, i64* %4, i64* %8, i32 %111, i32* %52)
  %113 = ptrtoint i64* %112 to i64
  br label %120

114:                                              ; preds = %49
  %115 = call i64* @_ZN2v88internal18ExperimentalRegExp11OneshotExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS0_6RegExp10ExecQuirksE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %8, i32 %3, i64* %4, i32 0) #13
  %116 = ptrtoint i64* %115 to i64
  br label %120

117:                                              ; preds = %49
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %119 = ptrtoint i64* %118 to i64
  br label %120

120:                                              ; preds = %49, %117, %114, %110, %63
  %121 = phi i64 [ %119, %117 ], [ %116, %114 ], [ %113, %110 ], [ %65, %63 ], [ 0, %49 ]
  br i1 %50, label %123, label %122

122:                                              ; preds = %120
  call void @_ZdaPv(i8* %51) #16
  br label %123

123:                                              ; preds = %122, %120, %25
  %124 = phi i64 [ 0, %25 ], [ %121, %120 ], [ %121, %122 ]
  %125 = inttoptr i64 %124 to i64*
  ret i64* %125
}

declare i64* @_ZN2v88internal18ExperimentalRegExp4ExecEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiNS4_INS0_15RegExpMatchInfoEEENS0_6RegExp10ExecQuirksE(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i64*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal7Factory17SetRegExpAtomDataENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEENS_4base5FlagsINS3_4FlagEiEENS2_INS0_6ObjectEEE(%"class.v8::internal::Factory"*, i64*, i64*, i32, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal10RegExpImpl11AtomExecRawEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiPii(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i32* nocapture, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::StringSearch", align 8
  %8 = alloca %"class.v8::internal::StringSearch.1293", align 8
  %9 = alloca %"class.v8::internal::StringSearch.1295", align 8
  %10 = alloca %"class.v8::internal::StringSearch.1298", align 8
  %11 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %12 = alloca %"class.v8::internal::String", align 8
  %13 = alloca %"class.v8::internal::String::FlatContent", align 8
  %14 = alloca %"class.v8::internal::String::FlatContent", align 8
  %15 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %16 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %2, i8 zeroext 0)
  %17 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #13
  %18 = bitcast %"class.v8::internal::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %19 = load i64, i64* %1, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, 11
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = add i64 %25, 19
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %20, %29
  %31 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %30, i64* %31, align 8
  %32 = add i64 %30, 7
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, %3
  %36 = load i64, i64* %16, align 8
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %35, %39
  br i1 %40, label %237, label %41

41:                                               ; preds = %6
  %42 = icmp sgt i32 %5, 0
  br i1 %42, label %43, label %235

43:                                               ; preds = %41
  %44 = bitcast %"class.v8::internal::String::FlatContent"* %13 to i8*
  %45 = bitcast %"class.v8::internal::String::FlatContent"* %14 to i8*
  %46 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %15 to i8*
  %47 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %15, i64 0, i32 0
  %49 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 2
  %50 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %14, i64 0, i32 2
  %51 = bitcast %"class.v8::internal::String::FlatContent"* %14 to i16**
  %52 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %14, i64 0, i32 1
  %53 = bitcast %"class.v8::internal::String::FlatContent"* %13 to i64*
  %54 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 1
  %55 = bitcast %"class.v8::internal::StringSearch.1298"* %10 to i8*
  %56 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %10, i64 0, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %10, i64 0, i32 1, i32 0
  %58 = bitcast i16** %57 to i64*
  %59 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %10, i64 0, i32 1, i32 1
  %60 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %10, i64 0, i32 3
  %61 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %10, i64 0, i32 2
  %62 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %14, i64 0, i32 0, i32 0
  %63 = bitcast %"class.v8::internal::String::FlatContent"* %13 to i16**
  %64 = bitcast %"class.v8::internal::StringSearch.1295"* %9 to i8*
  %65 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %9, i64 0, i32 0
  %66 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %9, i64 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %9, i64 0, i32 1, i32 1
  %68 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %9, i64 0, i32 3
  %69 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %9, i64 0, i32 2
  %70 = bitcast %"class.v8::internal::StringSearch.1293"* %8 to i8*
  %71 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %8, i64 0, i32 0
  %72 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %8, i64 0, i32 1, i32 0
  %73 = bitcast i8** %72 to i64*
  %74 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %8, i64 0, i32 1, i32 1
  %75 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %8, i64 0, i32 3
  %76 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %8, i64 0, i32 2
  %77 = bitcast %"class.v8::internal::StringSearch"* %7 to i8*
  %78 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 0
  %79 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 1, i32 0
  %80 = bitcast i8** %79 to i64*
  %81 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 1, i32 1
  %82 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 3
  %83 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %7, i64 0, i32 2
  br label %84

84:                                               ; preds = %43, %224
  %85 = phi i64 [ 0, %43 ], [ %229, %224 ]
  %86 = phi i32 [ %3, %43 ], [ %226, %224 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #13
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %13, %"class.v8::internal::String"* nonnull %12, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %11) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  %87 = load i64, i64* %16, align 8
  store i64 %87, i64* %47, align 8
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %14, %"class.v8::internal::String"* nonnull %48, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  %88 = load i32, i32* %49, align 4
  %89 = icmp eq i32 %88, 1
  %90 = load i32, i32* %50, align 4
  %91 = icmp eq i32 %90, 1
  br i1 %89, label %92, label %123

92:                                               ; preds = %84
  br i1 %91, label %93, label %108

93:                                               ; preds = %92
  %94 = load i8*, i8** %62, align 8
  %95 = load i32, i32* %52, align 8
  %96 = sext i32 %95 to i64
  %97 = load i64, i64* %53, align 8
  %98 = load i32, i32* %54, align 8
  %99 = sext i32 %98 to i64
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %77) #13
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %78, align 8
  store i64 %97, i64* %80, align 8
  store i64 %99, i64* %81, align 8
  %100 = icmp sgt i32 %98, 250
  %101 = select i1 %100, i32 %98, i32 250
  %102 = add nsw i32 %101, -250
  store i32 %102, i32* %82, align 8
  %103 = icmp slt i32 %98, 7
  %104 = icmp eq i32 %98, 1
  %105 = select i1 %104, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE16SingleCharSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE12LinearSearchEPS2_NS0_6VectorIKhEEi
  %106 = select i1 %103, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* %105, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE13InitialSearchEPS2_NS0_6VectorIKhEEi
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* %106, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %83, align 8
  %107 = call i32 %106(%"class.v8::internal::StringSearch"* nonnull %7, i8* %94, i64 %96, i32 %86) #13
  br label %220

108:                                              ; preds = %92
  %109 = load i16*, i16** %51, align 8
  %110 = load i32, i32* %52, align 8
  %111 = sext i32 %110 to i64
  %112 = load i64, i64* %53, align 8
  %113 = load i32, i32* %54, align 8
  %114 = sext i32 %113 to i64
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #13
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %71, align 8
  store i64 %112, i64* %73, align 8
  store i64 %114, i64* %74, align 8
  %115 = icmp sgt i32 %113, 250
  %116 = select i1 %115, i32 %113, i32 250
  %117 = add nsw i32 %116, -250
  store i32 %117, i32* %75, align 8
  %118 = icmp slt i32 %113, 7
  %119 = icmp eq i32 %113, 1
  %120 = select i1 %119, i32 (%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE16SingleCharSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE12LinearSearchEPS2_NS0_6VectorIKtEEi
  %121 = select i1 %118, i32 (%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32)* %120, i32 (%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE13InitialSearchEPS2_NS0_6VectorIKtEEi
  store i32 (%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32)* %121, i32 (%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32)** %76, align 8
  %122 = call i32 %121(%"class.v8::internal::StringSearch.1293"* nonnull %8, i16* %109, i64 %111, i32 %86) #13
  br label %220

123:                                              ; preds = %84
  br i1 %91, label %124, label %205

124:                                              ; preds = %123
  %125 = load i8*, i8** %62, align 8
  %126 = load i32, i32* %52, align 8
  %127 = sext i32 %126 to i64
  %128 = load i16*, i16** %63, align 8
  %129 = load i32, i32* %54, align 8
  %130 = sext i32 %129 to i64
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %64) #13
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %65, align 8
  store i16* %128, i16** %66, align 8
  store i64 %130, i64* %67, align 8
  %131 = icmp sgt i32 %129, 250
  %132 = select i1 %131, i32 %129, i32 250
  %133 = add nsw i32 %132, -250
  store i32 %133, i32* %68, align 8
  %134 = getelementptr inbounds i16, i16* %128, i64 %130
  %135 = icmp ugt i32 %129, 7
  br i1 %135, label %136, label %172

136:                                              ; preds = %124
  %137 = ptrtoint i16* %128 to i64
  %138 = and i64 %137, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %136
  %141 = load i16, i16* %128, align 2
  %142 = icmp ugt i16 %141, 255
  br i1 %142, label %152, label %156

143:                                              ; preds = %156, %136
  %144 = phi i16* [ %128, %136 ], [ %158, %156 ]
  %145 = getelementptr inbounds i16, i16* %144, i64 8
  %146 = icmp ugt i16* %145, %134
  br i1 %146, label %172, label %162

147:                                              ; preds = %156
  %148 = load i16, i16* %158, align 2
  %149 = icmp ugt i16 %148, 255
  br i1 %149, label %150, label %156

150:                                              ; preds = %147
  %151 = ptrtoint i16* %158 to i64
  br label %152

152:                                              ; preds = %150, %140
  %153 = phi i64 [ %137, %140 ], [ %151, %150 ]
  %154 = sub i64 %153, %137
  %155 = ashr exact i64 %154, 1
  br label %193

156:                                              ; preds = %140, %147
  %157 = phi i16* [ %158, %147 ], [ %128, %140 ]
  %158 = getelementptr inbounds i16, i16* %157, i64 1
  %159 = ptrtoint i16* %158 to i64
  %160 = and i64 %159, 7
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %143, label %147

162:                                              ; preds = %143, %168
  %163 = phi i16* [ %169, %168 ], [ %144, %143 ]
  %164 = bitcast i16* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = and i64 %165, -71777214294589696
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %172

168:                                              ; preds = %162
  %169 = getelementptr inbounds i16, i16* %163, i64 4
  %170 = getelementptr inbounds i16, i16* %163, i64 12
  %171 = icmp ugt i16* %170, %134
  br i1 %171, label %172, label %162

172:                                              ; preds = %168, %162, %143, %124
  %173 = phi i16* [ %128, %124 ], [ %144, %143 ], [ %169, %168 ], [ %163, %162 ]
  %174 = icmp ult i16* %173, %134
  br i1 %174, label %175, label %187

175:                                              ; preds = %172, %184
  %176 = phi i16* [ %185, %184 ], [ %173, %172 ]
  %177 = load i16, i16* %176, align 2
  %178 = icmp ugt i16 %177, 255
  br i1 %178, label %179, label %184

179:                                              ; preds = %175
  %180 = ptrtoint i16* %176 to i64
  %181 = ptrtoint i16* %128 to i64
  %182 = sub i64 %180, %181
  %183 = ashr exact i64 %182, 1
  br label %193

184:                                              ; preds = %175
  %185 = getelementptr inbounds i16, i16* %176, i64 1
  %186 = icmp ult i16* %185, %134
  br i1 %186, label %175, label %187

187:                                              ; preds = %184, %172
  %188 = phi i16* [ %173, %172 ], [ %185, %184 ]
  %189 = ptrtoint i16* %188 to i64
  %190 = ptrtoint i16* %128 to i64
  %191 = sub i64 %189, %190
  %192 = lshr exact i64 %191, 1
  br label %193

193:                                              ; preds = %187, %179, %152
  %194 = phi i64 [ %155, %152 ], [ %183, %179 ], [ %192, %187 ]
  %195 = trunc i64 %194 to i32
  %196 = icmp sgt i32 %129, %195
  br i1 %196, label %202, label %197

197:                                              ; preds = %193
  %198 = icmp slt i32 %129, 7
  br i1 %198, label %199, label %202

199:                                              ; preds = %197
  %200 = icmp eq i32 %129, 1
  %201 = select i1 %200, i32 (%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi
  br label %202

202:                                              ; preds = %197, %199, %193
  %203 = phi i32 (%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32)* [ @_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi, %193 ], [ %201, %199 ], [ @_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi, %197 ]
  store i32 (%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32)* %203, i32 (%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32)** %69, align 8
  %204 = call i32 %203(%"class.v8::internal::StringSearch.1295"* nonnull %9, i8* %125, i64 %127, i32 %86) #13
  br label %220

205:                                              ; preds = %123
  %206 = load i16*, i16** %51, align 8
  %207 = load i32, i32* %52, align 8
  %208 = sext i32 %207 to i64
  %209 = load i64, i64* %53, align 8
  %210 = load i32, i32* %54, align 8
  %211 = sext i32 %210 to i64
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %55) #13
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %56, align 8
  store i64 %209, i64* %58, align 8
  store i64 %211, i64* %59, align 8
  %212 = icmp sgt i32 %210, 250
  %213 = select i1 %212, i32 %210, i32 250
  %214 = add nsw i32 %213, -250
  store i32 %214, i32* %60, align 8
  %215 = icmp slt i32 %210, 7
  %216 = icmp eq i32 %210, 1
  %217 = select i1 %216, i32 (%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE16SingleCharSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE12LinearSearchEPS2_NS0_6VectorIKtEEi
  %218 = select i1 %215, i32 (%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32)* %217, i32 (%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE13InitialSearchEPS2_NS0_6VectorIKtEEi
  store i32 (%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32)* %218, i32 (%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32)** %61, align 8
  %219 = call i32 %218(%"class.v8::internal::StringSearch.1298"* nonnull %10, i16* %206, i64 %208, i32 %86) #13
  br label %220

220:                                              ; preds = %202, %205, %93, %108
  %221 = phi i8* [ %64, %202 ], [ %55, %205 ], [ %77, %93 ], [ %70, %108 ]
  %222 = phi i32 [ %204, %202 ], [ %219, %205 ], [ %107, %93 ], [ %122, %108 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %221) #13
  %223 = icmp eq i32 %222, -1
  br i1 %223, label %232, label %224

224:                                              ; preds = %220
  %225 = getelementptr inbounds i32, i32* %4, i64 %85
  store i32 %222, i32* %225, align 4
  %226 = add nsw i32 %222, %34
  %227 = or i64 %85, 1
  %228 = getelementptr inbounds i32, i32* %4, i64 %227
  store i32 %226, i32* %228, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #13
  %229 = add nuw i64 %85, 2
  %230 = trunc i64 %229 to i32
  %231 = icmp slt i32 %230, %5
  br i1 %231, label %84, label %235

232:                                              ; preds = %220
  %233 = trunc i64 %85 to i32
  %234 = lshr exact i32 %233, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #13
  br label %237

235:                                              ; preds = %224, %41
  %236 = sdiv i32 %5, 2
  br label %237

237:                                              ; preds = %232, %6, %235
  %238 = phi i32 [ %236, %235 ], [ %234, %232 ], [ 0, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #13
  ret i32 %238
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #3 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %72

15:                                               ; preds = %3
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 1
  br i1 %23, label %24, label %72

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 7
  %32 = icmp eq i16 %31, 1
  br i1 %32, label %33, label %43

33:                                               ; preds = %24
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %70

43:                                               ; preds = %24, %33
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %52 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %53 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %43
  %55 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %52, i64 %50) #13
  %56 = load i64, i64* %55, align 8
  br label %72

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #13
  br label %65

65:                                               ; preds = %63, %57
  %66 = phi i64* [ %64, %63 ], [ %59, %57 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %58, align 8
  store i64 %50, i64* %66, align 8
  br label %72

70:                                               ; preds = %33
  %71 = tail call i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext %2) #13
  br label %118

72:                                               ; preds = %65, %54, %3, %15
  %73 = phi i64 [ %4, %15 ], [ %4, %3 ], [ %50, %65 ], [ %56, %54 ]
  %74 = phi i64* [ %1, %15 ], [ %1, %3 ], [ %66, %65 ], [ %55, %54 ]
  %75 = and i64 %73, -4294967296
  %76 = add i64 %73, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ult i16 %83, 64
  br i1 %84, label %85, label %118

85:                                               ; preds = %72
  %86 = load atomic i32, i32* %77 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %75, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 7
  %93 = icmp eq i16 %92, 5
  br i1 %93, label %94, label %118

94:                                               ; preds = %85
  %95 = add i64 %73, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %75, %98
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %94
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %99) #13
  br label %118

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #13
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %99, i64* %114, align 8
  br label %118

118:                                              ; preds = %72, %85, %103, %113, %70
  %119 = phi i64* [ %71, %70 ], [ %74, %85 ], [ %104, %103 ], [ %114, %113 ], [ %74, %72 ]
  ret i64* %119
}

declare void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* sret, %"class.v8::internal::String"*, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpImpl15CompileIrregexpEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEb(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Vector.1132", align 8
  %6 = alloca %"class.v8::internal::Zone", align 8
  %7 = alloca %"class.v8::internal::PostponeInterruptsScope", align 8
  %8 = alloca %"struct.v8::internal::RegExpCompileData", align 8
  %9 = alloca %"class.v8::internal::FlatStringReader", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %13 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %14 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %15 = alloca %"class.v8::internal::Code", align 8
  %16 = bitcast %"class.v8::internal::Zone"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 34
  %18 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %17, align 8
  call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %6, %"class.v8::internal::AccountingAllocator"* %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__._ZN2v88internal10RegExpImpl15CompileIrregexpEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEb, i64 0, i64 0), i1 zeroext false) #13
  %19 = bitcast %"class.v8::internal::PostponeInterruptsScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %7, i64 0, i32 0
  call void @_ZN2v88internal15InterruptsScopeC2EPNS0_7IsolateElNS1_4ModeE(%"class.v8::internal::InterruptsScope"* nonnull %20, %"class.v8::internal::Isolate"* %0, i64 255, i32 0) #13
  %21 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal23PostponeInterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = load i64, i64* %1, align 8
  %23 = and i64 %22, -4294967296
  %24 = add i64 %22, 11
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 15
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add i64 %28, 11
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %23, %36
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %39 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %38, align 8
  %40 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %4
  %42 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %39, i64 %37) #13
  br label %56

43:                                               ; preds = %4
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %45, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  %50 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #13
  br label %51

51:                                               ; preds = %49, %43
  %52 = phi i64* [ %50, %49 ], [ %45, %43 ]
  %53 = ptrtoint i64* %52 to i64
  %54 = add i64 %53, 8
  %55 = inttoptr i64 %54 to i64*
  store i64* %55, i64** %44, align 8
  store i64 %37, i64* %52, align 8
  br label %56

56:                                               ; preds = %41, %51
  %57 = phi i64* [ %42, %41 ], [ %52, %51 ]
  %58 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %57, i8 zeroext 0)
  %59 = bitcast %"struct.v8::internal::RegExpCompileData"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %59) #13
  %60 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %8, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #13
  store i8 1, i8* %60, align 8
  %61 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %8, i64 0, i32 4
  store i8 0, i8* %61, align 1
  %62 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %8, i64 0, i32 6, i32 0, i32 0
  %63 = bitcast i64** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #13
  %64 = bitcast %"class.v8::internal::FlatStringReader"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %64) #13
  call void @_ZN2v88internal16FlatStringReaderC1EPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::FlatStringReader"* nonnull %9, %"class.v8::internal::Isolate"* %0, i64* %58) #13
  %65 = call zeroext i1 @_ZN2v88internal12RegExpParser11ParseRegExpEPNS0_7IsolateEPNS0_4ZoneEPNS0_16FlatStringReaderENS_4base5FlagsINS0_8JSRegExp4FlagEiEEPNS0_17RegExpCompileDataE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::Zone"* nonnull %6, %"class.v8::internal::FlatStringReader"* nonnull %9, i32 %32, %"struct.v8::internal::RegExpCompileData"* nonnull %8) #13
  br i1 %65, label %82, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %8, i64 0, i32 7
  %68 = load i32, i32* %67, align 8
  %69 = call i8* @_ZN2v88internal17RegExpErrorStringENS0_11RegExpErrorE(i32 %68) #13
  %70 = call i64 @strlen(i8* %69) #14
  %71 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %72 = bitcast %"class.v8::internal::Vector.1132"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #13
  %73 = getelementptr inbounds %"class.v8::internal::Vector.1132", %"class.v8::internal::Vector.1132"* %5, i64 0, i32 0
  store i8* %69, i8** %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Vector.1132", %"class.v8::internal::Vector.1132"* %5, i64 0, i32 1
  store i64 %70, i64* %74, align 8
  %75 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %71, %"class.v8::internal::Vector.1132"* nonnull dereferenceable(16) %5, i8 zeroext 0) #13
  %76 = icmp eq i64* %75, null
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

78:                                               ; preds = %66
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #13
  %79 = call i64* @_ZN2v88internal7Factory14NewSyntaxErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %71, i32 288, i64* %58, i64* nonnull %75, i64* null) #13
  %80 = load i64, i64* %79, align 8
  %81 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %80, %"class.v8::internal::MessageLocation"* null) #13
  br label %351

82:                                               ; preds = %56
  %83 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  %84 = load i64, i64* %1, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %10, i64 0, i32 0
  %87 = call zeroext i1 @_ZN2v88internal8JSRegExp21ShouldProduceBytecodeEv(%"class.v8::internal::JSRegExp"* nonnull %86) #13
  %88 = xor i1 %87, true
  %89 = zext i1 %88 to i32
  %90 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %8, i64 0, i32 11
  store i32 %89, i32* %90, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #13
  %91 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #13
  %92 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #13
  %93 = load i64, i64* %1, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %12, i64 0, i32 0
  %96 = call i32 @_ZNK2v88internal8JSRegExp14BacktrackLimitEv(%"class.v8::internal::JSRegExp"* nonnull %95) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #13
  store i32 %96, i32* %11, align 4
  %97 = call zeroext i1 @_ZN2v88internal10RegExpImpl7CompileEPNS0_7IsolateEPNS0_4ZoneEPNS0_17RegExpCompileDataENS_4base5FlagsINS0_8JSRegExp4FlagEiEENS0_6HandleINS0_6StringEEESF_bRj(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::Zone"* nonnull %6, %"struct.v8::internal::RegExpCompileData"* nonnull %8, i32 %32, i64* %58, i64* %2, i1 zeroext %3, i32* nonnull dereferenceable(4) %11)
  br i1 %97, label %101, label %98

98:                                               ; preds = %82
  %99 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %8, i64 0, i32 7
  %100 = load i32, i32* %99, align 8
  call void @_ZN2v88internal6RegExp20ThrowRegExpExceptionEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS0_11RegExpErrorE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %100)
  br label %349

101:                                              ; preds = %82
  %102 = load i64, i64* %1, align 8
  %103 = and i64 %102, -4294967296
  %104 = add i64 %102, 11
  %105 = inttoptr i64 %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %103, %107
  %109 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %38, align 8
  %110 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %109, null
  br i1 %110, label %114, label %111

111:                                              ; preds = %101
  %112 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %109, i64 %108) #13
  %113 = load i64, i64* %112, align 8
  br label %127

114:                                              ; preds = %101
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %116 = load i64*, i64** %115, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %118 = load i64*, i64** %117, align 8
  %119 = icmp eq i64* %116, %118
  br i1 %119, label %120, label %122

120:                                              ; preds = %114
  %121 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #13
  br label %122

122:                                              ; preds = %120, %114
  %123 = phi i64* [ %121, %120 ], [ %116, %114 ]
  %124 = ptrtoint i64* %123 to i64
  %125 = add i64 %124, 8
  %126 = inttoptr i64 %125 to i64*
  store i64* %126, i64** %115, align 8
  store i64 %108, i64* %123, align 8
  br label %127

127:                                              ; preds = %111, %122
  %128 = phi i64 [ %113, %111 ], [ %108, %122 ]
  %129 = phi i64* [ %112, %111 ], [ %123, %122 ]
  %130 = load i32, i32* %90, align 8
  %131 = icmp eq i32 %130, 1
  %132 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %8, i64 0, i32 2, i32 0, i32 0
  %133 = load i64*, i64** %132, align 8
  %134 = load i64, i64* %133, align 8
  br i1 %131, label %135, label %170

135:                                              ; preds = %127
  %136 = select i1 %3, i64 19, i64 23
  %137 = add i64 %128, %136
  %138 = inttoptr i64 %137 to i32*
  %139 = trunc i64 %134 to i32
  store atomic volatile i32 %139, i32* %138 monotonic, align 4
  %140 = and i64 %134, 1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %165, label %142

142:                                              ; preds = %135
  %143 = and i64 %128, -262144
  %144 = or i64 %143, 8
  %145 = inttoptr i64 %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = and i64 %146, 262144
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %153, label %149

149:                                              ; preds = %142
  %150 = or i64 %143, 16
  %151 = inttoptr i64 %150 to %"class.v8::internal::Heap"**
  %152 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %151, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %152, i64 %128, i64 %137, i64 %134) #13
  br label %153

153:                                              ; preds = %149, %142
  %154 = and i64 %134, -262144
  %155 = or i64 %154, 8
  %156 = inttoptr i64 %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = and i64 %157, 24
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %165, label %160

160:                                              ; preds = %153
  %161 = load i64, i64* %145, align 8
  %162 = and i64 %161, 24
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %160
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %128, i64 %137, i64 %134) #13
  br label %165

165:                                              ; preds = %135, %153, %160, %164
  %166 = load i64, i64* %129, align 8
  %167 = select i1 %3, i64 27, i64 31
  %168 = add i64 %166, %167
  %169 = inttoptr i64 %168 to i32*
  store atomic volatile i32 -2, i32* %169 monotonic, align 4
  br label %234

170:                                              ; preds = %127
  %171 = select i1 %3, i64 27, i64 31
  %172 = add i64 %128, %171
  %173 = inttoptr i64 %172 to i32*
  %174 = trunc i64 %134 to i32
  store atomic volatile i32 %174, i32* %173 monotonic, align 4
  %175 = and i64 %134, 1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %200, label %177

177:                                              ; preds = %170
  %178 = and i64 %128, -262144
  %179 = or i64 %178, 8
  %180 = inttoptr i64 %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = and i64 %181, 262144
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %188, label %184

184:                                              ; preds = %177
  %185 = or i64 %178, 16
  %186 = inttoptr i64 %185 to %"class.v8::internal::Heap"**
  %187 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %186, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %187, i64 %128, i64 %172, i64 %134) #13
  br label %188

188:                                              ; preds = %184, %177
  %189 = and i64 %134, -262144
  %190 = or i64 %189, 8
  %191 = inttoptr i64 %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = and i64 %192, 24
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %200, label %195

195:                                              ; preds = %188
  %196 = load i64, i64* %180, align 8
  %197 = and i64 %196, 24
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %195
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %128, i64 %172, i64 %134) #13
  br label %200

200:                                              ; preds = %170, %188, %195, %199
  %201 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 41
  %202 = call i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"* %201, i32 518) #13
  %203 = load i64, i64* %129, align 8
  %204 = load i64, i64* %202, align 8
  %205 = select i1 %3, i64 19, i64 23
  %206 = add i64 %203, %205
  %207 = inttoptr i64 %206 to i32*
  %208 = trunc i64 %204 to i32
  store atomic volatile i32 %208, i32* %207 monotonic, align 4
  %209 = and i64 %204, 1
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %234, label %211

211:                                              ; preds = %200
  %212 = and i64 %203, -262144
  %213 = or i64 %212, 8
  %214 = inttoptr i64 %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = and i64 %215, 262144
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %222, label %218

218:                                              ; preds = %211
  %219 = or i64 %212, 16
  %220 = inttoptr i64 %219 to %"class.v8::internal::Heap"**
  %221 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %220, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %221, i64 %203, i64 %206, i64 %204) #13
  br label %222

222:                                              ; preds = %218, %211
  %223 = and i64 %204, -262144
  %224 = or i64 %223, 8
  %225 = inttoptr i64 %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = and i64 %226, 24
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %234, label %229

229:                                              ; preds = %222
  %230 = load i64, i64* %214, align 8
  %231 = and i64 %230, 24
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %229
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %203, i64 %206, i64 %204) #13
  br label %234

234:                                              ; preds = %233, %229, %222, %200, %165
  %235 = load i64, i64* %1, align 8
  %236 = load i64*, i64** %62, align 8
  %237 = icmp eq i64* %236, null
  br i1 %237, label %238, label %247

238:                                              ; preds = %234
  %239 = and i64 %235, -4294967296
  %240 = add i64 %235, 11
  %241 = inttoptr i64 %240 to i32*
  %242 = load i32, i32* %241, align 4
  %243 = zext i32 %242 to i64
  %244 = or i64 %239, %243
  %245 = add i64 %244, 43
  %246 = inttoptr i64 %245 to i32*
  store atomic volatile i32 0, i32* %246 monotonic, align 4
  br label %283

247:                                              ; preds = %234
  %248 = load i64, i64* %236, align 8
  %249 = and i64 %235, -4294967296
  %250 = add i64 %235, 11
  %251 = inttoptr i64 %250 to i32*
  %252 = load i32, i32* %251, align 4
  %253 = zext i32 %252 to i64
  %254 = or i64 %249, %253
  %255 = add i64 %254, 43
  %256 = inttoptr i64 %255 to i32*
  %257 = trunc i64 %248 to i32
  store atomic volatile i32 %257, i32* %256 monotonic, align 4
  %258 = and i64 %248, 1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %283, label %260

260:                                              ; preds = %247
  %261 = and i64 %254, -262144
  %262 = or i64 %261, 8
  %263 = inttoptr i64 %262 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = and i64 %264, 262144
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %271, label %267

267:                                              ; preds = %260
  %268 = or i64 %261, 16
  %269 = inttoptr i64 %268 to %"class.v8::internal::Heap"**
  %270 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %269, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %270, i64 %254, i64 %255, i64 %248) #13
  br label %271

271:                                              ; preds = %267, %260
  %272 = and i64 %248, -262144
  %273 = or i64 %272, 8
  %274 = inttoptr i64 %273 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = and i64 %275, 24
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %283, label %278

278:                                              ; preds = %271
  %279 = load i64, i64* %263, align 8
  %280 = and i64 %279, 24
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %278
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %254, i64 %255, i64 %248) #13
  br label %283

283:                                              ; preds = %238, %247, %271, %278, %282
  %284 = load i64, i64* %129, align 8
  %285 = add i64 %284, 35
  %286 = inttoptr i64 %285 to i32*
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = ashr i32 %287, 1
  %289 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %8, i64 0, i32 10
  %290 = load i32, i32* %289, align 4
  %291 = icmp sgt i32 %290, %288
  br i1 %291, label %292, label %295

292:                                              ; preds = %283
  %293 = shl i32 %290, 1
  store atomic volatile i32 %293, i32* %286 monotonic, align 4
  %294 = load i64, i64* %129, align 8
  br label %295

295:                                              ; preds = %292, %283
  %296 = phi i64 [ %294, %292 ], [ %284, %283 ]
  %297 = load i32, i32* %11, align 4
  %298 = shl i32 %297, 1
  %299 = add i64 %296, 51
  %300 = inttoptr i64 %299 to i32*
  store atomic volatile i32 %298, i32* %300 monotonic, align 4
  %301 = load i8, i8* @_ZN2v88internal25FLAG_trace_regexp_tier_upE, align 1, !range !3
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %349, label %303

303:                                              ; preds = %295
  %304 = load i64, i64* %1, align 8
  %305 = inttoptr i64 %304 to i8*
  %306 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %306) #13
  %307 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %304, i64* %307, align 8
  %308 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %13, i64 0, i32 0
  %309 = call zeroext i1 @_ZN2v88internal8JSRegExp21ShouldProduceBytecodeEv(%"class.v8::internal::JSRegExp"* nonnull %308) #13
  %310 = select i1 %309, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0)
  %311 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %311) #13
  %312 = load i64, i64* %1, align 8
  %313 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %312, i64* %313, align 8
  %314 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %14, i64 0, i32 0
  %315 = call zeroext i1 @_ZN2v88internal8JSRegExp21ShouldProduceBytecodeEv(%"class.v8::internal::JSRegExp"* nonnull %314) #13
  %316 = bitcast %"class.v8::internal::Code"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %316) #13
  %317 = load i64, i64* %129, align 8
  %318 = and i64 %317, -4294967296
  br i1 %315, label %319, label %332

319:                                              ; preds = %303
  %320 = select i1 %3, i64 27, i64 31
  %321 = add i64 %317, %320
  %322 = inttoptr i64 %321 to i32*
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = zext i32 %323 to i64
  %325 = or i64 %318, %324
  %326 = add i64 %325, 3
  %327 = inttoptr i64 %326 to i32*
  %328 = load i32, i32* %327, align 4
  %329 = ashr i32 %328, 1
  %330 = add nsw i32 %329, 11
  %331 = and i32 %330, -4
  br label %347

332:                                              ; preds = %303
  %333 = select i1 %3, i64 19, i64 23
  %334 = add i64 %317, %333
  %335 = inttoptr i64 %334 to i32*
  %336 = load atomic i32, i32* %335 monotonic, align 4
  %337 = zext i32 %336 to i64
  %338 = or i64 %318, %337
  %339 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %338, i64* %339, align 8
  %340 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %15, i64 0, i32 0
  %341 = add i64 %338, -1
  %342 = inttoptr i64 %341 to i32*
  %343 = load atomic i32, i32* %342 monotonic, align 4
  %344 = zext i32 %343 to i64
  %345 = or i64 %318, %344
  %346 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %340, i64 %345) #13
  br label %347

347:                                              ; preds = %332, %319
  %348 = phi i32 [ %331, %319 ], [ %346, %332 ]
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i8* %305, i8* %310, i32 %348) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %316) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %311) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %306) #13
  br label %349

349:                                              ; preds = %347, %295, %98
  %350 = phi i1 [ false, %98 ], [ true, %295 ], [ true, %347 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #13
  br label %351

351:                                              ; preds = %349, %78
  %352 = phi i1 [ %350, %349 ], [ false, %78 ]
  %353 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %353, align 8
  %354 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %9, i64 0, i32 0, i32 1
  %355 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %354, align 8
  %356 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %9, i64 0, i32 0, i32 2
  %357 = bitcast %"class.v8::internal::Relocatable"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %355, i64 0, i32 91
  %360 = bitcast %"class.v8::internal::Relocatable"** %359 to i64*
  store i64 %358, i64* %360, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %64) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %59) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %361 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %7, i64 0, i32 0, i32 4
  %362 = load i32, i32* %361, align 8
  %363 = icmp eq i32 %362, 2
  br i1 %363, label %367, label %364

364:                                              ; preds = %351
  %365 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %7, i64 0, i32 0, i32 1
  %366 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %365, align 8
  call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %366) #13
  br label %367

367:                                              ; preds = %351, %364
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #13
  call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %16) #13
  ret i1 %352
}

declare zeroext i1 @_ZN2v88internal8JSRegExp21ShouldProduceBytecodeEv(%"class.v8::internal::JSRegExp"*) local_unnamed_addr #2

declare i32 @_ZNK2v88internal8JSRegExp14BacktrackLimitEv(%"class.v8::internal::JSRegExp"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10RegExpImpl7CompileEPNS0_7IsolateEPNS0_4ZoneEPNS0_17RegExpCompileDataENS_4base5FlagsINS0_8JSRegExp4FlagEiEENS0_6HandleINS0_6StringEEESF_bRj(%"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"struct.v8::internal::RegExpCompileData"*, i32, i64*, i64*, i1 zeroext, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.v8::internal::String", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.v8::internal::StringShape", align 4
  %12 = alloca %"class.v8::internal::RegExpCompiler", align 8
  %13 = alloca %"struct.v8::internal::RegExpCompiler::CompilationResult", align 8
  %14 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %2, i64 0, i32 9
  %15 = load i32, i32* %14, align 8
  %16 = shl i32 %15, 1
  %17 = add i32 %16, 2
  %18 = icmp sgt i32 %17, 65536
  br i1 %18, label %19, label %21

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %2, i64 0, i32 7
  store i32 3, i32* %20, align 8
  br label %243

21:                                               ; preds = %8
  %22 = bitcast %"class.v8::internal::RegExpCompiler"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1104, i8* nonnull %22) #13
  call void @_ZN2v88internal14RegExpCompilerC1EPNS0_7IsolateEPNS0_4ZoneEib(%"class.v8::internal::RegExpCompiler"* nonnull %12, %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Zone"* %1, i32 %15, i1 zeroext %6) #13
  %23 = getelementptr inbounds %"class.v8::internal::RegExpCompiler", %"class.v8::internal::RegExpCompiler"* %12, i64 0, i32 10
  %24 = load i8, i8* %23, align 1, !range !3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  %28 = load i64, i64* %4, align 8
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, 20480
  br i1 %32, label %40, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 158
  %35 = load i64, i64* %34, align 8
  %36 = icmp ugt i64 %35, 1048576
  br i1 %36, label %37, label %40

37:                                               ; preds = %33
  %38 = call i64 @_ZN2v88internal4Heap25CommittedMemoryExecutableEv(%"class.v8::internal::Heap"* %27) #13
  %39 = icmp ugt i64 %38, 16777216
  br label %40

40:                                               ; preds = %26, %33, %37
  %41 = phi i1 [ true, %26 ], [ false, %33 ], [ %39, %37 ]
  %42 = xor i1 %41, true
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %23, align 1
  br label %44

44:                                               ; preds = %21, %40
  %45 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %5, i8 zeroext 0)
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %49, -128
  %51 = sdiv i32 %50, 2
  %52 = icmp sgt i32 %51, 0
  %53 = select i1 %52, i32 %51, i32 0
  %54 = icmp slt i32 %53, %49
  br i1 %54, label %55, label %62

55:                                               ; preds = %44
  %56 = bitcast i32* %10 to i8*
  %57 = bitcast %"class.v8::internal::StringShape"* %11 to i8*
  %58 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %11, i64 0, i32 0
  %59 = bitcast %"class.v8::internal::String"* %9 to i8*
  %60 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.v8::internal::RegExpCompiler", %"class.v8::internal::RegExpCompiler"* %12, i64 0, i32 13, i32 1
  br label %68

62:                                               ; preds = %68, %44
  %63 = call %"class.v8::internal::RegExpNode"* @_ZN2v88internal14RegExpCompiler16PreprocessRegExpEPNS0_17RegExpCompileDataENS_4base5FlagsINS0_8JSRegExp4FlagEiEEb(%"class.v8::internal::RegExpCompiler"* nonnull %12, %"struct.v8::internal::RegExpCompileData"* %2, i32 %3, i1 zeroext %6) #13
  %64 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %2, i64 0, i32 1
  store %"class.v8::internal::RegExpNode"* %63, %"class.v8::internal::RegExpNode"** %64, align 8
  %65 = call i32 @_ZN2v88internal13AnalyzeRegExpEPNS0_7IsolateEbPNS0_10RegExpNodeE(%"class.v8::internal::Isolate"* %0, i1 zeroext %6, %"class.v8::internal::RegExpNode"* %63) #13
  %66 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %2, i64 0, i32 7
  store i32 %65, i32* %66, align 8
  %67 = icmp eq i32 %65, 0
  br i1 %67, label %99, label %241

68:                                               ; preds = %55, %68
  %69 = phi i64 [ %46, %55 ], [ %92, %68 ]
  %70 = phi i32 [ 0, %55 ], [ %91, %68 ]
  %71 = phi i32 [ %53, %55 ], [ %90, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #13
  store i32 %71, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #13
  %72 = and i64 %69, -4294967296
  %73 = add i64 %69, -1
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 acquire, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %72, %76
  %78 = add i64 %77, 7
  %79 = inttoptr i64 %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = zext i16 %80 to i32
  store i32 %81, i32* %58, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #13
  store i64 %69, i64* %60, align 8
  %82 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %11, %"class.v8::internal::String"* nonnull dereferenceable(8) %9, i32* nonnull dereferenceable(4) %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #13
  %83 = and i16 %82, 127
  %84 = zext i16 %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::RegExpCompiler", %"class.v8::internal::RegExpCompiler"* %12, i64 0, i32 13, i32 0, i64 %84, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %85, align 4
  %88 = load i32, i32* %61, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %61, align 4
  %90 = add nuw nsw i32 %71, 1
  %91 = add nuw nsw i32 %70, 1
  %92 = load i64, i64* %45, align 8
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = icmp slt i32 %90, %95
  %97 = icmp ult i32 %91, 128
  %98 = and i1 %97, %96
  br i1 %98, label %68, label %62

99:                                               ; preds = %62
  %100 = load i8, i8* @_ZN2v88internal23FLAG_trace_regexp_graphE, align 1, !range !3
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = load %"class.v8::internal::RegExpNode"*, %"class.v8::internal::RegExpNode"** %64, align 8
  call void @_ZN2v88internal10DotPrinter8DotPrintEPKcPNS0_10RegExpNodeE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), %"class.v8::internal::RegExpNode"* %103) #13
  br label %104

104:                                              ; preds = %99, %102
  %105 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %2, i64 0, i32 11
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %115

108:                                              ; preds = %104
  %109 = select i1 %6, i32 1, i32 2
  %110 = load i32, i32* %14, align 8
  %111 = shl i32 %110, 1
  %112 = add i32 %111, 2
  %113 = call i8* @_Znwm(i64 584) #16
  %114 = bitcast i8* %113 to %"class.v8::internal::RegExpMacroAssemblerX64"*
  call void @_ZN2v88internal23RegExpMacroAssemblerX64C1EPNS0_7IsolateEPNS0_4ZoneENS0_26NativeRegExpMacroAssembler4ModeEi(%"class.v8::internal::RegExpMacroAssemblerX64"* nonnull %114, %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Zone"* %1, i32 %109, i32 %112) #13
  br label %118

115:                                              ; preds = %104
  %116 = call i8* @_Znwm(i64 144) #16
  %117 = bitcast i8* %116 to %"class.v8::internal::RegExpBytecodeGenerator"*
  call void @_ZN2v88internal23RegExpBytecodeGeneratorC1EPNS0_7IsolateEPNS0_4ZoneE(%"class.v8::internal::RegExpBytecodeGenerator"* nonnull %117, %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Zone"* %1) #13
  br label %118

118:                                              ; preds = %115, %108
  %119 = phi i8* [ %113, %108 ], [ %116, %115 ]
  %120 = bitcast i8* %119 to %"class.v8::internal::RegExpMacroAssembler"*
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  %122 = load i64, i64* %4, align 8
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = icmp sgt i32 %125, 20480
  br i1 %126, label %135, label %127

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 158
  %129 = load i64, i64* %128, align 8
  %130 = icmp ugt i64 %129, 1048576
  br i1 %130, label %131, label %135

131:                                              ; preds = %127
  %132 = call i64 @_ZN2v88internal4Heap25CommittedMemoryExecutableEv(%"class.v8::internal::Heap"* %121) #13
  %133 = icmp ugt i64 %132, 16777216
  %134 = zext i1 %133 to i8
  br label %135

135:                                              ; preds = %118, %127, %131
  %136 = phi i8 [ 1, %118 ], [ 0, %127 ], [ %134, %131 ]
  %137 = getelementptr inbounds i8, i8* %119, i64 8
  store i8 %136, i8* %137, align 8
  %138 = load i8, i8* @_ZN2v88internal62FLAG_enable_experimental_regexp_engine_on_excessive_backtracksE, align 1, !range !3
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %155, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %2, i64 0, i32 0
  %142 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %141, align 8
  %143 = load i32, i32* %14, align 8
  %144 = call zeroext i1 @_ZN2v88internal18ExperimentalRegExp12CanBeHandledEPNS0_10RegExpTreeENS_4base5FlagsINS0_8JSRegExp4FlagEiEEi(%"class.v8::internal::RegExpTree"* %142, i32 %3, i32 %143) #13
  br i1 %144, label %145, label %155

145:                                              ; preds = %140
  %146 = load i32, i32* %7, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %152, label %148

148:                                              ; preds = %145
  %149 = load i32, i32* @_ZN2v88internal38FLAG_regexp_backtracks_before_fallbackE, align 4
  %150 = icmp ult i32 %149, %146
  %151 = select i1 %150, i32* @_ZN2v88internal38FLAG_regexp_backtracks_before_fallbackE, i32* %7
  br label %152

152:                                              ; preds = %145, %148
  %153 = phi i32* [ %151, %148 ], [ @_ZN2v88internal38FLAG_regexp_backtracks_before_fallbackE, %145 ]
  %154 = load i32, i32* %153, align 4
  store i32 %154, i32* %7, align 4
  br label %157

155:                                              ; preds = %135, %140
  %156 = load i32, i32* %7, align 4
  br label %157

157:                                              ; preds = %155, %152
  %158 = phi i32 [ %156, %155 ], [ %154, %152 ]
  %159 = phi i8 [ 0, %155 ], [ 1, %152 ]
  %160 = getelementptr inbounds i8, i8* %119, i64 12
  %161 = bitcast i8* %160 to i32*
  store i32 %158, i32* %161, align 4
  %162 = getelementptr inbounds i8, i8* %119, i64 16
  store i8 %159, i8* %162, align 8
  %163 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %2, i64 0, i32 0
  %164 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %163, align 8
  %165 = bitcast %"class.v8::internal::RegExpTree"* %164 to i1 (%"class.v8::internal::RegExpTree"*)***
  %166 = load i1 (%"class.v8::internal::RegExpTree"*)**, i1 (%"class.v8::internal::RegExpTree"*)*** %165, align 8
  %167 = getelementptr inbounds i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %166, i64 6
  %168 = load i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %167, align 8
  %169 = call zeroext i1 %168(%"class.v8::internal::RegExpTree"* %164) #13
  %170 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %163, align 8
  %171 = bitcast %"class.v8::internal::RegExpTree"* %170 to i1 (%"class.v8::internal::RegExpTree"*)***
  %172 = load i1 (%"class.v8::internal::RegExpTree"*)**, i1 (%"class.v8::internal::RegExpTree"*)*** %171, align 8
  %173 = getelementptr inbounds i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %172, i64 5
  %174 = load i1 (%"class.v8::internal::RegExpTree"*)*, i1 (%"class.v8::internal::RegExpTree"*)** %173, align 8
  %175 = call zeroext i1 %174(%"class.v8::internal::RegExpTree"* %170) #13
  %176 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %163, align 8
  %177 = bitcast %"class.v8::internal::RegExpTree"* %176 to i32 (%"class.v8::internal::RegExpTree"*)***
  %178 = load i32 (%"class.v8::internal::RegExpTree"*)**, i32 (%"class.v8::internal::RegExpTree"*)*** %177, align 8
  %179 = getelementptr inbounds i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %178, i64 8
  %180 = load i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %179, align 8
  %181 = call i32 %180(%"class.v8::internal::RegExpTree"* %176) #13
  %182 = xor i1 %169, true
  %183 = or i1 %175, %182
  br i1 %183, label %194, label %184

184:                                              ; preds = %157
  %185 = and i32 %3, 8
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %181, 1024
  %188 = and i1 %186, %187
  br i1 %188, label %189, label %194

189:                                              ; preds = %184
  %190 = bitcast i8* %119 to void (%"class.v8::internal::RegExpMacroAssembler"*, i32)***
  %191 = load void (%"class.v8::internal::RegExpMacroAssembler"*, i32)**, void (%"class.v8::internal::RegExpMacroAssembler"*, i32)*** %190, align 8
  %192 = getelementptr inbounds void (%"class.v8::internal::RegExpMacroAssembler"*, i32)*, void (%"class.v8::internal::RegExpMacroAssembler"*, i32)** %191, i64 42
  %193 = load void (%"class.v8::internal::RegExpMacroAssembler"*, i32)*, void (%"class.v8::internal::RegExpMacroAssembler"*, i32)** %192, align 8
  call void %193(%"class.v8::internal::RegExpMacroAssembler"* %120, i32 %181) #13
  br label %194

194:                                              ; preds = %157, %184, %189
  %195 = and i32 %3, 1
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %213, label %197

197:                                              ; preds = %194
  %198 = load %"class.v8::internal::RegExpTree"*, %"class.v8::internal::RegExpTree"** %163, align 8
  %199 = bitcast %"class.v8::internal::RegExpTree"* %198 to i32 (%"class.v8::internal::RegExpTree"*)***
  %200 = load i32 (%"class.v8::internal::RegExpTree"*)**, i32 (%"class.v8::internal::RegExpTree"*)*** %199, align 8
  %201 = getelementptr inbounds i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %200, i64 7
  %202 = load i32 (%"class.v8::internal::RegExpTree"*)*, i32 (%"class.v8::internal::RegExpTree"*)** %201, align 8
  %203 = call i32 %202(%"class.v8::internal::RegExpTree"* %198) #13
  %204 = icmp sgt i32 %203, 0
  br i1 %204, label %209, label %205

205:                                              ; preds = %197
  %206 = and i32 %3, 16
  %207 = icmp eq i32 %206, 0
  %208 = select i1 %207, i32 2, i32 3
  br label %209

209:                                              ; preds = %205, %197
  %210 = phi i32 [ 1, %197 ], [ %208, %205 ]
  %211 = getelementptr inbounds i8, i8* %119, i64 20
  %212 = bitcast i8* %211 to i32*
  store i32 %210, i32* %212, align 4
  br label %213

213:                                              ; preds = %194, %209
  %214 = bitcast %"struct.v8::internal::RegExpCompiler::CompilationResult"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #13
  %215 = load %"class.v8::internal::RegExpNode"*, %"class.v8::internal::RegExpNode"** %64, align 8
  %216 = load i32, i32* %14, align 8
  %217 = ptrtoint i64* %4 to i64
  call void @_ZN2v88internal14RegExpCompiler8AssembleEPNS0_7IsolateEPNS0_20RegExpMacroAssemblerEPNS0_10RegExpNodeEiNS0_6HandleINS0_6StringEEE(%"struct.v8::internal::RegExpCompiler::CompilationResult"* nonnull sret %13, %"class.v8::internal::RegExpCompiler"* nonnull %12, %"class.v8::internal::Isolate"* %0, %"class.v8::internal::RegExpMacroAssembler"* %120, %"class.v8::internal::RegExpNode"* %215, i32 %216, i64 %217) #13
  %218 = getelementptr inbounds %"struct.v8::internal::RegExpCompiler::CompilationResult", %"struct.v8::internal::RegExpCompiler::CompilationResult"* %13, i64 0, i32 0
  %219 = load i32, i32* %218, align 8
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %228, label %221

221:                                              ; preds = %213
  %222 = load i8, i8* @_ZN2v88internal36FLAG_correctness_fuzzer_suppressionsE, align 1, !range !3
  %223 = icmp ne i8 %222, 0
  %224 = icmp eq i32 %219, 1
  %225 = and i1 %224, %223
  br i1 %225, label %226, label %227

226:                                              ; preds = %221
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)) #15
  unreachable

227:                                              ; preds = %221
  store i32 %219, i32* %66, align 8
  br label %228

228:                                              ; preds = %213, %227
  %229 = getelementptr inbounds %"struct.v8::internal::RegExpCompiler::CompilationResult", %"struct.v8::internal::RegExpCompiler::CompilationResult"* %13, i64 0, i32 2
  %230 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %2, i64 0, i32 2
  %231 = bitcast %"class.v8::internal::Handle.1133"* %229 to i64*
  %232 = bitcast %"class.v8::internal::Handle.1133"* %230 to i64*
  %233 = load i64, i64* %231, align 8
  store i64 %233, i64* %232, align 8
  %234 = getelementptr inbounds %"struct.v8::internal::RegExpCompiler::CompilationResult", %"struct.v8::internal::RegExpCompiler::CompilationResult"* %13, i64 0, i32 3
  %235 = load i32, i32* %234, align 8
  %236 = getelementptr inbounds %"struct.v8::internal::RegExpCompileData", %"struct.v8::internal::RegExpCompileData"* %2, i64 0, i32 10
  store i32 %235, i32* %236, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #13
  %237 = bitcast i8* %119 to void (%"class.v8::internal::RegExpMacroAssembler"*)***
  %238 = load void (%"class.v8::internal::RegExpMacroAssembler"*)**, void (%"class.v8::internal::RegExpMacroAssembler"*)*** %237, align 8
  %239 = getelementptr inbounds void (%"class.v8::internal::RegExpMacroAssembler"*)*, void (%"class.v8::internal::RegExpMacroAssembler"*)** %238, i64 1
  %240 = load void (%"class.v8::internal::RegExpMacroAssembler"*)*, void (%"class.v8::internal::RegExpMacroAssembler"*)** %239, align 8
  call void %240(%"class.v8::internal::RegExpMacroAssembler"* nonnull %120) #13
  br label %241

241:                                              ; preds = %228, %62
  %242 = phi i1 [ false, %62 ], [ %220, %228 ]
  call void @llvm.lifetime.end.p0i8(i64 1104, i8* nonnull %22) #13
  br label %243

243:                                              ; preds = %241, %19
  %244 = phi i1 [ false, %19 ], [ %242, %241 ]
  ret i1 %244
}

declare i64* @_ZN2v88internal8Builtins14builtin_handleEi(%"class.v8::internal::Builtins"*, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2v88internal10RegExpImpl24IrregexpMaxRegisterCountENS0_10FixedArrayE(i64) local_unnamed_addr #6 align 2 {
  %2 = add i64 %0, 35
  %3 = inttoptr i64 %2 to i32*
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = ashr i32 %4, 1
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal10RegExpImpl27SetIrregexpMaxRegisterCountENS0_10FixedArrayEi(i64, i32) local_unnamed_addr #6 align 2 {
  %3 = shl i32 %1, 1
  %4 = add i64 %0, 35
  %5 = inttoptr i64 %4 to i32*
  store atomic volatile i32 %3, i32* %5 monotonic, align 4
  ret void
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10RegExpImpl16IrregexpByteCodeENS0_10FixedArrayEb(i64, i1 zeroext) local_unnamed_addr #6 align 2 {
  %3 = and i64 %0, -4294967296
  %4 = select i1 %1, i64 27, i64 31
  %5 = add i64 %4, %0
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %3, %8
  ret i64 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10RegExpImpl18IrregexpNativeCodeENS0_10FixedArrayEb(i64, i1 zeroext) local_unnamed_addr #6 align 2 {
  %3 = and i64 %0, -4294967296
  %4 = select i1 %1, i64 19, i64 23
  %5 = add i64 %4, %0
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %3, %8
  ret i64 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2v88internal10RegExpImpl24IrregexpNumberOfCapturesENS0_10FixedArrayE(i64) local_unnamed_addr #6 align 2 {
  %2 = add i64 %0, 39
  %3 = inttoptr i64 %2 to i32*
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = ashr i32 %4, 1
  ret i32 %5
}

declare void @_ZN2v88internal7Factory21SetRegExpIrregexpDataENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEENS_4base5FlagsINS3_4FlagEiEEij(%"class.v8::internal::Factory"*, i64*, i64*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal10RegExpImpl15IrregexpExecRawEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiPii(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i32*, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %12 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %13 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %14 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %15 = load i64, i64* %2, align 8
  br label %16

16:                                               ; preds = %29, %6
  %17 = phi i64 [ %15, %6 ], [ %34, %29 ]
  %18 = and i64 %17, -4294967296
  %19 = add i64 %17, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = and i16 %26, 9
  %28 = zext i16 %27 to i32
  switch i32 %28, label %29 [
    i32 8, label %36
    i32 0, label %35
  ]

29:                                               ; preds = %16
  %30 = add i64 %17, 11
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %18, %33
  br label %16

35:                                               ; preds = %16
  br label %36

36:                                               ; preds = %16, %35
  %37 = phi i8 [ 0, %35 ], [ 1, %16 ]
  %38 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  %39 = load i64, i64* %1, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %13, i64 0, i32 0
  %42 = call zeroext i1 @_ZN2v88internal8JSRegExp21ShouldProduceBytecodeEv(%"class.v8::internal::JSRegExp"* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  br i1 %42, label %54, label %43

43:                                               ; preds = %36
  %44 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %7 to i8*
  %45 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %7, i64 0, i32 0
  %47 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %8 to i8*
  %48 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %8, i64 0, i32 0
  %50 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %9 to i8*
  %51 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %9, i64 0, i32 0
  %53 = bitcast i64* %1 to i8**
  br label %68

54:                                               ; preds = %36
  %55 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %14 to i8*
  %56 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %14, i64 0, i32 0
  %58 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %10 to i8*
  %59 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %10, i64 0, i32 0
  %61 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %11 to i8*
  %62 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %11, i64 0, i32 0
  %64 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %12 to i8*
  %65 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %12, i64 0, i32 0
  %67 = bitcast i64* %1 to i8**
  br label %133

68:                                               ; preds = %131, %43
  %69 = phi i8 [ %37, %43 ], [ %132, %131 ]
  %70 = icmp ne i8 %69, 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #13
  %71 = load i64, i64* %1, align 8
  store i64 %71, i64* %45, align 8
  %72 = call i64 @_ZNK2v88internal8JSRegExp4CodeEb(%"class.v8::internal::JSRegExp"* nonnull %46, i1 zeroext %70) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  %73 = load i64, i64* %1, align 8
  store i64 %73, i64* %48, align 8
  %74 = call i64 @_ZNK2v88internal8JSRegExp8BytecodeEb(%"class.v8::internal::JSRegExp"* nonnull %49, i1 zeroext %70) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  %75 = trunc i64 %72 to i32
  %76 = icmp eq i32 %75, -2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #13
  %77 = load i64, i64* %1, align 8
  store i64 %77, i64* %51, align 8
  %78 = call zeroext i1 @_ZN2v88internal8JSRegExp15MarkedForTierUpEv(%"class.v8::internal::JSRegExp"* nonnull %52) #13
  %79 = xor i1 %78, true
  %80 = and i64 %74, 1
  %81 = icmp eq i64 %80, 0
  %82 = or i1 %81, %79
  br i1 %82, label %83, label %84

83:                                               ; preds = %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #13
  br label %101

84:                                               ; preds = %68
  %85 = and i64 %74, -4294967296
  %86 = add i64 %74, -1
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %85, %89
  %91 = add i64 %90, 7
  %92 = inttoptr i64 %91 to i16*
  %93 = load atomic i16, i16* %92 monotonic, align 2
  %94 = icmp eq i16 %93, 132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #13
  %95 = load i8, i8* @_ZN2v88internal25FLAG_trace_regexp_tier_upE, align 1, !range !3
  %96 = icmp eq i8 %95, 0
  %97 = xor i1 %94, true
  %98 = or i1 %96, %97
  br i1 %98, label %101, label %99

99:                                               ; preds = %84
  %100 = load i8*, i8** %53, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0), i8* %100) #13
  br label %101

101:                                              ; preds = %99, %84, %83
  %102 = phi i1 [ false, %83 ], [ %94, %84 ], [ %94, %99 ]
  %103 = or i1 %76, %102
  br i1 %103, label %104, label %106

104:                                              ; preds = %101
  %105 = call zeroext i1 @_ZN2v88internal10RegExpImpl15CompileIrregexpEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEb(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i1 zeroext %70) #13
  br label %106

106:                                              ; preds = %101, %104
  %107 = call i32 @_ZN2v88internal26NativeRegExpMacroAssembler5MatchENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPiiiPNS0_7IsolateE(i64* %1, i64* %2, i32* %4, i32 %5, i32 %3, %"class.v8::internal::Isolate"* %0) #13
  %108 = icmp eq i32 %107, -2
  br i1 %108, label %109, label %200

109:                                              ; preds = %106
  %110 = load i64, i64* %2, align 8
  br label %111

111:                                              ; preds = %124, %109
  %112 = phi i64 [ %110, %109 ], [ %129, %124 ]
  %113 = and i64 %112, -4294967296
  %114 = add i64 %112, -1
  %115 = inttoptr i64 %114 to i32*
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %113, %117
  %119 = add i64 %118, 7
  %120 = inttoptr i64 %119 to i16*
  %121 = load atomic i16, i16* %120 monotonic, align 2
  %122 = and i16 %121, 9
  %123 = zext i16 %122 to i32
  switch i32 %123, label %124 [
    i32 8, label %130
    i32 0, label %131
  ]

124:                                              ; preds = %111
  %125 = add i64 %112, 11
  %126 = inttoptr i64 %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %113, %128
  br label %111

130:                                              ; preds = %111
  br label %131

131:                                              ; preds = %111, %130
  %132 = phi i8 [ 1, %130 ], [ 0, %111 ]
  br label %68

133:                                              ; preds = %135, %54
  %134 = call i32 @_ZN2v88internal19IrregexpInterpreter23MatchForCallFromRuntimeEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEPiii(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i32* %4, i32 %5, i32 %3) #13
  switch i32 %134, label %135 [
    i32 1, label %200
    i32 -1, label %200
    i32 0, label %200
    i32 -3, label %200
    i32 -2, label %136
  ]

135:                                              ; preds = %133, %195, %198
  br label %133

136:                                              ; preds = %133
  %137 = load i8, i8* @_ZN2v88internal19FLAG_regexp_tier_upE, align 1, !range !3
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %136
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  %140 = load i64, i64* %1, align 8
  store i64 %140, i64* %56, align 8
  call void @_ZN2v88internal8JSRegExp19ResetLastTierUpTickEv(%"class.v8::internal::JSRegExp"* nonnull %57) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %141

141:                                              ; preds = %136, %139
  %142 = load i64, i64* %2, align 8
  br label %143

143:                                              ; preds = %156, %141
  %144 = phi i64 [ %142, %141 ], [ %161, %156 ]
  %145 = and i64 %144, -4294967296
  %146 = add i64 %144, -1
  %147 = inttoptr i64 %146 to i32*
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = zext i32 %148 to i64
  %150 = or i64 %145, %149
  %151 = add i64 %150, 7
  %152 = inttoptr i64 %151 to i16*
  %153 = load atomic i16, i16* %152 monotonic, align 2
  %154 = and i16 %153, 9
  %155 = zext i16 %154 to i32
  switch i32 %155, label %156 [
    i32 8, label %163
    i32 0, label %162
  ]

156:                                              ; preds = %143
  %157 = add i64 %144, 11
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = zext i32 %159 to i64
  %161 = or i64 %145, %160
  br label %143

162:                                              ; preds = %143
  br label %163

163:                                              ; preds = %143, %162
  %164 = phi i1 [ false, %162 ], [ true, %143 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #13
  %165 = load i64, i64* %1, align 8
  store i64 %165, i64* %59, align 8
  %166 = call i64 @_ZNK2v88internal8JSRegExp4CodeEb(%"class.v8::internal::JSRegExp"* nonnull %60, i1 zeroext %164) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #13
  %167 = load i64, i64* %1, align 8
  store i64 %167, i64* %62, align 8
  %168 = call i64 @_ZNK2v88internal8JSRegExp8BytecodeEb(%"class.v8::internal::JSRegExp"* nonnull %63, i1 zeroext %164) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #13
  %169 = trunc i64 %166 to i32
  %170 = icmp eq i32 %169, -2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #13
  %171 = load i64, i64* %1, align 8
  store i64 %171, i64* %65, align 8
  %172 = call zeroext i1 @_ZN2v88internal8JSRegExp15MarkedForTierUpEv(%"class.v8::internal::JSRegExp"* nonnull %66) #13
  %173 = xor i1 %172, true
  %174 = and i64 %168, 1
  %175 = icmp eq i64 %174, 0
  %176 = or i1 %175, %173
  br i1 %176, label %177, label %178

177:                                              ; preds = %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #13
  br label %195

178:                                              ; preds = %163
  %179 = and i64 %168, -4294967296
  %180 = add i64 %168, -1
  %181 = inttoptr i64 %180 to i32*
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = zext i32 %182 to i64
  %184 = or i64 %179, %183
  %185 = add i64 %184, 7
  %186 = inttoptr i64 %185 to i16*
  %187 = load atomic i16, i16* %186 monotonic, align 2
  %188 = icmp eq i16 %187, 132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #13
  %189 = load i8, i8* @_ZN2v88internal25FLAG_trace_regexp_tier_upE, align 1, !range !3
  %190 = icmp eq i8 %189, 0
  %191 = xor i1 %188, true
  %192 = or i1 %190, %191
  br i1 %192, label %195, label %193

193:                                              ; preds = %178
  %194 = load i8*, i8** %67, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0), i8* %194) #13
  br label %195

195:                                              ; preds = %193, %178, %177
  %196 = phi i1 [ false, %177 ], [ %188, %178 ], [ %188, %193 ]
  %197 = or i1 %170, %196
  br i1 %197, label %198, label %135

198:                                              ; preds = %195
  %199 = call zeroext i1 @_ZN2v88internal10RegExpImpl15CompileIrregexpEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEb(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i1 zeroext %164) #13
  br label %135

200:                                              ; preds = %106, %133, %133, %133, %133
  %201 = phi i32 [ %134, %133 ], [ %134, %133 ], [ %134, %133 ], [ %134, %133 ], [ %107, %106 ]
  ret i32 %201
}

declare i32 @_ZN2v88internal26NativeRegExpMacroAssembler5MatchENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPiiiPNS0_7IsolateE(i64*, i64*, i32*, i32, i32, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i32 @_ZN2v88internal19IrregexpInterpreter23MatchForCallFromRuntimeEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEPiii(%"class.v8::internal::Isolate"*, i64*, i64*, i32*, i32, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8JSRegExp19ResetLastTierUpTickEv(%"class.v8::internal::JSRegExp"*) local_unnamed_addr #2

declare void @_ZN2v88internal8JSRegExp21MarkTierUpForNextExecEv(%"class.v8::internal::JSRegExp"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6RegExp16SetLastMatchInfoEPNS0_7IsolateENS0_6HandleINS0_15RegExpMatchInfoEEENS4_INS0_6StringEEEiPi(%"class.v8::internal::Isolate"*, i64*, i64*, i32, i32* readonly) local_unnamed_addr #0 align 2 {
  %6 = tail call i64* @_ZN2v88internal15RegExpMatchInfo15ReserveCapturesEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %3) #13
  %7 = load i64, i64* %6, align 8
  %8 = load i64, i64* %1, align 8
  %9 = trunc i64 %7 to i32
  %10 = trunc i64 %8 to i32
  %11 = icmp eq i32 %9, %10
  br i1 %11, label %116, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, -4294967296
  %16 = add i64 %14, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 19
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %15, %24
  %26 = add i64 %25, 631
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %15, %29
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %32 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %33 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %12
  %35 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %32, i64 %30) #13
  %36 = load i64, i64* %35, align 8
  br label %50

37:                                               ; preds = %12
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %41 = load i64*, i64** %40, align 8
  %42 = icmp eq i64* %39, %41
  br i1 %42, label %43, label %45

43:                                               ; preds = %37
  %44 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #13
  br label %45

45:                                               ; preds = %43, %37
  %46 = phi i64* [ %44, %43 ], [ %39, %37 ]
  %47 = ptrtoint i64* %46 to i64
  %48 = add i64 %47, 8
  %49 = inttoptr i64 %48 to i64*
  store i64* %49, i64** %38, align 8
  store i64 %30, i64* %46, align 8
  br label %50

50:                                               ; preds = %34, %45
  %51 = phi i64 [ %36, %34 ], [ %30, %45 ]
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %10, %52
  br i1 %53, label %54, label %116

54:                                               ; preds = %50
  %55 = load i64, i64* %13, align 8
  %56 = and i64 %55, -4294967296
  %57 = add i64 %55, -1
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %56, %60
  %62 = add i64 %61, 19
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %56, %65
  %67 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %68 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %54
  %70 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %67, i64 %66) #13
  %71 = load i64, i64* %70, align 8
  br label %85

72:                                               ; preds = %54
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %76 = load i64*, i64** %75, align 8
  %77 = icmp eq i64* %74, %76
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #13
  br label %80

80:                                               ; preds = %78, %72
  %81 = phi i64* [ %79, %78 ], [ %74, %72 ]
  %82 = ptrtoint i64* %81 to i64
  %83 = add i64 %82, 8
  %84 = inttoptr i64 %83 to i64*
  store i64* %84, i64** %73, align 8
  store i64 %66, i64* %81, align 8
  br label %85

85:                                               ; preds = %69, %80
  %86 = phi i64 [ %71, %69 ], [ %66, %80 ]
  %87 = load i64, i64* %6, align 8
  %88 = add i64 %86, 631
  %89 = inttoptr i64 %88 to i32*
  %90 = trunc i64 %87 to i32
  store atomic volatile i32 %90, i32* %89 release, align 4
  %91 = and i64 %87, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %116, label %93

93:                                               ; preds = %85
  %94 = and i64 %86, -262144
  %95 = or i64 %94, 8
  %96 = inttoptr i64 %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = and i64 %97, 262144
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %93
  %101 = or i64 %94, 16
  %102 = inttoptr i64 %101 to %"class.v8::internal::Heap"**
  %103 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %102, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %103, i64 %86, i64 %88, i64 %87) #13
  br label %104

104:                                              ; preds = %100, %93
  %105 = and i64 %87, -262144
  %106 = or i64 %105, 8
  %107 = inttoptr i64 %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = and i64 %108, 24
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %116, label %111

111:                                              ; preds = %104
  %112 = load i64, i64* %96, align 8
  %113 = and i64 %112, 24
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %111
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %86, i64 %88, i64 %87) #13
  br label %116

116:                                              ; preds = %5, %115, %111, %104, %85, %50
  %117 = shl i32 %3, 1
  %118 = add i32 %117, 2
  %119 = icmp ne i32* %4, null
  %120 = icmp sgt i32 %118, 0
  %121 = and i1 %119, %120
  br i1 %121, label %122, label %151

122:                                              ; preds = %116
  %123 = sext i32 %118 to i64
  br label %124

124:                                              ; preds = %122, %124
  %125 = phi i64 [ 0, %122 ], [ %149, %124 ]
  %126 = load i64, i64* %6, align 8
  %127 = getelementptr inbounds i32, i32* %4, i64 %125
  %128 = load i32, i32* %127, align 4
  %129 = shl i32 %128, 1
  %130 = trunc i64 %125 to i32
  %131 = shl i32 %130, 2
  %132 = add i32 %131, 12
  %133 = sext i32 %132 to i64
  %134 = add nsw i64 %133, 7
  %135 = add i64 %134, %126
  %136 = inttoptr i64 %135 to i32*
  store atomic volatile i32 %129, i32* %136 monotonic, align 4
  %137 = load i64, i64* %6, align 8
  %138 = or i64 %125, 1
  %139 = getelementptr inbounds i32, i32* %4, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = shl i32 %140, 1
  %142 = trunc i64 %138 to i32
  %143 = shl i32 %142, 2
  %144 = add i32 %143, 12
  %145 = or i32 %144, 7
  %146 = sext i32 %145 to i64
  %147 = add i64 %137, %146
  %148 = inttoptr i64 %147 to i32*
  store atomic volatile i32 %141, i32* %148 monotonic, align 4
  %149 = add nuw nsw i64 %125, 2
  %150 = icmp slt i64 %149, %123
  br i1 %150, label %124, label %151

151:                                              ; preds = %124, %116
  %152 = load i64, i64* %6, align 8
  %153 = load i64, i64* %2, align 8
  %154 = add i64 %152, 11
  %155 = inttoptr i64 %154 to i32*
  %156 = trunc i64 %153 to i32
  store atomic volatile i32 %156, i32* %155 monotonic, align 4
  %157 = and i64 %153, 1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %182, label %159

159:                                              ; preds = %151
  %160 = and i64 %152, -262144
  %161 = or i64 %160, 8
  %162 = inttoptr i64 %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = and i64 %163, 262144
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %170, label %166

166:                                              ; preds = %159
  %167 = or i64 %160, 16
  %168 = inttoptr i64 %167 to %"class.v8::internal::Heap"**
  %169 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %168, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %169, i64 %152, i64 %154, i64 %153) #13
  br label %170

170:                                              ; preds = %166, %159
  %171 = and i64 %153, -262144
  %172 = or i64 %171, 8
  %173 = inttoptr i64 %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = and i64 %174, 24
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %182, label %177

177:                                              ; preds = %170
  %178 = load i64, i64* %162, align 8
  %179 = and i64 %178, 24
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %177
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %152, i64 %154, i64 %153) #13
  br label %182

182:                                              ; preds = %151, %170, %177, %181
  %183 = load i64, i64* %6, align 8
  %184 = load i64, i64* %2, align 8
  %185 = add i64 %183, 15
  %186 = inttoptr i64 %185 to i32*
  %187 = trunc i64 %184 to i32
  store atomic volatile i32 %187, i32* %186 monotonic, align 4
  %188 = and i64 %184, 1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %213, label %190

190:                                              ; preds = %182
  %191 = and i64 %183, -262144
  %192 = or i64 %191, 8
  %193 = inttoptr i64 %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = and i64 %194, 262144
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %201, label %197

197:                                              ; preds = %190
  %198 = or i64 %191, 16
  %199 = inttoptr i64 %198 to %"class.v8::internal::Heap"**
  %200 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %199, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %200, i64 %183, i64 %185, i64 %184) #13
  br label %201

201:                                              ; preds = %197, %190
  %202 = and i64 %184, -262144
  %203 = or i64 %202, 8
  %204 = inttoptr i64 %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = and i64 %205, 24
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %213, label %208

208:                                              ; preds = %201
  %209 = load i64, i64* %193, align 8
  %210 = and i64 %209, 24
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %208
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %183, i64 %185, i64 %184) #13
  br label %213

213:                                              ; preds = %182, %201, %208, %212
  ret i64* %6
}

declare i64* @_ZN2v88internal15RegExpMatchInfo15ReserveCapturesEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6RegExp18DotPrintForTestingEPKcPNS0_10RegExpNodeE(i8*, %"class.v8::internal::RegExpNode"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal10DotPrinter8DotPrintEPKcPNS0_10RegExpNodeE(i8* %0, %"class.v8::internal::RegExpNode"* %1) #13
  ret void
}

declare void @_ZN2v88internal10DotPrinter8DotPrintEPKcPNS0_10RegExpNodeE(i8*, %"class.v8::internal::RegExpNode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6RegExp17CompileForTestingEPNS0_7IsolateEPNS0_4ZoneEPNS0_17RegExpCompileDataENS_4base5FlagsINS0_8JSRegExp4FlagEiEENS0_6HandleINS0_6StringEEESF_b(%"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"struct.v8::internal::RegExpCompileData"*, i32, i64*, i64*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca i32, align 4
  %9 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #13
  store i32 0, i32* %8, align 4
  %10 = call zeroext i1 @_ZN2v88internal10RegExpImpl7CompileEPNS0_7IsolateEPNS0_4ZoneEPNS0_17RegExpCompileDataENS_4base5FlagsINS0_8JSRegExp4FlagEiEENS0_6HandleINS0_6StringEEESF_bRj(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::Zone"* %1, %"struct.v8::internal::RegExpCompileData"* %2, i32 %3, i64* %4, i64* %5, i1 zeroext %6, i32* nonnull dereferenceable(4) %8)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #13
  ret i1 %10
}

declare void @_ZN2v88internal14RegExpCompilerC1EPNS0_7IsolateEPNS0_4ZoneEib(%"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, i32, i1 zeroext) unnamed_addr #2

declare %"class.v8::internal::RegExpNode"* @_ZN2v88internal14RegExpCompiler16PreprocessRegExpEPNS0_17RegExpCompileDataENS_4base5FlagsINS0_8JSRegExp4FlagEiEEb(%"class.v8::internal::RegExpCompiler"*, %"struct.v8::internal::RegExpCompileData"*, i32, i1 zeroext) local_unnamed_addr #2

declare i32 @_ZN2v88internal13AnalyzeRegExpEPNS0_7IsolateEbPNS0_10RegExpNodeE(%"class.v8::internal::Isolate"*, i1 zeroext, %"class.v8::internal::RegExpNode"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN2v88internal23RegExpMacroAssemblerX64C1EPNS0_7IsolateEPNS0_4ZoneENS0_26NativeRegExpMacroAssembler4ModeEi(%"class.v8::internal::RegExpMacroAssemblerX64"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, i32, i32) unnamed_addr #2

declare void @_ZN2v88internal23RegExpBytecodeGeneratorC1EPNS0_7IsolateEPNS0_4ZoneE(%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*) unnamed_addr #2

declare void @_ZN2v88internal14RegExpCompiler8AssembleEPNS0_7IsolateEPNS0_20RegExpMacroAssemblerEPNS0_10RegExpNodeEiNS0_6HandleINS0_6StringEEE(%"struct.v8::internal::RegExpCompiler::CompilationResult"* sret, %"class.v8::internal::RegExpCompiler"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::RegExpMacroAssembler"*, %"class.v8::internal::RegExpNode"*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17RegExpGlobalCacheC2ENS0_6HandleINS0_8JSRegExpEEENS2_INS0_6StringEEEPNS0_7IsolateE(%"class.v8::internal::RegExpGlobalCache"* nocapture, i64*, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", align 8
  %6 = ptrtoint i64* %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 4
  store i32* null, i32** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 5
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 6
  %10 = bitcast %"class.v8::internal::Handle.1128"* %9 to i64*
  store i64 %6, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* %2, i64** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 8
  store %"class.v8::internal::Isolate"* %3, %"class.v8::internal::Isolate"** %12, align 8
  %13 = load i64, i64* %1, align 8
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = and i64 %18, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %45, label %22

22:                                               ; preds = %4
  %23 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %24 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %23, i64 0, i32 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %23, i64 0, i32 1, i64 0
  br label %39

31:                                               ; preds = %25, %22
  %32 = and i64 %19, -262144
  %33 = or i64 %32, 16
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = add i64 %35, -41416
  %37 = inttoptr i64 %36 to %"class.v8::internal::Isolate"*
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %39

39:                                               ; preds = %31, %29
  %40 = phi i64* [ %38, %31 ], [ %30, %29 ]
  %41 = getelementptr inbounds i64, i64* %40, i64 4
  %42 = load i64, i64* %41, align 8
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %17, %43
  br i1 %44, label %50, label %45

45:                                               ; preds = %4, %39
  %46 = add i64 %19, 7
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = ashr i32 %48, 1
  switch i32 %49, label %131 [
    i32 0, label %50
    i32 1, label %51
    i32 2, label %53
    i32 3, label %71
  ]

50:                                               ; preds = %39, %45
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #15
  unreachable

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 3
  store i32 2, i32* %52, align 4
  store i32 2, i32* %8, align 8
  br label %160

53:                                               ; preds = %45
  %54 = tail call i32 @_ZN2v88internal10RegExpImpl15IrregexpPrepareEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"* %3, i64* %1, i64* %2)
  %55 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 3
  store i32 %54, i32* %55, align 4
  %56 = icmp slt i32 %54, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 0
  store i32 -1, i32* %58, align 8
  br label %180

59:                                               ; preds = %53
  %60 = bitcast %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #13
  %61 = load i64, i64* %1, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSRegExp>::ObjectRef"* %5, i64 0, i32 0
  %64 = call zeroext i1 @_ZN2v88internal8JSRegExp21ShouldProduceBytecodeEv(%"class.v8::internal::JSRegExp"* nonnull %63) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #13
  %65 = load i32, i32* %55, align 4
  br i1 %64, label %66, label %68

66:                                               ; preds = %59
  store i32 %65, i32* %8, align 8
  %67 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 1
  store i32 1, i32* %67, align 4
  br label %133

68:                                               ; preds = %59
  %69 = icmp sgt i32 %65, 128
  %70 = select i1 %69, i32 %65, i32 128
  store i32 %70, i32* %8, align 8
  br label %133

71:                                               ; preds = %45
  %72 = tail call zeroext i1 @_ZN2v88internal18ExperimentalRegExp10IsCompiledENS0_6HandleINS0_8JSRegExpEEEPNS0_7IsolateE(i64* %1, %"class.v8::internal::Isolate"* %3) #13
  br i1 %72, label %78, label %73

73:                                               ; preds = %71
  %74 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %75 = tail call zeroext i1 @_ZN2v88internal18ExperimentalRegExp7CompileEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEE(%"class.v8::internal::Isolate"* %74, i64* %1) #13
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 0
  store i32 -1, i32* %77, align 8
  br label %180

78:                                               ; preds = %73, %71
  %79 = load i64, i64* %1, align 8
  %80 = and i64 %79, -4294967296
  %81 = add i64 %79, 11
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %80, %84
  %86 = and i64 %84, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %111, label %88

88:                                               ; preds = %78
  %89 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %90 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %89, i64 0, i32 0, i32 1
  %93 = load i8, i8* %92, align 8, !range !3
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %89, i64 0, i32 1, i64 0
  br label %105

97:                                               ; preds = %91, %88
  %98 = and i64 %85, -262144
  %99 = or i64 %98, 16
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 16
  %102 = add i64 %101, -41416
  %103 = inttoptr i64 %102 to %"class.v8::internal::Isolate"*
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %103, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %105

105:                                              ; preds = %97, %95
  %106 = phi i64* [ %104, %97 ], [ %96, %95 ]
  %107 = getelementptr inbounds i64, i64* %106, i64 4
  %108 = load i64, i64* %107, align 8
  %109 = trunc i64 %108 to i32
  %110 = icmp eq i32 %83, %109
  br i1 %110, label %118, label %111

111:                                              ; preds = %105, %78
  %112 = add i64 %85, 7
  %113 = inttoptr i64 %112 to i32*
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = ashr i32 %114, 1
  switch i32 %115, label %118 [
    i32 1, label %116
    i32 3, label %119
    i32 2, label %119
  ]

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 3
  store i32 2, i32* %117, align 4
  br label %128

118:                                              ; preds = %111, %105
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #15
  unreachable

119:                                              ; preds = %111, %111
  %120 = add i64 %85, 39
  %121 = inttoptr i64 %120 to i32*
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = add i32 %122, 2
  %124 = and i32 %123, -2
  %125 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 3
  store i32 %124, i32* %125, align 4
  %126 = icmp sgt i32 %124, 128
  %127 = select i1 %126, i32 %124, i32 128
  br label %128

128:                                              ; preds = %119, %116
  %129 = phi i32 [ 2, %116 ], [ %124, %119 ]
  %130 = phi i32 [ 128, %116 ], [ %127, %119 ]
  store i32 %130, i32* %8, align 8
  br label %133

131:                                              ; preds = %45
  %132 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 3
  br label %160

133:                                              ; preds = %66, %68, %128
  %134 = phi i32 [ %65, %66 ], [ %65, %68 ], [ %129, %128 ]
  %135 = phi i32 [ %65, %66 ], [ %70, %68 ], [ %130, %128 ]
  %136 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 3
  %137 = sdiv i32 %135, %134
  %138 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 1
  store i32 %137, i32* %138, align 4
  %139 = icmp sgt i32 %135, 128
  br i1 %139, label %140, label %164

140:                                              ; preds = %133
  %141 = sext i32 %135 to i64
  %142 = shl nuw nsw i64 %141, 2
  %143 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %142, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #16
  %144 = icmp eq i8* %143, null
  br i1 %144, label %145, label %156

145:                                              ; preds = %140
  %146 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #13
  %147 = bitcast %"class.v8::Platform"* %146 to void (%"class.v8::Platform"*)***
  %148 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %148, i64 3
  %150 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %149, align 8
  call void %150(%"class.v8::Platform"* %146) #13
  %151 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %142, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #16
  %152 = icmp eq i8* %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %145
  %154 = load i32, i32* %138, align 4
  br label %156

155:                                              ; preds = %145
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #15
  unreachable

156:                                              ; preds = %153, %140
  %157 = phi i32 [ %154, %153 ], [ %137, %140 ]
  %158 = phi i8* [ %151, %153 ], [ %143, %140 ]
  %159 = bitcast i8* %158 to i32*
  br label %168

160:                                              ; preds = %51, %131
  %161 = phi i32 [ 0, %131 ], [ 1, %51 ]
  %162 = phi i32* [ %132, %131 ], [ %52, %51 ]
  %163 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 1
  store i32 %161, i32* %163, align 4
  br label %164

164:                                              ; preds = %160, %133
  %165 = phi i32 [ %137, %133 ], [ %161, %160 ]
  %166 = phi i32* [ %136, %133 ], [ %162, %160 ]
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 120, i64 0
  br label %168

168:                                              ; preds = %164, %156
  %169 = phi i32 [ %165, %164 ], [ %157, %156 ]
  %170 = phi i32* [ %166, %164 ], [ %136, %156 ]
  %171 = phi i32* [ %167, %164 ], [ %159, %156 ]
  store i32* %171, i32** %7, align 8
  %172 = add nsw i32 %169, -1
  %173 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 2
  store i32 %172, i32* %173, align 8
  %174 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 0
  store i32 %169, i32* %174, align 8
  %175 = load i32, i32* %170, align 4
  %176 = mul nsw i32 %175, %172
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i32, i32* %171, i64 %177
  store i32 -1, i32* %178, align 4
  %179 = getelementptr inbounds i32, i32* %178, i64 1
  store i32 0, i32* %179, align 4
  br label %180

180:                                              ; preds = %168, %76, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17RegExpGlobalCacheD2Ev(%"class.v8::internal::RegExpGlobalCache"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 128
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 4
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast i32* %7 to i8*
  tail call void @_ZdaPv(i8* %10) #16
  br label %11

11:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal17RegExpGlobalCache17AdvanceZeroLengthEi(%"class.v8::internal::RegExpGlobalCache"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.v8::internal::StringShape", align 4
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::StringShape", align 4
  %9 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 6, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, -4294967296
  %13 = add i64 %11, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 15
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 32
  %22 = icmp eq i32 %21, 0
  %23 = add nsw i32 %1, 1
  br i1 %22, label %74, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 7, i32 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %23, %30
  br i1 %31, label %32, label %74

32:                                               ; preds = %24
  %33 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #13
  store i32 %1, i32* %4, align 4
  %34 = bitcast %"class.v8::internal::StringShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %5, i64 0, i32 0
  %36 = and i64 %27, -4294967296
  %37 = add i64 %27, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 acquire, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %36, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = zext i16 %44 to i32
  store i32 %45, i32* %35, align 4
  %46 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  %47 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %27, i64* %47, align 8
  %48 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %5, %"class.v8::internal::String"* nonnull dereferenceable(8) %3, i32* nonnull dereferenceable(4) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #13
  %49 = and i16 %48, -1024
  %50 = icmp eq i16 %49, -10240
  br i1 %50, label %51, label %74

51:                                               ; preds = %32
  %52 = load i64*, i64** %25, align 8
  %53 = load i64, i64* %52, align 8
  %54 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #13
  store i32 %23, i32* %7, align 4
  %55 = bitcast %"class.v8::internal::StringShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #13
  %56 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %8, i64 0, i32 0
  %57 = and i64 %53, -4294967296
  %58 = add i64 %53, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 acquire, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = zext i16 %65 to i32
  store i32 %66, i32* %56, align 4
  %67 = bitcast %"class.v8::internal::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #13
  %68 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %53, i64* %68, align 8
  %69 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %8, %"class.v8::internal::String"* nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #13
  %70 = and i16 %69, -1024
  %71 = icmp eq i16 %70, -9216
  %72 = add nsw i32 %1, 2
  %73 = select i1 %71, i32 %72, i32 %23
  ret i32 %73

74:                                               ; preds = %2, %32, %24
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @_ZN2v88internal17RegExpGlobalCache9FetchNextEv(%"class.v8::internal::RegExpGlobalCache"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  %5 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %125, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %6, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  store i32 0, i32* %5, align 8
  br label %133

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 4
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = mul nsw i32 %17, %3
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %15, i64 %19
  %21 = getelementptr inbounds i32, i32* %20, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 6, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, -4294967296
  %27 = add i64 %25, 11
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %26, %30
  %32 = and i64 %30, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %57, label %34

34:                                               ; preds = %13
  %35 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %36 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %35, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8, !range !3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %35, i64 0, i32 1, i64 0
  br label %51

43:                                               ; preds = %37, %34
  %44 = and i64 %31, -262144
  %45 = or i64 %44, 16
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 16
  %48 = add i64 %47, -41416
  %49 = inttoptr i64 %48 to %"class.v8::internal::Isolate"*
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %49, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %51

51:                                               ; preds = %43, %41
  %52 = phi i64* [ %50, %43 ], [ %42, %41 ]
  %53 = getelementptr inbounds i64, i64* %52, i64 4
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  %56 = icmp eq i32 %29, %55
  br i1 %56, label %62, label %57

57:                                               ; preds = %13, %51
  %58 = add i64 %31, 7
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = ashr i32 %60, 1
  switch i32 %61, label %106 [
    i32 0, label %62
    i32 1, label %63
    i32 3, label %71
    i32 2, label %80
  ]

62:                                               ; preds = %51, %57
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #15
  unreachable

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 8
  %65 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 7, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 5
  %69 = load i32, i32* %68, align 8
  %70 = tail call i32 @_ZN2v88internal10RegExpImpl11AtomExecRawEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiPii(%"class.v8::internal::Isolate"* %65, i64* %24, i64* %67, i32 %22, i32* %15, i32 %69)
  br label %103

71:                                               ; preds = %57
  %72 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 8
  %73 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 7, i32 0, i32 0
  %75 = load i64*, i64** %74, align 8
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 5
  %78 = load i32, i32* %77, align 8
  %79 = tail call i32 @_ZN2v88internal18ExperimentalRegExp7ExecRawEPNS0_7IsolateENS0_6RegExp10CallOriginENS0_8JSRegExpENS0_6StringEPiii(%"class.v8::internal::Isolate"* %73, i32 0, i64 %25, i64 %76, i32* %15, i32 %78, i32 %22) #13
  br label %103

80:                                               ; preds = %57
  %81 = load i32, i32* %20, align 4
  %82 = icmp eq i32 %81, %22
  br i1 %82, label %83, label %85

83:                                               ; preds = %80
  %84 = tail call i32 @_ZN2v88internal17RegExpGlobalCache17AdvanceZeroLengthEi(%"class.v8::internal::RegExpGlobalCache"* %0, i32 %22)
  br label %85

85:                                               ; preds = %83, %80
  %86 = phi i32 [ %84, %83 ], [ %22, %80 ]
  %87 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 7, i32 0, i32 0
  %88 = load i64*, i64** %87, align 8
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 7
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i32 %86, %92
  br i1 %93, label %102, label %94

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 8
  %96 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %95, align 8
  %97 = load i64*, i64** %23, align 8
  %98 = load i32*, i32** %14, align 8
  %99 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 5
  %100 = load i32, i32* %99, align 8
  %101 = tail call i32 @_ZN2v88internal10RegExpImpl15IrregexpExecRawEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEiPii(%"class.v8::internal::Isolate"* %96, i64* %97, i64* %88, i32 %86, i32* %98, i32 %100)
  br label %103

102:                                              ; preds = %85
  store i32 0, i32* %5, align 8
  br label %133

103:                                              ; preds = %63, %71, %94
  %104 = phi i32 [ %101, %94 ], [ %79, %71 ], [ %70, %63 ]
  %105 = phi i32 [ %86, %94 ], [ %22, %71 ], [ %22, %63 ]
  store i32 %104, i32* %5, align 8
  br label %106

106:                                              ; preds = %103, %57
  %107 = phi i32 [ %6, %57 ], [ %104, %103 ]
  %108 = phi i32 [ %22, %57 ], [ %105, %103 ]
  %109 = icmp eq i32 %107, -3
  br i1 %109, label %110, label %120

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 8
  %112 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %111, align 8
  %113 = load i64*, i64** %23, align 8
  %114 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 7, i32 0, i32 0
  %115 = load i64*, i64** %114, align 8
  %116 = load i32*, i32** %14, align 8
  %117 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 5
  %118 = load i32, i32* %117, align 8
  %119 = tail call i32 @_ZN2v88internal18ExperimentalRegExp14OneshotExecRawEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEPiii(%"class.v8::internal::Isolate"* %112, i64* %113, i64* %115, i32* %116, i32 %118, i32 %108) #13
  store i32 %119, i32* %5, align 8
  br label %120

120:                                              ; preds = %106, %110
  %121 = phi i32 [ %119, %110 ], [ %107, %106 ]
  %122 = icmp slt i32 %121, 1
  br i1 %122, label %133, label %123

123:                                              ; preds = %120
  store i32 0, i32* %2, align 8
  %124 = load i32*, i32** %14, align 8
  br label %133

125:                                              ; preds = %1
  %126 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 4
  %127 = load i32*, i32** %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 3
  %129 = load i32, i32* %128, align 4
  %130 = mul nsw i32 %129, %4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i32, i32* %127, i64 %131
  br label %133

133:                                              ; preds = %123, %102, %120, %125, %12
  %134 = phi i32* [ null, %12 ], [ %132, %125 ], [ %124, %123 ], [ null, %102 ], [ null, %120 ]
  ret i32* %134
}

declare i32 @_ZN2v88internal18ExperimentalRegExp7ExecRawEPNS0_7IsolateENS0_6RegExp10CallOriginENS0_8JSRegExpENS0_6StringEPiii(%"class.v8::internal::Isolate"*, i32, i64, i64, i32*, i32, i32) local_unnamed_addr #2

declare i32 @_ZN2v88internal18ExperimentalRegExp14OneshotExecRawEPNS0_7IsolateENS0_6HandleINS0_8JSRegExpEEENS4_INS0_6StringEEEPiii(%"class.v8::internal::Isolate"*, i64*, i64*, i32*, i32, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32* @_ZN2v88internal17RegExpGlobalCache19LastSuccessfulMatchEv(%"class.v8::internal::RegExpGlobalCache"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = mul nsw i32 %5, %3
  %7 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  %10 = select i1 %9, i32 %5, i32 0
  %11 = sub nsw i32 %6, %10
  %12 = getelementptr inbounds %"class.v8::internal::RegExpGlobalCache", %"class.v8::internal::RegExpGlobalCache"* %0, i64 0, i32 4
  %13 = load i32*, i32** %12, align 8
  %14 = sext i32 %11 to i64
  %15 = getelementptr inbounds i32, i32* %13, i64 %14
  ret i32* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal18RegExpResultsCache6LookupEPNS0_4HeapENS0_6StringENS0_6ObjectEPNS0_10FixedArrayENS1_16ResultsCacheTypeE(%"class.v8::internal::Heap"*, i64, i64, %"class.v8::internal::FixedArray"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %6 = and i64 %1, -4294967296
  %7 = add i64 %1, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp ult i16 %14, 32
  br i1 %15, label %16, label %105

16:                                               ; preds = %5
  %17 = icmp eq i32 %4, 1
  br i1 %17, label %18, label %37

18:                                               ; preds = %16
  %19 = and i64 %2, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %105, label %21

21:                                               ; preds = %18
  %22 = and i64 %2, -4294967296
  %23 = add i64 %2, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp ult i16 %30, 32
  br i1 %31, label %32, label %105

32:                                               ; preds = %21
  %33 = ptrtoint %"class.v8::internal::Heap"* %0 to i64
  %34 = add i64 %33, -41416
  %35 = inttoptr i64 %34 to %"class.v8::internal::Isolate"*
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 0, i32 7, i32 0, i64 621
  br label %42

37:                                               ; preds = %16
  %38 = ptrtoint %"class.v8::internal::Heap"* %0 to i64
  %39 = add i64 %38, -41416
  %40 = inttoptr i64 %39 to %"class.v8::internal::Isolate"*
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 0, i32 7, i32 0, i64 622
  br label %42

42:                                               ; preds = %37, %32
  %43 = phi i64* [ %36, %32 ], [ %41, %37 ]
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %1, 3
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = lshr i32 %47, 2
  %49 = and i32 %48, 252
  %50 = and i64 %44, -4294967296
  %51 = shl nuw nsw i32 %49, 2
  %52 = or i32 %51, 7
  %53 = zext i32 %52 to i64
  %54 = add i64 %44, %53
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = trunc i64 %1 to i32
  %58 = icmp eq i32 %56, %57
  br i1 %58, label %59, label %68

59:                                               ; preds = %42
  %60 = or i32 %51, 4
  %61 = add nuw nsw i32 %60, 7
  %62 = zext i32 %61 to i64
  %63 = add i64 %44, %62
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = trunc i64 %2 to i32
  %67 = icmp eq i32 %65, %66
  br i1 %67, label %87, label %68

68:                                               ; preds = %59, %42
  %69 = shl nuw nsw i32 %49, 2
  %70 = add nuw nsw i32 %69, 16
  %71 = and i32 %70, 1008
  %72 = or i32 %71, 7
  %73 = zext i32 %72 to i64
  %74 = add i64 %44, %73
  %75 = inttoptr i64 %74 to i32*
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = icmp eq i32 %76, %57
  br i1 %77, label %78, label %105

78:                                               ; preds = %68
  %79 = or i32 %71, 4
  %80 = add nuw nsw i32 %79, 7
  %81 = zext i32 %80 to i64
  %82 = add i64 %44, %81
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = trunc i64 %2 to i32
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %87, label %105

87:                                               ; preds = %78, %59
  %88 = phi i32 [ %71, %78 ], [ %51, %59 ]
  %89 = or i32 %88, 12
  %90 = add nuw nsw i32 %89, 7
  %91 = zext i32 %90 to i64
  %92 = add i64 %44, %91
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %50, %95
  %97 = getelementptr inbounds %"class.v8::internal::FixedArray", %"class.v8::internal::FixedArray"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %96, i64* %97, align 8
  %98 = or i32 %88, 15
  %99 = zext i32 %98 to i64
  %100 = add i64 %44, %99
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %50, %103
  br label %105

105:                                              ; preds = %78, %68, %18, %21, %5, %87
  %106 = phi i64 [ %104, %87 ], [ 0, %5 ], [ 0, %21 ], [ 0, %68 ], [ 0, %78 ], [ 0, %18 ]
  ret i64 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18RegExpResultsCache5EnterEPNS0_7IsolateENS0_6HandleINS0_6StringEEENS4_INS0_6ObjectEEENS4_INS0_10FixedArrayEEESA_NS1_16ResultsCacheTypeE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %7 = load i64, i64* %1, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp ult i16 %16, 32
  br i1 %17, label %18, label %575

18:                                               ; preds = %6
  %19 = icmp eq i32 %5, 1
  br i1 %19, label %20, label %37

20:                                               ; preds = %18
  %21 = load i64, i64* %2, align 8
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %575, label %24

24:                                               ; preds = %20
  %25 = and i64 %21, -4294967296
  %26 = add i64 %21, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp ult i16 %33, 32
  br i1 %34, label %35, label %575

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 621
  br label %39

37:                                               ; preds = %18
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 622
  br label %39

39:                                               ; preds = %37, %35
  %40 = phi i64* [ %36, %35 ], [ %38, %37 ]
  %41 = add i64 %7, 3
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = lshr i32 %43, 2
  %45 = and i32 %44, 252
  %46 = load i64, i64* %40, align 8
  %47 = shl nuw nsw i32 %45, 2
  %48 = or i32 %47, 7
  %49 = zext i32 %48 to i64
  %50 = add i64 %46, %49
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %182

54:                                               ; preds = %39
  %55 = trunc i64 %7 to i32
  store atomic volatile i32 %55, i32* %51 monotonic, align 4
  %56 = and i64 %7, 1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %81, label %58

58:                                               ; preds = %54
  %59 = and i64 %46, -262144
  %60 = or i64 %59, 8
  %61 = inttoptr i64 %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 262144
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %58
  %66 = or i64 %59, 16
  %67 = inttoptr i64 %66 to %"class.v8::internal::Heap"**
  %68 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %67, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %68, i64 %46, i64 %50, i64 %7) #13
  br label %69

69:                                               ; preds = %65, %58
  %70 = and i64 %7, -262144
  %71 = or i64 %70, 8
  %72 = inttoptr i64 %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, 24
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %81, label %76

76:                                               ; preds = %69
  %77 = load i64, i64* %61, align 8
  %78 = and i64 %77, 24
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %76
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %46, i64 %50, i64 %7) #13
  br label %81

81:                                               ; preds = %54, %69, %76, %80
  %82 = load i64, i64* %40, align 8
  %83 = load i64, i64* %2, align 8
  %84 = or i32 %47, 4
  %85 = add nuw nsw i32 %84, 7
  %86 = zext i32 %85 to i64
  %87 = add i64 %82, %86
  %88 = inttoptr i64 %87 to i32*
  %89 = trunc i64 %83 to i32
  store atomic volatile i32 %89, i32* %88 monotonic, align 4
  %90 = and i64 %83, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %115, label %92

92:                                               ; preds = %81
  %93 = and i64 %82, -262144
  %94 = or i64 %93, 8
  %95 = inttoptr i64 %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 262144
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %92
  %100 = or i64 %93, 16
  %101 = inttoptr i64 %100 to %"class.v8::internal::Heap"**
  %102 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %101, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %102, i64 %82, i64 %87, i64 %83) #13
  br label %103

103:                                              ; preds = %99, %92
  %104 = and i64 %83, -262144
  %105 = or i64 %104, 8
  %106 = inttoptr i64 %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 24
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %115, label %110

110:                                              ; preds = %103
  %111 = load i64, i64* %95, align 8
  %112 = and i64 %111, 24
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %110
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %82, i64 %87, i64 %83) #13
  br label %115

115:                                              ; preds = %81, %103, %110, %114
  %116 = load i64, i64* %40, align 8
  %117 = load i64, i64* %3, align 8
  %118 = or i32 %47, 15
  %119 = zext i32 %118 to i64
  %120 = add i64 %116, %119
  %121 = inttoptr i64 %120 to i32*
  %122 = trunc i64 %117 to i32
  store atomic volatile i32 %122, i32* %121 monotonic, align 4
  %123 = and i64 %117, 1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %148, label %125

125:                                              ; preds = %115
  %126 = and i64 %116, -262144
  %127 = or i64 %126, 8
  %128 = inttoptr i64 %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = and i64 %129, 262144
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %136, label %132

132:                                              ; preds = %125
  %133 = or i64 %126, 16
  %134 = inttoptr i64 %133 to %"class.v8::internal::Heap"**
  %135 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %134, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %135, i64 %116, i64 %120, i64 %117) #13
  br label %136

136:                                              ; preds = %132, %125
  %137 = and i64 %117, -262144
  %138 = or i64 %137, 8
  %139 = inttoptr i64 %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = and i64 %140, 24
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %148, label %143

143:                                              ; preds = %136
  %144 = load i64, i64* %128, align 8
  %145 = and i64 %144, 24
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %143
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %116, i64 %120, i64 %117) #13
  br label %148

148:                                              ; preds = %115, %136, %143, %147
  %149 = load i64, i64* %40, align 8
  %150 = load i64, i64* %4, align 8
  %151 = or i32 %47, 12
  %152 = add nuw nsw i32 %151, 7
  %153 = zext i32 %152 to i64
  %154 = add i64 %149, %153
  %155 = inttoptr i64 %154 to i32*
  %156 = trunc i64 %150 to i32
  store atomic volatile i32 %156, i32* %155 monotonic, align 4
  %157 = and i64 %150, 1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %469, label %159

159:                                              ; preds = %148
  %160 = and i64 %149, -262144
  %161 = or i64 %160, 8
  %162 = inttoptr i64 %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = and i64 %163, 262144
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %170, label %166

166:                                              ; preds = %159
  %167 = or i64 %160, 16
  %168 = inttoptr i64 %167 to %"class.v8::internal::Heap"**
  %169 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %168, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %169, i64 %149, i64 %154, i64 %150) #13
  br label %170

170:                                              ; preds = %166, %159
  %171 = and i64 %150, -262144
  %172 = or i64 %171, 8
  %173 = inttoptr i64 %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = and i64 %174, 24
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %469, label %177

177:                                              ; preds = %170
  %178 = load i64, i64* %162, align 8
  %179 = and i64 %178, 24
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %469

181:                                              ; preds = %177
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %149, i64 %154, i64 %150) #13
  br label %469

182:                                              ; preds = %39
  %183 = shl nuw nsw i32 %45, 2
  %184 = add nuw nsw i32 %183, 16
  %185 = and i32 %184, 1008
  %186 = or i32 %185, 7
  %187 = zext i32 %186 to i64
  %188 = add i64 %46, %187
  %189 = inttoptr i64 %188 to i32*
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %320

192:                                              ; preds = %182
  %193 = trunc i64 %7 to i32
  store atomic volatile i32 %193, i32* %189 monotonic, align 4
  %194 = and i64 %7, 1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %219, label %196

196:                                              ; preds = %192
  %197 = and i64 %46, -262144
  %198 = or i64 %197, 8
  %199 = inttoptr i64 %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = and i64 %200, 262144
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %207, label %203

203:                                              ; preds = %196
  %204 = or i64 %197, 16
  %205 = inttoptr i64 %204 to %"class.v8::internal::Heap"**
  %206 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %205, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %206, i64 %46, i64 %188, i64 %7) #13
  br label %207

207:                                              ; preds = %203, %196
  %208 = and i64 %7, -262144
  %209 = or i64 %208, 8
  %210 = inttoptr i64 %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = and i64 %211, 24
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %219, label %214

214:                                              ; preds = %207
  %215 = load i64, i64* %199, align 8
  %216 = and i64 %215, 24
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %214
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %46, i64 %188, i64 %7) #13
  br label %219

219:                                              ; preds = %192, %207, %214, %218
  %220 = load i64, i64* %40, align 8
  %221 = load i64, i64* %2, align 8
  %222 = or i32 %185, 4
  %223 = add nuw nsw i32 %222, 7
  %224 = zext i32 %223 to i64
  %225 = add i64 %220, %224
  %226 = inttoptr i64 %225 to i32*
  %227 = trunc i64 %221 to i32
  store atomic volatile i32 %227, i32* %226 monotonic, align 4
  %228 = and i64 %221, 1
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %253, label %230

230:                                              ; preds = %219
  %231 = and i64 %220, -262144
  %232 = or i64 %231, 8
  %233 = inttoptr i64 %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = and i64 %234, 262144
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %241, label %237

237:                                              ; preds = %230
  %238 = or i64 %231, 16
  %239 = inttoptr i64 %238 to %"class.v8::internal::Heap"**
  %240 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %239, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %240, i64 %220, i64 %225, i64 %221) #13
  br label %241

241:                                              ; preds = %237, %230
  %242 = and i64 %221, -262144
  %243 = or i64 %242, 8
  %244 = inttoptr i64 %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = and i64 %245, 24
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %253, label %248

248:                                              ; preds = %241
  %249 = load i64, i64* %233, align 8
  %250 = and i64 %249, 24
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %248
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %220, i64 %225, i64 %221) #13
  br label %253

253:                                              ; preds = %219, %241, %248, %252
  %254 = load i64, i64* %40, align 8
  %255 = load i64, i64* %3, align 8
  %256 = or i32 %185, 15
  %257 = zext i32 %256 to i64
  %258 = add i64 %254, %257
  %259 = inttoptr i64 %258 to i32*
  %260 = trunc i64 %255 to i32
  store atomic volatile i32 %260, i32* %259 monotonic, align 4
  %261 = and i64 %255, 1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %286, label %263

263:                                              ; preds = %253
  %264 = and i64 %254, -262144
  %265 = or i64 %264, 8
  %266 = inttoptr i64 %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = and i64 %267, 262144
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %274, label %270

270:                                              ; preds = %263
  %271 = or i64 %264, 16
  %272 = inttoptr i64 %271 to %"class.v8::internal::Heap"**
  %273 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %272, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %273, i64 %254, i64 %258, i64 %255) #13
  br label %274

274:                                              ; preds = %270, %263
  %275 = and i64 %255, -262144
  %276 = or i64 %275, 8
  %277 = inttoptr i64 %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = and i64 %278, 24
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %286, label %281

281:                                              ; preds = %274
  %282 = load i64, i64* %266, align 8
  %283 = and i64 %282, 24
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %281
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %254, i64 %258, i64 %255) #13
  br label %286

286:                                              ; preds = %253, %274, %281, %285
  %287 = load i64, i64* %40, align 8
  %288 = load i64, i64* %4, align 8
  %289 = or i32 %185, 12
  %290 = add nuw nsw i32 %289, 7
  %291 = zext i32 %290 to i64
  %292 = add i64 %287, %291
  %293 = inttoptr i64 %292 to i32*
  %294 = trunc i64 %288 to i32
  store atomic volatile i32 %294, i32* %293 monotonic, align 4
  %295 = and i64 %288, 1
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %469, label %297

297:                                              ; preds = %286
  %298 = and i64 %287, -262144
  %299 = or i64 %298, 8
  %300 = inttoptr i64 %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = and i64 %301, 262144
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %308, label %304

304:                                              ; preds = %297
  %305 = or i64 %298, 16
  %306 = inttoptr i64 %305 to %"class.v8::internal::Heap"**
  %307 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %306, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %307, i64 %287, i64 %292, i64 %288) #13
  br label %308

308:                                              ; preds = %304, %297
  %309 = and i64 %288, -262144
  %310 = or i64 %309, 8
  %311 = inttoptr i64 %310 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = and i64 %312, 24
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %469, label %315

315:                                              ; preds = %308
  %316 = load i64, i64* %300, align 8
  %317 = and i64 %316, 24
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %319, label %469

319:                                              ; preds = %315
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %287, i64 %292, i64 %288) #13
  br label %469

320:                                              ; preds = %182
  store atomic volatile i32 0, i32* %189 monotonic, align 4
  %321 = load i64, i64* %40, align 8
  %322 = or i32 %185, 4
  %323 = add nuw nsw i32 %322, 7
  %324 = zext i32 %323 to i64
  %325 = add i64 %321, %324
  %326 = inttoptr i64 %325 to i32*
  store atomic volatile i32 0, i32* %326 monotonic, align 4
  %327 = load i64, i64* %40, align 8
  %328 = or i32 %185, 15
  %329 = zext i32 %328 to i64
  %330 = add i64 %327, %329
  %331 = inttoptr i64 %330 to i32*
  store atomic volatile i32 0, i32* %331 monotonic, align 4
  %332 = load i64, i64* %40, align 8
  %333 = or i32 %185, 12
  %334 = add nuw nsw i32 %333, 7
  %335 = zext i32 %334 to i64
  %336 = add i64 %332, %335
  %337 = inttoptr i64 %336 to i32*
  store atomic volatile i32 0, i32* %337 monotonic, align 4
  %338 = load i64, i64* %40, align 8
  %339 = load i64, i64* %1, align 8
  %340 = add i64 %338, %49
  %341 = inttoptr i64 %340 to i32*
  %342 = trunc i64 %339 to i32
  store atomic volatile i32 %342, i32* %341 monotonic, align 4
  %343 = and i64 %339, 1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %368, label %345

345:                                              ; preds = %320
  %346 = and i64 %338, -262144
  %347 = or i64 %346, 8
  %348 = inttoptr i64 %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = and i64 %349, 262144
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %356, label %352

352:                                              ; preds = %345
  %353 = or i64 %346, 16
  %354 = inttoptr i64 %353 to %"class.v8::internal::Heap"**
  %355 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %354, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %355, i64 %338, i64 %340, i64 %339) #13
  br label %356

356:                                              ; preds = %352, %345
  %357 = and i64 %339, -262144
  %358 = or i64 %357, 8
  %359 = inttoptr i64 %358 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = and i64 %360, 24
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %368, label %363

363:                                              ; preds = %356
  %364 = load i64, i64* %348, align 8
  %365 = and i64 %364, 24
  %366 = icmp eq i64 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %363
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %338, i64 %340, i64 %339) #13
  br label %368

368:                                              ; preds = %320, %356, %363, %367
  %369 = load i64, i64* %40, align 8
  %370 = load i64, i64* %2, align 8
  %371 = or i32 %47, 4
  %372 = add nuw nsw i32 %371, 7
  %373 = zext i32 %372 to i64
  %374 = add i64 %369, %373
  %375 = inttoptr i64 %374 to i32*
  %376 = trunc i64 %370 to i32
  store atomic volatile i32 %376, i32* %375 monotonic, align 4
  %377 = and i64 %370, 1
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %402, label %379

379:                                              ; preds = %368
  %380 = and i64 %369, -262144
  %381 = or i64 %380, 8
  %382 = inttoptr i64 %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = and i64 %383, 262144
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %390, label %386

386:                                              ; preds = %379
  %387 = or i64 %380, 16
  %388 = inttoptr i64 %387 to %"class.v8::internal::Heap"**
  %389 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %388, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %389, i64 %369, i64 %374, i64 %370) #13
  br label %390

390:                                              ; preds = %386, %379
  %391 = and i64 %370, -262144
  %392 = or i64 %391, 8
  %393 = inttoptr i64 %392 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = and i64 %394, 24
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %402, label %397

397:                                              ; preds = %390
  %398 = load i64, i64* %382, align 8
  %399 = and i64 %398, 24
  %400 = icmp eq i64 %399, 0
  br i1 %400, label %401, label %402

401:                                              ; preds = %397
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %369, i64 %374, i64 %370) #13
  br label %402

402:                                              ; preds = %368, %390, %397, %401
  %403 = load i64, i64* %40, align 8
  %404 = load i64, i64* %3, align 8
  %405 = or i32 %47, 15
  %406 = zext i32 %405 to i64
  %407 = add i64 %403, %406
  %408 = inttoptr i64 %407 to i32*
  %409 = trunc i64 %404 to i32
  store atomic volatile i32 %409, i32* %408 monotonic, align 4
  %410 = and i64 %404, 1
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %435, label %412

412:                                              ; preds = %402
  %413 = and i64 %403, -262144
  %414 = or i64 %413, 8
  %415 = inttoptr i64 %414 to i64*
  %416 = load i64, i64* %415, align 8
  %417 = and i64 %416, 262144
  %418 = icmp eq i64 %417, 0
  br i1 %418, label %423, label %419

419:                                              ; preds = %412
  %420 = or i64 %413, 16
  %421 = inttoptr i64 %420 to %"class.v8::internal::Heap"**
  %422 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %421, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %422, i64 %403, i64 %407, i64 %404) #13
  br label %423

423:                                              ; preds = %419, %412
  %424 = and i64 %404, -262144
  %425 = or i64 %424, 8
  %426 = inttoptr i64 %425 to i64*
  %427 = load i64, i64* %426, align 8
  %428 = and i64 %427, 24
  %429 = icmp eq i64 %428, 0
  br i1 %429, label %435, label %430

430:                                              ; preds = %423
  %431 = load i64, i64* %415, align 8
  %432 = and i64 %431, 24
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %435

434:                                              ; preds = %430
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %403, i64 %407, i64 %404) #13
  br label %435

435:                                              ; preds = %402, %423, %430, %434
  %436 = load i64, i64* %40, align 8
  %437 = load i64, i64* %4, align 8
  %438 = or i32 %47, 12
  %439 = add nuw nsw i32 %438, 7
  %440 = zext i32 %439 to i64
  %441 = add i64 %436, %440
  %442 = inttoptr i64 %441 to i32*
  %443 = trunc i64 %437 to i32
  store atomic volatile i32 %443, i32* %442 monotonic, align 4
  %444 = and i64 %437, 1
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %469, label %446

446:                                              ; preds = %435
  %447 = and i64 %436, -262144
  %448 = or i64 %447, 8
  %449 = inttoptr i64 %448 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = and i64 %450, 262144
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %457, label %453

453:                                              ; preds = %446
  %454 = or i64 %447, 16
  %455 = inttoptr i64 %454 to %"class.v8::internal::Heap"**
  %456 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %455, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %456, i64 %436, i64 %441, i64 %437) #13
  br label %457

457:                                              ; preds = %453, %446
  %458 = and i64 %437, -262144
  %459 = or i64 %458, 8
  %460 = inttoptr i64 %459 to i64*
  %461 = load i64, i64* %460, align 8
  %462 = and i64 %461, 24
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %469, label %464

464:                                              ; preds = %457
  %465 = load i64, i64* %449, align 8
  %466 = and i64 %465, 24
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %468, label %469

468:                                              ; preds = %464
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %436, i64 %441, i64 %437) #13
  br label %469

469:                                              ; preds = %468, %464, %457, %435, %319, %315, %308, %286, %181, %177, %170, %148
  %470 = load i64, i64* %3, align 8
  br i1 %19, label %471, label %568

471:                                              ; preds = %469
  %472 = add i64 %470, 3
  %473 = inttoptr i64 %472 to i32*
  %474 = load i32, i32* %473, align 4
  %475 = add i32 %474, -2
  %476 = icmp ult i32 %475, 198
  br i1 %476, label %477, label %568

477:                                              ; preds = %471
  %478 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %479 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %480 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %481 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  br label %482

482:                                              ; preds = %477, %559
  %483 = phi i64 [ 0, %477 ], [ %560, %559 ]
  %484 = phi i64 [ %470, %477 ], [ %561, %559 ]
  %485 = and i64 %484, -4294967296
  %486 = trunc i64 %483 to i32
  %487 = shl i32 %486, 2
  %488 = sext i32 %487 to i64
  %489 = add nsw i64 %488, 7
  %490 = add i64 %489, %484
  %491 = inttoptr i64 %490 to i32*
  %492 = load atomic i32, i32* %491 monotonic, align 4
  %493 = zext i32 %492 to i64
  %494 = or i64 %485, %493
  %495 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %478, align 8
  %496 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %495, null
  br i1 %496, label %500, label %497

497:                                              ; preds = %482
  %498 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %495, i64 %494) #13
  %499 = load i64, i64* %498, align 8
  br label %511

500:                                              ; preds = %482
  %501 = load i64*, i64** %479, align 8
  %502 = load i64*, i64** %480, align 8
  %503 = icmp eq i64* %501, %502
  br i1 %503, label %504, label %506

504:                                              ; preds = %500
  %505 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #13
  br label %506

506:                                              ; preds = %504, %500
  %507 = phi i64* [ %505, %504 ], [ %501, %500 ]
  %508 = ptrtoint i64* %507 to i64
  %509 = add i64 %508, 8
  %510 = inttoptr i64 %509 to i64*
  store i64* %510, i64** %479, align 8
  store i64 %494, i64* %507, align 8
  br label %511

511:                                              ; preds = %497, %506
  %512 = phi i64 [ %499, %497 ], [ %494, %506 ]
  %513 = phi i64* [ %498, %497 ], [ %507, %506 ]
  %514 = and i64 %512, -4294967296
  %515 = add i64 %512, -1
  %516 = inttoptr i64 %515 to i32*
  %517 = load atomic i32, i32* %516 monotonic, align 4
  %518 = zext i32 %517 to i64
  %519 = or i64 %514, %518
  %520 = add i64 %519, 7
  %521 = inttoptr i64 %520 to i16*
  %522 = load atomic i16, i16* %521 monotonic, align 2
  %523 = icmp ult i16 %522, 32
  br i1 %523, label %528, label %524

524:                                              ; preds = %511
  %525 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %481, align 8
  %526 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %525, %"class.v8::internal::Isolate"* %0, i64* %513) #13
  %527 = load i64, i64* %526, align 8
  br label %528

528:                                              ; preds = %511, %524
  %529 = phi i64 [ %527, %524 ], [ %512, %511 ]
  %530 = load i64, i64* %3, align 8
  %531 = add i64 %530, %489
  %532 = inttoptr i64 %531 to i32*
  %533 = trunc i64 %529 to i32
  store atomic volatile i32 %533, i32* %532 monotonic, align 4
  %534 = and i64 %529, 1
  %535 = icmp eq i64 %534, 0
  br i1 %535, label %559, label %536

536:                                              ; preds = %528
  %537 = and i64 %530, -262144
  %538 = or i64 %537, 8
  %539 = inttoptr i64 %538 to i64*
  %540 = load i64, i64* %539, align 8
  %541 = and i64 %540, 262144
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %547, label %543

543:                                              ; preds = %536
  %544 = or i64 %537, 16
  %545 = inttoptr i64 %544 to %"class.v8::internal::Heap"**
  %546 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %545, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %546, i64 %530, i64 %531, i64 %529) #13
  br label %547

547:                                              ; preds = %543, %536
  %548 = and i64 %529, -262144
  %549 = or i64 %548, 8
  %550 = inttoptr i64 %549 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = and i64 %551, 24
  %553 = icmp eq i64 %552, 0
  br i1 %553, label %559, label %554

554:                                              ; preds = %547
  %555 = load i64, i64* %539, align 8
  %556 = and i64 %555, 24
  %557 = icmp eq i64 %556, 0
  br i1 %557, label %558, label %559

558:                                              ; preds = %554
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %530, i64 %531, i64 %529) #13
  br label %559

559:                                              ; preds = %528, %547, %554, %558
  %560 = add nuw nsw i64 %483, 1
  %561 = load i64, i64* %3, align 8
  %562 = add i64 %561, 3
  %563 = inttoptr i64 %562 to i32*
  %564 = load i32, i32* %563, align 4
  %565 = ashr i32 %564, 1
  %566 = sext i32 %565 to i64
  %567 = icmp slt i64 %560, %566
  br i1 %567, label %482, label %568

568:                                              ; preds = %559, %469, %471
  %569 = phi i64 [ %470, %471 ], [ %470, %469 ], [ %561, %559 ]
  %570 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 13
  %571 = load i64, i64* %570, align 8
  %572 = add i64 %569, -1
  %573 = inttoptr i64 %572 to i32*
  %574 = trunc i64 %571 to i32
  store atomic volatile i32 %574, i32* %573 monotonic, align 4
  br label %575

575:                                              ; preds = %20, %24, %6, %568
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal18RegExpResultsCache5ClearENS0_10FixedArrayE(i64) local_unnamed_addr #6 align 2 {
  %2 = add i64 %0, 7
  br label %4

3:                                                ; preds = %4
  ret void

4:                                                ; preds = %4, %1
  %5 = phi i64 [ 0, %1 ], [ %21, %4 ]
  %6 = shl i64 %5, 2
  %7 = add i64 %2, %6
  %8 = inttoptr i64 %7 to i32*
  store atomic volatile i32 0, i32* %8 monotonic, align 4
  %9 = shl i64 %5, 2
  %10 = or i64 %9, 4
  %11 = add i64 %2, %10
  %12 = inttoptr i64 %11 to i32*
  store atomic volatile i32 0, i32* %12 monotonic, align 4
  %13 = shl i64 %5, 2
  %14 = or i64 %13, 8
  %15 = add i64 %2, %14
  %16 = inttoptr i64 %15 to i32*
  store atomic volatile i32 0, i32* %16 monotonic, align 4
  %17 = shl i64 %5, 2
  %18 = or i64 %17, 12
  %19 = add i64 %2, %18
  %20 = inttoptr i64 %19 to i32*
  store atomic volatile i32 0, i32* %20 monotonic, align 4
  %21 = add nuw nsw i64 %5, 4
  %22 = icmp eq i64 %21, 256
  br i1 %22, label %3, label %4
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN2v88internal15InterruptsScopeC2EPNS0_7IsolateElNS1_4ModeE(%"class.v8::internal::InterruptsScope"*, %"class.v8::internal::Isolate"*, i64, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23PostponeInterruptsScopeD0Ev(%"class.v8::internal::PostponeInterruptsScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PostponeInterruptsScope", %"class.v8::internal::PostponeInterruptsScope"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %7, align 8
  tail call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.v8::internal::PostponeInterruptsScope"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RelocatableD0Ev(%"class.v8::internal::Relocatable"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::Relocatable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 91
  %9 = bitcast %"class.v8::internal::Relocatable"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Relocatable"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE(%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11Relocatable21PostGarbageCollectionEv(%"class.v8::internal::Relocatable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15InterruptsScopeD2Ev(%"class.v8::internal::InterruptsScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %7, align 8
  tail call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15InterruptsScopeD0Ev(%"class.v8::internal::InterruptsScope"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal15InterruptsScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::InterruptsScope", %"class.v8::internal::InterruptsScope"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::StackGuard"*, %"class.v8::internal::StackGuard"** %7, align 8
  tail call void @_ZN2v88internal10StackGuard18PopInterruptsScopeEv(%"class.v8::internal::StackGuard"* %8) #13
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.v8::internal::InterruptsScope"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  ret void
}

declare i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

declare i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"*, i64) local_unnamed_addr #2

declare i64 @_ZNK2v88internal8JSRegExp4CodeEb(%"class.v8::internal::JSRegExp"*, i1 zeroext) local_unnamed_addr #2

declare i64 @_ZNK2v88internal8JSRegExp8BytecodeEb(%"class.v8::internal::JSRegExp"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8JSRegExp15MarkedForTierUpEv(%"class.v8::internal::JSRegExp"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal4Heap25CommittedMemoryExecutableEv(%"class.v8::internal::Heap"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"*, %"class.v8::internal::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.v8::internal::ConsString", align 8
  %5 = alloca %"class.v8::internal::SlicedString", align 8
  %6 = alloca %"class.v8::internal::ThinString", align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 15
  switch i32 %9, label %134 [
    i32 8, label %10
    i32 0, label %20
    i32 9, label %30
    i32 1, label %30
    i32 10, label %37
    i32 2, label %79
    i32 11, label %120
    i32 3, label %120
    i32 13, label %127
    i32 5, label %127
  ]

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = load i32, i32* %2, align 4
  %14 = sext i32 %13 to i64
  %15 = add i64 %12, 11
  %16 = add i64 %15, %14
  %17 = inttoptr i64 %16 to i8*
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  br label %135

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = load i32, i32* %2, align 4
  %24 = shl nsw i32 %23, 1
  %25 = sext i32 %24 to i64
  %26 = add i64 %22, 11
  %27 = add i64 %26, %25
  %28 = inttoptr i64 %27 to i16*
  %29 = load i16, i16* %28, align 2
  br label %135

30:                                               ; preds = %3, %3
  %31 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = load i32, i32* %2, align 4
  %34 = bitcast %"class.v8::internal::ConsString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.v8::internal::ConsString", %"class.v8::internal::ConsString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %32, i64* %35, align 8
  %36 = call zeroext i16 @_ZNK2v88internal10ConsString3GetEi(%"class.v8::internal::ConsString"* nonnull %4, i32 %33) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %135

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = load i32, i32* %2, align 4
  %41 = and i64 %39, -4294967296
  %42 = add i64 %39, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %41, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = and i16 %49, 16
  %51 = icmp eq i16 %50, 0
  %52 = add i64 %39, 11
  %53 = inttoptr i64 %52 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %51, label %66, label %54

54:                                               ; preds = %37
  %55 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  %56 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %55, i64 0, i32 0
  %57 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %55 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %58 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %58, i64 2
  %60 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.v8::String::ExternalStringResourceBase"* %56) #13
  br i1 %61, label %62, label %66

62:                                               ; preds = %54
  %63 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %63) #13
  %64 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %63, i64 0, i32 1
  %65 = load i8*, i8** %64, align 8
  br label %73

66:                                               ; preds = %54, %37
  %67 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  %68 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %67 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %69 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %68, align 8
  %70 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %69, i64 6
  %71 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %70, align 8
  %72 = tail call i8* %71(%"class.v8::String::ExternalOneByteStringResource"* %67) #13
  br label %73

73:                                               ; preds = %62, %66
  %74 = phi i8* [ %65, %62 ], [ %72, %66 ]
  %75 = sext i32 %40 to i64
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  br label %135

79:                                               ; preds = %3
  %80 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = load i32, i32* %2, align 4
  %83 = and i64 %81, -4294967296
  %84 = add i64 %81, -1
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %83, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 16
  %93 = icmp eq i16 %92, 0
  %94 = add i64 %81, 11
  %95 = inttoptr i64 %94 to %"class.v8::String::ExternalStringResource"**
  br i1 %93, label %108, label %96

96:                                               ; preds = %79
  %97 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  %98 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %97, i64 0, i32 0
  %99 = bitcast %"class.v8::String::ExternalStringResource"* %97 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %100 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %99, align 8
  %101 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %100, i64 2
  %102 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %101, align 8
  %103 = tail call zeroext i1 %102(%"class.v8::String::ExternalStringResourceBase"* %98) #13
  br i1 %103, label %104, label %108

104:                                              ; preds = %96
  %105 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %105) #13
  %106 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %105, i64 0, i32 1
  %107 = load i16*, i16** %106, align 8
  br label %115

108:                                              ; preds = %96, %79
  %109 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  %110 = bitcast %"class.v8::String::ExternalStringResource"* %109 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %111 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %110, align 8
  %112 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %111, i64 6
  %113 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %112, align 8
  %114 = tail call i16* %113(%"class.v8::String::ExternalStringResource"* %109) #13
  br label %115

115:                                              ; preds = %104, %108
  %116 = phi i16* [ %107, %104 ], [ %114, %108 ]
  %117 = sext i32 %82 to i64
  %118 = getelementptr inbounds i16, i16* %116, i64 %117
  %119 = load i16, i16* %118, align 2
  br label %135

120:                                              ; preds = %3, %3
  %121 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = load i32, i32* %2, align 4
  %124 = bitcast %"class.v8::internal::SlicedString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #13
  %125 = getelementptr inbounds %"class.v8::internal::SlicedString", %"class.v8::internal::SlicedString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %122, i64* %125, align 8
  %126 = call zeroext i16 @_ZNK2v88internal12SlicedString3GetEi(%"class.v8::internal::SlicedString"* nonnull %5, i32 %123) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #13
  br label %135

127:                                              ; preds = %3, %3
  %128 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = load i32, i32* %2, align 4
  %131 = bitcast %"class.v8::internal::ThinString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #13
  %132 = getelementptr inbounds %"class.v8::internal::ThinString", %"class.v8::internal::ThinString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %129, i64* %132, align 8
  %133 = call zeroext i16 @_ZNK2v88internal10ThinString3GetEi(%"class.v8::internal::ThinString"* nonnull %6, i32 %130) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #13
  br label %135

134:                                              ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #15
  unreachable

135:                                              ; preds = %127, %120, %115, %73, %30, %20, %10
  %136 = phi i16 [ %133, %127 ], [ %126, %120 ], [ %119, %115 ], [ %78, %73 ], [ %36, %30 ], [ %29, %20 ], [ %19, %10 ]
  ret i16 %136
}

declare zeroext i16 @_ZNK2v88internal10ConsString3GetEi(%"class.v8::internal::ConsString"*, i32) local_unnamed_addr #2

declare void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #2

declare void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #2

declare zeroext i16 @_ZNK2v88internal12SlicedString3GetEi(%"class.v8::internal::SlicedString"*, i32) local_unnamed_addr #2

declare zeroext i16 @_ZNK2v88internal10ThinString3GetEi(%"class.v8::internal::ThinString"*, i32) local_unnamed_addr #2

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE16SingleCharSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = load i8, i8* %6, align 1
  %10 = trunc i64 %2 to i32
  %11 = trunc i64 %8 to i32
  %12 = sub nsw i32 %10, %11
  %13 = add nsw i32 %12, 1
  %14 = zext i8 %9 to i32
  %15 = ptrtoint i8* %1 to i64
  br label %16

16:                                               ; preds = %33, %4
  %17 = phi i32 [ %3, %4 ], [ %34, %33 ]
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %1, i64 %18
  %20 = sub i32 %13, %17
  %21 = sext i32 %20 to i64
  %22 = tail call i8* @memchr(i8* %19, i32 %14, i64 %21) #14
  %23 = icmp eq i8* %22, null
  br i1 %23, label %38, label %24

24:                                               ; preds = %16
  %25 = ptrtoint i8* %22 to i64
  %26 = sub i64 %25, %15
  %27 = trunc i64 %26 to i32
  %28 = shl i64 %26, 32
  %29 = ashr exact i64 %28, 32
  %30 = getelementptr inbounds i8, i8* %1, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, %9
  br i1 %32, label %36, label %33

33:                                               ; preds = %24
  %34 = add nsw i32 %27, 1
  %35 = icmp sgt i32 %12, %27
  br i1 %35, label %16, label %38

36:                                               ; preds = %24
  %37 = trunc i64 %26 to i32
  br label %38

38:                                               ; preds = %16, %33, %36
  %39 = phi i32 [ %37, %36 ], [ -1, %33 ], [ -1, %16 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE12LinearSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %65, label %13

13:                                               ; preds = %4
  %14 = load i8, i8* %6, align 1
  %15 = add nsw i32 %11, 1
  %16 = zext i8 %14 to i32
  %17 = ptrtoint i8* %1 to i64
  %18 = getelementptr inbounds i8, i8* %6, i64 1
  %19 = shl i64 %8, 32
  %20 = add i64 %19, -4294967296
  %21 = ashr exact i64 %20, 32
  br label %24

22:                                               ; preds = %53
  %23 = icmp sgt i32 %11, %47
  br i1 %23, label %44, label %65

24:                                               ; preds = %44, %13
  %25 = phi i32 [ %3, %13 ], [ %45, %44 ]
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %1, i64 %26
  %28 = sub i32 %15, %25
  %29 = sext i32 %28 to i64
  %30 = tail call i8* @memchr(i8* %27, i32 %16, i64 %29) #14
  %31 = icmp eq i8* %30, null
  br i1 %31, label %65, label %32

32:                                               ; preds = %24
  %33 = ptrtoint i8* %30 to i64
  %34 = sub i64 %33, %17
  %35 = trunc i64 %34 to i32
  %36 = shl i64 %34, 32
  %37 = ashr exact i64 %36, 32
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, %14
  br i1 %40, label %46, label %41

41:                                               ; preds = %32
  %42 = add nsw i32 %35, 1
  %43 = icmp sgt i32 %11, %35
  br i1 %43, label %44, label %65

44:                                               ; preds = %41, %22
  %45 = phi i32 [ %42, %41 ], [ %50, %22 ]
  br label %24

46:                                               ; preds = %32
  %47 = trunc i64 %34 to i32
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %65, label %49

49:                                               ; preds = %46
  %50 = add nuw nsw i32 %47, 1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  br label %53

53:                                               ; preds = %60, %49
  %54 = phi i64 [ %61, %60 ], [ 0, %49 ]
  %55 = getelementptr inbounds i8, i8* %18, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds i8, i8* %52, i64 %54
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %56, %58
  br i1 %59, label %60, label %22

60:                                               ; preds = %53
  %61 = add nuw nsw i64 %54, 1
  %62 = icmp slt i64 %61, %21
  br i1 %62, label %53, label %63

63:                                               ; preds = %60
  %64 = trunc i64 %34 to i32
  br label %65

65:                                               ; preds = %22, %46, %41, %24, %63, %4
  %66 = phi i32 [ -1, %4 ], [ %64, %63 ], [ -1, %24 ], [ -1, %41 ], [ -1, %46 ], [ -1, %22 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE13InitialSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %281, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i8* %1 to i64
  %18 = shl i64 %8, 32
  %19 = ashr exact i64 %18, 32
  br label %20

20:                                               ; preds = %275, %13
  %21 = phi i32 [ %15, %13 ], [ %276, %275 ]
  %22 = phi i32 [ %3, %13 ], [ %277, %275 ]
  %23 = add nsw i32 %21, 1
  %24 = icmp slt i32 %21, 0
  br i1 %24, label %25, label %72

25:                                               ; preds = %20
  %26 = load i8, i8* %6, align 1
  %27 = zext i8 %26 to i32
  br label %28

28:                                               ; preds = %45, %25
  %29 = phi i32 [ %22, %25 ], [ %46, %45 ]
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %1, i64 %30
  %32 = sub i32 %16, %29
  %33 = sext i32 %32 to i64
  %34 = tail call i8* @memchr(i8* %31, i32 %27, i64 %33) #14
  %35 = icmp eq i8* %34, null
  br i1 %35, label %281, label %36

36:                                               ; preds = %28
  %37 = ptrtoint i8* %34 to i64
  %38 = sub i64 %37, %17
  %39 = trunc i64 %38 to i32
  %40 = shl i64 %38, 32
  %41 = ashr exact i64 %40, 32
  %42 = getelementptr inbounds i8, i8* %1, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, %26
  br i1 %44, label %48, label %45

45:                                               ; preds = %36
  %46 = add nsw i32 %39, 1
  %47 = icmp sgt i32 %11, %39
  br i1 %47, label %28, label %281

48:                                               ; preds = %36
  %49 = trunc i64 %38 to i32
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %281, label %51

51:                                               ; preds = %48
  %52 = shl i64 %38, 32
  %53 = ashr exact i64 %52, 32
  br label %54

54:                                               ; preds = %51, %63
  %55 = phi i64 [ 1, %51 ], [ %64, %63 ]
  %56 = phi i32 [ 1, %51 ], [ %65, %63 ]
  %57 = getelementptr inbounds i8, i8* %6, i64 %55
  %58 = load i8, i8* %57, align 1
  %59 = add nsw i64 %55, %53
  %60 = getelementptr inbounds i8, i8* %1, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %58, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %54
  %64 = add nuw nsw i64 %55, 1
  %65 = add nuw nsw i32 %56, 1
  %66 = icmp slt i64 %64, %19
  br i1 %66, label %54, label %69

67:                                               ; preds = %54
  %68 = trunc i64 %55 to i32
  br label %69

69:                                               ; preds = %63, %67
  %70 = phi i32 [ %68, %67 ], [ %65, %63 ]
  %71 = icmp eq i32 %70, %9
  br i1 %71, label %279, label %275

72:                                               ; preds = %20
  %73 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %74 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %212, label %78

78:                                               ; preds = %72
  %79 = add nsw i32 %76, -1
  %80 = insertelement <4 x i32> undef, i32 %79, i32 0
  %81 = shufflevector <4 x i32> %80, <4 x i32> undef, <4 x i32> zeroinitializer
  %82 = insertelement <4 x i32> undef, i32 %79, i32 0
  %83 = shufflevector <4 x i32> %82, <4 x i32> undef, <4 x i32> zeroinitializer
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 0
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %85, align 4
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %87, align 4
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 8
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %89, align 4
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 12
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %91, align 4
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 16
  %93 = bitcast i32* %92 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %93, align 4
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 20
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %95, align 4
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 24
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %97, align 4
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 28
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %99, align 4
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 32
  %101 = bitcast i32* %100 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %101, align 4
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 36
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %103, align 4
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 40
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %105, align 4
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 44
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %107, align 4
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 48
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %109, align 4
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 52
  %111 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %111, align 4
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 56
  %113 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %113, align 4
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 60
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %115, align 4
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 64
  %117 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %117, align 4
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 68
  %119 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %119, align 4
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 72
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %121, align 4
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 76
  %123 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %123, align 4
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 80
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %125, align 4
  %126 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 84
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %127, align 4
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 88
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 92
  %131 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 96
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %133, align 4
  %134 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 100
  %135 = bitcast i32* %134 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %135, align 4
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 104
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %137, align 4
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 108
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %139, align 4
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 112
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %141, align 4
  %142 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 116
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %143, align 4
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 120
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %145, align 4
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 124
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %147, align 4
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 128
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %149, align 4
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 132
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %151, align 4
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 136
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %153, align 4
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 140
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %155, align 4
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 144
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %157, align 4
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 148
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %159, align 4
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 152
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %161, align 4
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 156
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %163, align 4
  %164 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 160
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %165, align 4
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 164
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %167, align 4
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 168
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %169, align 4
  %170 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 172
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %171, align 4
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 176
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %173, align 4
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 180
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %175, align 4
  %176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 184
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %177, align 4
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 188
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %179, align 4
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 192
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %181, align 4
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 196
  %183 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %183, align 4
  %184 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 200
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %185, align 4
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 204
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %187, align 4
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 208
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %189, align 4
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 212
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %191, align 4
  %192 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 216
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %193, align 4
  %194 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 220
  %195 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %195, align 4
  %196 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 224
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %197, align 4
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 228
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %199, align 4
  %200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 232
  %201 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %201, align 4
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 236
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %203, align 4
  %204 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 240
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %205, align 4
  %206 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 244
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %207, align 4
  %208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 248
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %209, align 4
  %210 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 252
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %211, align 4
  br label %215

212:                                              ; preds = %72
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 0
  %214 = bitcast i32* %213 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %214, i8 -1, i64 1024, i1 false) #13
  br label %215

215:                                              ; preds = %78, %212
  %216 = add i32 %9, -1
  %217 = icmp slt i32 %76, %216
  br i1 %217, label %218, label %272

218:                                              ; preds = %215
  %219 = sext i32 %76 to i64
  %220 = sext i32 %216 to i64
  %221 = sub nsw i64 %220, %219
  %222 = xor i64 %219, -1
  %223 = add nsw i64 %222, %220
  %224 = and i64 %221, 3
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %238, label %226

226:                                              ; preds = %218, %226
  %227 = phi i64 [ %235, %226 ], [ %219, %218 ]
  %228 = phi i64 [ %236, %226 ], [ %224, %218 ]
  %229 = load i8*, i8** %5, align 8
  %230 = getelementptr inbounds i8, i8* %229, i64 %227
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %232
  %234 = trunc i64 %227 to i32
  store i32 %234, i32* %233, align 4
  %235 = add nsw i64 %227, 1
  %236 = add i64 %228, -1
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %226, !llvm.loop !4

238:                                              ; preds = %226, %218
  %239 = phi i64 [ %219, %218 ], [ %235, %226 ]
  %240 = icmp ult i64 %223, 3
  br i1 %240, label %272, label %241

241:                                              ; preds = %238, %241
  %242 = phi i64 [ %270, %241 ], [ %239, %238 ]
  %243 = load i8*, i8** %5, align 8
  %244 = getelementptr inbounds i8, i8* %243, i64 %242
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %246
  %248 = trunc i64 %242 to i32
  store i32 %248, i32* %247, align 4
  %249 = add nsw i64 %242, 1
  %250 = load i8*, i8** %5, align 8
  %251 = getelementptr inbounds i8, i8* %250, i64 %249
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %253
  %255 = trunc i64 %249 to i32
  store i32 %255, i32* %254, align 4
  %256 = add nsw i64 %242, 2
  %257 = load i8*, i8** %5, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 %256
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i64
  %261 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %260
  %262 = trunc i64 %256 to i32
  store i32 %262, i32* %261, align 4
  %263 = add nsw i64 %242, 3
  %264 = load i8*, i8** %5, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 %263
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i64
  %268 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %267
  %269 = trunc i64 %263 to i32
  store i32 %269, i32* %268, align 4
  %270 = add nsw i64 %242, 4
  %271 = icmp eq i64 %270, %220
  br i1 %271, label %272, label %241

272:                                              ; preds = %238, %241, %215
  %273 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %273, align 8
  %274 = tail call i32 @_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"* %0, i8* %1, i64 %2, i32 %22)
  br label %281

275:                                              ; preds = %69
  %276 = add nsw i32 %23, %70
  %277 = add nsw i32 %49, 1
  %278 = icmp sgt i32 %11, %49
  br i1 %278, label %20, label %281

279:                                              ; preds = %69
  %280 = trunc i64 %38 to i32
  br label %281

281:                                              ; preds = %48, %275, %45, %28, %279, %4, %272
  %282 = phi i32 [ %274, %272 ], [ -1, %4 ], [ %280, %279 ], [ -1, %28 ], [ -1, %45 ], [ -1, %275 ], [ -1, %48 ]
  ret i32 %282
}

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = sub nsw i32 %13, %19
  %21 = sub nsw i32 %9, %10
  %22 = add i32 %10, -2
  %23 = icmp sgt i32 %22, -1
  %24 = sub i32 %10, %20
  br i1 %23, label %25, label %68

25:                                               ; preds = %4
  %26 = sub nsw i32 0, %10
  %27 = sext i32 %22 to i64
  br label %28

28:                                               ; preds = %25, %57
  %29 = phi i32 [ %59, %57 ], [ %3, %25 ]
  %30 = phi i32 [ %61, %57 ], [ %26, %25 ]
  %31 = icmp sgt i32 %29, %21
  br i1 %31, label %173, label %32

32:                                               ; preds = %28, %40
  %33 = phi i32 [ %45, %40 ], [ %29, %28 ]
  %34 = phi i32 [ %47, %40 ], [ %30, %28 ]
  %35 = add nsw i32 %33, %13
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %16, %38
  br i1 %39, label %66, label %40

40:                                               ; preds = %32
  %41 = zext i8 %38 to i64
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 %13, %43
  %45 = add nsw i32 %44, %33
  %46 = add i32 %34, 1
  %47 = sub i32 %46, %44
  %48 = icmp sgt i32 %45, %21
  br i1 %48, label %173, label %32

49:                                               ; preds = %66, %63
  %50 = phi i64 [ %27, %66 ], [ %64, %63 ]
  %51 = getelementptr inbounds i8, i8* %6, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = add nsw i64 %50, %67
  %54 = getelementptr inbounds i8, i8* %1, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %52, %55
  br i1 %56, label %63, label %57

57:                                               ; preds = %49
  %58 = trunc i64 %50 to i32
  %59 = add nsw i32 %33, %20
  %60 = add i32 %24, %34
  %61 = sub i32 %60, %58
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %84, label %28

63:                                               ; preds = %49
  %64 = add nsw i64 %50, -1
  %65 = icmp sgt i64 %50, 0
  br i1 %65, label %49, label %173

66:                                               ; preds = %32
  %67 = sext i32 %33 to i64
  br label %49

68:                                               ; preds = %4
  %69 = icmp slt i32 %21, %3
  br i1 %69, label %173, label %70

70:                                               ; preds = %68, %77
  %71 = phi i32 [ %82, %77 ], [ %3, %68 ]
  %72 = add nsw i32 %71, %13
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %1, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %16, %75
  br i1 %76, label %173, label %77

77:                                               ; preds = %70
  %78 = zext i8 %75 to i64
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = sub nsw i32 %13, %80
  %82 = add nsw i32 %81, %71
  %83 = icmp sgt i32 %82, %21
  br i1 %83, label %173, label %70

84:                                               ; preds = %57
  tail call void @_ZN2v88internal12StringSearchIhhE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch"* %0)
  %85 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %85, align 8
  %86 = load i8*, i8** %5, align 8
  %87 = load i64, i64* %7, align 8
  %88 = trunc i64 %87 to i32
  %89 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %92 = sext i32 %90 to i64
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 122, i64 %93
  %95 = add nsw i32 %88, -1
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %86, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = sub nsw i32 %9, %88
  %100 = icmp slt i32 %99, %59
  br i1 %100, label %173, label %101

101:                                              ; preds = %84
  %102 = icmp sgt i32 %88, 0
  %103 = zext i8 %98 to i64
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %103
  br i1 %102, label %105, label %159

105:                                              ; preds = %101
  %106 = shl i64 %87, 32
  %107 = ashr exact i64 %106, 32
  br label %108

108:                                              ; preds = %122, %105
  %109 = phi i32 [ %59, %105 ], [ %123, %122 ]
  %110 = add nsw i32 %109, %95
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %1, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = icmp eq i8 %98, %113
  br i1 %114, label %157, label %115

115:                                              ; preds = %108
  %116 = zext i8 %113 to i64
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = sub nsw i32 %95, %118
  %120 = add nsw i32 %119, %109
  %121 = icmp sgt i32 %120, %99
  br i1 %121, label %173, label %122

122:                                              ; preds = %115, %151
  %123 = phi i32 [ %120, %115 ], [ %153, %151 ]
  br label %108

124:                                              ; preds = %157, %155
  %125 = phi i64 [ %107, %157 ], [ %126, %155 ]
  %126 = add nsw i64 %125, -1
  %127 = getelementptr inbounds i8, i8* %86, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = add nsw i64 %126, %158
  %130 = getelementptr inbounds i8, i8* %1, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %128, %131
  br i1 %132, label %155, label %133

133:                                              ; preds = %124
  %134 = trunc i64 %126 to i32
  %135 = icmp sgt i32 %90, %134
  br i1 %135, label %148, label %136

136:                                              ; preds = %133
  %137 = shl i64 %126, 32
  %138 = add i64 %137, 4294967296
  %139 = ashr exact i64 %138, 32
  %140 = getelementptr inbounds i32, i32* %94, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = zext i8 %131 to i64
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = sub nsw i32 %134, %144
  %146 = icmp sgt i32 %141, %145
  %147 = select i1 %146, i32 %141, i32 %145
  br label %151

148:                                              ; preds = %133
  %149 = load i32, i32* %104, align 4
  %150 = sub nsw i32 %95, %149
  br label %151

151:                                              ; preds = %148, %136
  %152 = phi i32 [ %150, %148 ], [ %147, %136 ]
  %153 = add nsw i32 %152, %109
  %154 = icmp sgt i32 %153, %99
  br i1 %154, label %173, label %122

155:                                              ; preds = %124
  %156 = icmp sgt i64 %126, 0
  br i1 %156, label %124, label %173

157:                                              ; preds = %108
  %158 = sext i32 %109 to i64
  br label %124

159:                                              ; preds = %101, %166
  %160 = phi i32 [ %171, %166 ], [ %59, %101 ]
  %161 = add nsw i32 %160, %95
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i8, i8* %1, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = icmp eq i8 %98, %164
  br i1 %165, label %173, label %166

166:                                              ; preds = %159
  %167 = zext i8 %164 to i64
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = sub nsw i32 %95, %169
  %171 = add nsw i32 %170, %160
  %172 = icmp sgt i32 %171, %99
  br i1 %172, label %173, label %159

173:                                              ; preds = %77, %70, %28, %40, %63, %166, %159, %151, %115, %155, %68, %84
  %174 = phi i32 [ -1, %84 ], [ -1, %68 ], [ %109, %155 ], [ -1, %115 ], [ -1, %151 ], [ %160, %159 ], [ -1, %166 ], [ %33, %63 ], [ -1, %40 ], [ -1, %28 ], [ %71, %70 ], [ -1, %77 ]
  ret i32 %174
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIhhE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !6

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !8

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !9

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i8, i8* %6, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %6, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %6, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i8, i8* %6, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %6, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %96, label %24

24:                                               ; preds = %4
  %25 = icmp sgt i32 %10, 0
  %26 = zext i8 %21 to i64
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %26
  br i1 %25, label %28, label %82

28:                                               ; preds = %24
  %29 = shl i64 %8, 32
  %30 = ashr exact i64 %29, 32
  br label %31

31:                                               ; preds = %45, %28
  %32 = phi i32 [ %3, %28 ], [ %46, %45 ]
  %33 = add nsw i32 %32, %18
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %1, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %21, %36
  br i1 %37, label %80, label %38

38:                                               ; preds = %31
  %39 = zext i8 %36 to i64
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = sub nsw i32 %18, %41
  %43 = add nsw i32 %42, %32
  %44 = icmp sgt i32 %43, %22
  br i1 %44, label %96, label %45

45:                                               ; preds = %38, %74
  %46 = phi i32 [ %43, %38 ], [ %76, %74 ]
  br label %31

47:                                               ; preds = %80, %78
  %48 = phi i64 [ %30, %80 ], [ %49, %78 ]
  %49 = add i64 %48, -1
  %50 = getelementptr inbounds i8, i8* %6, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = add nsw i64 %49, %81
  %53 = getelementptr inbounds i8, i8* %1, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %51, %54
  br i1 %55, label %78, label %56

56:                                               ; preds = %47
  %57 = trunc i64 %49 to i32
  %58 = icmp sgt i32 %12, %57
  br i1 %58, label %71, label %59

59:                                               ; preds = %56
  %60 = shl i64 %49, 32
  %61 = add i64 %60, 4294967296
  %62 = ashr exact i64 %61, 32
  %63 = getelementptr inbounds i32, i32* %17, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = zext i8 %54 to i64
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = sub nsw i32 %57, %67
  %69 = icmp sgt i32 %64, %68
  %70 = select i1 %69, i32 %64, i32 %68
  br label %74

71:                                               ; preds = %56
  %72 = load i32, i32* %27, align 4
  %73 = sub nsw i32 %18, %72
  br label %74

74:                                               ; preds = %71, %59
  %75 = phi i32 [ %73, %71 ], [ %70, %59 ]
  %76 = add nsw i32 %75, %32
  %77 = icmp sgt i32 %76, %22
  br i1 %77, label %96, label %45

78:                                               ; preds = %47
  %79 = icmp sgt i64 %49, 0
  br i1 %79, label %47, label %96

80:                                               ; preds = %31
  %81 = sext i32 %32 to i64
  br label %47

82:                                               ; preds = %24, %89
  %83 = phi i32 [ %94, %89 ], [ %3, %24 ]
  %84 = add nsw i32 %83, %18
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %1, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %21, %87
  br i1 %88, label %96, label %89

89:                                               ; preds = %82
  %90 = zext i8 %87 to i64
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = sub nsw i32 %18, %92
  %94 = add nsw i32 %93, %83
  %95 = icmp sgt i32 %94, %22
  br i1 %95, label %96, label %82

96:                                               ; preds = %89, %82, %74, %38, %78, %4
  %97 = phi i32 [ -1, %4 ], [ %32, %78 ], [ -1, %38 ], [ -1, %74 ], [ %83, %82 ], [ -1, %89 ]
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE16SingleCharSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = load i8, i8* %6, align 1
  %10 = trunc i64 %2 to i32
  %11 = trunc i64 %8 to i32
  %12 = sub nsw i32 %10, %11
  %13 = add nsw i32 %12, 1
  %14 = icmp eq i8 %9, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %4
  %16 = zext i8 %9 to i32
  %17 = ptrtoint i16* %1 to i64
  br label %33

18:                                               ; preds = %4
  %19 = icmp slt i32 %12, %3
  br i1 %19, label %60, label %20

20:                                               ; preds = %18
  %21 = sext i32 %3 to i64
  %22 = sext i32 %12 to i64
  br label %23

23:                                               ; preds = %28, %20
  %24 = phi i64 [ %21, %20 ], [ %29, %28 ]
  %25 = getelementptr inbounds i16, i16* %1, i64 %24
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = add nsw i64 %24, 1
  %30 = icmp slt i64 %24, %22
  br i1 %30, label %23, label %60

31:                                               ; preds = %23
  %32 = trunc i64 %24 to i32
  br label %60

33:                                               ; preds = %55, %15
  %34 = phi i32 [ %56, %55 ], [ %3, %15 ]
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  %37 = bitcast i16* %36 to i8*
  %38 = sub i32 %13, %34
  %39 = sext i32 %38 to i64
  %40 = shl nsw i64 %39, 1
  %41 = tail call i8* @memchr(i8* %37, i32 %16, i64 %40) #14
  %42 = icmp eq i8* %41, null
  br i1 %42, label %60, label %43

43:                                               ; preds = %33
  %44 = ptrtoint i8* %41 to i64
  %45 = and i64 %44, -2
  %46 = sub i64 %45, %17
  %47 = lshr exact i64 %46, 1
  %48 = trunc i64 %47 to i32
  %49 = shl i64 %46, 31
  %50 = ashr exact i64 %49, 32
  %51 = getelementptr inbounds i16, i16* %1, i64 %50
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i32
  %54 = icmp eq i32 %53, %16
  br i1 %54, label %58, label %55

55:                                               ; preds = %43
  %56 = add nsw i32 %48, 1
  %57 = icmp sgt i32 %12, %48
  br i1 %57, label %33, label %60

58:                                               ; preds = %43
  %59 = trunc i64 %47 to i32
  br label %60

60:                                               ; preds = %33, %55, %28, %58, %18, %31
  %61 = phi i32 [ -1, %18 ], [ %32, %31 ], [ %59, %58 ], [ -1, %28 ], [ -1, %55 ], [ -1, %33 ]
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE12LinearSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %108, label %13

13:                                               ; preds = %4
  %14 = load i8, i8* %6, align 1
  %15 = add nsw i32 %11, 1
  %16 = icmp eq i8 %14, 0
  %17 = zext i8 %14 to i32
  %18 = ptrtoint i16* %1 to i64
  %19 = sext i32 %11 to i64
  %20 = getelementptr inbounds i8, i8* %6, i64 1
  %21 = shl i64 %8, 32
  %22 = add i64 %21, -4294967296
  %23 = ashr exact i64 %22, 32
  br i1 %16, label %24, label %58

24:                                               ; preds = %13, %54
  %25 = phi i32 [ %39, %54 ], [ %3, %13 ]
  %26 = sext i32 %25 to i64
  br label %27

27:                                               ; preds = %32, %24
  %28 = phi i64 [ %26, %24 ], [ %33, %32 ]
  %29 = getelementptr inbounds i16, i16* %1, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = add nsw i64 %28, 1
  %34 = icmp slt i64 %28, %19
  br i1 %34, label %27, label %108

35:                                               ; preds = %27
  %36 = trunc i64 %28 to i32
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %108, label %38

38:                                               ; preds = %35
  %39 = add nuw nsw i32 %36, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %1, i64 %40
  br label %42

42:                                               ; preds = %51, %38
  %43 = phi i64 [ %52, %51 ], [ 0, %38 ]
  %44 = getelementptr inbounds i8, i8* %20, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds i16, i16* %41, i64 %43
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = icmp eq i32 %46, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %42
  %52 = add nuw nsw i64 %43, 1
  %53 = icmp slt i64 %52, %23
  br i1 %53, label %42, label %104

54:                                               ; preds = %42
  %55 = icmp sgt i32 %11, %36
  br i1 %55, label %24, label %108

56:                                               ; preds = %92
  %57 = icmp sgt i32 %11, %86
  br i1 %57, label %83, label %108

58:                                               ; preds = %13, %83
  %59 = phi i32 [ %84, %83 ], [ %3, %13 ]
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i16, i16* %1, i64 %60
  %62 = bitcast i16* %61 to i8*
  %63 = sub i32 %15, %59
  %64 = sext i32 %63 to i64
  %65 = shl nsw i64 %64, 1
  %66 = tail call i8* @memchr(i8* %62, i32 %17, i64 %65) #14
  %67 = icmp eq i8* %66, null
  br i1 %67, label %108, label %68

68:                                               ; preds = %58
  %69 = ptrtoint i8* %66 to i64
  %70 = and i64 %69, -2
  %71 = sub i64 %70, %18
  %72 = lshr exact i64 %71, 1
  %73 = trunc i64 %72 to i32
  %74 = shl i64 %71, 31
  %75 = ashr exact i64 %74, 32
  %76 = getelementptr inbounds i16, i16* %1, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  %79 = icmp eq i32 %78, %17
  br i1 %79, label %85, label %80

80:                                               ; preds = %68
  %81 = add nsw i32 %73, 1
  %82 = icmp sgt i32 %11, %73
  br i1 %82, label %83, label %108

83:                                               ; preds = %80, %56
  %84 = phi i32 [ %81, %80 ], [ %89, %56 ]
  br label %58

85:                                               ; preds = %68
  %86 = trunc i64 %72 to i32
  %87 = icmp eq i32 %86, -1
  br i1 %87, label %108, label %88

88:                                               ; preds = %85
  %89 = add nuw nsw i32 %86, 1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i16, i16* %1, i64 %90
  br label %92

92:                                               ; preds = %101, %88
  %93 = phi i64 [ %102, %101 ], [ 0, %88 ]
  %94 = getelementptr inbounds i8, i8* %20, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = getelementptr inbounds i16, i16* %91, i64 %93
  %98 = load i16, i16* %97, align 2
  %99 = zext i16 %98 to i32
  %100 = icmp eq i32 %96, %99
  br i1 %100, label %101, label %56

101:                                              ; preds = %92
  %102 = add nuw nsw i64 %93, 1
  %103 = icmp slt i64 %102, %23
  br i1 %103, label %92, label %106

104:                                              ; preds = %51
  %105 = trunc i64 %28 to i32
  br label %108

106:                                              ; preds = %101
  %107 = trunc i64 %72 to i32
  br label %108

108:                                              ; preds = %56, %85, %80, %58, %54, %35, %32, %106, %104, %4
  %109 = phi i32 [ -1, %4 ], [ %105, %104 ], [ %107, %106 ], [ -1, %32 ], [ -1, %35 ], [ -1, %54 ], [ -1, %58 ], [ -1, %80 ], [ -1, %85 ], [ -1, %56 ]
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE13InitialSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %302, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i16* %1 to i64
  %18 = sext i32 %11 to i64
  %19 = shl i64 %8, 32
  %20 = ashr exact i64 %19, 32
  br label %21

21:                                               ; preds = %296, %13
  %22 = phi i32 [ %15, %13 ], [ %297, %296 ]
  %23 = phi i32 [ %3, %13 ], [ %298, %296 ]
  %24 = add nsw i32 %22, 1
  %25 = icmp slt i32 %22, 0
  br i1 %25, label %26, label %93

26:                                               ; preds = %21
  %27 = load i8, i8* %6, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  %30 = zext i8 %27 to i32
  br label %41

31:                                               ; preds = %26
  %32 = sext i32 %23 to i64
  br label %33

33:                                               ; preds = %38, %31
  %34 = phi i64 [ %32, %31 ], [ %39, %38 ]
  %35 = getelementptr inbounds i16, i16* %1, i64 %34
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %66, label %38

38:                                               ; preds = %33
  %39 = add nsw i64 %34, 1
  %40 = icmp slt i64 %34, %18
  br i1 %40, label %33, label %302

41:                                               ; preds = %63, %29
  %42 = phi i32 [ %64, %63 ], [ %23, %29 ]
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i16, i16* %1, i64 %43
  %45 = bitcast i16* %44 to i8*
  %46 = sub i32 %16, %42
  %47 = sext i32 %46 to i64
  %48 = shl nsw i64 %47, 1
  %49 = tail call i8* @memchr(i8* %45, i32 %30, i64 %48) #14
  %50 = icmp eq i8* %49, null
  br i1 %50, label %302, label %51

51:                                               ; preds = %41
  %52 = ptrtoint i8* %49 to i64
  %53 = and i64 %52, -2
  %54 = sub i64 %53, %17
  %55 = lshr exact i64 %54, 1
  %56 = trunc i64 %55 to i32
  %57 = shl i64 %54, 31
  %58 = ashr exact i64 %57, 32
  %59 = getelementptr inbounds i16, i16* %1, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = icmp eq i32 %61, %30
  br i1 %62, label %66, label %63

63:                                               ; preds = %51
  %64 = add nsw i32 %56, 1
  %65 = icmp sgt i32 %11, %56
  br i1 %65, label %41, label %302

66:                                               ; preds = %51, %33
  %67 = phi i64 [ %34, %33 ], [ %55, %51 ]
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %302, label %70

70:                                               ; preds = %66
  %71 = shl i64 %67, 32
  %72 = ashr exact i64 %71, 32
  br label %73

73:                                               ; preds = %70, %84
  %74 = phi i64 [ 1, %70 ], [ %85, %84 ]
  %75 = phi i32 [ 1, %70 ], [ %86, %84 ]
  %76 = getelementptr inbounds i8, i8* %6, i64 %74
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = add nsw i64 %74, %72
  %80 = getelementptr inbounds i16, i16* %1, i64 %79
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = icmp eq i32 %78, %82
  br i1 %83, label %84, label %88

84:                                               ; preds = %73
  %85 = add nuw nsw i64 %74, 1
  %86 = add nuw nsw i32 %75, 1
  %87 = icmp slt i64 %85, %20
  br i1 %87, label %73, label %90

88:                                               ; preds = %73
  %89 = trunc i64 %74 to i32
  br label %90

90:                                               ; preds = %84, %88
  %91 = phi i32 [ %89, %88 ], [ %86, %84 ]
  %92 = icmp eq i32 %91, %9
  br i1 %92, label %300, label %296

93:                                               ; preds = %21
  %94 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 0
  %95 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %233, label %99

99:                                               ; preds = %93
  %100 = add nsw i32 %97, -1
  %101 = insertelement <4 x i32> undef, i32 %100, i32 0
  %102 = shufflevector <4 x i32> %101, <4 x i32> undef, <4 x i32> zeroinitializer
  %103 = insertelement <4 x i32> undef, i32 %100, i32 0
  %104 = shufflevector <4 x i32> %103, <4 x i32> undef, <4 x i32> zeroinitializer
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 0
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %106, align 4
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 4
  %108 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 8
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %110, align 4
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 12
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %112, align 4
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 16
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %114, align 4
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 20
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %116, align 4
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 24
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %118, align 4
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 28
  %120 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %120, align 4
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 32
  %122 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %122, align 4
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 36
  %124 = bitcast i32* %123 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %124, align 4
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 40
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %126, align 4
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 44
  %128 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %128, align 4
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 48
  %130 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %130, align 4
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 52
  %132 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %132, align 4
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 56
  %134 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %134, align 4
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 60
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %136, align 4
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 64
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %138, align 4
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 68
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %140, align 4
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 72
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %142, align 4
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 76
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %144, align 4
  %145 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 80
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %146, align 4
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 84
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %148, align 4
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 88
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %150, align 4
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 92
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %152, align 4
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 96
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %154, align 4
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 100
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %156, align 4
  %157 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 104
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %158, align 4
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 108
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %160, align 4
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 112
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %162, align 4
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 116
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %164, align 4
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 120
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %166, align 4
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 124
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %168, align 4
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 128
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %170, align 4
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 132
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %172, align 4
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 136
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %174, align 4
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 140
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %176, align 4
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 144
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %178, align 4
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 148
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %180, align 4
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 152
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %182, align 4
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 156
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %184, align 4
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 160
  %186 = bitcast i32* %185 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %186, align 4
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 164
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %188, align 4
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 168
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %190, align 4
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 172
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %192, align 4
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 176
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %194, align 4
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 180
  %196 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %196, align 4
  %197 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 184
  %198 = bitcast i32* %197 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %198, align 4
  %199 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 188
  %200 = bitcast i32* %199 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %200, align 4
  %201 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 192
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %202, align 4
  %203 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 196
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %204, align 4
  %205 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 200
  %206 = bitcast i32* %205 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %206, align 4
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 204
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %208, align 4
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 208
  %210 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %210, align 4
  %211 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 212
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %212, align 4
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 216
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %214, align 4
  %215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 220
  %216 = bitcast i32* %215 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %216, align 4
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 224
  %218 = bitcast i32* %217 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %218, align 4
  %219 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 228
  %220 = bitcast i32* %219 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %220, align 4
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 232
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %222, align 4
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 236
  %224 = bitcast i32* %223 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %224, align 4
  %225 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 240
  %226 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %226, align 4
  %227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 244
  %228 = bitcast i32* %227 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %228, align 4
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 248
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %230, align 4
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 252
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %232, align 4
  br label %236

233:                                              ; preds = %93
  %234 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 0
  %235 = bitcast i32* %234 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %235, i8 -1, i64 1024, i1 false) #13
  br label %236

236:                                              ; preds = %99, %233
  %237 = add i32 %9, -1
  %238 = icmp slt i32 %97, %237
  br i1 %238, label %239, label %293

239:                                              ; preds = %236
  %240 = sext i32 %97 to i64
  %241 = sext i32 %237 to i64
  %242 = sub nsw i64 %241, %240
  %243 = xor i64 %240, -1
  %244 = add nsw i64 %243, %241
  %245 = and i64 %242, 3
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %259, label %247

247:                                              ; preds = %239, %247
  %248 = phi i64 [ %256, %247 ], [ %240, %239 ]
  %249 = phi i64 [ %257, %247 ], [ %245, %239 ]
  %250 = load i8*, i8** %5, align 8
  %251 = getelementptr inbounds i8, i8* %250, i64 %248
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %253
  %255 = trunc i64 %248 to i32
  store i32 %255, i32* %254, align 4
  %256 = add nsw i64 %248, 1
  %257 = add i64 %249, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %247, !llvm.loop !11

259:                                              ; preds = %247, %239
  %260 = phi i64 [ %240, %239 ], [ %256, %247 ]
  %261 = icmp ult i64 %244, 3
  br i1 %261, label %293, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %291, %262 ], [ %260, %259 ]
  %264 = load i8*, i8** %5, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 %263
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i64
  %268 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %267
  %269 = trunc i64 %263 to i32
  store i32 %269, i32* %268, align 4
  %270 = add nsw i64 %263, 1
  %271 = load i8*, i8** %5, align 8
  %272 = getelementptr inbounds i8, i8* %271, i64 %270
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %273 to i64
  %275 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %274
  %276 = trunc i64 %270 to i32
  store i32 %276, i32* %275, align 4
  %277 = add nsw i64 %263, 2
  %278 = load i8*, i8** %5, align 8
  %279 = getelementptr inbounds i8, i8* %278, i64 %277
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i64
  %282 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %281
  %283 = trunc i64 %277 to i32
  store i32 %283, i32* %282, align 4
  %284 = add nsw i64 %263, 3
  %285 = load i8*, i8** %5, align 8
  %286 = getelementptr inbounds i8, i8* %285, i64 %284
  %287 = load i8, i8* %286, align 1
  %288 = zext i8 %287 to i64
  %289 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %288
  %290 = trunc i64 %284 to i32
  store i32 %290, i32* %289, align 4
  %291 = add nsw i64 %263, 4
  %292 = icmp eq i64 %291, %241
  br i1 %292, label %293, label %262

293:                                              ; preds = %259, %262, %236
  %294 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32)** %294, align 8
  %295 = tail call i32 @_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1293"* %0, i16* %1, i64 %2, i32 %23)
  br label %302

296:                                              ; preds = %90
  %297 = add nsw i32 %24, %91
  %298 = add nsw i32 %68, 1
  %299 = icmp sgt i32 %11, %68
  br i1 %299, label %21, label %302

300:                                              ; preds = %90
  %301 = trunc i64 %67 to i32
  br label %302

302:                                              ; preds = %300, %66, %296, %63, %41, %38, %4, %293
  %303 = phi i32 [ %295, %293 ], [ -1, %4 ], [ -1, %38 ], [ -1, %41 ], [ -1, %63 ], [ %301, %300 ], [ -1, %66 ], [ -1, %296 ]
  ret i32 %303
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = sub nsw i32 %13, %19
  %21 = sub nsw i32 %9, %10
  %22 = zext i8 %16 to i32
  %23 = add i32 %10, -2
  %24 = icmp sgt i32 %23, -1
  %25 = sub i32 %10, %20
  br i1 %24, label %26, label %76

26:                                               ; preds = %4
  %27 = sub nsw i32 0, %10
  %28 = sext i32 %23 to i64
  br label %29

29:                                               ; preds = %26, %65
  %30 = phi i32 [ %67, %65 ], [ %3, %26 ]
  %31 = phi i32 [ %69, %65 ], [ %27, %26 ]
  %32 = icmp sgt i32 %30, %21
  br i1 %32, label %100, label %33

33:                                               ; preds = %29, %48
  %34 = phi i32 [ %51, %48 ], [ %30, %29 ]
  %35 = phi i32 [ %53, %48 ], [ %31, %29 ]
  %36 = add nsw i32 %34, %13
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i16, i16* %1, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = icmp eq i32 %22, %40
  br i1 %41, label %74, label %42

42:                                               ; preds = %33
  %43 = icmp ugt i16 %39, 255
  br i1 %43, label %48, label %44

44:                                               ; preds = %42
  %45 = zext i16 %39 to i64
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %45
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %44, %42
  %49 = phi i32 [ %47, %44 ], [ -1, %42 ]
  %50 = sub nsw i32 %13, %49
  %51 = add nsw i32 %50, %34
  %52 = add i32 %35, 1
  %53 = sub i32 %52, %50
  %54 = icmp sgt i32 %51, %21
  br i1 %54, label %100, label %33

55:                                               ; preds = %74, %71
  %56 = phi i64 [ %28, %74 ], [ %72, %71 ]
  %57 = getelementptr inbounds i8, i8* %6, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = add nsw i64 %56, %75
  %61 = getelementptr inbounds i16, i16* %1, i64 %60
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  %64 = icmp eq i32 %59, %63
  br i1 %64, label %71, label %65

65:                                               ; preds = %55
  %66 = trunc i64 %56 to i32
  %67 = add nsw i32 %34, %20
  %68 = add i32 %25, %35
  %69 = sub i32 %68, %66
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %97, label %29

71:                                               ; preds = %55
  %72 = add nsw i64 %56, -1
  %73 = icmp sgt i64 %56, 0
  br i1 %73, label %55, label %100

74:                                               ; preds = %33
  %75 = sext i32 %34 to i64
  br label %55

76:                                               ; preds = %4
  %77 = icmp slt i32 %21, %3
  br i1 %77, label %100, label %78

78:                                               ; preds = %76, %92
  %79 = phi i32 [ %95, %92 ], [ %3, %76 ]
  %80 = add nsw i32 %79, %13
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i16, i16* %1, i64 %81
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = icmp eq i32 %22, %84
  br i1 %85, label %100, label %86

86:                                               ; preds = %78
  %87 = icmp ugt i16 %83, 255
  br i1 %87, label %92, label %88

88:                                               ; preds = %86
  %89 = zext i16 %83 to i64
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %89
  %91 = load i32, i32* %90, align 4
  br label %92

92:                                               ; preds = %86, %88
  %93 = phi i32 [ %91, %88 ], [ -1, %86 ]
  %94 = sub nsw i32 %13, %93
  %95 = add nsw i32 %94, %79
  %96 = icmp sgt i32 %95, %21
  br i1 %96, label %100, label %78

97:                                               ; preds = %65
  tail call void @_ZN2v88internal12StringSearchIhtE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1293"* %0)
  %98 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32)** %98, align 8
  %99 = tail call i32 @_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1293"* %0, i16* %1, i64 %2, i32 %67)
  br label %100

100:                                              ; preds = %92, %78, %29, %48, %71, %76, %97
  %101 = phi i32 [ %99, %97 ], [ -1, %76 ], [ %34, %71 ], [ -1, %48 ], [ -1, %29 ], [ %79, %78 ], [ -1, %92 ]
  ret i32 %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIhtE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1293"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !12

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !13

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !14

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i8, i8* %6, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %6, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %6, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i8, i8* %6, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1293"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1293", %"class.v8::internal::StringSearch.1293"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %6, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %113, label %24

24:                                               ; preds = %4
  %25 = zext i8 %21 to i32
  %26 = icmp sgt i32 %10, 0
  %27 = zext i8 %21 to i64
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %27
  br i1 %26, label %29, label %94

29:                                               ; preds = %24
  %30 = shl i64 %8, 32
  %31 = ashr exact i64 %30, 32
  br label %32

32:                                               ; preds = %51, %29
  %33 = phi i32 [ %3, %29 ], [ %52, %51 ]
  %34 = add nsw i32 %33, %18
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = icmp eq i32 %25, %38
  br i1 %39, label %92, label %40

40:                                               ; preds = %32
  %41 = icmp ugt i16 %37, 255
  br i1 %41, label %46, label %42

42:                                               ; preds = %40
  %43 = zext i16 %37 to i64
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %43
  %45 = load i32, i32* %44, align 4
  br label %46

46:                                               ; preds = %42, %40
  %47 = phi i32 [ %45, %42 ], [ -1, %40 ]
  %48 = sub nsw i32 %18, %47
  %49 = add nsw i32 %48, %33
  %50 = icmp sgt i32 %49, %22
  br i1 %50, label %113, label %51

51:                                               ; preds = %46, %86
  %52 = phi i32 [ %49, %46 ], [ %88, %86 ]
  br label %32

53:                                               ; preds = %92, %90
  %54 = phi i64 [ %31, %92 ], [ %55, %90 ]
  %55 = add i64 %54, -1
  %56 = getelementptr inbounds i8, i8* %6, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = add nsw i64 %55, %93
  %60 = getelementptr inbounds i16, i16* %1, i64 %59
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp eq i32 %58, %62
  br i1 %63, label %90, label %64

64:                                               ; preds = %53
  %65 = trunc i64 %55 to i32
  %66 = icmp sgt i32 %12, %65
  br i1 %66, label %83, label %67

67:                                               ; preds = %64
  %68 = shl i64 %55, 32
  %69 = add i64 %68, 4294967296
  %70 = ashr exact i64 %69, 32
  %71 = getelementptr inbounds i32, i32* %17, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = icmp ugt i16 %61, 255
  br i1 %73, label %78, label %74

74:                                               ; preds = %67
  %75 = zext i16 %61 to i64
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %75
  %77 = load i32, i32* %76, align 4
  br label %78

78:                                               ; preds = %74, %67
  %79 = phi i32 [ %77, %74 ], [ -1, %67 ]
  %80 = sub nsw i32 %65, %79
  %81 = icmp sgt i32 %72, %80
  %82 = select i1 %81, i32 %72, i32 %80
  br label %86

83:                                               ; preds = %64
  %84 = load i32, i32* %28, align 4
  %85 = sub nsw i32 %18, %84
  br label %86

86:                                               ; preds = %83, %78
  %87 = phi i32 [ %85, %83 ], [ %82, %78 ]
  %88 = add nsw i32 %87, %33
  %89 = icmp sgt i32 %88, %22
  br i1 %89, label %113, label %51

90:                                               ; preds = %53
  %91 = icmp sgt i64 %55, 0
  br i1 %91, label %53, label %113

92:                                               ; preds = %32
  %93 = sext i32 %33 to i64
  br label %53

94:                                               ; preds = %24, %108
  %95 = phi i32 [ %111, %108 ], [ %3, %24 ]
  %96 = add nsw i32 %95, %18
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i16, i16* %1, i64 %97
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = icmp eq i32 %25, %100
  br i1 %101, label %113, label %102

102:                                              ; preds = %94
  %103 = icmp ugt i16 %99, 255
  br i1 %103, label %108, label %104

104:                                              ; preds = %102
  %105 = zext i16 %99 to i64
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %105
  %107 = load i32, i32* %106, align 4
  br label %108

108:                                              ; preds = %102, %104
  %109 = phi i32 [ %107, %104 ], [ -1, %102 ]
  %110 = sub nsw i32 %18, %109
  %111 = add nsw i32 %110, %95
  %112 = icmp sgt i32 %111, %22
  br i1 %112, label %113, label %94

113:                                              ; preds = %108, %94, %86, %46, %90, %4
  %114 = phi i32 [ -1, %4 ], [ %33, %90 ], [ -1, %46 ], [ -1, %86 ], [ %95, %94 ], [ -1, %108 ]
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32) #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = load i16, i16* %6, align 2
  %8 = icmp ugt i16 %7, 255
  br i1 %8, label %48, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %2 to i32
  %13 = trunc i64 %11 to i32
  %14 = sub nsw i32 %12, %13
  %15 = add nsw i32 %14, 1
  %16 = trunc i16 %7 to i8
  %17 = lshr i16 %7, 8
  %18 = trunc i16 %17 to i8
  %19 = icmp ult i8 %16, %18
  %20 = select i1 %19, i8 %18, i8 %16
  %21 = zext i8 %20 to i32
  %22 = ptrtoint i8* %1 to i64
  %23 = and i16 %7, 255
  %24 = zext i16 %23 to i32
  br label %25

25:                                               ; preds = %43, %9
  %26 = phi i32 [ %3, %9 ], [ %44, %43 ]
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = sub i32 %15, %26
  %30 = sext i32 %29 to i64
  %31 = tail call i8* @memchr(i8* %28, i32 %21, i64 %30) #14
  %32 = icmp eq i8* %31, null
  br i1 %32, label %48, label %33

33:                                               ; preds = %25
  %34 = ptrtoint i8* %31 to i64
  %35 = sub i64 %34, %22
  %36 = trunc i64 %35 to i32
  %37 = shl i64 %35, 32
  %38 = ashr exact i64 %37, 32
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %41, %24
  br i1 %42, label %46, label %43

43:                                               ; preds = %33
  %44 = add nsw i32 %36, 1
  %45 = icmp sgt i32 %14, %36
  br i1 %45, label %25, label %48

46:                                               ; preds = %33
  %47 = trunc i64 %35 to i32
  br label %48

48:                                               ; preds = %43, %25, %46, %4
  %49 = phi i32 [ -1, %4 ], [ %47, %46 ], [ -1, %25 ], [ -1, %43 ]
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %75, label %13

13:                                               ; preds = %4
  %14 = load i16, i16* %6, align 2
  %15 = add nsw i32 %11, 1
  %16 = trunc i16 %14 to i8
  %17 = lshr i16 %14, 8
  %18 = trunc i16 %17 to i8
  %19 = icmp ult i8 %16, %18
  %20 = select i1 %19, i8 %18, i8 %16
  %21 = zext i8 %20 to i32
  %22 = ptrtoint i8* %1 to i64
  %23 = and i16 %14, 255
  %24 = zext i16 %23 to i32
  %25 = getelementptr inbounds i16, i16* %6, i64 1
  %26 = shl i64 %8, 32
  %27 = add i64 %26, -4294967296
  %28 = ashr exact i64 %27, 32
  br label %31

29:                                               ; preds = %61
  %30 = icmp sgt i32 %11, %55
  br i1 %30, label %52, label %75

31:                                               ; preds = %52, %13
  %32 = phi i32 [ %3, %13 ], [ %53, %52 ]
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = sub i32 %15, %32
  %36 = sext i32 %35 to i64
  %37 = tail call i8* @memchr(i8* %34, i32 %21, i64 %36) #14
  %38 = icmp eq i8* %37, null
  br i1 %38, label %75, label %39

39:                                               ; preds = %31
  %40 = ptrtoint i8* %37 to i64
  %41 = sub i64 %40, %22
  %42 = trunc i64 %41 to i32
  %43 = shl i64 %41, 32
  %44 = ashr exact i64 %43, 32
  %45 = getelementptr inbounds i8, i8* %1, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp eq i32 %47, %24
  br i1 %48, label %54, label %49

49:                                               ; preds = %39
  %50 = add nsw i32 %42, 1
  %51 = icmp sgt i32 %11, %42
  br i1 %51, label %52, label %75

52:                                               ; preds = %49, %29
  %53 = phi i32 [ %50, %49 ], [ %58, %29 ]
  br label %31

54:                                               ; preds = %39
  %55 = trunc i64 %41 to i32
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %75, label %57

57:                                               ; preds = %54
  %58 = add nuw nsw i32 %55, 1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %1, i64 %59
  br label %61

61:                                               ; preds = %70, %57
  %62 = phi i64 [ %71, %70 ], [ 0, %57 ]
  %63 = getelementptr inbounds i16, i16* %25, i64 %62
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = getelementptr inbounds i8, i8* %60, i64 %62
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = icmp eq i32 %65, %68
  br i1 %69, label %70, label %29

70:                                               ; preds = %61
  %71 = add nuw nsw i64 %62, 1
  %72 = icmp slt i64 %71, %28
  br i1 %72, label %61, label %73

73:                                               ; preds = %70
  %74 = trunc i64 %41 to i32
  br label %75

75:                                               ; preds = %29, %54, %49, %31, %73, %4
  %76 = phi i32 [ -1, %4 ], [ %74, %73 ], [ -1, %31 ], [ -1, %49 ], [ -1, %54 ], [ -1, %29 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %275, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i8* %1 to i64
  %18 = shl i64 %8, 32
  %19 = ashr exact i64 %18, 32
  br label %20

20:                                               ; preds = %269, %13
  %21 = phi i32 [ %15, %13 ], [ %270, %269 ]
  %22 = phi i32 [ %3, %13 ], [ %271, %269 ]
  %23 = add nsw i32 %21, 1
  %24 = icmp slt i32 %21, 0
  br i1 %24, label %25, label %82

25:                                               ; preds = %20
  %26 = load i16, i16* %6, align 2
  %27 = trunc i16 %26 to i8
  %28 = lshr i16 %26, 8
  %29 = trunc i16 %28 to i8
  %30 = icmp ult i8 %27, %29
  %31 = select i1 %30, i8 %29, i8 %27
  %32 = zext i8 %31 to i32
  %33 = and i16 %26, 255
  %34 = zext i16 %33 to i32
  br label %35

35:                                               ; preds = %53, %25
  %36 = phi i32 [ %22, %25 ], [ %54, %53 ]
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = sub i32 %16, %36
  %40 = sext i32 %39 to i64
  %41 = tail call i8* @memchr(i8* %38, i32 %32, i64 %40) #14
  %42 = icmp eq i8* %41, null
  br i1 %42, label %275, label %43

43:                                               ; preds = %35
  %44 = ptrtoint i8* %41 to i64
  %45 = sub i64 %44, %17
  %46 = trunc i64 %45 to i32
  %47 = shl i64 %45, 32
  %48 = ashr exact i64 %47, 32
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = icmp eq i32 %51, %34
  br i1 %52, label %56, label %53

53:                                               ; preds = %43
  %54 = add nsw i32 %46, 1
  %55 = icmp sgt i32 %11, %46
  br i1 %55, label %35, label %275

56:                                               ; preds = %43
  %57 = trunc i64 %45 to i32
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %275, label %59

59:                                               ; preds = %56
  %60 = shl i64 %45, 32
  %61 = ashr exact i64 %60, 32
  br label %62

62:                                               ; preds = %59, %73
  %63 = phi i64 [ 1, %59 ], [ %74, %73 ]
  %64 = phi i32 [ 1, %59 ], [ %75, %73 ]
  %65 = getelementptr inbounds i16, i16* %6, i64 %63
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = add nsw i64 %63, %61
  %69 = getelementptr inbounds i8, i8* %1, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = icmp eq i32 %67, %71
  br i1 %72, label %73, label %77

73:                                               ; preds = %62
  %74 = add nuw nsw i64 %63, 1
  %75 = add nuw nsw i32 %64, 1
  %76 = icmp slt i64 %74, %19
  br i1 %76, label %62, label %79

77:                                               ; preds = %62
  %78 = trunc i64 %63 to i32
  br label %79

79:                                               ; preds = %73, %77
  %80 = phi i32 [ %78, %77 ], [ %75, %73 ]
  %81 = icmp eq i32 %80, %9
  br i1 %81, label %273, label %269

82:                                               ; preds = %20
  %83 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 0
  %84 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %222, label %88

88:                                               ; preds = %82
  %89 = add nsw i32 %86, -1
  %90 = insertelement <4 x i32> undef, i32 %89, i32 0
  %91 = shufflevector <4 x i32> %90, <4 x i32> undef, <4 x i32> zeroinitializer
  %92 = insertelement <4 x i32> undef, i32 %89, i32 0
  %93 = shufflevector <4 x i32> %92, <4 x i32> undef, <4 x i32> zeroinitializer
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 0
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %95, align 4
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 8
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %99, align 4
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 12
  %101 = bitcast i32* %100 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %101, align 4
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 16
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %103, align 4
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 20
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %105, align 4
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 24
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %107, align 4
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 28
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %109, align 4
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 32
  %111 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %111, align 4
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 36
  %113 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %113, align 4
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 40
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %115, align 4
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 44
  %117 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %117, align 4
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 48
  %119 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %119, align 4
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 52
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %121, align 4
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 56
  %123 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %123, align 4
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 60
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %125, align 4
  %126 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 64
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %127, align 4
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 68
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 72
  %131 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 76
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %133, align 4
  %134 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 80
  %135 = bitcast i32* %134 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %135, align 4
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 84
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %137, align 4
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 88
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %139, align 4
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 92
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %141, align 4
  %142 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 96
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %143, align 4
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 100
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %145, align 4
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 104
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %147, align 4
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 108
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %149, align 4
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 112
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %151, align 4
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 116
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %153, align 4
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 120
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %155, align 4
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 124
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %157, align 4
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 128
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %159, align 4
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 132
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %161, align 4
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 136
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %163, align 4
  %164 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 140
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %165, align 4
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 144
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %167, align 4
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 148
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %169, align 4
  %170 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 152
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %171, align 4
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 156
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %173, align 4
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 160
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %175, align 4
  %176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 164
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %177, align 4
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 168
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %179, align 4
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 172
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %181, align 4
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 176
  %183 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %183, align 4
  %184 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 180
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %185, align 4
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 184
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %187, align 4
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 188
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %189, align 4
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 192
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %191, align 4
  %192 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 196
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %193, align 4
  %194 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 200
  %195 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %195, align 4
  %196 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 204
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %197, align 4
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 208
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %199, align 4
  %200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 212
  %201 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %201, align 4
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 216
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %203, align 4
  %204 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 220
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %205, align 4
  %206 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 224
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %207, align 4
  %208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 228
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %209, align 4
  %210 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 232
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %211, align 4
  %212 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 236
  %213 = bitcast i32* %212 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %213, align 4
  %214 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 240
  %215 = bitcast i32* %214 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %215, align 4
  %216 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 244
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %217, align 4
  %218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 248
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %219, align 4
  %220 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 252
  %221 = bitcast i32* %220 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %221, align 4
  br label %225

222:                                              ; preds = %82
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 0
  %224 = bitcast i32* %223 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %224, i8 -1, i64 1024, i1 false) #13
  br label %225

225:                                              ; preds = %88, %222
  %226 = add i32 %9, -1
  %227 = icmp slt i32 %86, %226
  br i1 %227, label %228, label %266

228:                                              ; preds = %225
  %229 = sext i32 %86 to i64
  %230 = sext i32 %226 to i64
  %231 = sub nsw i64 %230, %229
  %232 = xor i64 %229, -1
  %233 = and i64 %231, 1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %243, label %235

235:                                              ; preds = %228
  %236 = load i16*, i16** %5, align 8
  %237 = getelementptr inbounds i16, i16* %236, i64 %229
  %238 = load i16, i16* %237, align 2
  %239 = and i16 %238, 255
  %240 = zext i16 %239 to i64
  %241 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 %240
  store i32 %86, i32* %241, align 4
  %242 = add nsw i64 %229, 1
  br label %243

243:                                              ; preds = %228, %235
  %244 = phi i64 [ %229, %228 ], [ %242, %235 ]
  %245 = sub nsw i64 0, %230
  %246 = icmp eq i64 %232, %245
  br i1 %246, label %266, label %247

247:                                              ; preds = %243, %247
  %248 = phi i64 [ %264, %247 ], [ %244, %243 ]
  %249 = load i16*, i16** %5, align 8
  %250 = getelementptr inbounds i16, i16* %249, i64 %248
  %251 = load i16, i16* %250, align 2
  %252 = and i16 %251, 255
  %253 = zext i16 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 %253
  %255 = trunc i64 %248 to i32
  store i32 %255, i32* %254, align 4
  %256 = add nsw i64 %248, 1
  %257 = load i16*, i16** %5, align 8
  %258 = getelementptr inbounds i16, i16* %257, i64 %256
  %259 = load i16, i16* %258, align 2
  %260 = and i16 %259, 255
  %261 = zext i16 %260 to i64
  %262 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 %261
  %263 = trunc i64 %256 to i32
  store i32 %263, i32* %262, align 4
  %264 = add nsw i64 %248, 2
  %265 = icmp eq i64 %264, %230
  br i1 %265, label %266, label %247

266:                                              ; preds = %243, %247, %225
  %267 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32)** %267, align 8
  %268 = tail call i32 @_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1295"* %0, i8* %1, i64 %2, i32 %22)
  br label %275

269:                                              ; preds = %79
  %270 = add nsw i32 %23, %80
  %271 = add nsw i32 %57, 1
  %272 = icmp sgt i32 %11, %57
  br i1 %272, label %20, label %275

273:                                              ; preds = %79
  %274 = trunc i64 %45 to i32
  br label %275

275:                                              ; preds = %56, %269, %53, %35, %273, %4, %266
  %276 = phi i32 [ %268, %266 ], [ -1, %4 ], [ %274, %273 ], [ -1, %35 ], [ -1, %53 ], [ -1, %269 ], [ -1, %56 ]
  ret i32 %276
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i16, i16* %6, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = and i16 %16, 255
  %18 = zext i16 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %13, %20
  %22 = sub nsw i32 %9, %10
  %23 = zext i16 %16 to i32
  %24 = add i32 %10, -2
  %25 = icmp sgt i32 %24, -1
  %26 = sub i32 %10, %21
  br i1 %25, label %27, label %73

27:                                               ; preds = %4
  %28 = sub nsw i32 0, %10
  %29 = sext i32 %24 to i64
  br label %30

30:                                               ; preds = %27, %62
  %31 = phi i32 [ %64, %62 ], [ %3, %27 ]
  %32 = phi i32 [ %66, %62 ], [ %28, %27 ]
  %33 = icmp sgt i32 %31, %22
  br i1 %33, label %93, label %34

34:                                               ; preds = %30, %43
  %35 = phi i32 [ %48, %43 ], [ %31, %30 ]
  %36 = phi i32 [ %50, %43 ], [ %32, %30 ]
  %37 = add nsw i32 %35, %13
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %23, %41
  br i1 %42, label %71, label %43

43:                                               ; preds = %34
  %44 = zext i8 %40 to i64
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = sub nsw i32 %13, %46
  %48 = add nsw i32 %47, %35
  %49 = add i32 %36, 1
  %50 = sub i32 %49, %47
  %51 = icmp sgt i32 %48, %22
  br i1 %51, label %93, label %34

52:                                               ; preds = %71, %68
  %53 = phi i64 [ %29, %71 ], [ %69, %68 ]
  %54 = getelementptr inbounds i16, i16* %6, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add nsw i64 %53, %72
  %58 = getelementptr inbounds i8, i8* %1, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = icmp eq i32 %56, %60
  br i1 %61, label %68, label %62

62:                                               ; preds = %52
  %63 = trunc i64 %53 to i32
  %64 = add nsw i32 %35, %21
  %65 = add i32 %26, %36
  %66 = sub i32 %65, %63
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %90, label %30

68:                                               ; preds = %52
  %69 = add nsw i64 %53, -1
  %70 = icmp sgt i64 %53, 0
  br i1 %70, label %52, label %93

71:                                               ; preds = %34
  %72 = sext i32 %35 to i64
  br label %52

73:                                               ; preds = %4
  %74 = icmp slt i32 %22, %3
  br i1 %74, label %93, label %75

75:                                               ; preds = %73, %83
  %76 = phi i32 [ %88, %83 ], [ %3, %73 ]
  %77 = add nsw i32 %76, %13
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %1, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = icmp eq i32 %23, %81
  br i1 %82, label %93, label %83

83:                                               ; preds = %75
  %84 = zext i8 %80 to i64
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = sub nsw i32 %13, %86
  %88 = add nsw i32 %87, %76
  %89 = icmp sgt i32 %88, %22
  br i1 %89, label %93, label %75

90:                                               ; preds = %62
  tail call void @_ZN2v88internal12StringSearchIthE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1295"* %0)
  %91 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32)** %91, align 8
  %92 = tail call i32 @_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1295"* %0, i8* %1, i64 %2, i32 %64)
  br label %93

93:                                               ; preds = %83, %75, %30, %43, %68, %73, %90
  %94 = phi i32 [ %92, %90 ], [ -1, %73 ], [ %35, %68 ], [ -1, %43 ], [ -1, %30 ], [ %76, %75 ], [ -1, %83 ]
  ret i32 %94
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIthE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1295"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !15

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !16

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !17

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i16, i16* %6, i64 %113
  %115 = load i16, i16* %114, align 2
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i16, i16* %6, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i16, i16* %6, i64 %129
  %131 = load i16, i16* %130, align 2
  %132 = icmp eq i16 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i16, i16* %6, i64 %153
  %155 = load i16, i16* %154, align 2
  %156 = icmp eq i16 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1295"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1295", %"class.v8::internal::StringSearch.1295"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i16, i16* %6, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %102, label %24

24:                                               ; preds = %4
  %25 = zext i16 %21 to i32
  %26 = icmp sgt i32 %10, 0
  %27 = and i16 %21, 255
  %28 = zext i16 %27 to i64
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %28
  br i1 %26, label %30, label %87

30:                                               ; preds = %24
  %31 = shl i64 %8, 32
  %32 = ashr exact i64 %31, 32
  br label %33

33:                                               ; preds = %48, %30
  %34 = phi i32 [ %3, %30 ], [ %49, %48 ]
  %35 = add nsw i32 %34, %18
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp eq i32 %25, %39
  br i1 %40, label %85, label %41

41:                                               ; preds = %33
  %42 = zext i8 %38 to i64
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = sub nsw i32 %18, %44
  %46 = add nsw i32 %45, %34
  %47 = icmp sgt i32 %46, %22
  br i1 %47, label %102, label %48

48:                                               ; preds = %41, %79
  %49 = phi i32 [ %46, %41 ], [ %81, %79 ]
  br label %33

50:                                               ; preds = %85, %83
  %51 = phi i64 [ %32, %85 ], [ %52, %83 ]
  %52 = add i64 %51, -1
  %53 = getelementptr inbounds i16, i16* %6, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = add nsw i64 %52, %86
  %57 = getelementptr inbounds i8, i8* %1, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = icmp eq i32 %55, %59
  br i1 %60, label %83, label %61

61:                                               ; preds = %50
  %62 = trunc i64 %52 to i32
  %63 = icmp sgt i32 %12, %62
  br i1 %63, label %76, label %64

64:                                               ; preds = %61
  %65 = shl i64 %52, 32
  %66 = add i64 %65, 4294967296
  %67 = ashr exact i64 %66, 32
  %68 = getelementptr inbounds i32, i32* %17, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = zext i8 %58 to i64
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = sub nsw i32 %62, %72
  %74 = icmp sgt i32 %69, %73
  %75 = select i1 %74, i32 %69, i32 %73
  br label %79

76:                                               ; preds = %61
  %77 = load i32, i32* %29, align 4
  %78 = sub nsw i32 %18, %77
  br label %79

79:                                               ; preds = %76, %64
  %80 = phi i32 [ %78, %76 ], [ %75, %64 ]
  %81 = add nsw i32 %80, %34
  %82 = icmp sgt i32 %81, %22
  br i1 %82, label %102, label %48

83:                                               ; preds = %50
  %84 = icmp sgt i64 %52, 0
  br i1 %84, label %50, label %102

85:                                               ; preds = %33
  %86 = sext i32 %34 to i64
  br label %50

87:                                               ; preds = %24, %95
  %88 = phi i32 [ %100, %95 ], [ %3, %24 ]
  %89 = add nsw i32 %88, %18
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* %1, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = icmp eq i32 %25, %93
  br i1 %94, label %102, label %95

95:                                               ; preds = %87
  %96 = zext i8 %92 to i64
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = sub nsw i32 %18, %98
  %100 = add nsw i32 %99, %88
  %101 = icmp sgt i32 %100, %22
  br i1 %101, label %102, label %87

102:                                              ; preds = %95, %87, %79, %41, %83, %4
  %103 = phi i32 [ -1, %4 ], [ %34, %83 ], [ -1, %41 ], [ -1, %79 ], [ %88, %87 ], [ -1, %95 ]
  ret i32 %103
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE16SingleCharSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = load i16, i16* %6, align 2
  %10 = trunc i64 %2 to i32
  %11 = trunc i64 %8 to i32
  %12 = sub nsw i32 %10, %11
  %13 = add nsw i32 %12, 1
  %14 = icmp eq i16 %9, 0
  br i1 %14, label %15, label %30

15:                                               ; preds = %4
  %16 = icmp slt i32 %12, %3
  br i1 %16, label %64, label %17

17:                                               ; preds = %15
  %18 = sext i32 %3 to i64
  %19 = sext i32 %12 to i64
  br label %20

20:                                               ; preds = %25, %17
  %21 = phi i64 [ %18, %17 ], [ %26, %25 ]
  %22 = getelementptr inbounds i16, i16* %1, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = add nsw i64 %21, 1
  %27 = icmp slt i64 %21, %19
  br i1 %27, label %20, label %64

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i32
  br label %64

30:                                               ; preds = %4
  %31 = trunc i16 %9 to i8
  %32 = lshr i16 %9, 8
  %33 = trunc i16 %32 to i8
  %34 = icmp ult i8 %31, %33
  %35 = select i1 %34, i8 %33, i8 %31
  %36 = zext i8 %35 to i32
  %37 = ptrtoint i16* %1 to i64
  br label %38

38:                                               ; preds = %59, %30
  %39 = phi i32 [ %3, %30 ], [ %60, %59 ]
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %1, i64 %40
  %42 = bitcast i16* %41 to i8*
  %43 = sub i32 %13, %39
  %44 = sext i32 %43 to i64
  %45 = shl nsw i64 %44, 1
  %46 = tail call i8* @memchr(i8* %42, i32 %36, i64 %45) #14
  %47 = icmp eq i8* %46, null
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = ptrtoint i8* %46 to i64
  %50 = and i64 %49, -2
  %51 = sub i64 %50, %37
  %52 = lshr exact i64 %51, 1
  %53 = trunc i64 %52 to i32
  %54 = shl i64 %51, 31
  %55 = ashr exact i64 %54, 32
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = icmp eq i16 %57, %9
  br i1 %58, label %62, label %59

59:                                               ; preds = %48
  %60 = add nsw i32 %53, 1
  %61 = icmp sgt i32 %12, %53
  br i1 %61, label %38, label %64

62:                                               ; preds = %48
  %63 = trunc i64 %52 to i32
  br label %64

64:                                               ; preds = %38, %59, %25, %62, %15, %28
  %65 = phi i32 [ -1, %15 ], [ %29, %28 ], [ %63, %62 ], [ -1, %25 ], [ -1, %59 ], [ -1, %38 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE12LinearSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %108, label %13

13:                                               ; preds = %4
  %14 = load i16, i16* %6, align 2
  %15 = add nsw i32 %11, 1
  %16 = icmp eq i16 %14, 0
  %17 = trunc i16 %14 to i8
  %18 = lshr i16 %14, 8
  %19 = trunc i16 %18 to i8
  %20 = icmp ult i8 %17, %19
  %21 = select i1 %20, i8 %19, i8 %17
  %22 = zext i8 %21 to i32
  %23 = ptrtoint i16* %1 to i64
  %24 = sext i32 %11 to i64
  %25 = getelementptr inbounds i16, i16* %6, i64 1
  %26 = shl i64 %8, 32
  %27 = add i64 %26, -4294967296
  %28 = ashr exact i64 %27, 32
  br i1 %16, label %29, label %61

29:                                               ; preds = %13, %57
  %30 = phi i32 [ %44, %57 ], [ %3, %13 ]
  %31 = sext i32 %30 to i64
  br label %32

32:                                               ; preds = %37, %29
  %33 = phi i64 [ %31, %29 ], [ %38, %37 ]
  %34 = getelementptr inbounds i16, i16* %1, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = add nsw i64 %33, 1
  %39 = icmp slt i64 %33, %24
  br i1 %39, label %32, label %108

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %108, label %43

43:                                               ; preds = %40
  %44 = add nuw nsw i32 %41, 1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i16, i16* %1, i64 %45
  br label %47

47:                                               ; preds = %54, %43
  %48 = phi i64 [ %55, %54 ], [ 0, %43 ]
  %49 = getelementptr inbounds i16, i16* %25, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = getelementptr inbounds i16, i16* %46, i64 %48
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %50, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = add nuw nsw i64 %48, 1
  %56 = icmp slt i64 %55, %28
  br i1 %56, label %47, label %104

57:                                               ; preds = %47
  %58 = icmp sgt i32 %11, %41
  br i1 %58, label %29, label %108

59:                                               ; preds = %94
  %60 = icmp sgt i32 %11, %88
  br i1 %60, label %85, label %108

61:                                               ; preds = %13, %85
  %62 = phi i32 [ %86, %85 ], [ %3, %13 ]
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i16, i16* %1, i64 %63
  %65 = bitcast i16* %64 to i8*
  %66 = sub i32 %15, %62
  %67 = sext i32 %66 to i64
  %68 = shl nsw i64 %67, 1
  %69 = tail call i8* @memchr(i8* %65, i32 %22, i64 %68) #14
  %70 = icmp eq i8* %69, null
  br i1 %70, label %108, label %71

71:                                               ; preds = %61
  %72 = ptrtoint i8* %69 to i64
  %73 = and i64 %72, -2
  %74 = sub i64 %73, %23
  %75 = lshr exact i64 %74, 1
  %76 = trunc i64 %75 to i32
  %77 = shl i64 %74, 31
  %78 = ashr exact i64 %77, 32
  %79 = getelementptr inbounds i16, i16* %1, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = icmp eq i16 %80, %14
  br i1 %81, label %87, label %82

82:                                               ; preds = %71
  %83 = add nsw i32 %76, 1
  %84 = icmp sgt i32 %11, %76
  br i1 %84, label %85, label %108

85:                                               ; preds = %82, %59
  %86 = phi i32 [ %83, %82 ], [ %91, %59 ]
  br label %61

87:                                               ; preds = %71
  %88 = trunc i64 %75 to i32
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %108, label %90

90:                                               ; preds = %87
  %91 = add nuw nsw i32 %88, 1
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %1, i64 %92
  br label %94

94:                                               ; preds = %101, %90
  %95 = phi i64 [ %102, %101 ], [ 0, %90 ]
  %96 = getelementptr inbounds i16, i16* %25, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = getelementptr inbounds i16, i16* %93, i64 %95
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %97, %99
  br i1 %100, label %101, label %59

101:                                              ; preds = %94
  %102 = add nuw nsw i64 %95, 1
  %103 = icmp slt i64 %102, %28
  br i1 %103, label %94, label %106

104:                                              ; preds = %54
  %105 = trunc i64 %33 to i32
  br label %108

106:                                              ; preds = %101
  %107 = trunc i64 %75 to i32
  br label %108

108:                                              ; preds = %59, %87, %82, %61, %57, %40, %37, %106, %104, %4
  %109 = phi i32 [ -1, %4 ], [ %105, %104 ], [ %107, %106 ], [ -1, %37 ], [ -1, %40 ], [ -1, %57 ], [ -1, %61 ], [ -1, %82 ], [ -1, %87 ], [ -1, %59 ]
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE13InitialSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %288, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i16* %1 to i64
  %18 = sext i32 %11 to i64
  %19 = shl i64 %8, 32
  %20 = ashr exact i64 %19, 32
  br label %21

21:                                               ; preds = %282, %13
  %22 = phi i32 [ %15, %13 ], [ %283, %282 ]
  %23 = phi i32 [ %3, %13 ], [ %284, %282 ]
  %24 = add nsw i32 %22, 1
  %25 = icmp slt i32 %22, 0
  br i1 %25, label %26, label %95

26:                                               ; preds = %21
  %27 = load i16, i16* %6, align 2
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %39

29:                                               ; preds = %26
  %30 = sext i32 %23 to i64
  br label %31

31:                                               ; preds = %36, %29
  %32 = phi i64 [ %30, %29 ], [ %37, %36 ]
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %70, label %36

36:                                               ; preds = %31
  %37 = add nsw i64 %32, 1
  %38 = icmp slt i64 %32, %18
  br i1 %38, label %31, label %288

39:                                               ; preds = %26
  %40 = trunc i16 %27 to i8
  %41 = lshr i16 %27, 8
  %42 = trunc i16 %41 to i8
  %43 = icmp ult i8 %40, %42
  %44 = select i1 %43, i8 %42, i8 %40
  %45 = zext i8 %44 to i32
  br label %46

46:                                               ; preds = %67, %39
  %47 = phi i32 [ %23, %39 ], [ %68, %67 ]
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i16, i16* %1, i64 %48
  %50 = bitcast i16* %49 to i8*
  %51 = sub i32 %16, %47
  %52 = sext i32 %51 to i64
  %53 = shl nsw i64 %52, 1
  %54 = tail call i8* @memchr(i8* %50, i32 %45, i64 %53) #14
  %55 = icmp eq i8* %54, null
  br i1 %55, label %288, label %56

56:                                               ; preds = %46
  %57 = ptrtoint i8* %54 to i64
  %58 = and i64 %57, -2
  %59 = sub i64 %58, %17
  %60 = lshr exact i64 %59, 1
  %61 = trunc i64 %60 to i32
  %62 = shl i64 %59, 31
  %63 = ashr exact i64 %62, 32
  %64 = getelementptr inbounds i16, i16* %1, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = icmp eq i16 %65, %27
  br i1 %66, label %70, label %67

67:                                               ; preds = %56
  %68 = add nsw i32 %61, 1
  %69 = icmp sgt i32 %11, %61
  br i1 %69, label %46, label %288

70:                                               ; preds = %56, %31
  %71 = phi i64 [ %32, %31 ], [ %60, %56 ]
  %72 = trunc i64 %71 to i32
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %288, label %74

74:                                               ; preds = %70
  %75 = shl i64 %71, 32
  %76 = ashr exact i64 %75, 32
  br label %77

77:                                               ; preds = %74, %86
  %78 = phi i64 [ 1, %74 ], [ %87, %86 ]
  %79 = phi i32 [ 1, %74 ], [ %88, %86 ]
  %80 = getelementptr inbounds i16, i16* %6, i64 %78
  %81 = load i16, i16* %80, align 2
  %82 = add nsw i64 %78, %76
  %83 = getelementptr inbounds i16, i16* %1, i64 %82
  %84 = load i16, i16* %83, align 2
  %85 = icmp eq i16 %81, %84
  br i1 %85, label %86, label %90

86:                                               ; preds = %77
  %87 = add nuw nsw i64 %78, 1
  %88 = add nuw nsw i32 %79, 1
  %89 = icmp slt i64 %87, %20
  br i1 %89, label %77, label %92

90:                                               ; preds = %77
  %91 = trunc i64 %78 to i32
  br label %92

92:                                               ; preds = %86, %90
  %93 = phi i32 [ %91, %90 ], [ %88, %86 ]
  %94 = icmp eq i32 %93, %9
  br i1 %94, label %286, label %282

95:                                               ; preds = %21
  %96 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 0
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %235, label %101

101:                                              ; preds = %95
  %102 = add nsw i32 %99, -1
  %103 = insertelement <4 x i32> undef, i32 %102, i32 0
  %104 = shufflevector <4 x i32> %103, <4 x i32> undef, <4 x i32> zeroinitializer
  %105 = insertelement <4 x i32> undef, i32 %102, i32 0
  %106 = shufflevector <4 x i32> %105, <4 x i32> undef, <4 x i32> zeroinitializer
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 0
  %108 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %110, align 4
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 8
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %112, align 4
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 12
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %114, align 4
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 16
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %116, align 4
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 20
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %118, align 4
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 24
  %120 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %120, align 4
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 28
  %122 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %122, align 4
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 32
  %124 = bitcast i32* %123 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %124, align 4
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 36
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %126, align 4
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 40
  %128 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %128, align 4
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 44
  %130 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %130, align 4
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 48
  %132 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %132, align 4
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 52
  %134 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %134, align 4
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 56
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %136, align 4
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 60
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %138, align 4
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 64
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %140, align 4
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 68
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %142, align 4
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 72
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %144, align 4
  %145 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 76
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %146, align 4
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 80
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %148, align 4
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 84
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %150, align 4
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 88
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %152, align 4
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 92
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %154, align 4
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 96
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %156, align 4
  %157 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 100
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %158, align 4
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 104
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %160, align 4
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 108
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %162, align 4
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 112
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %164, align 4
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 116
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %166, align 4
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 120
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %168, align 4
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 124
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %170, align 4
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 128
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %172, align 4
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 132
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %174, align 4
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 136
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %176, align 4
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 140
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %178, align 4
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 144
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %180, align 4
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 148
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %182, align 4
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 152
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %184, align 4
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 156
  %186 = bitcast i32* %185 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %186, align 4
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 160
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %188, align 4
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 164
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %190, align 4
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 168
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %192, align 4
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 172
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %194, align 4
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 176
  %196 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %196, align 4
  %197 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 180
  %198 = bitcast i32* %197 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %198, align 4
  %199 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 184
  %200 = bitcast i32* %199 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %200, align 4
  %201 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 188
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %202, align 4
  %203 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 192
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %204, align 4
  %205 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 196
  %206 = bitcast i32* %205 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %206, align 4
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 200
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %208, align 4
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 204
  %210 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %210, align 4
  %211 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 208
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %212, align 4
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 212
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %214, align 4
  %215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 216
  %216 = bitcast i32* %215 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %216, align 4
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 220
  %218 = bitcast i32* %217 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %218, align 4
  %219 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 224
  %220 = bitcast i32* %219 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %220, align 4
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 228
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %222, align 4
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 232
  %224 = bitcast i32* %223 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %224, align 4
  %225 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 236
  %226 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %226, align 4
  %227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 240
  %228 = bitcast i32* %227 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %228, align 4
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 244
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %230, align 4
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 248
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %232, align 4
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 252
  %234 = bitcast i32* %233 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %234, align 4
  br label %238

235:                                              ; preds = %95
  %236 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 0
  %237 = bitcast i32* %236 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %237, i8 -1, i64 1024, i1 false) #13
  br label %238

238:                                              ; preds = %101, %235
  %239 = add i32 %9, -1
  %240 = icmp slt i32 %99, %239
  br i1 %240, label %241, label %279

241:                                              ; preds = %238
  %242 = sext i32 %99 to i64
  %243 = sext i32 %239 to i64
  %244 = sub nsw i64 %243, %242
  %245 = xor i64 %242, -1
  %246 = and i64 %244, 1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %256, label %248

248:                                              ; preds = %241
  %249 = load i16*, i16** %5, align 8
  %250 = getelementptr inbounds i16, i16* %249, i64 %242
  %251 = load i16, i16* %250, align 2
  %252 = and i16 %251, 255
  %253 = zext i16 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 %253
  store i32 %99, i32* %254, align 4
  %255 = add nsw i64 %242, 1
  br label %256

256:                                              ; preds = %241, %248
  %257 = phi i64 [ %242, %241 ], [ %255, %248 ]
  %258 = sub nsw i64 0, %243
  %259 = icmp eq i64 %245, %258
  br i1 %259, label %279, label %260

260:                                              ; preds = %256, %260
  %261 = phi i64 [ %277, %260 ], [ %257, %256 ]
  %262 = load i16*, i16** %5, align 8
  %263 = getelementptr inbounds i16, i16* %262, i64 %261
  %264 = load i16, i16* %263, align 2
  %265 = and i16 %264, 255
  %266 = zext i16 %265 to i64
  %267 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 %266
  %268 = trunc i64 %261 to i32
  store i32 %268, i32* %267, align 4
  %269 = add nsw i64 %261, 1
  %270 = load i16*, i16** %5, align 8
  %271 = getelementptr inbounds i16, i16* %270, i64 %269
  %272 = load i16, i16* %271, align 2
  %273 = and i16 %272, 255
  %274 = zext i16 %273 to i64
  %275 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 %274
  %276 = trunc i64 %269 to i32
  store i32 %276, i32* %275, align 4
  %277 = add nsw i64 %261, 2
  %278 = icmp eq i64 %277, %243
  br i1 %278, label %279, label %260

279:                                              ; preds = %256, %260, %238
  %280 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32)** %280, align 8
  %281 = tail call i32 @_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1298"* %0, i16* %1, i64 %2, i32 %23)
  br label %288

282:                                              ; preds = %92
  %283 = add nsw i32 %24, %93
  %284 = add nsw i32 %72, 1
  %285 = icmp sgt i32 %11, %72
  br i1 %285, label %21, label %288

286:                                              ; preds = %92
  %287 = trunc i64 %71 to i32
  br label %288

288:                                              ; preds = %286, %70, %282, %67, %46, %36, %4, %279
  %289 = phi i32 [ %281, %279 ], [ -1, %4 ], [ -1, %36 ], [ -1, %46 ], [ -1, %67 ], [ %287, %286 ], [ -1, %70 ], [ -1, %282 ]
  ret i32 %289
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i16, i16* %6, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = and i16 %16, 255
  %18 = zext i16 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %13, %20
  %22 = sub nsw i32 %9, %10
  %23 = add i32 %10, -2
  %24 = icmp sgt i32 %23, -1
  %25 = sub i32 %10, %21
  br i1 %24, label %26, label %70

26:                                               ; preds = %4
  %27 = sub nsw i32 0, %10
  %28 = sext i32 %23 to i64
  br label %29

29:                                               ; preds = %26, %59
  %30 = phi i32 [ %61, %59 ], [ %3, %26 ]
  %31 = phi i32 [ %63, %59 ], [ %27, %26 ]
  %32 = icmp sgt i32 %30, %22
  br i1 %32, label %90, label %33

33:                                               ; preds = %29, %41
  %34 = phi i32 [ %47, %41 ], [ %30, %29 ]
  %35 = phi i32 [ %49, %41 ], [ %31, %29 ]
  %36 = add nsw i32 %34, %13
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i16, i16* %1, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = icmp eq i16 %16, %39
  br i1 %40, label %68, label %41

41:                                               ; preds = %33
  %42 = and i16 %39, 255
  %43 = zext i16 %42 to i64
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = sub nsw i32 %13, %45
  %47 = add nsw i32 %46, %34
  %48 = add i32 %35, 1
  %49 = sub i32 %48, %46
  %50 = icmp sgt i32 %47, %22
  br i1 %50, label %90, label %33

51:                                               ; preds = %68, %65
  %52 = phi i64 [ %28, %68 ], [ %66, %65 ]
  %53 = getelementptr inbounds i16, i16* %6, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = add nsw i64 %52, %69
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = icmp eq i16 %54, %57
  br i1 %58, label %65, label %59

59:                                               ; preds = %51
  %60 = trunc i64 %52 to i32
  %61 = add nsw i32 %34, %21
  %62 = add i32 %25, %35
  %63 = sub i32 %62, %60
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %87, label %29

65:                                               ; preds = %51
  %66 = add nsw i64 %52, -1
  %67 = icmp sgt i64 %52, 0
  br i1 %67, label %51, label %90

68:                                               ; preds = %33
  %69 = sext i32 %34 to i64
  br label %51

70:                                               ; preds = %4
  %71 = icmp slt i32 %22, %3
  br i1 %71, label %90, label %72

72:                                               ; preds = %70, %79
  %73 = phi i32 [ %85, %79 ], [ %3, %70 ]
  %74 = add nsw i32 %73, %13
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i16, i16* %1, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = icmp eq i16 %16, %77
  br i1 %78, label %90, label %79

79:                                               ; preds = %72
  %80 = and i16 %77, 255
  %81 = zext i16 %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sub nsw i32 %13, %83
  %85 = add nsw i32 %84, %73
  %86 = icmp sgt i32 %85, %22
  br i1 %86, label %90, label %72

87:                                               ; preds = %59
  tail call void @_ZN2v88internal12StringSearchIttE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1298"* %0)
  %88 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32)** %88, align 8
  %89 = tail call i32 @_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1298"* %0, i16* %1, i64 %2, i32 %61)
  br label %90

90:                                               ; preds = %79, %72, %29, %41, %65, %70, %87
  %91 = phi i32 [ %89, %87 ], [ -1, %70 ], [ %34, %65 ], [ -1, %41 ], [ -1, %29 ], [ %73, %72 ], [ -1, %79 ]
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIttE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1298"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !18

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !19

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !20

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i16, i16* %6, i64 %113
  %115 = load i16, i16* %114, align 2
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i16, i16* %6, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i16, i16* %6, i64 %129
  %131 = load i16, i16* %130, align 2
  %132 = icmp eq i16 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i16, i16* %6, i64 %153
  %155 = load i16, i16* %154, align 2
  %156 = icmp eq i16 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1298"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1298", %"class.v8::internal::StringSearch.1298"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i16, i16* %6, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %100, label %24

24:                                               ; preds = %4
  %25 = icmp sgt i32 %10, 0
  %26 = and i16 %21, 255
  %27 = zext i16 %26 to i64
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %27
  br i1 %25, label %29, label %85

29:                                               ; preds = %24
  %30 = shl i64 %8, 32
  %31 = ashr exact i64 %30, 32
  br label %32

32:                                               ; preds = %47, %29
  %33 = phi i32 [ %3, %29 ], [ %48, %47 ]
  %34 = add nsw i32 %33, %18
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = icmp eq i16 %21, %37
  br i1 %38, label %83, label %39

39:                                               ; preds = %32
  %40 = and i16 %37, 255
  %41 = zext i16 %40 to i64
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 %18, %43
  %45 = add nsw i32 %44, %33
  %46 = icmp sgt i32 %45, %22
  br i1 %46, label %100, label %47

47:                                               ; preds = %39, %77
  %48 = phi i32 [ %45, %39 ], [ %79, %77 ]
  br label %32

49:                                               ; preds = %83, %81
  %50 = phi i64 [ %31, %83 ], [ %51, %81 ]
  %51 = add i64 %50, -1
  %52 = getelementptr inbounds i16, i16* %6, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = add nsw i64 %51, %84
  %55 = getelementptr inbounds i16, i16* %1, i64 %54
  %56 = load i16, i16* %55, align 2
  %57 = icmp eq i16 %53, %56
  br i1 %57, label %81, label %58

58:                                               ; preds = %49
  %59 = trunc i64 %51 to i32
  %60 = icmp sgt i32 %12, %59
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = shl i64 %51, 32
  %63 = add i64 %62, 4294967296
  %64 = ashr exact i64 %63, 32
  %65 = getelementptr inbounds i32, i32* %17, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = and i16 %56, 255
  %68 = zext i16 %67 to i64
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = sub nsw i32 %59, %70
  %72 = icmp sgt i32 %66, %71
  %73 = select i1 %72, i32 %66, i32 %71
  br label %77

74:                                               ; preds = %58
  %75 = load i32, i32* %28, align 4
  %76 = sub nsw i32 %18, %75
  br label %77

77:                                               ; preds = %74, %61
  %78 = phi i32 [ %76, %74 ], [ %73, %61 ]
  %79 = add nsw i32 %78, %33
  %80 = icmp sgt i32 %79, %22
  br i1 %80, label %100, label %47

81:                                               ; preds = %49
  %82 = icmp sgt i64 %51, 0
  br i1 %82, label %49, label %100

83:                                               ; preds = %32
  %84 = sext i32 %33 to i64
  br label %49

85:                                               ; preds = %24, %92
  %86 = phi i32 [ %98, %92 ], [ %3, %24 ]
  %87 = add nsw i32 %86, %18
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i16, i16* %1, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = icmp eq i16 %21, %90
  br i1 %91, label %100, label %92

92:                                               ; preds = %85
  %93 = and i16 %90, 255
  %94 = zext i16 %93 to i64
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = sub nsw i32 %18, %96
  %98 = add nsw i32 %97, %86
  %99 = icmp sgt i32 %98, %22
  br i1 %99, label %100, label %85

100:                                              ; preds = %92, %85, %77, %39, %81, %4
  %101 = phi i32 [ -1, %4 ], [ %33, %81 ], [ -1, %39 ], [ -1, %77 ], [ %86, %85 ], [ -1, %92 ]
  ret i32 %101
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #12

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = distinct !{!8, !5}
!9 = distinct !{!9, !10, !7}
!10 = !{!"llvm.loop.unroll.runtime.disable"}
!11 = distinct !{!11, !5}
!12 = distinct !{!12, !7}
!13 = distinct !{!13, !5}
!14 = distinct !{!14, !10, !7}
!15 = distinct !{!15, !7}
!16 = distinct !{!16, !5}
!17 = distinct !{!17, !10, !7}
!18 = distinct !{!18, !7}
!19 = distinct !{!19, !5}
!20 = distinct !{!20, !10, !7}
