; ModuleID = '../../third_party/webrtc/rtc_base/time_utils.cc'
source_filename = "../../third_party/webrtc/rtc_base/time_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.rtc::ClockInterface" = type { i32 (...)** }
%"class.rtc::TimestampWrapAroundHandler" = type { i32, i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.timeval = type { i64, i64 }

@_ZN3rtc7g_clockE = hidden local_unnamed_addr global %"class.rtc::ClockInterface"* null, align 8
@_ZZN3rtc11TmToSecondsERK2tmE5mdays = internal unnamed_addr constant [12 x i16] [i16 31, i16 28, i16 31, i16 30, i16 31, i16 30, i16 31, i16 31, i16 30, i16 31, i16 30, i16 31], align 16
@_ZZN3rtc11TmToSecondsERK2tmE11cumul_mdays = internal unnamed_addr constant [12 x i16] [i16 0, i16 31, i16 59, i16 90, i16 120, i16 151, i16 181, i16 212, i16 243, i16 273, i16 304, i16 334], align 16

@_ZN3rtc26TimestampWrapAroundHandlerC1Ev = hidden unnamed_addr alias void (%"class.rtc::TimestampWrapAroundHandler"*), void (%"class.rtc::TimestampWrapAroundHandler"*)* @_ZN3rtc26TimestampWrapAroundHandlerC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.rtc::ClockInterface"* @_ZN3rtc18SetClockForTestingEPNS_14ClockInterfaceE(%"class.rtc::ClockInterface"*) local_unnamed_addr #0 {
  %2 = load %"class.rtc::ClockInterface"*, %"class.rtc::ClockInterface"** @_ZN3rtc7g_clockE, align 8
  store %"class.rtc::ClockInterface"* %0, %"class.rtc::ClockInterface"** @_ZN3rtc7g_clockE, align 8
  ret %"class.rtc::ClockInterface"* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.rtc::ClockInterface"* @_ZN3rtc18GetClockForTestingEv() local_unnamed_addr #2 {
  %1 = load %"class.rtc::ClockInterface"*, %"class.rtc::ClockInterface"** @_ZN3rtc7g_clockE, align 8
  ret %"class.rtc::ClockInterface"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3rtc16SystemTimeMillisEv() local_unnamed_addr #3 {
  %1 = tail call i64 @_ZN3rtc15SystemTimeNanosEv() #8
  %2 = sdiv i64 %1, 1000000
  ret i64 %2
}

declare i64 @_ZN3rtc15SystemTimeNanosEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3rtc9TimeNanosEv() local_unnamed_addr #3 {
  %1 = load %"class.rtc::ClockInterface"*, %"class.rtc::ClockInterface"** @_ZN3rtc7g_clockE, align 8
  %2 = icmp eq %"class.rtc::ClockInterface"* %1, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %0
  %4 = bitcast %"class.rtc::ClockInterface"* %1 to i64 (%"class.rtc::ClockInterface"*)***
  %5 = load i64 (%"class.rtc::ClockInterface"*)**, i64 (%"class.rtc::ClockInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.rtc::ClockInterface"*)*, i64 (%"class.rtc::ClockInterface"*)** %5, i64 2
  %7 = load i64 (%"class.rtc::ClockInterface"*)*, i64 (%"class.rtc::ClockInterface"*)** %6, align 8
  %8 = tail call i64 %7(%"class.rtc::ClockInterface"* nonnull %1) #8
  br label %11

9:                                                ; preds = %0
  %10 = tail call i64 @_ZN3rtc15SystemTimeNanosEv() #8
  br label %11

11:                                               ; preds = %9, %3
  %12 = phi i64 [ %8, %3 ], [ %10, %9 ]
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3rtc6Time32Ev() local_unnamed_addr #3 {
  %1 = load %"class.rtc::ClockInterface"*, %"class.rtc::ClockInterface"** @_ZN3rtc7g_clockE, align 8
  %2 = icmp eq %"class.rtc::ClockInterface"* %1, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %0
  %4 = bitcast %"class.rtc::ClockInterface"* %1 to i64 (%"class.rtc::ClockInterface"*)***
  %5 = load i64 (%"class.rtc::ClockInterface"*)**, i64 (%"class.rtc::ClockInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.rtc::ClockInterface"*)*, i64 (%"class.rtc::ClockInterface"*)** %5, i64 2
  %7 = load i64 (%"class.rtc::ClockInterface"*)*, i64 (%"class.rtc::ClockInterface"*)** %6, align 8
  %8 = tail call i64 %7(%"class.rtc::ClockInterface"* nonnull %1) #8
  br label %11

9:                                                ; preds = %0
  %10 = tail call i64 @_ZN3rtc15SystemTimeNanosEv() #8
  br label %11

11:                                               ; preds = %3, %9
  %12 = phi i64 [ %8, %3 ], [ %10, %9 ]
  %13 = sdiv i64 %12, 1000000
  %14 = trunc i64 %13 to i32
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3rtc10TimeMillisEv() local_unnamed_addr #3 {
  %1 = load %"class.rtc::ClockInterface"*, %"class.rtc::ClockInterface"** @_ZN3rtc7g_clockE, align 8
  %2 = icmp eq %"class.rtc::ClockInterface"* %1, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %0
  %4 = bitcast %"class.rtc::ClockInterface"* %1 to i64 (%"class.rtc::ClockInterface"*)***
  %5 = load i64 (%"class.rtc::ClockInterface"*)**, i64 (%"class.rtc::ClockInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.rtc::ClockInterface"*)*, i64 (%"class.rtc::ClockInterface"*)** %5, i64 2
  %7 = load i64 (%"class.rtc::ClockInterface"*)*, i64 (%"class.rtc::ClockInterface"*)** %6, align 8
  %8 = tail call i64 %7(%"class.rtc::ClockInterface"* nonnull %1) #8
  br label %11

9:                                                ; preds = %0
  %10 = tail call i64 @_ZN3rtc15SystemTimeNanosEv() #8
  br label %11

11:                                               ; preds = %3, %9
  %12 = phi i64 [ %8, %3 ], [ %10, %9 ]
  %13 = sdiv i64 %12, 1000000
  ret i64 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3rtc10TimeMicrosEv() local_unnamed_addr #3 {
  %1 = load %"class.rtc::ClockInterface"*, %"class.rtc::ClockInterface"** @_ZN3rtc7g_clockE, align 8
  %2 = icmp eq %"class.rtc::ClockInterface"* %1, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %0
  %4 = bitcast %"class.rtc::ClockInterface"* %1 to i64 (%"class.rtc::ClockInterface"*)***
  %5 = load i64 (%"class.rtc::ClockInterface"*)**, i64 (%"class.rtc::ClockInterface"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.rtc::ClockInterface"*)*, i64 (%"class.rtc::ClockInterface"*)** %5, i64 2
  %7 = load i64 (%"class.rtc::ClockInterface"*)*, i64 (%"class.rtc::ClockInterface"*)** %6, align 8
  %8 = tail call i64 %7(%"class.rtc::ClockInterface"* nonnull %1) #8
  br label %11

9:                                                ; preds = %0
  %10 = tail call i64 @_ZN3rtc15SystemTimeNanosEv() #8
  br label %11

11:                                               ; preds = %3, %9
  %12 = phi i64 [ %8, %3 ], [ %10, %9 ]
  %13 = sdiv i64 %12, 1000
  ret i64 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3rtc9TimeAfterEl(i64) local_unnamed_addr #3 {
  %2 = load %"class.rtc::ClockInterface"*, %"class.rtc::ClockInterface"** @_ZN3rtc7g_clockE, align 8
  %3 = icmp eq %"class.rtc::ClockInterface"* %2, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.rtc::ClockInterface"* %2 to i64 (%"class.rtc::ClockInterface"*)***
  %6 = load i64 (%"class.rtc::ClockInterface"*)**, i64 (%"class.rtc::ClockInterface"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.rtc::ClockInterface"*)*, i64 (%"class.rtc::ClockInterface"*)** %6, i64 2
  %8 = load i64 (%"class.rtc::ClockInterface"*)*, i64 (%"class.rtc::ClockInterface"*)** %7, align 8
  %9 = tail call i64 %8(%"class.rtc::ClockInterface"* nonnull %2) #8
  br label %12

10:                                               ; preds = %1
  %11 = tail call i64 @_ZN3rtc15SystemTimeNanosEv() #8
  br label %12

12:                                               ; preds = %4, %10
  %13 = phi i64 [ %9, %4 ], [ %11, %10 ]
  %14 = sdiv i64 %13, 1000000
  %15 = add nsw i64 %14, %0
  ret i64 %15
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3rtc10TimeDiff32Ejj(i32, i32) local_unnamed_addr #5 {
  %3 = sub i32 %0, %1
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN3rtc8TimeDiffEll(i64, i64) local_unnamed_addr #5 {
  %3 = sub nsw i64 %0, %1
  ret i64 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3rtc26TimestampWrapAroundHandlerC2Ev(%"class.rtc::TimestampWrapAroundHandler"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.rtc::TimestampWrapAroundHandler", %"class.rtc::TimestampWrapAroundHandler"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.rtc::TimestampWrapAroundHandler", %"class.rtc::TimestampWrapAroundHandler"* %0, i64 0, i32 1
  store i64 -1, i64* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN3rtc26TimestampWrapAroundHandler6UnwrapEj(%"class.rtc::TimestampWrapAroundHandler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rtc::TimestampWrapAroundHandler", %"class.rtc::TimestampWrapAroundHandler"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, -1
  %6 = getelementptr inbounds %"class.rtc::TimestampWrapAroundHandler", %"class.rtc::TimestampWrapAroundHandler"* %0, i64 0, i32 0
  br i1 %5, label %7, label %9

7:                                                ; preds = %2
  store i32 %1, i32* %6, align 8
  store i64 0, i64* %3, align 8
  %8 = zext i32 %1 to i64
  br label %31

9:                                                ; preds = %2
  %10 = load i32, i32* %6, align 8
  %11 = icmp ugt i32 %10, %1
  br i1 %11, label %12, label %18

12:                                               ; preds = %9
  %13 = icmp ugt i32 %10, -268435457
  %14 = icmp ult i32 %1, 268435455
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %26

16:                                               ; preds = %12
  %17 = add nuw nsw i64 %4, 1
  store i64 %17, i64* %3, align 8
  br label %26

18:                                               ; preds = %9
  %19 = sub i32 %1, %10
  %20 = icmp ugt i32 %19, -268435456
  br i1 %20, label %21, label %26

21:                                               ; preds = %18
  %22 = zext i32 %1 to i64
  %23 = shl i64 %4, 32
  %24 = add i64 %23, -4294967296
  %25 = or i64 %24, %22
  br label %31

26:                                               ; preds = %18, %12, %16
  %27 = phi i64 [ %4, %18 ], [ %4, %12 ], [ %17, %16 ]
  store i32 %1, i32* %6, align 8
  %28 = zext i32 %1 to i64
  %29 = shl i64 %27, 32
  %30 = or i64 %29, %28
  br label %31

31:                                               ; preds = %26, %21, %7
  %32 = phi i64 [ %8, %7 ], [ %30, %26 ], [ %25, %21 ]
  ret i64 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN3rtc11TmToSecondsERK2tm(%struct.tm* nocapture readonly dereferenceable(56)) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 1900
  %5 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %4, 3
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %1
  %18 = srem i32 %4, 100
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = srem i32 %4, 400
  %22 = icmp eq i32 %21, 0
  br label %23

23:                                               ; preds = %17, %20, %1
  %24 = phi i1 [ false, %1 ], [ true, %17 ], [ %22, %20 ]
  %25 = icmp slt i32 %4, 1970
  %26 = icmp ugt i32 %6, 11
  %27 = or i1 %25, %26
  %28 = icmp slt i32 %8, 1
  %29 = or i1 %27, %28
  br i1 %29, label %76, label %30

30:                                               ; preds = %23
  %31 = sext i32 %6 to i64
  %32 = getelementptr inbounds [12 x i16], [12 x i16]* @_ZZN3rtc11TmToSecondsERK2tmE5mdays, i64 0, i64 %31
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i32
  %35 = icmp eq i32 %6, 1
  %36 = and i1 %35, %24
  %37 = zext i1 %36 to i32
  %38 = add nsw i32 %34, %37
  %39 = icmp sgt i32 %8, %38
  %40 = icmp ugt i32 %10, 23
  %41 = or i1 %40, %39
  %42 = icmp ugt i32 %12, 59
  %43 = or i1 %42, %41
  %44 = icmp ugt i32 %14, 59
  %45 = or i1 %44, %43
  br i1 %45, label %76, label %46

46:                                               ; preds = %30
  %47 = getelementptr inbounds [12 x i16], [12 x i16]* @_ZZN3rtc11TmToSecondsERK2tmE11cumul_mdays, i64 0, i64 %31
  %48 = load i16, i16* %47, align 2
  %49 = sext i16 %48 to i32
  %50 = lshr i32 %4, 2
  %51 = udiv i32 %4, 100
  %52 = udiv i32 %4, 400
  %53 = icmp slt i32 %6, 2
  %54 = and i1 %53, %24
  %55 = add nsw i32 %52, -478
  %56 = add nsw i32 %55, %50
  %57 = sub nsw i32 %56, %51
  %58 = add i32 %57, %8
  %59 = zext i1 %54 to i32
  %60 = sub i32 %58, %59
  %61 = add i32 %60, %49
  %62 = add nsw i32 %3, -70
  %63 = sext i32 %62 to i64
  %64 = mul nsw i64 %63, 365
  %65 = sext i32 %61 to i64
  %66 = add nsw i64 %64, %65
  %67 = mul nsw i64 %66, 24
  %68 = sext i32 %10 to i64
  %69 = add nsw i64 %67, %68
  %70 = mul nsw i64 %69, 60
  %71 = sext i32 %12 to i64
  %72 = add nsw i64 %70, %71
  %73 = mul nsw i64 %72, 60
  %74 = sext i32 %14 to i64
  %75 = add nsw i64 %73, %74
  br label %76

76:                                               ; preds = %30, %23, %46
  %77 = phi i64 [ %75, %46 ], [ -1, %23 ], [ -1, %30 ]
  ret i64 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3rtc13TimeUTCMicrosEv() local_unnamed_addr #3 {
  %1 = alloca %struct.timeval, align 8
  %2 = load %"class.rtc::ClockInterface"*, %"class.rtc::ClockInterface"** @_ZN3rtc7g_clockE, align 8
  %3 = icmp eq %"class.rtc::ClockInterface"* %2, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %0
  %5 = bitcast %"class.rtc::ClockInterface"* %2 to i64 (%"class.rtc::ClockInterface"*)***
  %6 = load i64 (%"class.rtc::ClockInterface"*)**, i64 (%"class.rtc::ClockInterface"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.rtc::ClockInterface"*)*, i64 (%"class.rtc::ClockInterface"*)** %6, i64 2
  %8 = load i64 (%"class.rtc::ClockInterface"*)*, i64 (%"class.rtc::ClockInterface"*)** %7, align 8
  %9 = tail call i64 %8(%"class.rtc::ClockInterface"* nonnull %2) #8
  %10 = sdiv i64 %9, 1000
  br label %21

11:                                               ; preds = %0
  %12 = bitcast %struct.timeval* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %13 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 0
  %14 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 1
  %15 = bitcast %struct.timeval* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = call i32 @gettimeofday(%struct.timeval* nonnull %1, i8* null) #8
  %17 = load i64, i64* %13, align 8
  %18 = mul nsw i64 %17, 1000000
  %19 = load i64, i64* %14, align 8
  %20 = add nsw i64 %18, %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  br label %21

21:                                               ; preds = %11, %4
  %22 = phi i64 [ %10, %4 ], [ %20, %11 ]
  ret i64 %22
}

; Function Attrs: nofree nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3rtc13TimeUTCMillisEv() local_unnamed_addr #3 {
  %1 = alloca %struct.timeval, align 8
  %2 = load %"class.rtc::ClockInterface"*, %"class.rtc::ClockInterface"** @_ZN3rtc7g_clockE, align 8
  %3 = icmp eq %"class.rtc::ClockInterface"* %2, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %0
  %5 = bitcast %"class.rtc::ClockInterface"* %2 to i64 (%"class.rtc::ClockInterface"*)***
  %6 = load i64 (%"class.rtc::ClockInterface"*)**, i64 (%"class.rtc::ClockInterface"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.rtc::ClockInterface"*)*, i64 (%"class.rtc::ClockInterface"*)** %6, i64 2
  %8 = load i64 (%"class.rtc::ClockInterface"*)*, i64 (%"class.rtc::ClockInterface"*)** %7, align 8
  %9 = tail call i64 %8(%"class.rtc::ClockInterface"* nonnull %2) #8
  %10 = sdiv i64 %9, 1000
  br label %20

11:                                               ; preds = %0
  %12 = bitcast %struct.timeval* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %13 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 0
  %14 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #8
  %15 = call i32 @gettimeofday(%struct.timeval* nonnull %1, i8* null) #8
  %16 = load i64, i64* %13, align 8
  %17 = mul nsw i64 %16, 1000000
  %18 = load i64, i64* %14, align 8
  %19 = add nsw i64 %17, %18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  br label %20

20:                                               ; preds = %4, %11
  %21 = phi i64 [ %10, %4 ], [ %19, %11 ]
  %22 = sdiv i64 %21, 1000
  ret i64 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
