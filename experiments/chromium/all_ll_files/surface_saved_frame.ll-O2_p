; ModuleID = '../../components/viz/service/surfaces/surface_saved_frame.cc'
source_filename = "../../components/viz/service/surfaces/surface_saved_frame.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.util::IdType.2" = type { %"class.base::StrongAlias.3" }
%"class.base::StrongAlias.3" = type { i64 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.viz::SurfaceSavedFrame" = type { %"class.viz::CompositorFrameTransitionDirective", %"class.base::OnceCallback", %"class.absl::optional", i64, i64, %"class.base::WeakPtrFactory" }
%"class.viz::CompositorFrameTransitionDirective" = type { i32, i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.util::IdType"*, %"class.util::IdType"*, %"class.std::__1::__compressed_pair" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.util::IdType"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.viz::SurfaceSavedFrame::FrameResult" }
%"struct.viz::SurfaceSavedFrame::FrameResult" = type { %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"class.std::__1::vector.12" }
%"struct.viz::SurfaceSavedFrame::OutputCopyResult" = type { %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", %class.SkBitmap, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData", i8, %"class.base::OnceCallback.11" }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.2", i64 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.10 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.4, i32, i32 }
%class.sk_sp.4 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.10 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"struct.viz::SurfaceSavedFrame::RenderPassDrawData" = type { %"class.gfx::Rect", %"class.gfx::Transform", float }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.base::OnceCallback.11" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.absl::optional.14"*, %"class.absl::optional.14"*, %"class.std::__1::__compressed_pair.19" }
%"class.absl::optional.14" = type { %"class.absl::optional_internal::optional_data.15" }
%"class.absl::optional_internal::optional_data.15" = type { %"class.absl::optional_internal::optional_data_base.16" }
%"class.absl::optional_internal::optional_data_base.16" = type { %"class.absl::optional_internal::optional_data_dtor_base.17" }
%"class.absl::optional_internal::optional_data_dtor_base.17" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"struct.viz::SurfaceSavedFrame::OutputCopyResult" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.absl::optional.14"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.24 }
%class.scoped_refptr.24 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.25", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.5" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.viz::Surface" = type { %"class.viz::SurfaceInfo", %"class.viz::SurfaceId", %"class.viz::SurfaceManager"*, %"class.base::WeakPtr", %"class.std::__1::unique_ptr", %"class.absl::optional.39", %"class.absl::optional.39", %"class.absl::optional.191", i8, i8, %"class.base::internal::flat_tree.196", %"class.std::__1::vector.70", %"class.base::internal::flat_tree.197", %"class.base::internal::flat_tree.196", %"class.base::internal::flat_tree.197", i8, i8, %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceSavedFrameStorage", i8, %"class.base::WeakPtrFactory.213" }
%"class.viz::SurfaceInfo" = type <{ %"class.viz::SurfaceId", float, %"class.gfx::Size", [4 x i8] }>
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.viz::SurfaceManager" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.26 }
%class.scoped_refptr.26 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.viz::SurfaceDependencyDeadline"* }
%"class.viz::SurfaceDependencyDeadline" = type { %"class.base::TickClock"*, %"class.base::TimeTicks", %"class.absl::optional.29" }
%"class.base::TickClock" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.29" = type { %"class.absl::optional_internal::optional_data.30" }
%"class.absl::optional_internal::optional_data.30" = type { %"class.absl::optional_internal::optional_data_base.31" }
%"class.absl::optional_internal::optional_data_base.31" = type { %"class.absl::optional_internal::optional_data_dtor_base.32" }
%"class.absl::optional_internal::optional_data_dtor_base.32" = type { i8, %union.anon.33 }
%union.anon.33 = type { %"class.base::TimeTicks" }
%"class.absl::optional.39" = type { %"class.absl::optional_internal::optional_data.40" }
%"class.absl::optional_internal::optional_data.40" = type { %"class.absl::optional_internal::optional_data_base.41" }
%"class.absl::optional_internal::optional_data_base.41" = type { %"class.absl::optional_internal::optional_data_dtor_base.42" }
%"class.absl::optional_internal::optional_data_dtor_base.42" = type { i8, [7 x i8], %union.anon.43 }
%union.anon.43 = type { %"struct.viz::Surface::FrameData" }
%"struct.viz::Surface::FrameData" = type <{ %"class.viz::CompositorFrame", i64, i8, i8, i8, [5 x i8] }>
%"class.viz::CompositorFrame" = type { %"class.viz::CompositorFrameMetadata", %"class.std::__1::vector.100", %"class.std::__1::vector.119" }
%"class.viz::CompositorFrameMetadata" = type { float, %"class.gfx::Vector2dF", float, %"class.gfx::SizeF", i8, i8, i8, i32, %"class.std::__1::vector.44", %"class.std::__1::vector.58", %"class.std::__1::vector.70", %"class.viz::FrameDeadline", %"struct.viz::BeginFrameAck", i32, i8, float, %"class.absl::optional.77", %"class.absl::optional.82", i32, %"class.std::__1::unique_ptr.87", %"class.std::__1::vector.93" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"*, %"class.std::__1::__compressed_pair.53" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.46" }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.48" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.ui::LatencyInfo"* }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.65" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.60", %"class.viz::SurfaceId" }
%"class.absl::optional.60" = type { %"class.absl::optional_internal::optional_data.61" }
%"class.absl::optional_internal::optional_data.61" = type { %"class.absl::optional_internal::optional_data_base.62" }
%"class.absl::optional_internal::optional_data_base.62" = type { %"class.absl::optional_internal::optional_data_dtor_base.63" }
%"class.absl::optional_internal::optional_data_dtor_base.63" = type { i8, %union.anon.64 }
%union.anon.64 = type { %"class.viz::SurfaceId" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.viz::SurfaceRange"* }
%"class.viz::FrameDeadline" = type <{ %"class.base::TimeTicks", i32, [4 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameAck" = type <{ %"struct.viz::BeginFrameId", i64, i8, [7 x i8] }>
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.absl::optional.77" = type { %"class.absl::optional_internal::optional_data.78" }
%"class.absl::optional_internal::optional_data.78" = type { %"class.absl::optional_internal::optional_data_base.79" }
%"class.absl::optional_internal::optional_data_base.79" = type { %"class.absl::optional_internal::optional_data_dtor_base.80" }
%"class.absl::optional_internal::optional_data_dtor_base.80" = type { i8, %union.anon.81 }
%union.anon.81 = type { float }
%"class.absl::optional.82" = type { %"class.absl::optional_internal::optional_data.83" }
%"class.absl::optional_internal::optional_data.83" = type { %"class.absl::optional_internal::optional_data_base.84" }
%"class.absl::optional_internal::optional_data_base.84" = type { %"class.absl::optional_internal::optional_data_dtor_base.85" }
%"class.absl::optional_internal::optional_data_dtor_base.85" = type { i8, %union.anon.86 }
%union.anon.86 = type { %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.viz::CompositorFrameTransitionDirective"* }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"struct.viz::TransferableResource"*, %"struct.viz::TransferableResource"*, %"class.std::__1::__compressed_pair.114" }
%"struct.viz::TransferableResource" = type { %"class.util::IdType.102", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.104", i8, i32, i8, [7 x i8], %"class.absl::optional.109" }
%"class.util::IdType.102" = type { %"class.base::StrongAlias.103" }
%"class.base::StrongAlias.103" = type { i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"class.absl::optional.104" = type { %"class.absl::optional_internal::optional_data.105" }
%"class.absl::optional_internal::optional_data.105" = type { %"class.absl::optional_internal::optional_data_base.106" }
%"class.absl::optional_internal::optional_data_base.106" = type { %"class.absl::optional_internal::optional_data_dtor_base.107" }
%"class.absl::optional_internal::optional_data_dtor_base.107" = type { i8, %union.anon.108 }
%union.anon.108 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.109" = type { %"class.absl::optional_internal::optional_data.110" }
%"class.absl::optional_internal::optional_data.110" = type { %"class.absl::optional_internal::optional_data_base.111" }
%"class.absl::optional_internal::optional_data_base.111" = type { %"class.absl::optional_internal::optional_data_dtor_base.112" }
%"class.absl::optional_internal::optional_data_dtor_base.112" = type { i8, [7 x i8], %union.anon.113 }
%union.anon.113 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.viz::TransferableResource"* }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"class.std::__1::unique_ptr.121"*, %"class.std::__1::unique_ptr.121"*, %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.viz::CompositorRenderPass"* }
%"class.viz::CompositorRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [4 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.145", i8, i8, i8, i8, %"class.std::__1::vector.150", %"class.viz::QuadList", %"class.cc::ListContainer.182" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.124" }
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.140" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.126, [20 x float], i32, [4 x i8], %"class.std::__1::vector.133", i32, [4 x i8] }>
%class.sk_sp.126 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.127, i32, %"class.absl::optional.128", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.127 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.128" = type { %"class.absl::optional_internal::optional_data.129" }
%"class.absl::optional_internal::optional_data.129" = type { %"class.absl::optional_internal::optional_data_base.130" }
%"class.absl::optional_internal::optional_data_base.130" = type { %"class.absl::optional_internal::optional_data_dtor_base.131" }
%"class.absl::optional_internal::optional_data_dtor_base.131" = type { i8, %union.anon.132 }
%union.anon.132 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.145" = type { %"class.absl::optional_internal::optional_data.146" }
%"class.absl::optional_internal::optional_data.146" = type { %"class.absl::optional_internal::optional_data_base.147" }
%"class.absl::optional_internal::optional_data_base.147" = type { %"class.absl::optional_internal::optional_data_dtor_base.148" }
%"class.absl::optional_internal::optional_data_dtor_base.148" = type { i8, %union.anon.149 }
%union.anon.149 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"class.std::__1::unique_ptr.152"*, %"class.std::__1::unique_ptr.152"*, %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.viz::CopyOutputRequest"* }
%"class.viz::CopyOutputRequest" = type { i8, %"class.base::OnceCallback.155", %class.scoped_refptr.156, %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.absl::optional.158", %"class.absl::optional.163", %"class.absl::optional.163" }
%"class.base::OnceCallback.155" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.156 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.157" }>
%"class.base::RefCountedThreadSafe.157" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.absl::optional.158" = type { %"class.absl::optional_internal::optional_data.159" }
%"class.absl::optional_internal::optional_data.159" = type { %"class.absl::optional_internal::optional_data_base.160" }
%"class.absl::optional_internal::optional_data_base.160" = type { %"class.absl::optional_internal::optional_data_dtor_base.161" }
%"class.absl::optional_internal::optional_data_dtor_base.161" = type { i8, %union.anon.162 }
%union.anon.162 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.163" = type { %"class.absl::optional_internal::optional_data.164" }
%"class.absl::optional_internal::optional_data.164" = type { %"class.absl::optional_internal::optional_data_base.165" }
%"class.absl::optional_internal::optional_data_base.165" = type { %"class.absl::optional_internal::optional_data_dtor_base.166" }
%"class.absl::optional_internal::optional_data_dtor_base.166" = type { i8, %union.anon.167 }
%union.anon.167 = type { %"class.gfx::Rect" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.std::__1::unique_ptr.152"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.176" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.182" = type { %"class.cc::ListContainerHelper" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.std::__1::unique_ptr.121"* }
%"class.absl::optional.191" = type { %"class.absl::optional_internal::optional_data.192" }
%"class.absl::optional_internal::optional_data.192" = type { %"class.absl::optional_internal::optional_data_base.193" }
%"class.absl::optional_internal::optional_data_base.193" = type { %"class.absl::optional_internal::optional_data_dtor_base.194" }
%"class.absl::optional_internal::optional_data_dtor_base.194" = type { i8, %union.anon.195 }
%union.anon.195 = type { %"class.viz::CompositorFrame" }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.viz::SurfaceId"* }
%"class.base::internal::flat_tree.196" = type { %"class.std::__1::vector.70" }
%"class.base::internal::flat_tree.197" = type { %"class.std::__1::vector.198" }
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"**, %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.viz::SurfaceAllocationGroup"** }
%"class.viz::SurfaceAllocationGroup" = type opaque
%"class.viz::SurfaceSavedFrameStorage" = type { %"class.viz::Surface"*, %"class.base::internal::CancelableCallbackImpl", %"class.std::__1::unique_ptr.207" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.205", %"class.base::WeakPtrFactory.206" }
%"class.base::OnceCallback.205" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.206" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.viz::SurfaceSavedFrame"* }
%"class.base::WeakPtrFactory.213" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtr.214" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.221 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.157", [4 x i8] }>
%"class.viz::CopyOutputResult" = type { i32 (...)**, i8, %"class.gfx::Rect", i8, %class.SkBitmap }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.224 }
%union.anon.224 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.viz::CopyOutputResult::ScopedSkBitmap" = type { %"class.viz::CopyOutputResult"* }
%"struct.viz::CopyOutputResult::TextureResult" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", %"class.gfx::ColorSpace", [4 x i8] }>
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.viz::CopyOutputResult"* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.229", %"class.std::__1::__tuple_leaf.230", %"class.std::__1::__tuple_leaf.231" }
%"class.std::__1::__tuple_leaf" = type { %"class.base::WeakPtr.214" }
%"class.std::__1::__tuple_leaf.229" = type { i32 }
%"class.std::__1::__tuple_leaf.230" = type { i32 }
%"class.std::__1::__tuple_leaf.231" = type { %"struct.viz::SurfaceSavedFrame::RenderPassDrawData" }

$_ZNSt3__16vectorIN4absl8optionalIN3viz17SurfaceSavedFrame16OutputCopyResultEEENS_9allocatorIS6_EEE6resizeEm = comdat any

$_ZN4absl8optionalIN3viz17SurfaceSavedFrame16OutputCopyResultEE7emplaceIJEvEERS3_DpOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_iS6_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseEOSE_ = comdat any

$_ZN4base8internal13FunctorTraitsIMN3viz17SurfaceSavedFrameEFvNS3_10ResultTypeEmRKNS3_18RenderPassDrawDataENSt3__110unique_ptrINS2_16CopyOutputResultENS8_14default_deleteISA_EEEEEvE6InvokeISF_NS_7WeakPtrIS3_EEJS4_iS5_SD_EEEvT_OT0_DpOT1_ = comdat any

$_ZN4base8internal9BindStateIMN3viz17SurfaceSavedFrameEFvNS3_10ResultTypeEmRKNS3_18RenderPassDrawDataENSt3__110unique_ptrINS2_16CopyOutputResultENS8_14default_deleteISA_EEEEEJNS_7WeakPtrIS3_EES4_iS5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_iS6_EEEEEbPKNS0_13BindStateBaseENSK_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_mS6_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseEOSE_ = comdat any

$_ZN4base8internal13FunctorTraitsIMN3viz17SurfaceSavedFrameEFvNS3_10ResultTypeEmRKNS3_18RenderPassDrawDataENSt3__110unique_ptrINS2_16CopyOutputResultENS8_14default_deleteISA_EEEEEvE6InvokeISF_NS_7WeakPtrIS3_EEJS4_mS5_SD_EEEvT_OT0_DpOT1_ = comdat any

$_ZN4base8internal9BindStateIMN3viz17SurfaceSavedFrameEFvNS3_10ResultTypeEmRKNS3_18RenderPassDrawDataENSt3__110unique_ptrINS2_16CopyOutputResultENS8_14default_deleteISA_EEEEEJNS_7WeakPtrIS3_EES4_mS5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_mS6_EEEEEbPKNS0_13BindStateBaseENSK_21CancellationQueryModeE = comdat any

$_ZNSt3__16vectorIN4absl8optionalIN3viz17SurfaceSavedFrame16OutputCopyResultEEENS_9allocatorIS6_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN4absl8optionalIN3viz17SurfaceSavedFrame16OutputCopyResultEEENS_9allocatorIS6_EEE13__vdeallocateEv = comdat any

@.str = private unnamed_addr constant [52 x i8] c"shared_index < frame_result_->shared_results.size()\00", align 1
@.str.1 = private unnamed_addr constant [61 x i8] c"../../components/viz/service/surfaces/surface_saved_frame.cc\00", align 1
@__const._ZN3viz17SurfaceSavedFrame26NotifyCopyOfOutputCompleteENS0_10ResultTypeEmRKNS0_18RenderPassDrawDataENSt3__110unique_ptrINS_16CopyOutputResultENS5_14default_deleteIS7_EEEE.output_copy_texture = private unnamed_addr constant <{ %"struct.gpu::Mailbox", { i8, i8, [6 x i8], %"class.util::IdType.2", i64 }, %"class.gfx::ColorSpace", [4 x i8] }> <{ %"struct.gpu::Mailbox" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, { i8, i8, [6 x i8], %"class.util::IdType.2", i64 } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.util::IdType.2" { %"class.base::StrongAlias.3" { i64 -6148914691236517206 } }, i64 -6148914691236517206 }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@.str.3 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN3viz17SurfaceSavedFrameC1ENS_34CompositorFrameTransitionDirectiveEN4base12OnceCallbackIFvjEEE = hidden unnamed_addr alias void (%"class.viz::SurfaceSavedFrame"*, %"class.viz::CompositorFrameTransitionDirective"*, %"class.base::OnceCallback"*), void (%"class.viz::SurfaceSavedFrame"*, %"class.viz::CompositorFrameTransitionDirective"*, %"class.base::OnceCallback"*)* @_ZN3viz17SurfaceSavedFrameC2ENS_34CompositorFrameTransitionDirectiveEN4base12OnceCallbackIFvjEEE
@_ZN3viz17SurfaceSavedFrameD1Ev = hidden unnamed_addr alias void (%"class.viz::SurfaceSavedFrame"*), void (%"class.viz::SurfaceSavedFrame"*)* @_ZN3viz17SurfaceSavedFrameD2Ev
@_ZN3viz17SurfaceSavedFrame16OutputCopyResultC1Ev = hidden unnamed_addr alias void (%"struct.viz::SurfaceSavedFrame::OutputCopyResult"*), void (%"struct.viz::SurfaceSavedFrame::OutputCopyResult"*)* @_ZN3viz17SurfaceSavedFrame16OutputCopyResultC2Ev
@_ZN3viz17SurfaceSavedFrame16OutputCopyResultC1EOS1_ = hidden unnamed_addr alias void (%"struct.viz::SurfaceSavedFrame::OutputCopyResult"*, %"struct.viz::SurfaceSavedFrame::OutputCopyResult"*), void (%"struct.viz::SurfaceSavedFrame::OutputCopyResult"*, %"struct.viz::SurfaceSavedFrame::OutputCopyResult"*)* @_ZN3viz17SurfaceSavedFrame16OutputCopyResultC2EOS1_
@_ZN3viz17SurfaceSavedFrame16OutputCopyResultD1Ev = hidden unnamed_addr alias void (%"struct.viz::SurfaceSavedFrame::OutputCopyResult"*), void (%"struct.viz::SurfaceSavedFrame::OutputCopyResult"*)* @_ZN3viz17SurfaceSavedFrame16OutputCopyResultD2Ev
@_ZN3viz17SurfaceSavedFrame11FrameResultC1Ev = hidden unnamed_addr alias void (%"struct.viz::SurfaceSavedFrame::FrameResult"*), void (%"struct.viz::SurfaceSavedFrame::FrameResult"*)* @_ZN3viz17SurfaceSavedFrame11FrameResultC2Ev
@_ZN3viz17SurfaceSavedFrame11FrameResultC1EOS1_ = hidden unnamed_addr alias void (%"struct.viz::SurfaceSavedFrame::FrameResult"*, %"struct.viz::SurfaceSavedFrame::FrameResult"*), void (%"struct.viz::SurfaceSavedFrame::FrameResult"*, %"struct.viz::SurfaceSavedFrame::FrameResult"*)* @_ZN3viz17SurfaceSavedFrame11FrameResultC2EOS1_
@_ZN3viz17SurfaceSavedFrame11FrameResultD1Ev = hidden unnamed_addr alias void (%"struct.viz::SurfaceSavedFrame::FrameResult"*), void (%"struct.viz::SurfaceSavedFrame::FrameResult"*)* @_ZN3viz17SurfaceSavedFrame11FrameResultD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceSavedFrameC2ENS_34CompositorFrameTransitionDirectiveEN4base12OnceCallbackIFvjEEE(%"class.viz::SurfaceSavedFrame"*, %"class.viz::CompositorFrameTransitionDirective"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 0
  tail call void @_ZN3viz34CompositorFrameTransitionDirectiveC1ERKS0_(%"class.viz::CompositorFrameTransitionDirective"* %4, %"class.viz::CompositorFrameTransitionDirective"* dereferenceable(40) %1) #8
  %5 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %12 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 5, i32 0
  %13 = ptrtoint %"class.viz::SurfaceSavedFrame"* %0 to i64
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 240, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %12, i64 %13) #8
  ret void
}

declare void @_ZN3viz34CompositorFrameTransitionDirectiveC1ERKS0_(%"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"* dereferenceable(40)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceSavedFrameD2Ev(%"class.viz::SurfaceSavedFrame"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %5, align 8
  %7 = icmp eq %"class.base::internal::BindStateBase"* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %"class.base::internal::BindStateBase"* %6 to i64
  %10 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  %13 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %9, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %6, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*, i32)**
  %17 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* nonnull %6, i32 %11) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  br label %18

18:                                               ; preds = %1, %8
  %19 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 5, i32 0
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %19) #8
  %20 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3viz17SurfaceSavedFrame11FrameResultD2Ev(%"struct.viz::SurfaceSavedFrame::FrameResult"* %24) #8
  store i8 0, i8* %20, align 8
  br label %25

25:                                               ; preds = %18, %23
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #8
  %26 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 0
  call void @_ZN3viz34CompositorFrameTransitionDirectiveD1Ev(%"class.viz::CompositorFrameTransitionDirective"* %26) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3viz34CompositorFrameTransitionDirectiveD1Ev(%"class.viz::CompositorFrameTransitionDirective"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3viz17SurfaceSavedFrame7IsValidEv(%"class.viz::SurfaceSavedFrame"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #8, !alias.scope !3
  %7 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %8 = bitcast %"class.util::IdType"** %7 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !3
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !3
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %95, label %15

15:                                               ; preds = %1
  %16 = icmp ugt i64 %13, 2305843009213693951
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %18) #9
  unreachable

19:                                               ; preds = %15
  %20 = tail call i8* @_Znwm(i64 %12) #10
  %21 = ptrtoint i8* %20 to i64
  %22 = bitcast i8* %20 to %"class.util::IdType"*
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %24 = bitcast %"class.util::IdType"** %23 to i8**
  store i8* %20, i8** %24, align 8, !alias.scope !3
  %25 = bitcast %"class.std::__1::vector"* %2 to i8**
  store i8* %20, i8** %25, align 8, !alias.scope !3
  %26 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %22, i64 %13
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.util::IdType"* %26, %"class.util::IdType"** %27, align 8, !alias.scope !3
  %28 = bitcast %"class.util::IdType"** %23 to i64*
  %29 = icmp sgt i64 %12, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %19
  %31 = lshr exact i64 %12, 3
  %32 = inttoptr i64 %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %32, i64 %12, i1 false) #8
  %33 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %22, i64 %31
  %34 = ptrtoint %"class.util::IdType"* %33 to i64
  br label %35

35:                                               ; preds = %30, %19
  %36 = phi i64 [ %34, %30 ], [ %21, %19 ]
  store i64 %36, i64* %28, align 8, !alias.scope !3
  %37 = inttoptr i64 %36 to %"class.util::IdType"*
  %38 = icmp eq %"class.util::IdType"* %22, %37
  br i1 %38, label %66, label %39

39:                                               ; preds = %35
  %40 = getelementptr %"class.util::IdType", %"class.util::IdType"* %37, i64 -1, i32 0, i32 0
  %41 = ptrtoint i64* %40 to i64
  %42 = sub i64 %41, %21
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 3
  %46 = icmp ult i64 %42, 24
  br i1 %46, label %49, label %47

47:                                               ; preds = %39
  %48 = sub nsw i64 %44, %45
  br label %68

49:                                               ; preds = %68, %39
  %50 = phi i64 [ undef, %39 ], [ %91, %68 ]
  %51 = phi i64 [ 1, %39 ], [ %91, %68 ]
  %52 = phi %"class.util::IdType"* [ %22, %39 ], [ %92, %68 ]
  %53 = icmp eq i64 %45, 0
  br i1 %53, label %66, label %54

54:                                               ; preds = %49, %54
  %55 = phi i64 [ %62, %54 ], [ %51, %49 ]
  %56 = phi %"class.util::IdType"* [ %63, %54 ], [ %52, %49 ]
  %57 = phi i64 [ %64, %54 ], [ %45, %49 ]
  %58 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %56, i64 0, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = icmp ne i64 %59, 0
  %61 = zext i1 %60 to i64
  %62 = add i64 %55, %61
  %63 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %56, i64 1
  %64 = add i64 %57, -1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %54, !llvm.loop !6

66:                                               ; preds = %49, %54, %35
  %67 = phi i64 [ 1, %35 ], [ %50, %49 ], [ %62, %54 ]
  store i64 %21, i64* %28, align 8
  tail call void @_ZdlPv(i8* nonnull %20) #10
  br label %95

68:                                               ; preds = %68, %47
  %69 = phi i64 [ 1, %47 ], [ %91, %68 ]
  %70 = phi %"class.util::IdType"* [ %22, %47 ], [ %92, %68 ]
  %71 = phi i64 [ %48, %47 ], [ %93, %68 ]
  %72 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %70, i64 0, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp ne i64 %73, 0
  %75 = zext i1 %74 to i64
  %76 = add i64 %69, %75
  %77 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %70, i64 1, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp ne i64 %78, 0
  %80 = zext i1 %79 to i64
  %81 = add i64 %76, %80
  %82 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %70, i64 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = icmp ne i64 %83, 0
  %85 = zext i1 %84 to i64
  %86 = add i64 %81, %85
  %87 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %70, i64 3, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = icmp ne i64 %88, 0
  %90 = zext i1 %89 to i64
  %91 = add i64 %86, %90
  %92 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %70, i64 4
  %93 = add i64 %71, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %49, label %68

95:                                               ; preds = %1, %66
  %96 = phi i64 [ %67, %66 ], [ 1, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  %97 = icmp eq i64 %4, %96
  ret i1 %97
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3viz17SurfaceSavedFrame19ExpectedResultCountEv(%"class.viz::SurfaceSavedFrame"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8
  %4 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #8, !alias.scope !8
  %5 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %6 = bitcast %"class.util::IdType"** %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %69, label %13

13:                                               ; preds = %1
  %14 = icmp ugt i64 %11, 2305843009213693951
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %16) #9
  unreachable

17:                                               ; preds = %13
  %18 = tail call i8* @_Znwm(i64 %10) #10
  %19 = ptrtoint i8* %18 to i64
  %20 = bitcast i8* %18 to %"class.util::IdType"*
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %22 = bitcast %"class.util::IdType"** %21 to i8**
  store i8* %18, i8** %22, align 8, !alias.scope !8
  %23 = bitcast %"class.std::__1::vector"* %2 to i8**
  store i8* %18, i8** %23, align 8, !alias.scope !8
  %24 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %20, i64 %11
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.util::IdType"* %24, %"class.util::IdType"** %25, align 8, !alias.scope !8
  %26 = bitcast %"class.util::IdType"** %21 to i64*
  %27 = ptrtoint i8* %18 to i64
  %28 = icmp sgt i64 %10, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %17
  %30 = lshr exact i64 %10, 3
  %31 = inttoptr i64 %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %31, i64 %10, i1 false) #8
  %32 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %20, i64 %30
  %33 = ptrtoint %"class.util::IdType"* %32 to i64
  br label %34

34:                                               ; preds = %17, %29
  %35 = phi i64 [ %33, %29 ], [ %27, %17 ]
  store i64 %35, i64* %26, align 8, !alias.scope !8
  %36 = inttoptr i64 %35 to %"class.util::IdType"*
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %38 = icmp eq %"class.util::IdType"* %20, %36
  br i1 %38, label %66, label %39

39:                                               ; preds = %34
  %40 = getelementptr %"class.util::IdType", %"class.util::IdType"* %36, i64 -1, i32 0, i32 0
  %41 = ptrtoint i64* %40 to i64
  %42 = sub i64 %41, %19
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 3
  %46 = icmp ult i64 %42, 24
  br i1 %46, label %49, label %47

47:                                               ; preds = %39
  %48 = sub nsw i64 %44, %45
  br label %71

49:                                               ; preds = %71, %39
  %50 = phi i64 [ undef, %39 ], [ %94, %71 ]
  %51 = phi i64 [ 1, %39 ], [ %94, %71 ]
  %52 = phi %"class.util::IdType"* [ %20, %39 ], [ %95, %71 ]
  %53 = icmp eq i64 %45, 0
  br i1 %53, label %66, label %54

54:                                               ; preds = %49, %54
  %55 = phi i64 [ %62, %54 ], [ %51, %49 ]
  %56 = phi %"class.util::IdType"* [ %63, %54 ], [ %52, %49 ]
  %57 = phi i64 [ %64, %54 ], [ %45, %49 ]
  %58 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %56, i64 0, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = icmp ne i64 %59, 0
  %61 = zext i1 %60 to i64
  %62 = add i64 %55, %61
  %63 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %56, i64 1
  %64 = add i64 %57, -1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %54, !llvm.loop !11

66:                                               ; preds = %49, %54, %34
  %67 = phi i64 [ 1, %34 ], [ %50, %49 ], [ %62, %54 ]
  %68 = bitcast %"class.util::IdType"** %37 to i64*
  store i64 %19, i64* %68, align 8
  tail call void @_ZdlPv(i8* nonnull %18) #10
  br label %69

69:                                               ; preds = %1, %66
  %70 = phi i64 [ %67, %66 ], [ 1, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8
  ret i64 %70

71:                                               ; preds = %71, %47
  %72 = phi i64 [ 1, %47 ], [ %94, %71 ]
  %73 = phi %"class.util::IdType"* [ %20, %47 ], [ %95, %71 ]
  %74 = phi i64 [ %48, %47 ], [ %96, %71 ]
  %75 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %73, i64 0, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp ne i64 %76, 0
  %78 = zext i1 %77 to i64
  %79 = add i64 %72, %78
  %80 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %73, i64 1, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp ne i64 %81, 0
  %83 = zext i1 %82 to i64
  %84 = add i64 %79, %83
  %85 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %73, i64 2, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = icmp ne i64 %86, 0
  %88 = zext i1 %87 to i64
  %89 = add i64 %84, %88
  %90 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %73, i64 3, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp ne i64 %91, 0
  %93 = zext i1 %92 to i64
  %94 = add i64 %89, %93
  %95 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %73, i64 4
  %96 = add i64 %74, -4
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %49, label %71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceSavedFrame19RequestCopyOfOutputEPNS_7SurfaceE(%"class.viz::SurfaceSavedFrame"*, %"class.viz::Surface"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.155", align 8
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::OnceCallback.155", align 8
  %6 = alloca %"class.base::internal::WeakReference", align 8
  %7 = alloca { %"class.gfx::Rect", %"class.gfx::Transform" }, align 8
  %8 = alloca %"class.base::OnceCallback.155", align 8
  %9 = alloca %"class.base::WeakPtr.214", align 8
  %10 = alloca %"class.std::__1::vector", align 8
  %11 = alloca [80 x i8], align 4
  %12 = alloca [3 x i8], align 1
  %13 = alloca %"class.base::OnceCallback.155", align 8
  %14 = alloca %"class.base::WeakPtr.214", align 8
  %15 = bitcast { %"class.gfx::Rect", %"class.gfx::Transform" }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 84, i8* nonnull %15)
  %16 = tail call dereferenceable(296) %"class.viz::CompositorFrame"* @_ZNK3viz7Surface14GetActiveFrameEv(%"class.viz::Surface"* %1) #8, !noalias !12
  %17 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %16, i64 0, i32 2, i32 0, i32 1
  %18 = load %"class.std::__1::unique_ptr.121"*, %"class.std::__1::unique_ptr.121"** %17, align 8, !noalias !12
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.121"* %18, i64 -1, i32 0, i32 0, i32 0
  %20 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %19, align 8, !noalias !12
  %21 = bitcast %"class.viz::CompositorRenderPass"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 4 %21, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %20, i64 0, i32 0, i32 2
  %23 = bitcast %"class.gfx::Transform"* %22 to i8*
  %24 = getelementptr inbounds { %"class.gfx::Rect", %"class.gfx::Transform" }, { %"class.gfx::Rect", %"class.gfx::Transform" }* %7, i64 0, i32 1
  %25 = bitcast %"class.gfx::Transform"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 4 %23, i64 68, i1 false)
  %26 = bitcast %"class.base::OnceCallback.155"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = bitcast %"class.base::WeakPtr.214"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8
  %28 = bitcast %"class.base::internal::WeakReference"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8, !noalias !15
  %29 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 5, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %6, %"class.base::internal::WeakReferenceOwner"* %29) #8, !noalias !15
  %30 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 5, i32 0, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !15
  %32 = getelementptr inbounds %"class.base::WeakPtr.214", %"class.base::WeakPtr.214"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %32, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %6, i64 %31) #8
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8, !noalias !15
  %33 = call i8* @_Znwm(i64 160) #10, !noalias !18
  %34 = bitcast i8* %33 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %34, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.215"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_iS6_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseEOSE_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3viz17SurfaceSavedFrameEFvNS3_10ResultTypeEmRKNS3_18RenderPassDrawDataENSt3__110unique_ptrINS2_16CopyOutputResultENS8_14default_deleteISA_EEEEEJNS_7WeakPtrIS3_EES4_iS5_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_iS6_EEEEEbPKNS0_13BindStateBaseENSK_21CancellationQueryModeE) #8, !noalias !18
  %35 = getelementptr inbounds i8, i8* %33, i64 32
  %36 = bitcast i8* %35 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.viz::SurfaceSavedFrame"*, i32, i64, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"*, %"class.viz::CopyOutputResult"*)* @_ZN3viz17SurfaceSavedFrame26NotifyCopyOfOutputCompleteENS0_10ResultTypeEmRKNS0_18RenderPassDrawDataENSt3__110unique_ptrINS_16CopyOutputResultENS5_14default_deleteIS7_EEEE to i64), i64 0>, <2 x i64>* %36, align 8, !noalias !18
  %37 = getelementptr inbounds i8, i8* %33, i64 48
  %38 = bitcast i8* %37 to %"class.base::internal::WeakReference"*
  %39 = getelementptr inbounds %"class.base::WeakPtr.214", %"class.base::WeakPtr.214"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %38, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %39) #8, !noalias !18
  %40 = getelementptr inbounds i8, i8* %33, i64 56
  %41 = bitcast i8* %40 to i64*
  %42 = getelementptr inbounds %"class.base::WeakPtr.214", %"class.base::WeakPtr.214"* %9, i64 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8, !noalias !18
  store i64 %43, i64* %41, align 8, !noalias !18
  %44 = getelementptr inbounds i8, i8* %33, i64 64
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4, !noalias !18
  %46 = getelementptr inbounds i8, i8* %33, i64 68
  %47 = bitcast i8* %46 to i32*
  store i32 0, i32* %47, align 4, !noalias !18
  %48 = getelementptr inbounds i8, i8* %33, i64 72
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* nonnull align 8 %15, i64 16, i1 false), !noalias !18
  %49 = getelementptr inbounds i8, i8* %33, i64 88
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 8 %25, i64 68, i1 false), !noalias !18
  %50 = getelementptr inbounds i8, i8* %33, i64 156
  %51 = bitcast i8* %50 to i32*
  store i32 1065353216, i32* %51, align 4, !noalias !18
  %52 = bitcast %"class.base::OnceCallback.155"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52)
  %53 = call i8* @_Znwm(i64 104) #10
  %54 = bitcast i8* %53 to %"class.viz::CopyOutputRequest"*
  %55 = getelementptr inbounds %"class.base::OnceCallback.155", %"class.base::OnceCallback.155"* %8, i64 0, i32 0, i32 0, i32 0
  %56 = ptrtoint i8* %33 to i64
  %57 = bitcast %"class.base::OnceCallback.155"* %5 to i64*
  store i64 %56, i64* %57, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %55, align 8
  call void @_ZN3viz17CopyOutputRequestC1ENS_16CopyOutputResult6FormatEN4base12OnceCallbackIFvNSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEEEE(%"class.viz::CopyOutputRequest"* nonnull %54, i8 zeroext 1, %"class.base::OnceCallback.155"* nonnull %5) #8
  %58 = getelementptr inbounds %"class.base::OnceCallback.155", %"class.base::OnceCallback.155"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52)
  %59 = getelementptr inbounds %"class.base::OnceCallback.155", %"class.base::OnceCallback.155"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %59) #8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %32) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %60 = call dereferenceable(8) %class.scoped_refptr.221* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #8
  %61 = bitcast %class.scoped_refptr.221* %60 to %"class.base::SequencedTaskRunner"**
  %62 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %61, align 8
  %63 = icmp eq %"class.base::SequencedTaskRunner"* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %2
  %65 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %62, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 1 monotonic
  br label %67

67:                                               ; preds = %2, %64
  %68 = ptrtoint %"class.base::SequencedTaskRunner"* %62 to i64
  %69 = getelementptr inbounds i8, i8* %53, i64 16
  %70 = bitcast i8* %69 to i64*
  %71 = bitcast i8* %69 to %"class.base::SequencedTaskRunner"**
  %72 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %71, align 8
  store i64 %68, i64* %70, align 8
  %73 = icmp eq %"class.base::SequencedTaskRunner"* %72, null
  br i1 %73, label %82, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %72, i64 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.base::RefCountedThreadSafe.157", %"class.base::RefCountedThreadSafe.157"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw sub i32* %76, i32 1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.base::RefCountedThreadSafe.157", %"class.base::RefCountedThreadSafe.157"* %75, i64 -2
  %81 = bitcast %"class.base::RefCountedThreadSafe.157"* %80 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %81) #8
  br label %82

82:                                               ; preds = %67, %74, %79
  call void @_ZN3viz7Surface35RequestCopyOfOutputOnRootRenderPassENSt3__110unique_ptrINS_17CopyOutputRequestENS1_14default_deleteIS3_EEEE(%"class.viz::Surface"* %1, %"class.viz::CopyOutputRequest"* nonnull %54) #8
  %83 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 3
  store i64 1, i64* %83, align 8
  %84 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #8
  %85 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 24, i1 false) #8, !alias.scope !23
  %86 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %87 = bitcast %"class.util::IdType"** %86 to i64*
  %88 = load i64, i64* %87, align 8, !noalias !23
  %89 = bitcast %"class.std::__1::vector"* %85 to i64*
  %90 = load i64, i64* %89, align 8, !noalias !23
  %91 = sub i64 %88, %90
  %92 = ashr exact i64 %91, 3
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %144, label %94

94:                                               ; preds = %82
  %95 = icmp ugt i64 %92, 2305843009213693951
  br i1 %95, label %96, label %98

96:                                               ; preds = %94
  %97 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %97) #9
  unreachable

98:                                               ; preds = %94
  %99 = call i8* @_Znwm(i64 %91) #10
  %100 = bitcast i8* %99 to %"class.util::IdType"*
  %101 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %102 = bitcast %"class.util::IdType"** %101 to i8**
  store i8* %99, i8** %102, align 8, !alias.scope !23
  %103 = bitcast %"class.std::__1::vector"* %10 to i8**
  store i8* %99, i8** %103, align 8, !alias.scope !23
  %104 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %100, i64 %92
  %105 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.util::IdType"* %104, %"class.util::IdType"** %105, align 8, !alias.scope !23
  %106 = bitcast %"class.util::IdType"** %101 to i64*
  %107 = ptrtoint i8* %99 to i64
  %108 = icmp sgt i64 %91, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %98
  store i64 %107, i64* %106, align 8, !alias.scope !23
  %110 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %111 = bitcast %"class.util::IdType"** %110 to i64*
  br label %140

112:                                              ; preds = %98
  %113 = lshr exact i64 %91, 3
  %114 = inttoptr i64 %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %99, i8* align 8 %114, i64 %91, i1 false) #8
  %115 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %100, i64 %113
  %116 = ptrtoint %"class.util::IdType"* %115 to i64
  store i64 %116, i64* %106, align 8, !alias.scope !23
  %117 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %118 = bitcast %"class.util::IdType"** %117 to i64*
  %119 = bitcast %"class.std::__1::vector"* %10 to i64*
  %120 = bitcast i8* %99 to %"class.util::IdType"*
  %121 = icmp eq %"class.util::IdType"* %115, %120
  %122 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  br i1 %121, label %140, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds [80 x i8], [80 x i8]* %11, i64 0, i64 0
  %125 = getelementptr inbounds [3 x i8], [3 x i8]* %12, i64 0, i64 0
  %126 = getelementptr inbounds [80 x i8], [80 x i8]* %11, i64 0, i64 16
  %127 = bitcast %"class.base::OnceCallback.155"* %13 to i8*
  %128 = bitcast %"class.base::WeakPtr.214"* %14 to i8*
  %129 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  %130 = getelementptr inbounds %"class.base::WeakPtr.214", %"class.base::WeakPtr.214"* %14, i64 0, i32 0
  %131 = getelementptr inbounds %"class.base::WeakPtr.214", %"class.base::WeakPtr.214"* %14, i64 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.base::WeakPtr.214", %"class.base::WeakPtr.214"* %14, i64 0, i32 0, i32 1
  %133 = bitcast %"class.base::OnceCallback.155"* %3 to i8*
  %134 = getelementptr inbounds %"class.base::OnceCallback.155", %"class.base::OnceCallback.155"* %13, i64 0, i32 0, i32 0, i32 0
  %135 = bitcast %"class.base::OnceCallback.155"* %3 to i64*
  %136 = getelementptr inbounds %"class.base::OnceCallback.155", %"class.base::OnceCallback.155"* %3, i64 0, i32 0
  %137 = getelementptr inbounds %"class.base::OnceCallback.155", %"class.base::OnceCallback.155"* %13, i64 0, i32 0
  br label %145

138:                                              ; preds = %240
  %139 = icmp eq i64 %241, 0
  br i1 %139, label %144, label %140

140:                                              ; preds = %109, %112, %138
  %141 = phi i64 [ %241, %138 ], [ %107, %112 ], [ %107, %109 ]
  %142 = phi i64* [ %118, %138 ], [ %118, %112 ], [ %111, %109 ]
  store i64 %141, i64* %142, align 8
  %143 = inttoptr i64 %141 to i8*
  call void @_ZdlPv(i8* %143) #10
  br label %144

144:                                              ; preds = %82, %140, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #8
  call void @llvm.lifetime.end.p0i8(i64 84, i8* nonnull %15)
  ret void

145:                                              ; preds = %123, %240
  %146 = phi i64 [ %107, %123 ], [ %241, %240 ]
  %147 = phi i64 [ %116, %123 ], [ %242, %240 ]
  %148 = phi i64 [ 0, %123 ], [ %243, %240 ]
  %149 = inttoptr i64 %146 to %"class.util::IdType"*
  %150 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %149, i64 %148, i32 0, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %240, label %153

153:                                              ; preds = %145
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %124)
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %125)
  %154 = call dereferenceable(296) %"class.viz::CompositorFrame"* @_ZNK3viz7Surface14GetActiveFrameEv(%"class.viz::Surface"* %1) #8, !noalias !26
  %155 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %154, i64 0, i32 2
  %156 = getelementptr inbounds %"class.std::__1::vector.119", %"class.std::__1::vector.119"* %155, i64 0, i32 0, i32 0
  %157 = load %"class.std::__1::unique_ptr.121"*, %"class.std::__1::unique_ptr.121"** %156, align 8, !noalias !26
  %158 = getelementptr inbounds %"class.viz::CompositorFrame", %"class.viz::CompositorFrame"* %154, i64 0, i32 2, i32 0, i32 1
  %159 = load %"class.std::__1::unique_ptr.121"*, %"class.std::__1::unique_ptr.121"** %158, align 8, !noalias !26
  %160 = icmp eq %"class.std::__1::unique_ptr.121"* %157, %159
  br i1 %160, label %182, label %161

161:                                              ; preds = %153
  %162 = load i64, i64* %150, align 8, !noalias !26
  br label %165

163:                                              ; preds = %165
  %164 = icmp eq %"class.std::__1::unique_ptr.121"* %172, %159
  br i1 %164, label %182, label %165

165:                                              ; preds = %163, %161
  %166 = phi %"class.std::__1::unique_ptr.121"* [ %157, %161 ], [ %172, %163 ]
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.121"* %166, i64 0, i32 0, i32 0, i32 0
  %168 = load %"class.viz::CompositorRenderPass"*, %"class.viz::CompositorRenderPass"** %167, align 8, !noalias !26
  %169 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %168, i64 0, i32 1, i32 0, i32 0
  %170 = load i64, i64* %169, align 8, !noalias !26
  %171 = icmp eq i64 %162, %170
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.121"* %166, i64 1
  br i1 %171, label %173, label %163

173:                                              ; preds = %165
  %174 = call float @_ZN3viz15TransitionUtils25ComputeAccumulatedOpacityERKNSt3__16vectorINS1_10unique_ptrINS_20CompositorRenderPassENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEN4util6IdTypeIS4_mLm0ELm1EEE(%"class.std::__1::vector.119"* dereferenceable(24) %155, i64 %162) #8, !noalias !26
  %175 = bitcast %"class.viz::CompositorRenderPass"* %168 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %124, i8* align 4 %175, i64 16, i1 false)
  %176 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %168, i64 0, i32 0, i32 2
  %177 = bitcast %"class.gfx::Transform"* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 %177, i64 64, i1 false)
  %178 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %168, i64 0, i32 0, i32 2, i32 0, i32 1
  %179 = load i8, i8* %178, align 4
  %180 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %168, i64 0, i32 0, i32 2, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %125, i8* align 1 %180, i64 3, i1 false)
  %181 = bitcast float %174 to i32
  br label %183

182:                                              ; preds = %163, %153
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %124, i8 0, i64 16, i1 false), !alias.scope !26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %125, i8 0, i64 3, i1 false), !alias.scope !26
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false)
  br label %183

183:                                              ; preds = %173, %182
  %184 = phi i32 [ 1065353216, %182 ], [ %181, %173 ]
  %185 = phi i8 [ 0, %182 ], [ %179, %173 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #8, !noalias !29
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %29) #8, !noalias !29
  %186 = load i64, i64* %30, align 8, !noalias !29
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %130, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %186) #8
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #8, !noalias !29
  %187 = call i8* @_Znwm(i64 168) #10, !noalias !32
  %188 = bitcast i8* %187 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %188, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.215"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_mS6_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseEOSE_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3viz17SurfaceSavedFrameEFvNS3_10ResultTypeEmRKNS3_18RenderPassDrawDataENSt3__110unique_ptrINS2_16CopyOutputResultENS8_14default_deleteISA_EEEEEJNS_7WeakPtrIS3_EES4_mS5_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_mS6_EEEEEbPKNS0_13BindStateBaseENSK_21CancellationQueryModeE) #8, !noalias !32
  %189 = getelementptr inbounds i8, i8* %187, i64 32
  %190 = bitcast i8* %189 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.viz::SurfaceSavedFrame"*, i32, i64, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"*, %"class.viz::CopyOutputResult"*)* @_ZN3viz17SurfaceSavedFrame26NotifyCopyOfOutputCompleteENS0_10ResultTypeEmRKNS0_18RenderPassDrawDataENSt3__110unique_ptrINS_16CopyOutputResultENS5_14default_deleteIS7_EEEE to i64), i64 0>, <2 x i64>* %190, align 8, !noalias !32
  %191 = getelementptr inbounds i8, i8* %187, i64 48
  %192 = bitcast i8* %191 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %192, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %131) #8, !noalias !32
  %193 = getelementptr inbounds i8, i8* %187, i64 56
  %194 = bitcast i8* %193 to i64*
  %195 = load i64, i64* %132, align 8, !noalias !32
  store i64 %195, i64* %194, align 8, !noalias !32
  %196 = getelementptr inbounds i8, i8* %187, i64 64
  %197 = bitcast i8* %196 to i32*
  store i32 1, i32* %197, align 4, !noalias !32
  %198 = getelementptr inbounds i8, i8* %187, i64 72
  %199 = bitcast i8* %198 to i64*
  store i64 %148, i64* %199, align 8, !noalias !32
  %200 = getelementptr inbounds i8, i8* %187, i64 80
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* nonnull align 4 %124, i64 16, i1 false), !noalias !32
  %201 = getelementptr inbounds i8, i8* %187, i64 96
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %201, i8* align 4 %126, i64 64, i1 false), !noalias !32
  %202 = getelementptr inbounds i8, i8* %187, i64 160
  store i8 %185, i8* %202, align 4, !noalias !32
  %203 = getelementptr inbounds i8, i8* %187, i64 161
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %203, i8* nonnull align 1 %125, i64 3, i1 false), !noalias !32
  %204 = getelementptr inbounds i8, i8* %187, i64 164
  %205 = bitcast i8* %204 to i32*
  store i32 %184, i32* %205, align 4, !noalias !32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133)
  %206 = call i8* @_Znwm(i64 104) #10
  %207 = bitcast i8* %206 to %"class.viz::CopyOutputRequest"*
  %208 = ptrtoint i8* %187 to i64
  store i64 %208, i64* %135, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %134, align 8
  call void @_ZN3viz17CopyOutputRequestC1ENS_16CopyOutputResult6FormatEN4base12OnceCallbackIFvNSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEEEE(%"class.viz::CopyOutputRequest"* nonnull %207, i8 zeroext 1, %"class.base::OnceCallback.155"* nonnull %3) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %136) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %137) #8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %130) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #8
  %209 = call dereferenceable(8) %class.scoped_refptr.221* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #8
  %210 = bitcast %class.scoped_refptr.221* %209 to %"class.base::SequencedTaskRunner"**
  %211 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %210, align 8
  %212 = icmp eq %"class.base::SequencedTaskRunner"* %211, null
  br i1 %212, label %216, label %213

213:                                              ; preds = %183
  %214 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %211, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = atomicrmw add i32* %214, i32 1 monotonic
  br label %216

216:                                              ; preds = %183, %213
  %217 = ptrtoint %"class.base::SequencedTaskRunner"* %211 to i64
  %218 = getelementptr inbounds i8, i8* %206, i64 16
  %219 = bitcast i8* %218 to i64*
  %220 = bitcast i8* %218 to %"class.base::SequencedTaskRunner"**
  %221 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %220, align 8
  store i64 %217, i64* %219, align 8
  %222 = icmp eq %"class.base::SequencedTaskRunner"* %221, null
  br i1 %222, label %231, label %223

223:                                              ; preds = %216
  %224 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %221, i64 0, i32 0, i32 1
  %225 = getelementptr inbounds %"class.base::RefCountedThreadSafe.157", %"class.base::RefCountedThreadSafe.157"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = atomicrmw sub i32* %225, i32 1 acq_rel
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %231

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.base::RefCountedThreadSafe.157", %"class.base::RefCountedThreadSafe.157"* %224, i64 -2
  %230 = bitcast %"class.base::RefCountedThreadSafe.157"* %229 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %230) #8
  br label %231

231:                                              ; preds = %228, %223, %216
  %232 = load %"class.util::IdType"*, %"class.util::IdType"** %122, align 8
  %233 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %232, i64 %148, i32 0, i32 0
  %234 = load i64, i64* %233, align 8
  %235 = call zeroext i1 @_ZN3viz7Surface44RequestCopyOfOutputOnActiveFrameRenderPassIdENSt3__110unique_ptrINS_17CopyOutputRequestENS1_14default_deleteIS3_EEEEN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEE(%"class.viz::Surface"* %1, %"class.viz::CopyOutputRequest"* nonnull %207, i64 %234) #8
  %236 = load i64, i64* %83, align 8
  %237 = add i64 %236, 1
  store i64 %237, i64* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %124)
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %125)
  %238 = load i64, i64* %118, align 8
  %239 = load i64, i64* %119, align 8
  br label %240

240:                                              ; preds = %145, %231
  %241 = phi i64 [ %146, %145 ], [ %239, %231 ]
  %242 = phi i64 [ %147, %145 ], [ %238, %231 ]
  %243 = add nuw i64 %148, 1
  %244 = sub i64 %242, %241
  %245 = ashr exact i64 %244, 3
  %246 = icmp ult i64 %243, %245
  br i1 %246, label %145, label %138
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceSavedFrame26NotifyCopyOfOutputCompleteENS0_10ResultTypeEmRKNS0_18RenderPassDrawDataENSt3__110unique_ptrINS_16CopyOutputResultENS5_14default_deleteIS7_EEEE(%"class.viz::SurfaceSavedFrame"*, i32, i64, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* nocapture readonly dereferenceable(88), %"class.viz::CopyOutputResult"*) #0 align 2 {
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %class.SkBitmap, align 8
  %12 = alloca %"class.viz::CopyOutputResult::ScopedSkBitmap", align 8
  %13 = alloca %"struct.viz::CopyOutputResult::TextureResult", align 8
  %14 = alloca %"class.base::OnceCallback.11", align 8
  %15 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, -1
  store i64 %17, i64* %15, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %33

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %20, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.base::OnceCallback"* %20 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %26, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %29 = inttoptr i64 %26 to %"class.base::internal::BindStateBase"*
  %30 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %29, i64 0, i32 1
  %31 = bitcast void ()** %30 to void (%"class.base::internal::BindStateBase"*, i32)**
  %32 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %31, align 8
  tail call void %32(%"class.base::internal::BindStateBase"* %29, i32 %22) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  br label %33

33:                                               ; preds = %19, %5
  %34 = call zeroext i1 @_ZNK3viz16CopyOutputResult7IsEmptyEv(%"class.viz::CopyOutputResult"* %4) #8
  br i1 %34, label %186, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 4
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %36, align 8
  %39 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %103

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %44 = bitcast i8* %43 to %"struct.gpu::Mailbox"*
  call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* %44) #8
  %45 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 16
  %46 = bitcast i8* %45 to %"struct.gpu::SyncToken"*
  call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* %46) #8
  %47 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 40
  %48 = bitcast i8* %47 to %class.SkBitmap*
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %48) #8
  %49 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 4 %49, i8 0, i64 16, i1 false) #8
  %50 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #8
  %51 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 176
  store i8 0, i8* %51, align 4
  %52 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 180
  %53 = bitcast i8* %52 to float*
  store float 1.000000e+00, float* %53, align 4
  %54 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 184
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 192
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 32, i1 false) #8
  store i8 1, i8* %39, align 8
  %56 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %57 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #8
  %58 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 24, i1 false) #8, !alias.scope !37
  %59 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %60 = bitcast %"class.util::IdType"** %59 to i64*
  %61 = load i64, i64* %60, align 8, !noalias !37
  %62 = bitcast %"class.std::__1::vector"* %58 to i64*
  %63 = load i64, i64* %62, align 8, !noalias !37
  %64 = sub i64 %61, %63
  %65 = ashr exact i64 %64, 3
  %66 = icmp eq i64 %64, 0
  br i1 %66, label %89, label %67

67:                                               ; preds = %42
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %70) #9
  unreachable

71:                                               ; preds = %67
  %72 = call i8* @_Znwm(i64 %64) #10
  %73 = bitcast i8* %72 to %"class.util::IdType"*
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %75 = bitcast %"class.util::IdType"** %74 to i8**
  store i8* %72, i8** %75, align 8, !alias.scope !37
  %76 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %72, i8** %76, align 8, !alias.scope !37
  %77 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %73, i64 %65
  %78 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.util::IdType"* %77, %"class.util::IdType"** %78, align 8, !alias.scope !37
  %79 = bitcast %"class.util::IdType"** %74 to i64*
  %80 = ptrtoint i8* %72 to i64
  %81 = icmp sgt i64 %64, 0
  br i1 %81, label %82, label %87

82:                                               ; preds = %71
  %83 = lshr exact i64 %64, 3
  %84 = inttoptr i64 %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* align 8 %84, i64 %64, i1 false) #8
  %85 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %73, i64 %83
  %86 = ptrtoint %"class.util::IdType"* %85 to i64
  br label %87

87:                                               ; preds = %82, %71
  %88 = phi i64 [ %86, %82 ], [ %80, %71 ]
  store i64 %88, i64* %79, align 8, !alias.scope !37
  br label %89

89:                                               ; preds = %42, %87
  %90 = phi i64 [ %80, %87 ], [ 0, %42 ]
  %91 = phi i64 [ %88, %87 ], [ 0, %42 ]
  %92 = sub i64 %91, %90
  %93 = ashr exact i64 %92, 3
  call void @_ZNSt3__16vectorIN4absl8optionalIN3viz17SurfaceSavedFrame16OutputCopyResultEEENS_9allocatorIS6_EEE6resizeEm(%"class.std::__1::vector.12"* %56, i64 %93)
  %94 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %95 = load %"class.util::IdType"*, %"class.util::IdType"** %94, align 8
  %96 = icmp eq %"class.util::IdType"* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %99 = bitcast %"class.util::IdType"** %98 to i64*
  %100 = ptrtoint %"class.util::IdType"* %95 to i64
  store i64 %100, i64* %99, align 8
  %101 = bitcast %"class.util::IdType"* %95 to i8*
  call void @_ZdlPv(i8* %101) #10
  br label %102

102:                                              ; preds = %89, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #8
  br label %103

103:                                              ; preds = %35, %102
  %104 = icmp eq i32 %1, 0
  br i1 %104, label %105, label %111

105:                                              ; preds = %103
  %106 = load i8, i8* %39, align 8, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %109, !prof !40

108:                                              ; preds = %105
  call void @llvm.trap() #8
  unreachable

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %147

111:                                              ; preds = %103
  %112 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #8
  %113 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %113, align 8
  %114 = load i8, i8* %39, align 8, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %117, !prof !40

116:                                              ; preds = %111
  call void @llvm.trap() #8
  unreachable

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %119 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %120 = bitcast %"class.absl::optional.14"** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::__1::vector.12"* %118 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = sub i64 %121, %123
  %125 = sdiv exact i64 %124, 208
  %126 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126)
  %127 = icmp ugt i64 %125, %2
  br i1 %127, label %128, label %129

128:                                              ; preds = %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126)
  store i8* null, i8** %113, align 8
  br label %138

129:                                              ; preds = %117
  %130 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  %131 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %125) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* %130, i8* %131) #8
  %132 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %133 = load i8*, i8** %132, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126)
  store i8* %133, i8** %113, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %129
  %136 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 153, %"class.logging::CheckOpResult"* nonnull %9) #8
  %137 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #8
  br label %138

138:                                              ; preds = %128, %129, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #8
  %139 = load i8, i8* %39, align 8, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %142, !prof !40

141:                                              ; preds = %138
  call void @llvm.trap() #8
  unreachable

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %118, i64 0, i32 0, i32 0
  %144 = load %"class.absl::optional.14"*, %"class.absl::optional.14"** %143, align 8
  %145 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %144, i64 %2
  %146 = call dereferenceable(200) %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* @_ZN4absl8optionalIN3viz17SurfaceSavedFrame16OutputCopyResultEE7emplaceIJEvEERS3_DpOT_(%"class.absl::optional.14"* %145)
  br label %147

147:                                              ; preds = %142, %109
  %148 = phi %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* [ %110, %109 ], [ %146, %142 ]
  %149 = getelementptr inbounds %"class.viz::CopyOutputResult", %"class.viz::CopyOutputResult"* %4, i64 0, i32 1
  %150 = load i8, i8* %149, align 8
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %157

152:                                              ; preds = %147
  %153 = bitcast %class.SkBitmap* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %153) #8
  %154 = bitcast %"class.viz::CopyOutputResult::ScopedSkBitmap"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #8
  call void @_ZNK3viz16CopyOutputResult20ScopedAccessSkBitmapEv(%"class.viz::CopyOutputResult::ScopedSkBitmap"* nonnull sret %12, %"class.viz::CopyOutputResult"* %4) #8
  call void @_ZNK3viz16CopyOutputResult14ScopedSkBitmap18GetOutScopedBitmapEv(%class.SkBitmap* nonnull sret %11, %"class.viz::CopyOutputResult::ScopedSkBitmap"* nonnull %12) #8
  %155 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %148, i64 0, i32 2
  %156 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %155, %class.SkBitmap* nonnull dereferenceable(56) %11) #8
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %11) #8
  call void @_ZN3viz16CopyOutputResult14ScopedSkBitmapD1Ev(%"class.viz::CopyOutputResult::ScopedSkBitmap"* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %153) #8
  br label %180

157:                                              ; preds = %147
  %158 = getelementptr inbounds %"struct.viz::CopyOutputResult::TextureResult", %"struct.viz::CopyOutputResult::TextureResult"* %13, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %158) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %158, i8* align 8 getelementptr inbounds (<{ %"struct.gpu::Mailbox", { i8, i8, [6 x i8], %"class.util::IdType.2", i64 }, %"class.gfx::ColorSpace", [4 x i8] }>, <{ %"struct.gpu::Mailbox", { i8, i8, [6 x i8], %"class.util::IdType.2", i64 }, %"class.gfx::ColorSpace", [4 x i8] }>* @__const._ZN3viz17SurfaceSavedFrame26NotifyCopyOfOutputCompleteENS0_10ResultTypeEmRKNS0_18RenderPassDrawDataENSt3__110unique_ptrINS_16CopyOutputResultENS5_14default_deleteIS7_EEEE.output_copy_texture, i64 0, i32 0, i32 0, i64 0), i64 112, i1 false)
  %159 = bitcast %"class.viz::CopyOutputResult"* %4 to %"struct.viz::CopyOutputResult::TextureResult"* (%"class.viz::CopyOutputResult"*)***
  %160 = load %"struct.viz::CopyOutputResult::TextureResult"* (%"class.viz::CopyOutputResult"*)**, %"struct.viz::CopyOutputResult::TextureResult"* (%"class.viz::CopyOutputResult"*)*** %159, align 8
  %161 = getelementptr inbounds %"struct.viz::CopyOutputResult::TextureResult"* (%"class.viz::CopyOutputResult"*)*, %"struct.viz::CopyOutputResult::TextureResult"* (%"class.viz::CopyOutputResult"*)** %160, i64 2
  %162 = load %"struct.viz::CopyOutputResult::TextureResult"* (%"class.viz::CopyOutputResult"*)*, %"struct.viz::CopyOutputResult::TextureResult"* (%"class.viz::CopyOutputResult"*)** %161, align 8
  %163 = call %"struct.viz::CopyOutputResult::TextureResult"* %162(%"class.viz::CopyOutputResult"* %4) #8
  %164 = getelementptr inbounds %"struct.viz::CopyOutputResult::TextureResult", %"struct.viz::CopyOutputResult::TextureResult"* %163, i64 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %158, i8* align 8 %164, i64 16, i1 false) #8
  %165 = getelementptr inbounds %"struct.viz::CopyOutputResult::TextureResult", %"struct.viz::CopyOutputResult::TextureResult"* %13, i64 0, i32 1
  %166 = getelementptr inbounds %"struct.viz::CopyOutputResult::TextureResult", %"struct.viz::CopyOutputResult::TextureResult"* %163, i64 0, i32 1
  call void @_ZN3gpu9SyncTokenC1ERKS0_(%"struct.gpu::SyncToken"* %165, %"struct.gpu::SyncToken"* dereferenceable(24) %166) #8
  %167 = getelementptr inbounds %"struct.viz::CopyOutputResult::TextureResult", %"struct.viz::CopyOutputResult::TextureResult"* %13, i64 0, i32 2, i32 0
  %168 = getelementptr inbounds %"struct.viz::CopyOutputResult::TextureResult", %"struct.viz::CopyOutputResult::TextureResult"* %163, i64 0, i32 2, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 68, i1 false) #8
  %169 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %148, i64 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* nonnull align 8 %158, i64 16, i1 false)
  %170 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %148, i64 0, i32 1, i32 0
  %171 = getelementptr inbounds %"struct.viz::CopyOutputResult::TextureResult", %"struct.viz::CopyOutputResult::TextureResult"* %13, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* align 8 %171, i64 24, i1 false)
  %172 = bitcast %"class.base::OnceCallback.11"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #8
  %173 = bitcast %"class.viz::CopyOutputResult"* %4 to void (%"class.base::OnceCallback.11"*, %"class.viz::CopyOutputResult"*)***
  %174 = load void (%"class.base::OnceCallback.11"*, %"class.viz::CopyOutputResult"*)**, void (%"class.base::OnceCallback.11"*, %"class.viz::CopyOutputResult"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.base::OnceCallback.11"*, %"class.viz::CopyOutputResult"*)*, void (%"class.base::OnceCallback.11"*, %"class.viz::CopyOutputResult"*)** %174, i64 3
  %176 = load void (%"class.base::OnceCallback.11"*, %"class.viz::CopyOutputResult"*)*, void (%"class.base::OnceCallback.11"*, %"class.viz::CopyOutputResult"*)** %175, align 8
  call void %176(%"class.base::OnceCallback.11"* nonnull sret %14, %"class.viz::CopyOutputResult"* %4) #8
  %177 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %148, i64 0, i32 5, i32 0
  %178 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %14, i64 0, i32 0
  %179 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %177, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %178) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %178) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %158) #8
  br label %180

180:                                              ; preds = %157, %152
  %181 = phi i8 [ 0, %157 ], [ 1, %152 ]
  %182 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %148, i64 0, i32 4
  store i8 %181, i8* %182, align 8
  %183 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %148, i64 0, i32 3
  %184 = bitcast %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* %183 to i8*
  %185 = bitcast %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* align 4 %185, i64 88, i1 false)
  br label %186

186:                                              ; preds = %33, %180
  %187 = icmp eq %"class.viz::CopyOutputResult"* %4, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %186
  %189 = bitcast %"class.viz::CopyOutputResult"* %4 to void (%"class.viz::CopyOutputResult"*)***
  %190 = load void (%"class.viz::CopyOutputResult"*)**, void (%"class.viz::CopyOutputResult"*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.viz::CopyOutputResult"*)*, void (%"class.viz::CopyOutputResult"*)** %190, i64 1
  %192 = load void (%"class.viz::CopyOutputResult"*)*, void (%"class.viz::CopyOutputResult"*)** %191, align 8
  call void %192(%"class.viz::CopyOutputResult"* nonnull %4) #8
  br label %193

193:                                              ; preds = %186, %188
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

declare dereferenceable(8) %class.scoped_refptr.221* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare void @_ZN3viz7Surface35RequestCopyOfOutputOnRootRenderPassENSt3__110unique_ptrINS_17CopyOutputRequestENS1_14default_deleteIS3_EEEE(%"class.viz::Surface"*, %"class.viz::CopyOutputRequest"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3viz7Surface44RequestCopyOfOutputOnActiveFrameRenderPassIdENSt3__110unique_ptrINS_17CopyOutputRequestENS1_14default_deleteIS3_EEEEN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEE(%"class.viz::Surface"*, %"class.viz::CopyOutputRequest"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i1 @_ZNK3viz16CopyOutputResult7IsEmptyEv(%"class.viz::CopyOutputResult"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl8optionalIN3viz17SurfaceSavedFrame16OutputCopyResultEEENS_9allocatorIS6_EEE6resizeEm(%"class.std::__1::vector.12"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.11", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.absl::optional.14"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 208
  %11 = icmp ult i64 %10, %1
  %12 = inttoptr i64 %8 to %"class.absl::optional.14"*
  %13 = inttoptr i64 %6 to %"class.absl::optional.14"*
  br i1 %11, label %14, label %16

14:                                               ; preds = %2
  %15 = sub i64 %1, %10
  tail call void @_ZNSt3__16vectorIN4absl8optionalIN3viz17SurfaceSavedFrame16OutputCopyResultEEENS_9allocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"* %0, i64 %15)
  br label %48

16:                                               ; preds = %2
  %17 = icmp ugt i64 %10, %1
  br i1 %17, label %18, label %48

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %12, i64 %1
  %20 = icmp eq %"class.absl::optional.14"* %19, %13
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.base::OnceCallback.11"* %3 to i8*
  %23 = bitcast %"class.base::OnceCallback.11"* %3 to i64*
  %24 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %3, i64 0, i32 0
  br label %25

25:                                               ; preds = %45, %21
  %26 = phi %"class.absl::optional.14"* [ %13, %21 ], [ %27, %45 ]
  %27 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %26, i64 -1
  %28 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %45, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %26, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %33 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %34, align 8
  %36 = icmp eq %"class.base::internal::BindStateBase"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %31
  %38 = ptrtoint %"class.base::internal::BindStateBase"* %35 to i64
  %39 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %26, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store i64 %38, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %40 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %35, i64 0, i32 1
  %41 = bitcast void ()** %40 to void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)**
  %42 = load void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)*, void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)** %41, align 8
  call void %42(%"class.base::internal::BindStateBase"* nonnull %35, %"struct.gpu::SyncToken"* dereferenceable(24) %39, i1 zeroext false) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  br label %43

43:                                               ; preds = %37, %31
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %33) #8
  %44 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %26, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %44) #8
  store i8 0, i8* %28, align 8
  br label %45

45:                                               ; preds = %43, %25
  %46 = icmp eq %"class.absl::optional.14"* %27, %19
  br i1 %46, label %47, label %25

47:                                               ; preds = %45, %18
  store %"class.absl::optional.14"* %19, %"class.absl::optional.14"** %4, align 8
  br label %48

48:                                               ; preds = %16, %47, %14
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(200) %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* @_ZN4absl8optionalIN3viz17SurfaceSavedFrame16OutputCopyResultEE7emplaceIJEvEERS3_DpOT_(%"class.absl::optional.14"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.11", align 8
  %3 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %8 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %9, align 8
  %11 = icmp eq %"class.base::internal::BindStateBase"* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %6
  %13 = ptrtoint %"class.base::internal::BindStateBase"* %10 to i64
  %14 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %15 = bitcast %"class.base::OnceCallback.11"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  %16 = bitcast %"class.base::OnceCallback.11"* %2 to i64*
  store i64 %13, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %17 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %19 = bitcast void ()** %18 to void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)**
  %20 = load void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)*, void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)** %19, align 8
  tail call void %20(%"class.base::internal::BindStateBase"* nonnull %10, %"struct.gpu::SyncToken"* dereferenceable(24) %14, i1 zeroext false) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  br label %21

21:                                               ; preds = %12, %6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %8) #8
  %22 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %22) #8
  store i8 0, i8* %3, align 8
  br label %23

23:                                               ; preds = %1, %21
  %24 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %25 = bitcast i8* %24 to %"struct.gpu::Mailbox"*
  call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* %25) #8
  %26 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 16
  %27 = bitcast i8* %26 to %"struct.gpu::SyncToken"*
  call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* %27) #8
  %28 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 40
  %29 = bitcast i8* %28 to %class.SkBitmap*
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %29) #8
  %30 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 16, i1 false) #8
  %31 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #8
  %32 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 176
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 180
  %34 = bitcast i8* %33 to float*
  store float 1.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 184
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 192
  %37 = bitcast i8* %36 to %"class.base::internal::BindStateBase"**
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %37, align 8
  store i8 1, i8* %3, align 8
  %38 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  ret %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %38
}

declare void @_ZNK3viz16CopyOutputResult20ScopedAccessSkBitmapEv(%"class.viz::CopyOutputResult::ScopedSkBitmap"* sret, %"class.viz::CopyOutputResult"*) local_unnamed_addr #1

declare void @_ZNK3viz16CopyOutputResult14ScopedSkBitmap18GetOutScopedBitmapEv(%class.SkBitmap* sret, %"class.viz::CopyOutputResult::ScopedSkBitmap"*) local_unnamed_addr #1

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3viz16CopyOutputResult14ScopedSkBitmapD1Ev(%"class.viz::CopyOutputResult::ScopedSkBitmap"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceSavedFrame10TakeResultEv(%"class.absl::optional"* noalias sret, %"class.viz::SurfaceSavedFrame"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 232, i1 false) #8, !alias.scope !41
  %5 = load i8, i8* %4, align 8, !range !2, !noalias !41
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %9 = bitcast i8* %8 to %"struct.viz::SurfaceSavedFrame::OutputCopyResult"*
  %10 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN3viz17SurfaceSavedFrame16OutputCopyResultC2EOS1_(%"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %9, %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* dereferenceable(200) %10) #8
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 200
  %12 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %13 = bitcast %"class.std::__1::vector.12"* %12 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8, !noalias !41
  %15 = bitcast i8* %11 to <2 x i64>*
  store <2 x i64> %14, <2 x i64>* %15, align 8, !alias.scope !41
  %16 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.absl::optional.14"** %16 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !41
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 216
  %20 = bitcast i8* %19 to i64*
  store i64 %18, i64* %20, align 8, !alias.scope !41
  %21 = bitcast %"class.std::__1::vector.12"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #8, !noalias !41
  store i8 1, i8* %3, align 8, !alias.scope !41
  %22 = load i8, i8* %4, align 8, !noalias !41
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %7
  %25 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3viz17SurfaceSavedFrame11FrameResultD2Ev(%"struct.viz::SurfaceSavedFrame::FrameResult"* %25) #8
  store i8 0, i8* %4, align 8, !noalias !41
  br label %26

26:                                               ; preds = %2, %7, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceSavedFrame28CompleteSavedFrameForTestingEv(%"class.viz::SurfaceSavedFrame"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = alloca %class.SkBitmap, align 8
  %4 = alloca %struct.SkImageInfo, align 16
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = bitcast %class.SkBitmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %3) #8
  %7 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = bitcast %struct.SkImageInfo* %4 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %8, align 16, !alias.scope !44
  %9 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1
  %10 = bitcast %struct.SkISize* %9 to i64*
  store i64 85899345940, i64* %10, align 16, !alias.scope !44
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* nonnull %3, %struct.SkImageInfo* nonnull dereferenceable(24) %4) #8
  %11 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 16
  %13 = icmp eq %class.SkColorSpace* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 -1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = bitcast %class.SkColorSpace* %12 to i8*
  call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %18, %14, %1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  %21 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3viz17SurfaceSavedFrame11FrameResultD2Ev(%"struct.viz::SurfaceSavedFrame::FrameResult"* %25) #8
  store i8 0, i8* %21, align 8
  br label %26

26:                                               ; preds = %24, %20
  %27 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %28 = bitcast i8* %27 to %"struct.gpu::Mailbox"*
  call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* %28) #8
  %29 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 16
  %30 = bitcast i8* %29 to %"struct.gpu::SyncToken"*
  call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* %30) #8
  %31 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 40
  %32 = bitcast i8* %31 to %class.SkBitmap*
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %32) #8
  %33 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 16, i1 false) #8
  %34 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #8
  %35 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 176
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 180
  %37 = bitcast i8* %36 to float*
  store float 1.000000e+00, float* %37, align 4
  %38 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 184
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 192
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 32, i1 false) #8
  store i8 1, i8* %21, align 8
  %40 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %41 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %40, %class.SkBitmap* nonnull dereferenceable(56) %3) #8
  %42 = load i8, i8* %21, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %45, !prof !40

44:                                               ; preds = %26
  call void @llvm.trap() #8
  unreachable

45:                                               ; preds = %26
  %46 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 0, i32 1
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 1
  %49 = bitcast %"class.gfx::Size"* %48 to i64*
  store i64 85899345940, i64* %49, align 8
  %50 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3, i32 1, i32 0
  call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %50) #8
  %51 = load i8, i8* %21, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %54, !prof !40

53:                                               ; preds = %45
  call void @llvm.trap() #8
  unreachable

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3, i32 2
  store float 1.000000e+00, float* %55, align 4
  %56 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 4
  store i8 1, i8* %56, align 8
  %57 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %58 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #8
  %59 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #8, !alias.scope !49
  %60 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %61 = bitcast %"class.util::IdType"** %60 to i64*
  %62 = load i64, i64* %61, align 8, !noalias !49
  %63 = bitcast %"class.std::__1::vector"* %59 to i64*
  %64 = load i64, i64* %63, align 8, !noalias !49
  %65 = sub i64 %62, %64
  %66 = ashr exact i64 %65, 3
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %90, label %68

68:                                               ; preds = %54
  %69 = icmp ugt i64 %66, 2305843009213693951
  br i1 %69, label %70, label %72

70:                                               ; preds = %68
  %71 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %71) #9
  unreachable

72:                                               ; preds = %68
  %73 = call i8* @_Znwm(i64 %65) #10
  %74 = bitcast i8* %73 to %"class.util::IdType"*
  %75 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %76 = bitcast %"class.util::IdType"** %75 to i8**
  store i8* %73, i8** %76, align 8, !alias.scope !49
  %77 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %73, i8** %77, align 8, !alias.scope !49
  %78 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %74, i64 %66
  %79 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.util::IdType"* %78, %"class.util::IdType"** %79, align 8, !alias.scope !49
  %80 = bitcast %"class.util::IdType"** %75 to i64*
  %81 = ptrtoint i8* %73 to i64
  %82 = icmp sgt i64 %65, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %72
  %84 = lshr exact i64 %65, 3
  %85 = inttoptr i64 %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 %85, i64 %65, i1 false) #8
  %86 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %74, i64 %84
  %87 = ptrtoint %"class.util::IdType"* %86 to i64
  br label %88

88:                                               ; preds = %83, %72
  %89 = phi i64 [ %87, %83 ], [ %81, %72 ]
  store i64 %89, i64* %80, align 8, !alias.scope !49
  br label %90

90:                                               ; preds = %54, %88
  %91 = phi i64 [ %81, %88 ], [ 0, %54 ]
  %92 = phi i64 [ %89, %88 ], [ 0, %54 ]
  %93 = sub i64 %92, %91
  %94 = ashr exact i64 %93, 3
  call void @_ZNSt3__16vectorIN4absl8optionalIN3viz17SurfaceSavedFrame16OutputCopyResultEEENS_9allocatorIS6_EEE6resizeEm(%"class.std::__1::vector.12"* %57, i64 %94)
  %95 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %96 = load %"class.util::IdType"*, %"class.util::IdType"** %95, align 8
  %97 = icmp eq %"class.util::IdType"* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %100 = bitcast %"class.util::IdType"** %99 to i64*
  %101 = ptrtoint %"class.util::IdType"* %96 to i64
  store i64 %101, i64* %100, align 8
  %102 = bitcast %"class.util::IdType"* %96 to i8*
  call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %90, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #8
  %104 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 3
  store i64 0, i64* %104, align 8
  %105 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 24, i1 false) #8, !alias.scope !52
  %106 = load i64, i64* %61, align 8, !noalias !52
  %107 = load i64, i64* %63, align 8, !noalias !52
  %108 = sub i64 %106, %107
  %109 = ashr exact i64 %108, 3
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %191, label %111

111:                                              ; preds = %103
  %112 = icmp ugt i64 %109, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %111
  %114 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %114) #9
  unreachable

115:                                              ; preds = %111
  %116 = call i8* @_Znwm(i64 %108) #10
  %117 = ptrtoint i8* %116 to i64
  %118 = bitcast i8* %116 to %"class.util::IdType"*
  %119 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %120 = bitcast %"class.util::IdType"** %119 to i8**
  store i8* %116, i8** %120, align 8, !alias.scope !52
  %121 = bitcast %"class.std::__1::vector"* %2 to i8**
  store i8* %116, i8** %121, align 8, !alias.scope !52
  %122 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %118, i64 %109
  %123 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.util::IdType"* %122, %"class.util::IdType"** %123, align 8, !alias.scope !52
  %124 = bitcast %"class.util::IdType"** %119 to i64*
  %125 = icmp sgt i64 %108, 0
  br i1 %125, label %126, label %131

126:                                              ; preds = %115
  %127 = lshr exact i64 %108, 3
  %128 = inttoptr i64 %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %116, i8* align 8 %128, i64 %108, i1 false) #8
  %129 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %118, i64 %127
  %130 = ptrtoint %"class.util::IdType"* %129 to i64
  br label %131

131:                                              ; preds = %126, %115
  %132 = phi i64 [ %130, %126 ], [ %117, %115 ]
  store i64 %132, i64* %124, align 8, !alias.scope !52
  %133 = inttoptr i64 %132 to %"class.util::IdType"*
  %134 = icmp eq %"class.util::IdType"* %118, %133
  br i1 %134, label %162, label %135

135:                                              ; preds = %131
  %136 = getelementptr %"class.util::IdType", %"class.util::IdType"* %133, i64 -1, i32 0, i32 0
  %137 = ptrtoint i64* %136 to i64
  %138 = sub i64 %137, %117
  %139 = lshr i64 %138, 3
  %140 = add nuw nsw i64 %139, 1
  %141 = and i64 %140, 3
  %142 = icmp ult i64 %138, 24
  br i1 %142, label %145, label %143

143:                                              ; preds = %135
  %144 = sub nsw i64 %140, %141
  br label %164

145:                                              ; preds = %164, %135
  %146 = phi i64 [ undef, %135 ], [ %187, %164 ]
  %147 = phi i64 [ 1, %135 ], [ %187, %164 ]
  %148 = phi %"class.util::IdType"* [ %118, %135 ], [ %188, %164 ]
  %149 = icmp eq i64 %141, 0
  br i1 %149, label %162, label %150

150:                                              ; preds = %145, %150
  %151 = phi i64 [ %158, %150 ], [ %147, %145 ]
  %152 = phi %"class.util::IdType"* [ %159, %150 ], [ %148, %145 ]
  %153 = phi i64 [ %160, %150 ], [ %141, %145 ]
  %154 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %152, i64 0, i32 0, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = icmp ne i64 %155, 0
  %157 = zext i1 %156 to i64
  %158 = add i64 %151, %157
  %159 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %152, i64 1
  %160 = add i64 %153, -1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %150, !llvm.loop !55

162:                                              ; preds = %145, %150, %131
  %163 = phi i64 [ 1, %131 ], [ %146, %145 ], [ %158, %150 ]
  store i64 %117, i64* %124, align 8
  call void @_ZdlPv(i8* nonnull %116) #10
  br label %191

164:                                              ; preds = %164, %143
  %165 = phi i64 [ 1, %143 ], [ %187, %164 ]
  %166 = phi %"class.util::IdType"* [ %118, %143 ], [ %188, %164 ]
  %167 = phi i64 [ %144, %143 ], [ %189, %164 ]
  %168 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %166, i64 0, i32 0, i32 0
  %169 = load i64, i64* %168, align 8
  %170 = icmp ne i64 %169, 0
  %171 = zext i1 %170 to i64
  %172 = add i64 %165, %171
  %173 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %166, i64 1, i32 0, i32 0
  %174 = load i64, i64* %173, align 8
  %175 = icmp ne i64 %174, 0
  %176 = zext i1 %175 to i64
  %177 = add i64 %172, %176
  %178 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %166, i64 2, i32 0, i32 0
  %179 = load i64, i64* %178, align 8
  %180 = icmp ne i64 %179, 0
  %181 = zext i1 %180 to i64
  %182 = add i64 %177, %181
  %183 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %166, i64 3, i32 0, i32 0
  %184 = load i64, i64* %183, align 8
  %185 = icmp ne i64 %184, 0
  %186 = zext i1 %185 to i64
  %187 = add i64 %182, %186
  %188 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %166, i64 4
  %189 = add i64 %167, -4
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %145, label %164

191:                                              ; preds = %103, %162
  %192 = phi i64 [ %163, %162 ], [ 1, %103 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #8
  %193 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 4
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds %"class.viz::SurfaceSavedFrame", %"class.viz::SurfaceSavedFrame"* %0, i64 0, i32 5, i32 0, i32 0
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %194) #8
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

declare void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceSavedFrame16OutputCopyResultC2Ev(%"struct.viz::SurfaceSavedFrame::OutputCopyResult"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 0
  tail call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* %2) #8
  %3 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 1
  tail call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* %3) #8
  %4 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 2
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %4) #8
  %5 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 3
  %6 = bitcast %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 16, i1 false) #8
  %7 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 3, i32 1
  %8 = bitcast %"class.gfx::Transform"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #8
  %9 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 3, i32 2
  store float 1.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 4
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  ret void
}

declare void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"*) unnamed_addr #1

declare void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceSavedFrame16OutputCopyResultC2EOS1_(%"struct.viz::SurfaceSavedFrame::OutputCopyResult"*, %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* dereferenceable(200)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.gpu::Mailbox", align 1
  %4 = alloca %"struct.gpu::SyncToken", align 8
  %5 = alloca %class.SkBitmap, align 8
  %6 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 0
  tail call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* %6) #8
  %7 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 1
  tail call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* %7) #8
  %8 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 2
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %8) #8
  %9 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 3
  %10 = bitcast %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 16, i1 false) #8
  %11 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 3, i32 1
  %12 = bitcast %"class.gfx::Transform"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #8
  %13 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 3, i32 2
  store float 1.000000e+00, float* %14, align 4
  %15 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 4
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %17 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 0, i32 0, i64 0
  %18 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %1, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 1 %18, i64 16, i1 false) #8
  %19 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8
  call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* nonnull %3) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 1 %19, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %1, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #8
  %22 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8
  call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* nonnull %4) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %22, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8
  %23 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %1, i64 0, i32 2
  %24 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %8, %class.SkBitmap* dereferenceable(56) %23) #8
  %25 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %25) #8
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %5) #8
  %26 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %23, %class.SkBitmap* nonnull dereferenceable(56) %5) #8
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %25) #8
  %27 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %1, i64 0, i32 3
  %28 = bitcast %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %28, i64 88, i1 false) #8
  %29 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 5, i32 0
  %30 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %1, i64 0, i32 5, i32 0
  %31 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %29, %"class.base::internal::CallbackBase"* dereferenceable(8) %30) #8
  %32 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %1, i64 0, i32 4
  %33 = load i8, i8* %32, align 8, !range !2
  store i8 %33, i8* %15, align 8
  store i8 0, i8* %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(200) %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* @_ZN3viz17SurfaceSavedFrame16OutputCopyResultaSEOS1_(%"struct.viz::SurfaceSavedFrame::OutputCopyResult"* returned, %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* dereferenceable(200)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.gpu::Mailbox", align 1
  %4 = alloca %"struct.gpu::SyncToken", align 8
  %5 = alloca %class.SkBitmap, align 8
  %6 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 0, i32 0, i64 0
  %7 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %1, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 %7, i64 16, i1 false)
  %8 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* nonnull %3) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 1 %8, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %1, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* nonnull %4) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* nonnull align 8 %11, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %1, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 2
  %14 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %13, %class.SkBitmap* dereferenceable(56) %12) #8
  %15 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %15) #8
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %5) #8
  %16 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %12, %class.SkBitmap* nonnull dereferenceable(56) %5) #8
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %15) #8
  %17 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %1, i64 0, i32 3
  %18 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 3
  %19 = bitcast %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* %18 to i8*
  %20 = bitcast %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 4 %20, i64 88, i1 false)
  %21 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 5, i32 0
  %22 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %1, i64 0, i32 5, i32 0
  %23 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %21, %"class.base::internal::CallbackBase"* dereferenceable(8) %22) #8
  %24 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %1, i64 0, i32 4
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 4
  store i8 %25, i8* %26, align 8
  store i8 0, i8* %24, align 8
  ret %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceSavedFrame16OutputCopyResultD2Ev(%"struct.viz::SurfaceSavedFrame::OutputCopyResult"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.11", align 8
  %3 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %5, align 8
  %7 = icmp eq %"class.base::internal::BindStateBase"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %"class.base::internal::BindStateBase"* %6 to i64
  %10 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 1
  %11 = bitcast %"class.base::OnceCallback.11"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %12 = bitcast %"class.base::OnceCallback.11"* %2 to i64*
  store i64 %9, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %2, i64 0, i32 0
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %6, i64 0, i32 1
  %15 = bitcast void ()** %14 to void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)**
  %16 = load void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)*, void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)** %15, align 8
  tail call void %16(%"class.base::internal::BindStateBase"* nonnull %6, %"struct.gpu::SyncToken"* dereferenceable(24) %10, i1 zeroext false) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  br label %17

17:                                               ; preds = %1, %8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #8
  %18 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %0, i64 0, i32 2
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %18) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceSavedFrame11FrameResultC2Ev(%"struct.viz::SurfaceSavedFrame::FrameResult"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* %2) #8
  %3 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* %3) #8
  %4 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %4) #8
  %5 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 3
  %6 = bitcast %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 16, i1 false) #8
  %7 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 3, i32 1
  %8 = bitcast %"class.gfx::Transform"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #8
  %9 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 1
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 3, i32 2
  store float 1.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::internal::BindStateBase"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceSavedFrame11FrameResultC2EOS1_(%"struct.viz::SurfaceSavedFrame::FrameResult"*, %"struct.viz::SurfaceSavedFrame::FrameResult"* dereferenceable(224)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %1, i64 0, i32 0
  tail call void @_ZN3viz17SurfaceSavedFrame16OutputCopyResultC2EOS1_(%"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %3, %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* dereferenceable(200) %4)
  %5 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector.12"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  %8 = bitcast %"class.std::__1::vector.12"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.12"* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.absl::optional.14"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"class.absl::optional.14"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.absl::optional.14"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.absl::optional.14"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector.12"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17SurfaceSavedFrame11FrameResultD2Ev(%"struct.viz::SurfaceSavedFrame::FrameResult"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.11", align 8
  %3 = alloca %"class.base::OnceCallback.11", align 8
  %4 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.absl::optional.14"*, %"class.absl::optional.14"** %4, align 8
  %6 = icmp eq %"class.absl::optional.14"* %5, null
  br i1 %6, label %42, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.absl::optional.14"*, %"class.absl::optional.14"** %8, align 8
  %10 = icmp eq %"class.absl::optional.14"* %9, %5
  br i1 %10, label %39, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.base::OnceCallback.11"* %3 to i8*
  %13 = bitcast %"class.base::OnceCallback.11"* %3 to i64*
  %14 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %3, i64 0, i32 0
  br label %15

15:                                               ; preds = %35, %11
  %16 = phi %"class.absl::optional.14"* [ %9, %11 ], [ %17, %35 ]
  %17 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %16, i64 -1
  %18 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %16, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %23 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %22, i64 0, i32 0
  %24 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %24, align 8
  %26 = icmp eq %"class.base::internal::BindStateBase"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %21
  %28 = ptrtoint %"class.base::internal::BindStateBase"* %25 to i64
  %29 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %16, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  store i64 %28, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %30 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %25, i64 0, i32 1
  %31 = bitcast void ()** %30 to void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)**
  %32 = load void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)*, void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)** %31, align 8
  call void %32(%"class.base::internal::BindStateBase"* nonnull %25, %"struct.gpu::SyncToken"* dereferenceable(24) %29, i1 zeroext false) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  br label %33

33:                                               ; preds = %27, %21
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %23) #8
  %34 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %16, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %34) #8
  store i8 0, i8* %18, align 8
  br label %35

35:                                               ; preds = %33, %15
  %36 = icmp eq %"class.absl::optional.14"* %17, %5
  br i1 %36, label %37, label %15

37:                                               ; preds = %35
  %38 = load %"class.absl::optional.14"*, %"class.absl::optional.14"** %4, align 8
  br label %39

39:                                               ; preds = %37, %7
  %40 = phi %"class.absl::optional.14"* [ %38, %37 ], [ %5, %7 ]
  store %"class.absl::optional.14"* %5, %"class.absl::optional.14"** %8, align 8
  %41 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %41) #10
  br label %42

42:                                               ; preds = %1, %39
  %43 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 5
  %44 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %43, i64 0, i32 0
  %45 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %43, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %45, align 8
  %47 = icmp eq %"class.base::internal::BindStateBase"* %46, null
  br i1 %47, label %57, label %48

48:                                               ; preds = %42
  %49 = ptrtoint %"class.base::internal::BindStateBase"* %46 to i64
  %50 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 1
  %51 = bitcast %"class.base::OnceCallback.11"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #8
  %52 = bitcast %"class.base::OnceCallback.11"* %2 to i64*
  store i64 %49, i64* %52, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %45, align 8
  %53 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %2, i64 0, i32 0
  %54 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %46, i64 0, i32 1
  %55 = bitcast void ()** %54 to void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)**
  %56 = load void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)*, void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)** %55, align 8
  call void %56(%"class.base::internal::BindStateBase"* nonnull %46, %"struct.gpu::SyncToken"* dereferenceable(24) %50, i1 zeroext false) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %53) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #8
  br label %57

57:                                               ; preds = %42, %48
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %44) #8
  %58 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 2
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %58) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(224) %"struct.viz::SurfaceSavedFrame::FrameResult"* @_ZN3viz17SurfaceSavedFrame11FrameResultaSEOS1_(%"struct.viz::SurfaceSavedFrame::FrameResult"* returned, %"struct.viz::SurfaceSavedFrame::FrameResult"* dereferenceable(224)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.gpu::Mailbox", align 1
  %4 = alloca %"struct.gpu::SyncToken", align 8
  %5 = alloca %class.SkBitmap, align 8
  %6 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %7 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %1, i64 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 %7, i64 16, i1 false) #8
  %8 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* nonnull %3) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 1 %8, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %1, i64 0, i32 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #8
  %11 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* nonnull %4) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* nonnull align 8 %11, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %1, i64 0, i32 0, i32 2
  %13 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 2
  %14 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %13, %class.SkBitmap* dereferenceable(56) %12) #8
  %15 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %15) #8
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %5) #8
  %16 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %12, %class.SkBitmap* nonnull dereferenceable(56) %5) #8
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %15) #8
  %17 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %1, i64 0, i32 0, i32 3
  %18 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 3
  %19 = bitcast %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* %18 to i8*
  %20 = bitcast %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 4 %20, i64 88, i1 false) #8
  %21 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 5, i32 0
  %22 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %1, i64 0, i32 0, i32 5, i32 0
  %23 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %21, %"class.base::internal::CallbackBase"* dereferenceable(8) %22) #8
  %24 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %1, i64 0, i32 0, i32 4
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 0, i32 4
  store i8 %25, i8* %26, align 8
  store i8 0, i8* %24, align 8
  %27 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %1, i64 0, i32 1
  call void @_ZNSt3__16vectorIN4absl8optionalIN3viz17SurfaceSavedFrame16OutputCopyResultEEENS_9allocatorIS6_EEE13__vdeallocateEv(%"class.std::__1::vector.12"* %27) #8
  %29 = bitcast %"class.std::__1::vector.12"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector.12"* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %1, i64 0, i32 1, i32 0, i32 1
  %33 = bitcast %"class.absl::optional.14"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 1, i32 0, i32 1
  %36 = bitcast %"class.absl::optional.14"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"class.absl::optional.14"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.viz::SurfaceSavedFrame::FrameResult", %"struct.viz::SurfaceSavedFrame::FrameResult"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.absl::optional.14"** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = bitcast %"class.std::__1::vector.12"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #8
  ret %"struct.viz::SurfaceSavedFrame::FrameResult"* %0
}

declare dereferenceable(296) %"class.viz::CompositorFrame"* @_ZNK3viz7Surface14GetActiveFrameEv(%"class.viz::Surface"*) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare float @_ZN3viz15TransitionUtils25ComputeAccumulatedOpacityERKNSt3__16vectorINS1_10unique_ptrINS_20CompositorRenderPassENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEN4util6IdTypeIS4_mLm0ELm1EEE(%"class.std::__1::vector.119"* dereferenceable(24), i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN3gpu9SyncTokenC1ERKS0_(%"struct.gpu::SyncToken"*, %"struct.gpu::SyncToken"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_iS6_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseEOSE_(%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.215"* dereferenceable(8)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::tuple"*
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::WeakPtr.214"*
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to i32*
  %9 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 2, i32 0
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 3
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"*
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %13 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %12) #8
  br i1 %13, label %14, label %25

14:                                               ; preds = %2
  %15 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %16 = bitcast void (%"class.base::internal::BindStateBase"*)** %15 to %"class.viz::SurfaceSavedFrame"**
  %17 = load %"class.viz::SurfaceSavedFrame"*, %"class.viz::SurfaceSavedFrame"** %16, align 8
  %18 = icmp eq %"class.viz::SurfaceSavedFrame"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %23 = bitcast void ()** %22 to i64*
  %24 = load i64, i64* %23, align 8
  tail call void @_ZN4base8internal13FunctorTraitsIMN3viz17SurfaceSavedFrameEFvNS3_10ResultTypeEmRKNS3_18RenderPassDrawDataENSt3__110unique_ptrINS2_16CopyOutputResultENS8_14default_deleteISA_EEEEEvE6InvokeISF_NS_7WeakPtrIS3_EEJS4_iS5_SD_EEEvT_OT0_DpOT1_(i64 %21, i64 %24, %"class.base::WeakPtr.214"* dereferenceable(16) %6, i32* dereferenceable(4) %8, i32* dereferenceable(4) %9, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* dereferenceable(88) %11, %"class.std::__1::unique_ptr.215"* dereferenceable(8) %1) #8
  br label %25

25:                                               ; preds = %2, %14, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIMN3viz17SurfaceSavedFrameEFvNS3_10ResultTypeEmRKNS3_18RenderPassDrawDataENSt3__110unique_ptrINS2_16CopyOutputResultENS8_14default_deleteISA_EEEEEvE6InvokeISF_NS_7WeakPtrIS3_EEJS4_iS5_SD_EEEvT_OT0_DpOT1_(i64, i64, %"class.base::WeakPtr.214"* dereferenceable(16), i32* dereferenceable(4), i32* dereferenceable(4), %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* dereferenceable(88), %"class.std::__1::unique_ptr.215"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.base::WeakPtr.214", %"class.base::WeakPtr.214"* %2, i64 0, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #8
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #8
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  br label %14

14:                                               ; preds = %11, %7
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #8
  %16 = getelementptr inbounds %"class.base::WeakPtr.214", %"class.base::WeakPtr.214"* %2, i64 0, i32 0, i32 1
  %17 = bitcast i64* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = select i1 %15, i8* %18, i8* null
  %20 = getelementptr inbounds i8, i8* %19, i64 %1
  %21 = bitcast i8* %20 to %"class.viz::SurfaceSavedFrame"*
  %22 = and i64 %0, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %14
  %25 = bitcast i8* %20 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %0, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to void (%"class.viz::SurfaceSavedFrame"*, i32, i64, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"*, %"class.viz::CopyOutputResult"*)**
  %30 = load void (%"class.viz::SurfaceSavedFrame"*, i32, i64, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"*, %"class.viz::CopyOutputResult"*)*, void (%"class.viz::SurfaceSavedFrame"*, i32, i64, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"*, %"class.viz::CopyOutputResult"*)** %29, align 8
  br label %33

31:                                               ; preds = %14
  %32 = inttoptr i64 %0 to void (%"class.viz::SurfaceSavedFrame"*, i32, i64, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"*, %"class.viz::CopyOutputResult"*)*
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi void (%"class.viz::SurfaceSavedFrame"*, i32, i64, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"*, %"class.viz::CopyOutputResult"*)* [ %30, %24 ], [ %32, %31 ]
  %35 = load i32, i32* %3, align 4
  %36 = load i32, i32* %4, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.215"* %6, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.viz::CopyOutputResult"*, %"class.viz::CopyOutputResult"** %38, align 8
  store %"class.viz::CopyOutputResult"* null, %"class.viz::CopyOutputResult"** %38, align 8
  call void %34(%"class.viz::SurfaceSavedFrame"* %21, i32 %35, i64 %37, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* dereferenceable(88) %5, %"class.viz::CopyOutputResult"* %39) #8
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3viz17SurfaceSavedFrameEFvNS3_10ResultTypeEmRKNS3_18RenderPassDrawDataENSt3__110unique_ptrINS2_16CopyOutputResultENS8_14default_deleteISA_EEEEEJNS_7WeakPtrIS3_EES4_iS5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_iS6_EEEEEbPKNS0_13BindStateBaseENSK_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.viz::SurfaceSavedFrame"**
  %9 = load %"class.viz::SurfaceSavedFrame"*, %"class.viz::SurfaceSavedFrame"** %8, align 8
  %10 = icmp ne %"class.viz::SurfaceSavedFrame"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #8
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN3viz17CopyOutputRequestC1ENS_16CopyOutputResult6FormatEN4base12OnceCallbackIFvNSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEEEE(%"class.viz::CopyOutputRequest"*, i8 zeroext, %"class.base::OnceCallback.155"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_mS6_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseEOSE_(%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.215"* dereferenceable(8)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::WeakPtr.214"*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i32*
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 3
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i64*
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 4
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"*
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %13 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %12) #8
  br i1 %13, label %14, label %25

14:                                               ; preds = %2
  %15 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %16 = bitcast void (%"class.base::internal::BindStateBase"*)** %15 to %"class.viz::SurfaceSavedFrame"**
  %17 = load %"class.viz::SurfaceSavedFrame"*, %"class.viz::SurfaceSavedFrame"** %16, align 8
  %18 = icmp eq %"class.viz::SurfaceSavedFrame"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %23 = bitcast void ()** %22 to i64*
  %24 = load i64, i64* %23, align 8
  tail call void @_ZN4base8internal13FunctorTraitsIMN3viz17SurfaceSavedFrameEFvNS3_10ResultTypeEmRKNS3_18RenderPassDrawDataENSt3__110unique_ptrINS2_16CopyOutputResultENS8_14default_deleteISA_EEEEEvE6InvokeISF_NS_7WeakPtrIS3_EEJS4_mS5_SD_EEEvT_OT0_DpOT1_(i64 %21, i64 %24, %"class.base::WeakPtr.214"* dereferenceable(16) %5, i32* dereferenceable(4) %7, i64* dereferenceable(8) %9, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* dereferenceable(88) %11, %"class.std::__1::unique_ptr.215"* dereferenceable(8) %1) #8
  br label %25

25:                                               ; preds = %2, %14, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIMN3viz17SurfaceSavedFrameEFvNS3_10ResultTypeEmRKNS3_18RenderPassDrawDataENSt3__110unique_ptrINS2_16CopyOutputResultENS8_14default_deleteISA_EEEEEvE6InvokeISF_NS_7WeakPtrIS3_EEJS4_mS5_SD_EEEvT_OT0_DpOT1_(i64, i64, %"class.base::WeakPtr.214"* dereferenceable(16), i32* dereferenceable(4), i64* dereferenceable(8), %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* dereferenceable(88), %"class.std::__1::unique_ptr.215"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.base::WeakPtr.214", %"class.base::WeakPtr.214"* %2, i64 0, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #8
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #8
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  br label %14

14:                                               ; preds = %11, %7
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #8
  %16 = getelementptr inbounds %"class.base::WeakPtr.214", %"class.base::WeakPtr.214"* %2, i64 0, i32 0, i32 1
  %17 = bitcast i64* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = select i1 %15, i8* %18, i8* null
  %20 = getelementptr inbounds i8, i8* %19, i64 %1
  %21 = bitcast i8* %20 to %"class.viz::SurfaceSavedFrame"*
  %22 = and i64 %0, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %14
  %25 = bitcast i8* %20 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %0, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to void (%"class.viz::SurfaceSavedFrame"*, i32, i64, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"*, %"class.viz::CopyOutputResult"*)**
  %30 = load void (%"class.viz::SurfaceSavedFrame"*, i32, i64, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"*, %"class.viz::CopyOutputResult"*)*, void (%"class.viz::SurfaceSavedFrame"*, i32, i64, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"*, %"class.viz::CopyOutputResult"*)** %29, align 8
  br label %33

31:                                               ; preds = %14
  %32 = inttoptr i64 %0 to void (%"class.viz::SurfaceSavedFrame"*, i32, i64, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"*, %"class.viz::CopyOutputResult"*)*
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi void (%"class.viz::SurfaceSavedFrame"*, i32, i64, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"*, %"class.viz::CopyOutputResult"*)* [ %30, %24 ], [ %32, %31 ]
  %35 = load i32, i32* %3, align 4
  %36 = load i64, i64* %4, align 8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.215"* %6, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.viz::CopyOutputResult"*, %"class.viz::CopyOutputResult"** %37, align 8
  store %"class.viz::CopyOutputResult"* null, %"class.viz::CopyOutputResult"** %37, align 8
  call void %34(%"class.viz::SurfaceSavedFrame"* %21, i32 %35, i64 %36, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData"* dereferenceable(88) %5, %"class.viz::CopyOutputResult"* %38) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3viz17SurfaceSavedFrameEFvNS3_10ResultTypeEmRKNS3_18RenderPassDrawDataENSt3__110unique_ptrINS2_16CopyOutputResultENS8_14default_deleteISA_EEEEEJNS_7WeakPtrIS3_EES4_mS5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_mS6_EEEEEbPKNS0_13BindStateBaseENSK_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.viz::SurfaceSavedFrame"**
  %9 = load %"class.viz::SurfaceSavedFrame"*, %"class.viz::SurfaceSavedFrame"** %8, align 8
  %10 = icmp ne %"class.viz::SurfaceSavedFrame"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #8
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl8optionalIN3viz17SurfaceSavedFrame16OutputCopyResultEEENS_9allocatorIS6_EEE8__appendEm(%"class.std::__1::vector.12"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.11", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.absl::optional.14"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.absl::optional.14"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = sdiv exact i64 %10, 208
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %27, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %9 to %"class.absl::optional.14"*
  %15 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %14, i64 %1
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %25, label %19

17:                                               ; preds = %19
  %18 = ptrtoint %"class.absl::optional.14"* %15 to i64
  br label %25

19:                                               ; preds = %13, %19
  %20 = phi %"class.absl::optional.14"* [ %23, %19 ], [ %14, %13 ]
  %21 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 200, i1 false) #8
  %23 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %20, i64 1
  %24 = icmp eq %"class.absl::optional.14"* %23, %15
  br i1 %24, label %17, label %19

25:                                               ; preds = %13, %17
  %26 = phi i64 [ %18, %17 ], [ %9, %13 ]
  store i64 %26, i64* %8, align 8
  br label %122

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %9, %29
  %31 = sdiv exact i64 %30, 208
  %32 = add i64 %31, %1
  %33 = icmp ugt i64 %32, 88686269585142075
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = bitcast %"class.std::__1::vector.12"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #9
  unreachable

36:                                               ; preds = %27
  %37 = sub i64 %6, %29
  %38 = sdiv exact i64 %37, 208
  %39 = icmp ult i64 %38, 44343134792571037
  br i1 %39, label %40, label %45

40:                                               ; preds = %36
  %41 = shl nsw i64 %38, 1
  %42 = icmp ult i64 %41, %32
  %43 = select i1 %42, i64 %32, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %36, %40
  %46 = phi i64 [ %43, %40 ], [ 88686269585142075, %36 ]
  %47 = mul i64 %46, 208
  %48 = tail call i8* @_Znwm(i64 %47) #10
  %49 = bitcast i8* %48 to %"class.absl::optional.14"*
  br label %50

50:                                               ; preds = %40, %45
  %51 = phi i64 [ %46, %45 ], [ 0, %40 ]
  %52 = phi %"class.absl::optional.14"* [ %49, %45 ], [ null, %40 ]
  %53 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %52, i64 %31
  %54 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %52, i64 %51
  %55 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %53, i64 %1
  br label %56

56:                                               ; preds = %50, %56
  %57 = phi %"class.absl::optional.14"* [ %60, %56 ], [ %53, %50 ]
  %58 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %58, align 8
  %59 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 200, i1 false) #8
  %60 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %57, i64 1
  %61 = icmp eq %"class.absl::optional.14"* %55, %60
  br i1 %61, label %62, label %56

62:                                               ; preds = %56
  %63 = ptrtoint %"class.absl::optional.14"* %54 to i64
  %64 = ptrtoint %"class.absl::optional.14"* %55 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.absl::optional.14"*, %"class.absl::optional.14"** %65, align 8
  %67 = load %"class.absl::optional.14"*, %"class.absl::optional.14"** %7, align 8
  %68 = icmp eq %"class.absl::optional.14"* %67, %66
  br i1 %68, label %69, label %71

69:                                               ; preds = %62
  %70 = ptrtoint %"class.absl::optional.14"* %53 to i64
  store i64 %70, i64* %28, align 8
  store i64 %64, i64* %8, align 8
  store i64 %63, i64* %5, align 8
  br label %117

71:                                               ; preds = %62, %83
  %72 = phi %"class.absl::optional.14"* [ %84, %83 ], [ %53, %62 ]
  %73 = phi %"class.absl::optional.14"* [ %74, %83 ], [ %67, %62 ]
  %74 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %73, i64 -1
  %75 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %72, i64 -1, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 208, i1 false) #8
  %77 = load i8, i8* %76, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %72, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i64 0
  %81 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %73, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %82 = bitcast i8* %80 to %"struct.viz::SurfaceSavedFrame::OutputCopyResult"*
  tail call void @_ZN3viz17SurfaceSavedFrame16OutputCopyResultC2EOS1_(%"struct.viz::SurfaceSavedFrame::OutputCopyResult"* %82, %"struct.viz::SurfaceSavedFrame::OutputCopyResult"* dereferenceable(200) %81) #8
  store i8 1, i8* %75, align 8
  br label %83

83:                                               ; preds = %79, %71
  %84 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %72, i64 -1
  %85 = icmp eq %"class.absl::optional.14"* %74, %66
  br i1 %85, label %86, label %71

86:                                               ; preds = %83
  %87 = load %"class.absl::optional.14"*, %"class.absl::optional.14"** %65, align 8
  %88 = load %"class.absl::optional.14"*, %"class.absl::optional.14"** %7, align 8
  %89 = ptrtoint %"class.absl::optional.14"* %84 to i64
  store i64 %89, i64* %28, align 8
  store i64 %64, i64* %8, align 8
  store i64 %63, i64* %5, align 8
  %90 = icmp eq %"class.absl::optional.14"* %88, %87
  br i1 %90, label %117, label %91

91:                                               ; preds = %86
  %92 = bitcast %"class.base::OnceCallback.11"* %3 to i8*
  %93 = bitcast %"class.base::OnceCallback.11"* %3 to i64*
  %94 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %3, i64 0, i32 0
  br label %95

95:                                               ; preds = %115, %91
  %96 = phi %"class.absl::optional.14"* [ %88, %91 ], [ %97, %115 ]
  %97 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %96, i64 -1
  %98 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %115, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %96, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %103 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %102, i64 0, i32 0
  %104 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %102, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %104, align 8
  %106 = icmp eq %"class.base::internal::BindStateBase"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %101
  %108 = ptrtoint %"class.base::internal::BindStateBase"* %105 to i64
  %109 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %96, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #8
  store i64 %108, i64* %93, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %104, align 8
  %110 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %105, i64 0, i32 1
  %111 = bitcast void ()** %110 to void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)**
  %112 = load void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)*, void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)** %111, align 8
  call void %112(%"class.base::internal::BindStateBase"* nonnull %105, %"struct.gpu::SyncToken"* dereferenceable(24) %109, i1 zeroext false) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %94) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #8
  br label %113

113:                                              ; preds = %107, %101
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %103) #8
  %114 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %96, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %114) #8
  store i8 0, i8* %98, align 8
  br label %115

115:                                              ; preds = %113, %95
  %116 = icmp eq %"class.absl::optional.14"* %97, %87
  br i1 %116, label %117, label %95

117:                                              ; preds = %115, %69, %86
  %118 = phi %"class.absl::optional.14"* [ %66, %69 ], [ %87, %86 ], [ %87, %115 ]
  %119 = icmp eq %"class.absl::optional.14"* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %118, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %121) #10
  br label %122

122:                                              ; preds = %120, %117, %25
  ret void
}

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl8optionalIN3viz17SurfaceSavedFrame16OutputCopyResultEEENS_9allocatorIS6_EEE13__vdeallocateEv(%"class.std::__1::vector.12"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.11", align 8
  %3 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.absl::optional.14"*, %"class.absl::optional.14"** %3, align 8
  %5 = icmp eq %"class.absl::optional.14"* %4, null
  br i1 %5, label %42, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.absl::optional.14"*, %"class.absl::optional.14"** %7, align 8
  %9 = icmp eq %"class.absl::optional.14"* %8, %4
  br i1 %9, label %38, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.base::OnceCallback.11"* %2 to i8*
  %12 = bitcast %"class.base::OnceCallback.11"* %2 to i64*
  %13 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %2, i64 0, i32 0
  br label %14

14:                                               ; preds = %34, %10
  %15 = phi %"class.absl::optional.14"* [ %8, %10 ], [ %16, %34 ]
  %16 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %15, i64 -1
  %17 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %15, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %22 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %21, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %23, align 8
  %25 = icmp eq %"class.base::internal::BindStateBase"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %20
  %27 = ptrtoint %"class.base::internal::BindStateBase"* %24 to i64
  %28 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %15, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  store i64 %27, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %29 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %24, i64 0, i32 1
  %30 = bitcast void ()** %29 to void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)**
  %31 = load void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)*, void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*, i1)** %30, align 8
  call void %31(%"class.base::internal::BindStateBase"* nonnull %24, %"struct.gpu::SyncToken"* dereferenceable(24) %28, i1 zeroext false) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  br label %32

32:                                               ; preds = %26, %20
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %22) #8
  %33 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %15, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %33) #8
  store i8 0, i8* %17, align 8
  br label %34

34:                                               ; preds = %32, %14
  %35 = icmp eq %"class.absl::optional.14"* %16, %4
  br i1 %35, label %36, label %14

36:                                               ; preds = %34
  %37 = load %"class.absl::optional.14"*, %"class.absl::optional.14"** %3, align 8
  br label %38

38:                                               ; preds = %36, %6
  %39 = phi %"class.absl::optional.14"* [ %37, %36 ], [ %4, %6 ]
  store %"class.absl::optional.14"* %4, %"class.absl::optional.14"** %7, align 8
  %40 = getelementptr inbounds %"class.absl::optional.14", %"class.absl::optional.14"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %40) #10
  %41 = bitcast %"class.std::__1::vector.12"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false)
  br label %42

42:                                               ; preds = %1, %38
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK3viz34CompositorFrameTransitionDirective22shared_render_pass_idsEv: argument 0"}
!5 = distinct !{!5, !"_ZNK3viz34CompositorFrameTransitionDirective22shared_render_pass_idsEv"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK3viz34CompositorFrameTransitionDirective22shared_render_pass_idsEv: argument 0"}
!10 = distinct !{!10, !"_ZNK3viz34CompositorFrameTransitionDirective22shared_render_pass_idsEv"}
!11 = distinct !{!11, !7}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3viz12_GLOBAL__N_125GetRootRenderPassDrawDataEPNS_7SurfaceE: argument 0"}
!14 = distinct !{!14, !"_ZN3viz12_GLOBAL__N_125GetRootRenderPassDrawDataEPNS_7SurfaceE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4base14WeakPtrFactoryIN3viz17SurfaceSavedFrameEE10GetWeakPtrEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4base14WeakPtrFactoryIN3viz17SurfaceSavedFrameEE10GetWeakPtrEv"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_iS8_EEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_iS8_EEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base8BindOnceIMN3viz17SurfaceSavedFrameEFvNS2_10ResultTypeEmRKNS2_18RenderPassDrawDataENSt3__110unique_ptrINS1_16CopyOutputResultENS7_14default_deleteIS9_EEEEEJNS_7WeakPtrIS2_EES3_iS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8BindOnceIMN3viz17SurfaceSavedFrameEFvNS2_10ResultTypeEmRKNS2_18RenderPassDrawDataENSt3__110unique_ptrINS1_16CopyOutputResultENS7_14default_deleteIS9_EEEEEJNS_7WeakPtrIS2_EES3_iS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK3viz34CompositorFrameTransitionDirective22shared_render_pass_idsEv: argument 0"}
!25 = distinct !{!25, !"_ZNK3viz34CompositorFrameTransitionDirective22shared_render_pass_idsEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN3viz12_GLOBAL__N_132GetRenderPassDrawDataInRootSpaceEPNS_7SurfaceERKN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEE: argument 0"}
!28 = distinct !{!28, !"_ZN3viz12_GLOBAL__N_132GetRenderPassDrawDataInRootSpaceEPNS_7SurfaceERKN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEE"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK4base14WeakPtrFactoryIN3viz17SurfaceSavedFrameEE10GetWeakPtrEv: argument 0"}
!31 = distinct !{!31, !"_ZNK4base14WeakPtrFactoryIN3viz17SurfaceSavedFrameEE10GetWeakPtrEv"}
!32 = !{!33, !35}
!33 = distinct !{!33, !34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_RmS8_EEEDcOT0_DpOT1_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3viz17SurfaceSavedFrameEFvNS4_10ResultTypeEmRKNS4_18RenderPassDrawDataENSt3__110unique_ptrINS3_16CopyOutputResultENS9_14default_deleteISB_EEEEEJNS_7WeakPtrIS4_EES5_RmS8_EEEDcOT0_DpOT1_"}
!35 = distinct !{!35, !36, !"_ZN4base8BindOnceIMN3viz17SurfaceSavedFrameEFvNS2_10ResultTypeEmRKNS2_18RenderPassDrawDataENSt3__110unique_ptrINS1_16CopyOutputResultENS7_14default_deleteIS9_EEEEEJNS_7WeakPtrIS2_EES3_RmS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8BindOnceIMN3viz17SurfaceSavedFrameEFvNS2_10ResultTypeEmRKNS2_18RenderPassDrawDataENSt3__110unique_ptrINS1_16CopyOutputResultENS7_14default_deleteIS9_EEEEEJNS_7WeakPtrIS2_EES3_RmS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK3viz34CompositorFrameTransitionDirective22shared_render_pass_idsEv: argument 0"}
!39 = distinct !{!39, !"_ZNK3viz34CompositorFrameTransitionDirective22shared_render_pass_idsEv"}
!40 = !{!"branch_weights", i32 1, i32 2000}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNSt3__18exchangeIN4absl8optionalIN3viz17SurfaceSavedFrame11FrameResultEEERKNS1_9nullopt_tEEET_RSA_OT0_: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__18exchangeIN4absl8optionalIN3viz17SurfaceSavedFrame11FrameResultEEERKNS1_9nullopt_tEEET_RSA_OT0_"}
!44 = !{!45, !47}
!45 = distinct !{!45, !46, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!46 = distinct !{!46, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!47 = distinct !{!47, !48, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!48 = distinct !{!48, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK3viz34CompositorFrameTransitionDirective22shared_render_pass_idsEv: argument 0"}
!51 = distinct !{!51, !"_ZNK3viz34CompositorFrameTransitionDirective22shared_render_pass_idsEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK3viz34CompositorFrameTransitionDirective22shared_render_pass_idsEv: argument 0"}
!54 = distinct !{!54, !"_ZNK3viz34CompositorFrameTransitionDirective22shared_render_pass_idsEv"}
!55 = distinct !{!55, !7}
