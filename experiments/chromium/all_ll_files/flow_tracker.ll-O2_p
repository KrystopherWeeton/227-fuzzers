; ModuleID = '../../third_party/perfetto/src/trace_processor/importers/common/flow_tracker.cc'
source_filename = "../../third_party/perfetto/src/trace_processor/importers/common/flow_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.perfetto::trace_processor::FlowTracker" = type { i32 (...)**, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.15", %"class.std::__1::unordered_map.42", %"class.std::__1::unordered_map.68", i32, %"class.perfetto::trace_processor::TraceProcessorContext"*, %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.12", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { float }
%"class.std::__1::unordered_map.15" = type { %"class.std::__1::__hash_table.16" }
%"class.std::__1::__hash_table.16" = type <{ %"class.std::__1::unique_ptr.17", %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.36", [4 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node_base.20"** }
%"struct.std::__1::__hash_node_base.20" = type { %"struct.std::__1::__hash_node_base.20"* }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__bucket_list_deallocator.22" }
%"class.std::__1::__bucket_list_deallocator.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node_base.20" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unordered_map.42" = type { %"class.std::__1::__hash_table.43" }
%"class.std::__1::__hash_table.43" = type <{ %"class.std::__1::unique_ptr.44", %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.62", [4 x i8] }>
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46", %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::__hash_node_base.47"** }
%"struct.std::__1::__hash_node_base.47" = type { %"struct.std::__1::__hash_node_base.47"* }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::__bucket_list_deallocator.49" }
%"class.std::__1::__bucket_list_deallocator.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base.47" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unordered_map.68" = type { %"class.std::__1::__hash_table.69" }
%"class.std::__1::__hash_table.69" = type <{ %"class.std::__1::unique_ptr.70", %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.88", [4 x i8] }>
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72", %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.std::__1::__hash_node_base.73"** }
%"struct.std::__1::__hash_node_base.73" = type { %"struct.std::__1::__hash_node_base.73"* }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::__bucket_list_deallocator.75" }
%"class.std::__1::__bucket_list_deallocator.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::__hash_node_base.73" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.perfetto::trace_processor::StringPool::Id" = type { i32 }
%"class.perfetto::trace_processor::TraceProcessorContext" = type { %"struct.perfetto::trace_processor::Config", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.334", %"class.std::__1::unique_ptr.340", %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.377", %"class.std::__1::unique_ptr.383", %"class.std::__1::unique_ptr.389", %"class.std::__1::unique_ptr.395", %"class.std::__1::unique_ptr.401", %"class.std::__1::unique_ptr.407", %"class.std::__1::unique_ptr.413", %"class.std::__1::unique_ptr.419", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.437", %"class.std::__1::vector.443", %"class.std::__1::vector.451", %"class.perfetto::trace_processor::FtraceModule"* }
%"struct.perfetto::trace_processor::Config" = type { i32, i8, i32 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.perfetto::trace_processor::TraceStorage"* }
%"class.perfetto::trace_processor::TraceStorage" = type <{ i32 (...)**, %"class.perfetto::trace_processor::StringPool", %"struct.std::__1::array", %"class.perfetto::trace_processor::tables::MetadataTable", %"class.perfetto::trace_processor::tables::ClockSnapshotTable", %"class.perfetto::trace_processor::tables::TrackTable", %"class.perfetto::trace_processor::tables::GpuTrackTable", %"class.perfetto::trace_processor::tables::ProcessTrackTable", %"class.perfetto::trace_processor::tables::ThreadTrackTable", %"class.perfetto::trace_processor::tables::CounterTrackTable", %"class.perfetto::trace_processor::tables::ThreadCounterTrackTable", %"class.perfetto::trace_processor::tables::ProcessCounterTrackTable", %"class.perfetto::trace_processor::tables::CpuCounterTrackTable", %"class.perfetto::trace_processor::tables::IrqCounterTrackTable", %"class.perfetto::trace_processor::tables::SoftirqCounterTrackTable", %"class.perfetto::trace_processor::tables::GpuCounterTrackTable", %"class.perfetto::trace_processor::tables::GpuCounterGroupTable", %"class.perfetto::trace_processor::tables::PerfCounterTrackTable", %"class.perfetto::trace_processor::tables::ArgTable", %"class.perfetto::trace_processor::tables::ThreadTable", %"class.perfetto::trace_processor::tables::ProcessTable", %"class.perfetto::trace_processor::tables::SliceTable", %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::SchedSliceTable", %"class.perfetto::trace_processor::tables::ThreadSliceTable", %"class.perfetto::trace_processor::TraceStorage::VirtualTrackSlices", %"class.perfetto::trace_processor::tables::GpuSliceTable", %"class.perfetto::trace_processor::tables::CounterTable", %"class.perfetto::trace_processor::TraceStorage::SqlStats", %"class.perfetto::trace_processor::tables::InstantTable", %"class.perfetto::trace_processor::tables::RawTable", %"class.perfetto::trace_processor::tables::CpuTable", %"class.perfetto::trace_processor::tables::CpuFreqTable", %"class.perfetto::trace_processor::tables::AndroidLogTable", %"class.perfetto::trace_processor::tables::StackProfileMappingTable", %"class.perfetto::trace_processor::tables::StackProfileFrameTable", %"class.perfetto::trace_processor::tables::StackProfileCallsiteTable", %"class.perfetto::trace_processor::tables::StackSampleTable", %"class.perfetto::trace_processor::tables::HeapProfileAllocationTable", %"class.perfetto::trace_processor::tables::CpuProfileStackSampleTable", %"class.perfetto::trace_processor::tables::PerfSampleTable", %"class.perfetto::trace_processor::tables::PackageListTable", %"class.perfetto::trace_processor::tables::ProfilerSmapsTable", %"class.perfetto::trace_processor::tables::SymbolTable", %"class.perfetto::trace_processor::tables::HeapGraphObjectTable", %"class.perfetto::trace_processor::tables::HeapGraphClassTable", %"class.perfetto::trace_processor::tables::HeapGraphReferenceTable", %"class.perfetto::trace_processor::tables::VulkanMemoryAllocationsTable", %"class.perfetto::trace_processor::tables::GraphicsFrameSliceTable", %"class.perfetto::trace_processor::tables::MemorySnapshotTable", %"class.perfetto::trace_processor::tables::ProcessMemorySnapshotTable", %"class.perfetto::trace_processor::tables::MemorySnapshotNodeTable", %"class.perfetto::trace_processor::tables::MemorySnapshotEdgeTable", %"class.perfetto::trace_processor::tables::ExpectedFrameTimelineSliceTable", %"class.perfetto::trace_processor::tables::ActualFrameTimelineSliceTable", %"struct.std::__1::array.263", [4 x i8] }>
%"class.perfetto::trace_processor::StringPool" = type { %"class.std::__1::vector", %"class.std::__1::vector.100", %"class.std::__1::unordered_map.116" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.perfetto::trace_processor::StringPool::Block"*, %"struct.perfetto::trace_processor::StringPool::Block"*, %"class.std::__1::__compressed_pair.95" }
%"struct.perfetto::trace_processor::StringPool::Block" = type { %"class.perfetto::base::PagedMemory", i32, i64 }
%"class.perfetto::base::PagedMemory" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.perfetto::trace_processor::StringPool::Block"* }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.std::__1::unique_ptr.102"*, %"class.std::__1::unique_ptr.102"*, %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.std::__1::unique_ptr.102"* }
%"class.std::__1::unordered_map.116" = type { %"class.std::__1::__hash_table.117" }
%"class.std::__1::__hash_table.117" = type <{ %"class.std::__1::unique_ptr.118", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", %"class.std::__1::__compressed_pair.136", [4 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120", %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::__hash_node_base.121"** }
%"struct.std::__1::__hash_node_base.121" = type { %"struct.std::__1::__hash_node_base.121"* }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.std::__1::__bucket_list_deallocator.123" }
%"class.std::__1::__bucket_list_deallocator.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.121" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::array" = type { [130 x %"struct.perfetto::trace_processor::TraceStorage::Stats"] }
%"struct.perfetto::trace_processor::TraceStorage::Stats" = type { i64, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::tables::MetadataTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::macros_internal::MacroTable" = type { %"class.perfetto::trace_processor::Table", %"class.perfetto::trace_processor::NullableVector", i8*, %"class.perfetto::trace_processor::Table"* }
%"class.perfetto::trace_processor::Table" = type { i32 (...)**, %"class.std::__1::vector.148", %"class.std::__1::vector.170", i32, %"class.perfetto::trace_processor::StringPool"* }
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"class.perfetto::trace_processor::RowMap"*, %"class.perfetto::trace_processor::RowMap"*, %"class.std::__1::__compressed_pair.165" }
%"class.perfetto::trace_processor::RowMap" = type <{ i32, i32, i32, [4 x i8], %"class.perfetto::trace_processor::BitVector", %"class.std::__1::vector.150", i32, [4 x i8] }>
%"class.perfetto::trace_processor::BitVector" = type { i32, %"class.std::__1::vector.150", %"class.std::__1::vector.157" }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"*, %"class.std::__1::__compressed_pair.160" }
%"class.perfetto::trace_processor::BitVector::Block" = type { %"struct.std::__1::array.159" }
%"struct.std::__1::array.159" = type { [8 x %"class.perfetto::trace_processor::BitVector::BitWord"] }
%"class.perfetto::trace_processor::BitVector::BitWord" = type { i64 }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.perfetto::trace_processor::BitVector::Block"* }
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { i32*, i32*, %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { i32* }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.perfetto::trace_processor::RowMap"* }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"*, %"class.std::__1::__compressed_pair.172" }
%"class.perfetto::trace_processor::Column" = type { %"class.std::__1::shared_ptr", i32, %"class.perfetto::trace_processor::NullableVectorBase"*, i8*, i32, %"class.perfetto::trace_processor::Table"*, i32, i32, %"class.perfetto::trace_processor::StringPool"* }
%"class.std::__1::shared_ptr" = type { %"class.perfetto::trace_processor::NullableVectorBase"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.perfetto::trace_processor::NullableVectorBase" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.perfetto::trace_processor::Column"* }
%"class.perfetto::trace_processor::macros_internal::RootParentTable" = type { %"class.perfetto::trace_processor::Table" }
%"class.perfetto::trace_processor::NullableVector.186" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque.187", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque.187" = type { %"class.std::__1::__deque_base.188" }
%"class.std::__1::__deque_base.188" = type { %"struct.std::__1::__split_buffer.189", i64, %"class.std::__1::__compressed_pair.195" }
%"struct.std::__1::__split_buffer.189" = type { i64**, i64**, i64**, %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { i64** }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::NullableVector" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.182" }
%"struct.std::__1::__split_buffer" = type { %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"**, %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.perfetto::trace_processor::StringPool::Id"** }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::tables::ClockSnapshotTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::NullableVector.200" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque.201", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque.201" = type { %"class.std::__1::__deque_base.202" }
%"class.std::__1::__deque_base.202" = type { %"struct.std::__1::__split_buffer.203", i64, %"class.std::__1::__compressed_pair.209" }
%"struct.std::__1::__split_buffer.203" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { i32** }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::tables::TrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::GpuTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::TrackTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186" }
%"class.perfetto::trace_processor::tables::ProcessTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::TrackTable"*, %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::ThreadTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::TrackTable"*, %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::CounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::TrackTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::ThreadCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::ProcessCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::CpuCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::IrqCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.211" }
%"class.perfetto::trace_processor::NullableVector.211" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque.212", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque.212" = type { %"class.std::__1::__deque_base.213" }
%"class.std::__1::__deque_base.213" = type { %"struct.std::__1::__split_buffer.214", i64, %"class.std::__1::__compressed_pair.220" }
%"struct.std::__1::__split_buffer.214" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { i32** }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::tables::SoftirqCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.211" }
%"class.perfetto::trace_processor::tables::GpuCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::GpuCounterGroupTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.211", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::PerfCounterTrackTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::CounterTrackTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::ArgTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.225", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::NullableVector.225" = type <{ %"class.perfetto::trace_processor::NullableVectorBase", i32, [4 x i8], %"class.std::__1::deque.226", %"class.perfetto::trace_processor::RowMap", i32, [4 x i8] }>
%"class.std::__1::deque.226" = type { %"class.std::__1::__deque_base.227" }
%"class.std::__1::__deque_base.227" = type { %"struct.std::__1::__split_buffer.228", i64, %"class.std::__1::__compressed_pair.234" }
%"struct.std::__1::__split_buffer.228" = type { double**, double**, double**, %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { double** }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::tables::ThreadTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::ProcessTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::SliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::FlowTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::SchedSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.211" }
%"class.perfetto::trace_processor::tables::ThreadSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186" }
%"class.perfetto::trace_processor::TraceStorage::VirtualTrackSlices" = type { %"class.std::__1::deque.239", %"class.std::__1::deque.187", %"class.std::__1::deque.187", %"class.std::__1::deque.187", %"class.std::__1::deque.187" }
%"class.std::__1::deque.239" = type { %"class.std::__1::__deque_base.240" }
%"class.std::__1::__deque_base.240" = type { %"struct.std::__1::__split_buffer.241", i64, %"class.std::__1::__compressed_pair.247" }
%"struct.std::__1::__split_buffer.241" = type { %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId"**, %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId"**, %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId"**, %"class.std::__1::__compressed_pair.242" }
%"struct.perfetto::trace_processor::tables::SliceTable::DefinedId" = type { %"struct.perfetto::trace_processor::BaseId" }
%"struct.perfetto::trace_processor::BaseId" = type { i32 }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId"** }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::tables::GpuSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::CounterTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.225", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::TraceStorage::SqlStats" = type { i32, %"class.std::__1::deque.251", %"class.std::__1::deque.187", %"class.std::__1::deque.187", %"class.std::__1::deque.187", %"class.std::__1::deque.187" }
%"class.std::__1::deque.251" = type { %"class.std::__1::__deque_base.252" }
%"class.std::__1::__deque_base.252" = type { %"struct.std::__1::__split_buffer.253", i64, %"class.std::__1::__compressed_pair.259" }
%"struct.std::__1::__split_buffer.253" = type { %"class.std::__1::basic_string"**, %"class.std::__1::basic_string"**, %"class.std::__1::basic_string"**, %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::basic_string"** }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.perfetto::trace_processor::tables::InstantTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::RawTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::CpuTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::CpuFreqTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::AndroidLogTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::StackProfileMappingTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::StackProfileFrameTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::StackProfileCallsiteTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::StackSampleTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::HeapProfileAllocationTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186" }
%"class.perfetto::trace_processor::tables::CpuProfileStackSampleTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::StackSampleTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.211" }
%"class.perfetto::trace_processor::tables::PerfSampleTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::PackageListTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.211", %"class.perfetto::trace_processor::NullableVector.211", %"class.perfetto::trace_processor::NullableVector.186" }
%"class.perfetto::trace_processor::tables::ProfilerSmapsTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186" }
%"class.perfetto::trace_processor::tables::SymbolTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::HeapGraphObjectTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.211", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.211" }
%"class.perfetto::trace_processor::tables::HeapGraphClassTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::HeapGraphReferenceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::VulkanMemoryAllocationsTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::GraphicsFrameSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186" }
%"class.perfetto::trace_processor::tables::MemorySnapshotTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::ProcessMemorySnapshotTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::MemorySnapshotNodeTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::MemorySnapshotEdgeTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200" }
%"class.perfetto::trace_processor::tables::ExpectedFrameTimelineSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector" }
%"class.perfetto::trace_processor::tables::ActualFrameTimelineSliceTable" = type { %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::tables::SliceTable"*, %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.186", %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector.211", %"class.perfetto::trace_processor::NullableVector.211", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector", %"class.perfetto::trace_processor::NullableVector" }
%"struct.std::__1::array.263" = type { [7 x %"struct.perfetto::trace_processor::StringPool::Id"] }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.perfetto::trace_processor::TraceSorter"* }
%"class.perfetto::trace_processor::TraceSorter" = type opaque
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.perfetto::trace_processor::GlobalArgsTracker"* }
%"class.perfetto::trace_processor::GlobalArgsTracker" = type { %"class.std::__1::unordered_map.282", %"class.perfetto::trace_processor::TraceProcessorContext"* }
%"class.std::__1::unordered_map.282" = type { %"class.std::__1::__hash_table.283" }
%"class.std::__1::__hash_table.283" = type <{ %"class.std::__1::unique_ptr.284", %"class.std::__1::__compressed_pair.294", %"class.std::__1::__compressed_pair.299", %"class.std::__1::__compressed_pair.302", [4 x i8] }>
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286", %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.std::__1::__hash_node_base.287"** }
%"struct.std::__1::__hash_node_base.287" = type { %"struct.std::__1::__hash_node_base.287"* }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.std::__1::__bucket_list_deallocator.289" }
%"class.std::__1::__bucket_list_deallocator.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.std::__1::__hash_node_base.287" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.perfetto::trace_processor::ArgsTracker"* }
%"class.perfetto::trace_processor::ArgsTracker" = type { i32 (...)**, %"class.std::__1::vector.312", %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.std::__1::map.320" }
%"class.std::__1::vector.312" = type { %"class.std::__1::__vector_base.313" }
%"class.std::__1::__vector_base.313" = type { %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"*, %"class.std::__1::__compressed_pair.315" }
%"struct.perfetto::trace_processor::GlobalArgsTracker::Arg" = type { %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::Variadic", %"class.perfetto::trace_processor::Column"*, i32, i32 }
%"struct.perfetto::trace_processor::Variadic" = type { i64, %union.anon.314 }
%union.anon.314 = type { i64 }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"struct.perfetto::trace_processor::GlobalArgsTracker::Arg"* }
%"class.std::__1::map.320" = type { %"class.std::__1::__tree.321" }
%"class.std::__1::__tree.321" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.perfetto::trace_processor::TrackTracker"* }
%"class.perfetto::trace_processor::TrackTracker" = type opaque
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.perfetto::trace_processor::AsyncTrackSetTracker"* }
%"class.perfetto::trace_processor::AsyncTrackSetTracker" = type opaque
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.perfetto::trace_processor::SliceTracker"* }
%"class.perfetto::trace_processor::SliceTracker" = type { i32 (...)**, %"class.std::__1::function", i64, %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id", %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.std::__1::unordered_map.350" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId"*, %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId"*)* }
%"struct.perfetto::trace_processor::tables::TrackTable::DefinedId" = type { %"struct.perfetto::trace_processor::BaseId" }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::unordered_map.350" = type { %"class.std::__1::__hash_table.351" }
%"class.std::__1::__hash_table.351" = type <{ %"class.std::__1::unique_ptr.352", %"class.std::__1::__compressed_pair.362", %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.370", [4 x i8] }>
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354", %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"struct.std::__1::__hash_node_base.355"** }
%"struct.std::__1::__hash_node_base.355" = type { %"struct.std::__1::__hash_node_base.355"* }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.std::__1::__bucket_list_deallocator.357" }
%"class.std::__1::__bucket_list_deallocator.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.std::__1::__hash_node_base.355" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.perfetto::trace_processor::FlowTracker"* }
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.perfetto::trace_processor::ProcessTracker"* }
%"class.perfetto::trace_processor::ProcessTracker" = type opaque
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.perfetto::trace_processor::EventTracker"* }
%"class.perfetto::trace_processor::EventTracker" = type opaque
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.perfetto::trace_processor::ClockTracker"* }
%"class.perfetto::trace_processor::ClockTracker" = type opaque
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.perfetto::trace_processor::HeapProfileTracker"* }
%"class.perfetto::trace_processor::HeapProfileTracker" = type opaque
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.perfetto::trace_processor::PerfSampleTracker"* }
%"class.perfetto::trace_processor::PerfSampleTracker" = type opaque
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.perfetto::trace_processor::GlobalStackProfileTracker"* }
%"class.perfetto::trace_processor::GlobalStackProfileTracker" = type opaque
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.perfetto::trace_processor::MetadataTracker"* }
%"class.perfetto::trace_processor::MetadataTracker" = type opaque
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.perfetto::trace_processor::Destructible"* }
%"class.perfetto::trace_processor::Destructible" = type { i32 (...)** }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.perfetto::trace_processor::ChunkedTraceReader"* }
%"class.perfetto::trace_processor::ChunkedTraceReader" = type opaque
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.perfetto::trace_processor::TraceParser"* }
%"class.perfetto::trace_processor::TraceParser" = type opaque
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.perfetto::trace_processor::DescriptorPool"* }
%"class.perfetto::trace_processor::DescriptorPool" = type opaque
%"class.std::__1::vector.443" = type { %"class.std::__1::__vector_base.444" }
%"class.std::__1::__vector_base.444" = type { %"class.std::__1::vector.445"*, %"class.std::__1::vector.445"*, %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::vector.445" = type opaque
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.std::__1::vector.445"* }
%"class.std::__1::vector.451" = type { %"class.std::__1::__vector_base.452" }
%"class.std::__1::__vector_base.452" = type { %"class.std::__1::unique_ptr.453"*, %"class.std::__1::unique_ptr.453"*, %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::unique_ptr.453" = type opaque
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.std::__1::unique_ptr.453"* }
%"class.perfetto::trace_processor::FtraceModule" = type opaque
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i64* }
%"class.std::__1::tuple.524" = type { i8 }
%"class.perfetto::base::Optional" = type { %"class.perfetto::base::internal::OptionalBase" }
%"class.perfetto::base::internal::OptionalBase" = type { %"struct.perfetto::base::internal::OptionalStorage" }
%"struct.perfetto::base::internal::OptionalStorage" = type { %"struct.perfetto::base::internal::OptionalStorageBase" }
%"struct.perfetto::base::internal::OptionalStorageBase" = type { i8, %union.anon.459 }
%union.anon.459 = type { %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId" }
%"class.perfetto::base::Optional.507" = type { %"class.perfetto::base::internal::OptionalBase.508" }
%"class.perfetto::base::internal::OptionalBase.508" = type { %"struct.perfetto::base::internal::OptionalStorage.509" }
%"struct.perfetto::base::internal::OptionalStorage.509" = type { %"struct.perfetto::base::internal::OptionalStorageBase.510" }
%"struct.perfetto::base::internal::OptionalStorageBase.510" = type { i8, %union.anon.511 }
%union.anon.511 = type { i32 }
%"struct.perfetto::trace_processor::tables::FlowTable::Row" = type <{ %"struct.perfetto::trace_processor::macros_internal::RootParentTable::Row", %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId", %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId", i32, [4 x i8] }>
%"struct.perfetto::trace_processor::macros_internal::RootParentTable::Row" = type { i8* }
%"class.perfetto::trace_processor::ArgsTracker::BoundInserter" = type <{ i32 (...)**, %"class.perfetto::trace_processor::ArgsTracker"*, %"class.perfetto::trace_processor::Column"*, i32, [4 x i8] }>
%"struct.perfetto::trace_processor::IdColumn" = type { %"class.perfetto::trace_processor::Column" }
%"struct.std::__1::pair.474" = type { i64, %"struct.perfetto::trace_processor::FlowTracker::V1FlowId" }
%"struct.perfetto::trace_processor::FlowTracker::V1FlowId" = type { i64, %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id" }
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527", %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"struct.std::__1::__hash_node.514"* }
%"struct.std::__1::__hash_node.514" = type { %"struct.std::__1::__hash_node_base.20", i64, %"struct.std::__1::__hash_value_type.515" }
%"struct.std::__1::__hash_value_type.515" = type { %"struct.std::__1::pair.516" }
%"struct.std::__1::pair.516" = type <{ i64, %"struct.perfetto::trace_processor::tables::SliceTable::DefinedId", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.30"*, i8, [7 x i8] }>
%"class.std::__1::allocator.30" = type { i8 }
%"class.std::__1::tuple.533" = type { %"struct.std::__1::__tuple_impl.534" }
%"struct.std::__1::__tuple_impl.534" = type { %"class.std::__1::__tuple_leaf.535" }
%"class.std::__1::__tuple_leaf.535" = type { %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::tuple.558" = type { %"struct.std::__1::__tuple_impl.559" }
%"struct.std::__1::__tuple_impl.559" = type { %"class.std::__1::__tuple_leaf.560" }
%"class.std::__1::__tuple_leaf.560" = type { %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* }
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538", %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"struct.std::__1::__hash_node.512"* }
%"struct.std::__1::__hash_node.512" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type.513" }
%"struct.std::__1::__hash_value_type.513" = type { %"struct.std::__1::pair.471" }
%"struct.std::__1::pair.471" = type { %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId", %"class.std::__1::vector.460" }
%"class.std::__1::vector.460" = type { %"class.std::__1::__vector_base.461" }
%"class.std::__1::__vector_base.461" = type { i64*, i64*, %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { i64* }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.std::__1::__hash_node_destructor.540" }
%"class.std::__1::__hash_node_destructor.540" = type <{ %"class.std::__1::allocator.7"*, i8, [7 x i8] }>
%"class.std::__1::allocator.7" = type { i8 }
%"struct.std::__1::__split_buffer.476" = type { %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"**, %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.178", %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.std::__1::allocator.180"* }
%"class.std::__1::allocator.180" = type { i8 }
%"struct.perfetto::trace_processor::BitVector::Address" = type { i32, %"struct.perfetto::trace_processor::BitVector::BlockOffset" }
%"struct.perfetto::trace_processor::BitVector::BlockOffset" = type { i16, i16 }
%"struct.std::__1::__split_buffer.498" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.std::__1::allocator.207"* }
%"class.std::__1::allocator.207" = type { i8 }
%"struct.std::__1::__hash_value_type.519" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.perfetto::trace_processor::FlowTracker::V1FlowId", i64 }

$_ZN8perfetto15trace_processor6tables9FlowTable6InsertERKNS2_3RowE = comdat any

$_ZN8perfetto15trace_processor10StringPool12InternStringENS_4base10StringViewE = comdat any

$_ZN8perfetto15trace_processor15macros_internal10MacroTable30UpdateRowMapsAfterParentInsertEv = comdat any

$_ZN8perfetto15trace_processor6RowMap6InsertEj = comdat any

$_ZNSt3__15dequeIN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS4_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS5_EEE10push_frontEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdERNS_9allocatorIS5_EEE10push_frontERKS5_ = comdat any

$_ZN8perfetto15trace_processor9BitVector6ResizeEjb = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertENS_11__wrap_iterIPKjEERS5_ = comdat any

$_ZN8perfetto15trace_processor9BitVector3SetERKNS1_7AddressES4_ = comdat any

$_ZNSt3__16vectorIN8perfetto15trace_processor9BitVector5BlockENS_9allocatorIS4_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

$_ZN8perfetto4base8BasenameEPKc = comdat any

$_ZNK8perfetto15trace_processor6RowMap3GetEj = comdat any

$_ZNK8perfetto15trace_processor6RowMap4sizeEv = comdat any

$_ZNK8perfetto15trace_processor9BitVector5Block13IndexOfNthSetEj = comdat any

$_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZNK8perfetto15trace_processor6RowMap7IndexOfEj = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor11FlowTracker8V1FlowIdEEENS_22__unordered_map_hasherImS6_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor11FlowTracker8V1FlowIdEEENS_22__unordered_map_hasherImS6_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor11FlowTracker8V1FlowIdEEENS_22__unordered_map_hasherImS6_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISB_PvEEEE = comdat any

@_ZTVN8perfetto15trace_processor11FlowTrackerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.perfetto::trace_processor::FlowTracker"*)* @_ZN8perfetto15trace_processor11FlowTrackerD2Ev to i8*), i8* bitcast (void (%"class.perfetto::trace_processor::FlowTracker"*)* @_ZN8perfetto15trace_processor11FlowTrackerD0Ev to i8*), i8* bitcast (void (%"class.perfetto::trace_processor::FlowTracker"*, i32, i64)* @_ZN8perfetto15trace_processor11FlowTracker5BeginENS0_6tables10TrackTable9DefinedIdEm to i8*), i8* bitcast (void (%"class.perfetto::trace_processor::FlowTracker"*, i32, i64)* @_ZN8perfetto15trace_processor11FlowTracker4StepENS0_6tables10TrackTable9DefinedIdEm to i8*), i8* bitcast (void (%"class.perfetto::trace_processor::FlowTracker"*, i32, i64, i1, i1)* @_ZN8perfetto15trace_processor11FlowTracker3EndENS0_6tables10TrackTable9DefinedIdEmbb to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"cat\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"flow\00", align 1
@.str.4 = private unnamed_addr constant [72 x i8] c"../../third_party/perfetto/src/trace_processor/tables/macros_internal.h\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"Should not be called (errno: %d, %s)\00", align 1
@.str.6 = private unnamed_addr constant [68 x i8] c"../../third_party/perfetto/src/trace_processor/containers/row_map.h\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"For GCC (errno: %d, %s)\00", align 1
@.str.8 = private unnamed_addr constant [71 x i8] c"../../third_party/perfetto/src/trace_processor/containers/bit_vector.h\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"Index out of bounds (errno: %d, %s)\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.10 = private unnamed_addr constant [64 x i8] c"../../third_party/perfetto/include/perfetto/ext/base/optional.h\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"%s (errno: %d, %s)\00", align 1
@.str.12 = private unnamed_addr constant [39 x i8] c"PERFETTO_CHECK(storage_.is_populated_)\00", align 1

@_ZN8perfetto15trace_processor11FlowTrackerC1EPNS0_21TraceProcessorContextE = hidden unnamed_addr alias void (%"class.perfetto::trace_processor::FlowTracker"*, %"class.perfetto::trace_processor::TraceProcessorContext"*), void (%"class.perfetto::trace_processor::FlowTracker"*, %"class.perfetto::trace_processor::TraceProcessorContext"*)* @_ZN8perfetto15trace_processor11FlowTrackerC2EPNS0_21TraceProcessorContextE
@_ZN8perfetto15trace_processor11FlowTrackerD1Ev = hidden unnamed_addr alias void (%"class.perfetto::trace_processor::FlowTracker"*), void (%"class.perfetto::trace_processor::FlowTracker"*)* @_ZN8perfetto15trace_processor11FlowTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11FlowTrackerC2EPNS0_21TraceProcessorContextE(%"class.perfetto::trace_processor::FlowTracker"* nocapture, %"class.perfetto::trace_processor::TraceProcessorContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8perfetto15trace_processor11FlowTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 1, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.12"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_map"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %6, align 4
  %8 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 2, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.36"* %9 to i32*
  %11 = bitcast %"class.std::__1::unordered_map.15"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %10, align 4
  %12 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 3, i32 0, i32 3
  %14 = bitcast %"class.std::__1::__compressed_pair.62"* %13 to i32*
  %15 = bitcast %"class.std::__1::unordered_map.42"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %14, align 4
  %16 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 4, i32 0, i32 3
  %18 = bitcast %"class.std::__1::__compressed_pair.88"* %17 to i32*
  %19 = bitcast %"class.std::__1::unordered_map.68"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %18, align 4
  %20 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 5
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 6
  store %"class.perfetto::trace_processor::TraceProcessorContext"* %1, %"class.perfetto::trace_processor::TraceProcessorContext"** %21, align 8
  %22 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"class.perfetto::trace_processor::TraceStorage"*, %"class.perfetto::trace_processor::TraceStorage"** %22, align 8
  %24 = bitcast %"class.perfetto::trace_processor::TraceStorage"* %23 to i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)***
  %25 = load i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)**, i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)*, i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)** %25, i64 2
  %27 = load i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)*, i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)** %26, align 8
  %28 = tail call i32 %27(%"class.perfetto::trace_processor::TraceStorage"* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #13
  %29 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 7, i32 0
  store i32 %28, i32* %29, align 8
  %30 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %21, align 8
  %31 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %30, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"class.perfetto::trace_processor::TraceStorage"*, %"class.perfetto::trace_processor::TraceStorage"** %31, align 8
  %33 = bitcast %"class.perfetto::trace_processor::TraceStorage"* %32 to i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)***
  %34 = load i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)**, i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)*, i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)** %34, i64 2
  %36 = load i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)*, i32 (%"class.perfetto::trace_processor::TraceStorage"*, i8*, i64)** %35, align 8
  %37 = tail call i32 %36(%"class.perfetto::trace_processor::TraceStorage"* %32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3) #13
  %38 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 8, i32 0
  store i32 %37, i32* %38, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11FlowTrackerD2Ev(%"class.perfetto::trace_processor::FlowTracker"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8perfetto15trace_processor11FlowTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.73"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.73"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.73"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  %11 = icmp eq %"struct.std::__1::__hash_node_base.73"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.73"** null, %"struct.std::__1::__hash_node_base.73"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.73"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.73"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.47"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.47"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.47"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #14
  %27 = icmp eq %"struct.std::__1::__hash_node_base.47"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.47"** null, %"struct.std::__1::__hash_node_base.47"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.47"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.47"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.20"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34, %38
  %39 = phi %"struct.std::__1::__hash_node_base.20"* [ %41, %38 ], [ %36, %34 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base.20"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #14
  %43 = icmp eq %"struct.std::__1::__hash_node_base.20"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %34
  %45 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.20"** null, %"struct.std::__1::__hash_node_base.20"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.20"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.20"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base"* %52, null
  br i1 %53, label %70, label %54

54:                                               ; preds = %50, %67
  %55 = phi %"struct.std::__1::__hash_node_base"* [ %57, %67 ], [ %52, %50 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 3
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64**
  %60 = load i64*, i64** %59, align 8
  %61 = icmp eq i64* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %54
  %63 = ptrtoint i64* %60 to i64
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 4
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = bitcast i64* %60 to i8*
  tail call void @_ZdlPv(i8* %66) #14
  br label %67

67:                                               ; preds = %62, %54
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i8*
  tail call void @_ZdlPv(i8* %68) #14
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %69, label %70, label %54

70:                                               ; preds = %67, %50
  %71 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %71, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base"** %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %70
  %75 = bitcast %"struct.std::__1::__hash_node_base"** %72 to i8*
  tail call void @_ZdlPv(i8* %75) #14
  br label %76

76:                                               ; preds = %70, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11FlowTrackerD0Ev(%"class.perfetto::trace_processor::FlowTracker"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8perfetto15trace_processor11FlowTrackerD2Ev(%"class.perfetto::trace_processor::FlowTracker"* %0) #13
  %2 = bitcast %"class.perfetto::trace_processor::FlowTracker"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11FlowTracker5BeginENS0_6tables10TrackTable9DefinedIdEm(%"class.perfetto::trace_processor::FlowTracker"*, i32, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.524", align 1
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.perfetto::base::Optional"*
  store i64 %2, i64* %6, align 8
  %9 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  store i64 -6148914691236517206, i64* %7, align 8
  %10 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 6
  %11 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %10, align 8
  %12 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %11, i64 0, i32 8, i32 0, i32 0, i32 0
  %13 = load %"class.perfetto::trace_processor::SliceTracker"*, %"class.perfetto::trace_processor::SliceTracker"** %12, align 8
  call void @_ZNK8perfetto15trace_processor12SliceTracker22GetTopmostSliceOnTrackENS0_6tables10TrackTable9DefinedIdE(%"class.perfetto::base::Optional"* nonnull sret %8, %"class.perfetto::trace_processor::SliceTracker"* %13, i32 %1) #13
  %14 = load i8, i8* %9, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %3
  %17 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %10, align 8
  %18 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.perfetto::trace_processor::TraceStorage"*, %"class.perfetto::trace_processor::TraceStorage"** %18, align 8
  %20 = getelementptr inbounds %"class.perfetto::trace_processor::TraceStorage", %"class.perfetto::trace_processor::TraceStorage"* %19, i64 0, i32 2, i32 0, i64 46, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add nsw i64 %21, 1
  store i64 %22, i64* %20, align 8
  br label %101

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %90, label %28

28:                                               ; preds = %23
  %29 = call i64 @llvm.ctpop.i64(i64 %26) #13, !range !3
  %30 = icmp ugt i64 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = add i64 %26, -1
  %33 = and i64 %32, %2
  br label %38

34:                                               ; preds = %28
  %35 = icmp ugt i64 %26, %2
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = urem i64 %2, %26
  br label %38

38:                                               ; preds = %36, %34, %31
  %39 = phi i64 [ %33, %31 ], [ %37, %36 ], [ %2, %34 ]
  %40 = getelementptr inbounds %"class.std::__1::unordered_map.15", %"class.std::__1::unordered_map.15"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %41, i64 %39
  %43 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.20"* %43, null
  br i1 %44, label %90, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %43, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.20"* %47, null
  br i1 %48, label %90, label %49

49:                                               ; preds = %45
  %50 = add i64 %26, -1
  br label %51

51:                                               ; preds = %72, %49
  %52 = phi %"struct.std::__1::__hash_node_base.20"* [ %47, %49 ], [ %74, %72 ]
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %52, i64 1
  %54 = bitcast %"struct.std::__1::__hash_node_base.20"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, %2
  br i1 %56, label %67, label %57

57:                                               ; preds = %51
  br i1 %30, label %60, label %58

58:                                               ; preds = %57
  %59 = and i64 %55, %50
  br label %64

60:                                               ; preds = %57
  %61 = icmp ult i64 %55, %26
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = urem i64 %55, %26
  br label %64

64:                                               ; preds = %62, %60, %58
  %65 = phi i64 [ %59, %58 ], [ %63, %62 ], [ %55, %60 ]
  %66 = icmp eq i64 %65, %39
  br i1 %66, label %72, label %83

67:                                               ; preds = %51
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %52, i64 2
  %69 = bitcast %"struct.std::__1::__hash_node_base.20"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, %2
  br i1 %71, label %76, label %72

72:                                               ; preds = %67, %64
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %52, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.20"* %74, null
  br i1 %75, label %83, label %51

76:                                               ; preds = %67
  %77 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %10, align 8
  %78 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %77, i64 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %"class.perfetto::trace_processor::TraceStorage"*, %"class.perfetto::trace_processor::TraceStorage"** %78, align 8
  %80 = getelementptr inbounds %"class.perfetto::trace_processor::TraceStorage", %"class.perfetto::trace_processor::TraceStorage"* %79, i64 0, i32 2, i32 0, i64 45, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add nsw i64 %81, 1
  store i64 %82, i64* %80, align 8
  br label %101

83:                                               ; preds = %72, %64
  %84 = icmp eq i8 %14, 1
  br i1 %84, label %90, label %85, !prof !4

85:                                               ; preds = %83
  %86 = call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0)) #13
  %87 = tail call i32* @__errno_location() #15
  %88 = load i32, i32* %87, align 4
  %89 = call i8* @strerror(i32 %88) #13
  call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %86, i32 597, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0), i32 %88, i8* %89) #13
  call void @llvm.trap() #13
  unreachable

90:                                               ; preds = %45, %23, %38, %83
  %91 = getelementptr inbounds %"class.std::__1::unordered_map.15", %"class.std::__1::unordered_map.15"* %24, i64 0, i32 0
  %92 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #13
  %93 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store i64* %6, i64** %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::tuple.524", %"class.std::__1::tuple.524"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %94) #13
  %95 = call { %"struct.std::__1::__hash_node_base.20"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.16"* %91, i64* nonnull dereferenceable(8) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.524"* nonnull dereferenceable(1) %5) #13
  %96 = extractvalue { %"struct.std::__1::__hash_node_base.20"*, i8 } %95, 0
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %96, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %94) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #13
  %98 = getelementptr inbounds %"class.perfetto::base::Optional", %"class.perfetto::base::Optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %99 = bitcast %"struct.std::__1::__hash_node_base.20"* %97 to i32*
  %100 = load i32, i32* %98, align 4
  store i32 %100, i32* %99, align 4
  br label %101

101:                                              ; preds = %90, %76, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  ret void
}

declare void @_ZNK8perfetto15trace_processor12SliceTracker22GetTopmostSliceOnTrackENS0_6tables10TrackTable9DefinedIdE(%"class.perfetto::base::Optional"* sret, %"class.perfetto::trace_processor::SliceTracker"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11FlowTracker4StepENS0_6tables10TrackTable9DefinedIdEm(%"class.perfetto::trace_processor::FlowTracker"*, i32, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.524", align 1
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.524", align 1
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.perfetto::base::Optional"*
  store i64 %2, i64* %8, align 8
  %11 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  store i64 -6148914691236517206, i64* %9, align 8
  %12 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 6
  %13 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %12, align 8
  %14 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %13, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load %"class.perfetto::trace_processor::SliceTracker"*, %"class.perfetto::trace_processor::SliceTracker"** %14, align 8
  call void @_ZNK8perfetto15trace_processor12SliceTracker22GetTopmostSliceOnTrackENS0_6tables10TrackTable9DefinedIdE(%"class.perfetto::base::Optional"* nonnull sret %10, %"class.perfetto::trace_processor::SliceTracker"* %15, i32 %1) #13
  %16 = load i8, i8* %11, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %3
  %19 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %12, align 8
  %20 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.perfetto::trace_processor::TraceStorage"*, %"class.perfetto::trace_processor::TraceStorage"** %20, align 8
  %22 = getelementptr inbounds %"class.perfetto::trace_processor::TraceStorage", %"class.perfetto::trace_processor::TraceStorage"* %21, i64 0, i32 2, i32 0, i64 46, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = add nsw i64 %23, 1
  store i64 %24, i64* %22, align 8
  br label %122

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 2
  %27 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %78, label %30

30:                                               ; preds = %25
  %31 = call i64 @llvm.ctpop.i64(i64 %28) #13, !range !3
  %32 = icmp ugt i64 %31, 1
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = add i64 %28, -1
  %35 = and i64 %34, %2
  br label %40

36:                                               ; preds = %30
  %37 = icmp ugt i64 %28, %2
  br i1 %37, label %40, label %38

38:                                               ; preds = %36
  %39 = urem i64 %2, %28
  br label %40

40:                                               ; preds = %38, %36, %33
  %41 = phi i64 [ %35, %33 ], [ %39, %38 ], [ %2, %36 ]
  %42 = getelementptr inbounds %"class.std::__1::unordered_map.15", %"class.std::__1::unordered_map.15"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %43, i64 %41
  %45 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.20"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %45, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.20"* %49, null
  br i1 %50, label %78, label %51

51:                                               ; preds = %47
  %52 = add i64 %28, -1
  br label %53

53:                                               ; preds = %74, %51
  %54 = phi %"struct.std::__1::__hash_node_base.20"* [ %49, %51 ], [ %76, %74 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base.20"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %2
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %32, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %52
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %28
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %28
  br label %66

66:                                               ; preds = %64, %62, %60
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %41
  br i1 %68, label %74, label %78

69:                                               ; preds = %53
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base.20"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, %2
  br i1 %73, label %85, label %74

74:                                               ; preds = %69, %66
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %54, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %75, align 8
  %77 = icmp eq %"struct.std::__1::__hash_node_base.20"* %76, null
  br i1 %77, label %78, label %53

78:                                               ; preds = %74, %66, %40, %25, %47
  %79 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %12, align 8
  %80 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %79, i64 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.perfetto::trace_processor::TraceStorage"*, %"class.perfetto::trace_processor::TraceStorage"** %80, align 8
  %82 = getelementptr inbounds %"class.perfetto::trace_processor::TraceStorage", %"class.perfetto::trace_processor::TraceStorage"* %81, i64 0, i32 2, i32 0, i64 47, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add nsw i64 %83, 1
  store i64 %84, i64* %82, align 8
  br label %122

85:                                               ; preds = %69
  %86 = getelementptr inbounds %"class.std::__1::unordered_map.15", %"class.std::__1::unordered_map.15"* %26, i64 0, i32 0
  %87 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #13
  %88 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store i64* %8, i64** %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::tuple.524", %"class.std::__1::tuple.524"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %89) #13
  %90 = call { %"struct.std::__1::__hash_node_base.20"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.16"* %86, i64* nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.524"* nonnull dereferenceable(1) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %89) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #13
  %91 = load i8, i8* %11, align 8, !range !2
  %92 = icmp eq i8 %91, 1
  br i1 %92, label %98, label %93, !prof !4

93:                                               ; preds = %85
  %94 = call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0)) #13
  %95 = tail call i32* @__errno_location() #15
  %96 = load i32, i32* %95, align 4
  %97 = call i8* @strerror(i32 %96) #13
  call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %94, i32 597, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0), i32 %96, i8* %97) #13
  call void @llvm.trap() #13
  unreachable

98:                                               ; preds = %85
  %99 = load i64, i64* %8, align 8
  %100 = extractvalue { %"struct.std::__1::__hash_node_base.20"*, i8 } %90, 0
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %100, i64 3
  %102 = bitcast %"struct.std::__1::__hash_node_base.20"* %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.perfetto::base::Optional", %"class.perfetto::base::Optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  call void @_ZN8perfetto15trace_processor11FlowTracker10InsertFlowEmNS0_6tables10SliceTable9DefinedIdES4_(%"class.perfetto::trace_processor::FlowTracker"* %0, i64 %99, i32 %103, i32 %105)
  %106 = load i8, i8* %11, align 8, !range !2
  %107 = icmp eq i8 %106, 1
  br i1 %107, label %113, label %108, !prof !4

108:                                              ; preds = %98
  %109 = call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0)) #13
  %110 = tail call i32* @__errno_location() #15
  %111 = load i32, i32* %110, align 4
  %112 = call i8* @strerror(i32 %111) #13
  call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %109, i32 597, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0), i32 %111, i8* %112) #13
  call void @llvm.trap() #13
  unreachable

113:                                              ; preds = %98
  %114 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #13
  %115 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  store i64* %8, i64** %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::tuple.524", %"class.std::__1::tuple.524"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %116) #13
  %117 = call { %"struct.std::__1::__hash_node_base.20"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.16"* %86, i64* nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.524"* nonnull dereferenceable(1) %7) #13
  %118 = extractvalue { %"struct.std::__1::__hash_node_base.20"*, i8 } %117, 0
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %118, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %116) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #13
  %120 = bitcast %"struct.std::__1::__hash_node_base.20"* %119 to i32*
  %121 = load i32, i32* %104, align 4
  store i32 %121, i32* %120, align 4
  br label %122

122:                                              ; preds = %113, %78, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11FlowTracker10InsertFlowEmNS0_6tables10SliceTable9DefinedIdES4_(%"class.perfetto::trace_processor::FlowTracker"* nocapture readonly, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.perfetto::base::Optional.507", align 4
  %6 = alloca %"struct.perfetto::trace_processor::tables::FlowTable::Row", align 8
  %7 = alloca %"class.perfetto::trace_processor::ArgsTracker", align 8
  %8 = alloca %"class.perfetto::trace_processor::ArgsTracker::BoundInserter", align 8
  %9 = bitcast %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::FlowTable::Row", %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %6, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::FlowTable::Row", %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %6, i64 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::FlowTable::Row", %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %6, i64 0, i32 2, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::FlowTable::Row", %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %6, i64 0, i32 3
  %14 = bitcast %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %10, align 8
  store i32 %2, i32* %11, align 8
  store i32 %3, i32* %12, align 4
  store i32 0, i32* %13, align 8
  %15 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 6
  %16 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %15, align 8
  %17 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %16, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.perfetto::trace_processor::TraceStorage"*, %"class.perfetto::trace_processor::TraceStorage"** %17, align 8
  %19 = getelementptr inbounds %"class.perfetto::trace_processor::TraceStorage", %"class.perfetto::trace_processor::TraceStorage"* %18, i64 0, i32 22
  %20 = call i64 @_ZN8perfetto15trace_processor6tables9FlowTable6InsertERKNS2_3RowE(%"class.perfetto::trace_processor::tables::FlowTable"* %19, %"struct.perfetto::trace_processor::tables::FlowTable::Row"* nonnull dereferenceable(24) %6)
  %21 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %125, label %24

24:                                               ; preds = %4
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #13, !range !3
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %1
  br label %34

30:                                               ; preds = %24
  %31 = icmp ugt i64 %22, %1
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %1, %22
  br label %34

34:                                               ; preds = %32, %30, %27
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %1, %30 ]
  %36 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.73"* %39, null
  br i1 %40, label %125, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.73"* %43, null
  br i1 %44, label %125, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  br label %47

47:                                               ; preds = %68, %45
  %48 = phi %"struct.std::__1::__hash_node_base.73"* [ %43, %45 ], [ %70, %68 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.73"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %1
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %46
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %58, %56, %54
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %68, label %125

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.73"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, %1
  br i1 %67, label %72, label %68

68:                                               ; preds = %63, %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %48, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.73"* %70, null
  br i1 %71, label %125, label %47

72:                                               ; preds = %63
  %73 = trunc i64 %20 to i32
  %74 = bitcast %"class.perfetto::trace_processor::ArgsTracker"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %74) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 64, i1 false)
  %75 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %15, align 8
  call void @_ZN8perfetto15trace_processor11ArgsTrackerC1EPNS0_21TraceProcessorContextE(%"class.perfetto::trace_processor::ArgsTracker"* nonnull %7, %"class.perfetto::trace_processor::TraceProcessorContext"* %75) #13
  %76 = bitcast %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #13
  %77 = bitcast %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 32, i1 false)
  %78 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %15, align 8
  %79 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %78, i64 0, i32 5, i32 0, i32 0, i32 0
  %80 = load %"class.perfetto::trace_processor::ArgsTracker"*, %"class.perfetto::trace_processor::ArgsTracker"** %79, align 8
  %81 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker", %"class.perfetto::trace_processor::ArgsTracker"* %80, i64 0, i32 2
  %82 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %81, align 8, !noalias !5
  %83 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %82, i64 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.perfetto::trace_processor::TraceStorage"*, %"class.perfetto::trace_processor::TraceStorage"** %83, align 8, !noalias !5
  %85 = getelementptr inbounds %"class.perfetto::base::Optional.507", %"class.perfetto::base::Optional.507"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #13, !noalias !8
  %86 = getelementptr inbounds %"class.perfetto::trace_processor::TraceStorage", %"class.perfetto::trace_processor::TraceStorage"* %84, i64 0, i32 22, i32 0, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"class.perfetto::trace_processor::Column"** %86 to %"struct.perfetto::trace_processor::IdColumn"**
  %88 = load %"struct.perfetto::trace_processor::IdColumn"*, %"struct.perfetto::trace_processor::IdColumn"** %87, align 8, !noalias !8
  %89 = getelementptr inbounds %"struct.perfetto::trace_processor::IdColumn", %"struct.perfetto::trace_processor::IdColumn"* %88, i64 0, i32 0
  %90 = call dereferenceable(104) %"class.perfetto::trace_processor::RowMap"* @_ZNK8perfetto15trace_processor6Column7row_mapEv(%"class.perfetto::trace_processor::Column"* %89) #13, !noalias !11
  call void @_ZNK8perfetto15trace_processor6RowMap7IndexOfEj(%"class.perfetto::base::Optional.507"* nonnull sret %5, %"class.perfetto::trace_processor::RowMap"* %90, i32 %73) #13, !noalias !8
  %91 = getelementptr inbounds %"class.perfetto::base::Optional.507", %"class.perfetto::base::Optional.507"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %92 = load i32, i32* %91, align 4, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #13, !noalias !8
  %93 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %86, align 8, !noalias !8
  %94 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %93, i64 4
  call void @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterC1EPS1_PNS0_6ColumnEj(%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* nonnull %8, %"class.perfetto::trace_processor::ArgsTracker"* %80, %"class.perfetto::trace_processor::Column"* %94, i32 %92) #13
  %95 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 7, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = bitcast %"struct.std::__1::__hash_node_base.73"* %64 to %"struct.std::__1::pair.474"*
  %98 = getelementptr inbounds %"struct.std::__1::pair.474", %"struct.std::__1::pair.474"* %97, i64 0, i32 1, i32 2, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %100, -6148914694099828736
  %102 = bitcast %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %8 to %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32)***
  %103 = load %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32)**, %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32)*** %102, align 8
  %104 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32)*, %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32)** %103, i64 2
  %105 = load %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32)*, %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32)** %104, align 8
  %106 = call dereferenceable(32) %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %105(%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* nonnull %8, i32 %96, i32 %96, i64 2, i64 %101, i32 1) #13
  %107 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 8, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %48, i64 4
  %110 = bitcast %"struct.std::__1::__hash_node_base.73"* %109 to i32*
  %111 = load i32, i32* %110, align 8
  %112 = zext i32 %111 to i64
  %113 = or i64 %112, -6148914694099828736
  %114 = load %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32)**, %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32)*** %102, align 8
  %115 = getelementptr inbounds %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32)*, %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32)** %114, i64 2
  %116 = load %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32)*, %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* (%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, i32, i32, i64, i64, i32)** %115, align 8
  %117 = call dereferenceable(32) %"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* %116(%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* nonnull %8, i32 %108, i32 %108, i64 2, i64 %113, i32 1) #13
  %118 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %15, align 8
  %119 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %118, i64 0, i32 5, i32 0, i32 0, i32 0
  %120 = load %"class.perfetto::trace_processor::ArgsTracker"*, %"class.perfetto::trace_processor::ArgsTracker"** %119, align 8
  %121 = bitcast %"class.perfetto::trace_processor::ArgsTracker"* %120 to void (%"class.perfetto::trace_processor::ArgsTracker"*)***
  %122 = load void (%"class.perfetto::trace_processor::ArgsTracker"*)**, void (%"class.perfetto::trace_processor::ArgsTracker"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.perfetto::trace_processor::ArgsTracker"*)*, void (%"class.perfetto::trace_processor::ArgsTracker"*)** %122, i64 2
  %124 = load void (%"class.perfetto::trace_processor::ArgsTracker"*)*, void (%"class.perfetto::trace_processor::ArgsTracker"*)** %123, align 8
  call void %124(%"class.perfetto::trace_processor::ArgsTracker"* %120) #13
  call void @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD1Ev(%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #13
  call void @_ZN8perfetto15trace_processor11ArgsTrackerD1Ev(%"class.perfetto::trace_processor::ArgsTracker"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %74) #13
  br label %125

125:                                              ; preds = %68, %60, %41, %4, %34, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11FlowTracker3EndENS0_6tables10TrackTable9DefinedIdEmbb(%"class.perfetto::trace_processor::FlowTracker"*, i32, i64, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.525", align 8
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple.524", align 1
  %9 = alloca %"class.std::__1::tuple.533", align 8
  %10 = alloca %"class.std::__1::tuple.524", align 1
  %11 = alloca %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId", align 4
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"class.perfetto::base::Optional"*
  %15 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId", %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId"* %11, i64 0, i32 0, i32 0
  store i32 %1, i32* %15, align 4
  store i64 %2, i64* %12, align 8
  br i1 %3, label %94, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 1, i32 0
  %18 = bitcast %"class.std::__1::tuple.533"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.std::__1::tuple.533", %"class.std::__1::tuple.533"* %9, i64 0, i32 0, i32 0, i32 0
  store %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId"* %11, %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId"** %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::tuple.524", %"class.std::__1::tuple.524"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #13
  %21 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %17, %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId"* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.533"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.524"* nonnull dereferenceable(1) %10) #13
  %22 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %21, 0
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 4
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %24 to i64**
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 5
  %28 = bitcast %"struct.std::__1::__hash_node_base"* %27 to i64**
  %29 = load i64*, i64** %28, align 8
  %30 = icmp eq i64* %26, %29
  %31 = ptrtoint i64* %29 to i64
  br i1 %30, label %37, label %32

32:                                               ; preds = %16
  %33 = load i64, i64* %12, align 8
  store i64 %33, i64* %26, align 8
  %34 = getelementptr inbounds i64, i64* %26, i64 1
  %35 = ptrtoint i64* %34 to i64
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %24 to i64*
  store i64 %35, i64* %36, align 8
  br label %252

37:                                               ; preds = %16
  %38 = ptrtoint i64* %26 to i64
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %24 to i64*
  %40 = bitcast %"struct.std::__1::__hash_node_base"* %23 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %38, %41
  %43 = ashr exact i64 %42, 3
  %44 = add nsw i64 %43, 1
  %45 = icmp ugt i64 %44, 2305843009213693951
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %23 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %47) #16
  unreachable

48:                                               ; preds = %37
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %27 to i64*
  %50 = sub i64 %31, %41
  %51 = ashr exact i64 %50, 3
  %52 = icmp ult i64 %51, 1152921504606846975
  br i1 %52, label %53, label %61

53:                                               ; preds = %48
  %54 = ashr exact i64 %50, 2
  %55 = icmp ult i64 %54, %44
  %56 = select i1 %55, i64 %44, i64 %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %53
  %59 = icmp ugt i64 %56, 2305843009213693951
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  call void @abort() #16
  unreachable

61:                                               ; preds = %58, %48
  %62 = phi i64 [ %56, %58 ], [ 2305843009213693951, %48 ]
  %63 = shl i64 %62, 3
  %64 = call i8* @_Znwm(i64 %63) #14
  %65 = bitcast i8* %64 to i64*
  br label %66

66:                                               ; preds = %61, %53
  %67 = phi i64 [ %62, %61 ], [ 0, %53 ]
  %68 = phi i64* [ %65, %61 ], [ null, %53 ]
  %69 = getelementptr inbounds i64, i64* %68, i64 %43
  %70 = getelementptr inbounds i64, i64* %68, i64 %67
  %71 = ptrtoint i64* %70 to i64
  %72 = load i64, i64* %12, align 8
  store i64 %72, i64* %69, align 8
  %73 = getelementptr inbounds i64, i64* %69, i64 1
  %74 = ptrtoint i64* %73 to i64
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %23 to i64**
  %76 = load i64*, i64** %75, align 8
  %77 = load i64, i64* %39, align 8
  %78 = ptrtoint i64* %76 to i64
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 3
  %81 = sub nsw i64 0, %80
  %82 = getelementptr inbounds i64, i64* %69, i64 %81
  %83 = ptrtoint i64* %82 to i64
  %84 = icmp sgt i64 %79, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %66
  %86 = bitcast i64* %82 to i8*
  %87 = bitcast i64* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 %79, i1 false) #13
  %88 = load i64*, i64** %75, align 8
  br label %89

89:                                               ; preds = %85, %66
  %90 = phi i64* [ %76, %66 ], [ %88, %85 ]
  store i64 %83, i64* %40, align 8
  store i64 %74, i64* %39, align 8
  store i64 %71, i64* %49, align 8
  %91 = icmp eq i64* %90, null
  br i1 %91, label %252, label %92

92:                                               ; preds = %89
  %93 = bitcast i64* %90 to i8*
  call void @_ZdlPv(i8* %93) #14
  br label %252

94:                                               ; preds = %5
  %95 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #13
  store i64 -6148914691236517206, i64* %13, align 8
  %96 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 6
  %97 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %96, align 8
  %98 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %97, i64 0, i32 8, i32 0, i32 0, i32 0
  %99 = load %"class.perfetto::trace_processor::SliceTracker"*, %"class.perfetto::trace_processor::SliceTracker"** %98, align 8
  call void @_ZNK8perfetto15trace_processor12SliceTracker22GetTopmostSliceOnTrackENS0_6tables10TrackTable9DefinedIdE(%"class.perfetto::base::Optional"* nonnull sret %14, %"class.perfetto::trace_processor::SliceTracker"* %99, i32 %1) #13
  %100 = load i8, i8* %95, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %109

102:                                              ; preds = %94
  %103 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %96, align 8
  %104 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %103, i64 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"class.perfetto::trace_processor::TraceStorage"*, %"class.perfetto::trace_processor::TraceStorage"** %104, align 8
  %106 = getelementptr inbounds %"class.perfetto::trace_processor::TraceStorage", %"class.perfetto::trace_processor::TraceStorage"* %105, i64 0, i32 2, i32 0, i64 46, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = add nsw i64 %107, 1
  store i64 %108, i64* %106, align 8
  br label %251

109:                                              ; preds = %94
  %110 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 2
  %111 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %162, label %114

114:                                              ; preds = %109
  %115 = call i64 @llvm.ctpop.i64(i64 %112) #13, !range !3
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = add i64 %112, -1
  %119 = and i64 %118, %2
  br label %124

120:                                              ; preds = %114
  %121 = icmp ugt i64 %112, %2
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %2, %112
  br label %124

124:                                              ; preds = %122, %120, %117
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %2, %120 ]
  %126 = getelementptr inbounds %"class.std::__1::unordered_map.15", %"class.std::__1::unordered_map.15"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %126, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %127, i64 %125
  %129 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.20"* %129, null
  br i1 %130, label %162, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %129, i64 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base.20"* %133, null
  br i1 %134, label %162, label %135

135:                                              ; preds = %131
  %136 = add i64 %112, -1
  br label %137

137:                                              ; preds = %158, %135
  %138 = phi %"struct.std::__1::__hash_node_base.20"* [ %133, %135 ], [ %160, %158 ]
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %138, i64 1
  %140 = bitcast %"struct.std::__1::__hash_node_base.20"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %141, %2
  br i1 %142, label %153, label %143

143:                                              ; preds = %137
  br i1 %116, label %146, label %144

144:                                              ; preds = %143
  %145 = and i64 %141, %136
  br label %150

146:                                              ; preds = %143
  %147 = icmp ult i64 %141, %112
  br i1 %147, label %150, label %148

148:                                              ; preds = %146
  %149 = urem i64 %141, %112
  br label %150

150:                                              ; preds = %148, %146, %144
  %151 = phi i64 [ %145, %144 ], [ %149, %148 ], [ %141, %146 ]
  %152 = icmp eq i64 %151, %125
  br i1 %152, label %158, label %162

153:                                              ; preds = %137
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %138, i64 2
  %155 = bitcast %"struct.std::__1::__hash_node_base.20"* %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = icmp eq i64 %156, %2
  br i1 %157, label %169, label %158

158:                                              ; preds = %153, %150
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %138, i64 0, i32 0
  %160 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %159, align 8
  %161 = icmp eq %"struct.std::__1::__hash_node_base.20"* %160, null
  br i1 %161, label %162, label %137

162:                                              ; preds = %158, %150, %124, %109, %131
  %163 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %96, align 8
  %164 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %163, i64 0, i32 1, i32 0, i32 0, i32 0
  %165 = load %"class.perfetto::trace_processor::TraceStorage"*, %"class.perfetto::trace_processor::TraceStorage"** %164, align 8
  %166 = getelementptr inbounds %"class.perfetto::trace_processor::TraceStorage", %"class.perfetto::trace_processor::TraceStorage"* %165, i64 0, i32 2, i32 0, i64 48, i32 0
  %167 = load i64, i64* %166, align 8
  %168 = add nsw i64 %167, 1
  store i64 %168, i64* %166, align 8
  br label %251

169:                                              ; preds = %153
  %170 = getelementptr inbounds %"class.std::__1::unordered_map.15", %"class.std::__1::unordered_map.15"* %110, i64 0, i32 0
  %171 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #13
  %172 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  store i64* %12, i64** %172, align 8
  %173 = getelementptr inbounds %"class.std::__1::tuple.524", %"class.std::__1::tuple.524"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %173) #13
  %174 = call { %"struct.std::__1::__hash_node_base.20"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.16"* %170, i64* nonnull dereferenceable(8) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.524"* nonnull dereferenceable(1) %8) #13
  %175 = extractvalue { %"struct.std::__1::__hash_node_base.20"*, i8 } %174, 0
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %175, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %173) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #13
  %177 = bitcast %"struct.std::__1::__hash_node_base.20"* %176 to i32*
  %178 = load i32, i32* %177, align 4
  br i1 %4, label %179, label %239

179:                                              ; preds = %169
  %180 = load i64, i64* %12, align 8
  %181 = load i64, i64* %111, align 8
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %230, label %183

183:                                              ; preds = %179
  %184 = call i64 @llvm.ctpop.i64(i64 %181) #13, !range !3
  %185 = icmp ugt i64 %184, 1
  br i1 %185, label %189, label %186

186:                                              ; preds = %183
  %187 = add i64 %181, -1
  %188 = and i64 %187, %180
  br label %193

189:                                              ; preds = %183
  %190 = icmp ult i64 %180, %181
  br i1 %190, label %193, label %191

191:                                              ; preds = %189
  %192 = urem i64 %180, %181
  br label %193

193:                                              ; preds = %191, %189, %186
  %194 = phi i64 [ %188, %186 ], [ %192, %191 ], [ %180, %189 ]
  %195 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %126, align 8
  %196 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %195, i64 %194
  %197 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.20"* %197, null
  br i1 %198, label %230, label %199

199:                                              ; preds = %193
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %197, i64 0, i32 0
  %201 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %200, align 8
  %202 = icmp eq %"struct.std::__1::__hash_node_base.20"* %201, null
  br i1 %202, label %230, label %203

203:                                              ; preds = %199
  %204 = add i64 %181, -1
  br label %205

205:                                              ; preds = %226, %203
  %206 = phi %"struct.std::__1::__hash_node_base.20"* [ %201, %203 ], [ %228, %226 ]
  %207 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %206, i64 1
  %208 = bitcast %"struct.std::__1::__hash_node_base.20"* %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = icmp eq i64 %209, %180
  br i1 %210, label %221, label %211

211:                                              ; preds = %205
  br i1 %185, label %214, label %212

212:                                              ; preds = %211
  %213 = and i64 %209, %204
  br label %218

214:                                              ; preds = %211
  %215 = icmp ult i64 %209, %181
  br i1 %215, label %218, label %216

216:                                              ; preds = %214
  %217 = urem i64 %209, %181
  br label %218

218:                                              ; preds = %216, %214, %212
  %219 = phi i64 [ %213, %212 ], [ %217, %216 ], [ %209, %214 ]
  %220 = icmp eq i64 %219, %194
  br i1 %220, label %226, label %230

221:                                              ; preds = %205
  %222 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %206, i64 2
  %223 = bitcast %"struct.std::__1::__hash_node_base.20"* %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = icmp eq i64 %224, %180
  br i1 %225, label %230, label %226

226:                                              ; preds = %221, %218
  %227 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %206, i64 0, i32 0
  %228 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %227, align 8
  %229 = icmp eq %"struct.std::__1::__hash_node_base.20"* %228, null
  br i1 %229, label %230, label %205

230:                                              ; preds = %218, %221, %226, %179, %193, %199
  %231 = phi %"struct.std::__1::__hash_node_base.20"* [ null, %193 ], [ null, %179 ], [ null, %199 ], [ %206, %221 ], [ null, %226 ], [ null, %218 ]
  %232 = bitcast %"class.std::__1::unique_ptr.525"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %232) #13
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE(%"class.std::__1::unique_ptr.525"* nonnull sret %6, %"class.std::__1::__hash_table.16"* %170, %"struct.std::__1::__hash_node_base.20"* %231) #13
  %233 = getelementptr inbounds %"class.std::__1::unique_ptr.525", %"class.std::__1::unique_ptr.525"* %6, i64 0, i32 0, i32 0, i32 0
  %234 = load %"struct.std::__1::__hash_node.514"*, %"struct.std::__1::__hash_node.514"** %233, align 8
  store %"struct.std::__1::__hash_node.514"* null, %"struct.std::__1::__hash_node.514"** %233, align 8
  %235 = icmp eq %"struct.std::__1::__hash_node.514"* %234, null
  br i1 %235, label %238, label %236

236:                                              ; preds = %230
  %237 = bitcast %"struct.std::__1::__hash_node.514"* %234 to i8*
  call void @_ZdlPv(i8* %237) #14
  br label %238

238:                                              ; preds = %230, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %232) #13
  br label %239

239:                                              ; preds = %238, %169
  %240 = load i8, i8* %95, align 8, !range !2
  %241 = icmp eq i8 %240, 1
  br i1 %241, label %247, label %242, !prof !4

242:                                              ; preds = %239
  %243 = call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10, i64 0, i64 0)) #13
  %244 = tail call i32* @__errno_location() #15
  %245 = load i32, i32* %244, align 4
  %246 = call i8* @strerror(i32 %245) #13
  call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %243, i32 597, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0), i32 %245, i8* %246) #13
  call void @llvm.trap() #13
  unreachable

247:                                              ; preds = %239
  %248 = load i64, i64* %12, align 8
  %249 = getelementptr inbounds %"class.perfetto::base::Optional", %"class.perfetto::base::Optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %250 = load i32, i32* %249, align 4
  call void @_ZN8perfetto15trace_processor11FlowTracker10InsertFlowEmNS0_6tables10SliceTable9DefinedIdES4_(%"class.perfetto::trace_processor::FlowTracker"* %0, i64 %248, i32 %178, i32 %250)
  br label %251

251:                                              ; preds = %247, %162, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #13
  br label %252

252:                                              ; preds = %92, %89, %32, %251
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8perfetto15trace_processor11FlowTracker8IsActiveEm(%"class.perfetto::trace_processor::FlowTracker"* nocapture readonly, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %54, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @llvm.ctpop.i64(i64 %4) #13, !range !3
  %8 = icmp ugt i64 %7, 1
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = add i64 %4, -1
  %11 = and i64 %10, %1
  br label %16

12:                                               ; preds = %6
  %13 = icmp ugt i64 %4, %1
  br i1 %13, label %16, label %14

14:                                               ; preds = %12
  %15 = urem i64 %1, %4
  br label %16

16:                                               ; preds = %14, %12, %9
  %17 = phi i64 [ %11, %9 ], [ %15, %14 ], [ %1, %12 ]
  %18 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %19, i64 %17
  %21 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.20"* %21, null
  br i1 %22, label %54, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %21, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.20"* %25, null
  br i1 %26, label %54, label %27

27:                                               ; preds = %23
  %28 = add i64 %4, -1
  br label %29

29:                                               ; preds = %50, %27
  %30 = phi %"struct.std::__1::__hash_node_base.20"* [ %25, %27 ], [ %52, %50 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %30, i64 1
  %32 = bitcast %"struct.std::__1::__hash_node_base.20"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, %1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  br i1 %8, label %38, label %36

36:                                               ; preds = %35
  %37 = and i64 %33, %28
  br label %42

38:                                               ; preds = %35
  %39 = icmp ult i64 %33, %4
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %33, %4
  br label %42

42:                                               ; preds = %40, %38, %36
  %43 = phi i64 [ %37, %36 ], [ %41, %40 ], [ %33, %38 ]
  %44 = icmp eq i64 %43, %17
  br i1 %44, label %50, label %54

45:                                               ; preds = %29
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %30, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base.20"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %1
  br i1 %49, label %54, label %50

50:                                               ; preds = %45, %42
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %30, i64 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.20"* %52, null
  br i1 %53, label %54, label %29

54:                                               ; preds = %42, %45, %50, %2, %16, %23
  %55 = phi %"struct.std::__1::__hash_node_base.20"* [ null, %16 ], [ null, %2 ], [ null, %23 ], [ %30, %45 ], [ null, %50 ], [ null, %42 ]
  %56 = icmp ne %"struct.std::__1::__hash_node_base.20"* %55, null
  ret i1 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8perfetto15trace_processor11FlowTracker19GetFlowIdForV1EventEmNS0_10StringPool2IdES3_(%"class.perfetto::trace_processor::FlowTracker"*, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.524", align 1
  %7 = alloca %"class.std::__1::tuple.558", align 8
  %8 = alloca %"class.std::__1::tuple.524", align 1
  %9 = alloca %"struct.perfetto::trace_processor::FlowTracker::V1FlowId", align 8
  %10 = alloca i64, align 8
  %11 = bitcast %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"struct.perfetto::trace_processor::FlowTracker::V1FlowId", %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* %9, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.perfetto::trace_processor::FlowTracker::V1FlowId", %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* %9, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.perfetto::trace_processor::FlowTracker::V1FlowId", %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* %9, i64 0, i32 2, i32 0
  store i64 %1, i64* %12, align 8
  store i32 %2, i32* %13, align 8
  store i32 %3, i32* %14, align 4
  %15 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 3, i32 0
  %16 = call %"struct.std::__1::__hash_node_base.47"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.43"* %15, %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* nonnull dereferenceable(16) %9) #13
  %17 = icmp eq %"struct.std::__1::__hash_node_base.47"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %16, i64 4
  %20 = bitcast %"struct.std::__1::__hash_node_base.47"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  br label %45

22:                                               ; preds = %4
  %23 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 5
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %25, 1
  store i32 %26, i32* %24, align 8
  %27 = zext i32 %25 to i64
  store i64 %27, i64* %10, align 8
  %28 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 4, i32 0
  %29 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store i64* %10, i64** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple.524", %"class.std::__1::tuple.524"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #13
  %32 = call { %"struct.std::__1::__hash_node_base.73"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor11FlowTracker8V1FlowIdEEENS_22__unordered_map_hasherImS6_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.69"* %28, i64* nonnull dereferenceable(8) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.524"* nonnull dereferenceable(1) %6) #13
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.73"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %33, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  %35 = bitcast %"struct.std::__1::__hash_node_base.73"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %11, i64 16, i1 false)
  %36 = load i64, i64* %10, align 8
  %37 = bitcast %"class.std::__1::tuple.558"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  %38 = getelementptr inbounds %"class.std::__1::tuple.558", %"class.std::__1::tuple.558"* %7, i64 0, i32 0, i32 0, i32 0
  store %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* %9, %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::tuple.524", %"class.std::__1::tuple.524"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %39) #13
  %40 = call { %"struct.std::__1::__hash_node_base.47"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.43"* %15, %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* nonnull dereferenceable(16) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.558"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.524"* nonnull dereferenceable(1) %8) #13
  %41 = extractvalue { %"struct.std::__1::__hash_node_base.47"*, i8 } %40, 0
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %41, i64 4
  %43 = bitcast %"struct.std::__1::__hash_node_base.47"* %42 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  store i64 %36, i64* %43, align 8
  %44 = load i64, i64* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %45

45:                                               ; preds = %22, %18
  %46 = phi i64 [ %21, %18 ], [ %44, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  ret i64 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11FlowTracker25ClosePendingEventsOnTrackENS0_6tables10TrackTable9DefinedIdENS2_10SliceTable9DefinedIdE(%"class.perfetto::trace_processor::FlowTracker"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.536", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.524", align 1
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 1
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %108, label %13

13:                                               ; preds = %3
  %14 = tail call i64 @llvm.ctpop.i64(i64 %11) #13, !range !3
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add i64 %11, 4294967295
  %18 = and i64 %17, %9
  br label %23

19:                                               ; preds = %13
  %20 = icmp ugt i64 %11, %9
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = urem i64 %9, %11
  br label %23

23:                                               ; preds = %21, %19, %16
  %24 = phi i64 [ %18, %16 ], [ %22, %21 ], [ %9, %19 ]
  %25 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, i64 %24
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %108, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %28, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %32, null
  br i1 %33, label %108, label %34

34:                                               ; preds = %30
  %35 = add i64 %11, -1
  br label %36

36:                                               ; preds = %57, %34
  %37 = phi %"struct.std::__1::__hash_node_base"* [ %32, %34 ], [ %59, %57 ]
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %9
  br i1 %41, label %52, label %42

42:                                               ; preds = %36
  br i1 %15, label %45, label %43

43:                                               ; preds = %42
  %44 = and i64 %40, %35
  br label %49

45:                                               ; preds = %42
  %46 = icmp ult i64 %40, %11
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %40, %11
  br label %49

49:                                               ; preds = %47, %45, %43
  %50 = phi i64 [ %44, %43 ], [ %48, %47 ], [ %40, %45 ]
  %51 = icmp eq i64 %50, %24
  br i1 %51, label %57, label %108

52:                                               ; preds = %36
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 2
  %54 = bitcast %"struct.std::__1::__hash_node_base"* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %61, label %57

57:                                               ; preds = %52, %49
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %58, align 8
  %60 = icmp eq %"struct.std::__1::__hash_node_base"* %59, null
  br i1 %60, label %108, label %36

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 3
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to i64**
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 4
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i64**
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %64, %67
  br i1 %68, label %75, label %69

69:                                               ; preds = %61
  %70 = bitcast i64* %7 to i8*
  %71 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 2, i32 0
  %72 = bitcast %"class.std::__1::tuple"* %5 to i8*
  %73 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.std::__1::tuple.524", %"class.std::__1::tuple.524"* %6, i64 0, i32 0
  br label %97

75:                                               ; preds = %97, %61
  %76 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %8, i64 0, i32 0
  %77 = bitcast %"class.std::__1::unique_ptr.536"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISB_PvEEEE(%"class.std::__1::unique_ptr.536"* nonnull sret %4, %"class.std::__1::__hash_table"* %76, %"struct.std::__1::__hash_node_base"* %37) #13
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.536", %"class.std::__1::unique_ptr.536"* %4, i64 0, i32 0, i32 0, i32 0
  %79 = load %"struct.std::__1::__hash_node.512"*, %"struct.std::__1::__hash_node.512"** %78, align 8
  store %"struct.std::__1::__hash_node.512"* null, %"struct.std::__1::__hash_node.512"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node.512"* %79, null
  br i1 %80, label %96, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.536", %"class.std::__1::unique_ptr.536"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %83 = load i8, i8* %82, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %94, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node.512", %"struct.std::__1::__hash_node.512"* %79, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %87 = load i64*, i64** %86, align 8
  %88 = icmp eq i64* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %85
  %90 = ptrtoint i64* %87 to i64
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node.512", %"struct.std::__1::__hash_node.512"* %79, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %92 = bitcast i64** %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = bitcast i64* %87 to i8*
  call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %89, %85, %81
  %95 = bitcast %"struct.std::__1::__hash_node.512"* %79 to i8*
  call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %75, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13
  br label %108

97:                                               ; preds = %69, %97
  %98 = phi i64* [ %64, %69 ], [ %106, %97 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #13
  store i64 -6148914691236517206, i64* %7, align 8
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #13
  store i64* %7, i64** %73, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %74) #13
  %100 = call { %"struct.std::__1::__hash_node_base.20"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.16"* %71, i64* nonnull dereferenceable(8) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.524"* nonnull dereferenceable(1) %6) #13
  %101 = extractvalue { %"struct.std::__1::__hash_node_base.20"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %101, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %74) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #13
  %103 = bitcast %"struct.std::__1::__hash_node_base.20"* %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = load i64, i64* %7, align 8
  call void @_ZN8perfetto15trace_processor11FlowTracker10InsertFlowEmNS0_6tables10SliceTable9DefinedIdES4_(%"class.perfetto::trace_processor::FlowTracker"* %0, i64 %105, i32 %104, i32 %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #13
  %106 = getelementptr inbounds i64, i64* %98, i64 1
  %107 = icmp eq i64* %106, %67
  br i1 %107, label %75, label %97

108:                                              ; preds = %57, %49, %30, %3, %23, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN8perfetto15trace_processor6tables9FlowTable6InsertERKNS2_3RowE(%"class.perfetto::trace_processor::tables::FlowTable"*, %"struct.perfetto::trace_processor::tables::FlowTable::Row"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::FlowTable"* %0, i64 0, i32 0, i32 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::FlowTable"* %0, i64 0, i32 1
  %6 = load %"class.perfetto::trace_processor::macros_internal::RootParentTable"*, %"class.perfetto::trace_processor::macros_internal::RootParentTable"** %5, align 8
  %7 = icmp eq %"class.perfetto::trace_processor::macros_internal::RootParentTable"* %6, null
  br i1 %7, label %8, label %88

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::FlowTable"* %0, i64 0, i32 0, i32 0, i32 4
  %10 = load %"class.perfetto::trace_processor::StringPool"*, %"class.perfetto::trace_processor::StringPool"** %9, align 8
  %11 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::FlowTable::Row", %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %1, i64 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = tail call i64 @strlen(i8* %12) #17
  %14 = tail call i32 @_ZN8perfetto15trace_processor10StringPool12InternStringENS_4base10StringViewE(%"class.perfetto::trace_processor::StringPool"* %10, i8* %12, i64 %13)
  %15 = getelementptr inbounds %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::FlowTable"* %0, i64 0, i32 0, i32 1, i32 3, i32 0, i32 0, i32 2
  %16 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::FlowTable"* %0, i64 0, i32 0, i32 1, i32 3, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = icmp eq i64 %21, 0
  %23 = shl i64 %21, 7
  %24 = add i64 %23, -1
  %25 = select i1 %22, i64 0, i64 %24
  %26 = getelementptr inbounds %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::FlowTable"* %0, i64 0, i32 0, i32 1, i32 3, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::FlowTable"* %0, i64 0, i32 0, i32 1, i32 3, i32 0, i32 2, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, %27
  %31 = icmp eq i64 %25, %30
  %32 = inttoptr i64 %20 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %33 = inttoptr i64 %17 to %"struct.perfetto::trace_processor::StringPool::Id"**
  br i1 %31, label %34, label %41

34:                                               ; preds = %8
  %35 = getelementptr inbounds %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::FlowTable"* %0, i64 0, i32 0, i32 1, i32 3
  tail call void @_ZNSt3__15dequeIN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %35) #13
  %36 = load i64, i64* %28, align 8
  %37 = load i64, i64* %26, align 8
  %38 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %18, align 8
  %39 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %15, align 8
  %40 = add i64 %37, %36
  br label %41

41:                                               ; preds = %34, %8
  %42 = phi i64 [ %40, %34 ], [ %30, %8 ]
  %43 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %39, %34 ], [ %33, %8 ]
  %44 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %38, %34 ], [ %32, %8 ]
  %45 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %43, %44
  br i1 %45, label %52, label %46

46:                                               ; preds = %41
  %47 = lshr i64 %42, 10
  %48 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %44, i64 %47
  %49 = load %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %48, align 8
  %50 = and i64 %42, 1023
  %51 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id"* %49, i64 %50
  br label %52

52:                                               ; preds = %41, %46
  %53 = phi %"struct.perfetto::trace_processor::StringPool::Id"* [ %51, %46 ], [ null, %41 ]
  %54 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id", %"struct.perfetto::trace_processor::StringPool::Id"* %53, i64 0, i32 0
  store i32 %14, i32* %54, align 4
  %55 = load i64, i64* %28, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %28, align 8
  %57 = getelementptr inbounds %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::FlowTable"* %0, i64 0, i32 0, i32 1, i32 4
  %58 = getelementptr inbounds %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::FlowTable"* %0, i64 0, i32 0, i32 1, i32 5
  %59 = load i32, i32* %58, align 8
  %60 = add i32 %59, 1
  store i32 %60, i32* %58, align 8
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %57, i32 %59) #13
  %61 = getelementptr inbounds %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::FlowTable"* %0, i64 0, i32 0
  tail call void @_ZN8perfetto15trace_processor15macros_internal10MacroTable30UpdateRowMapsAfterParentInsertEv(%"class.perfetto::trace_processor::macros_internal::MacroTable"* %61)
  %62 = getelementptr inbounds %"class.perfetto::trace_processor::tables::FlowTable", %"class.perfetto::trace_processor::tables::FlowTable"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %63 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %62, align 8
  %64 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::FlowTable::Row", %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %1, i64 0, i32 1, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %63, i64 2, i32 2
  %67 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %66 to %"class.perfetto::trace_processor::NullableVector.200"**
  %68 = load %"class.perfetto::trace_processor::NullableVector.200"*, %"class.perfetto::trace_processor::NullableVector.200"** %67, align 8
  %69 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %68, i64 0, i32 3, i32 0, i32 0, i32 2
  %70 = bitcast i32*** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %68, i64 0, i32 3, i32 0, i32 0, i32 1
  %73 = bitcast i32*** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %71, %74
  %76 = icmp eq i64 %75, 0
  %77 = shl i64 %75, 7
  %78 = add i64 %77, -1
  %79 = select i1 %76, i64 0, i64 %78
  %80 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %68, i64 0, i32 3, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %68, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, %81
  %85 = icmp eq i64 %79, %84
  %86 = inttoptr i64 %74 to i32**
  %87 = inttoptr i64 %71 to i32**
  br i1 %85, label %93, label %100

88:                                               ; preds = %2
  %89 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.4, i64 0, i64 0)) #13
  %90 = tail call i32* @__errno_location() #15
  %91 = load i32, i32* %90, align 4
  %92 = tail call i8* @strerror(i32 %91) #13
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %89, i32 51, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i64 0, i64 0), i32 %91, i8* %92) #13
  tail call void @llvm.trap() #13
  unreachable

93:                                               ; preds = %52
  %94 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %68, i64 0, i32 3
  tail call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque.201"* %94) #13
  %95 = load i64, i64* %82, align 8
  %96 = load i64, i64* %80, align 8
  %97 = load i32**, i32*** %72, align 8
  %98 = load i32**, i32*** %69, align 8
  %99 = add i64 %96, %95
  br label %100

100:                                              ; preds = %93, %52
  %101 = phi i64 [ %99, %93 ], [ %84, %52 ]
  %102 = phi i32** [ %98, %93 ], [ %87, %52 ]
  %103 = phi i32** [ %97, %93 ], [ %86, %52 ]
  %104 = icmp eq i32** %102, %103
  br i1 %104, label %111, label %105

105:                                              ; preds = %100
  %106 = lshr i64 %101, 10
  %107 = getelementptr inbounds i32*, i32** %103, i64 %106
  %108 = load i32*, i32** %107, align 8
  %109 = and i64 %101, 1023
  %110 = getelementptr inbounds i32, i32* %108, i64 %109
  br label %111

111:                                              ; preds = %100, %105
  %112 = phi i32* [ %110, %105 ], [ null, %100 ]
  store i32 %65, i32* %112, align 4
  %113 = load i64, i64* %82, align 8
  %114 = add i64 %113, 1
  store i64 %114, i64* %82, align 8
  %115 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %68, i64 0, i32 4
  %116 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %68, i64 0, i32 5
  %117 = load i32, i32* %116, align 8
  %118 = add i32 %117, 1
  store i32 %118, i32* %116, align 8
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %115, i32 %117) #13
  %119 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %62, align 8
  %120 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::FlowTable::Row", %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %1, i64 0, i32 2, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %119, i64 3, i32 2
  %123 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %122 to %"class.perfetto::trace_processor::NullableVector.200"**
  %124 = load %"class.perfetto::trace_processor::NullableVector.200"*, %"class.perfetto::trace_processor::NullableVector.200"** %123, align 8
  %125 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %124, i64 0, i32 3, i32 0, i32 0, i32 2
  %126 = bitcast i32*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %124, i64 0, i32 3, i32 0, i32 0, i32 1
  %129 = bitcast i32*** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = sub i64 %127, %130
  %132 = icmp eq i64 %131, 0
  %133 = shl i64 %131, 7
  %134 = add i64 %133, -1
  %135 = select i1 %132, i64 0, i64 %134
  %136 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %124, i64 0, i32 3, i32 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %124, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, %137
  %141 = icmp eq i64 %135, %140
  %142 = inttoptr i64 %130 to i32**
  %143 = inttoptr i64 %127 to i32**
  br i1 %141, label %144, label %151

144:                                              ; preds = %111
  %145 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %124, i64 0, i32 3
  tail call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque.201"* %145) #13
  %146 = load i64, i64* %138, align 8
  %147 = load i64, i64* %136, align 8
  %148 = load i32**, i32*** %128, align 8
  %149 = load i32**, i32*** %125, align 8
  %150 = add i64 %147, %146
  br label %151

151:                                              ; preds = %144, %111
  %152 = phi i64 [ %150, %144 ], [ %140, %111 ]
  %153 = phi i32** [ %149, %144 ], [ %143, %111 ]
  %154 = phi i32** [ %148, %144 ], [ %142, %111 ]
  %155 = icmp eq i32** %153, %154
  br i1 %155, label %162, label %156

156:                                              ; preds = %151
  %157 = lshr i64 %152, 10
  %158 = getelementptr inbounds i32*, i32** %154, i64 %157
  %159 = load i32*, i32** %158, align 8
  %160 = and i64 %152, 1023
  %161 = getelementptr inbounds i32, i32* %159, i64 %160
  br label %162

162:                                              ; preds = %151, %156
  %163 = phi i32* [ %161, %156 ], [ null, %151 ]
  store i32 %121, i32* %163, align 4
  %164 = load i64, i64* %138, align 8
  %165 = add i64 %164, 1
  store i64 %165, i64* %138, align 8
  %166 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %124, i64 0, i32 4
  %167 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %124, i64 0, i32 5
  %168 = load i32, i32* %167, align 8
  %169 = add i32 %168, 1
  store i32 %169, i32* %167, align 8
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %166, i32 %168) #13
  %170 = load %"class.perfetto::trace_processor::Column"*, %"class.perfetto::trace_processor::Column"** %62, align 8
  %171 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::FlowTable::Row", %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %1, i64 0, i32 3
  %172 = load i32, i32* %171, align 4
  %173 = getelementptr inbounds %"class.perfetto::trace_processor::Column", %"class.perfetto::trace_processor::Column"* %170, i64 4, i32 2
  %174 = bitcast %"class.perfetto::trace_processor::NullableVectorBase"** %173 to %"class.perfetto::trace_processor::NullableVector.200"**
  %175 = load %"class.perfetto::trace_processor::NullableVector.200"*, %"class.perfetto::trace_processor::NullableVector.200"** %174, align 8
  %176 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %175, i64 0, i32 3, i32 0, i32 0, i32 2
  %177 = bitcast i32*** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %175, i64 0, i32 3, i32 0, i32 0, i32 1
  %180 = bitcast i32*** %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = sub i64 %178, %181
  %183 = icmp eq i64 %182, 0
  %184 = shl i64 %182, 7
  %185 = add i64 %184, -1
  %186 = select i1 %183, i64 0, i64 %185
  %187 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %175, i64 0, i32 3, i32 0, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %175, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %190 = load i64, i64* %189, align 8
  %191 = add i64 %190, %188
  %192 = icmp eq i64 %186, %191
  %193 = inttoptr i64 %181 to i32**
  %194 = inttoptr i64 %178 to i32**
  br i1 %192, label %195, label %202

195:                                              ; preds = %162
  %196 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %175, i64 0, i32 3
  tail call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque.201"* %196) #13
  %197 = load i64, i64* %189, align 8
  %198 = load i64, i64* %187, align 8
  %199 = load i32**, i32*** %179, align 8
  %200 = load i32**, i32*** %176, align 8
  %201 = add i64 %198, %197
  br label %202

202:                                              ; preds = %195, %162
  %203 = phi i64 [ %201, %195 ], [ %191, %162 ]
  %204 = phi i32** [ %200, %195 ], [ %194, %162 ]
  %205 = phi i32** [ %199, %195 ], [ %193, %162 ]
  %206 = icmp eq i32** %204, %205
  br i1 %206, label %213, label %207

207:                                              ; preds = %202
  %208 = lshr i64 %203, 10
  %209 = getelementptr inbounds i32*, i32** %205, i64 %208
  %210 = load i32*, i32** %209, align 8
  %211 = and i64 %203, 1023
  %212 = getelementptr inbounds i32, i32* %210, i64 %211
  br label %213

213:                                              ; preds = %202, %207
  %214 = phi i32* [ %212, %207 ], [ null, %202 ]
  store i32 %172, i32* %214, align 4
  %215 = load i64, i64* %189, align 8
  %216 = add i64 %215, 1
  store i64 %216, i64* %189, align 8
  %217 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %175, i64 0, i32 4
  %218 = getelementptr inbounds %"class.perfetto::trace_processor::NullableVector.200", %"class.perfetto::trace_processor::NullableVector.200"* %175, i64 0, i32 5
  %219 = load i32, i32* %218, align 8
  %220 = add i32 %219, 1
  store i32 %220, i32* %218, align 8
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %217, i32 %219) #13
  %221 = zext i32 %4 to i64
  %222 = shl nuw i64 %221, 32
  %223 = or i64 %222, %221
  ret i64 %223
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8perfetto15trace_processor11ArgsTrackerC1EPNS0_21TraceProcessorContextE(%"class.perfetto::trace_processor::ArgsTracker"*, %"class.perfetto::trace_processor::TraceProcessorContext"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD1Ev(%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8perfetto15trace_processor11ArgsTrackerD1Ev(%"class.perfetto::trace_processor::ArgsTracker"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor11FlowTracker10InsertFlowENS0_6tables10SliceTable9DefinedIdES4_(%"class.perfetto::trace_processor::FlowTracker"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.perfetto::trace_processor::tables::FlowTable::Row", align 8
  %5 = bitcast %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::FlowTable::Row", %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::FlowTable::Row", %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %4, i64 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::FlowTable::Row", %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %4, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::FlowTable::Row", %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %4, i64 0, i32 3
  %10 = bitcast %"struct.perfetto::trace_processor::tables::FlowTable::Row"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %6, align 8
  store i32 %1, i32* %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 0, i32* %9, align 8
  %11 = getelementptr inbounds %"class.perfetto::trace_processor::FlowTracker", %"class.perfetto::trace_processor::FlowTracker"* %0, i64 0, i32 6
  %12 = load %"class.perfetto::trace_processor::TraceProcessorContext"*, %"class.perfetto::trace_processor::TraceProcessorContext"** %11, align 8
  %13 = getelementptr inbounds %"class.perfetto::trace_processor::TraceProcessorContext", %"class.perfetto::trace_processor::TraceProcessorContext"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.perfetto::trace_processor::TraceStorage"*, %"class.perfetto::trace_processor::TraceStorage"** %13, align 8
  %15 = getelementptr inbounds %"class.perfetto::trace_processor::TraceStorage", %"class.perfetto::trace_processor::TraceStorage"* %14, i64 0, i32 22
  %16 = call i64 @_ZN8perfetto15trace_processor6tables9FlowTable6InsertERKNS2_3RowE(%"class.perfetto::trace_processor::tables::FlowTable"* %15, %"struct.perfetto::trace_processor::tables::FlowTable::Row"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8perfetto15trace_processor10StringPool12InternStringENS_4base10StringViewE(%"class.perfetto::trace_processor::StringPool"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %119, label %5

5:                                                ; preds = %3
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %60, label %7

7:                                                ; preds = %5
  %8 = add i64 %2, -1
  %9 = and i64 %2, 3
  %10 = icmp ult i64 %8, 3
  br i1 %10, label %43, label %11

11:                                               ; preds = %7
  %12 = sub i64 %2, %9
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i64 [ -3750763034362895579, %11 ], [ %39, %13 ]
  %15 = phi i64 [ 0, %11 ], [ %40, %13 ]
  %16 = phi i64 [ %12, %11 ], [ %41, %13 ]
  %17 = getelementptr inbounds i8, i8* %1, i64 %15
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i64
  %20 = xor i64 %14, %19
  %21 = mul i64 %20, 1099511628211
  %22 = or i64 %15, 1
  %23 = getelementptr inbounds i8, i8* %1, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = xor i64 %21, %25
  %27 = mul i64 %26, 1099511628211
  %28 = or i64 %15, 2
  %29 = getelementptr inbounds i8, i8* %1, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = xor i64 %27, %31
  %33 = mul i64 %32, 1099511628211
  %34 = or i64 %15, 3
  %35 = getelementptr inbounds i8, i8* %1, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = xor i64 %33, %37
  %39 = mul i64 %38, 1099511628211
  %40 = add nuw i64 %15, 4
  %41 = add i64 %16, -4
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %13

43:                                               ; preds = %13, %7
  %44 = phi i64 [ undef, %7 ], [ %39, %13 ]
  %45 = phi i64 [ -3750763034362895579, %7 ], [ %39, %13 ]
  %46 = phi i64 [ 0, %7 ], [ %40, %13 ]
  %47 = icmp eq i64 %9, 0
  br i1 %47, label %60, label %48

48:                                               ; preds = %43, %48
  %49 = phi i64 [ %56, %48 ], [ %45, %43 ]
  %50 = phi i64 [ %57, %48 ], [ %46, %43 ]
  %51 = phi i64 [ %58, %48 ], [ %9, %43 ]
  %52 = getelementptr inbounds i8, i8* %1, i64 %50
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = xor i64 %49, %54
  %56 = mul i64 %55, 1099511628211
  %57 = add nuw i64 %50, 1
  %58 = add i64 %51, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %48, !llvm.loop !14

60:                                               ; preds = %43, %48, %5
  %61 = phi i64 [ -3750763034362895579, %5 ], [ %44, %43 ], [ %56, %48 ]
  %62 = getelementptr inbounds %"class.perfetto::trace_processor::StringPool", %"class.perfetto::trace_processor::StringPool"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %117, label %65

65:                                               ; preds = %60
  %66 = tail call i64 @llvm.ctpop.i64(i64 %63) #13, !range !3
  %67 = icmp ugt i64 %66, 1
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = add i64 %63, -1
  %70 = and i64 %69, %61
  br label %75

71:                                               ; preds = %65
  %72 = icmp ult i64 %61, %63
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = urem i64 %61, %63
  br label %75

75:                                               ; preds = %73, %71, %68
  %76 = phi i64 [ %70, %68 ], [ %74, %73 ], [ %61, %71 ]
  %77 = getelementptr inbounds %"class.perfetto::trace_processor::StringPool", %"class.perfetto::trace_processor::StringPool"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base.121"**, %"struct.std::__1::__hash_node_base.121"*** %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.121"*, %"struct.std::__1::__hash_node_base.121"** %78, i64 %76
  %80 = load %"struct.std::__1::__hash_node_base.121"*, %"struct.std::__1::__hash_node_base.121"** %79, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node_base.121"* %80, null
  br i1 %81, label %117, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.121", %"struct.std::__1::__hash_node_base.121"* %80, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base.121"*, %"struct.std::__1::__hash_node_base.121"** %83, align 8
  %85 = icmp eq %"struct.std::__1::__hash_node_base.121"* %84, null
  br i1 %85, label %117, label %86

86:                                               ; preds = %82
  %87 = add i64 %63, -1
  br label %88

88:                                               ; preds = %109, %86
  %89 = phi %"struct.std::__1::__hash_node_base.121"* [ %84, %86 ], [ %111, %109 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.121", %"struct.std::__1::__hash_node_base.121"* %89, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.121"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, %61
  br i1 %93, label %104, label %94

94:                                               ; preds = %88
  br i1 %67, label %97, label %95

95:                                               ; preds = %94
  %96 = and i64 %92, %87
  br label %101

97:                                               ; preds = %94
  %98 = icmp ult i64 %92, %63
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %92, %63
  br label %101

101:                                              ; preds = %99, %97, %95
  %102 = phi i64 [ %96, %95 ], [ %100, %99 ], [ %92, %97 ]
  %103 = icmp eq i64 %102, %76
  br i1 %103, label %109, label %117

104:                                              ; preds = %88
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.121", %"struct.std::__1::__hash_node_base.121"* %89, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.121"* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %107, %61
  br i1 %108, label %113, label %109

109:                                              ; preds = %104, %101
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.121", %"struct.std::__1::__hash_node_base.121"* %89, i64 0, i32 0
  %111 = load %"struct.std::__1::__hash_node_base.121"*, %"struct.std::__1::__hash_node_base.121"** %110, align 8
  %112 = icmp eq %"struct.std::__1::__hash_node_base.121"* %111, null
  br i1 %112, label %117, label %88

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.121", %"struct.std::__1::__hash_node_base.121"* %89, i64 3
  %115 = bitcast %"struct.std::__1::__hash_node_base.121"* %114 to i32*
  %116 = load i32, i32* %115, align 8
  br label %119

117:                                              ; preds = %101, %109, %75, %60, %82
  %118 = tail call i32 @_ZN8perfetto15trace_processor10StringPool12InsertStringENS_4base10StringViewEm(%"class.perfetto::trace_processor::StringPool"* %0, i8* nonnull %1, i64 %2, i64 %61) #13
  br label %119

119:                                              ; preds = %113, %117, %3
  %120 = phi i32 [ 0, %3 ], [ %116, %113 ], [ %118, %117 ]
  ret i32 %120
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor15macros_internal10MacroTable30UpdateRowMapsAfterParentInsertEv(%"class.perfetto::trace_processor::macros_internal::MacroTable"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::MacroTable"* %0, i64 0, i32 3
  %3 = load %"class.perfetto::trace_processor::Table"*, %"class.perfetto::trace_processor::Table"** %2, align 8
  %4 = icmp eq %"class.perfetto::trace_processor::Table"* %3, null
  br i1 %4, label %39, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.perfetto::trace_processor::Table", %"class.perfetto::trace_processor::Table"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.perfetto::trace_processor::Table", %"class.perfetto::trace_processor::Table"* %3, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.perfetto::trace_processor::RowMap"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.148"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %39, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::MacroTable"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %15

15:                                               ; preds = %13, %15
  %16 = phi %"class.perfetto::trace_processor::Table"* [ %3, %13 ], [ %29, %15 ]
  %17 = phi i64 [ 0, %13 ], [ %28, %15 ]
  %18 = phi i32 [ 0, %13 ], [ %27, %15 ]
  %19 = getelementptr inbounds %"class.perfetto::trace_processor::Table", %"class.perfetto::trace_processor::Table"* %16, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.perfetto::trace_processor::RowMap"*, %"class.perfetto::trace_processor::RowMap"** %19, align 8
  %21 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %20, i64 %17
  %22 = load %"class.perfetto::trace_processor::RowMap"*, %"class.perfetto::trace_processor::RowMap"** %14, align 8
  %23 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %22, i64 %17
  %24 = tail call i32 @_ZNK8perfetto15trace_processor6RowMap4sizeEv(%"class.perfetto::trace_processor::RowMap"* %21)
  %25 = add i32 %24, -1
  %26 = tail call i32 @_ZNK8perfetto15trace_processor6RowMap3GetEj(%"class.perfetto::trace_processor::RowMap"* %21, i32 %25)
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %23, i32 %26)
  %27 = add i32 %18, 1
  %28 = zext i32 %27 to i64
  %29 = load %"class.perfetto::trace_processor::Table"*, %"class.perfetto::trace_processor::Table"** %2, align 8
  %30 = getelementptr inbounds %"class.perfetto::trace_processor::Table", %"class.perfetto::trace_processor::Table"* %29, i64 0, i32 1
  %31 = getelementptr inbounds %"class.perfetto::trace_processor::Table", %"class.perfetto::trace_processor::Table"* %29, i64 0, i32 1, i32 0, i32 1
  %32 = bitcast %"class.perfetto::trace_processor::RowMap"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector.148"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = sdiv exact i64 %36, 104
  %38 = icmp ugt i64 %37, %28
  br i1 %38, label %15, label %39

39:                                               ; preds = %15, %5, %1
  %40 = getelementptr inbounds %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::MacroTable"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %41 = load %"class.perfetto::trace_processor::RowMap"*, %"class.perfetto::trace_processor::RowMap"** %40, align 8
  %42 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %41, i64 -1
  %43 = getelementptr inbounds %"class.perfetto::trace_processor::macros_internal::MacroTable", %"class.perfetto::trace_processor::macros_internal::MacroTable"* %0, i64 0, i32 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = add i32 %44, 1
  store i32 %45, i32* %43, align 8
  tail call void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"* %42, i32 %44)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor6RowMap6InsertEj(%"class.perfetto::trace_processor::RowMap"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.perfetto::trace_processor::RowMap", align 8
  %5 = alloca %"class.perfetto::trace_processor::BitVector", align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %315 [
    i32 0, label %8
    i32 1, label %212
    i32 2, label %287
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = add i32 %1, 1
  store i32 %13, i32* %9, align 8
  br label %315

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  tail call void @_ZN8perfetto15trace_processor9BitVector6ResizeEjb(%"class.perfetto::trace_processor::BitVector"* %15, i32 %17, i1 zeroext false)
  %18 = load i32, i32* %9, align 8
  tail call void @_ZN8perfetto15trace_processor9BitVector6ResizeEjb(%"class.perfetto::trace_processor::BitVector"* %15, i32 %18, i1 zeroext true)
  %19 = bitcast %"class.perfetto::trace_processor::RowMap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 0
  %21 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %15, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 1
  %24 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1
  %25 = bitcast %"class.std::__1::vector.150"* %24 to i64*
  %26 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %27 = bitcast i32** %26 to i64*
  %28 = bitcast %"class.std::__1::vector.150"* %24 to <2 x i64>*
  %29 = load <2 x i64>, <2 x i64>* %28, align 8
  %30 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 1, i32 0, i32 1
  %31 = bitcast i32** %30 to i64*
  %32 = bitcast %"class.std::__1::vector.150"* %23 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %32, align 8
  %33 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast i32** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast i32** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"class.std::__1::vector.150"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #13
  %39 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 2
  %40 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2
  %41 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2, i32 0, i32 1
  %42 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %41 to i64*
  %43 = bitcast %"class.std::__1::vector.157"* %40 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 2, i32 0, i32 1
  %46 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %45 to i64*
  %47 = bitcast %"class.std::__1::vector.157"* %39 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %47, align 8
  %48 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast %"class.std::__1::vector.157"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #13
  call void @_ZN8perfetto15trace_processor6RowMapC1ENS0_9BitVectorE(%"class.perfetto::trace_processor::RowMap"* nonnull %4, %"class.perfetto::trace_processor::BitVector"* nonnull %5) #13
  %54 = bitcast %"class.perfetto::trace_processor::RowMap"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* nonnull align 8 %19, i64 12, i1 false) #13
  %55 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 0
  store i32 %56, i32* %57, align 8
  %58 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 1
  %59 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %24, i64 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = icmp eq i32* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %14
  %63 = ptrtoint i32* %60 to i64
  store i64 %63, i64* %27, align 8
  %64 = bitcast i32* %60 to i8*
  call void @_ZdlPv(i8* %64) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #13
  br label %65

65:                                               ; preds = %62, %14
  %66 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 1, i32 0, i32 1
  %67 = bitcast i32** %66 to i64*
  %68 = bitcast %"class.std::__1::vector.150"* %58 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8
  %70 = bitcast %"class.std::__1::vector.150"* %24 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %70, align 8
  %71 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %72 = bitcast i32** %71 to i64*
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %34, align 8
  %74 = bitcast %"class.std::__1::vector.150"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #13
  %75 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 2
  %76 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %40, i64 0, i32 0, i32 0
  %77 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %76, align 8
  %78 = icmp eq %"class.perfetto::trace_processor::BitVector::Block"* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %65
  %80 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %77 to i64
  store i64 %80, i64* %42, align 8
  %81 = bitcast %"class.perfetto::trace_processor::BitVector::Block"* %77 to i8*
  call void @_ZdlPv(i8* %81) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #13
  br label %82

82:                                               ; preds = %79, %65
  %83 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 2, i32 0, i32 1
  %84 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %83 to i64*
  %85 = bitcast %"class.std::__1::vector.157"* %75 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 8
  %87 = bitcast %"class.std::__1::vector.157"* %40 to <2 x i64>*
  store <2 x i64> %86, <2 x i64>* %87, align 8
  %88 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 2, i32 0, i32 2, i32 0, i32 0
  %89 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %49, align 8
  %91 = bitcast %"class.std::__1::vector.157"* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #13
  %92 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5
  %93 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 5
  %94 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %92, i64 0, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = icmp eq i32* %95, null
  br i1 %96, label %103, label %97

97:                                               ; preds = %82
  %98 = ptrtoint i32* %95 to i64
  %99 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5, i32 0, i32 1
  %100 = bitcast i32** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast i32* %95 to i8*
  call void @_ZdlPv(i8* %101) #14
  %102 = bitcast %"class.std::__1::vector.150"* %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #13
  br label %103

103:                                              ; preds = %82, %97
  %104 = bitcast %"class.std::__1::vector.150"* %93 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8
  %106 = bitcast %"class.std::__1::vector.150"* %92 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %106, align 8
  %107 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast i32** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = bitcast %"class.std::__1::vector.150"* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 24, i1 false) #13
  %113 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 6
  %114 = load i32, i32* %113, align 8
  %115 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 6
  store i32 %114, i32* %115, align 8
  %116 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 2, i32 0, i32 0
  %117 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %116, align 8
  %118 = icmp eq %"class.perfetto::trace_processor::BitVector::Block"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %103
  %120 = bitcast %"class.perfetto::trace_processor::BitVector::Block"* %117 to i8*
  %121 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %117 to i64
  store i64 %121, i64* %84, align 8
  call void @_ZdlPv(i8* %120) #14
  br label %122

122:                                              ; preds = %119, %103
  %123 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %4, i64 0, i32 4, i32 1, i32 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = icmp eq i32* %124, null
  br i1 %125, label %129, label %126

126:                                              ; preds = %122
  %127 = ptrtoint i32* %124 to i64
  store i64 %127, i64* %67, align 8
  %128 = bitcast i32* %124 to i8*
  call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %122, %126
  %130 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 2, i32 0, i32 0
  %131 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %130, align 8
  %132 = icmp eq %"class.perfetto::trace_processor::BitVector::Block"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %129
  %134 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %131 to i64
  store i64 %134, i64* %46, align 8
  %135 = bitcast %"class.perfetto::trace_processor::BitVector::Block"* %131 to i8*
  call void @_ZdlPv(i8* %135) #14
  br label %136

136:                                              ; preds = %133, %129
  %137 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %5, i64 0, i32 1, i32 0, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = icmp eq i32* %138, null
  br i1 %139, label %143, label %140

140:                                              ; preds = %136
  %141 = ptrtoint i32* %138 to i64
  store i64 %141, i64* %31, align 8
  %142 = bitcast i32* %138 to i8*
  call void @_ZdlPv(i8* %142) #14
  br label %143

143:                                              ; preds = %136, %140
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %19) #13
  %144 = load i32, i32* %3, align 4
  %145 = load i32, i32* %21, align 8
  %146 = icmp ugt i32 %145, %144
  br i1 %146, label %149, label %147

147:                                              ; preds = %143
  %148 = add i32 %144, 1
  call void @_ZN8perfetto15trace_processor9BitVector6ResizeEjb(%"class.perfetto::trace_processor::BitVector"* %15, i32 %148, i1 zeroext false) #13
  br label %149

149:                                              ; preds = %147, %143
  %150 = lshr i32 %144, 9
  %151 = lshr i32 %144, 6
  %152 = and i32 %151, 7
  %153 = zext i32 %152 to i64
  %154 = and i32 %144, 63
  %155 = zext i32 %154 to i64
  %156 = zext i32 %150 to i64
  %157 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %158 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %157, align 8
  %159 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %158, i64 %156, i32 0, i32 0, i64 %153, i32 0
  %160 = load i64, i64* %159, align 8
  %161 = shl i64 1, %155
  %162 = and i64 %160, %161
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %315, !prof !4

164:                                              ; preds = %149
  %165 = or i64 %160, %161
  store i64 %165, i64* %159, align 8
  %166 = load i64, i64* %27, align 8
  %167 = load i64, i64* %25, align 8
  %168 = sub i64 %166, %167
  %169 = lshr exact i64 %168, 2
  %170 = trunc i64 %169 to i32
  %171 = add nuw nsw i32 %150, 1
  %172 = icmp ult i32 %171, %170
  br i1 %172, label %173, label %315

173:                                              ; preds = %164
  %174 = inttoptr i64 %167 to i32*
  %175 = zext i32 %171 to i64
  %176 = getelementptr inbounds i32, i32* %174, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = add i32 %177, 1
  store i32 %178, i32* %176, align 4
  %179 = add nuw nsw i32 %150, 2
  %180 = icmp eq i32 %179, %170
  br i1 %180, label %315, label %181

181:                                              ; preds = %173
  %182 = sub i32 %170, %150
  %183 = add i32 %170, -3
  %184 = and i32 %182, 1
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %193, label %186

186:                                              ; preds = %181
  %187 = add nuw nsw i64 %175, 1
  %188 = load i32*, i32** %59, align 8
  %189 = getelementptr inbounds i32, i32* %188, i64 %187
  %190 = load i32, i32* %189, align 4
  %191 = add i32 %190, 1
  store i32 %191, i32* %189, align 4
  %192 = add nuw nsw i32 %150, 3
  br label %193

193:                                              ; preds = %181, %186
  %194 = phi i32 [ %179, %181 ], [ %192, %186 ]
  %195 = phi i64 [ %175, %181 ], [ %187, %186 ]
  %196 = icmp eq i32 %183, %150
  br i1 %196, label %315, label %197

197:                                              ; preds = %193, %197
  %198 = phi i32 [ %210, %197 ], [ %194, %193 ]
  %199 = phi i64 [ %205, %197 ], [ %195, %193 ]
  %200 = add i64 %199, 1
  %201 = load i32*, i32** %59, align 8
  %202 = getelementptr inbounds i32, i32* %201, i64 %200
  %203 = load i32, i32* %202, align 4
  %204 = add i32 %203, 1
  store i32 %204, i32* %202, align 4
  %205 = add i64 %199, 2
  %206 = load i32*, i32** %59, align 8
  %207 = getelementptr inbounds i32, i32* %206, i64 %205
  %208 = load i32, i32* %207, align 4
  %209 = add i32 %208, 1
  store i32 %209, i32* %207, align 4
  %210 = add i32 %198, 2
  %211 = icmp eq i32 %210, %170
  br i1 %211, label %315, label %197

212:                                              ; preds = %2
  %213 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4
  %214 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %213, i64 0, i32 0
  %215 = load i32, i32* %214, align 8
  %216 = icmp ugt i32 %215, %1
  br i1 %216, label %219, label %217

217:                                              ; preds = %212
  %218 = add i32 %1, 1
  tail call void @_ZN8perfetto15trace_processor9BitVector6ResizeEjb(%"class.perfetto::trace_processor::BitVector"* %213, i32 %218, i1 zeroext false) #13
  br label %219

219:                                              ; preds = %217, %212
  %220 = lshr i32 %1, 9
  %221 = lshr i32 %1, 6
  %222 = and i32 %221, 7
  %223 = zext i32 %222 to i64
  %224 = and i32 %1, 63
  %225 = zext i32 %224 to i64
  %226 = zext i32 %220 to i64
  %227 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %228 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %227, align 8
  %229 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %228, i64 %226, i32 0, i32 0, i64 %223, i32 0
  %230 = load i64, i64* %229, align 8
  %231 = shl i64 1, %225
  %232 = and i64 %230, %231
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %315, !prof !4

234:                                              ; preds = %219
  %235 = or i64 %230, %231
  store i64 %235, i64* %229, align 8
  %236 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1
  %237 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %238 = bitcast i32** %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast %"class.std::__1::vector.150"* %236 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = sub i64 %239, %241
  %243 = lshr exact i64 %242, 2
  %244 = trunc i64 %243 to i32
  %245 = add nuw nsw i32 %220, 1
  %246 = icmp ult i32 %245, %244
  br i1 %246, label %247, label %315

247:                                              ; preds = %234
  %248 = inttoptr i64 %241 to i32*
  %249 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %236, i64 0, i32 0, i32 0
  %250 = zext i32 %245 to i64
  %251 = getelementptr inbounds i32, i32* %248, i64 %250
  %252 = load i32, i32* %251, align 4
  %253 = add i32 %252, 1
  store i32 %253, i32* %251, align 4
  %254 = add nuw nsw i32 %220, 2
  %255 = icmp eq i32 %254, %244
  br i1 %255, label %315, label %256

256:                                              ; preds = %247
  %257 = sub i32 %244, %220
  %258 = add i32 %244, -3
  %259 = and i32 %257, 1
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %268, label %261

261:                                              ; preds = %256
  %262 = add nuw nsw i64 %250, 1
  %263 = load i32*, i32** %249, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 %262
  %265 = load i32, i32* %264, align 4
  %266 = add i32 %265, 1
  store i32 %266, i32* %264, align 4
  %267 = add nuw nsw i32 %220, 3
  br label %268

268:                                              ; preds = %256, %261
  %269 = phi i32 [ %254, %256 ], [ %267, %261 ]
  %270 = phi i64 [ %250, %256 ], [ %262, %261 ]
  %271 = icmp eq i32 %258, %220
  br i1 %271, label %315, label %272

272:                                              ; preds = %268, %272
  %273 = phi i32 [ %285, %272 ], [ %269, %268 ]
  %274 = phi i64 [ %280, %272 ], [ %270, %268 ]
  %275 = add i64 %274, 1
  %276 = load i32*, i32** %249, align 8
  %277 = getelementptr inbounds i32, i32* %276, i64 %275
  %278 = load i32, i32* %277, align 4
  %279 = add i32 %278, 1
  store i32 %279, i32* %277, align 4
  %280 = add i64 %274, 2
  %281 = load i32*, i32** %249, align 8
  %282 = getelementptr inbounds i32, i32* %281, i64 %280
  %283 = load i32, i32* %282, align 4
  %284 = add i32 %283, 1
  store i32 %284, i32* %282, align 4
  %285 = add i32 %273, 2
  %286 = icmp eq i32 %285, %244
  br i1 %286, label %315, label %272

287:                                              ; preds = %2
  %288 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5
  %289 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %288, i64 0, i32 0, i32 0
  %290 = load i32*, i32** %289, align 8
  %291 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5, i32 0, i32 1
  %292 = bitcast i32** %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = ptrtoint i32* %290 to i64
  %295 = sub i64 %293, %294
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %312, label %297

297:                                              ; preds = %287
  %298 = ashr exact i64 %295, 2
  br label %299

299:                                              ; preds = %299, %297
  %300 = phi i32* [ %290, %297 ], [ %310, %299 ]
  %301 = phi i64 [ %298, %297 ], [ %309, %299 ]
  %302 = lshr i64 %301, 1
  %303 = getelementptr inbounds i32, i32* %300, i64 %302
  %304 = load i32, i32* %303, align 4
  %305 = icmp ugt i32 %304, %1
  %306 = getelementptr inbounds i32, i32* %303, i64 1
  %307 = xor i64 %302, -1
  %308 = add i64 %301, %307
  %309 = select i1 %305, i64 %302, i64 %308
  %310 = select i1 %305, i32* %300, i32* %306
  %311 = icmp eq i64 %309, 0
  br i1 %311, label %312, label %299

312:                                              ; preds = %299, %287
  %313 = phi i32* [ %290, %287 ], [ %310, %299 ]
  %314 = call i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertENS_11__wrap_iterIPKjEERS5_(%"class.std::__1::vector.150"* %288, i32* %313, i32* nonnull dereferenceable(4) %3)
  br label %315

315:                                              ; preds = %268, %272, %193, %197, %247, %234, %219, %173, %164, %149, %12, %2, %312
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.perfetto::trace_processor::StringPool::Id"*, align 8
  %3 = alloca %"struct.perfetto::trace_processor::StringPool::Id"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.476", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 1023
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -1024
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  %12 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %11, i64 1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %14, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %17, align 8
  %19 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %16, %18
  %20 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %18 to i64
  %21 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %23, align 8
  %25 = icmp ugt %"struct.perfetto::trace_processor::StringPool::Id"** %14, %24
  %26 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %14, i64 %32
  %34 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %33 to i8*
  %40 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #13
  %41 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %33, i64 %36
  store %"struct.perfetto::trace_processor::StringPool::Id"** %44, %"struct.perfetto::trace_processor::StringPool::Id"*** %15, align 8
  %45 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %43, i64 %32
  store %"struct.perfetto::trace_processor::StringPool::Id"** %45, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  %46 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #14
  %60 = bitcast i8* %59 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %60, i64 %57
  %63 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %62 to i64
  %64 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %60, i64 %53
  %65 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %64 to i64
  %66 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %14 to i64
  %67 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %79, i64 1
  %87 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %86 to i64
  %88 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !16

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 1
  %106 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 1
  %107 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 2
  %111 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 2
  %112 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 3
  %116 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 3
  %117 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 4
  %121 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 4
  %122 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 5
  %126 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 5
  %127 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 6
  %131 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 6
  %132 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 7
  %136 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 7
  %137 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %99, i64 8
  %141 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %140 to i64
  %142 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %101, i64 8
  %143 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %70 to i64
  %146 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  %156 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %15, align 8
  %161 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %160, i64 1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %161, %"struct.perfetto::trace_processor::StringPool::Id"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %181 = inttoptr i64 %169 to %"struct.perfetto::trace_processor::StringPool::Id"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #13
  %186 = tail call i8* @_Znwm(i64 4096) #14
  %187 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"* %163, %"struct.perfetto::trace_processor::StringPool::Id"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #13
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #13
  %190 = tail call i8* @_Znwm(i64 4096) #14
  %191 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer"* %163, %"struct.perfetto::trace_processor::StringPool::Id"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #13
  %192 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %167, align 8
  %193 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %192, i64 1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %195, %"struct.perfetto::trace_processor::StringPool::Id"*** %167, align 8
  %196 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %164, align 8
  %197 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %172, align 8
  %198 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %196, %197
  %199 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %197 to i64
  %200 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %202, align 8
  %204 = icmp ugt %"struct.perfetto::trace_processor::StringPool::Id"** %195, %203
  %205 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %195, i64 %211
  %213 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %212 to i8*
  %219 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #13
  %220 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %212, i64 %215
  store %"struct.perfetto::trace_processor::StringPool::Id"** %223, %"struct.perfetto::trace_processor::StringPool::Id"*** %164, align 8
  %224 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %222, i64 %211
  store %"struct.perfetto::trace_processor::StringPool::Id"** %224, %"struct.perfetto::trace_processor::StringPool::Id"*** %167, align 8
  %225 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #16
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #14
  %237 = bitcast i8* %236 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %237, i64 %234
  %240 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %239 to i64
  %241 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %237, i64 %230
  %242 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %241 to i64
  %243 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %195 to i64
  %244 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %256, i64 1
  %264 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %263 to i64
  %265 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !17

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 1
  %283 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 1
  %284 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 2
  %288 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 2
  %289 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 3
  %293 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 3
  %294 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 4
  %298 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 4
  %299 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 5
  %303 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 5
  %304 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 6
  %308 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 6
  %309 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 7
  %313 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 7
  %314 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %276, i64 8
  %318 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %317 to i64
  %319 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %278, i64 8
  %320 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %247 to i64
  %323 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %325 to i8*
  call void @_ZdlPv(i8* %330) #14
  %331 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %164, align 8
  %336 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %335, i64 1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %336, %"struct.perfetto::trace_processor::StringPool::Id"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.476"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #13
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.476", %"struct.std::__1::__split_buffer.476"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.476", %"struct.std::__1::__split_buffer.476"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.476", %"struct.std::__1::__split_buffer.476"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.476", %"struct.std::__1::__split_buffer.476"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.476"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.perfetto::trace_processor::StringPool::Id"** null, %"struct.perfetto::trace_processor::StringPool::Id"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.180"** %342 to %"class.std::__1::__compressed_pair.177"**
  store %"class.std::__1::__compressed_pair.177"* %346, %"class.std::__1::__compressed_pair.177"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #16
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #14
  %354 = bitcast i8* %353 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %355 = bitcast %"struct.std::__1::__split_buffer.476"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %354, i64 %171
  store %"struct.perfetto::trace_processor::StringPool::Id"** %356, %"struct.perfetto::trace_processor::StringPool::Id"*** %340, align 8
  store %"struct.perfetto::trace_processor::StringPool::Id"** %356, %"struct.perfetto::trace_processor::StringPool::Id"*** %339, align 8
  %357 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %354, i64 %345
  store %"struct.perfetto::trace_processor::StringPool::Id"** %357, %"struct.perfetto::trace_processor::StringPool::Id"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #14
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.perfetto::trace_processor::StringPool::Id"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %356, i64 %370
  store %"struct.perfetto::trace_processor::StringPool::Id"** %371, %"struct.perfetto::trace_processor::StringPool::Id"*** %340, align 8
  store %"struct.perfetto::trace_processor::StringPool::Id"** %371, %"struct.perfetto::trace_processor::StringPool::Id"*** %339, align 8
  %372 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #16
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.476"* %4 to i64*
  %382 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #14
  %386 = bitcast i8* %385 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %386, i64 %383
  %389 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %388 to i64
  %390 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %386, i64 %377
  %391 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #14
  %394 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %164, align 8
  %395 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %167, align 8
  %396 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %395 to i64
  %397 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %406, i64 1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %408, %"struct.perfetto::trace_processor::StringPool::Id"*** %340, align 8
  %409 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.476"* %4 to i64*
  %413 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %339 to i64*
  %414 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %340 to i64*
  %415 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.476"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %441 = inttoptr i64 %434 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %442 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %441, i64 -1
  %445 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %441, i64 %448
  store %"struct.perfetto::trace_processor::StringPool::Id"** %449, %"struct.perfetto::trace_processor::StringPool::Id"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #14
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #13
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.476"* nonnull %4, %"struct.perfetto::trace_processor::StringPool::Id"** dereferenceable(8) %457)
  %458 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %167, align 8
  %459 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"*, %"struct.perfetto::trace_processor::StringPool::Id"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %5, align 8
  %7 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %4, %6
  %8 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %6 to i64
  %9 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %13, align 8
  %15 = icmp ugt %"struct.perfetto::trace_processor::StringPool::Id"** %12, %14
  %16 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %12, i64 %22
  %24 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %23 to i8*
  %30 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %23, i64 %26
  store %"struct.perfetto::trace_processor::StringPool::Id"** %34, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %35 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %33, i64 %22
  store %"struct.perfetto::trace_processor::StringPool::Id"** %35, %"struct.perfetto::trace_processor::StringPool::Id"*** %11, align 8
  %36 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %50, i64 %47
  %53 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %52 to i64
  %54 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %50, i64 %43
  %55 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %54 to i64
  %56 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %12 to i64
  %57 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %69, i64 1
  %77 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %76 to i64
  %78 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !18

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 1
  %96 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 1
  %97 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 2
  %101 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 2
  %102 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 3
  %106 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 3
  %107 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 4
  %111 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 4
  %112 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 5
  %116 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 5
  %117 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 6
  %121 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 6
  %122 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 7
  %126 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 7
  %127 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %89, i64 8
  %131 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %130 to i64
  %132 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %91, i64 8
  %133 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %60 to i64
  %136 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %153 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %152, i64 1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %153, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer"*, %"struct.perfetto::trace_processor::StringPool::Id"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %5, align 8
  %7 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %4, %6
  %8 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %12, align 8
  %14 = icmp ult %"struct.perfetto::trace_processor::StringPool::Id"** %11, %13
  %15 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %12 to i64*
  %16 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %11, i64 %22
  %24 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %23, i64 %29
  %31 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %30 to i8*
  %32 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.perfetto::trace_processor::StringPool::Id"** %36, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %37 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %35, i64 %22
  store %"struct.perfetto::trace_processor::StringPool::Id"** %37, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %51, i64 %48
  %54 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %53 to i64
  %55 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %51, i64 %43
  %56 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %55 to i64
  %57 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i64
  %58 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %70, i64 1
  %78 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %77 to i64
  %79 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !19

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 1
  %97 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 1
  %98 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 2
  %102 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 2
  %103 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 3
  %107 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 3
  %108 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 4
  %112 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 4
  %113 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 5
  %117 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 5
  %118 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 6
  %122 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 6
  %123 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 7
  %127 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 7
  %128 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 8
  %132 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %131 to i64
  %133 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 8
  %134 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %61 to i64
  %137 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %148, i64 -1
  %150 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %154 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %153, i64 -1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %154, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN8perfetto15trace_processor10StringPool2IdERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.476"*, %"struct.perfetto::trace_processor::StringPool::Id"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.476", %"struct.std::__1::__split_buffer.476"* %0, i64 0, i32 1
  %4 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.476", %"struct.std::__1::__split_buffer.476"* %0, i64 0, i32 0
  %6 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %5, align 8
  %7 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %4, %6
  %8 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.476", %"struct.std::__1::__split_buffer.476"* %0, i64 0, i32 2
  %11 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.476", %"struct.std::__1::__split_buffer.476"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %12, align 8
  %14 = icmp ult %"struct.perfetto::trace_processor::StringPool::Id"** %11, %13
  %15 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %12 to i64*
  %16 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %11, i64 %22
  %24 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %23, i64 %29
  %31 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %30 to i8*
  %32 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.perfetto::trace_processor::StringPool::Id"** %36, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %37 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %35, i64 %22
  store %"struct.perfetto::trace_processor::StringPool::Id"** %37, %"struct.perfetto::trace_processor::StringPool::Id"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.476"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to %"struct.perfetto::trace_processor::StringPool::Id"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %51, i64 %48
  %54 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %53 to i64
  %55 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %51, i64 %43
  %56 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %55 to i64
  %57 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %4 to i64
  %58 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %70, i64 1
  %78 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %77 to i64
  %79 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !20

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 1
  %97 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 1
  %98 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 2
  %102 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 2
  %103 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 3
  %107 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 3
  %108 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 4
  %112 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 4
  %113 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 5
  %117 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 5
  %118 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 6
  %122 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 6
  %123 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 7
  %127 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 7
  %128 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %90, i64 8
  %132 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %131 to i64
  %133 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %92, i64 8
  %134 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.perfetto::trace_processor::StringPool::Id"** %61 to i64
  %137 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.perfetto::trace_processor::StringPool::Id"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.perfetto::trace_processor::StringPool::Id"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %148, i64 -1
  %150 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.perfetto::trace_processor::StringPool::Id"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.perfetto::trace_processor::StringPool::Id"**, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  %154 = getelementptr inbounds %"struct.perfetto::trace_processor::StringPool::Id"*, %"struct.perfetto::trace_processor::StringPool::Id"** %153, i64 -1
  store %"struct.perfetto::trace_processor::StringPool::Id"** %154, %"struct.perfetto::trace_processor::StringPool::Id"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor9BitVector6ResizeEjb(%"class.perfetto::trace_processor::BitVector"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.perfetto::trace_processor::BitVector::Address"*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.perfetto::trace_processor::BitVector::Address"*
  %8 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %1
  br i1 %10, label %278, label %11

11:                                               ; preds = %3
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %13, label %24

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 2
  %15 = bitcast %"class.std::__1::vector.157"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 1
  %20 = bitcast %"class.std::__1::vector.150"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = bitcast i32** %22 to i64*
  store i64 %21, i64* %23, align 8
  store i32 0, i32* %8, align 8
  br label %278

24:                                               ; preds = %11
  %25 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  %26 = bitcast i64* %4 to i32*
  %27 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %5, i64 0, i32 1, i32 0
  %28 = add i32 %1, -1
  %29 = lshr i32 %28, 9
  %30 = lshr i32 %28, 6
  %31 = and i32 %30, 7
  %32 = zext i32 %31 to i64
  %33 = and i32 %28, 63
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 48
  %36 = shl nuw nsw i64 %32, 32
  %37 = zext i32 %29 to i64
  %38 = or i64 %35, %37
  %39 = or i64 %38, %36
  store i64 %39, i64* %4, align 8
  %40 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 1
  %41 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 1, i32 0, i32 1
  %42 = bitcast i32** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.150"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = lshr exact i64 %46, 2
  %48 = trunc i64 %47 to i32
  %49 = add nuw nsw i32 %29, 1
  %50 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 2
  %51 = zext i32 %49 to i64
  %52 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 2, i32 0, i32 1
  %53 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector.157"* %50 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = ashr exact i64 %57, 6
  %59 = icmp ult i64 %58, %51
  %60 = inttoptr i64 %56 to %"class.perfetto::trace_processor::BitVector::Block"*
  br i1 %59, label %61, label %66

61:                                               ; preds = %24
  %62 = sub nsw i64 %51, %58
  tail call void @_ZNSt3__16vectorIN8perfetto15trace_processor9BitVector5BlockENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.157"* %50, i64 %62) #13
  %63 = load i64, i64* %42, align 8
  %64 = load i64, i64* %44, align 8
  %65 = sub i64 %63, %64
  br label %70

66:                                               ; preds = %24
  %67 = icmp ugt i64 %58, %51
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %60, i64 %51
  store %"class.perfetto::trace_processor::BitVector::Block"* %69, %"class.perfetto::trace_processor::BitVector::Block"** %52, align 8
  br label %70

70:                                               ; preds = %61, %66, %68
  %71 = phi i64 [ %65, %61 ], [ %46, %66 ], [ %46, %68 ]
  %72 = phi i64 [ %64, %61 ], [ %45, %66 ], [ %45, %68 ]
  %73 = ashr exact i64 %71, 2
  %74 = icmp ult i64 %73, %51
  %75 = inttoptr i64 %72 to i32*
  br i1 %74, label %76, label %78

76:                                               ; preds = %70
  %77 = sub nsw i64 %51, %73
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.150"* %40, i64 %77) #13
  br label %82

78:                                               ; preds = %70
  %79 = icmp ugt i64 %73, %51
  br i1 %79, label %80, label %82

80:                                               ; preds = %78
  %81 = getelementptr inbounds i32, i32* %75, i64 %51
  store i32* %81, i32** %41, align 8
  br label %82

82:                                               ; preds = %76, %78, %80
  %83 = icmp ult i32 %9, %1
  br i1 %83, label %84, label %251

84:                                               ; preds = %82
  br i1 %2, label %85, label %173

85:                                               ; preds = %84
  %86 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #13
  %87 = lshr i32 %9, 9
  %88 = lshr i32 %9, 6
  %89 = and i32 %88, 7
  %90 = zext i32 %89 to i64
  %91 = and i32 %9, 63
  %92 = zext i32 %91 to i64
  %93 = shl nuw nsw i64 %92, 48
  %94 = shl nuw nsw i64 %90, 32
  %95 = zext i32 %87 to i64
  %96 = or i64 %93, %95
  %97 = or i64 %96, %94
  store i64 %97, i64* %6, align 8
  call void @_ZN8perfetto15trace_processor9BitVector3SetERKNS1_7AddressES4_(%"class.perfetto::trace_processor::BitVector"* %0, %"struct.perfetto::trace_processor::BitVector::Address"* nonnull dereferenceable(8) %7, %"struct.perfetto::trace_processor::BitVector::Address"* nonnull dereferenceable(8) %5)
  %98 = bitcast i64* %6 to i32*
  %99 = load i32, i32* %98, align 8
  %100 = shl i32 %99, 9
  %101 = or i32 %100, 511
  %102 = load i64, i64* %6, align 8
  %103 = trunc i64 %102 to i32
  %104 = lshr i64 %102, 48
  %105 = trunc i64 %104 to i32
  %106 = lshr i64 %102, 26
  %107 = trunc i64 %106 to i32
  %108 = and i32 %107, 4194240
  %109 = mul i32 %103, -512
  %110 = load i32, i32* %8, align 8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %150, label %112

112:                                              ; preds = %85
  %113 = add i32 %110, -1
  %114 = lshr i32 %113, 9
  %115 = lshr i32 %113, 6
  %116 = and i32 %115, 7
  %117 = zext i32 %116 to i64
  %118 = and i32 %113, 63
  %119 = zext i32 %114 to i64
  %120 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 1, i32 0, i32 0
  %121 = load i32*, i32** %120, align 8
  %122 = getelementptr inbounds i32, i32* %121, i64 %119
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 2, i32 0, i32 0
  %125 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %124, align 8
  %126 = icmp eq i32 %116, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %112
  %128 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = call i64 @llvm.ctpop.i64(i64 %129) #13, !range !3
  %131 = trunc i64 %130 to i32
  %132 = icmp eq i32 %116, 1
  br i1 %132, label %133, label %279

133:                                              ; preds = %127, %279, %286, %293, %300, %307, %314, %112
  %134 = phi i32 [ 0, %112 ], [ %131, %127 ], [ %284, %279 ], [ %291, %286 ], [ %298, %293 ], [ %305, %300 ], [ %312, %307 ], [ %319, %314 ]
  %135 = add nuw nsw i32 %118, 1
  %136 = and i32 %135, 63
  %137 = zext i32 %136 to i64
  %138 = shl i64 1, %137
  %139 = lshr i32 %135, 6
  %140 = zext i32 %139 to i64
  %141 = lshr i64 %138, %140
  %142 = add i64 %141, -1
  %143 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 %117, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, %142
  %146 = call i64 @llvm.ctpop.i64(i64 %145) #13, !range !3
  %147 = trunc i64 %146 to i32
  %148 = add i32 %134, %123
  %149 = add i32 %148, %147
  br label %150

150:                                              ; preds = %85, %133
  %151 = phi i32 [ %149, %133 ], [ 0, %85 ]
  %152 = add i32 %99, 1
  %153 = load i32, i32* %26, align 8
  %154 = icmp ugt i32 %152, %153
  br i1 %154, label %162, label %155

155:                                              ; preds = %150
  %156 = add i32 %101, 1
  %157 = sub i32 %156, %105
  %158 = add i32 %157, %109
  %159 = sub i32 %158, %108
  %160 = add i32 %159, %151
  %161 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %40, i64 0, i32 0, i32 0
  br label %163

162:                                              ; preds = %163, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #13
  br label %277

163:                                              ; preds = %155, %163
  %164 = phi i32 [ %152, %155 ], [ %170, %163 ]
  %165 = phi i32 [ %160, %155 ], [ %169, %163 ]
  %166 = zext i32 %164 to i64
  %167 = load i32*, i32** %161, align 8
  %168 = getelementptr inbounds i32, i32* %167, i64 %166
  store i32 %165, i32* %168, align 4
  %169 = add i32 %165, 512
  %170 = add i32 %164, 1
  %171 = load i32, i32* %26, align 8
  %172 = icmp ugt i32 %170, %171
  br i1 %172, label %162, label %163

173:                                              ; preds = %84
  %174 = icmp ult i32 %29, %48
  br i1 %174, label %277, label %175

175:                                              ; preds = %173
  %176 = load i32, i32* %8, align 8
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %216, label %178

178:                                              ; preds = %175
  %179 = add i32 %176, -1
  %180 = lshr i32 %179, 9
  %181 = lshr i32 %179, 6
  %182 = and i32 %181, 7
  %183 = zext i32 %182 to i64
  %184 = and i32 %179, 63
  %185 = zext i32 %180 to i64
  %186 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 1, i32 0, i32 0
  %187 = load i32*, i32** %186, align 8
  %188 = getelementptr inbounds i32, i32* %187, i64 %185
  %189 = load i32, i32* %188, align 4
  %190 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 2, i32 0, i32 0
  %191 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %190, align 8
  %192 = icmp eq i32 %182, 0
  br i1 %192, label %199, label %193

193:                                              ; preds = %178
  %194 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 0, i32 0
  %195 = load i64, i64* %194, align 8
  %196 = tail call i64 @llvm.ctpop.i64(i64 %195) #13, !range !3
  %197 = trunc i64 %196 to i32
  %198 = icmp eq i32 %182, 1
  br i1 %198, label %199, label %320

199:                                              ; preds = %193, %320, %327, %334, %341, %348, %355, %178
  %200 = phi i32 [ 0, %178 ], [ %197, %193 ], [ %325, %320 ], [ %332, %327 ], [ %339, %334 ], [ %346, %341 ], [ %353, %348 ], [ %360, %355 ]
  %201 = add nuw nsw i32 %184, 1
  %202 = and i32 %201, 63
  %203 = zext i32 %202 to i64
  %204 = shl i64 1, %203
  %205 = lshr i32 %201, 6
  %206 = zext i32 %205 to i64
  %207 = lshr i64 %204, %206
  %208 = add i64 %207, -1
  %209 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 %183, i32 0
  %210 = load i64, i64* %209, align 8
  %211 = and i64 %210, %208
  %212 = tail call i64 @llvm.ctpop.i64(i64 %211) #13, !range !3
  %213 = trunc i64 %212 to i32
  %214 = add i32 %200, %189
  %215 = add i32 %214, %213
  br label %216

216:                                              ; preds = %199, %175
  %217 = phi i32 [ %215, %199 ], [ 0, %175 ]
  %218 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %40, i64 0, i32 0, i32 0
  %219 = and i64 %47, 4294967295
  %220 = sub nsw i64 %51, %47
  %221 = xor i64 %219, -1
  %222 = add nsw i64 %221, %51
  %223 = and i64 %220, 3
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %233, label %225

225:                                              ; preds = %216, %225
  %226 = phi i64 [ %230, %225 ], [ %219, %216 ]
  %227 = phi i64 [ %231, %225 ], [ %223, %216 ]
  %228 = load i32*, i32** %218, align 8
  %229 = getelementptr inbounds i32, i32* %228, i64 %226
  store i32 %217, i32* %229, align 4
  %230 = add nuw nsw i64 %226, 1
  %231 = add i64 %227, -1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %225, !llvm.loop !21

233:                                              ; preds = %225, %216
  %234 = phi i64 [ %219, %216 ], [ %230, %225 ]
  %235 = icmp ult i64 %222, 3
  br i1 %235, label %277, label %236

236:                                              ; preds = %233, %236
  %237 = phi i64 [ %249, %236 ], [ %234, %233 ]
  %238 = load i32*, i32** %218, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 %237
  store i32 %217, i32* %239, align 4
  %240 = add nuw nsw i64 %237, 1
  %241 = load i32*, i32** %218, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 %240
  store i32 %217, i32* %242, align 4
  %243 = add nuw nsw i64 %237, 2
  %244 = load i32*, i32** %218, align 8
  %245 = getelementptr inbounds i32, i32* %244, i64 %243
  store i32 %217, i32* %245, align 4
  %246 = add nuw nsw i64 %237, 3
  %247 = load i32*, i32** %218, align 8
  %248 = getelementptr inbounds i32, i32* %247, i64 %246
  store i32 %217, i32* %248, align 4
  %249 = add nuw nsw i64 %237, 4
  %250 = icmp eq i64 %249, %51
  br i1 %250, label %277, label %236

251:                                              ; preds = %82
  %252 = zext i32 %29 to i64
  %253 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %50, i64 0, i32 0, i32 0
  %254 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %253, align 8
  %255 = add nuw nsw i32 %33, 1
  %256 = and i32 %255, 63
  %257 = zext i32 %256 to i64
  %258 = shl i64 1, %257
  %259 = lshr i32 %255, 6
  %260 = zext i32 %259 to i64
  %261 = lshr i64 %258, %260
  %262 = add i64 %261, -1
  %263 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %254, i64 %252, i32 0, i32 0, i64 %32, i32 0
  %264 = load i64, i64* %263, align 8
  %265 = and i64 %262, %264
  store i64 %265, i64* %263, align 8
  %266 = load i16, i16* %27, align 4
  %267 = icmp ult i16 %266, 7
  br i1 %267, label %268, label %277

268:                                              ; preds = %251
  %269 = zext i16 %266 to i64
  %270 = add nuw nsw i64 %269, 1
  %271 = getelementptr %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %254, i64 %252, i32 0, i32 0, i64 %270
  %272 = bitcast %"class.perfetto::trace_processor::BitVector::BitWord"* %271 to i8*
  %273 = shl nuw nsw i64 %269, 3
  %274 = sub nuw nsw i64 48, %273
  %275 = and i64 %274, 34359738360
  %276 = add nuw nsw i64 %275, 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %272, i8 0, i64 %276, i1 false) #13
  br label %277

277:                                              ; preds = %233, %236, %173, %268, %251, %162
  store i32 %1, i32* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  br label %278

278:                                              ; preds = %3, %277, %13
  ret void

279:                                              ; preds = %127
  %280 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 1, i32 0
  %281 = load i64, i64* %280, align 8
  %282 = call i64 @llvm.ctpop.i64(i64 %281) #13, !range !3
  %283 = trunc i64 %282 to i32
  %284 = add nuw nsw i32 %131, %283
  %285 = icmp eq i32 %116, 2
  br i1 %285, label %133, label %286

286:                                              ; preds = %279
  %287 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 2, i32 0
  %288 = load i64, i64* %287, align 8
  %289 = call i64 @llvm.ctpop.i64(i64 %288) #13, !range !3
  %290 = trunc i64 %289 to i32
  %291 = add nuw nsw i32 %284, %290
  %292 = icmp eq i32 %116, 3
  br i1 %292, label %133, label %293

293:                                              ; preds = %286
  %294 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 3, i32 0
  %295 = load i64, i64* %294, align 8
  %296 = call i64 @llvm.ctpop.i64(i64 %295) #13, !range !3
  %297 = trunc i64 %296 to i32
  %298 = add nuw nsw i32 %291, %297
  %299 = icmp eq i32 %116, 4
  br i1 %299, label %133, label %300

300:                                              ; preds = %293
  %301 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 4, i32 0
  %302 = load i64, i64* %301, align 8
  %303 = call i64 @llvm.ctpop.i64(i64 %302) #13, !range !3
  %304 = trunc i64 %303 to i32
  %305 = add nuw nsw i32 %298, %304
  %306 = icmp eq i32 %116, 5
  br i1 %306, label %133, label %307

307:                                              ; preds = %300
  %308 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 5, i32 0
  %309 = load i64, i64* %308, align 8
  %310 = call i64 @llvm.ctpop.i64(i64 %309) #13, !range !3
  %311 = trunc i64 %310 to i32
  %312 = add nuw nsw i32 %305, %311
  %313 = icmp eq i32 %116, 6
  br i1 %313, label %133, label %314

314:                                              ; preds = %307
  %315 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %125, i64 %119, i32 0, i32 0, i64 6, i32 0
  %316 = load i64, i64* %315, align 8
  %317 = call i64 @llvm.ctpop.i64(i64 %316) #13, !range !3
  %318 = trunc i64 %317 to i32
  %319 = add i32 %312, %318
  br label %133

320:                                              ; preds = %193
  %321 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 1, i32 0
  %322 = load i64, i64* %321, align 8
  %323 = tail call i64 @llvm.ctpop.i64(i64 %322) #13, !range !3
  %324 = trunc i64 %323 to i32
  %325 = add nuw nsw i32 %197, %324
  %326 = icmp eq i32 %182, 2
  br i1 %326, label %199, label %327

327:                                              ; preds = %320
  %328 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 2, i32 0
  %329 = load i64, i64* %328, align 8
  %330 = tail call i64 @llvm.ctpop.i64(i64 %329) #13, !range !3
  %331 = trunc i64 %330 to i32
  %332 = add nuw nsw i32 %325, %331
  %333 = icmp eq i32 %182, 3
  br i1 %333, label %199, label %334

334:                                              ; preds = %327
  %335 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 3, i32 0
  %336 = load i64, i64* %335, align 8
  %337 = tail call i64 @llvm.ctpop.i64(i64 %336) #13, !range !3
  %338 = trunc i64 %337 to i32
  %339 = add nuw nsw i32 %332, %338
  %340 = icmp eq i32 %182, 4
  br i1 %340, label %199, label %341

341:                                              ; preds = %334
  %342 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 4, i32 0
  %343 = load i64, i64* %342, align 8
  %344 = tail call i64 @llvm.ctpop.i64(i64 %343) #13, !range !3
  %345 = trunc i64 %344 to i32
  %346 = add nuw nsw i32 %339, %345
  %347 = icmp eq i32 %182, 5
  br i1 %347, label %199, label %348

348:                                              ; preds = %341
  %349 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 5, i32 0
  %350 = load i64, i64* %349, align 8
  %351 = tail call i64 @llvm.ctpop.i64(i64 %350) #13, !range !3
  %352 = trunc i64 %351 to i32
  %353 = add nuw nsw i32 %346, %352
  %354 = icmp eq i32 %182, 6
  br i1 %354, label %199, label %355

355:                                              ; preds = %348
  %356 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %191, i64 %185, i32 0, i32 0, i64 6, i32 0
  %357 = load i64, i64* %356, align 8
  %358 = tail call i64 @llvm.ctpop.i64(i64 %357) #13, !range !3
  %359 = trunc i64 %358 to i32
  %360 = add i32 %353, %359
  br label %199
}

declare void @_ZN8perfetto15trace_processor6RowMapC1ENS0_9BitVectorE(%"class.perfetto::trace_processor::RowMap"*, %"class.perfetto::trace_processor::BitVector"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE6insertENS_11__wrap_iterIPKjEERS5_(%"class.std::__1::vector.150"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = bitcast i32* %1 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %166

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  br i1 %15, label %16, label %21

16:                                               ; preds = %14
  %17 = load i32, i32* %2, align 4
  store i32 %17, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %410

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %149

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !22
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !22
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !25, !noalias !22
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !25, !noalias !22
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !22
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !22
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !25, !noalias !22
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !25, !noalias !22
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !22
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !22
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !25, !noalias !22
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !25, !noalias !22
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !22
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !22
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !25, !noalias !22
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !25, !noalias !22
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !27

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !22
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !22
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !25, !noalias !22
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !25, !noalias !22
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !29

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %149, %137
  %140 = phi i32* [ %60, %137 ], [ %154, %149 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %5, i64 %24, i1 false) #13
  br label %156

149:                                              ; preds = %39, %149
  %150 = phi i32* [ %154, %149 ], [ %40, %39 ]
  %151 = phi i32* [ %153, %149 ], [ %41, %39 ]
  %152 = load i32, i32* %151, align 4
  store i32 %152, i32* %150, align 4
  %153 = getelementptr inbounds i32, i32* %151, i64 1
  %154 = getelementptr inbounds i32, i32* %150, i64 1
  %155 = icmp ult i32* %153, %8
  br i1 %155, label %149, label %139, !llvm.loop !30

156:                                              ; preds = %142, %145
  %157 = icmp ugt i32* %1, %2
  br i1 %157, label %163, label %158

158:                                              ; preds = %156
  %159 = load i32*, i32** %7, align 8
  %160 = icmp ugt i32* %159, %2
  %161 = getelementptr inbounds i32, i32* %2, i64 1
  %162 = select i1 %160, i32* %161, i32* %2
  br label %163

163:                                              ; preds = %158, %156
  %164 = phi i32* [ %2, %156 ], [ %162, %158 ]
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %1, align 4
  br label %410

166:                                              ; preds = %3
  %167 = bitcast i32** %7 to i64*
  %168 = bitcast %"class.std::__1::vector.150"* %0 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %166
  %175 = bitcast %"class.std::__1::vector.150"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #16
  unreachable

176:                                              ; preds = %166
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %184, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  br label %194

184:                                              ; preds = %176
  %185 = ashr exact i64 %178, 1
  %186 = icmp ult i64 %185, %172
  %187 = select i1 %186, i64 %172, i64 %185
  %188 = sub i64 %4, %169
  %189 = ashr exact i64 %188, 2
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %200, label %191

191:                                              ; preds = %184
  %192 = icmp ugt i64 %187, 4611686018427387903
  br i1 %192, label %193, label %194

193:                                              ; preds = %191
  tail call void @abort() #16
  unreachable

194:                                              ; preds = %181, %191
  %195 = phi i64 [ 4611686018427387903, %181 ], [ %187, %191 ]
  %196 = phi i64 [ %183, %181 ], [ %189, %191 ]
  %197 = shl i64 %195, 2
  %198 = tail call i8* @_Znwm(i64 %197) #14
  %199 = bitcast i8* %198 to i32*
  br label %200

200:                                              ; preds = %184, %194
  %201 = phi i64 [ %196, %194 ], [ %189, %184 ]
  %202 = phi i64 [ %195, %194 ], [ 0, %184 ]
  %203 = phi i8* [ %198, %194 ], [ null, %184 ]
  %204 = phi i32* [ %199, %194 ], [ null, %184 ]
  %205 = getelementptr inbounds i32, i32* %204, i64 %201
  %206 = getelementptr inbounds i32, i32* %204, i64 %202
  %207 = ptrtoint i32* %206 to i64
  %208 = icmp eq i64 %201, %202
  br i1 %208, label %209, label %231

209:                                              ; preds = %200
  %210 = icmp sgt i64 %201, 0
  br i1 %210, label %211, label %215

211:                                              ; preds = %209
  %212 = add nuw nsw i64 %201, 1
  %213 = sdiv i64 %212, -2
  %214 = getelementptr inbounds i32, i32* %205, i64 %213
  br label %231

215:                                              ; preds = %209
  %216 = shl nsw i64 %201, 1
  %217 = icmp eq i64 %201, 0
  %218 = select i1 %217, i64 1, i64 %216
  %219 = icmp ugt i64 %218, 4611686018427387903
  br i1 %219, label %220, label %221

220:                                              ; preds = %215
  tail call void @abort() #16
  unreachable

221:                                              ; preds = %215
  %222 = lshr i64 %218, 2
  %223 = shl i64 %218, 2
  %224 = tail call i8* @_Znwm(i64 %223) #14
  %225 = bitcast i8* %224 to i32*
  %226 = getelementptr inbounds i32, i32* %225, i64 %222
  %227 = getelementptr inbounds i32, i32* %225, i64 %218
  %228 = ptrtoint i32* %227 to i64
  %229 = icmp eq i32* %204, null
  br i1 %229, label %231, label %230

230:                                              ; preds = %221
  tail call void @_ZdlPv(i8* %203) #14
  br label %231

231:                                              ; preds = %200, %211, %221, %230
  %232 = phi i32* [ %214, %211 ], [ %226, %221 ], [ %226, %230 ], [ %205, %200 ]
  %233 = phi i64 [ %207, %211 ], [ %228, %221 ], [ %228, %230 ], [ %207, %200 ]
  %234 = load i32, i32* %2, align 4
  store i32 %234, i32* %232, align 4
  %235 = getelementptr inbounds i32, i32* %232, i64 1
  %236 = load i32*, i32** %6, align 8
  %237 = ptrtoint i32* %236 to i64
  %238 = sub i64 %4, %237
  %239 = ashr exact i64 %238, 2
  %240 = sub nsw i64 0, %239
  %241 = getelementptr inbounds i32, i32* %232, i64 %240
  %242 = ptrtoint i32* %241 to i64
  %243 = icmp sgt i64 %238, 0
  br i1 %243, label %244, label %247

244:                                              ; preds = %231
  %245 = bitcast i32* %241 to i8*
  %246 = bitcast i32* %236 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %245, i8* align 4 %246, i64 %238, i1 false) #13
  br label %247

247:                                              ; preds = %244, %231
  %248 = load i32*, i32** %7, align 8
  %249 = icmp eq i32* %248, %1
  br i1 %249, label %403, label %250

250:                                              ; preds = %247
  %251 = getelementptr i32, i32* %248, i64 -1
  %252 = ptrtoint i32* %251 to i64
  %253 = sub i64 %252, %4
  %254 = lshr i64 %253, 2
  %255 = add nuw nsw i64 %254, 1
  %256 = icmp ult i64 %255, 8
  br i1 %256, label %350, label %257

257:                                              ; preds = %250
  %258 = getelementptr i32, i32* %248, i64 -1
  %259 = ptrtoint i32* %258 to i64
  %260 = sub i64 %259, %4
  %261 = lshr i64 %260, 2
  %262 = add nuw nsw i64 %261, 2
  %263 = getelementptr i32, i32* %232, i64 %262
  %264 = add nuw nsw i64 %261, 1
  %265 = getelementptr i32, i32* %1, i64 %264
  %266 = icmp ult i32* %235, %265
  %267 = icmp ugt i32* %263, %1
  %268 = and i1 %266, %267
  br i1 %268, label %350, label %269

269:                                              ; preds = %257
  %270 = and i64 %255, 9223372036854775800
  %271 = getelementptr i32, i32* %235, i64 %270
  %272 = getelementptr i32, i32* %1, i64 %270
  %273 = add nsw i64 %270, -8
  %274 = lshr exact i64 %273, 3
  %275 = add nuw nsw i64 %274, 1
  %276 = and i64 %275, 3
  %277 = icmp ult i64 %273, 24
  br i1 %277, label %329, label %278

278:                                              ; preds = %269
  %279 = sub nsw i64 %275, %276
  br label %280

280:                                              ; preds = %280, %278
  %281 = phi i64 [ 0, %278 ], [ %326, %280 ]
  %282 = phi i64 [ %279, %278 ], [ %327, %280 ]
  %283 = getelementptr i32, i32* %235, i64 %281
  %284 = getelementptr i32, i32* %1, i64 %281
  %285 = bitcast i32* %284 to <4 x i32>*
  %286 = load <4 x i32>, <4 x i32>* %285, align 4, !alias.scope !31
  %287 = getelementptr i32, i32* %284, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4, !alias.scope !31
  %290 = bitcast i32* %283 to <4 x i32>*
  store <4 x i32> %286, <4 x i32>* %290, align 4, !alias.scope !34, !noalias !31
  %291 = getelementptr i32, i32* %283, i64 4
  %292 = bitcast i32* %291 to <4 x i32>*
  store <4 x i32> %289, <4 x i32>* %292, align 4, !alias.scope !34, !noalias !31
  %293 = or i64 %281, 8
  %294 = getelementptr i32, i32* %235, i64 %293
  %295 = getelementptr i32, i32* %1, i64 %293
  %296 = bitcast i32* %295 to <4 x i32>*
  %297 = load <4 x i32>, <4 x i32>* %296, align 4, !alias.scope !31
  %298 = getelementptr i32, i32* %295, i64 4
  %299 = bitcast i32* %298 to <4 x i32>*
  %300 = load <4 x i32>, <4 x i32>* %299, align 4, !alias.scope !31
  %301 = bitcast i32* %294 to <4 x i32>*
  store <4 x i32> %297, <4 x i32>* %301, align 4, !alias.scope !34, !noalias !31
  %302 = getelementptr i32, i32* %294, i64 4
  %303 = bitcast i32* %302 to <4 x i32>*
  store <4 x i32> %300, <4 x i32>* %303, align 4, !alias.scope !34, !noalias !31
  %304 = or i64 %281, 16
  %305 = getelementptr i32, i32* %235, i64 %304
  %306 = getelementptr i32, i32* %1, i64 %304
  %307 = bitcast i32* %306 to <4 x i32>*
  %308 = load <4 x i32>, <4 x i32>* %307, align 4, !alias.scope !31
  %309 = getelementptr i32, i32* %306, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4, !alias.scope !31
  %312 = bitcast i32* %305 to <4 x i32>*
  store <4 x i32> %308, <4 x i32>* %312, align 4, !alias.scope !34, !noalias !31
  %313 = getelementptr i32, i32* %305, i64 4
  %314 = bitcast i32* %313 to <4 x i32>*
  store <4 x i32> %311, <4 x i32>* %314, align 4, !alias.scope !34, !noalias !31
  %315 = or i64 %281, 24
  %316 = getelementptr i32, i32* %235, i64 %315
  %317 = getelementptr i32, i32* %1, i64 %315
  %318 = bitcast i32* %317 to <4 x i32>*
  %319 = load <4 x i32>, <4 x i32>* %318, align 4, !alias.scope !31
  %320 = getelementptr i32, i32* %317, i64 4
  %321 = bitcast i32* %320 to <4 x i32>*
  %322 = load <4 x i32>, <4 x i32>* %321, align 4, !alias.scope !31
  %323 = bitcast i32* %316 to <4 x i32>*
  store <4 x i32> %319, <4 x i32>* %323, align 4, !alias.scope !34, !noalias !31
  %324 = getelementptr i32, i32* %316, i64 4
  %325 = bitcast i32* %324 to <4 x i32>*
  store <4 x i32> %322, <4 x i32>* %325, align 4, !alias.scope !34, !noalias !31
  %326 = add i64 %281, 32
  %327 = add i64 %282, -4
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %280, !llvm.loop !36

329:                                              ; preds = %280, %269
  %330 = phi i64 [ 0, %269 ], [ %326, %280 ]
  %331 = icmp eq i64 %276, 0
  br i1 %331, label %348, label %332

332:                                              ; preds = %329, %332
  %333 = phi i64 [ %345, %332 ], [ %330, %329 ]
  %334 = phi i64 [ %346, %332 ], [ %276, %329 ]
  %335 = getelementptr i32, i32* %235, i64 %333
  %336 = getelementptr i32, i32* %1, i64 %333
  %337 = bitcast i32* %336 to <4 x i32>*
  %338 = load <4 x i32>, <4 x i32>* %337, align 4, !alias.scope !31
  %339 = getelementptr i32, i32* %336, i64 4
  %340 = bitcast i32* %339 to <4 x i32>*
  %341 = load <4 x i32>, <4 x i32>* %340, align 4, !alias.scope !31
  %342 = bitcast i32* %335 to <4 x i32>*
  store <4 x i32> %338, <4 x i32>* %342, align 4, !alias.scope !34, !noalias !31
  %343 = getelementptr i32, i32* %335, i64 4
  %344 = bitcast i32* %343 to <4 x i32>*
  store <4 x i32> %341, <4 x i32>* %344, align 4, !alias.scope !34, !noalias !31
  %345 = add i64 %333, 8
  %346 = add i64 %334, -1
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %348, label %332, !llvm.loop !37

348:                                              ; preds = %332, %329
  %349 = icmp eq i64 %255, %270
  br i1 %349, label %403, label %350

350:                                              ; preds = %348, %257, %250
  %351 = phi i32* [ %235, %257 ], [ %235, %250 ], [ %271, %348 ]
  %352 = phi i32* [ %1, %257 ], [ %1, %250 ], [ %272, %348 ]
  %353 = ptrtoint i32* %352 to i64
  %354 = getelementptr i32, i32* %248, i64 -1
  %355 = ptrtoint i32* %354 to i64
  %356 = sub i64 %355, %353
  %357 = lshr i64 %356, 2
  %358 = add nuw nsw i64 %357, 1
  %359 = and i64 %358, 7
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %370, label %361

361:                                              ; preds = %350, %361
  %362 = phi i32* [ %367, %361 ], [ %351, %350 ]
  %363 = phi i32* [ %366, %361 ], [ %352, %350 ]
  %364 = phi i64 [ %368, %361 ], [ %359, %350 ]
  %365 = load i32, i32* %363, align 4
  store i32 %365, i32* %362, align 4
  %366 = getelementptr inbounds i32, i32* %363, i64 1
  %367 = getelementptr inbounds i32, i32* %362, i64 1
  %368 = add i64 %364, -1
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %370, label %361, !llvm.loop !38

370:                                              ; preds = %361, %350
  %371 = phi i32* [ undef, %350 ], [ %367, %361 ]
  %372 = phi i32* [ %351, %350 ], [ %367, %361 ]
  %373 = phi i32* [ %352, %350 ], [ %366, %361 ]
  %374 = icmp ult i64 %356, 28
  br i1 %374, label %403, label %375

375:                                              ; preds = %370, %375
  %376 = phi i32* [ %401, %375 ], [ %372, %370 ]
  %377 = phi i32* [ %400, %375 ], [ %373, %370 ]
  %378 = load i32, i32* %377, align 4
  store i32 %378, i32* %376, align 4
  %379 = getelementptr inbounds i32, i32* %377, i64 1
  %380 = getelementptr inbounds i32, i32* %376, i64 1
  %381 = load i32, i32* %379, align 4
  store i32 %381, i32* %380, align 4
  %382 = getelementptr inbounds i32, i32* %377, i64 2
  %383 = getelementptr inbounds i32, i32* %376, i64 2
  %384 = load i32, i32* %382, align 4
  store i32 %384, i32* %383, align 4
  %385 = getelementptr inbounds i32, i32* %377, i64 3
  %386 = getelementptr inbounds i32, i32* %376, i64 3
  %387 = load i32, i32* %385, align 4
  store i32 %387, i32* %386, align 4
  %388 = getelementptr inbounds i32, i32* %377, i64 4
  %389 = getelementptr inbounds i32, i32* %376, i64 4
  %390 = load i32, i32* %388, align 4
  store i32 %390, i32* %389, align 4
  %391 = getelementptr inbounds i32, i32* %377, i64 5
  %392 = getelementptr inbounds i32, i32* %376, i64 5
  %393 = load i32, i32* %391, align 4
  store i32 %393, i32* %392, align 4
  %394 = getelementptr inbounds i32, i32* %377, i64 6
  %395 = getelementptr inbounds i32, i32* %376, i64 6
  %396 = load i32, i32* %394, align 4
  store i32 %396, i32* %395, align 4
  %397 = getelementptr inbounds i32, i32* %377, i64 7
  %398 = getelementptr inbounds i32, i32* %376, i64 7
  %399 = load i32, i32* %397, align 4
  store i32 %399, i32* %398, align 4
  %400 = getelementptr inbounds i32, i32* %377, i64 8
  %401 = getelementptr inbounds i32, i32* %376, i64 8
  %402 = icmp eq i32* %400, %248
  br i1 %402, label %403, label %375, !llvm.loop !39

403:                                              ; preds = %370, %375, %348, %247
  %404 = phi i32* [ %235, %247 ], [ %271, %348 ], [ %371, %370 ], [ %401, %375 ]
  %405 = ptrtoint i32* %404 to i64
  %406 = load i32*, i32** %6, align 8
  store i64 %242, i64* %168, align 8
  store i64 %405, i64* %167, align 8
  store i64 %233, i64* %177, align 8
  %407 = icmp eq i32* %406, null
  br i1 %407, label %410, label %408

408:                                              ; preds = %403
  %409 = bitcast i32* %406 to i8*
  tail call void @_ZdlPv(i8* %409) #14
  br label %410

410:                                              ; preds = %408, %403, %16, %163
  %411 = phi i32* [ %1, %16 ], [ %1, %163 ], [ %232, %403 ], [ %232, %408 ]
  ret i32* %411
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto15trace_processor9BitVector3SetERKNS1_7AddressES4_(%"class.perfetto::trace_processor::BitVector"*, %"struct.perfetto::trace_processor::BitVector::Address"* dereferenceable(8), %"struct.perfetto::trace_processor::BitVector::Address"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector", %"class.perfetto::trace_processor::BitVector"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %10, align 8
  %12 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %1, i64 0, i32 1, i32 0
  %13 = load i16, i16* %12, align 2
  br i1 %8, label %14, label %85

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %2, i64 0, i32 1, i32 0
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %13, %16
  %18 = zext i16 %13 to i64
  %19 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %11, i64 %9, i32 0, i32 0, i64 %18
  %20 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %1, i64 0, i32 1, i32 1
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  br i1 %17, label %23, label %39

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %2, i64 0, i32 1, i32 1
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %25 to i32
  %27 = sub nsw i32 %26, %22
  %28 = add nsw i32 %27, 1
  %29 = and i32 %28, 63
  %30 = zext i32 %29 to i64
  %31 = shl i64 1, %30
  %32 = lshr i32 %28, 6
  %33 = zext i32 %32 to i64
  %34 = lshr i64 %31, %33
  %35 = add i64 %34, -1
  %36 = zext i16 %21 to i64
  %37 = shl i64 %35, %36
  %38 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::BitWord", %"class.perfetto::trace_processor::BitVector::BitWord"* %19, i64 0, i32 0
  br label %190

39:                                               ; preds = %14
  %40 = sub nsw i32 64, %22
  %41 = and i32 %40, 63
  %42 = zext i32 %41 to i64
  %43 = shl i64 1, %42
  %44 = lshr i32 %40, 6
  %45 = zext i32 %44 to i64
  %46 = lshr i64 %43, %45
  %47 = add i64 %46, -1
  %48 = zext i16 %21 to i64
  %49 = shl i64 %47, %48
  %50 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::BitWord", %"class.perfetto::trace_processor::BitVector::BitWord"* %19, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = or i64 %51, %49
  store i64 %52, i64* %50, align 8
  %53 = load i16, i16* %12, align 2
  %54 = zext i16 %53 to i32
  %55 = add nuw nsw i32 %54, 1
  %56 = load i16, i16* %15, align 2
  %57 = zext i16 %56 to i32
  %58 = icmp ult i32 %55, %57
  br i1 %58, label %59, label %61

59:                                               ; preds = %39
  %60 = zext i16 %53 to i64
  br label %76

61:                                               ; preds = %76, %39
  %62 = phi i16 [ %56, %39 ], [ %82, %76 ]
  %63 = zext i16 %62 to i64
  %64 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %2, i64 0, i32 1, i32 1
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = add nuw nsw i32 %66, 1
  %68 = and i32 %67, 63
  %69 = zext i32 %68 to i64
  %70 = shl i64 1, %69
  %71 = lshr i32 %67, 6
  %72 = zext i32 %71 to i64
  %73 = lshr i64 %70, %72
  %74 = add i64 %73, -1
  %75 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %11, i64 %9, i32 0, i32 0, i64 %63, i32 0
  br label %190

76:                                               ; preds = %76, %59
  %77 = phi i64 [ %60, %59 ], [ %79, %76 ]
  %78 = phi i32 [ %55, %59 ], [ %81, %76 ]
  %79 = add nuw nsw i64 %77, 1
  %80 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %11, i64 %9, i32 0, i32 0, i64 %79, i32 0
  store i64 -1, i64* %80, align 8
  %81 = add nuw i32 %78, 1
  %82 = load i16, i16* %15, align 2
  %83 = zext i16 %82 to i32
  %84 = icmp ult i32 %81, %83
  br i1 %84, label %76, label %61

85:                                               ; preds = %3
  %86 = icmp eq i16 %13, 7
  %87 = zext i16 %13 to i64
  %88 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %1, i64 0, i32 1, i32 1
  %89 = load i16, i16* %88, align 2
  %90 = zext i16 %89 to i32
  %91 = sub nsw i32 64, %90
  %92 = and i32 %91, 63
  %93 = zext i32 %92 to i64
  %94 = shl i64 1, %93
  %95 = lshr i32 %91, 6
  %96 = zext i32 %95 to i64
  %97 = lshr i64 %94, %96
  %98 = add i64 %97, -1
  %99 = zext i16 %89 to i64
  %100 = shl i64 %98, %99
  %101 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %11, i64 %9, i32 0, i32 0, i64 %87, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = or i64 %100, %102
  store i64 %103, i64* %101, align 8
  br i1 %86, label %119, label %104

104:                                              ; preds = %85
  %105 = load i16, i16* %12, align 2
  %106 = icmp ult i16 %105, 6
  br i1 %106, label %107, label %117

107:                                              ; preds = %104
  %108 = zext i16 %105 to i64
  %109 = zext i16 %105 to i64
  %110 = add nuw nsw i64 %109, 1
  %111 = getelementptr %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %11, i64 %9, i32 0, i32 0, i64 %110
  %112 = bitcast %"class.perfetto::trace_processor::BitVector::BitWord"* %111 to i8*
  %113 = shl nuw nsw i64 %108, 3
  %114 = sub nuw nsw i64 40, %113
  %115 = and i64 %114, 34359738360
  %116 = add nuw nsw i64 %115, 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 -1, i64 %116, i1 false)
  br label %117

117:                                              ; preds = %107, %104
  %118 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %11, i64 %9, i32 0, i32 0, i64 7, i32 0
  store i64 -1, i64* %118, align 8
  br label %119

119:                                              ; preds = %85, %117
  %120 = load i32, i32* %4, align 4
  %121 = add i32 %120, 1
  %122 = load i32, i32* %6, align 4
  %123 = icmp ult i32 %121, %122
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  %125 = zext i32 %121 to i64
  br label %175

126:                                              ; preds = %175, %119
  %127 = phi i32 [ %122, %119 ], [ %186, %175 ]
  %128 = zext i32 %127 to i64
  %129 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %10, align 8
  %130 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %129, i64 %128
  %131 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %2, i64 0, i32 1, i32 0
  %132 = load i16, i16* %131, align 2
  %133 = icmp eq i16 %132, 0
  br i1 %133, label %134, label %147

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %2, i64 0, i32 1, i32 1
  %136 = load i16, i16* %135, align 2
  %137 = zext i16 %136 to i32
  %138 = add nuw nsw i32 %137, 1
  %139 = and i32 %138, 63
  %140 = zext i32 %139 to i64
  %141 = shl i64 1, %140
  %142 = lshr i32 %138, 6
  %143 = zext i32 %142 to i64
  %144 = lshr i64 %141, %143
  %145 = add i64 %144, -1
  %146 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %130, i64 0, i32 0, i32 0, i64 0, i32 0
  br label %190

147:                                              ; preds = %126
  %148 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %130, i64 0, i32 0, i32 0, i64 0, i32 0
  store i64 -1, i64* %148, align 8
  %149 = load i16, i16* %131, align 2
  %150 = icmp ugt i16 %149, 1
  br i1 %150, label %166, label %151

151:                                              ; preds = %166, %147
  %152 = phi i16 [ %149, %147 ], [ %172, %166 ]
  %153 = zext i16 %152 to i64
  %154 = getelementptr inbounds %"struct.perfetto::trace_processor::BitVector::Address", %"struct.perfetto::trace_processor::BitVector::Address"* %2, i64 0, i32 1, i32 1
  %155 = load i16, i16* %154, align 2
  %156 = zext i16 %155 to i32
  %157 = add nuw nsw i32 %156, 1
  %158 = and i32 %157, 63
  %159 = zext i32 %158 to i64
  %160 = shl i64 1, %159
  %161 = lshr i32 %157, 6
  %162 = zext i32 %161 to i64
  %163 = lshr i64 %160, %162
  %164 = add i64 %163, -1
  %165 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %129, i64 %128, i32 0, i32 0, i64 %153, i32 0
  br label %190

166:                                              ; preds = %147, %166
  %167 = phi i64 [ %169, %166 ], [ 0, %147 ]
  %168 = phi i32 [ %171, %166 ], [ 1, %147 ]
  %169 = add nuw nsw i64 %167, 1
  %170 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %129, i64 %128, i32 0, i32 0, i64 %169, i32 0
  store i64 -1, i64* %170, align 8
  %171 = add nuw nsw i32 %168, 1
  %172 = load i16, i16* %131, align 2
  %173 = zext i16 %172 to i32
  %174 = icmp ult i32 %171, %173
  br i1 %174, label %166, label %151

175:                                              ; preds = %124, %175
  %176 = phi i64 [ %125, %124 ], [ %189, %175 ]
  %177 = phi i64 [ 0, %124 ], [ %188, %175 ]
  %178 = phi i32 [ %121, %124 ], [ %185, %175 ]
  %179 = add nuw nsw i64 %177, %125
  %180 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %10, align 8
  %181 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %180, i64 %176, i32 0, i32 0, i64 0, i32 0
  store i64 -1, i64* %181, align 8
  %182 = getelementptr %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %180, i64 %179, i32 0, i32 0, i64 1
  %183 = bitcast %"class.perfetto::trace_processor::BitVector::BitWord"* %182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 -1, i64 48, i1 false)
  %184 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %180, i64 %176, i32 0, i32 0, i64 7, i32 0
  store i64 -1, i64* %184, align 8
  %185 = add nuw i32 %178, 1
  %186 = load i32, i32* %6, align 4
  %187 = icmp ult i32 %185, %186
  %188 = add nuw nsw i64 %177, 1
  %189 = add nuw nsw i64 %176, 1
  br i1 %187, label %175, label %126

190:                                              ; preds = %151, %134, %61, %23
  %191 = phi i64* [ %165, %151 ], [ %146, %134 ], [ %75, %61 ], [ %38, %23 ]
  %192 = phi i64 [ %164, %151 ], [ %145, %134 ], [ %74, %61 ], [ %37, %23 ]
  %193 = load i64, i64* %191, align 8
  %194 = or i64 %192, %193
  store i64 %194, i64* %191, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8perfetto15trace_processor9BitVector5BlockENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.157"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.perfetto::trace_processor::BitVector::Block"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 6
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.perfetto::trace_processor::BitVector::Block"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %13, i64 %18, i32 0, i32 0, i64 0, i32 0
  %20 = bitcast i64* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 64
  %25 = and i64 %24, -64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #13
  %26 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.157"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 6
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 288230376151711743
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.157"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #16
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 6
  %41 = icmp ult i64 %40, 144115188075855871
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 5
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 288230376151711743
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 288230376151711743, %38 ]
  %52 = shl i64 %51, 6
  %53 = tail call i8* @_Znwm(i64 %52) #14
  %54 = bitcast i8* %53 to %"class.perfetto::trace_processor::BitVector::Block"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.perfetto::trace_processor::BitVector::Block"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %57, i64 %33
  %59 = bitcast %"class.perfetto::trace_processor::BitVector::Block"* %58 to i8*
  %60 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %57, i64 %56
  %61 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %58, i64 %1
  %62 = shl nsw i64 %1, 6
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %60 to i64
  %64 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 6
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %58, i64 %71
  %73 = ptrtoint %"class.perfetto::trace_processor::BitVector::Block"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.perfetto::trace_processor::BitVector::Block"* %72 to i8*
  %77 = bitcast %"class.perfetto::trace_processor::BitVector::Block"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #13
  %78 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.perfetto::trace_processor::BitVector::Block"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.perfetto::trace_processor::BitVector::Block"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.perfetto::trace_processor::BitVector::Block"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #14
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.150"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #13
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.150"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.150"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #16
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #14
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #13
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #13
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #14
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

declare i32 @_ZN8perfetto15trace_processor10StringPool12InsertStringENS_4base10StringViewEm(%"class.perfetto::trace_processor::StringPool"*, i8*, i64, i64) local_unnamed_addr #3

declare void @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32, i8*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN8perfetto4base8BasenameEPKc(i8*) local_unnamed_addr #0 comdat {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi i8* [ %0, %1 ], [ %6, %2 ]
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds i8, i8* %3, i64 1
  br i1 %5, label %7, label %2

7:                                                ; preds = %2, %7
  %8 = phi i8* [ %11, %7 ], [ %0, %2 ]
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds i8, i8* %8, i64 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7, %15
  %13 = phi i8* [ %16, %15 ], [ %3, %7 ]
  %14 = icmp ugt i8* %13, %0
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = getelementptr inbounds i8, i8* %13, i64 -1
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 47
  %19 = icmp ult i8* %16, %8
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %12

21:                                               ; preds = %12, %15
  ret i8* %13
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #11

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK8perfetto15trace_processor6RowMap3GetEj(%"class.perfetto::trace_processor::RowMap"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %61 [
    i32 0, label %5
    i32 1, label %9
    i32 2, label %55
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, %1
  br label %66

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = sub i64 %14, %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %35, label %18

18:                                               ; preds = %9
  %19 = ashr exact i64 %16, 2
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i32* [ %11, %18 ], [ %31, %20 ]
  %22 = phi i64 [ %19, %18 ], [ %30, %20 ]
  %23 = lshr i64 %22, 1
  %24 = getelementptr inbounds i32, i32* %21, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = icmp ugt i32 %25, %1
  %27 = getelementptr inbounds i32, i32* %24, i64 1
  %28 = xor i64 %23, -1
  %29 = add i64 %22, %28
  %30 = select i1 %26, i64 %23, i64 %29
  %31 = select i1 %26, i32* %21, i32* %27
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %20

33:                                               ; preds = %20
  %34 = ptrtoint i32* %31 to i64
  br label %35

35:                                               ; preds = %9, %33
  %36 = phi i64 [ %34, %33 ], [ %15, %9 ]
  %37 = sub i64 %36, %15
  %38 = lshr exact i64 %37, 2
  %39 = add nuw nsw i64 %38, 4294967295
  %40 = and i64 %39, 4294967295
  %41 = getelementptr inbounds i32, i32* %11, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = sub i32 %1, %42
  %44 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %45 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %44, align 8
  %46 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %45, i64 %40
  %47 = tail call i32 @_ZNK8perfetto15trace_processor9BitVector5Block13IndexOfNthSetEj(%"class.perfetto::trace_processor::BitVector::Block"* %46, i32 %43) #13
  %48 = shl i32 %47, 6
  %49 = trunc i64 %39 to i32
  %50 = lshr i32 %47, 16
  %51 = shl i32 %49, 9
  %52 = and i32 %48, 4194240
  %53 = add nuw nsw i32 %52, %50
  %54 = add i32 %53, %51
  br label %66

55:                                               ; preds = %2
  %56 = zext i32 %1 to i64
  %57 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %56
  %60 = load i32, i32* %59, align 4
  br label %66

61:                                               ; preds = %2
  %62 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.6, i64 0, i64 0))
  %63 = tail call i32* @__errno_location() #15
  %64 = load i32, i32* %63, align 4
  %65 = tail call i8* @strerror(i32 %64) #13
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %62, i32 268, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i32 %64, i8* %65) #13
  tail call void @llvm.trap()
  unreachable

66:                                               ; preds = %55, %35, %5
  %67 = phi i32 [ %60, %55 ], [ %54, %35 ], [ %8, %5 ]
  ret i32 %67
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK8perfetto15trace_processor6RowMap4sizeEv(%"class.perfetto::trace_processor::RowMap"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %62 [
    i32 0, label %4
    i32 1, label %10
    i32 2, label %52
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = sub i32 %6, %8
  br label %67

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %67, label %14

14:                                               ; preds = %10
  %15 = add i32 %12, -1
  %16 = lshr i32 %15, 9
  %17 = lshr i32 %15, 6
  %18 = and i32 %17, 7
  %19 = zext i32 %18 to i64
  %20 = and i32 %15, 63
  %21 = zext i32 %16 to i64
  %22 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %21
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %27 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %26, align 8
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = tail call i64 @llvm.ctpop.i64(i64 %31) #13, !range !3
  %33 = trunc i64 %32 to i32
  %34 = icmp eq i32 %18, 1
  br i1 %34, label %35, label %69

35:                                               ; preds = %29, %69, %76, %83, %90, %97, %104, %14
  %36 = phi i32 [ 0, %14 ], [ %33, %29 ], [ %74, %69 ], [ %81, %76 ], [ %88, %83 ], [ %95, %90 ], [ %102, %97 ], [ %109, %104 ]
  %37 = add nuw nsw i32 %20, 1
  %38 = and i32 %37, 63
  %39 = zext i32 %38 to i64
  %40 = shl i64 1, %39
  %41 = lshr i32 %37, 6
  %42 = zext i32 %41 to i64
  %43 = lshr i64 %40, %42
  %44 = add i64 %43, -1
  %45 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 %19, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, %44
  %48 = tail call i64 @llvm.ctpop.i64(i64 %47) #13, !range !3
  %49 = trunc i64 %48 to i32
  %50 = add i32 %36, %25
  %51 = add i32 %50, %49
  br label %67

52:                                               ; preds = %1
  %53 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5
  %54 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %0, i64 0, i32 5, i32 0, i32 1
  %55 = bitcast i32** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::vector.150"* %53 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %56, %58
  %60 = lshr exact i64 %59, 2
  %61 = trunc i64 %60 to i32
  br label %67

62:                                               ; preds = %1
  %63 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.6, i64 0, i64 0))
  %64 = tail call i32* @__errno_location() #15
  %65 = load i32, i32* %64, align 4
  %66 = tail call i8* @strerror(i32 %65) #13
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %63, i32 251, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i32 %65, i8* %66) #13
  tail call void @llvm.trap()
  unreachable

67:                                               ; preds = %35, %10, %52, %4
  %68 = phi i32 [ %61, %52 ], [ %9, %4 ], [ %51, %35 ], [ 0, %10 ]
  ret i32 %68

69:                                               ; preds = %29
  %70 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 1, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = tail call i64 @llvm.ctpop.i64(i64 %71) #13, !range !3
  %73 = trunc i64 %72 to i32
  %74 = add nuw nsw i32 %33, %73
  %75 = icmp eq i32 %18, 2
  br i1 %75, label %35, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 2, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = tail call i64 @llvm.ctpop.i64(i64 %78) #13, !range !3
  %80 = trunc i64 %79 to i32
  %81 = add nuw nsw i32 %74, %80
  %82 = icmp eq i32 %18, 3
  br i1 %82, label %35, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 3, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #13, !range !3
  %87 = trunc i64 %86 to i32
  %88 = add nuw nsw i32 %81, %87
  %89 = icmp eq i32 %18, 4
  br i1 %89, label %35, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 4, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #13, !range !3
  %94 = trunc i64 %93 to i32
  %95 = add nuw nsw i32 %88, %94
  %96 = icmp eq i32 %18, 5
  br i1 %96, label %35, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 5, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #13, !range !3
  %101 = trunc i64 %100 to i32
  %102 = add nuw nsw i32 %95, %101
  %103 = icmp eq i32 %18, 6
  br i1 %103, label %35, label %104

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %27, i64 %21, i32 0, i32 0, i64 6, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = tail call i64 @llvm.ctpop.i64(i64 %106) #13, !range !3
  %108 = trunc i64 %107 to i32
  %109 = add i32 %102, %108
  br label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK8perfetto15trace_processor9BitVector5Block13IndexOfNthSetEj(%"class.perfetto::trace_processor::BitVector::Block"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = tail call i64 @llvm.ctpop.i64(i64 %4) #13, !range !3
  %6 = trunc i64 %5 to i32
  %7 = icmp ugt i32 %6, %1
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 1, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @llvm.ctpop.i64(i64 %10) #13, !range !3
  %12 = trunc i64 %11 to i32
  %13 = add nuw nsw i32 %6, %12
  %14 = icmp ugt i32 %13, %1
  br i1 %14, label %15, label %71

15:                                               ; preds = %106, %99, %92, %85, %78, %71, %8, %2
  %16 = phi i32 [ 0, %2 ], [ 1, %8 ], [ 2, %71 ], [ 3, %78 ], [ 4, %85 ], [ 5, %92 ], [ 6, %99 ], [ 7, %106 ]
  %17 = phi i32 [ 0, %2 ], [ %6, %8 ], [ %13, %71 ], [ %76, %78 ], [ %83, %85 ], [ %90, %92 ], [ %97, %99 ], [ %104, %106 ]
  %18 = phi i64 [ %4, %2 ], [ %10, %8 ], [ %73, %71 ], [ %80, %78 ], [ %87, %85 ], [ %94, %92 ], [ %101, %99 ], [ %108, %106 ]
  %19 = sub i32 %1, %17
  %20 = lshr i64 %18, 1
  %21 = and i64 %20, 6148914691236517205
  %22 = sub i64 %18, %21
  %23 = and i64 %22, 3689348814741910323
  %24 = lshr i64 %22, 2
  %25 = and i64 %24, 3689348814741910323
  %26 = add nuw nsw i64 %25, %23
  %27 = lshr i64 %26, 4
  %28 = add nuw nsw i64 %27, %26
  %29 = and i64 %28, 1085102592571150095
  %30 = mul i64 %29, 72340172838076673
  %31 = zext i32 %19 to i64
  %32 = mul i64 %31, 72340172838076673
  %33 = or i64 %32, -9187201950435737472
  %34 = and i64 %30, 9187201950435737471
  %35 = sub nuw i64 %33, %34
  %36 = xor i64 %30, %32
  %37 = xor i64 %36, %35
  %38 = lshr i64 %37, 7
  %39 = and i64 %38, 72340172838076673
  %40 = mul i64 %39, 72340172838076673
  %41 = lshr i64 %40, 53
  %42 = and i64 %41, 2040
  %43 = mul i64 %29, 72340172838076672
  %44 = lshr i64 %43, %42
  %45 = and i64 %44, 255
  %46 = sub nsw i64 %31, %45
  %47 = lshr i64 %18, %42
  %48 = and i64 %47, 255
  %49 = mul nuw i64 %48, 72340172838076673
  %50 = and i64 %49, -9205322385119247871
  %51 = or i64 %50, -9187201950435737472
  %52 = add i64 %51, -72340172838076673
  %53 = or i64 %52, %50
  %54 = lshr i64 %53, 7
  %55 = and i64 %54, 72340172838076673
  %56 = mul i64 %55, 72340172838076673
  %57 = mul i64 %46, 72340172838076673
  %58 = or i64 %57, -9187201950435737472
  %59 = and i64 %56, 9187201950435737471
  %60 = sub nuw i64 %58, %59
  %61 = xor i64 %56, %57
  %62 = xor i64 %61, %60
  %63 = lshr i64 %62, 7
  %64 = and i64 %63, 72340172838076673
  %65 = mul i64 %64, 72340172838076673
  %66 = lshr i64 %65, 56
  %67 = add nuw nsw i64 %66, %42
  %68 = trunc i64 %67 to i32
  %69 = shl nuw nsw i32 %68, 16
  %70 = or i32 %69, %16
  ret i32 %70

71:                                               ; preds = %8
  %72 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 2, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = tail call i64 @llvm.ctpop.i64(i64 %73) #13, !range !3
  %75 = trunc i64 %74 to i32
  %76 = add nuw nsw i32 %13, %75
  %77 = icmp ugt i32 %76, %1
  br i1 %77, label %15, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 3, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = tail call i64 @llvm.ctpop.i64(i64 %80) #13, !range !3
  %82 = trunc i64 %81 to i32
  %83 = add nuw nsw i32 %76, %82
  %84 = icmp ugt i32 %83, %1
  br i1 %84, label %15, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 4, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = tail call i64 @llvm.ctpop.i64(i64 %87) #13, !range !3
  %89 = trunc i64 %88 to i32
  %90 = add nuw nsw i32 %83, %89
  %91 = icmp ugt i32 %90, %1
  br i1 %91, label %15, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 5, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = tail call i64 @llvm.ctpop.i64(i64 %94) #13, !range !3
  %96 = trunc i64 %95 to i32
  %97 = add nuw nsw i32 %90, %96
  %98 = icmp ugt i32 %97, %1
  br i1 %98, label %15, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 6, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = tail call i64 @llvm.ctpop.i64(i64 %101) #13, !range !3
  %103 = trunc i64 %102 to i32
  %104 = add i32 %97, %103
  %105 = icmp ugt i32 %104, %1
  br i1 %105, label %15, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %0, i64 0, i32 0, i32 0, i64 7, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = tail call i64 @llvm.ctpop.i64(i64 %108) #13, !range !3
  %110 = trunc i64 %109 to i32
  %111 = add i32 %104, %110
  %112 = icmp ugt i32 %111, %1
  br i1 %112, label %15, label %113

113:                                              ; preds = %106
  %114 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0))
  %115 = tail call i32* @__errno_location() #15
  %116 = load i32, i32* %115, align 4
  %117 = tail call i8* @strerror(i32 %116) #13
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %114, i32 578, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i64 0, i64 0), i32 %116, i8* %117) #13
  tail call void @llvm.trap()
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque.201"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.498", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque.201", %"class.std::__1::deque.201"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 1023
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -1024
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque.201", %"class.std::__1::deque.201"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32**, i32*** %10, align 8
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i32*, i32** %11, i64 1
  store i32** %14, i32*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque.201", %"class.std::__1::deque.201"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i32**, i32*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque.201", %"class.std::__1::deque.201"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load i32**, i32*** %17, align 8
  %19 = icmp eq i32** %16, %18
  %20 = ptrtoint i32** %18 to i64
  %21 = bitcast i32** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque.201", %"class.std::__1::deque.201"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32**, i32*** %23, align 8
  %25 = icmp ugt i32** %14, %24
  %26 = ptrtoint i32** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint i32** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds i32*, i32** %14, i64 %32
  %34 = ptrtoint i32** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast i32** %33 to i8*
  %40 = bitcast i32** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #13
  %41 = load i32**, i32*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi i32** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds i32*, i32** %33, i64 %36
  store i32** %44, i32*** %15, align 8
  %45 = getelementptr inbounds i32*, i32** %43, i64 %32
  store i32** %45, i32*** %10, align 8
  %46 = bitcast i32** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast i32*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque.201"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #14
  %60 = bitcast i8* %59 to i32**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds i32*, i32** %60, i64 %57
  %63 = ptrtoint i32** %62 to i64
  %64 = getelementptr inbounds i32*, i32** %60, i64 %53
  %65 = ptrtoint i32** %64 to i64
  %66 = ptrtoint i32** %14 to i64
  %67 = ptrtoint i32** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds i32*, i32** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi i32** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi i32** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast i32** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds i32*, i32** %79, i64 1
  %87 = ptrtoint i32** %86 to i64
  %88 = getelementptr inbounds i32*, i32** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !40

91:                                               ; preds = %78
  %92 = ptrtoint i32** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi i32** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi i32** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi i32** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi i32** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %99, i64 1
  %106 = getelementptr inbounds i32*, i32** %101, i64 1
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %99, i64 2
  %111 = getelementptr inbounds i32*, i32** %101, i64 2
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %99, i64 3
  %116 = getelementptr inbounds i32*, i32** %101, i64 3
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %99, i64 4
  %121 = getelementptr inbounds i32*, i32** %101, i64 4
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %99, i64 5
  %126 = getelementptr inbounds i32*, i32** %101, i64 5
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %99, i64 6
  %131 = getelementptr inbounds i32*, i32** %101, i64 6
  %132 = bitcast i32** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i32** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i32*, i32** %99, i64 7
  %136 = getelementptr inbounds i32*, i32** %101, i64 7
  %137 = bitcast i32** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i32** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i32*, i32** %99, i64 8
  %141 = ptrtoint i32** %140 to i64
  %142 = getelementptr inbounds i32*, i32** %101, i64 8
  %143 = icmp eq i32** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint i32** %70 to i64
  %146 = load i32**, i32*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi i32** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast i32*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast i32*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq i32** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast i32** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  %156 = bitcast i32*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load i32**, i32*** %15, align 8
  %161 = getelementptr inbounds i32*, i32** %160, i64 1
  store i32** %161, i32*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque.201", %"class.std::__1::deque.201"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque.201", %"class.std::__1::deque.201"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast i32*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque.201", %"class.std::__1::deque.201"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast i32*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque.201", %"class.std::__1::deque.201"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast i32*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque.201"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to i32**
  %181 = inttoptr i64 %169 to i32**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #13
  %186 = tail call i8* @_Znwm(i64 4096) #14
  %187 = bitcast i32** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.203"* %163, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #13
  br label %460

188:                                              ; preds = %182
  %189 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #13
  %190 = tail call i8* @_Znwm(i64 4096) #14
  %191 = bitcast i32** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.203"* %163, i32** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #13
  %192 = load i32**, i32*** %167, align 8
  %193 = bitcast i32** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds i32*, i32** %192, i64 1
  store i32** %195, i32*** %167, align 8
  %196 = load i32**, i32*** %164, align 8
  %197 = load i32**, i32*** %172, align 8
  %198 = icmp eq i32** %196, %197
  %199 = ptrtoint i32** %197 to i64
  %200 = bitcast i32** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque.201", %"class.std::__1::deque.201"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load i32**, i32*** %202, align 8
  %204 = icmp ugt i32** %195, %203
  %205 = ptrtoint i32** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint i32** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds i32*, i32** %195, i64 %211
  %213 = ptrtoint i32** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast i32** %212 to i8*
  %219 = bitcast i32** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #13
  %220 = load i32**, i32*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi i32** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds i32*, i32** %212, i64 %215
  store i32** %223, i32*** %164, align 8
  %224 = getelementptr inbounds i32*, i32** %222, i64 %211
  store i32** %224, i32*** %167, align 8
  %225 = bitcast i32** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #16
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #14
  %237 = bitcast i8* %236 to i32**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds i32*, i32** %237, i64 %234
  %240 = ptrtoint i32** %239 to i64
  %241 = getelementptr inbounds i32*, i32** %237, i64 %230
  %242 = ptrtoint i32** %241 to i64
  %243 = ptrtoint i32** %195 to i64
  %244 = ptrtoint i32** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds i32*, i32** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi i32** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi i32** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast i32** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds i32*, i32** %256, i64 1
  %264 = ptrtoint i32** %263 to i64
  %265 = getelementptr inbounds i32*, i32** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !41

268:                                              ; preds = %255
  %269 = ptrtoint i32** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi i32** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi i32** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi i32** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi i32** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast i32** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds i32*, i32** %276, i64 1
  %283 = getelementptr inbounds i32*, i32** %278, i64 1
  %284 = bitcast i32** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast i32** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds i32*, i32** %276, i64 2
  %288 = getelementptr inbounds i32*, i32** %278, i64 2
  %289 = bitcast i32** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast i32** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds i32*, i32** %276, i64 3
  %293 = getelementptr inbounds i32*, i32** %278, i64 3
  %294 = bitcast i32** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast i32** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds i32*, i32** %276, i64 4
  %298 = getelementptr inbounds i32*, i32** %278, i64 4
  %299 = bitcast i32** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast i32** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds i32*, i32** %276, i64 5
  %303 = getelementptr inbounds i32*, i32** %278, i64 5
  %304 = bitcast i32** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast i32** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds i32*, i32** %276, i64 6
  %308 = getelementptr inbounds i32*, i32** %278, i64 6
  %309 = bitcast i32** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast i32** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds i32*, i32** %276, i64 7
  %313 = getelementptr inbounds i32*, i32** %278, i64 7
  %314 = bitcast i32** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast i32** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds i32*, i32** %276, i64 8
  %318 = ptrtoint i32** %317 to i64
  %319 = getelementptr inbounds i32*, i32** %278, i64 8
  %320 = icmp eq i32** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint i32** %247 to i64
  %323 = load i32**, i32*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi i32** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq i32** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast i32** %325 to i8*
  call void @_ZdlPv(i8* %330) #14
  %331 = bitcast i32*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load i32**, i32*** %164, align 8
  %336 = getelementptr inbounds i32*, i32** %335, i64 1
  store i32** %336, i32*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.498"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #13
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.498", %"struct.std::__1::__split_buffer.498"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.498", %"struct.std::__1::__split_buffer.498"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.498", %"struct.std::__1::__split_buffer.498"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.498", %"struct.std::__1::__split_buffer.498"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque.201", %"class.std::__1::deque.201"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.498"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store i32** null, i32*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.207"** %342 to %"class.std::__1::__compressed_pair.204"**
  store %"class.std::__1::__compressed_pair.204"* %346, %"class.std::__1::__compressed_pair.204"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #16
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #14
  %354 = bitcast i8* %353 to i32**
  %355 = bitcast %"struct.std::__1::__split_buffer.498"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds i32*, i32** %354, i64 %171
  store i32** %356, i32*** %340, align 8
  store i32** %356, i32*** %339, align 8
  %357 = getelementptr inbounds i32*, i32** %354, i64 %345
  store i32** %357, i32*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #14
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint i32** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint i32** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt i32** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds i32*, i32** %356, i64 %370
  store i32** %371, i32*** %340, align 8
  store i32** %371, i32*** %339, align 8
  %372 = ptrtoint i32** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #16
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.498"* %4 to i64*
  %382 = bitcast i32*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #14
  %386 = bitcast i8* %385 to i32**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds i32*, i32** %386, i64 %383
  %389 = ptrtoint i32** %388 to i64
  %390 = getelementptr inbounds i32*, i32** %386, i64 %377
  %391 = ptrtoint i32** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast i32*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast i32*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #14
  %394 = load i32**, i32*** %164, align 8
  %395 = load i32**, i32*** %167, align 8
  %396 = ptrtoint i32** %395 to i64
  %397 = ptrtoint i32** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi i32** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi i32** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi i32** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast i32** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds i32*, i32** %406, i64 1
  store i32** %408, i32*** %340, align 8
  %409 = icmp eq i32** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint i32** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.498"* %4 to i64*
  %413 = bitcast i32*** %339 to i64*
  %414 = bitcast i32*** %340 to i64*
  %415 = bitcast i32*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint i32** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.498"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast i32*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast i32*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast i32*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to i32**
  %441 = inttoptr i64 %434 to i32**
  %442 = icmp eq i32** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr i32*, i32** %441, i64 -1
  %445 = ptrtoint i32** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr i32*, i32** %441, i64 %448
  store i32** %449, i32*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #14
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #13
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi i32** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds i32*, i32** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.498"* nonnull %4, i32** dereferenceable(8) %457)
  %458 = load i32**, i32*** %167, align 8
  %459 = icmp eq i32** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.203"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.203", %"struct.std::__1::__split_buffer.203"* %0, i64 0, i32 2
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.203", %"struct.std::__1::__split_buffer.203"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  %9 = bitcast i32** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.203", %"struct.std::__1::__split_buffer.203"* %0, i64 0, i32 1
  %12 = load i32**, i32*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.203", %"struct.std::__1::__split_buffer.203"* %0, i64 0, i32 0
  %14 = load i32**, i32*** %13, align 8
  %15 = icmp ugt i32** %12, %14
  %16 = ptrtoint i32** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i32** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32*, i32** %12, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i32** %23 to i8*
  %30 = bitcast i32** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load i32**, i32*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i32** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i32*, i32** %23, i64 %26
  store i32** %34, i32*** %3, align 8
  %35 = getelementptr inbounds i32*, i32** %33, i64 %22
  store i32** %35, i32*** %11, align 8
  %36 = bitcast i32** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast i32*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.203"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #14
  %50 = bitcast i8* %49 to i32**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i32*, i32** %50, i64 %47
  %53 = ptrtoint i32** %52 to i64
  %54 = getelementptr inbounds i32*, i32** %50, i64 %43
  %55 = ptrtoint i32** %54 to i64
  %56 = ptrtoint i32** %12 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds i32*, i32** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi i32** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi i32** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast i32** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i32*, i32** %69, i64 1
  %77 = ptrtoint i32** %76 to i64
  %78 = getelementptr inbounds i32*, i32** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !42

81:                                               ; preds = %68
  %82 = ptrtoint i32** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi i32** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi i32** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi i32** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi i32** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast i32** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i32*, i32** %89, i64 1
  %96 = getelementptr inbounds i32*, i32** %91, i64 1
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i32** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds i32*, i32** %89, i64 2
  %101 = getelementptr inbounds i32*, i32** %91, i64 2
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast i32** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %89, i64 3
  %106 = getelementptr inbounds i32*, i32** %91, i64 3
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %89, i64 4
  %111 = getelementptr inbounds i32*, i32** %91, i64 4
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %89, i64 5
  %116 = getelementptr inbounds i32*, i32** %91, i64 5
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %89, i64 6
  %121 = getelementptr inbounds i32*, i32** %91, i64 6
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %89, i64 7
  %126 = getelementptr inbounds i32*, i32** %91, i64 7
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %89, i64 8
  %131 = ptrtoint i32** %130 to i64
  %132 = getelementptr inbounds i32*, i32** %91, i64 8
  %133 = icmp eq i32** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint i32** %60 to i64
  %136 = load i32**, i32*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi i32** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast i32*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq i32** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast i32** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = bitcast i32*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load i32**, i32*** %3, align 8
  %153 = getelementptr inbounds i32*, i32** %152, i64 1
  store i32** %153, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.203"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.203", %"struct.std::__1::__split_buffer.203"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.203", %"struct.std::__1::__split_buffer.203"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.203", %"struct.std::__1::__split_buffer.203"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.203", %"struct.std::__1::__split_buffer.203"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.203"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !43

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.498"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.498", %"struct.std::__1::__split_buffer.498"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.498", %"struct.std::__1::__split_buffer.498"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.498", %"struct.std::__1::__split_buffer.498"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.498", %"struct.std::__1::__split_buffer.498"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.498"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !44

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

declare void @_ZN8perfetto15trace_processor11ArgsTracker13BoundInserterC1EPS1_PNS0_6ColumnEj(%"class.perfetto::trace_processor::ArgsTracker::BoundInserter"*, %"class.perfetto::trace_processor::ArgsTracker"*, %"class.perfetto::trace_processor::Column"*, i32) unnamed_addr #3

declare dereferenceable(104) %"class.perfetto::trace_processor::RowMap"* @_ZNK8perfetto15trace_processor6Column7row_mapEv(%"class.perfetto::trace_processor::Column"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8perfetto15trace_processor6RowMap7IndexOfEj(%"class.perfetto::base::Optional.507"* noalias sret, %"class.perfetto::trace_processor::RowMap"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %115 [
    i32 0, label %6
    i32 1, label %22
    i32 2, label %87
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %2
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp ugt i32 %12, %2
  br i1 %13, label %18, label %14

14:                                               ; preds = %10, %6
  %15 = getelementptr inbounds %"class.perfetto::base::Optional.507", %"class.perfetto::base::Optional.507"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 4
  %16 = getelementptr inbounds %"class.perfetto::base::Optional.507", %"class.perfetto::base::Optional.507"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %union.anon.511* %16 to i8*
  store i8 0, i8* %17, align 4
  br label %120

18:                                               ; preds = %10
  %19 = sub i32 %2, %8
  %20 = getelementptr inbounds %"class.perfetto::base::Optional.507", %"class.perfetto::base::Optional.507"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %"class.perfetto::base::Optional.507", %"class.perfetto::base::Optional.507"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %19, i32* %21, align 4
  br label %120

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 4, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp ugt i32 %24, %2
  br i1 %25, label %26, label %83

26:                                               ; preds = %22
  %27 = lshr i32 %2, 9
  %28 = lshr i32 %2, 6
  %29 = and i32 %28, 7
  %30 = zext i32 %29 to i64
  %31 = and i32 %2, 63
  %32 = zext i32 %31 to i64
  %33 = zext i32 %27 to i64
  %34 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 4, i32 2, i32 0, i32 0
  %35 = load %"class.perfetto::trace_processor::BitVector::Block"*, %"class.perfetto::trace_processor::BitVector::Block"** %34, align 8
  %36 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %33, i32 0, i32 0, i64 %30, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = shl i64 1, %32
  %39 = and i64 %37, %38
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %83, label %41

41:                                               ; preds = %26
  %42 = icmp eq i32 %2, 0
  br i1 %42, label %79, label %43

43:                                               ; preds = %41
  %44 = add i32 %2, -1
  %45 = lshr i32 %44, 9
  %46 = lshr i32 %44, 6
  %47 = and i32 %46, 7
  %48 = zext i32 %47 to i64
  %49 = and i32 %44, 63
  %50 = zext i32 %45 to i64
  %51 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 4, i32 1, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 %50
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %47, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %43
  %57 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = tail call i64 @llvm.ctpop.i64(i64 %58) #13, !range !3
  %60 = trunc i64 %59 to i32
  %61 = icmp eq i32 %47, 1
  br i1 %61, label %62, label %121

62:                                               ; preds = %56, %121, %128, %135, %142, %149, %156, %43
  %63 = phi i32 [ 0, %43 ], [ %60, %56 ], [ %126, %121 ], [ %133, %128 ], [ %140, %135 ], [ %147, %142 ], [ %154, %149 ], [ %161, %156 ]
  %64 = add nuw nsw i32 %49, 1
  %65 = and i32 %64, 63
  %66 = zext i32 %65 to i64
  %67 = shl i64 1, %66
  %68 = lshr i32 %64, 6
  %69 = zext i32 %68 to i64
  %70 = lshr i64 %67, %69
  %71 = add i64 %70, -1
  %72 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 %48, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, %71
  %75 = tail call i64 @llvm.ctpop.i64(i64 %74) #13, !range !3
  %76 = trunc i64 %75 to i32
  %77 = add i32 %63, %54
  %78 = add i32 %77, %76
  br label %79

79:                                               ; preds = %41, %62
  %80 = phi i32 [ %78, %62 ], [ 0, %41 ]
  %81 = getelementptr inbounds %"class.perfetto::base::Optional.507", %"class.perfetto::base::Optional.507"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %81, align 4, !alias.scope !45
  %82 = getelementptr inbounds %"class.perfetto::base::Optional.507", %"class.perfetto::base::Optional.507"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %80, i32* %82, align 4, !alias.scope !45
  br label %120

83:                                               ; preds = %26, %22
  %84 = getelementptr inbounds %"class.perfetto::base::Optional.507", %"class.perfetto::base::Optional.507"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %84, align 4
  %85 = getelementptr inbounds %"class.perfetto::base::Optional.507", %"class.perfetto::base::Optional.507"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %86 = bitcast %union.anon.511* %85 to i8*
  store i8 0, i8* %86, align 4
  br label %120

87:                                               ; preds = %3
  %88 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 5, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  %90 = getelementptr inbounds %"class.perfetto::trace_processor::RowMap", %"class.perfetto::trace_processor::RowMap"* %1, i64 0, i32 5, i32 0, i32 1
  %91 = load i32*, i32** %90, align 8
  %92 = icmp eq i32* %89, %91
  br i1 %92, label %100, label %93

93:                                               ; preds = %87, %97
  %94 = phi i32* [ %98, %97 ], [ %89, %87 ]
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, %2
  br i1 %96, label %100, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds i32, i32* %94, i64 1
  %99 = icmp eq i32* %98, %91
  br i1 %99, label %111, label %93

100:                                              ; preds = %93, %87
  %101 = phi i32* [ %89, %87 ], [ %94, %93 ]
  %102 = icmp eq i32* %101, %91
  br i1 %102, label %111, label %103

103:                                              ; preds = %100
  %104 = ptrtoint i32* %89 to i64
  %105 = ptrtoint i32* %101 to i64
  %106 = sub i64 %105, %104
  %107 = lshr exact i64 %106, 2
  %108 = trunc i64 %107 to i32
  %109 = getelementptr inbounds %"class.perfetto::base::Optional.507", %"class.perfetto::base::Optional.507"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %109, align 4, !alias.scope !48
  %110 = getelementptr inbounds %"class.perfetto::base::Optional.507", %"class.perfetto::base::Optional.507"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %108, i32* %110, align 4, !alias.scope !48
  br label %120

111:                                              ; preds = %97, %100
  %112 = getelementptr inbounds %"class.perfetto::base::Optional.507", %"class.perfetto::base::Optional.507"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %112, align 4
  %113 = getelementptr inbounds %"class.perfetto::base::Optional.507", %"class.perfetto::base::Optional.507"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %114 = bitcast %union.anon.511* %113 to i8*
  store i8 0, i8* %114, align 4
  br label %120

115:                                              ; preds = %3
  %116 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.6, i64 0, i64 0))
  %117 = tail call i32* @__errno_location() #15
  %118 = load i32, i32* %117, align 4
  %119 = tail call i8* @strerror(i32 %118) #13
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %116, i32 309, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i32 %118, i8* %119) #13
  tail call void @llvm.trap()
  unreachable

120:                                              ; preds = %103, %111, %79, %83, %18, %14
  ret void

121:                                              ; preds = %56
  %122 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 1, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = tail call i64 @llvm.ctpop.i64(i64 %123) #13, !range !3
  %125 = trunc i64 %124 to i32
  %126 = add nuw nsw i32 %60, %125
  %127 = icmp eq i32 %47, 2
  br i1 %127, label %62, label %128

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 2, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = tail call i64 @llvm.ctpop.i64(i64 %130) #13, !range !3
  %132 = trunc i64 %131 to i32
  %133 = add nuw nsw i32 %126, %132
  %134 = icmp eq i32 %47, 3
  br i1 %134, label %62, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 3, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = tail call i64 @llvm.ctpop.i64(i64 %137) #13, !range !3
  %139 = trunc i64 %138 to i32
  %140 = add nuw nsw i32 %133, %139
  %141 = icmp eq i32 %47, 4
  br i1 %141, label %62, label %142

142:                                              ; preds = %135
  %143 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 4, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = tail call i64 @llvm.ctpop.i64(i64 %144) #13, !range !3
  %146 = trunc i64 %145 to i32
  %147 = add nuw nsw i32 %140, %146
  %148 = icmp eq i32 %47, 5
  br i1 %148, label %62, label %149

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 5, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = tail call i64 @llvm.ctpop.i64(i64 %151) #13, !range !3
  %153 = trunc i64 %152 to i32
  %154 = add nuw nsw i32 %147, %153
  %155 = icmp eq i32 %47, 6
  br i1 %155, label %62, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.perfetto::trace_processor::BitVector::Block", %"class.perfetto::trace_processor::BitVector::Block"* %35, i64 %50, i32 0, i32 0, i64 6, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = tail call i64 @llvm.ctpop.i64(i64 %158) #13, !range !3
  %160 = trunc i64 %159 to i32
  %161 = add i32 %154, %160
  br label %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.20"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.16"*, i64* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.524"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %5
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !3
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.20"* %25, null
  br i1 %26, label %54, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br label %29

29:                                               ; preds = %27, %49
  %30 = phi %"struct.std::__1::__hash_node_base.20"* [ %32, %49 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.20"* %32, null
  br i1 %33, label %54, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.20"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %28
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %40, %42, %44
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %49, label %54

49:                                               ; preds = %34, %46
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %32, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.20"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %6
  br i1 %53, label %145, label %29

54:                                               ; preds = %29, %46, %20, %5
  %55 = phi i64 [ %21, %20 ], [ -6148914691236517206, %5 ], [ %21, %46 ], [ %21, %29 ]
  %56 = tail call i8* @_Znwm(i64 32) #14, !noalias !51
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8, !noalias !51
  %60 = bitcast i8* %57 to i64*
  %61 = load i64, i64* %59, align 8, !noalias !51
  store i64 %61, i64* %60, align 8, !noalias !51
  %62 = getelementptr inbounds i8, i8* %56, i64 24
  %63 = bitcast i8* %62 to i32*
  store i32 0, i32* %63, align 8, !noalias !51
  %64 = getelementptr inbounds i8, i8* %56, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %6, i64* %65, align 8, !noalias !51
  %66 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base.20"**
  store %"struct.std::__1::__hash_node_base.20"* null, %"struct.std::__1::__hash_node_base.20"** %66, align 8, !noalias !51
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %8 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %9, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %54
  %78 = shl i64 %8, 1
  %79 = icmp ult i64 %8, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !3
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #13
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.16"* %0, i64 %89)
  %90 = load i64, i64* %7, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #13, !range !3
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, -1
  %95 = and i64 %94, %6
  br label %100

96:                                               ; preds = %77
  %97 = icmp ult i64 %6, %90
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %6, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %54
  %101 = phi i64 [ %8, %54 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %55, %54 ], [ %95, %93 ], [ %6, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.20"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base.20"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %56 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base.20"* %109 to i8**
  store i8* %56, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base.20"* %109, %"struct.std::__1::__hash_node_base.20"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.20"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base.20"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #13, !range !3
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base.20"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base.20"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %56 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.20"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %56, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base.20"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %49, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %49 ]
  %147 = phi %"struct.std::__1::__hash_node_base.20"* [ %142, %141 ], [ %32, %49 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base.20"*, i8 } undef, %"struct.std::__1::__hash_node_base.20"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.20"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base.20"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.16"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.16"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.16"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.16"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.16"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.20"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.20"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.22", %"class.std::__1::__bucket_list_deallocator.22"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.20"* null, %"struct.std::__1::__hash_node_base.20"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !54

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.20"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.20"* null, %"struct.std::__1::__hash_node_base.20"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.20"* null, %"struct.std::__1::__hash_node_base.20"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.20"* null, %"struct.std::__1::__hash_node_base.20"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.20"* null, %"struct.std::__1::__hash_node_base.20"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.20"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.20"* %36, %"struct.std::__1::__hash_node_base.20"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.20"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.20"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.20"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.20"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.20"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.20"* %101 to i64*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.20"* %82, %"struct.std::__1::__hash_node_base.20"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.20"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.20"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.20"* %110 to i64*
  %112 = load i64, i64* %102, align 8
  %113 = load i64, i64* %111, align 8
  %114 = icmp eq i64 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.20"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.20"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.20"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.20"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.20"* %80, %"struct.std::__1::__hash_node_base.20"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.20"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.20"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.20"** null, %"struct.std::__1::__hash_node_base.20"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.20"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.20"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.22", %"class.std::__1::__bucket_list_deallocator.22"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId"* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.533"* dereferenceable(8), %"class.std::__1::tuple.524"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId", %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %56, label %12

12:                                               ; preds = %5
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #13, !range !3
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, 4294967295
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ugt i64 %10, %8
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %15, %18, %20
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %56, label %29

29:                                               ; preds = %22
  %30 = add i64 %10, -1
  br label %31

31:                                               ; preds = %29, %51
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %34, %51 ], [ %27, %29 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %34, null
  br i1 %35, label %56, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %8
  br i1 %40, label %51, label %41

41:                                               ; preds = %36
  br i1 %14, label %44, label %42

42:                                               ; preds = %41
  %43 = and i64 %39, %30
  br label %48

44:                                               ; preds = %41
  %45 = icmp ult i64 %39, %10
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %39, %10
  br label %48

48:                                               ; preds = %42, %44, %46
  %49 = phi i64 [ %43, %42 ], [ %47, %46 ], [ %39, %44 ]
  %50 = icmp eq i64 %49, %23
  br i1 %50, label %51, label %56

51:                                               ; preds = %36, %48
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %7, %54
  br i1 %55, label %147, label %31

56:                                               ; preds = %31, %48, %22, %5
  %57 = phi i64 [ %23, %22 ], [ -6148914691236517206, %5 ], [ %23, %48 ], [ %23, %31 ]
  %58 = tail call i8* @_Znwm(i64 48) #14, !noalias !55
  %59 = getelementptr inbounds i8, i8* %58, i64 16
  %60 = getelementptr inbounds %"class.std::__1::tuple.533", %"class.std::__1::tuple.533"* %3, i64 0, i32 0, i32 0, i32 0
  %61 = load %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId"*, %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId"** %60, align 8, !noalias !55
  %62 = getelementptr inbounds %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId", %"struct.perfetto::trace_processor::tables::TrackTable::DefinedId"* %61, i64 0, i32 0, i32 0
  %63 = bitcast i8* %59 to i32*
  %64 = load i32, i32* %62, align 4, !noalias !55
  store i32 %64, i32* %63, align 8, !noalias !55
  %65 = getelementptr inbounds i8, i8* %58, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #13, !noalias !55
  %66 = getelementptr inbounds i8, i8* %58, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %8, i64* %67, align 8, !noalias !55
  %68 = bitcast i8* %58 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %68, align 8, !noalias !55
  %69 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %10 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %11, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %56
  %80 = shl i64 %10, 1
  %81 = icmp ult i64 %10, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %10) #13, !range !3
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #13
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %91)
  %92 = load i64, i64* %9, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #13, !range !3
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %8
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %8
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %8, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %56
  %103 = phi i64 [ %10, %56 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %57, %56 ], [ %97, %95 ], [ %8, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %58 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i8**
  store i8* %58, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base"* %111, %"struct.std::__1::__hash_node_base"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #13, !range !3
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %58 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %58, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %58 to %"struct.std::__1::__hash_node_base"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %51, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %51 ]
  %149 = phi %"struct.std::__1::__hash_node_base"* [ %144, %143 ], [ %34, %51 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !58

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = load i32, i32* %102, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE(%"class.std::__1::unique_ptr.525"* noalias sret, %"class.std::__1::__hash_table.16"*, %"struct.std::__1::__hash_node_base.20"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.20"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.20"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.20"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.27"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.20"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.20"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.20"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.20"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.20"* null, %"struct.std::__1::__hash_node_base.20"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.20"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.20"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20", %"struct.std::__1::__hash_node_base.20"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.20"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.20"**, %"struct.std::__1::__hash_node_base.20"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.20"*, %"struct.std::__1::__hash_node_base.20"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.20"* %25, %"struct.std::__1::__hash_node_base.20"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.20"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.20"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.20"* null, %"struct.std::__1::__hash_node_base.20"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.16", %"class.std::__1::__hash_table.16"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.20"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.525"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.525", %"class.std::__1::unique_ptr.525"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.30"** %98 to %"class.std::__1::__compressed_pair.27"**
  store %"class.std::__1::__compressed_pair.27"* %30, %"class.std::__1::__compressed_pair.27"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.525", %"class.std::__1::unique_ptr.525"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.47"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.43"*, %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.perfetto::trace_processor::FlowTracker::V1FlowId", %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 255
  %6 = xor i64 %5, -3750763034362895579
  %7 = mul i64 %6, 1099511628211
  %8 = lshr i64 %4, 8
  %9 = and i64 %8, 255
  %10 = xor i64 %7, %9
  %11 = mul i64 %10, 1099511628211
  %12 = lshr i64 %4, 16
  %13 = and i64 %12, 255
  %14 = xor i64 %11, %13
  %15 = mul i64 %14, 1099511628211
  %16 = lshr i64 %4, 24
  %17 = and i64 %16, 255
  %18 = xor i64 %15, %17
  %19 = mul i64 %18, 1099511628211
  %20 = lshr i64 %4, 32
  %21 = and i64 %20, 255
  %22 = xor i64 %19, %21
  %23 = mul i64 %22, 1099511628211
  %24 = lshr i64 %4, 40
  %25 = and i64 %24, 255
  %26 = xor i64 %23, %25
  %27 = mul i64 %26, 1099511628211
  %28 = lshr i64 %4, 48
  %29 = and i64 %28, 255
  %30 = xor i64 %27, %29
  %31 = mul i64 %30, 1099511628211
  %32 = lshr i64 %4, 56
  %33 = xor i64 %31, %32
  %34 = mul i64 %33, 1099511628211
  %35 = getelementptr inbounds %"struct.perfetto::trace_processor::FlowTracker::V1FlowId", %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* %1, i64 0, i32 1, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 255
  %38 = zext i32 %37 to i64
  %39 = xor i64 %34, %38
  %40 = mul i64 %39, 1099511628211
  %41 = lshr i32 %36, 8
  %42 = and i32 %41, 255
  %43 = zext i32 %42 to i64
  %44 = xor i64 %40, %43
  %45 = mul i64 %44, 1099511628211
  %46 = lshr i32 %36, 16
  %47 = and i32 %46, 255
  %48 = zext i32 %47 to i64
  %49 = xor i64 %45, %48
  %50 = mul i64 %49, 1099511628211
  %51 = lshr i32 %36, 24
  %52 = zext i32 %51 to i64
  %53 = xor i64 %50, %52
  %54 = mul i64 %53, 1099511628211
  %55 = getelementptr inbounds %"struct.perfetto::trace_processor::FlowTracker::V1FlowId", %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* %1, i64 0, i32 2, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, 255
  %58 = zext i32 %57 to i64
  %59 = xor i64 %54, %58
  %60 = mul i64 %59, 1099511628211
  %61 = lshr i32 %56, 8
  %62 = and i32 %61, 255
  %63 = zext i32 %62 to i64
  %64 = xor i64 %60, %63
  %65 = mul i64 %64, 1099511628211
  %66 = lshr i32 %56, 16
  %67 = and i32 %66, 255
  %68 = zext i32 %67 to i64
  %69 = xor i64 %65, %68
  %70 = mul i64 %69, 1099511628211
  %71 = lshr i32 %56, 24
  %72 = zext i32 %71 to i64
  %73 = xor i64 %70, %72
  %74 = mul i64 %73, 1099511628211
  %75 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %136, label %78

78:                                               ; preds = %2
  %79 = tail call i64 @llvm.ctpop.i64(i64 %76) #13, !range !3
  %80 = icmp ugt i64 %79, 1
  br i1 %80, label %84, label %81

81:                                               ; preds = %78
  %82 = add i64 %76, -1
  %83 = and i64 %74, %82
  br label %88

84:                                               ; preds = %78
  %85 = icmp ult i64 %74, %76
  br i1 %85, label %88, label %86

86:                                               ; preds = %84
  %87 = urem i64 %74, %76
  br label %88

88:                                               ; preds = %81, %84, %86
  %89 = phi i64 [ %83, %81 ], [ %87, %86 ], [ %74, %84 ]
  %90 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %90, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %91, i64 %89
  %93 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %92, align 8
  %94 = icmp eq %"struct.std::__1::__hash_node_base.47"* %93, null
  br i1 %94, label %136, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %93, i64 0, i32 0
  %97 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base.47"* %97, null
  br i1 %98, label %136, label %99

99:                                               ; preds = %95
  %100 = add i64 %76, -1
  br label %101

101:                                              ; preds = %99, %132
  %102 = phi %"struct.std::__1::__hash_node_base.47"* [ %97, %99 ], [ %134, %132 ]
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %102, i64 1
  %104 = bitcast %"struct.std::__1::__hash_node_base.47"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = icmp eq i64 %105, %74
  br i1 %106, label %117, label %107

107:                                              ; preds = %101
  br i1 %80, label %110, label %108

108:                                              ; preds = %107
  %109 = and i64 %105, %100
  br label %114

110:                                              ; preds = %107
  %111 = icmp ult i64 %105, %76
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = urem i64 %105, %76
  br label %114

114:                                              ; preds = %108, %110, %112
  %115 = phi i64 [ %109, %108 ], [ %113, %112 ], [ %105, %110 ]
  %116 = icmp eq i64 %115, %89
  br i1 %116, label %132, label %136

117:                                              ; preds = %101
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %102, i64 2
  %119 = bitcast %"struct.std::__1::__hash_node_base.47"* %118 to %"struct.std::__1::__hash_value_type.519"*
  %120 = bitcast %"struct.std::__1::__hash_node_base.47"* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = icmp eq i64 %4, %121
  br i1 %122, label %123, label %132

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %102, i64 3
  %125 = bitcast %"struct.std::__1::__hash_node_base.47"* %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, %36
  br i1 %127, label %128, label %132

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"struct.std::__1::__hash_value_type.519", %"struct.std::__1::__hash_value_type.519"* %119, i64 0, i32 0, i32 0, i32 2, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, %56
  br i1 %131, label %136, label %132

132:                                              ; preds = %117, %123, %114, %128
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %102, i64 0, i32 0
  %134 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %133, align 8
  %135 = icmp eq %"struct.std::__1::__hash_node_base.47"* %134, null
  br i1 %135, label %136, label %101

136:                                              ; preds = %128, %132, %114, %95, %2, %88
  %137 = phi %"struct.std::__1::__hash_node_base.47"* [ null, %88 ], [ null, %2 ], [ null, %95 ], [ %102, %128 ], [ null, %132 ], [ null, %114 ]
  ret %"struct.std::__1::__hash_node_base.47"* %137
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.73"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor11FlowTracker8V1FlowIdEEENS_22__unordered_map_hasherImS6_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.69"*, i64* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.524"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.69", %"class.std::__1::__hash_table.69"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %5
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !3
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.69", %"class.std::__1::__hash_table.69"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.73"* %25, null
  br i1 %26, label %54, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br label %29

29:                                               ; preds = %27, %49
  %30 = phi %"struct.std::__1::__hash_node_base.73"* [ %32, %49 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base.73"* %32, null
  br i1 %33, label %54, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.73"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %28
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %40, %42, %44
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %49, label %54

49:                                               ; preds = %34, %46
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %32, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.73"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %6
  br i1 %53, label %144, label %29

54:                                               ; preds = %29, %46, %20, %5
  %55 = phi i64 [ %21, %20 ], [ -6148914691236517206, %5 ], [ %21, %46 ], [ %21, %29 ]
  %56 = tail call i8* @_Znwm(i64 40) #14, !noalias !59
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8, !noalias !59
  %60 = bitcast i8* %57 to i64*
  %61 = load i64, i64* %59, align 8, !noalias !59
  store i64 %61, i64* %60, align 8, !noalias !59
  %62 = getelementptr inbounds i8, i8* %56, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #13, !noalias !59
  %63 = getelementptr inbounds i8, i8* %56, i64 8
  %64 = bitcast i8* %63 to i64*
  store i64 %6, i64* %64, align 8, !noalias !59
  %65 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base.73"**
  store %"struct.std::__1::__hash_node_base.73"* null, %"struct.std::__1::__hash_node_base.73"** %65, align 8, !noalias !59
  %66 = getelementptr inbounds %"class.std::__1::__hash_table.69", %"class.std::__1::__hash_table.69"* %0, i64 0, i32 2, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  %69 = uitofp i64 %68 to float
  %70 = uitofp i64 %8 to float
  %71 = getelementptr inbounds %"class.std::__1::__hash_table.69", %"class.std::__1::__hash_table.69"* %0, i64 0, i32 3, i32 0, i32 0
  %72 = load float, float* %71, align 4
  %73 = fmul float %72, %70
  %74 = fcmp olt float %73, %69
  %75 = or i1 %9, %74
  br i1 %75, label %76, label %99

76:                                               ; preds = %54
  %77 = shl i64 %8, 1
  %78 = icmp ult i64 %8, 3
  %79 = tail call i64 @llvm.ctpop.i64(i64 %8) #13, !range !3
  %80 = icmp ugt i64 %79, 1
  %81 = or i1 %78, %80
  %82 = zext i1 %81 to i64
  %83 = or i64 %77, %82
  %84 = fdiv float %69, %72
  %85 = tail call float @llvm.ceil.f32(float %84) #13
  %86 = fptoui float %85 to i64
  %87 = icmp ult i64 %83, %86
  %88 = select i1 %87, i64 %86, i64 %83
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor11FlowTracker8V1FlowIdEEENS_22__unordered_map_hasherImS6_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.69"* %0, i64 %88)
  %89 = load i64, i64* %7, align 8
  %90 = tail call i64 @llvm.ctpop.i64(i64 %89) #13, !range !3
  %91 = icmp ugt i64 %90, 1
  br i1 %91, label %95, label %92

92:                                               ; preds = %76
  %93 = add i64 %89, -1
  %94 = and i64 %93, %6
  br label %99

95:                                               ; preds = %76
  %96 = icmp ult i64 %6, %89
  br i1 %96, label %99, label %97

97:                                               ; preds = %95
  %98 = urem i64 %6, %89
  br label %99

99:                                               ; preds = %97, %95, %92, %54
  %100 = phi i64 [ %8, %54 ], [ %89, %92 ], [ %89, %95 ], [ %89, %97 ]
  %101 = phi i64 [ %55, %54 ], [ %94, %92 ], [ %6, %95 ], [ %98, %97 ]
  %102 = getelementptr inbounds %"class.std::__1::__hash_table.69", %"class.std::__1::__hash_table.69"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %103, i64 %101
  %105 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.73"* %105, null
  br i1 %106, label %107, label %133

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.std::__1::__hash_table.69", %"class.std::__1::__hash_table.69"* %0, i64 0, i32 1, i32 0, i32 0
  %109 = bitcast %"struct.std::__1::__hash_node_base.73"* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast i8* %56 to i64*
  store i64 %110, i64* %111, align 8
  %112 = bitcast %"struct.std::__1::__hash_node_base.73"* %108 to i8**
  store i8* %56, i8** %112, align 8
  store %"struct.std::__1::__hash_node_base.73"* %108, %"struct.std::__1::__hash_node_base.73"** %104, align 8
  %113 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %65, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base.73"* %113, null
  br i1 %114, label %140, label %115

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %113, i64 1
  %117 = bitcast %"struct.std::__1::__hash_node_base.73"* %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = tail call i64 @llvm.ctpop.i64(i64 %100) #13, !range !3
  %120 = icmp ugt i64 %119, 1
  br i1 %120, label %124, label %121

121:                                              ; preds = %115
  %122 = add i64 %100, -1
  %123 = and i64 %118, %122
  br label %128

124:                                              ; preds = %115
  %125 = icmp ult i64 %118, %100
  br i1 %125, label %128, label %126

126:                                              ; preds = %124
  %127 = urem i64 %118, %100
  br label %128

128:                                              ; preds = %121, %124, %126
  %129 = phi i64 [ %123, %121 ], [ %127, %126 ], [ %118, %124 ]
  %130 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %102, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %130, i64 %129
  %132 = bitcast %"struct.std::__1::__hash_node_base.73"** %131 to i8**
  br label %138

133:                                              ; preds = %99
  %134 = bitcast %"struct.std::__1::__hash_node_base.73"* %105 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast i8* %56 to i64*
  store i64 %135, i64* %136, align 8
  %137 = bitcast %"struct.std::__1::__hash_node_base.73"* %105 to i8**
  br label %138

138:                                              ; preds = %128, %133
  %139 = phi i8** [ %137, %133 ], [ %132, %128 ]
  store i8* %56, i8** %139, align 8
  br label %140

140:                                              ; preds = %138, %107
  %141 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base.73"*
  %142 = load i64, i64* %66, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %66, align 8
  br label %144

144:                                              ; preds = %49, %140
  %145 = phi i8 [ 1, %140 ], [ 0, %49 ]
  %146 = phi %"struct.std::__1::__hash_node_base.73"* [ %141, %140 ], [ %32, %49 ]
  %147 = insertvalue { %"struct.std::__1::__hash_node_base.73"*, i8 } undef, %"struct.std::__1::__hash_node_base.73"* %146, 0
  %148 = insertvalue { %"struct.std::__1::__hash_node_base.73"*, i8 } %147, i8 %145, 1
  ret { %"struct.std::__1::__hash_node_base.73"*, i8 } %148
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor11FlowTracker8V1FlowIdEEENS_22__unordered_map_hasherImS6_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.69"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.69", %"class.std::__1::__hash_table.69"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor11FlowTracker8V1FlowIdEEENS_22__unordered_map_hasherImS6_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.69"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.69", %"class.std::__1::__hash_table.69"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.69", %"class.std::__1::__hash_table.69"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor11FlowTracker8V1FlowIdEEENS_22__unordered_map_hasherImS6_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.69"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor11FlowTracker8V1FlowIdEEENS_22__unordered_map_hasherImS6_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.69"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.69", %"class.std::__1::__hash_table.69"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.69", %"class.std::__1::__hash_table.69"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.69"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.73"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.73"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.75", %"class.std::__1::__bucket_list_deallocator.75"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.73"* null, %"struct.std::__1::__hash_node_base.73"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !62

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.69", %"class.std::__1::__hash_table.69"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.73"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.73"* null, %"struct.std::__1::__hash_node_base.73"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.73"* null, %"struct.std::__1::__hash_node_base.73"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.73"* null, %"struct.std::__1::__hash_node_base.73"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.73"* null, %"struct.std::__1::__hash_node_base.73"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.73"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.73"* %36, %"struct.std::__1::__hash_node_base.73"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.73"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.73"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.73"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.73"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.73"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.73"* %101 to i64*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.73"* %82, %"struct.std::__1::__hash_node_base.73"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.73"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.73"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.73"* %110 to i64*
  %112 = load i64, i64* %102, align 8
  %113 = load i64, i64* %111, align 8
  %114 = icmp eq i64 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.73"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.73"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.73"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.73"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.73"* %80, %"struct.std::__1::__hash_node_base.73"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.73"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.73", %"struct.std::__1::__hash_node_base.73"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.73"*, %"struct.std::__1::__hash_node_base.73"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.73"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.69", %"class.std::__1::__hash_table.69"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.73"**, %"struct.std::__1::__hash_node_base.73"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.73"** null, %"struct.std::__1::__hash_node_base.73"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.73"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.73"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #14
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.75", %"class.std::__1::__bucket_list_deallocator.75"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.47"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.43"*, %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* dereferenceable(16), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.558"* dereferenceable(8), %"class.std::__1::tuple.524"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.perfetto::trace_processor::FlowTracker::V1FlowId", %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* %1, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 255
  %9 = xor i64 %8, -3750763034362895579
  %10 = mul i64 %9, 1099511628211
  %11 = lshr i64 %7, 8
  %12 = and i64 %11, 255
  %13 = xor i64 %10, %12
  %14 = mul i64 %13, 1099511628211
  %15 = lshr i64 %7, 16
  %16 = and i64 %15, 255
  %17 = xor i64 %14, %16
  %18 = mul i64 %17, 1099511628211
  %19 = lshr i64 %7, 24
  %20 = and i64 %19, 255
  %21 = xor i64 %18, %20
  %22 = mul i64 %21, 1099511628211
  %23 = lshr i64 %7, 32
  %24 = and i64 %23, 255
  %25 = xor i64 %22, %24
  %26 = mul i64 %25, 1099511628211
  %27 = lshr i64 %7, 40
  %28 = and i64 %27, 255
  %29 = xor i64 %26, %28
  %30 = mul i64 %29, 1099511628211
  %31 = lshr i64 %7, 48
  %32 = and i64 %31, 255
  %33 = xor i64 %30, %32
  %34 = mul i64 %33, 1099511628211
  %35 = lshr i64 %7, 56
  %36 = xor i64 %34, %35
  %37 = mul i64 %36, 1099511628211
  %38 = getelementptr inbounds %"struct.perfetto::trace_processor::FlowTracker::V1FlowId", %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* %1, i64 0, i32 1, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = and i32 %39, 255
  %41 = zext i32 %40 to i64
  %42 = xor i64 %37, %41
  %43 = mul i64 %42, 1099511628211
  %44 = lshr i32 %39, 8
  %45 = and i32 %44, 255
  %46 = zext i32 %45 to i64
  %47 = xor i64 %43, %46
  %48 = mul i64 %47, 1099511628211
  %49 = lshr i32 %39, 16
  %50 = and i32 %49, 255
  %51 = zext i32 %50 to i64
  %52 = xor i64 %48, %51
  %53 = mul i64 %52, 1099511628211
  %54 = lshr i32 %39, 24
  %55 = zext i32 %54 to i64
  %56 = xor i64 %53, %55
  %57 = mul i64 %56, 1099511628211
  %58 = getelementptr inbounds %"struct.perfetto::trace_processor::FlowTracker::V1FlowId", %"struct.perfetto::trace_processor::FlowTracker::V1FlowId"* %1, i64 0, i32 2, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = and i32 %59, 255
  %61 = zext i32 %60 to i64
  %62 = xor i64 %57, %61
  %63 = mul i64 %62, 1099511628211
  %64 = lshr i32 %59, 8
  %65 = and i32 %64, 255
  %66 = zext i32 %65 to i64
  %67 = xor i64 %63, %66
  %68 = mul i64 %67, 1099511628211
  %69 = lshr i32 %59, 16
  %70 = and i32 %69, 255
  %71 = zext i32 %70 to i64
  %72 = xor i64 %68, %71
  %73 = mul i64 %72, 1099511628211
  %74 = lshr i32 %59, 24
  %75 = zext i32 %74 to i64
  %76 = xor i64 %73, %75
  %77 = mul i64 %76, 1099511628211
  %78 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %139, label %81

81:                                               ; preds = %5
  %82 = tail call i64 @llvm.ctpop.i64(i64 %79) #13, !range !3
  %83 = icmp ugt i64 %82, 1
  br i1 %83, label %87, label %84

84:                                               ; preds = %81
  %85 = add i64 %79, -1
  %86 = and i64 %77, %85
  br label %91

87:                                               ; preds = %81
  %88 = icmp ult i64 %77, %79
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = urem i64 %77, %79
  br label %91

91:                                               ; preds = %84, %87, %89
  %92 = phi i64 [ %86, %84 ], [ %90, %89 ], [ %77, %87 ]
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %93, align 8
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %94, i64 %92
  %96 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %95, align 8
  %97 = icmp eq %"struct.std::__1::__hash_node_base.47"* %96, null
  br i1 %97, label %139, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %96, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.47"* %100, null
  br i1 %101, label %139, label %102

102:                                              ; preds = %98
  %103 = add i64 %79, -1
  br label %104

104:                                              ; preds = %102, %135
  %105 = phi %"struct.std::__1::__hash_node_base.47"* [ %100, %102 ], [ %137, %135 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %105, i64 1
  %107 = bitcast %"struct.std::__1::__hash_node_base.47"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, %77
  br i1 %109, label %120, label %110

110:                                              ; preds = %104
  br i1 %83, label %113, label %111

111:                                              ; preds = %110
  %112 = and i64 %108, %103
  br label %117

113:                                              ; preds = %110
  %114 = icmp ult i64 %108, %79
  br i1 %114, label %117, label %115

115:                                              ; preds = %113
  %116 = urem i64 %108, %79
  br label %117

117:                                              ; preds = %111, %113, %115
  %118 = phi i64 [ %112, %111 ], [ %116, %115 ], [ %108, %113 ]
  %119 = icmp eq i64 %118, %92
  br i1 %119, label %120, label %139

120:                                              ; preds = %104, %117
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %105, i64 2
  %122 = bitcast %"struct.std::__1::__hash_node_base.47"* %121 to %"struct.std::__1::__hash_value_type.519"*
  %123 = bitcast %"struct.std::__1::__hash_node_base.47"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = icmp eq i64 %7, %124
  br i1 %125, label %126, label %135

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %105, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base.47"* %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, %39
  br i1 %130, label %131, label %135

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"struct.std::__1::__hash_value_type.519", %"struct.std::__1::__hash_value_type.519"* %122, i64 0, i32 0, i32 0, i32 2, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, %59
  br i1 %134, label %228, label %135

135:                                              ; preds = %126, %120, %131
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %105, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.47"* %137, null
  br i1 %138, label %139, label %104

139:                                              ; preds = %117, %135, %98, %91, %5
  %140 = phi i64 [ %92, %91 ], [ -6148914691236517206, %5 ], [ %92, %98 ], [ %92, %135 ], [ %92, %117 ]
  %141 = tail call i8* @_Znwm(i64 40) #14, !noalias !63
  %142 = getelementptr inbounds i8, i8* %141, i64 16
  %143 = bitcast %"class.std::__1::tuple.558"* %3 to i8**
  %144 = load i8*, i8** %143, align 8, !noalias !63
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %144, i64 16, i1 false) #13, !noalias !63
  %145 = getelementptr inbounds i8, i8* %141, i64 32
  %146 = bitcast i8* %145 to i64*
  store i64 0, i64* %146, align 8, !noalias !63
  %147 = getelementptr inbounds i8, i8* %141, i64 8
  %148 = bitcast i8* %147 to i64*
  store i64 %77, i64* %148, align 8, !noalias !63
  %149 = bitcast i8* %141 to %"struct.std::__1::__hash_node_base.47"**
  store %"struct.std::__1::__hash_node_base.47"* null, %"struct.std::__1::__hash_node_base.47"** %149, align 8, !noalias !63
  %150 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 2, i32 0, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, 1
  %153 = uitofp i64 %152 to float
  %154 = uitofp i64 %79 to float
  %155 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 3, i32 0, i32 0
  %156 = load float, float* %155, align 4
  %157 = fmul float %156, %154
  %158 = fcmp olt float %157, %153
  %159 = or i1 %80, %158
  br i1 %159, label %160, label %183

160:                                              ; preds = %139
  %161 = shl i64 %79, 1
  %162 = icmp ult i64 %79, 3
  %163 = tail call i64 @llvm.ctpop.i64(i64 %79) #13, !range !3
  %164 = icmp ugt i64 %163, 1
  %165 = or i1 %162, %164
  %166 = zext i1 %165 to i64
  %167 = or i64 %161, %166
  %168 = fdiv float %153, %156
  %169 = tail call float @llvm.ceil.f32(float %168) #13
  %170 = fptoui float %169 to i64
  %171 = icmp ult i64 %167, %170
  %172 = select i1 %171, i64 %170, i64 %167
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.43"* %0, i64 %172)
  %173 = load i64, i64* %78, align 8
  %174 = tail call i64 @llvm.ctpop.i64(i64 %173) #13, !range !3
  %175 = icmp ugt i64 %174, 1
  br i1 %175, label %179, label %176

176:                                              ; preds = %160
  %177 = add i64 %173, -1
  %178 = and i64 %177, %77
  br label %183

179:                                              ; preds = %160
  %180 = icmp ult i64 %77, %173
  br i1 %180, label %183, label %181

181:                                              ; preds = %179
  %182 = urem i64 %77, %173
  br label %183

183:                                              ; preds = %181, %179, %176, %139
  %184 = phi i64 [ %79, %139 ], [ %173, %176 ], [ %173, %179 ], [ %173, %181 ]
  %185 = phi i64 [ %140, %139 ], [ %178, %176 ], [ %77, %179 ], [ %182, %181 ]
  %186 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %187 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %186, align 8
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %187, i64 %185
  %189 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %188, align 8
  %190 = icmp eq %"struct.std::__1::__hash_node_base.47"* %189, null
  br i1 %190, label %191, label %217

191:                                              ; preds = %183
  %192 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 1, i32 0, i32 0
  %193 = bitcast %"struct.std::__1::__hash_node_base.47"* %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast i8* %141 to i64*
  store i64 %194, i64* %195, align 8
  %196 = bitcast %"struct.std::__1::__hash_node_base.47"* %192 to i8**
  store i8* %141, i8** %196, align 8
  store %"struct.std::__1::__hash_node_base.47"* %192, %"struct.std::__1::__hash_node_base.47"** %188, align 8
  %197 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %149, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.47"* %197, null
  br i1 %198, label %224, label %199

199:                                              ; preds = %191
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %197, i64 1
  %201 = bitcast %"struct.std::__1::__hash_node_base.47"* %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = tail call i64 @llvm.ctpop.i64(i64 %184) #13, !range !3
  %204 = icmp ugt i64 %203, 1
  br i1 %204, label %208, label %205

205:                                              ; preds = %199
  %206 = add i64 %184, -1
  %207 = and i64 %202, %206
  br label %212

208:                                              ; preds = %199
  %209 = icmp ult i64 %202, %184
  br i1 %209, label %212, label %210

210:                                              ; preds = %208
  %211 = urem i64 %202, %184
  br label %212

212:                                              ; preds = %205, %208, %210
  %213 = phi i64 [ %207, %205 ], [ %211, %210 ], [ %202, %208 ]
  %214 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %186, align 8
  %215 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %214, i64 %213
  %216 = bitcast %"struct.std::__1::__hash_node_base.47"** %215 to i8**
  br label %222

217:                                              ; preds = %183
  %218 = bitcast %"struct.std::__1::__hash_node_base.47"* %189 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = bitcast i8* %141 to i64*
  store i64 %219, i64* %220, align 8
  %221 = bitcast %"struct.std::__1::__hash_node_base.47"* %189 to i8**
  br label %222

222:                                              ; preds = %212, %217
  %223 = phi i8** [ %221, %217 ], [ %216, %212 ]
  store i8* %141, i8** %223, align 8
  br label %224

224:                                              ; preds = %222, %191
  %225 = bitcast i8* %141 to %"struct.std::__1::__hash_node_base.47"*
  %226 = load i64, i64* %150, align 8
  %227 = add i64 %226, 1
  store i64 %227, i64* %150, align 8
  br label %228

228:                                              ; preds = %131, %224
  %229 = phi i8 [ 1, %224 ], [ 0, %131 ]
  %230 = phi %"struct.std::__1::__hash_node_base.47"* [ %225, %224 ], [ %105, %131 ]
  %231 = insertvalue { %"struct.std::__1::__hash_node_base.47"*, i8 } undef, %"struct.std::__1::__hash_node_base.47"* %230, 0
  %232 = insertvalue { %"struct.std::__1::__hash_node_base.47"*, i8 } %231, i8 %229, 1
  ret { %"struct.std::__1::__hash_node_base.47"*, i8 } %232
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.43"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.43"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.43"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.43"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %150, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.43"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.47"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.47"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.49", %"class.std::__1::__bucket_list_deallocator.49"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.47"* null, %"struct.std::__1::__hash_node_base.47"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !66

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.47"* %38, null
  br i1 %39, label %158, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.47"* null, %"struct.std::__1::__hash_node_base.47"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.47"* null, %"struct.std::__1::__hash_node_base.47"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.47"* null, %"struct.std::__1::__hash_node_base.47"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.47"* null, %"struct.std::__1::__hash_node_base.47"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.47"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.47"* %36, %"struct.std::__1::__hash_node_base.47"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.47"* %75, null
  br i1 %76, label %158, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %144
  %80 = phi %"struct.std::__1::__hash_node_base.47"* [ %75, %77 ], [ %148, %144 ]
  %81 = phi i64 [ %71, %77 ], [ %146, %144 ]
  %82 = phi %"struct.std::__1::__hash_node_base.47"* [ %38, %77 ], [ %145, %144 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.47"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %144, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.47"* %98, null
  br i1 %99, label %107, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.47"* %101 to %"struct.std::__1::__hash_value_type.519"*
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %80, i64 3
  %104 = bitcast %"struct.std::__1::__hash_node_base.47"* %103 to i32*
  %105 = getelementptr inbounds %"struct.std::__1::__hash_value_type.519", %"struct.std::__1::__hash_value_type.519"* %102, i64 0, i32 0, i32 0, i32 2, i32 0
  %106 = bitcast %"struct.std::__1::__hash_node_base.47"* %101 to i64*
  br label %108

107:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.47"* %82, %"struct.std::__1::__hash_node_base.47"** %97, align 8
  br label %144

108:                                              ; preds = %100, %126
  %109 = phi %"struct.std::__1::__hash_node_base.47"* [ %111, %126 ], [ %80, %100 ]
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %109, i64 0, i32 0
  %111 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %110, align 8
  %112 = icmp eq %"struct.std::__1::__hash_node_base.47"* %111, null
  br i1 %112, label %131, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %111, i64 2
  %115 = bitcast %"struct.std::__1::__hash_node_base.47"* %114 to %"struct.std::__1::__hash_value_type.519"*
  %116 = bitcast %"struct.std::__1::__hash_node_base.47"* %114 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = load i64, i64* %106, align 8
  %119 = icmp eq i64 %117, %118
  br i1 %119, label %120, label %131

120:                                              ; preds = %113
  %121 = load i32, i32* %104, align 4
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %111, i64 3
  %123 = bitcast %"struct.std::__1::__hash_node_base.47"* %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %121, %124
  br i1 %125, label %126, label %131

126:                                              ; preds = %120
  %127 = load i32, i32* %105, align 4
  %128 = getelementptr inbounds %"struct.std::__1::__hash_value_type.519", %"struct.std::__1::__hash_value_type.519"* %115, i64 0, i32 0, i32 0, i32 2, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %127, %129
  br i1 %130, label %108, label %131

131:                                              ; preds = %113, %120, %108, %126
  %132 = ptrtoint %"struct.std::__1::__hash_node_base.47"* %111 to i64
  %133 = bitcast %"struct.std::__1::__hash_node_base.47"* %109 to i64*
  %134 = bitcast %"struct.std::__1::__hash_node_base.47"* %82 to i64*
  store i64 %132, i64* %134, align 8
  %135 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %11, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %135, i64 %93
  %137 = bitcast %"struct.std::__1::__hash_node_base.47"** %136 to i64**
  %138 = load i64*, i64** %137, align 8
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %133, align 8
  %140 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %11, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %140, i64 %93
  %142 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %141, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %142, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.47"* %80, %"struct.std::__1::__hash_node_base.47"** %143, align 8
  br label %144

144:                                              ; preds = %92, %131, %107
  %145 = phi %"struct.std::__1::__hash_node_base.47"* [ %80, %107 ], [ %82, %131 ], [ %80, %92 ]
  %146 = phi i64 [ %93, %107 ], [ %81, %131 ], [ %81, %92 ]
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.47", %"struct.std::__1::__hash_node_base.47"* %145, i64 0, i32 0
  %148 = load %"struct.std::__1::__hash_node_base.47"*, %"struct.std::__1::__hash_node_base.47"** %147, align 8
  %149 = icmp eq %"struct.std::__1::__hash_node_base.47"* %148, null
  br i1 %149, label %158, label %79

150:                                              ; preds = %2
  %151 = getelementptr inbounds %"class.std::__1::__hash_table.43", %"class.std::__1::__hash_table.43"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.47"**, %"struct.std::__1::__hash_node_base.47"*** %151, align 8
  store %"struct.std::__1::__hash_node_base.47"** null, %"struct.std::__1::__hash_node_base.47"*** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.47"** %152, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %150
  %155 = bitcast %"struct.std::__1::__hash_node_base.47"** %152 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %150, %154
  %157 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.49", %"class.std::__1::__bucket_list_deallocator.49"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %157, align 8
  br label %158

158:                                              ; preds = %144, %70, %35, %156
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISB_PvEEEE(%"class.std::__1::unique_ptr.536"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.4"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.536"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.536", %"class.std::__1::unique_ptr.536"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.7"** %98 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %30, %"class.std::__1::__compressed_pair.4"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.536", %"class.std::__1::unique_ptr.536"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readnone }
attributes #16 = { noreturn nounwind }
attributes #17 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN8perfetto15trace_processor11ArgsTracker9AddArgsToENS0_6tables9FlowTable9DefinedIdE: argument 0"}
!7 = distinct !{!7, !"_ZN8perfetto15trace_processor11ArgsTracker9AddArgsToENS0_6tables9FlowTable9DefinedIdE"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_ZN8perfetto15trace_processor11ArgsTracker9AddArgsToINS0_6tables9FlowTableEEENS1_13BoundInserterEPT_NS6_2IdE: argument 0"}
!10 = distinct !{!10, !"_ZN8perfetto15trace_processor11ArgsTracker9AddArgsToINS0_6tables9FlowTableEEENS1_13BoundInserterEPT_NS6_2IdE"}
!11 = !{!12, !9, !6}
!12 = distinct !{!12, !13, !"_ZNK8perfetto15trace_processor8IdColumnINS0_6tables9FlowTable9DefinedIdEE7IndexOfES4_: argument 0"}
!13 = distinct !{!13, !"_ZNK8perfetto15trace_processor8IdColumnINS0_6tables9FlowTable9DefinedIdEE7IndexOfES4_"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = distinct !{!16, !15}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !15}
!19 = distinct !{!19, !15}
!20 = distinct !{!20, !15}
!21 = distinct !{!21, !15}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !28}
!28 = !{!"llvm.loop.isvectorized", i32 1}
!29 = distinct !{!29, !15}
!30 = distinct !{!30, !28}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !28}
!37 = distinct !{!37, !15}
!38 = distinct !{!38, !15}
!39 = distinct !{!39, !28}
!40 = distinct !{!40, !15}
!41 = distinct !{!41, !15}
!42 = distinct !{!42, !15}
!43 = distinct !{!43, !15}
!44 = distinct !{!44, !15}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN8perfetto4base13make_optionalIjEENS0_8OptionalINSt3__15decayIT_E4typeEEEOS5_: argument 0"}
!47 = distinct !{!47, !"_ZN8perfetto4base13make_optionalIjEENS0_8OptionalINSt3__15decayIT_E4typeEEEOS5_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN8perfetto4base13make_optionalIjEENS0_8OptionalINSt3__15decayIT_E4typeEEEOS5_: argument 0"}
!50 = distinct !{!50, !"_ZN8perfetto4base13make_optionalIjEENS0_8OptionalINSt3__15decayIT_E4typeEEEOS5_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKmEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor6tables10SliceTable9DefinedIdEEENS_22__unordered_map_hasherImS7_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKmEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_"}
!54 = distinct !{!54, !15}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS6_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS8_ISY_EEEEEEmOT_DpOT0_: argument 0"}
!57 = distinct !{!57, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS_6vectorImNS_9allocatorImEEEEEENS_22__unordered_map_hasherIS6_SB_NS_4hashIS6_EENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_SB_SG_SE_Lb1EEENS8_ISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS6_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS8_ISY_EEEEEEmOT_DpOT0_"}
!58 = distinct !{!58, !15}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor11FlowTracker8V1FlowIdEEENS_22__unordered_map_hasherImS6_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKmEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!61 = distinct !{!61, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImN8perfetto15trace_processor11FlowTracker8V1FlowIdEEENS_22__unordered_map_hasherImS6_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKmEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!62 = distinct !{!62, !15}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSE_IST_EEEEEEmOT_DpOT0_: argument 0"}
!65 = distinct !{!65, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN8perfetto15trace_processor11FlowTracker8V1FlowIdEmEENS_22__unordered_map_hasherIS5_S6_NS4_14V1FlowIdHasherENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SA_S8_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSE_IST_EEEEEEmOT_DpOT0_"}
!66 = distinct !{!66, !15}
